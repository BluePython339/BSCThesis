sub_401000
push ebp
mov ebp esp
sub esp 0x3ac
mov [ ebp - 0x194 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call Ordinal_nNOTES_15
mov [ ebp - 0x194 ] ax
mov edx [ ebp - 0x194 ]
and edx 0xffff
test edx edx
je r-xdata
mov [ rw-data ] rw-data
lea eax [ ebp - 0x3ac ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4014b7
mov [ ebp - 0x194 ] ax
mov eax [ ebp - 0x194 ]
and eax 0xffff
test eax eax
jne r-xdata
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x194 ]
and ecx 0xffff
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
push edx
lea eax [ ebp - 0x80 ]
push eax
call sub_4034b0
add esp 0x8
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
push rw-data
lea ecx [ ebp - 0x80 ]
push ecx
call Ordinal_nNOTES_2005
mov [ ebp - 0x194 ] ax
mov edx [ ebp - 0x194 ]
and edx 0xffff
test edx edx
je r-xdata
call Ordinal_nNOTES_13
xor eax eax
jmp r-xdata
push 0x5
push rw-data
lea edx [ ebp - 0x29c ]
push edx
call sub_4035a0
add esp 0xc
mov [ ebp - 0x29a ] 0x2f
mov [ ebp - 0x297 ] 0x2f
push 0x4
push rw-data
lea eax [ ebp - 0x296 ]
push eax
call sub_4035a0
add esp 0xc
mov [ ebp - 0x292 ] 0x20
movsx ecx [ rw-data ]
sub ecx 0x30
imul ecx ecx 0xa
movsx edx [ rw-data ]
lea eax [ ecx + edx - 0x30 ]
mov [ ebp - 0x198 ] eax
cmp [ ebp - 0x198 ] 0xc
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov cx [ ebp - 0x194 ]
push ecx
call sub_402a4d
add esp 0x4
call Ordinal_nNOTES_13
mov eax 0x1
jmp r-xdata
push rw-data
lea ecx [ ebp - 0x291 ]
push ecx
call sub_4034b0
add esp 0x8
push rw-data
lea edx [ ebp - 0x29c ]
push edx
call sub_4034c0
add esp 0x8
mov eax [ ebp - 0x198 ]
sub eax 0xc
cdq
mov ecx 0xa
idiv ecx
add eax 0x30
mov [ ebp - 0x291 ] al
mov eax [ ebp - 0x198 ]
sub eax 0xc
cdq
mov ecx 0xa
idiv ecx
add edx 0x30
mov [ ebp - 0x290 ] dl
push rw-data
lea edx [ ebp - 0x28f ]
push edx
call sub_4034b0
add esp 0x8
push rw-data
lea eax [ ebp - 0x29c ]
push eax
call sub_4034c0
add esp 0x8
jmp r-xdata
lea edx [ ebp - 0x8c ]
push edx
push 0x100
lea eax [ ebp - 0x3a0 ]
push eax
lea ecx [ ebp - 0x88 ]
push ecx
push 0x0
push 0x0
call Ordinal_nNOTES_224
mov edx [ ebp - 0x8c ]
and edx 0xffff
mov [ ebp + edx - 0x3a0 ] 0x0
lea eax [ ebp - 0x3a0 ]
push eax
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
push 0x0
push 0x0
push sub_401784
lea ecx [ ebp - 0x88 ]
push ecx
push 0x1
push 0x0
push 0x0
mov edx [ ebp - 0x3ac ]
push edx
mov eax [ rw-data ]
push eax
call Ordinal_nNOTES_2195
mov [ ebp - 0x194 ] ax
mov ecx [ ebp - 0x194 ]
and ecx 0xffff
test ecx ecx
je r-xdata
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
mov cx [ ebp - 0x194 ]
push ecx
call sub_402a4d
add esp 0x4
call Ordinal_nNOTES_13
mov eax 0x1
jmp r-xdata
lea eax [ ebp - 0x29c ]
mov [ rw-data ] eax
lea ecx [ ebp - 0x88 ]
push ecx
lea edx [ ebp - 0x29c ]
push edx
call sub_403430
add esp 0x4
push eax
push rw-data
push 0x0
push 0x0
call Ordinal_nNOTES_223
mov [ ebp - 0x194 ] ax
mov eax [ ebp - 0x194 ]
and eax 0xffff
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
call Ordinal_nNOTES_2001
cmp [ rw-data ] 0x0
jne r-xdata
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
mov dx [ ebp - 0x194 ]
push edx
call sub_402a4d
add esp 0x4
call Ordinal_nNOTES_13
mov eax 0x1
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x194 ]
and ecx 0xffff
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
push eax
call sub_403140
add esp 0x4
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
mov ecx [ rw-data ]
push ecx
call sub_403220
add esp 0x4
mov edx rw-data
cmp edx [ rw-data ]
je r-xdata
call Ordinal_nNOTES_13
xor eax eax
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
sub_4014b7
push ebp
mov ebp esp
sub esp 0x104
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
push rw-data
lea ecx [ ebp - 0x104 ]
push ecx
call sub_4034b0
add esp 0x8
cmp [ ebp + 0x8 ] 0x5
je r-xdata
cmp [ ebp + 0x8 ] 0x5
je r-xdata
cmp [ ebp + 0x8 ] 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
call sub_401620
mov ax 0x3300
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
movsx ecx [ eax + 0x4 ]
cmp ecx 0x2d
jne r-xdata
mov [ rw-data ] 0x1
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x104 ]
push edx
call sub_401637
mov esp ebp
pop ebp
retn 0xc
call sub_401620
mov ax 0x3300
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
movsx ecx [ eax + 0x7 ]
cmp ecx 0x2d
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
push eax
call sub_403430
add esp 0x4
cmp eax 0x2
jne r-xdata
push rw-data
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
push edx
call sub_403990
add esp 0x8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
push eax
push rw-data
call sub_4034b0
add esp 0x8
push rw-data
push rw-data
call sub_4034c0
add esp 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0xc ]
push edx
push rw-data
call sub_4034c0
add esp 0x8
push rw-data
push rw-data
call sub_4034c0
add esp 0x8
push rw-data
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push ecx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov ax 0x3300
jmp r-xdata
sub_401637
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push eax
call sub_403430
add esp 0x4
mov [ ebp - 0x20 ] ax
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov dx [ ebp - 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
call Ordinal_nNOTES_2040
mov [ ebp - 0x4 ] ax
mov ecx [ ebp - 0x4 ]
and ecx 0xffff
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xffff
cmp ecx 0x501
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ edx ] eax
xor ax ax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov edx [ ebp - 0x8 ]
and edx 0xffff
push edx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov eax [ ebp - 0x1c ]
and eax 0xffff
push eax
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov ecx [ ebp - 0x18 ]
and ecx 0xffff
push ecx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov edx [ ebp - 0x10 ]
and edx 0xffff
push edx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov eax [ ebp - 0x14 ]
and eax 0xffff
mov ecx [ ebp - 0x10 ]
and ecx 0xffff
add ecx [ ebp + 0x8 ]
mov [ ecx + eax ] 0x30
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
add eax edx
push eax
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
mov ax [ ebp - 0x4 ]
sub_401784
push ebp
mov ebp esp
sub esp 0x5d0
mov [ ebp - 0x3c8 ] 0x0
push 0x36
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x148 ]
push ecx
call sub_403d20
add esp 0xc
mov edx [ ebp - 0x116 ]
and edx 0xff
and edx 0x1
test edx edx
jne r-xdata
lea eax [ ebp - 0x3cc ]
push eax
push 0x44
lea ecx [ ebp - 0x3b8 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
mov eax [ rw-data ]
push eax
call sub_4020eb
mov [ ebp - 0x110 ] ax
mov ecx [ ebp - 0x110 ]
and ecx 0xffff
test ecx ecx
je r-xdata
xor ax ax
jmp r-xdata
push rw-data
mov edx [ rw-data ]
push edx
mov eax [ ebp - 0x138 ]
push eax
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_5799
mov [ ebp - 0x110 ] ax
mov edx [ ebp - 0x110 ]
and edx 0xffff
test edx edx
je r-xdata
mov ax [ ebp - 0x110 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
push 0x1
call [ Sleep@IAT ]
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x3b8 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x10
lea edx [ ebp - 0x4 ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call Ordinal_nNOTES_2145
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x3b8 ]
push eax
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov ax [ ebp - 0x110 ]
jmp r-xdata
mov eax [ rw-data ]
add eax 0x1
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
lea edx [ ebp - 0x3c4 ]
push edx
push 0x5
mov eax [ rw-data ]
push eax
call Ordinal_nNOTES_3825
lea ecx [ ebp - 0x8 ]
push ecx
push 0x100
lea edx [ ebp - 0x364 ]
push edx
lea eax [ ebp - 0x3c4 ]
push eax
push 0x0
push 0x0
call Ordinal_nNOTES_224
mov ecx [ ebp - 0x8 ]
and ecx 0xffff
mov [ ebp + ecx - 0x364 ] 0x0
mov edx [ ebp - 0x8 ]
and edx 0xffff
test edx edx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
push edx
push 0x100
lea eax [ ebp - 0x364 ]
push eax
push 0x1
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_3823
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov [ ebp + edx - 0x364 ] 0x0
lea eax [ ebp - 0x364 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
lea edx [ ebp - 0x8 ]
push edx
push 0x100
lea eax [ ebp - 0x364 ]
push eax
push 0x2
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_3823
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov [ ebp + edx - 0x364 ] 0x0
lea eax [ ebp - 0x364 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
lea edx [ ebp - 0x8 ]
push edx
push 0x100
lea eax [ ebp - 0x364 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_3823
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov [ ebp + edx - 0x364 ] 0x0
lea eax [ ebp - 0x364 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
lea edx [ ebp - 0x8 ]
push edx
push 0x100
lea eax [ ebp - 0x364 ]
push eax
push 0x3
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_3823
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov [ ebp + edx - 0x364 ] 0x0
mov eax [ rw-data ]
push eax
call Ordinal_nNOTES_3828
mov [ ebp - 0x3bc ] eax
cmp [ ebp - 0x3bc ] 0x0
je r-xdata
lea eax [ ebp - 0x364 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x364 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
lea ecx [ ebp - 0x364 ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
push edx
push 0x101
lea eax [ ebp - 0x364 ]
push eax
push 0x7
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_3823
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov [ ebp + edx - 0x364 ] 0x0
lea eax [ ebp - 0x364 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
lea edx [ ebp - 0x8 ]
push edx
push 0x101
lea eax [ ebp - 0x364 ]
push eax
push 0x8
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_3823
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov [ ebp + edx - 0x364 ] 0x0
lea eax [ ebp - 0x364 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
cmp [ ebp - 0x3bc ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call Ordinal_nNOTES_2008
mov [ ebp - 0x110 ] ax
mov ecx [ ebp - 0x110 ]
and ecx 0xffff
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
push 0x0
push sub_40223e
mov edx [ rw-data ]
push edx
call Ordinal_nNOTES_2007
lea edx [ ebp - 0x5d0 ]
push edx
push rw-data
push rw-data
call sub_402aa9
mov [ ebp - 0x3c8 ] ax
mov eax [ ebp - 0x3c8 ]
and eax 0xffff
test eax eax
je r-xdata
mov ax [ ebp - 0x110 ]
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
lea edx [ ebp - 0x370 ]
push edx
lea eax [ ebp - 0x5d0 ]
push eax
push 0x1
push 0x50
push rw-data
push 0x0
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_3845
mov [ ebp - 0x3c8 ] ax
mov edx [ ebp - 0x3c8 ]
and edx 0xffff
test edx edx
je r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
jmp r-xdata
push rw-data
lea edx [ ebp - 0x5d0 ]
push edx
call sub_403990
add esp 0x8
mov [ ebp - 0x25c ] eax
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
lea ecx [ ebp - 0x5d0 ]
push ecx
call sub_40eee0
add esp 0x4
jmp r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
lea ecx [ ebp - 0x5d0 ]
push ecx
call sub_40eee0
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x25c ]
push ecx
call sub_403140
add esp 0x4
lea edx [ ebp - 0x5d0 ]
push edx
call sub_40eee0
add esp 0x4
push rw-data
call sub_403ba0
add esp 0x4
test eax eax
je r-xdata
lea edx [ ebp - 0x364 ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
jmp r-xdata
mov [ ebp - 0x36c ] 0x0
jmp r-xdata
push rw-data
call sub_403ae0
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp - 0x25c ]
push eax
push 0x50
lea ecx [ ebp - 0x364 ]
push ecx
call sub_403bf0
add esp 0xc
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x10c ]
push edx
lea eax [ ebp - 0x254 ]
push eax
mov cx [ ebp - 0x36c ]
push ecx
mov edx [ rw-data ]
push edx
call Ordinal_nNOTES_3819
test eax eax
je r-xdata
push rw-data
call sub_403ae0
add esp 0x4
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
mov ecx [ ebp - 0x36c ]
and ecx 0xffff
add ecx 0x1
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x10
push 0x5c
lea eax [ ebp - 0x10c ]
push eax
call sub_403ab0
add esp 0x8
mov [ ebp - 0x258 ] eax
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
mov eax [ ebp - 0x258 ]
add eax 0x1
push eax
lea ecx [ ebp - 0x24c ]
push ecx
call sub_4034b0
add esp 0x8
push 0x2f
lea ecx [ ebp - 0x10c ]
push ecx
call sub_403ab0
add esp 0x8
mov [ ebp - 0x258 ] eax
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
mov [ ebp - 0x260 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x36c ]
and eax 0xffff
add eax 0x1
push eax
push rw-data
lea ecx [ ebp - 0x24c ]
push ecx
call sub_4039b0
add esp 0xc
lea edx [ ebp - 0x24c ]
push edx
call sub_403430
add esp 0x4
mov [ ebp - 0x368 ] eax
jmp r-xdata
mov ecx [ ebp - 0x258 ]
add ecx 0x1
push ecx
lea edx [ ebp - 0x24c ]
push edx
call sub_4034b0
add esp 0x8
lea edx [ ebp - 0x10c ]
push edx
lea eax [ ebp - 0x24c ]
push eax
call sub_4034b0
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x260 ]
cmp ecx [ ebp - 0x368 ]
jge r-xdata
lea eax [ ebp - 0x24c ]
push eax
mov ecx [ rw-data ]
push ecx
push rw-data
lea edx [ ebp - 0x4cc ]
push edx
call sub_4039b0
add esp 0x10
lea eax [ ebp - 0x4cc ]
push eax
sub esp 0x8
mov ecx esp
mov edx [ ebp - 0x254 ]
mov [ ecx ] edx
mov ax [ ebp - 0x250 ]
mov [ ecx + 0x4 ] ax
mov ecx [ rw-data ]
push ecx
call Ordinal_nNOTES_3817
mov [ ebp - 0x3c8 ] ax
mov edx [ ebp - 0x3c8 ]
and edx 0xffff
test edx edx
je r-xdata
lea edx [ ebp - 0x24c ]
push edx
call sub_403430
add esp 0x4
mov [ ebp - 0x368 ] eax
cmp [ ebp - 0x368 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x260 ]
movsx eax [ ebp + edx - 0x24c ]
cmp eax 0x2a
je r-xdata
lea eax [ ebp - 0x4cc ]
push eax
mov ecx [ ebp - 0x36c ]
and ecx 0xffff
add ecx 0x1
push ecx
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x14
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
lea eax [ ebp - 0x4cc ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
lea edx [ ebp - 0x4cc ]
push edx
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x260 ]
mov [ ebp + edx - 0x24c ] 0x2d
mov ecx [ ebp - 0x260 ]
movsx edx [ ebp + ecx - 0x24c ]
cmp edx 0x3f
je r-xdata
mov cx [ ebp - 0x36c ]
add cx 0x1
mov [ ebp - 0x36c ] cx
jmp r-xdata
mov eax [ ebp - 0x260 ]
add eax 0x1
mov [ ebp - 0x260 ] eax
mov eax [ ebp - 0x260 ]
movsx ecx [ ebp + eax - 0x24c ]
cmp ecx 0x22
je r-xdata
mov edx [ ebp - 0x260 ]
movsx eax [ ebp + edx - 0x24c ]
cmp eax 0x3c
je r-xdata
mov ecx [ ebp - 0x260 ]
movsx edx [ ebp + ecx - 0x24c ]
cmp edx 0x3e
je r-xdata
mov eax [ ebp - 0x260 ]
movsx ecx [ ebp + eax - 0x24c ]
cmp ecx 0x7c
jne r-xdata
jmp r-xdata
sub_4020eb
push ebp
mov ebp esp
sub esp 0x30
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call Ordinal_nNOTES_2085
mov [ ebp - 0x20 ] ax
mov edx [ ebp - 0x20 ]
and edx 0xffff
test edx edx
je r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
mov ax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
and eax 0xffff
cmp eax 0xd
jge r-xdata
mov esp ebp
pop ebp
retn 0x14
mov edx [ ebp - 0x24 ]
and edx 0xffff
cmp edx 0xd
jne r-xdata
mov ecx [ ebp - 0x30 ]
and ecx 0xffff
mov edx [ ebp - 0x24 ]
and edx 0xffff
imul edx edx 0xa
xor eax eax
mov ax [ edx + rw-data ]
and ecx eax
test ecx ecx
je r-xdata
xor ax ax
mov eax [ ebp + 0x14 ]
and eax 0xffff
push eax
push rw-data
mov ecx [ ebp + 0x10 ]
push ecx
call sub_4035a0
add esp 0xc
mov edx [ rw-data ]
add edx 0x1
mov [ rw-data ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
and ecx 0xffff
push ecx
mov edx [ ebp - 0x24 ]
and edx 0xffff
imul edx edx 0xa
mov eax [ edx + rw-data ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_4035a0
add esp 0xc
mov edx [ ebp - 0x24 ]
and edx 0xffff
imul edx edx 0xa
mov eax [ edx + rw-data ]
add eax 0x1
mov ecx [ ebp - 0x24 ]
and ecx 0xffff
imul ecx ecx 0xa
mov [ ecx + rw-data ] eax
mov edx [ ebp - 0x24 ]
and edx 0xffff
imul edx edx 0xa
mov eax [ ebp + 0x18 ]
mov ecx [ edx + rw-data ]
mov [ eax ] ecx
jmp r-xdata
mov dx [ ebp - 0x24 ]
add dx 0x1
mov [ ebp - 0x24 ] dx
sub_40223e
push ebp
mov ebp esp
sub esp 0x29c
push rw-data
lea eax [ ebp - 0x298 ]
push eax
call sub_4034b0
add esp 0x8
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x14 ]
and edx 0xffff
cmp [ ebp - 0x118 ] edx
jae r-xdata
mov eax [ ebp - 0x118 ]
mov [ ebp + eax - 0x298 ] 0x0
push rw-data
lea ecx [ ebp - 0x298 ]
push ecx
call sub_404280
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x118 ]
mov ecx [ ebp - 0x118 ]
mov dl [ eax ]
mov [ ebp + ecx - 0x298 ] dl
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] edx
mov ax [ ebp + 0x1c ]
mov [ ebp - 0x108 ] ax
push 0x2
mov ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x138 ]
push edx
call sub_403d20
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
mov cx [ ebp - 0x108 ]
sub cx 0x2
mov [ ebp - 0x108 ] cx
mov edx [ ebp - 0x138 ]
and edx 0xffff
push edx
mov eax [ rw-data ]
push eax
call sub_402a23
mov [ ebp - 0x128 ] eax
mov ecx [ ebp - 0x138 ]
and ecx 0xffff
and ecx 0xff00
push ecx
mov edx [ rw-data ]
push edx
call sub_402a23
mov [ ebp - 0x124 ] eax
lea eax [ ebp - 0x10c ]
push eax
mov cx [ ebp + 0xc ]
push ecx
call sub_402b90
push rw-data
lea edx [ ebp - 0x298 ]
push edx
call sub_404280
add esp 0x8
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
mov eax [ ebp - 0x138 ]
and eax 0xffff
mov [ ebp - 0x29c ] eax
cmp [ ebp - 0x29c ] 0x9
je r-xdata
mov eax [ rw-data ]
add eax 0x1
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x12c ] ecx
mov dx [ ebp - 0x108 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov cx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
call sub_402c42
push rw-data
call sub_403ba0
add esp 0x4
test eax eax
je r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
cmp [ ebp - 0x29c ] 0xa
je r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x10
push 0x5c
push rw-data
call sub_403ab0
add esp 0x8
mov [ ebp - 0x110 ] eax
cmp [ ebp - 0x110 ] 0x0
jne r-xdata
push rw-data
call sub_403ae0
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp - 0x108 ]
and eax 0xffff
cmp [ ebp - 0x118 ] eax
jae r-xdata
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
cmp [ ebp - 0x29c ] 0xb
je r-xdata
mov eax [ ebp - 0x110 ]
add eax 0x1
push eax
lea ecx [ ebp - 0x104 ]
push ecx
call sub_4034b0
add esp 0x8
push 0x2f
push rw-data
call sub_403ab0
add esp 0x8
mov [ ebp - 0x110 ] eax
cmp [ ebp - 0x110 ] 0x0
jne r-xdata
push rw-data
call sub_403ae0
add esp 0x4
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x118 ]
xor edx edx
mov ecx 0x28
div ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x118 ]
xor edx edx
mov dl [ ecx ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
mov eax [ ebp - 0x118 ]
add eax 0x1
xor edx edx
mov ecx 0x28
div ecx
test edx edx
jne r-xdata
mov edx [ ebp - 0x108 ]
and edx 0xffff
cmp [ ebp - 0x118 ] edx
jae r-xdata
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
push rw-data
lea ecx [ ebp - 0x104 ]
push ecx
call sub_4039b0
add esp 0xc
lea edx [ ebp - 0x104 ]
push edx
call sub_403430
add esp 0x4
mov [ ebp - 0x120 ] eax
jmp r-xdata
mov ecx [ ebp - 0x110 ]
add ecx 0x1
push ecx
lea edx [ ebp - 0x104 ]
push edx
call sub_4034b0
add esp 0x8
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call sub_4034b0
add esp 0x8
jmp r-xdata
xor ax ax
jmp r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
jmp r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
mov eax [ ebp - 0x118 ]
xor edx edx
mov ecx 0x28
div ecx
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x118 ]
xor ecx ecx
mov cl [ eax ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0xc
mov eax [ ebp - 0x118 ]
add eax 0x1
xor edx edx
mov ecx 0x28
div ecx
test edx edx
jne r-xdata
mov edx [ ebp - 0x108 ]
and edx 0xffff
cmp [ ebp - 0x118 ] edx
jae r-xdata
mov ecx [ ebp - 0x118 ]
cmp ecx [ ebp - 0x120 ]
jae r-xdata
lea eax [ ebp - 0x104 ]
push eax
mov ecx [ rw-data ]
push ecx
push rw-data
lea edx [ ebp - 0x244 ]
push edx
call sub_4039b0
add esp 0x10
push rw-data
lea eax [ ebp - 0x244 ]
push eax
call sub_403990
add esp 0x8
mov [ ebp - 0x13c ] eax
cmp [ ebp - 0x13c ] 0x0
je r-xdata
lea edx [ ebp - 0x104 ]
push edx
call sub_403430
add esp 0x4
mov [ ebp - 0x120 ] eax
cmp [ ebp - 0x120 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x118 ]
add edx 0x1
mov [ ebp - 0x118 ] edx
jmp r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
jmp r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
mov eax [ ebp - 0x118 ]
xor edx edx
mov ecx 0x28
div ecx
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x118 ]
xor ecx ecx
mov cl [ eax ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0xc
mov eax [ ebp - 0x118 ]
add eax 0x1
xor edx edx
mov ecx 0x28
div ecx
test edx edx
jne r-xdata
mov edx [ ebp - 0x118 ]
movsx eax [ ebp + edx - 0x104 ]
cmp eax 0x2a
je r-xdata
push rw-data
lea eax [ ebp - 0x244 ]
push eax
call sub_403990
add esp 0x8
mov [ ebp - 0x13c ] eax
cmp [ ebp - 0x13c ] 0x0
jne r-xdata
push 0x2e
push rw-data
call sub_403ab0
add esp 0x8
mov [ ebp - 0x110 ] eax
mov ecx [ ebp - 0x110 ]
push ecx
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
push eax
push rw-data
lea ecx [ ebp - 0x244 ]
push ecx
call sub_4039b0
add esp 0x14
mov edx [ ebp - 0x13c ]
push edx
call sub_403140
add esp 0x4
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
jmp r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
mov edx [ ebp - 0x118 ]
mov [ ebp + edx - 0x104 ] 0x2d
mov ecx [ ebp - 0x118 ]
movsx edx [ ebp + ecx - 0x104 ]
cmp edx 0x3f
je r-xdata
push 0x1
lea ecx [ ebp - 0x134 ]
push ecx
push 0x1b
lea edx [ ebp - 0x12c ]
push edx
call Ordinal_nNOTES_435
lea eax [ ebp - 0x114 ]
push eax
push 0xffffffff
push 0x0
mov ecx [ ebp - 0x132 ]
push ecx
mov edx [ rw-data ]
push edx
call Ordinal_nNOTES_2033
mov [ ebp - 0x140 ] ax
mov eax [ ebp - 0x140 ]
and eax 0xffff
test eax eax
je r-xdata
lea ecx [ ebp - 0x244 ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0xc
lea eax [ ebp - 0x244 ]
push eax
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x118 ]
add ecx 0x1
mov [ ebp - 0x118 ] ecx
mov eax [ ebp - 0x118 ]
add eax 0x1
mov [ ebp - 0x118 ] eax
mov eax [ ebp - 0x118 ]
movsx ecx [ ebp + eax - 0x104 ]
cmp ecx 0x22
je r-xdata
mov edx [ ebp - 0x114 ]
push edx
call Ordinal_nNOTES_182
mov [ ebp - 0x144 ] eax
mov eax [ ebp - 0x13c ]
push eax
mov ecx [ rw-data ]
push ecx
push 0x1
mov edx [ ebp - 0x144 ]
push edx
call sub_404060
add esp 0x10
mov eax [ ebp - 0x114 ]
push eax
call Ordinal_nNOTES_183
mov ecx [ ebp - 0x114 ]
push ecx
call Ordinal_nNOTES_143
lea edx [ ebp - 0x244 ]
push edx
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x14
mov eax [ rw-data ]
add eax 0x1
mov [ rw-data ] eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
push rw-data
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
mov ax [ ebp - 0x140 ]
jmp r-xdata
mov edx [ ebp - 0x13c ]
push edx
call sub_403140
add esp 0x4
mov edx [ ebp - 0x118 ]
movsx eax [ ebp + edx - 0x104 ]
cmp eax 0x3c
je r-xdata
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebp - 0x118 ]
movsx edx [ ebp + ecx - 0x104 ]
cmp edx 0x3e
je r-xdata
mov eax [ ebp - 0x118 ]
movsx ecx [ ebp + eax - 0x104 ]
cmp ecx 0x7c
jne r-xdata
jmp r-xdata
sub_402a23
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx ]
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
je r-xdata
sub_402a4d
push ebp
mov ebp esp
sub esp 0xd0
mov eax [ ebp + 0x8 ]
and eax 0xffff
and eax 0x3fff
mov [ ebp - 0xcc ] ax
push 0xc8
lea ecx [ ebp - 0xc8 ]
push ecx
mov dx [ ebp - 0xcc ]
push edx
push 0x0
call Ordinal_nNOTES_707
mov [ ebp - 0xd0 ] ax
lea eax [ ebp - 0xc8 ]
push eax
push rw-data
push rw-data
call sub_4036a0
add esp 0xc
mov esp ebp
pop ebp
retn
sub_402aa9
push ebp
mov ebp esp
sub esp 0x120
push 0x100
lea eax [ ebp - 0x100 ]
push eax
call sub_40ef00
add esp 0x8
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x11c ] ecx
mov [ ebp - 0x118 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x118 ]
and eax 0xffff
cmp eax 0x7fff
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov ax 0x104
push 0xa
lea ecx [ ebp - 0x114 ]
push ecx
mov edx [ ebp - 0x118 ]
and edx 0xffff
push edx
call sub_404460
add esp 0xc
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x114 ]
push ecx
mov edx [ ebp - 0x11c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_404310
add esp 0x14
push 0x8000
mov edx [ ebp + 0x10 ]
push edx
call sub_40ca90
add esp 0x8
mov [ ebp - 0x120 ] eax
cmp [ ebp - 0x120 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x120 ]
push eax
call sub_405aa0
add esp 0x4
jmp r-xdata
xor ax ax
jmp r-xdata
mov dx [ ebp - 0x118 ]
add dx 0x1
mov [ ebp - 0x118 ] dx
mov esp ebp
pop ebp
retn 0xc
sub_402b90
push ebp
mov ebp esp
push ecx
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xffff
cmp ecx 0x8
jge r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] rw-data
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
and edx 0xffff
imul edx edx 0x6
xor eax eax
mov ax [ edx + rw-data ]
mov ecx [ ebp + 0x8 ]
and ecx 0xffff
and eax ecx
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx 0xffff
imul edx edx 0x6
mov eax [ edx + rw-data ]
push eax
push rw-data
call sub_4034c0
add esp 0x8
mov ax [ ebp - 0x4 ]
add ax 0x1
mov [ ebp - 0x4 ] ax
sub_402c12
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x50
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x0
push 0x0
call Ordinal_nNOTES_224
mov eax [ ebp - 0x4 ]
and eax 0xffff
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] 0x0
mov esp ebp
pop ebp
retn 0x8
sub_402c42
push ebp
mov ebp esp
sub esp 0x148
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x138 ] ecx
push 0x1
lea edx [ ebp - 0x140 ]
push edx
push 0x1b
lea eax [ ebp - 0x138 ]
push eax
call Ordinal_nNOTES_435
mov cx [ ebp - 0x140 ]
mov [ ebp - 0x4 ] cx
lea edx [ ebp - 0x114 ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call Ordinal_nNOTES_2050
lea ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x134 ]
push edx
lea eax [ ebp - 0x12c ]
push eax
mov cx [ ebp - 0x140 ]
push ecx
mov edx [ ebp - 0x13e ]
push edx
mov eax [ ebp - 0x114 ]
push eax
call Ordinal_nNOTES_2048
mov [ ebp - 0x148 ] ax
mov ecx [ ebp - 0x148 ]
and ecx 0xffff
test ecx ecx
je r-xdata
mov edx [ ebp - 0x12c ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0xc
mov ecx [ ebp - 0x12c ]
mov [ rw-data ] ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
mov eax [ ebp - 0x148 ]
and eax 0xffff
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
jmp r-xdata
push 0x1
lea eax [ ebp - 0x104 ]
push eax
push 0x3a
lea ecx [ ebp + 0x10 ]
push ecx
call Ordinal_nNOTES_435
mov dx [ ebp - 0xfe ]
mov [ ebp - 0xc ] dx
mov eax [ ebp - 0xc ]
and eax 0xffff
add eax 0x1
push eax
call sub_404580
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx 0xffff
test edx edx
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xffff
mov eax [ ebp + 0x10 ]
add eax edx
mov [ ebp + 0x10 ] eax
mov ecx [ ebp - 0xfc ]
and ecx 0xffff
and ecx 0xf00
mov [ ebp - 0x64 ] cx
mov edx [ ebp - 0x64 ]
and edx 0xffff
push edx
push rw-data
call sub_402a23
mov [ ebp - 0xe0 ] eax
mov eax [ ebp - 0xe0 ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
mov edx [ ebp - 0xfa ]
and edx 0xffff
and edx 0xf
mov [ ebp - 0x110 ] dx
mov eax [ ebp - 0x110 ]
and eax 0xffff
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xffff
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_403d20
add esp 0xc
mov ecx [ ebp - 0xc ]
and ecx 0xffff
mov edx [ ebp - 0x8 ]
mov [ edx + ecx ] 0x0
mov eax [ ebp - 0x8 ]
push eax
push rw-data
call sub_4034b0
add esp 0x8
mov ecx [ ebp - 0x8 ]
push ecx
call sub_4049b0
add esp 0x4
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x110 ]
and edx 0xffff
cmp edx 0x1
jne r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
jmp r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
jmp r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
mov eax [ ebp - 0xf6 ]
and eax 0xffff
and eax 0x1
test eax eax
je r-xdata
mov edx [ ebp - 0xf6 ]
and edx 0xffff
and edx 0x2
test edx edx
je r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
mov ecx [ ebp - 0xf6 ]
and ecx 0xffff
and ecx 0x38
test ecx ecx
jne r-xdata
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
mov eax [ ebp - 0xf6 ]
and eax 0xffff
and eax 0x38
cmp eax 0x8
jne r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
mov edx [ ebp - 0xf6 ]
and edx 0xffff
and edx 0x38
cmp edx 0x10
jne r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
mov ecx [ ebp - 0xf6 ]
and ecx 0xffff
and ecx 0x38
cmp ecx 0x18
jne r-xdata
push rw-data
mov eax [ rw-data ]
push eax
call sub_4036a0
add esp 0x8
mov eax [ ebp - 0xf6 ]
and eax 0xffff
and eax 0x38
cmp eax 0x20
jne r-xdata
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0x8
mov eax [ ebp - 0xf4 ]
mov [ rw-data ] eax
lea ecx [ ebp - 0xdc ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
call sub_402c12
lea eax [ ebp - 0xdc ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0xc
lea edx [ ebp - 0x60 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
call sub_402c12
lea ecx [ ebp - 0x60 ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_4036a0
add esp 0xc
mov eax [ ebp - 0x64 ]
and eax 0xffff
cmp eax 0x200
jne r-xdata
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_4036a0
add esp 0x8
mov eax [ ebp - 0x64 ]
and eax 0xffff
cmp eax 0x400
jne r-xdata
push 0x1
lea ecx [ ebp - 0x88 ]
push ecx
push 0xc0
lea edx [ ebp + 0x10 ]
push edx
call Ordinal_nNOTES_435
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x124 ]
push ecx
push 0xc1
lea edx [ ebp + 0x10 ]
push edx
call Ordinal_nNOTES_435
sub_403140
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x40
test edx edx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x0
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x77
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x83
test eax eax
je r-xdata
int3
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push ecx
call sub_403280
add esp 0x4
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
push edx
call sub_405b90
add esp 0x4
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_405aa0
add esp 0x4
test eax eax
jge r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
call sub_4049d0
add esp 0x8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x1c ] 0x0
sub_403220
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_403280
add esp 0x4
test eax eax
je r-xdata
push 0x0
call sub_403350
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x4000
test edx edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_4062e0
add esp 0x4
neg eax
sbb eax eax
jmp r-xdata
sub_403280
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x3
cmp edx 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x108
test ecx ecx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx ]
sub ecx [ eax + 0x8 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
push eax
call sub_406390
add esp 0xc
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
or ecx 0x20
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x80
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0xfffffffd
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
sub_403350
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ rw-data ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
cmp [ eax + edx * 4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax + 0xc ]
and ecx 0x83
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
push ecx
call sub_403220
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx + 0xc ]
and eax 0x2
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
push eax
call sub_403220
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x8 ] 0xffffffff
sub_403430
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4034b0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4034c0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4035a0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_4036a0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x38
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x39
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406640
add esp 0x4
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406860
add esp 0xc
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_4067a0
add esp 0x8
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
int3
sub_403750
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x14
jge r-xdata
mov [ rw-data ] 0x200
jmp r-xdata
push 0x83
push r--data
push 0x2
push 0x4
mov eax [ rw-data ]
push eax
call sub_404950
add esp 0x14
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x14
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ rw-data ] 0x14
push 0x86
push r--data
push 0x2
push 0x4
mov ecx [ rw-data ]
push ecx
call sub_404950
add esp 0x14
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x14
jge r-xdata
push 0x1a
call sub_405a40
add esp 0x4
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x5
add eax rw-data
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jge r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x5
mov edx [ ebp - 0x4 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
cmp [ eax + edx * 8 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x5
mov [ ecx + rw-data ] 0xffffffff
mov ecx [ ebp - 0x4 ]
sar ecx 0x5
mov edx [ ebp - 0x4 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
cmp [ eax + edx * 8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4038a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x35
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x36
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x37
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
movsx eax [ edx ]
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x38
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
call sub_408070
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
int3
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407ce0
add esp 0x10
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4039b0
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x2c ] ecx
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x5d
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x5e
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xc ] 0x42
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] 0x7fffffff
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x24 ]
push eax
call sub_406860
add esp 0xc
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
int3
mov edx [ ebp - 0x24 ]
push edx
push 0x0
call sub_408160
add esp 0x8
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov [ eax ] 0x0
xor ecx ecx
and ecx 0xff
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403ab0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_403ae0
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ ebp + 0x8 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4083e0
add esp 0x4
or eax 0xffffffff
lea ecx [ ebp - 0x108 ]
push ecx
push 0x105
call [ GetCurrentDirectoryA@IAT ]
test eax eax
je r-xdata
movsx edx [ ebp - 0x108 ]
cmp edx 0x5c
je r-xdata
movsx ecx [ ebp - 0x108 ]
movsx edx [ ebp - 0x107 ]
cmp ecx edx
jne r-xdata
movsx eax [ ebp - 0x108 ]
cmp eax 0x2f
jne r-xdata
mov [ ebp - 0x10c ] 0x3d
mov eax [ ebp - 0x108 ]
and eax 0xff
push eax
call sub_408470
add esp 0x4
mov [ ebp - 0x10b ] al
mov [ ebp - 0x10a ] 0x3a
mov [ ebp - 0x109 ] 0x0
lea ecx [ ebp - 0x108 ]
push ecx
lea edx [ ebp - 0x10c ]
push edx
call [ SetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_403ba0
push ebp
mov ebp esp
push ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ CreateDirectoryA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4083e0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
sub_403bf0
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x3b
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x3c
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
int3
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call sub_408550
add esp 0x4
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
movsx eax [ edx ]
and eax 0xff
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0xc ]
mov [ ecx ] dl
movsx eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
cmp eax 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x1
mov [ ebp + 0xc ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
sub_403d20
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_403d80 ]
jmp [ ecx * 4 + jump_table_403dfc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_403e68 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_403e68 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_404000 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_403f08 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404000 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_403e68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_403e68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_403e68 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_404000 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404000 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404000 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_404000 ]
sub_404060
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
imul ecx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0xc ]
and ecx 0x10c
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] 0x1000
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
and edx 0x108
test edx edx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_408160
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0xc ]
and eax 0x108
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x4 ]
jae r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x14 ]
cmp [ ecx + 0x18 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
call sub_403280
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x18 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0xc ]
xor edx edx
div [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
sub eax edx
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
push ecx
call sub_403d20
add esp 0xc
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x18 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
sub ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp + 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x10 ]
push eax
call sub_406390
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp + 0x14 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_404280
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_404310
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3a
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_408730
add esp 0x8
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x2f
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp + 0x8 ]
movsx eax [ edx ]
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x2e
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x5c
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2e
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5c
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
mov esp ebp
pop ebp
retn
sub_404460
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4044b0
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4044b0
add esp 0x10
jmp r-xdata
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_4044b0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x2d
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
neg eax
mov [ ebp + 0x8 ] eax
mov edx [ ebp - 0xc ]
add edx 0x30
mov eax [ ebp - 0x4 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x57
mov eax [ ebp - 0x4 ]
mov [ eax ] dl
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp [ ebp - 0xc ] 0x9
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ ebp - 0x10 ] dl
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp - 0x8 ]
mov cl [ ebp - 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jb r-xdata
mov esp ebp
pop ebp
retn
sub_404580
push ebp
mov ebp esp
push ecx
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4045e0
add esp 0x14
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4045b0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ rw-data ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4045e0
add esp 0x14
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4045e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4088b0
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404630
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_404630
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0xc ] 0x0
mov eax [ rw-data ]
and eax 0x4
test eax eax
je r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ rw-data ]
jne r-xdata
call sub_404e50
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x0
push 0x1
call [ rw-data ]
add esp 0x1c
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x14c
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0xffff
cmp ecx 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
int3
cmp [ ebp + 0x8 ] 0xffffffe0
ja r-xdata
mov edx [ rw-data ]
and edx 0x1
test edx edx
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x1c
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x24
cmp eax 0xffffffe0
jbe r-xdata
mov [ ebp - 0xc ] 0x1
xor eax eax
test eax eax
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
int3
mov eax [ ebp + 0xc ]
and eax 0xffff
cmp eax 0x4
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x24
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_408940
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
add edx 0x1
mov [ rw-data ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0xffff
cmp ecx 0x2
je r-xdata
mov edx [ rw-data ]
add edx [ ebp + 0x8 ]
mov [ rw-data ] edx
mov eax [ rw-data ]
add eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
cmp ecx [ rw-data ]
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0xfedcbabc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x3
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
jmp r-xdata
cmp [ ebp + 0xc ] 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov [ rw-data ] edx
push 0x4
xor edx edx
mov dl [ rw-data ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x1c
push eax
call sub_4088e0
add esp 0xc
push 0x4
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx + 0x20 ]
push ecx
call sub_4088e0
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
xor eax eax
mov al [ rw-data ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
call sub_4088e0
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax 0x20
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ rw-data ] edx
mov eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x18 ] eax
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
sub_404950
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4045b0
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov [ edx ] 0x0
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x4 ]
jae r-xdata
sub_4049d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
and eax 0x4
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_404e50
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x3
call [ rw-data ]
add esp 0x1c
test eax eax
jne r-xdata
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x402
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_405230
add esp 0x4
test eax eax
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x414
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov ecx [ ebp + 0x8 ]
sub ecx 0x20
mov [ ebp - 0x4 ] ecx
int3
jmp r-xdata
xor edx edx
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x4
je r-xdata
mov eax [ rw-data ]
and eax 0x4
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x3
jne r-xdata
push 0x4
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x1c
push edx
call sub_404dc0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x3
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0xfedcbabc
jne r-xdata
push 0x4
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x20 ]
push edx
call sub_404dc0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
mov edx [ ecx * 4 + rw-data ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
push r--data
push 0x0
push 0x41a
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push r--data
push 0x0
push 0x42f
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
mov edx [ ecx * 4 + rw-data ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
int3
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x43c
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov [ ebp + 0xc ] 0x2
xor ecx ecx
test ecx ecx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
int3
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
sub eax [ edx + 0x10 ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
and ecx 0x2
test ecx ecx
jne r-xdata
int3
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax 0x24
push eax
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4088e0
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
call sub_408a20
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x20
push edx
call sub_4088e0
add esp 0xc
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x44b
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
int3
mov ecx [ rw-data ]
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ecx ] eax
jmp r-xdata
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x455
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax 0x24
push eax
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4088e0
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
call sub_408a20
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ rw-data ] ecx
int3
sub_404dc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp + 0xc ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
cmp eax ecx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0xff
push eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx - 0x1 ]
push edx
mov eax [ ebp + 0x8 ]
sub eax 0x1
push eax
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp + 0x10 ] ecx
test eax eax
je r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov [ ebp - 0x4 ] 0x0
sub_404e50
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
and eax 0x1
test eax eax
jne r-xdata
call sub_408af0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x6
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x18 ] 0x3
ja r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
cmp ecx 0x4
je r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x18 ]
jmp [ eax * 4 + jump_table_405196 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
mov edx [ ecx * 4 + rw-data ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x14 ] 0x1
je r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
push 0x4
mov al [ rw-data ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1c
push ecx
call sub_404dc0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
cmp ecx 0x2
je r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
int3
push 0x4
mov cl [ rw-data ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + eax + 0x20 ]
push edx
call sub_404dc0
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x20
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x18 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x14 ] 0x3
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov [ ebp - 0x14 ] r--data
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov dl [ rw-data ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x20
push eax
call sub_404dc0
add esp 0xc
test eax eax
jne r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x20
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x20
push eax
mov ecx [ ebp - 0x14 ]
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
int3
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
sub_4051b0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
sub_4051e0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ IsBadWritePtr@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405230
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x1
push 0x20
mov eax [ ebp + 0x8 ]
sub eax 0x20
push eax
call sub_4051e0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x20
push ecx
call sub_408bf0
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x20
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapValidate@IAT ]
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
sub eax 0x20
push eax
call sub_40a4b0
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ rw-data ]
and ecx 0x8000
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
sub edx 0x20
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_408c50
add esp 0x8
jmp r-xdata
mov eax [ rw-data ]
and eax 0x8000
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
xor edx edx
mov dl [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp + 0x8 ]
sub edx 0x20
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapValidate@IAT ]
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x20
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapValidate@IAT ]
jmp r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
sub_405360
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x5
jge r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x2c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ eax + 0x30 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
test eax eax
jl r-xdata
mov edx [ ebp - 0x8 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x5
jge r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x4 ]
add eax 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x18 ]
mov eax [ ebp - 0x8 ]
add edx [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x14 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x18 ] edx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
sub_4054c0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] 0x0
xor eax eax
test eax eax
jne r-xdata
int3
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x3
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
and ecx 0xffff
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
and eax 0xffff
cmp eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov ecx [ rw-data ]
and ecx 0x10
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x18 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_4051e0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x1c
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
push eax
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x4
jne r-xdata
xor eax eax
test eax eax
jne r-xdata
int3
xor ecx ecx
test ecx ecx
jne r-xdata
int3
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
sar eax 0x10
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
and edx 0xffff
cmp edx 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x1c
cmp eax 0x1
jne r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
sar eax 0x10
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x20
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x20
cmp eax 0x1
jne r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov eax [ ebp - 0x4 ]
push eax
call sub_405770
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_405770
add esp 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
add edx 0x20
push edx
call [ rw-data ]
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_405770
add esp 0x4
jmp r-xdata
sub_405770
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov [ ebp - 0x4c ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x10
jge r-xdata
mov [ ebp - 0x54 ] 0x10
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
mov edx [ ebp - 0x4c ]
mov [ ebp + edx - 0x48 ] 0x0
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4c ]
mov al [ edx + 0x20 ]
mov [ ebp - 0x50 ] al
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ ebp - 0x4c ]
cmp ecx [ ebp - 0x54 ]
jge r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov edx [ ebp - 0x50 ]
and edx 0xff
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x157
mov [ ebp - 0x58 ] ecx
push 0x157
mov ecx [ ebp - 0x50 ]
and ecx 0xff
push ecx
call sub_40b180
add esp 0x8
mov [ ebp - 0x58 ] eax
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x1c
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x5c ] 0x20
mov edx [ ebp - 0x50 ]
and edx 0xff
mov [ ebp - 0x5c ] edx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov eax [ ebp - 0x4c ]
add eax 0x1
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x4c ]
mov cl [ ebp - 0x5c ]
mov [ ebp + eax - 0x48 ] cl
mov edx [ ebp - 0x50 ]
and edx 0xff
push edx
push r--data
mov eax [ ebp - 0x4c ]
imul eax eax 0x3
lea ecx [ ebp + eax - 0x34 ]
push ecx
call sub_4039b0
add esp 0xc
jmp r-xdata
sub_405890
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
lea eax [ ebp - 0x34 ]
push eax
call sub_405360
add esp 0x4
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push r--data
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
call sub_405c40
add esp 0x18
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
xor edx edx
test edx edx
jne r-xdata
int3
mov ecx [ rw-data ]
and ecx 0x10
test ecx ecx
je r-xdata
push 0x0
call sub_4054c0
add esp 0x4
mov eax 0x1
jmp r-xdata
xor eax eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
shr eax 0x8
and eax 0xff
mov [ rw-data ] eax
mov ecx [ rw-data ]
and ecx 0xff
mov [ rw-data ] ecx
mov edx [ rw-data ]
shl edx 0x8
add edx [ rw-data ]
mov [ rw-data ] edx
mov eax [ rw-data ]
shr eax 0x10
and eax 0xffff
mov [ rw-data ] eax
push 0x0
call sub_40b0f0
add esp 0x4
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_407790
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40bab0
mov [ rw-data ] eax
call sub_40b5a0
call sub_40b450
call sub_407b50
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
push ecx
call sub_401000
add esp 0xc
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x1c ]
push edx
call sub_407b90
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_40b240
add esp 0x8
retn
push 0x1c
call sub_405a70
sub_405a40
push ebp
mov ebp esp
cmp [ rw-data ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40bef0
add esp 0x4
push 0xff
call [ rw-data ]
add esp 0x4
pop ebp
retn
call sub_40bea0
sub_405aa0
push ebp
mov ebp esp
push ecx
push esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_40c360
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c290
add esp 0x4
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + eax * 8 + 0x4 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
call sub_40c360
add esp 0x4
mov esi eax
push 0x2
call sub_40c360
add esp 0x4
cmp esi eax
je r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
push edx
call sub_4083e0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c360
add esp 0x4
push eax
call [ CloseHandle@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
sub_405b90
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x30
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x83
test edx edx
je r-xdata
int3
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x8
test ecx ecx
je r-xdata
push 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
call sub_4049d0
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0xfffffbf7
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
sub_405c40
push ebp
mov ebp esp
mov eax 0x302c
call sub_40c5c0
push edi
mov [ ebp - 0x3008 ] 0x0
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0x3007 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x2008 ] 0x0
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0x2007 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x1000 ] 0x0
mov ecx 0x3ff
xor eax eax
lea edi [ ebp - 0xfff ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x1004 ] eax
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x8 ] 0x3
jl r-xdata
pop edi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push rw-data
call [ InterlockedIncrement@IAT ]
test eax eax
jle r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
push 0xfed
lea edx [ ebp - 0x1000 ]
push edx
call sub_40c4c0
add esp 0x10
test eax eax
jge r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x1000 ]
push eax
lea ecx [ ebp - 0x3008 ]
push ecx
call sub_4034c0
add esp 0x8
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push r--data
lea eax [ ebp - 0x1000 ]
push eax
call sub_4034b0
add esp 0x8
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
push r--data
lea ecx [ ebp - 0x2008 ]
push ecx
call [ rw-data ]
add esp 0x10
lea edx [ ebp - 0x2008 ]
push edx
call [ OutputDebugStringA@IAT ]
push rw-data
call [ InterlockedDecrement@IAT ]
call sub_405c30
or eax 0xffffffff
jmp r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x300c ] eax
cmp [ ebp - 0x300c ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx * 4 + rw-data ]
and eax 0x1
test eax eax
je r-xdata
mov [ ebp - 0x3028 ] r--data
mov [ ebp - 0x3028 ] r--data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
push r--data
mov ecx [ ebp - 0x300c ]
push ecx
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x3008 ]
push edx
lea eax [ ebp - 0x2008 ]
push eax
call sub_4034b0
add esp 0x8
lea eax [ ebp - 0x3008 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
push r--data
push 0x1000
lea eax [ ebp - 0x2008 ]
push eax
call sub_40c3c0
add esp 0x18
test eax eax
jge r-xdata
push r--data
lea edx [ ebp - 0x3008 ]
push edx
call sub_4034c0
add esp 0x8
push r--data
lea ecx [ ebp - 0x3008 ]
push ecx
call sub_4034c0
add esp 0x8
mov ecx [ ebp - 0x3028 ]
push ecx
lea edx [ ebp - 0x3008 ]
push edx
call sub_4034b0
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx * 4 + rw-data ]
and edx 0x1
test edx edx
je r-xdata
lea ecx [ ebp - 0x1008 ]
push ecx
lea edx [ ebp - 0x2008 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
push r--data
lea ecx [ ebp - 0x2008 ]
push ecx
call sub_4034b0
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax * 4 + rw-data ]
and ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax * 4 + rw-data ] 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax * 4 + rw-data ]
and ecx 0x4
test ecx ecx
je r-xdata
lea edx [ ebp - 0x2008 ]
push edx
call [ OutputDebugStringA@IAT ]
push 0x0
lea ecx [ ebp - 0x3010 ]
push ecx
lea edx [ ebp - 0x2008 ]
push edx
call sub_403430
add esp 0x4
push eax
lea eax [ ebp - 0x2008 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx * 4 + rw-data ]
push edx
call [ WriteFile@IAT ]
mov eax [ ebp - 0x1008 ]
jmp r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push rw-data
call [ InterlockedDecrement@IAT ]
mov [ ebp - 0x302c ] 0x0
push 0xa
lea edx [ ebp - 0x3024 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_404460
add esp 0xc
mov [ ebp - 0x302c ] eax
jmp r-xdata
mov eax [ ebp - 0x1008 ]
jmp r-xdata
push rw-data
call [ InterlockedDecrement@IAT ]
lea ecx [ ebp - 0x1000 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x302c ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_405fd0
add esp 0x14
mov [ ebp - 0x1008 ] eax
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
sub_405fd0
push ebp
mov ebp esp
mov eax 0x1138
call sub_40c5c0
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x1da
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push 0x104
lea ecx [ ebp - 0x108 ]
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
call sub_405c30
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_403430
add esp 0x4
cmp eax 0x40
jbe r-xdata
push r--data
lea edx [ ebp - 0x108 ]
push edx
call sub_4034b0
add esp 0x8
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x1110 ] ecx
cmp [ ebp - 0x1110 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_403430
add esp 0x4
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax - 0x40 ]
mov [ ebp - 0x4 ] edx
push 0x3
push r--data
mov eax [ ebp - 0x4 ]
push eax
call sub_4035a0
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov edx [ ebp - 0x1110 ]
push edx
call sub_403430
add esp 0x4
cmp eax 0x40
jbe r-xdata
mov [ ebp - 0x1114 ] r--data
mov [ ebp - 0x1114 ] r--data
jmp r-xdata
mov eax [ ebp - 0x1110 ]
push eax
call sub_403430
add esp 0x4
mov ecx [ ebp - 0x1110 ]
lea edx [ ecx + eax - 0x40 ]
mov [ ebp - 0x1110 ] edx
push 0x3
push r--data
mov eax [ ebp - 0x1110 ]
push eax
call sub_4035a0
add esp 0xc
mov [ ebp - 0x1118 ] r--data
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1118 ] eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov [ ebp - 0x111c ] r--data
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
mov ecx [ ebp + 0x18 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov [ ebp - 0x1120 ] r--data
mov [ ebp - 0x1120 ] r--data
jmp r-xdata
mov [ ebp - 0x111c ] r--data
jmp r-xdata
mov [ ebp - 0x1124 ] r--data
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x1124 ] edx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
mov [ ebp - 0x1128 ] r--data
mov [ ebp - 0x1128 ] r--data
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x112c ] r--data
mov eax [ ebp + 0xc ]
mov [ ebp - 0x112c ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1130 ] r--data
mov [ ebp - 0x1130 ] r--data
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1134 ] r--data
mov ecx [ ebp - 0x1110 ]
mov [ ebp - 0x1134 ] ecx
jmp r-xdata
cmp [ ebp - 0x1110 ] 0x0
je r-xdata
mov [ ebp - 0x1138 ] r--data
mov [ ebp - 0x1138 ] r--data
jmp r-xdata
cmp [ ebp - 0x1110 ] 0x0
je r-xdata
push 0x12012
push r--data
lea edx [ ebp - 0x110c ]
push edx
call sub_40c810
add esp 0xc
mov [ ebp - 0x10c ] eax
cmp [ ebp - 0x10c ] 0x3
jne r-xdata
push r--data
lea ecx [ ebp - 0x110c ]
push ecx
call sub_4034b0
add esp 0x8
mov edx [ ebp - 0x1114 ]
push edx
mov eax [ ebp - 0x1118 ]
push eax
mov ecx [ ebp - 0x111c ]
push ecx
mov edx [ ebp - 0x1120 ]
push edx
mov eax [ ebp - 0x1124 ]
push eax
mov ecx [ ebp - 0x1128 ]
push ecx
mov edx [ ebp - 0x112c ]
push edx
mov eax [ ebp - 0x1130 ]
push eax
mov ecx [ ebp - 0x1134 ]
push ecx
mov edx [ ebp - 0x1138 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx * 4 + rw-data ]
push edx
push r--data
push 0x1000
lea eax [ ebp - 0x110c ]
push eax
call sub_40c3c0
add esp 0x3c
test eax eax
jge r-xdata
cmp [ ebp - 0x10c ] 0x4
jne r-xdata
push 0x16
call sub_40c5f0
add esp 0x4
push 0x3
call sub_407bb0
xor eax eax
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4062e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x1
test edx edx
je r-xdata
mov [ rw-data ] 0x9
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
call sub_40c360
add esp 0x4
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
sub_406390
push ebp
mov ebp esp
sub esp 0x420
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x420 ] edx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x80
test edx edx
je r-xdata
push 0x2
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c8d0
add esp 0xc
push 0x0
lea eax [ ebp - 0x418 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov eax [ edx + ecx * 8 ]
push eax
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x418 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x414 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x420 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push 0x0
lea ecx [ ebp - 0x418 ]
push ecx
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x414 ]
sub edx eax
push edx
lea ecx [ ebp - 0x414 ]
push ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov edx [ ecx + eax * 8 ]
push edx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp + 0xc ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x40
test ecx ecx
je r-xdata
cmp [ ebp - 0xc ] 0x5
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp [ ebp - 0x418 ] ecx
jge r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ ebp - 0x41c ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
movsx eax [ ebp - 0x41c ]
cmp eax 0xa
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
movsx eax [ edx ]
cmp eax 0x1a
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_4083e0
add esp 0x4
mov [ rw-data ] 0x9
mov edx [ ebp - 0xc ]
mov [ rw-data ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x41c ]
mov [ ecx ] dl
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x420 ]
add ecx 0x1
mov [ ebp - 0x420 ] ecx
mov edx [ ebp - 0x8 ]
mov [ edx ] 0xd
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
xor eax eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x414 ]
sub eax ecx
cmp eax 0x400
jge r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
sub_406640
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x41
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
call sub_40c9c0
add esp 0x4
test eax eax
jne r-xdata
int3
cmp [ ebp - 0x4 ] rw-data
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] rw-data
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x10c
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx * 4 + rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax * 4 + rw-data ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x1000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x1000
push 0x5e
push r--data
push 0x2
push 0x1000
call sub_4045b0
add esp 0x10
mov edx [ ebp - 0x8 ]
mov [ edx * 4 + rw-data ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax * 4 + rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x14
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x2
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
or edx 0x1102
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov eax 0x1
sub_4067a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push r--data
push 0x0
push 0xa1
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x1000
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x1000
test eax eax
je r-xdata
int3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call sub_403280
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_403280
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and ah 0xee
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0x0
sub_406860
push ebp
mov ebp esp
sub esp 0x2ac
push ebx
push esi
push edi
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x230 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x230 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x230 ] 0x0
jl r-xdata
movsx ecx [ ebp - 0x2c ]
cmp ecx 0x20
jl r-xdata
mov [ ebp - 0x294 ] 0x0
movsx edx [ ebp - 0x2c ]
cmp edx 0x78
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x298 ]
jmp [ ecx * 4 + jump_table_40751b ]
movsx eax [ ebp - 0x2c ]
movsx ecx [ eax + r--data ]
and ecx 0xf
mov [ ebp - 0x294 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov cl [ eax ]
mov [ ebp - 0x2c ] cl
movsx edx [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
test edx edx
je r-xdata
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x2c ]
and edx 0xff
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x8000
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x240 ] ecx
mov edx [ ebp - 0x240 ]
mov [ ebp - 0x248 ] edx
mov eax [ ebp - 0x248 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x238 ] 0xffffffff
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
movsx ecx [ ebp - 0x2c ]
mov [ ebp - 0x29c ] ecx
mov edx [ ebp - 0x29c ]
sub edx 0x20
mov [ ebp - 0x29c ] edx
cmp [ ebp - 0x29c ] 0x10
ja r-xdata
movsx ecx [ ebp - 0x2c ]
cmp ecx 0x2a
jne r-xdata
mov [ ebp - 0x238 ] 0x0
jmp r-xdata
movsx edx [ ebp - 0x2c ]
cmp edx 0x2a
jne r-xdata
movsx ecx [ ebp - 0x2c ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x2a0 ]
sub edx 0x49
mov [ ebp - 0x2a0 ] edx
cmp [ ebp - 0x2a0 ] 0x2e
ja r-xdata
movsx edx [ ebp - 0x2c ]
mov [ ebp - 0x2a4 ] edx
mov eax [ ebp - 0x2a4 ]
sub eax 0x43
mov [ ebp - 0x2a4 ] eax
cmp [ ebp - 0x2a4 ] 0x35
ja r-xdata
mov edx [ ebp - 0x294 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
movsx edx [ ecx + eax * 8 + r--data ]
sar edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x298 ] eax
cmp [ ebp - 0x298 ] 0x7
ja r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
movsx eax [ ebp - 0x2c ]
push eax
call sub_407620
add esp 0xc
jmp r-xdata
lea edx [ ebp - 0x230 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
movsx ecx [ ebp - 0x2c ]
push ecx
call sub_407620
add esp 0xc
mov edx [ ebp + 0xc ]
mov al [ edx ]
mov [ ebp - 0x2c ] al
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x29c ]
xor eax eax
mov al [ ecx + lookup_table_407553 ]
jmp [ eax * 4 + jump_table_40753b ]
mov edx [ ebp - 0x248 ]
imul edx edx 0xa
movsx eax [ ebp - 0x2c ]
lea ecx [ edx + eax - 0x30 ]
mov [ ebp - 0x248 ] ecx
lea edx [ ebp + 0x10 ]
push edx
call sub_407730
add esp 0x4
mov [ ebp - 0x248 ] eax
cmp [ ebp - 0x248 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x238 ]
imul ecx ecx 0xa
movsx edx [ ebp - 0x2c ]
lea eax [ ecx + edx - 0x30 ]
mov [ ebp - 0x238 ] eax
lea eax [ ebp + 0x10 ]
push eax
call sub_407730
add esp 0x4
mov [ ebp - 0x238 ] eax
cmp [ ebp - 0x238 ] 0x0
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2a0 ]
xor eax eax
mov al [ ecx + lookup_table_407578 ]
jmp [ eax * 4 + jump_table_407564 ]
cmp [ ebp - 0x240 ] 0x0
jne r-xdata
mov edx [ ebp - 0x2a4 ]
xor ecx ecx
mov cl [ edx + lookup_table_4075e3 ]
jmp [ ecx * 4 + jump_table_4075a7 ]
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x18e
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
or edx 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
or al 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x2
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
or dl 0x80
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
or al 0x8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
or al 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x248 ]
neg ecx
mov [ ebp - 0x248 ] ecx
jmp r-xdata
mov [ ebp - 0x238 ] 0xffffffff
mov edx [ ebp - 0x4 ]
or edx 0x10
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
cmp ecx 0x36
jne r-xdata
mov eax [ ebp - 0x4 ]
or al 0x20
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
or ch 0x8
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x40
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x830
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x810
test edx edx
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_407730
add esp 0x4
mov [ ebp - 0x250 ] eax
cmp [ ebp - 0x250 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x830
test ecx ecx
jne r-xdata
cmp [ ebp - 0x238 ] 0xffffffff
jne r-xdata
lea edx [ ebp + 0x10 ]
push edx
call sub_407730
add esp 0x4
mov [ ebp - 0x260 ] eax
mov eax [ ebp - 0x4 ]
and eax 0x20
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov dl [ ebp - 0x2c ]
add dl 0x20
mov [ ebp - 0x2c ] dl
mov eax [ ebp - 0x4 ]
or al 0x40
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x22c ]
mov [ ebp - 0x24 ] ecx
cmp [ ebp - 0x238 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
or al 0x40
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x23c ] 0xa
jmp r-xdata
mov [ ebp - 0x23c ] 0xa
jmp r-xdata
mov [ ebp - 0x238 ] 0x8
mov [ ebp - 0x234 ] 0x7
jmp r-xdata
mov [ ebp - 0x234 ] 0x27
mov [ ebp - 0x23c ] 0x8
mov eax [ ebp - 0x4 ]
and eax 0x80
test eax eax
je r-xdata
movsx edx [ ebp - 0x2c ]
test edx edx
jne r-xdata
int3
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
movsx eax [ edx + 0x1 ]
cmp eax 0x34
jne r-xdata
push 0x2
mov ecx [ ebp - 0xc ]
push ecx
call sub_4049d0
add esp 0x8
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x248 ]
sub edx [ ebp - 0x28 ]
sub edx [ ebp - 0x14 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x4 ]
and eax 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x100
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
or ch 0x8
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x10 ]
push eax
call sub_407730
add esp 0x4
mov [ ebp - 0x24c ] ax
mov cl [ ebp - 0x24c ]
mov [ ebp - 0x22c ] cl
mov [ ebp - 0x28 ] 0x1
lea eax [ ebp + 0x10 ]
push eax
call sub_407770
add esp 0x4
mov [ ebp - 0x18 ] ax
mov cx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x22c ]
push edx
call sub_40c9f0
add esp 0x8
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jge r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
call sub_403430
add esp 0x4
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx [ ebp - 0x250 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
or dh 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x238 ]
mov [ ebp - 0x2a8 ] eax
mov [ ebp - 0x2a8 ] 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x260 ]
mov ecx [ ebp - 0x230 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x260 ]
mov dx [ ebp - 0x230 ]
mov [ ecx ] dx
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
jne r-xdata
mov [ ebp - 0x238 ] 0x6
jmp r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x8000
test edx edx
je r-xdata
mov [ ebp - 0x23c ] 0x10
mov ecx [ ebp - 0x4 ]
and ecx 0x80
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x244 ] 0x30
mov edx [ ebp - 0x234 ]
add edx 0x51
mov [ ebp - 0x243 ] dl
mov [ ebp - 0x14 ] 0x2
mov ecx [ ebp - 0x4 ]
or ch 0x2
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x2
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x4 ]
or dh 0x80
mov [ ebp - 0x4 ] edx
jmp r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x244 ]
push ecx
call sub_4076e0
add esp 0x10
mov edx [ ebp - 0x4 ]
and edx 0x8
test edx edx
je r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x280 ]
push eax
push 0x20
call sub_4076a0
add esp 0x10
mov eax [ ebp - 0x4 ]
and eax 0x1
test eax eax
je r-xdata
mov [ ebp - 0x244 ] 0x2d
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x240 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x800
test ecx ecx
je r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x2a8 ]
mov [ ebp - 0x25c ] ecx
lea edx [ ebp + 0x10 ]
push edx
call sub_407730
add esp 0x4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
and eax 0x810
test eax eax
je r-xdata
mov [ ebp - 0x240 ] 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x200
jle r-xdata
movsx edx [ ebp - 0x2c ]
cmp edx 0x67
jne r-xdata
cmp [ ebp - 0x238 ] 0xa3
jle r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x20
test ecx ecx
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_407750
add esp 0x4
mov [ ebp - 0x27c ] eax
mov [ ebp - 0x278 ] edx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov [ ebp - 0x244 ] 0x2b
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
lea edx [ ebp - 0x22c ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x250 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x250 ]
movsx eax [ edx ]
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x250 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x250 ]
movsx edx [ ecx ]
shr edx 0x1
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x254 ] ecx
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x1
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x258 ] edx
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x238 ] 0x200
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x8
mov [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
sub eax 0x8
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x268 ] ecx
mov [ ebp - 0x264 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x238 ]
push ecx
movsx edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x268 ]
push ecx
call [ rw-data ]
add esp 0x14
mov edx [ ebp - 0x4 ]
and edx 0x80
test edx edx
je r-xdata
push 0x2ea
push r--data
push 0x2
mov eax [ ebp - 0x238 ]
add eax 0x15d
push eax
call sub_4045b0
add esp 0x10
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x40
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x40
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x40
test eax eax
je r-xdata
lea edx [ ebp - 0x230 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
call sub_4076e0
add esp 0x10
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x280 ]
push eax
push 0x30
call sub_4076a0
add esp 0x10
mov [ ebp - 0x244 ] 0x20
mov [ ebp - 0x14 ] 0x1
mov ecx [ ebp - 0x254 ]
sub ecx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x254 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x258 ]
sub edx [ ebp - 0x24 ]
sar edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov edx [ ebp - 0x258 ]
xor eax eax
mov ax [ edx ]
test eax eax
je r-xdata
movsx ecx [ ebp - 0x2c ]
cmp ecx 0x67
jne r-xdata
cmp [ ebp - 0x238 ] 0x0
jne r-xdata
mov [ ebp - 0x238 ] 0xa3
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
call sub_407730
add esp 0x4
xor edx edx
mov [ ebp - 0x27c ] eax
mov [ ebp - 0x278 ] edx
lea eax [ ebp + 0x10 ]
push eax
call sub_407730
add esp 0x4
cdq
mov [ ebp - 0x27c ] eax
mov [ ebp - 0x278 ] edx
jmp r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
call sub_407730
add esp 0x4
and eax 0xffff
cdq
mov [ ebp - 0x27c ] eax
mov [ ebp - 0x278 ] edx
lea eax [ ebp + 0x10 ]
push eax
call sub_407730
add esp 0x4
movsx eax ax
cdq
mov [ ebp - 0x27c ] eax
mov [ ebp - 0x278 ] edx
jmp r-xdata
mov ecx [ ebp - 0x27c ]
mov [ ebp - 0x270 ] ecx
mov edx [ ebp - 0x278 ]
mov [ ebp - 0x26c ] edx
cmp [ ebp - 0x278 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x280 ]
push eax
push 0x20
call sub_4076a0
add esp 0x10
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x284 ] ecx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x288 ] edx
mov eax [ ebp - 0x254 ]
add eax 0x1
mov [ ebp - 0x254 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x258 ]
add ecx 0x2
mov [ ebp - 0x258 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
movsx edx [ ecx ]
cmp edx 0x2d
jne r-xdata
mov edx [ ebp - 0x4 ]
and edx 0x80
test edx edx
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
call [ rw-data ]
add esp 0x4
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x270 ]
mov edx [ ebp - 0x26c ]
and edx 0x0
mov [ ebp - 0x270 ] ecx
mov [ ebp - 0x26c ] edx
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x284 ]
mov ax [ edx ]
mov [ ebp - 0x2aa ] ax
mov cx [ ebp - 0x2aa ]
push ecx
lea edx [ ebp - 0x28c ]
push edx
mov eax [ ebp - 0x284 ]
add eax 0x2
mov [ ebp - 0x284 ] eax
call sub_40c9f0
add esp 0x8
mov [ ebp - 0x290 ] eax
cmp [ ebp - 0x290 ] 0x0
jg r-xdata
mov edx [ ebp - 0x25c ]
mov eax [ ebp - 0x25c ]
sub eax 0x1
mov [ ebp - 0x25c ] eax
test edx edx
je r-xdata
mov eax [ ebp - 0x25c ]
mov ecx [ ebp - 0x25c ]
sub ecx 0x1
mov [ ebp - 0x25c ] ecx
test eax eax
je r-xdata
mov edx [ ebp - 0x24 ]
push edx
call sub_403430
add esp 0x4
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
or ah 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
push eax
call [ rw-data ]
add esp 0x4
mov eax [ ebp - 0x4 ]
and al 0xf7
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x238 ] 0x200
jle r-xdata
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x27c ]
neg ecx
mov edx [ ebp - 0x278 ]
adc edx 0x0
neg edx
mov [ ebp - 0x270 ] ecx
mov [ ebp - 0x26c ] edx
mov eax [ ebp - 0x4 ]
or ah 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x27c ] 0x0
jae r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x4
test eax eax
je r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x290 ]
push eax
lea ecx [ ebp - 0x28c ]
push ecx
call sub_4076e0
add esp 0x10
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x270 ]
or ecx [ ebp - 0x26c ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x238 ] 0x200
mov eax [ ebp - 0x4 ]
and eax 0x8000
test eax eax
jne r-xdata
mov eax [ ebp - 0x288 ]
mov ecx [ ebp - 0x288 ]
sub ecx 0x1
mov [ ebp - 0x288 ] ecx
test eax eax
je r-xdata
lea edx [ ebp - 0x2d ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x23c ]
cdq
push edx
push eax
mov eax [ ebp - 0x26c ]
push eax
mov ecx [ ebp - 0x270 ]
push ecx
call sub_408830
add eax 0x30
mov [ ebp - 0x274 ] eax
mov eax [ ebp - 0x23c ]
cdq
push edx
push eax
mov edx [ ebp - 0x26c ]
push edx
mov eax [ ebp - 0x270 ]
push eax
call sub_4087c0
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x26c ] edx
cmp [ ebp - 0x274 ] 0x39
jle r-xdata
mov edx [ ebp - 0x270 ]
or edx [ ebp - 0x26c ]
test edx edx
je r-xdata
mov edx [ ebp - 0x24 ]
mov al [ ebp - 0x274 ]
mov [ edx ] al
mov ecx [ ebp - 0x24 ]
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x274 ]
add ecx [ ebp - 0x234 ]
mov [ ebp - 0x274 ] ecx
lea edx [ ebp - 0x2d ]
sub edx [ ebp - 0x24 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x4 ]
and ecx 0x200
test ecx ecx
je r-xdata
mov eax [ ebp - 0x238 ]
mov ecx [ ebp - 0x238 ]
sub ecx 0x1
mov [ ebp - 0x238 ] ecx
test eax eax
jg r-xdata
mov edx [ ebp - 0x24 ]
movsx eax [ edx ]
cmp eax 0x30
jne r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
mov [ edx ] 0x30
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
sub_4075f2
push cs
add cl [ esi ]
push cs
push cs
push cs
add ecx [ esi ]
add al 0xe
push cs
push cs
push cs
push cs
push cs
push cs
push cs
add eax 0x7070706
push cs
push es
push cs
push cs
push cs
push cs
or [ ecx ] cl
or cl [ esi ]
push cs
or ecx [ esi ]
or al 0xe
push cs
or eax 0xcccccccc
int3
sub_407620
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jl r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_408160
add esp 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
movsx ecx [ ebp + 0x8 ]
and ecx 0xff
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov esp ebp
pop ebp
retn
sub_4076a0
push ebp
mov ebp esp
pop ebp
retn
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407620
add esp 0xc
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0xffffffff
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
test eax eax
jle r-xdata
sub_4076e0
push ebp
mov ebp esp
push ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
call sub_407620
add esp 0xc
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0xffffffff
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
test eax eax
jle r-xdata
sub_407750
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
sub ecx 0x8
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
pop ebp
retn
sub_407790
push ebp
mov ebp esp
sub esp 0x6c
push 0x81
push r--data
push 0x2
push 0x100
call sub_4045b0
add esp 0x10
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x20
jmp r-xdata
push 0x1b
call sub_405a40
add esp 0x4
mov edx [ rw-data ]
add edx 0x100
cmp [ ebp - 0x50 ] edx
jae r-xdata
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
mov ecx [ ebp - 0x16 ]
and ecx 0xffff
test ecx ecx
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x50 ]
mov [ ecx ] 0xffffffff
mov edx [ ebp - 0x50 ]
mov [ edx + 0x5 ] 0xa
jmp r-xdata
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
add ecx 0x8
mov [ ebp - 0x50 ] ecx
cmp [ ebp - 0x58 ] 0x3
jge r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x14 ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x64 ]
mov [ ebp - 0x60 ] edx
cmp [ ebp - 0x64 ] 0x800
jge r-xdata
mov eax [ rw-data ]
push eax
call [ SetHandleCount@IAT ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x58 ]
mov ecx [ rw-data ]
lea edx [ ecx + eax * 8 ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov [ ebp - 0x68 ] 0x800
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov cl [ eax + 0x4 ]
or cl 0x80
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] cl
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x4 ] 0x81
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x64 ]
jge r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x5c ] 0x1
jmp r-xdata
mov edx [ ebp - 0x58 ]
add edx 0x1
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x58 ]
sub edx 0x1
neg edx
sbb edx edx
add edx 0xfffffff5
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x6c ] 0xfffffff6
jmp r-xdata
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
push 0xb6
push r--data
push 0x2
push 0x100
call sub_4045b0
add esp 0x10
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
mov cl [ eax + 0x4 ]
or cl 0x40
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] cl
mov ecx [ ebp - 0x4c ]
push ecx
call [ GetFileType@IAT ]
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov eax [ ebp - 0x6c ]
push eax
call [ GetStdHandle@IAT ]
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x58 ]
cmp edx [ ebp - 0x64 ]
jge r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ rw-data ]
add ecx 0x20
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x64 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x4c ]
mov [ edx ] eax
mov ecx [ ebp - 0x54 ]
and ecx 0xff
cmp ecx 0x2
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ eax * 4 + rw-data ]
add ecx 0x100
cmp [ ebp - 0x50 ] ecx
jae r-xdata
mov edx [ ebp - 0x54 ]
and edx 0xff
cmp edx 0x3
jne r-xdata
mov edx [ ebp - 0x50 ]
mov al [ edx + 0x4 ]
or al 0x40
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x4 ] al
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
and edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0x50 ]
mov [ eax ] 0xffffffff
mov ecx [ ebp - 0x50 ]
mov [ ecx + 0x5 ] 0xa
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov cl [ eax + 0x4 ]
or cl 0x8
mov edx [ ebp - 0x50 ]
mov [ edx + 0x4 ] cl
mov edx [ ebp - 0x58 ]
add edx 0x1
mov [ ebp - 0x58 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x60 ]
add ecx 0x4
mov [ ebp - 0x60 ] ecx
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
and ecx 0x8
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x5c ]
add edx 0x1
mov [ ebp - 0x5c ] edx
mov edx [ ebp - 0x50 ]
add edx 0x8
mov [ ebp - 0x50 ] edx
jmp r-xdata
mov ecx [ ebp - 0x58 ]
sar ecx 0x5
mov edx [ ebp - 0x58 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
lea ecx [ eax + edx * 8 ]
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x60 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx + 0x4 ] cl
mov edx [ ebp - 0x60 ]
mov eax [ edx ]
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_407aa0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ rw-data ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
cmp [ eax + edx * 4 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax + 0xc ]
and ecx 0x83
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x14
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
push ecx
call sub_403140
add esp 0x4
cmp eax 0xffffffff
je r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push edx
call sub_4049d0
add esp 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ rw-data ]
mov [ ecx + eax * 4 ] 0x0
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_407b50
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
push rw-data
call sub_407cb0
add esp 0x8
push rw-data
push rw-data
call sub_407cb0
add esp 0x8
pop ebp
retn
call [ rw-data ]
sub_407bd0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov cl [ ebp + 0x10 ]
mov [ rw-data ] cl
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_407cb0
add esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push 0xffffffff
call sub_4051b0
add esp 0x4
and eax 0x20
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_407cb0
add esp 0x8
mov edx [ rw-data ]
mov [ ebp - 0x4 ] edx
mov [ rw-data ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call [ ExitProcess@IAT ]
jmp r-xdata
mov [ rw-data ] 0x1
call sub_405890
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x4 ]
call [ eax ]
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jb r-xdata
sub_407cb0
push ebp
mov ebp esp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
call [ edx ]
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
sub_407ce0
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x10 ] 0x0
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x47
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x48
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x49
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ ebp - 0x20 ] dl
cmp [ ebp - 0x20 ] 0x61
je r-xdata
int3
mov [ ebp - 0x14 ] 0x109
mov edx [ ebp - 0x1c ]
or edx 0x2
mov [ ebp - 0x1c ] edx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x72
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x1c ]
or al 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x77
je r-xdata
push 0x1a4
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40cad0
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x301
mov ecx [ ebp - 0x1c ]
or ecx 0x2
mov [ ebp - 0x1c ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0xc ] ecx
mov edx [ ebp - 0xc ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0xc ]
mov [ edx + 0x1c ] 0x0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x10 ] ecx
mov eax [ ebp - 0xc ]
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
sub edx 0x2b
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0x24 ] 0x49
ja r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x24 ]
xor eax eax
mov al [ ecx + lookup_table_408025 ]
jmp [ eax * 4 + jump_table_407ffd ]
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0xc ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
and edx 0x2
test edx edx
je r-xdata
mov ecx [ ebp - 0x14 ]
and ecx 0xc000
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xc000
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
and eax 0x1000
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
and edx 0x40
test edx edx
je r-xdata
mov eax [ ebp - 0x14 ]
or al 0x2
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xfffffffe
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x1c ]
or dl 0x80
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
and al 0xfc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
or dh 0x80
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
or ch 0x40
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
mov edx [ ebp - 0x1c ]
or dh 0x40
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
mov eax [ ebp - 0x1c ]
and ah 0xbf
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp - 0x14 ]
or ecx 0x20
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
or edx 0x10
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
or ch 0x10
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
or al 0x40
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_40802f
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] eax
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ edx ] eax
add eax [ ecx + ecx ]
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
add eax 0x9090906
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ edi ] eax
or [ ecx ] ecx
or [ ecx ] ecx
or [ eax ] ecx
int3
sub_408070
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
cmp [ eax + edx * 4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] 0x0
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x1c ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] 0xffffffff
push 0x55
push r--data
push 0x2
push 0x20
call sub_4045b0
add esp 0x10
mov edx [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov [ ecx + edx * 4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
cmp [ eax + edx * 4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx [ eax + 0xc ]
and ecx 0x83
test ecx ecx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_408160
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x69
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x82
test edx edx
je r-xdata
int3
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
or al 0x20
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x40
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
or edx 0x2
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0xffffffef
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
and ecx 0x10c
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
and eax 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0x108
test edx edx
je r-xdata
cmp [ ebp - 0x8 ] rw-data
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
and edx 0xfffffffe
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_406390
add esp 0xc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ eax ]
sub edx [ ecx + 0x8 ]
test edx edx
jge r-xdata
mov edx [ ebp - 0x10 ]
push edx
call sub_40c9c0
add esp 0x4
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
or edx 0x20
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
or eax 0xffffffff
jmp r-xdata
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0xa0
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40cfc0
add esp 0x4
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx ]
sub eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
add edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
int3
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_406390
add esp 0xc
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x14 ] rw-data
mov edx [ ebp - 0x10 ]
sar edx 0x5
mov eax [ ebp - 0x10 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
lea edx [ ecx + eax * 8 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
jmp r-xdata
push 0x2
push 0x0
mov edx [ ebp - 0x10 ]
push edx
call sub_40c8d0
add esp 0xc
mov eax [ ebp - 0x14 ]
movsx ecx [ eax + 0x4 ]
and ecx 0x20
test ecx ecx
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
je r-xdata
sub_4083e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2d
jae r-xdata
cmp [ ebp + 0x8 ] 0x13
jb r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx * 8 + rw-data ]
jne r-xdata
cmp [ ebp + 0x8 ] 0xbc
jb r-xdata
cmp [ ebp + 0x8 ] 0x24
ja r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx * 8 + rw-data ]
mov [ rw-data ] edx
jmp r-xdata
mov [ rw-data ] 0x16
cmp [ ebp + 0x8 ] 0xca
ja r-xdata
mov [ rw-data ] 0xd
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
mov [ rw-data ] 0x8
jmp r-xdata
sub_408470
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0xff
jbe r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov al [ edx + rw-data ]
and eax 0x20
cmp eax 0x20
jne r-xdata
mov eax [ ebp + 0x8 ]
shr eax 0x8
and eax 0xff
mov [ ebp - 0x4 ] al
mov ecx [ ebp + 0x8 ]
and ecx 0xff
mov [ ebp - 0x3 ] cl
mov edx [ ebp - 0x4 ]
and edx 0xff
xor eax eax
mov al [ edx + rw-data ]
and eax 0x4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + rw-data ]
mov [ ebp - 0xc ] edx
jmp r-xdata
push 0x1
mov ecx [ rw-data ]
push ecx
push 0x2
lea edx [ ebp - 0x8 ]
push edx
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x200
mov ecx [ rw-data ]
push ecx
call sub_40d830
add esp 0x20
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x7 ]
and edx 0xff
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x8
mov ecx [ ebp + 0x8 ]
add ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_408550
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x69
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x83
test eax eax
je r-xdata
int3
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x40
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
and ecx 0x2
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
or al 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x10c
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
or al 0x20
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40cfc0
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
or edx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x18 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_40db90
add esp 0xc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x82
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x200
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x10 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
movsx eax [ edx ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
add edx 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
and eax 0x8
test eax eax
je r-xdata
mov [ ebp - 0x8 ] rw-data
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sar eax 0x5
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
and edx 0x1f
mov eax [ eax * 4 + rw-data ]
lea ecx [ eax + edx * 8 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
and edx 0x400
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
or dh 0x20
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x8 ]
movsx eax [ edx + 0x4 ]
and eax 0x82
cmp eax 0x82
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1000
sub_408730
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
xor edx edx
mov dl [ ecx + rw-data ]
and edx 0x4
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
mov eax [ ebp + 0xc ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x4 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0x4 ]
and edx 0x1
sub eax edx
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
xor ecx ecx
mov cl [ eax + rw-data ]
and ecx 0x4
test ecx ecx
je r-xdata
jmp r-xdata
sub_4087c0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_408830
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4088b0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call [ ebp - 0x4 ]
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
sub_4088e0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_408940
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x3
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409290
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0xf
and ecx 0xfffffff0
mov [ ebp + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0x8 ] 0x10
mov edx [ ebp + 0x8 ]
add edx 0xf
and edx 0xfffffff0
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
shr ecx 0x4
push ecx
call sub_40a5b0
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_408a20
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_408bf0
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapFree@IAT ]
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a4b0
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_408cb0
add esp 0x8
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_40a540
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapFree@IAT ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapFree@IAT ]
sub_408af0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0xfffffffe
cmp [ rw-data ] 0x3
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call sub_409ad0
test eax eax
jge r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapValidate@IAT ]
test eax eax
jne r-xdata
call sub_40ac20
test eax eax
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffc
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffc
mov [ ebp - 0x4 ] 0xfffffffc
mov [ rw-data ] 0x78
mov [ rw-data ] 0x28
jmp r-xdata
sub_408b80
push ebp
mov ebp esp
push 0x140
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x10
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebp
retn
sub_408bf0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
imul eax eax 0x14
mov ecx [ rw-data ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
xor eax eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
sub edx [ ecx + 0xc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x100000
jae r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov esp ebp
pop ebp
retn
sub_408c50
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0xf
mov [ ebp - 0x4 ] edx
mov eax 0x80000000
mov ecx [ ebp - 0x4 ]
shr eax cl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
and edx eax
test edx edx
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x8 ]
and eax 0xf
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xfff
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_408cb0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax [ edx + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
shr ecx 0xf
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x204
mov eax [ ebp - 0x3c ]
lea ecx [ eax + edx + 0x144 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
sub edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
sub ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
and edx 0x1
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax - 0x4 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
and edx 0x1
test edx edx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x30 ]
sar ecx 0x4
sub ecx 0x1
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x28 ] 0x3f
jbe r-xdata
mov eax [ ebp - 0x14 ]
sar eax 0x4
sub eax 0x1
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x3f
jbe r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
and edx 0x1
test edx edx
jne r-xdata
mov [ ebp - 0x28 ] 0x3f
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x38 ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ ebp - 0x24 ] 0x3f
mov ecx [ ebp - 0xc ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0xc ]
sar ecx 0x4
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x2c ] 0x3f
jbe r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x38 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x30 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x24 ] 0x20
jae r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x1c ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x1c ]
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x28 ]
je r-xdata
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
sar eax 0x4
sub eax 0x1
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x3f
jbe r-xdata
mov [ ebp - 0x2c ] 0x3f
mov ecx [ ebp - 0x24 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov ecx [ edx + ecx * 4 + 0xc4 ]
and ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x3c ]
mov [ eax + edx * 4 + 0xc4 ] ecx
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x24 ]
mov dl [ ecx + 0x4 ]
sub dl 0x1
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] dl
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x24 ]
movsx edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x24 ]
shr edx cl
not edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov eax [ ecx + eax * 4 + 0x44 ]
and eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov [ edx + ecx * 4 + 0x44 ] eax
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x24 ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x3c ]
add edx [ ebp - 0x24 ]
mov [ edx + 0x4 ] cl
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x24 ]
movsx ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x30 ]
mov [ ecx ] edx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x30 ]
mov [ eax - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
sub eax 0x1
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x20
jae r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp - 0x28 ]
je r-xdata
mov [ ebp - 0x28 ] 0x3f
mov ecx [ ebp - 0x24 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
and edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x24 ]
shr edx cl
not edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x28 ]
movsx edx [ ecx + 0x4 ]
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x28 ]
mov cl [ eax + 0x4 ]
add cl 0x1
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x28 ]
mov [ eax + 0x4 ] cl
test edx edx
jne r-xdata
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x28 ]
movsx edx [ ecx + 0x4 ]
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x28 ]
mov cl [ eax + 0x4 ]
add cl 0x1
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x28 ]
mov [ eax + 0x4 ] cl
test edx edx
jne r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ rw-data ] edx
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
shl eax 0xf
mov ecx [ rw-data ]
mov edx [ ecx + 0xc ]
add edx eax
mov [ ebp - 0x18 ] edx
push 0x4000
push 0x8000
mov eax [ ebp - 0x18 ]
push eax
call [ VirtualFree@IAT ]
mov edx 0x80000000
mov ecx [ rw-data ]
shr edx cl
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
or ecx edx
mov edx [ rw-data ]
mov [ edx + 0x8 ] ecx
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov edx [ rw-data ]
mov [ ecx + edx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov dl [ ecx + 0x43 ]
sub dl 0x1
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x43 ] dl
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
movsx ecx [ eax + 0x43 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x28 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov ecx [ edx + ecx * 4 + 0xc4 ]
or ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x3c ]
mov [ eax + edx * 4 + 0xc4 ] ecx
mov ecx [ ebp - 0x28 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
or ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax 0x80000000
mov ecx [ ebp - 0x28 ]
shr eax cl
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov ecx [ edx + ecx * 4 + 0x44 ]
or ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x3c ]
mov [ eax + edx * 4 + 0x44 ] ecx
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x28 ]
shr edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
or ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp - 0x34 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
cmp [ ebp - 0x2c ] 0x20
jae r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x8 ] 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x4 ]
and al 0xfe
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x2c ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov ecx [ edx + ecx * 4 + 0xc4 ]
and ecx eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x3c ]
mov [ eax + edx * 4 + 0xc4 ] ecx
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x2c ]
mov dl [ ecx + 0x4 ]
sub dl 0x1
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x2c ]
mov [ eax + 0x4 ] dl
mov ecx [ ebp - 0x3c ]
add ecx [ ebp - 0x2c ]
movsx edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x2c ]
shr edx cl
not edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov eax [ ecx + eax * 4 + 0x44 ]
and eax edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x3c ]
mov [ edx + ecx * 4 + 0x44 ] eax
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x2c ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x3c ]
add edx [ ebp - 0x2c ]
mov [ edx + 0x4 ] cl
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x2c ]
movsx ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
push 0x8000
push 0x0
mov eax [ rw-data ]
mov ecx [ eax + 0xc ]
push ecx
call [ VirtualFree@IAT ]
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapFree@IAT ]
mov edx [ rw-data ]
imul edx edx 0x14
mov eax [ rw-data ]
add eax edx
mov ecx [ rw-data ]
add ecx 0x14
sub eax ecx
push eax
mov edx [ rw-data ]
add edx 0x14
push edx
mov eax [ rw-data ]
push eax
call sub_40dff0
add esp 0xc
mov ecx [ rw-data ]
sub ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp + 0x8 ]
cmp edx [ rw-data ]
jbe r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
not eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
and edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x2c ]
shr edx cl
not edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov eax [ ebp + 0x8 ]
sub eax 0x14
mov [ ebp + 0x8 ] eax
sub_409290
push ebp
mov ebp esp
sub esp 0x38
push esi
mov eax [ rw-data ]
imul eax eax 0x14
mov ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x17
and edx 0xfffffff0
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
sar eax 0x4
sub eax 0x1
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x20
jge r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
or eax 0xffffffff
shr eax cl
mov [ ebp - 0x34 ] eax
or edx 0xffffffff
mov ecx [ ebp - 0x20 ]
shr edx cl
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x24 ]
and ecx [ eax ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x34 ]
and eax [ edx + 0x4 ]
or ecx eax
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov [ rw-data ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
mov eax [ edx ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x14
mov [ ebp - 0x18 ] ecx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
and eax [ edx + ecx * 4 + 0x44 ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov esi [ ebp - 0x34 ]
and esi [ edx + ecx * 4 + 0xc4 ]
or eax esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
and eax [ edx ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x34 ]
and edx [ ecx + 0x4 ]
or eax edx
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x30 ]
imul eax eax 0x204
mov ecx [ ebp - 0x38 ]
lea edx [ ecx + eax + 0x144 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
and edx [ ecx + eax * 4 + 0x44 ]
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x14
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov [ ebp - 0x20 ] 0x20
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
and edx [ ecx + eax * 4 + 0xc4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
and edx [ ecx + eax * 4 + 0x44 ]
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov esi [ ebp - 0x34 ]
and esi [ ecx + eax * 4 + 0xc4 ]
or edx esi
test edx edx
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x2c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ rw-data ]
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + edx * 8 + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
sar ecx 0x4
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x3f
jle r-xdata
mov eax [ ebp - 0x1c ]
shl eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
push edx
call sub_4098e0
add esp 0x4
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x10 ]
mov [ edx ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x10 ]
cmp [ ecx ] 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x14
mov [ ebp - 0x18 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x20 ]
je r-xdata
mov [ ebp - 0x14 ] 0x3f
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
call sub_4097d0
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x14
mov [ ebp - 0x18 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x28 ]
add edx 0x1
mov eax [ ebp - 0x10 ]
mov [ eax ] edx
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x28 ]
mov [ edx - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
add eax 0x1
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x20
jge r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ rw-data ]
jae r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x30 ]
mov [ edx ] eax
mov eax [ ebp - 0x10 ]
add eax 0x4
mov eax [ ebp - 0x18 ]
cmp eax [ rw-data ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
not edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + eax * 4 + 0xc4 ]
and eax edx
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov [ edx + ecx * 4 + 0xc4 ] eax
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x20 ]
mov cl [ eax + 0x4 ]
sub cl 0x1
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] cl
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x20 ]
movsx ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x20 ]
shr eax cl
not eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov ecx [ edx + ecx * 4 + 0x44 ]
and ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x38 ]
mov [ eax + edx * 4 + 0x44 ] ecx
mov ecx [ ebp - 0x38 ]
add ecx [ ebp - 0x20 ]
mov dl [ ecx + 0x4 ]
sub dl 0x1
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] dl
mov ecx [ ebp - 0x38 ]
add ecx [ ebp - 0x20 ]
movsx edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x30 ]
cmp ecx [ rw-data ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x20
jge r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
not edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
and ecx edx
mov edx [ ebp - 0x18 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x20 ]
shr eax cl
not eax
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
and edx eax
mov eax [ ebp - 0x18 ]
mov [ eax ] edx
mov [ rw-data ] 0x0
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x14 ]
movsx ecx [ eax + 0x4 ]
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x14 ]
mov al [ edx + 0x4 ]
add al 0x1
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] al
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x14 ]
movsx ecx [ eax + 0x4 ]
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x14 ]
mov al [ edx + 0x4 ]
add al 0x1
mov edx [ ebp - 0x38 ]
add edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] al
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + eax * 4 + 0xc4 ]
or eax edx
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov [ edx + ecx * 4 + 0xc4 ] eax
mov ecx [ ebp - 0x14 ]
sub ecx 0x20
mov eax 0x80000000
shr eax cl
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x4 ]
or edx eax
mov eax [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x80000000
mov ecx [ ebp - 0x14 ]
shr edx cl
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + eax * 4 + 0x44 ]
or eax edx
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x38 ]
mov [ edx + ecx * 4 + 0x44 ] eax
jmp r-xdata
mov eax 0x80000000
mov ecx [ ebp - 0x14 ]
shr eax cl
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
or edx eax
mov eax [ ebp - 0x18 ]
mov [ eax ] edx
sub_4097d0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
imul eax eax 0x14
mov ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x4 ] ecx
push 0x41c4
push 0x8
mov edx [ rw-data ]
push edx
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x10
imul ecx ecx 0x14
push ecx
mov edx [ rw-data ]
push edx
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x4
push 0x2000
push 0x100000
push 0x0
call [ VirtualAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
mov edx [ rw-data ]
add edx 0x10
mov [ rw-data ] edx
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0xffffffff
mov eax [ rw-data ]
add eax 0x1
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ edx ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapFree@IAT ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4098e0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x28 ]
imul eax eax 0x204
mov ecx [ ebp - 0x2c ]
lea edx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x3f
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
mov edx [ ebp - 0x28 ]
shl edx 0xf
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
add ecx edx
mov [ ebp - 0x10 ] ecx
push 0x4
push 0x1000
push 0x8000
mov edx [ ebp - 0x10 ]
push edx
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + ecx * 8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x7000
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x1c ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
add edx 0x1f8
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x10 ]
add eax 0xc
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x1c ]
add eax 0xc
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
mov [ ecx + eax * 4 + 0x44 ] 0x0
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
mov [ eax + edx * 4 + 0xc4 ] 0x1
mov ecx [ ebp - 0x2c ]
movsx edx [ ecx + 0x43 ]
mov eax [ ebp - 0x2c ]
mov cl [ eax + 0x43 ]
add cl 0x1
mov eax [ ebp - 0x2c ]
mov [ eax + 0x43 ] cl
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] 0xffffffff
mov edx [ ebp - 0x4 ]
mov [ edx + 0xffc ] 0xffffffff
mov eax [ ebp - 0x4 ]
add eax 0xc
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ecx ] 0xff0
mov edx [ ebp - 0x18 ]
add edx 0x1000
mov eax [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x18 ]
sub ecx 0x1000
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x18 ]
add eax 0xfec
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
mov [ ecx ] 0xff0
jmp r-xdata
mov edx 0x80000000
mov ecx [ ebp - 0x28 ]
shr edx cl
not edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
and ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
or edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x4 ]
add edx 0x1000
mov [ ebp - 0x4 ] edx
sub_409ad0
push ebp
mov ebp esp
sub esp 0x168
mov eax [ rw-data ]
imul eax eax 0x14
push eax
mov ecx [ rw-data ]
push ecx
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x13c ] edx
mov [ ebp - 0x120 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x120 ]
cmp ecx [ rw-data ]
jge r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
mov edx [ ebp - 0x13c ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x160 ] eax
push 0x41c4
mov ecx [ ebp - 0x160 ]
push ecx
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x13c ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x128 ] eax
mov ecx [ ebp - 0x160 ]
add ecx 0x144
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x13c ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x144 ] 0x0
mov [ ebp - 0x158 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp - 0xc ] 0x20
jge r-xdata
mov edx [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
cmp eax [ edx ]
jne r-xdata
mov [ ebp - 0x11c ] 0x0
mov [ ebp - 0x150 ] 0x0
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x14c ] 0x0
jmp r-xdata
mov eax 0xffffffef
jmp r-xdata
mov ecx [ ebp - 0x13c ]
mov edx [ ebp - 0x158 ]
cmp edx [ ecx + 0x4 ]
je r-xdata
cmp [ ebp - 0x14c ] 0x40
jge r-xdata
mov eax [ ebp - 0x13c ]
add eax 0x14
mov [ ebp - 0x13c ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov eax [ ebp - 0x14c ]
mov [ ebp + eax * 4 - 0x118 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x120 ]
add eax 0x1
mov [ ebp - 0x120 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x160 ]
mov ecx [ ebp - 0x11c ]
cmp ecx [ eax + edx * 4 + 0x44 ]
jne r-xdata
push 0x8000
mov ecx [ ebp - 0x128 ]
push ecx
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x14c ]
add edx 0x1
mov [ ebp - 0x14c ] edx
mov eax 0xfffffff0
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x160 ]
mov ecx [ ebp - 0x150 ]
cmp ecx [ eax + edx * 4 + 0xc4 ]
je r-xdata
mov edx [ ebp - 0x128 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x140 ] 0x0
jmp r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov edx [ ebp - 0x128 ]
add edx 0x8000
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x204
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x4 ]
shl ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x140 ] 0x8
jge r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
cmp edx [ ebp - 0x12c ]
je r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0xc
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x130 ]
add edx 0xff0
mov [ ebp - 0x138 ] edx
mov eax [ ebp - 0x130 ]
cmp [ eax - 0x4 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x134 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax 0xfffffff7
jmp r-xdata
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp - 0x138 ]
cmp [ ecx ] 0xffffffff
je r-xdata
cmp [ ebp - 0x14 ] 0x40
jge r-xdata
mov edx [ ebp - 0x130 ]
mov eax [ edx ]
mov [ ebp - 0x148 ] eax
mov ecx [ ebp - 0x148 ]
mov [ ebp - 0x154 ] ecx
mov edx [ ebp - 0x154 ]
and edx 0x1
test edx edx
je r-xdata
mov [ ebp - 0x168 ] 0x0
mov edx [ ebp - 0x134 ]
mov [ ebp - 0x130 ] edx
mov edx [ ebp - 0x148 ]
sar edx 0x4
sub edx 0x1
mov [ ebp - 0x14c ] edx
cmp [ ebp - 0x14c ] 0x3f
jle r-xdata
mov eax [ ebp - 0x148 ]
sub eax 0x1
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x400
jle r-xdata
cmp [ ebp - 0x168 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x168 ]
cmp ecx [ ebp + eax * 4 - 0x118 ]
je r-xdata
mov eax [ ebp - 0x14c ]
mov ecx [ ebp + eax * 4 - 0x118 ]
add ecx 0x1
mov edx [ ebp - 0x14c ]
mov [ ebp + edx * 4 - 0x118 ] ecx
mov [ ebp - 0x14c ] 0x3f
mov ecx [ ebp - 0x12c ]
add ecx 0x1
mov [ ebp - 0x12c ] ecx
jmp r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov ecx [ ebp - 0x130 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp - 0x134 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x20
jge r-xdata
mov edx [ ebp - 0x15c ]
cmp edx [ ebp - 0x128 ]
jb r-xdata
mov eax 0xfffffff9
jmp r-xdata
mov eax [ ebp - 0x148 ]
and eax 0xf
test eax eax
jne r-xdata
cmp [ ebp - 0x148 ] 0x10
jl r-xdata
mov eax 0xfffffff2
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x168 ]
cmp ecx [ ebp + eax * 4 - 0x118 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp - 0x150 ]
or eax edx
mov [ ebp - 0x150 ] eax
mov ecx [ ebp - 0x14 ]
sub ecx 0x20
mov edx 0x80000000
shr edx cl
mov eax [ ebp - 0x158 ]
or eax edx
mov [ ebp - 0x158 ] eax
mov edx 0x80000000
mov ecx [ ebp - 0x14 ]
shr edx cl
mov eax [ ebp - 0x11c ]
or eax edx
mov [ ebp - 0x11c ] eax
mov edx 0x80000000
mov ecx [ ebp - 0x14 ]
shr edx cl
mov eax [ ebp - 0x144 ]
or eax edx
mov [ ebp - 0x144 ] eax
jmp r-xdata
mov eax 0xfffffff6
jmp r-xdata
mov eax [ ebp - 0x128 ]
add eax 0x8000
cmp [ ebp - 0x15c ] eax
jb r-xdata
cmp [ ebp - 0x148 ] 0xff0
jle r-xdata
mov edx [ ebp - 0x134 ]
mov eax [ edx + 0x8 ]
cmp eax [ ebp - 0x130 ]
je r-xdata
mov ecx [ ebp - 0x15c ]
and ecx 0xfffff000
mov [ ebp - 0x164 ] ecx
mov edx [ ebp - 0x164 ]
add edx 0xc
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
add eax 0xff0
mov [ ebp - 0x124 ] eax
mov ecx [ ebp - 0x130 ]
add ecx [ ebp - 0x148 ]
mov edx [ ecx - 0x4 ]
cmp edx [ ebp - 0x154 ]
je r-xdata
mov ecx [ ebp - 0x134 ]
add ecx 0x8
mov [ ebp - 0x134 ] ecx
jmp r-xdata
mov eax 0xfffffff1
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x124 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x15c ]
jne r-xdata
mov eax [ ebp - 0x130 ]
add eax [ ebp - 0x148 ]
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x130 ]
cmp ecx [ ebp - 0x138 ]
jb r-xdata
mov eax 0xfffffff8
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x15c ]
mov edx [ ecx ]
sar edx 0x4
sub edx 0x1
mov [ ebp - 0x14c ] edx
cmp [ ebp - 0x14c ] 0x3f
jle r-xdata
mov eax 0xfffffff5
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
and ecx 0xfffffffe
mov edx [ ebp - 0x10 ]
add edx ecx
mov [ ebp - 0x10 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x130 ]
cmp edx [ ebp - 0x138 ]
je r-xdata
mov eax [ ebp - 0x14c ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x14c ] 0x3f
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x124 ]
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1000
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax 0xfffffff8
jmp r-xdata
mov ecx [ ebp - 0x15c ]
mov edx [ ecx + 0x8 ]
cmp edx [ ebp - 0x130 ]
je r-xdata
mov eax 0xfffffff4
jmp r-xdata
mov eax [ ebp - 0x140 ]
add eax 0x1
mov [ ebp - 0x140 ] eax
mov eax [ ebp - 0x15c ]
mov [ ebp - 0x130 ] eax
mov ecx [ ebp - 0x168 ]
add ecx 0x1
mov [ ebp - 0x168 ] ecx
jmp r-xdata
mov eax 0xfffffff3
jmp r-xdata
mov eax [ ebp - 0x130 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x15c ] ecx
mov edx [ ebp - 0x15c ]
cmp edx [ ebp - 0x134 ]
je r-xdata
sub_40a0f0
push ebp
mov ebp esp
sub esp 0xc
cmp [ rw-data ] 0xffffffff
jne r-xdata
push 0x2020
push 0x0
mov eax [ rw-data ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0xc ] rw-data
jmp r-xdata
push 0x4
push 0x2000
push __dos_header
push 0x0
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0xc ] rw-data
je r-xdata
push 0x4
push 0x1000
push 0x10000
mov ecx [ ebp - 0x4 ]
push ecx
call [ VirtualAlloc@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
call [ HeapFree@IAT ]
push 0x8000
push 0x0
mov edx [ ebp - 0x4 ]
push edx
call [ VirtualFree@IAT ]
cmp [ ebp - 0xc ] rw-data
jne r-xdata
mov edx [ ebp - 0xc ]
mov [ edx ] rw-data
mov eax [ ebp - 0xc ]
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0xc ]
mov [ rw-data ] edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov [ ecx ] edx
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x400
jge r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] rw-data
push 0x10000
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_4088e0
add esp 0xc
cmp [ ebp - 0x8 ] 0x10
jge r-xdata
jmp r-xdata
mov [ rw-data ] rw-data
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0xf0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf8 ] 0xff
mov ecx [ ebp - 0x4 ]
add ecx 0x1000
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ eax + edx * 8 + 0x18 ] 0xffffffff
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + eax * 8 + 0x18 ] 0xf0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
add edx __dos_header
mov eax [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp - 0xc ]
add ecx 0x18
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x98
mov ecx [ ebp - 0xc ]
mov [ ecx + 0xc ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x10 ]
add edx 0x10000
cmp [ ebp - 0x4 ] edx
jae r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + ecx * 8 + 0x1c ] 0xf1
jmp r-xdata
sub_40a2d0
push ebp
mov ebp esp
push 0x8000
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
call [ VirtualFree@IAT ]
mov edx [ rw-data ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0x8 ] rw-data
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov [ rw-data ] 0xffffffff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov edx [ rw-data ]
push edx
call [ HeapFree@IAT ]
jmp r-xdata
pop ebp
retn
sub_40a350
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
cmp edx [ rw-data ]
je r-xdata
mov [ ebp - 0xc ] 0x3ff
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 8 + 0x18 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x10 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx ] 0xf0
jne r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x18 ] 0xffffffff
jne r-xdata
jmp r-xdata
push 0x4000
push 0x1000
mov edx [ ebp - 0xc ]
shl edx 0xc
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x10 ]
add ecx edx
push ecx
call [ VirtualFree@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x8 ]
add eax 0x20
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
sub eax 0x8
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx ] 0xffffffff
mov eax [ rw-data ]
sub eax 0x1
mov [ rw-data ] eax
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x400
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0xc ] edx
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0xc ]
cmp eax [ ebp - 0x4 ]
jbe r-xdata
cmp [ ebp - 0xc ] 0x400
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
sub ecx 0x1
mov [ ebp + 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40a2d0
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x8
mov [ ebp - 0x4 ] edx
sub_40a4b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] rw-data
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] rw-data
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx + 0x14 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
jbe r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
and ecx 0xf
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
and edx 0xfff
xor eax eax
add eax 0x100
cmp edx eax
jb r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x8 ]
and eax 0xfffff000
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
add eax 0x100
mov ecx [ ebp + 0x8 ]
sub ecx eax
sar ecx 0x4
mov edx [ ebp - 0x4 ]
lea eax [ edx + ecx + 0x8 ]
jmp r-xdata
sub_40a540
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx * 8 + 0x18 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
add ecx edx
mov edx [ ebp - 0x4 ]
mov [ edx ] ecx
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0xf1
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0xf0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
add eax 0x1
mov [ rw-data ] eax
cmp [ rw-data ] 0x20
jne r-xdata
push 0x10
call sub_40a350
add esp 0x4
sub_40a5b0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
cmp eax [ rw-data ]
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x2018
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x18
mov eax [ ebp - 0x4 ]
sub eax edx
sar eax 0x3
shl eax 0xc
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x10 ]
add edx eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x10 ] 0xffffffff
je r-xdata
mov [ ebp - 0x20 ] rw-data
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] rw-data
jne r-xdata
mov edx [ ebp - 0x20 ]
cmp [ edx + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
add ecx 0x18
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x10 ] 0xffffffff
je r-xdata
call sub_40a0f0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x18
mov eax [ ebp - 0x4 ]
sub eax edx
sar eax 0x3
shl eax 0xc
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x10 ]
add edx eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
xor eax eax
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax + 0x8 ] cl
mov edx [ ebp - 0x20 ]
mov [ rw-data ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + eax + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ eax ] edx
mov ecx 0xf0
sub ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x18 ]
sub edx eax
mov eax [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x100
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1000
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40a970
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x4
push 0x1000
mov ecx [ ebp - 0x14 ]
shl ecx 0xc
push ecx
mov edx [ ebp - 0x8 ]
push edx
call [ VirtualAlloc@IAT ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov edx [ ebp - 0x20 ]
mov [ rw-data ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
sub ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp - 0xc ]
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp - 0x14 ]
shl eax 0xc
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_4088e0
add esp 0xc
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1000
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40a970
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov edx [ ebp - 0x20 ]
mov [ rw-data ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
sub ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov [ rw-data ] edx
mov edx [ ebp - 0x1c ]
add edx 0x8
mov eax [ ebp - 0x1c ]
mov [ eax ] edx
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] 0xf0
mov edx [ ebp - 0x1c ]
mov [ edx + 0xf8 ] 0xff
mov eax [ ebp - 0x10 ]
mov [ eax ] 0xf0
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] 0xf1
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x2018
cmp [ ebp - 0x10 ] eax
sbb ecx ecx
and ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax + 0x8 ] cl
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
lea eax [ edx + ecx + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x4 ]
sub eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x100
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x1c ]
add edx 0x1000
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x10 ]
add eax 0x8
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
add edx 0x8
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x2018
cmp [ ebp - 0x10 ] eax
jae r-xdata
sub_40a970
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax 0xf8
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ebp + 0x10 ]
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx + ecx ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x10 ]
mov [ eax ] cl
mov edx [ ebp - 0x8 ]
add edx [ ebp + 0x10 ]
cmp edx [ ebp - 0x14 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
add eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
add edx [ ecx + 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
add eax 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
sub ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
test edx edx
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0x8
mov ecx [ ebp - 0x8 ]
sub ecx eax
shl ecx 0x4
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0x100 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
add eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x8 ]
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
test edx edx
jne r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x8 ]
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x4 ]
jae r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp - 0x10 ]
sub eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
mov al [ ebp + 0x10 ]
mov [ edx ] al
mov ecx [ ebp + 0x8 ]
add ecx 0x8
mov edx [ ebp - 0x8 ]
sub edx ecx
shl edx 0x4
mov eax [ ebp + 0x8 ]
lea eax [ eax + edx + 0x100 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp - 0x10 ]
sub eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov al [ ebp + 0x10 ]
mov [ edx ] al
mov ecx [ ebp + 0x8 ]
add ecx 0x8
mov edx [ ebp - 0x8 ]
sub edx ecx
shl edx 0x4
mov eax [ ebp + 0x8 ]
lea eax [ eax + edx + 0x100 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_40ac20
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] rw-data
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x1c ]
mov edx [ ecx ]
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] rw-data
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0x1c ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x400
jge r-xdata
xor eax eax
mov eax 0xfffffff7
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
cmp [ eax + edx * 8 + 0x18 ] 0xffffffff
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0xf8
mov ecx [ ebp - 0x4 ]
cmp [ ecx ] eax
jb r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + 0xf8 ]
cmp eax 0xff
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx * 8 + 0x18 ]
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0xc ] eax
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov eax 0xfffffffd
jmp r-xdata
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
cmp eax [ edx + ecx * 8 + 0x18 ]
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
lea eax [ edx + ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1000
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax 0xfffffff9
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax 0xfffffff8
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
cmp ecx [ eax + edx * 8 + 0x1c ]
jl r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x20 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov eax 0xfffffffc
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x20 ]
cmp eax [ edx + 0x4 ]
jge r-xdata
cmp [ ebp - 0x10 ] 0xf0
jge r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
add eax edx
cmp [ ebp - 0x14 ] eax
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax 0xfffffffb
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx + 0x8 ]
test edx edx
je r-xdata
jmp r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_40ae60
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
push 0x0
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
cmp edx 0x5a4d
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x3c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
add edx [ ecx + 0x3c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + 0x1a ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx + 0x1b ]
mov [ eax + 0x1 ] dl
sub_40aec0
push ebp
mov ebp esp
mov eax 0x1238
call sub_40c5c0
mov [ ebp - 0x1238 ] 0x0
mov [ ebp - 0x98 ] 0x94
lea eax [ ebp - 0x98 ]
push eax
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
push 0x1090
lea ecx [ ebp - 0x1128 ]
push ecx
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
lea eax [ ebp - 0x1234 ]
push eax
call sub_40ae60
add esp 0x4
mov ecx [ ebp - 0x1234 ]
and ecx 0xff
cmp ecx 0x6
jl r-xdata
lea edx [ ebp - 0x1128 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ ebp - 0x94 ] 0x5
jb r-xdata
mov eax 0x2
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x16
lea ecx [ ebp - 0x1128 ]
push ecx
push r--data
call sub_40e7d0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x61
jl r-xdata
push 0x104
lea eax [ ebp - 0x122c ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ ebp - 0x122c ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
lea edx [ ebp - 0x1128 ]
mov [ ebp - 0x1238 ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x7a
jg r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x1238 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
add dl 0xe0
mov eax [ ebp - 0x4 ]
mov [ eax ] dl
lea eax [ ebp - 0x122c ]
push eax
lea ecx [ ebp - 0x1128 ]
push ecx
call sub_40e750
add esp 0x8
mov [ ebp - 0x1238 ] eax
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x61
jl r-xdata
push 0x2c
mov edx [ ebp - 0x1238 ]
push edx
call sub_40e690
add esp 0x8
mov [ ebp - 0x1238 ] eax
cmp [ ebp - 0x1238 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x7a
jg r-xdata
mov eax [ ebp - 0x1238 ]
add eax 0x1
mov [ ebp - 0x1238 ] eax
mov ecx [ ebp - 0x1238 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
add cl 0xe0
mov edx [ ebp - 0x4 ]
mov [ edx ] cl
push 0xa
push 0x0
mov edx [ ebp - 0x1238 ]
push edx
call sub_40e330
add esp 0xc
mov [ ebp - 0x1230 ] eax
cmp [ ebp - 0x1230 ] 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x3b
jne r-xdata
mov eax [ ebp - 0x1230 ]
jmp r-xdata
cmp [ ebp - 0x1230 ] 0x3
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x1230 ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
jmp r-xdata
sub_40b0f0
push ebp
mov ebp esp
push 0x0
push 0x1000
xor eax eax
cmp [ ebp + 0x8 ] 0x0
sete al
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40aec0
mov [ rw-data ] eax
cmp [ rw-data ] 0x3
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
push 0x3f8
call sub_408b80
add esp 0x4
test eax eax
jne r-xdata
pop ebp
retn
mov eax 0x1
call sub_40a0f0
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ HeapDestroy@IAT ]
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
push edx
call [ HeapDestroy@IAT ]
xor eax eax
jmp r-xdata
sub_40b180
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
add eax 0x1
cmp eax 0x100
ja r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x8
and ecx 0xff
and ecx 0xff
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x8000
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax [ ebp + 0xc ]
jmp r-xdata
mov al [ ebp + 0x8 ]
mov [ ebp - 0xc ] al
mov [ ebp - 0xb ] 0x0
mov [ ebp - 0x8 ] 0x1
mov ecx [ ebp + 0x8 ]
sar ecx 0x8
and ecx 0xff
mov [ ebp - 0xc ] cl
mov dl [ ebp + 0x8 ]
mov [ ebp - 0xb ] dl
mov [ ebp - 0xa ] 0x0
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
and eax 0xffff
and eax [ ebp + 0xc ]
xor eax eax
jmp r-xdata
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
push 0x1
call sub_40e810
add esp 0x1c
test eax eax
jne r-xdata
sub_40b240
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push eax
call sub_40b3f0
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call [ UnhandledExceptionFilter@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x5
jne r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x8 ] 0x0
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x4 ]
push eax
call [ ebp - 0x4 ]
add esp 0x4
mov edx [ rw-data ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
add ecx [ rw-data ]
cmp [ ebp - 0x10 ] ecx
jge r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xc000008e
jne r-xdata
mov edx [ ebp - 0x10 ]
imul edx edx 0xc
mov [ edx + rw-data ] 0x0
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx ] 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax ] 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x8
call [ ebp - 0x4 ]
add esp 0x8
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ rw-data ] ecx
or eax 0xffffffff
mov edx [ ebp - 0xc ]
cmp [ edx ] 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_40b3f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] rw-data
mov ecx [ rw-data ]
imul ecx ecx 0xc
add ecx rw-data
cmp [ ebp - 0x4 ] ecx
jae r-xdata
mov edx [ ebp - 0x4 ]
add edx 0xc
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
imul eax eax 0xc
add eax rw-data
cmp [ ebp - 0x4 ] eax
jae r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp eax [ ebp + 0x8 ]
je r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
sub_40b450
push ebp
mov ebp esp
sub esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
call sub_40d800
push 0x6d
push r--data
push 0x2
mov eax [ ebp - 0x8 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
call sub_4045b0
add esp 0x10
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ rw-data ] edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x3d
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x9
call sub_405a40
add esp 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_403430
add esp 0x4
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
push 0x2
mov edx [ rw-data ]
push edx
call sub_4049d0
add esp 0x8
mov [ rw-data ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ rw-data ] 0x1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call sub_403430
add esp 0x4
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x3d
je r-xdata
jmp r-xdata
push 0x79
push r--data
push 0x2
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4045b0
add esp 0x10
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx ]
push eax
call sub_4034b0
add esp 0x8
mov ecx [ ebp - 0xc ]
add ecx 0x4
mov [ ebp - 0xc ] ecx
push 0x9
call sub_405a40
add esp 0x4
sub_40b5a0
push ebp
mov ebp esp
sub esp 0x14
cmp [ rw-data ] 0x0
jne r-xdata
push 0x104
push rw-data
push 0x0
call [ GetModuleFileNameA@IAT ]
mov [ rw-data ] rw-data
mov eax [ rw-data ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
call sub_40d800
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ edx + ecx * 4 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_40b680
add esp 0x14
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov esp ebp
pop ebp
retn
push 0x8
call sub_405a40
add esp 0x4
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ecx
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x10 ]
push ecx
call sub_40b680
add esp 0x14
push 0x80
push r--data
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 4 ]
push ecx
call sub_4045b0
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_40b680
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x1
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x22
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
add edx 0x4
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x22
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ ebp - 0xc ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
and edx 0x4
test edx edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
cmp edx 0x20
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x22
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
xor eax eax
mov al [ edx + rw-data ]
and eax 0x4
test eax eax
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xff
test edx edx
jne r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and ecx 0xff
cmp ecx 0x9
jne r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp + 0x10 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ecx - 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x20
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x9
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ edx ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x4
mov [ ebp + 0xc ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x22
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov ecx [ ebp + 0xc ]
add ecx 0x4
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx 0x1
mov [ ebp - 0x10 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x10 ]
xor edx edx
mov ecx 0x2
div ecx
test edx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x5c
jne r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x5c
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x22
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x20
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x9
jne r-xdata
xor edx edx
cmp [ ebp - 0x14 ] 0x0
sete dl
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x10 ] 0x0
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
xor ecx ecx
mov cl [ eax + rw-data ]
and ecx 0x4
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx ]
xor ecx ecx
mov cl [ eax + rw-data ]
and ecx 0x4
test ecx ecx
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x18 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
mov al [ edx ]
mov [ ecx ] al
mov ecx [ ebp + 0x10 ]
add ecx 0x1
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
sub_40bab0
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
call [ GetEnvironmentStringsW@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
call [ GetEnvironmentStringsW@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
call [ GetEnvironmentStrings@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x14 ]
sar ecx 0x1
add ecx 0x1
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
push 0x8f
push r--data
push 0x2
mov edx [ ebp - 0x10 ]
push edx
call sub_4045b0
add esp 0x10
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
jmp r-xdata
push 0x64
push r--data
push 0x2
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4045b0
add esp 0x10
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call sub_403d20
add esp 0xc
mov ecx [ ebp - 0x18 ]
push ecx
call [ FreeEnvironmentStringsA@IAT ]
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
call [ FreeEnvironmentStringsA@IAT ]
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
push 0x2
mov ecx [ ebp - 0x18 ]
push ecx
call sub_4049d0
add esp 0x8
mov [ ebp - 0x18 ] 0x0
sub_40bccc
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd0e
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_40bcec
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40bda2
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40bdbc
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_40bd0e
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_40bccc
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_40bd0e
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40bda2
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_40bea0
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
je r-xdata
push 0xfc
call sub_40bef0
add esp 0x4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0xff
call sub_40bef0
add esp 0x4
call [ rw-data ]
pop ebp
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40bef0
push ebp
mov ebp esp
sub esp 0x1b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x12
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
cmp edx [ ecx * 8 + rw-data ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0xfc
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx * 8 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x1
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx * 8 + rw-data ]
push eax
call sub_403430
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx * 8 + rw-data ]
push edx
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
int3
cmp [ ebp + 0x8 ] 0xfc
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push 0x104
lea eax [ ebp - 0x110 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x110 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
push eax
call sub_403430
add esp 0x4
add eax 0x1
cmp eax 0x3c
jbe r-xdata
push r--data
lea ecx [ ebp - 0x110 ]
push ecx
call sub_4034b0
add esp 0x8
push r--data
lea edx [ ebp - 0x1b0 ]
push edx
call sub_4034b0
add esp 0x8
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1b0 ]
push ecx
call sub_4034c0
add esp 0x8
push r--data
lea edx [ ebp - 0x1b0 ]
push edx
call sub_4034c0
add esp 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
lea edx [ ebp - 0x1b0 ]
push edx
call sub_4034c0
add esp 0x8
push 0x12010
push r--data
lea eax [ ebp - 0x1b0 ]
push eax
call sub_40c810
add esp 0xc
lea ecx [ ebp - 0x110 ]
push ecx
call sub_403430
add esp 0x4
mov edx [ ebp - 0xc ]
lea eax [ edx + eax - 0x3b ]
mov [ ebp - 0xc ] eax
push 0x3
push r--data
mov ecx [ ebp - 0xc ]
push ecx
call sub_4035a0
add esp 0xc
sub_40c0b0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x40
jge r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
cmp [ ecx * 4 + rw-data ] 0x0
je r-xdata
push 0x79
push r--data
push 0x2
push 0x100
call sub_4045b0
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx * 4 + rw-data ] edx
mov eax [ rw-data ]
add eax 0x20
mov [ rw-data ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
add eax 0x100
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
add eax 0x100
cmp [ ebp - 0x4 ] eax
jae r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx + 0x4 ]
and edx 0x1
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
shl ecx 0x5
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5 ] 0xa
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xffffffff
mov ecx [ ebp - 0xc ]
shl ecx 0x5
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
sub eax [ edx * 4 + rw-data ]
sar eax 0x3
add ecx eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x8
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_40c1e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
cmp [ eax + edx * 8 ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 8 ] edx
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push edx
push 0xfffffff6
call [ SetStdHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push 0xfffffff5
call [ SetStdHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push 0xfffffff4
call [ SetStdHandle@IAT ]
jmp r-xdata
sub_40c290
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
cmp [ ecx + eax * 8 ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov [ edx + ecx * 8 ] 0xffffffff
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
push 0xfffffff6
call [ SetStdHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
push 0x0
push 0xfffffff5
call [ SetStdHandle@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x2
je r-xdata
push 0x0
push 0xfffffff4
call [ SetStdHandle@IAT ]
jmp r-xdata
sub_40c360
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov eax [ ecx + eax * 8 ]
jmp r-xdata
pop ebp
retn
sub_40c3c0
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x2c ] ecx
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x5d
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
int3
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x5e
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0xc ] 0x42
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
call sub_406860
add esp 0xc
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x4 ]
sub eax 0x1
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x24 ]
cmp [ edx + 0x4 ] 0x0
jl r-xdata
int3
mov eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_408160
add esp 0x8
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov [ ecx ] 0x0
xor edx edx
and edx 0xff
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp - 0x24 ]
mov [ edx ] ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c4c0
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
xor ecx ecx
test ecx ecx
jne r-xdata
push r--data
push 0x0
push 0x5a
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
int3
xor edx edx
test edx edx
jne r-xdata
push r--data
push 0x0
push 0x5b
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] 0x42
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
call sub_406860
add esp 0xc
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x24 ]
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
int3
mov edx [ ebp - 0x24 ]
push edx
push 0x0
call sub_408160
add esp 0x8
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
mov [ eax ] 0x0
xor ecx ecx
and ecx 0xff
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c5c0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40c5f0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
sub ecx 0x2
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x14
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x18 ]
xor edx edx
mov dl [ eax + lookup_table_40c78c ]
jmp [ edx * 4 + jump_table_40c774 ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] rw-data
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] rw-data
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov [ ebp - 0x10 ] rw-data
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] rw-data
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c7b0
add esp 0x4
add eax 0x8
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x8
je r-xdata
push 0x3
call sub_407bb0
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ rw-data ] 0x0
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
cmp [ ebp + 0x8 ] 0xb
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov [ rw-data ] 0x8c
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x0
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ ebp - 0x14 ]
add esp 0x4
mov ecx [ rw-data ]
push ecx
push 0x8
call [ ebp - 0x14 ]
add esp 0x8
jmp r-xdata
mov ecx [ rw-data ]
add ecx [ rw-data ]
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
cmp [ ebp + 0x8 ] 0xb
je r-xdata
cmp [ ebp + 0x8 ] 0x8
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
imul edx edx 0xc
mov [ edx + rw-data ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] ecx
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_40c7b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] rw-data
mov ecx [ rw-data ]
imul ecx ecx 0xc
add ecx rw-data
cmp [ ebp - 0x4 ] ecx
jae r-xdata
mov edx [ ebp - 0x4 ]
add edx 0xc
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
imul eax eax 0xc
add eax rw-data
cmp [ ebp - 0x4 ] eax
jae r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov esp ebp
pop ebp
retn
sub_40c810
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
push r--data
mov eax [ ebp - 0x8 ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ rw-data ]
cmp [ rw-data ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push r--data
mov ecx [ ebp - 0x8 ]
push ecx
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push r--data
mov edx [ ebp - 0x8 ]
push edx
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov [ ebp - 0x4 ] eax
sub_40c8d0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_40c360
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
mov cl [ eax + edx * 8 + 0x4 ]
and cl 0xfd
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov edx [ edx * 4 + rw-data ]
mov [ edx + eax * 8 + 0x4 ] cl
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_4083e0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40c9c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx eax [ eax + edx * 8 + 0x4 ]
and eax 0x40
xor eax eax
jmp r-xdata
pop ebp
retn
sub_40c9f0
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x1
lea eax [ ebp + 0xc ]
push eax
push 0x220
mov ecx [ rw-data ]
push ecx
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0xffff
cmp eax 0xff
jle r-xdata
mov esp ebp
pop ebp
retn
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
mov [ ecx ] dl
mov eax 0x1
jmp r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub_40ca90
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x4
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ edx - 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
push ecx
push 0x40
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40cad0
add esp 0x10
mov esp ebp
pop ebp
retn
sub_40cad0
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x24 ] 0xc
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp + 0xc ]
and eax 0x80
test eax eax
je r-xdata
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x38 ] 0x10
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0x3
mov [ ebp - 0x40 ] edx
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
and edx 0x4000
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x8000
test ecx ecx
jne r-xdata
mov [ ebp - 0x34 ] 0x80000000
jmp r-xdata
cmp [ ebp - 0x40 ] 0x1
je r-xdata
cmp [ rw-data ] 0x8000
je r-xdata
mov al [ ebp - 0x38 ]
or al 0x80
mov [ ebp - 0x38 ] al
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
sub ecx 0x10
mov [ ebp - 0x44 ] ecx
cmp [ ebp - 0x44 ] 0x30
ja r-xdata
mov [ ebp - 0x34 ] 0x40000000
jmp r-xdata
cmp [ ebp - 0x40 ] 0x2
je r-xdata
mov cl [ ebp - 0x38 ]
or cl 0x80
mov [ ebp - 0x38 ] cl
mov [ rw-data ] 0x16
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x44 ]
xor edx edx
mov dl [ eax + lookup_table_40cf8f ]
jmp [ edx * 4 + jump_table_40cf7b ]
mov [ ebp - 0x34 ] 0xc0000000
jmp r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x700
mov [ ebp - 0x48 ] ecx
cmp [ ebp - 0x48 ] 0x400
jg r-xdata
cmp [ ebp - 0x48 ] 0x500
je r-xdata
cmp [ ebp - 0x48 ] 0x400
je r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
cmp [ ebp - 0x48 ] 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp [ ebp - 0x48 ] 0x200
jg r-xdata
mov [ ebp - 0x28 ] 0x80
mov edx [ ebp + 0xc ]
and edx 0x100
test edx edx
je r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp [ ebp - 0x48 ] 0x700
je r-xdata
cmp [ ebp - 0x48 ] 0x300
je r-xdata
cmp [ ebp - 0x48 ] 0x200
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x40
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
add ecx 0x4
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov eax [ edx - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] 0x0
mov ecx [ rw-data ]
not ecx
mov edx [ ebp - 0x10 ]
and edx ecx
and edx 0x80
test edx edx
jne r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x1000
test eax eax
je r-xdata
mov ecx [ ebp - 0x28 ]
or ecx 0x4000000
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x34 ]
or edx 0x10000
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] 0x1
mov [ rw-data ] 0x16
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x48 ] 0x100
je r-xdata
mov edx [ ebp + 0xc ]
and edx 0x20
test edx edx
je r-xdata
mov ecx [ ebp - 0x28 ]
or ch 0x1
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x10
test ecx ecx
je r-xdata
mov eax [ ebp - 0x28 ]
or eax 0x8000000
mov [ ebp - 0x28 ] eax
jmp r-xdata
call sub_40c0b0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x28 ]
or edx 0x10000000
mov [ ebp - 0x28 ] edx
push 0x0
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ CreateFileA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov [ rw-data ] 0x18
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ GetFileType@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4083e0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
push eax
call sub_4083e0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
mov dl [ ebp - 0x38 ]
or dl 0x40
mov [ ebp - 0x38 ] dl
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_40c1e0
add esp 0x8
mov al [ ebp - 0x38 ]
or al 0x1
mov [ ebp - 0x38 ] al
mov ecx [ ebp - 0x14 ]
sar ecx 0x5
mov edx [ ebp - 0x14 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
mov cl [ ebp - 0x38 ]
mov [ eax + edx * 8 + 0x4 ] cl
movsx edx [ ebp - 0x38 ]
and edx 0x48
test edx edx
jne r-xdata
mov al [ ebp - 0x38 ]
or al 0x8
mov [ ebp - 0x38 ] al
movsx eax [ ebp - 0x38 ]
and eax 0x48
test eax eax
jne r-xdata
movsx eax [ ebp - 0x38 ]
and eax 0x80
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
and ecx 0x8
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x2
test ecx ecx
je r-xdata
mov edx [ ebp - 0x14 ]
sar edx 0x5
mov eax [ ebp - 0x14 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov dl [ ecx + eax * 8 + 0x4 ]
or dl 0x20
mov eax [ ebp - 0x14 ]
sar eax 0x5
mov ecx [ ebp - 0x14 ]
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx * 8 + 0x4 ] dl
push 0x2
push 0xffffffff
mov edx [ ebp - 0x14 ]
push edx
call sub_40c8d0
add esp 0xc
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0xffffffff
jne r-xdata
mov [ ebp - 0x30 ] 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_40db90
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
mov ecx [ ebp - 0x14 ]
push ecx
call sub_40c8d0
add esp 0xc
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0xffffffff
jne r-xdata
movsx eax [ ebp - 0x30 ]
cmp eax 0x1a
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
call sub_405aa0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x14 ]
push edx
call sub_405aa0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_40e9e0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call sub_405aa0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
sub_40cfc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x2e
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
push 0x3b
push r--data
push 0x2
push 0x1000
call sub_4045b0
add esp 0x10
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
int3
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
or edx 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x14
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
or ecx 0x8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1000
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d090
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push eax
call sub_40d390
add esp 0x4
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
call sub_40d470
call sub_40d4f0
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x5
jae r-xdata
lea edx [ ebp - 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x30
mov ecx [ eax + rw-data ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
or eax 0xffffffff
call sub_40d470
call sub_40d4f0
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x101
jae r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x24 ] 0x101
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x0
cmp [ ebp - 0x20 ] 0x1
jbe r-xdata
mov edx [ ebp - 0x24 ]
mov [ edx + rw-data ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x0
lea ecx [ ebp - 0x1a ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
cmp [ ebp - 0xc ] 0x4
jae r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
cmp [ ebp - 0xc ] 0x6
jae r-xdata
mov eax [ ebp - 0x28 ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
mov edx [ rw-data ]
push edx
call sub_40d3f0
add esp 0x4
mov [ rw-data ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
imul edx edx 0x30
mov eax [ ebp - 0xc ]
lea ecx [ edx + eax * 8 + rw-data ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
call sub_40d4f0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax * 2 + rw-data ] 0x0
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x28 ]
xor eax eax
mov al [ edx + 0x1 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x6
jae r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x24 ] 0xff
jae r-xdata
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
call sub_40d4f0
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x30
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
mov cx [ ecx + eax * 2 + rw-data ]
mov [ edx * 2 + rw-data ] cx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
xor eax eax
mov al [ edx + 0x1 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
call sub_40d3f0
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov dl [ ecx + rw-data ]
or dl 0x8
mov eax [ ebp - 0x24 ]
mov [ eax + rw-data ] dl
jmp r-xdata
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dl [ ecx + 0x1 ]
cmp [ ebp - 0x24 ] edx
ja r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + rw-data ]
or cl 0x4
mov edx [ ebp - 0x24 ]
mov [ edx + rw-data ] cl
jmp r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx + 0x1 ]
cmp [ ebp - 0x24 ] edx
ja r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x2
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0xc ]
mov dl [ eax + rw-data ]
or dl [ ecx + rw-data ]
mov eax [ ebp - 0x24 ]
mov [ eax + rw-data ] dl
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
sub_40d390
push ebp
mov ebp esp
mov [ rw-data ] 0x0
cmp [ ebp + 0x8 ] 0xfffffffe
jne r-xdata
cmp [ ebp + 0x8 ] 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
mov eax [ rw-data ]
jmp r-xdata
sub_40d3f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3a4
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x12
ja r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov dl [ eax + lookup_table_40d454 ]
jmp [ edx * 4 + jump_table_40d440 ]
mov eax 0x411
jmp r-xdata
mov eax 0x804
jmp r-xdata
mov eax 0x412
jmp r-xdata
mov eax 0x404
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40d470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x101
jge r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + rw-data ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x6
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax * 2 + rw-data ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
sub_40d4f0
push ebp
mov ebp esp
sub esp 0x51c
lea eax [ ebp - 0x318 ]
push eax
mov ecx [ rw-data ]
push ecx
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x51c ] 0x0
jmp r-xdata
mov [ ebp - 0x51c ] 0x0
jmp r-xdata
cmp [ ebp - 0x51c ] 0x100
jae r-xdata
cmp [ ebp - 0x51c ] 0x100
jae r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x51c ] 0x41
jb r-xdata
mov [ ebp - 0x304 ] 0x20
lea edx [ ebp - 0x312 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x51c ]
mov cl [ ebp - 0x51c ]
mov [ ebp + eax - 0x304 ] cl
jmp r-xdata
cmp [ ebp - 0x51c ] 0x61
jb r-xdata
cmp [ ebp - 0x51c ] 0x5a
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx ]
test edx edx
je r-xdata
mov edx [ ebp - 0x51c ]
add edx 0x1
mov [ ebp - 0x51c ] edx
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] 0x0
cmp [ ebp - 0x51c ] 0x7a
ja r-xdata
mov ecx [ ebp - 0x51c ]
mov dl [ ecx + rw-data ]
or dl 0x10
mov eax [ ebp - 0x51c ]
mov [ eax + rw-data ] dl
mov ecx [ ebp - 0x51c ]
add ecx 0x20
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] cl
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0x204 ]
push edx
push 0x100
lea eax [ ebp - 0x304 ]
push eax
push 0x1
call sub_40e810
add esp 0x1c
push 0x0
mov ecx [ rw-data ]
push ecx
push 0x100
lea edx [ ebp - 0x418 ]
push edx
push 0x100
lea eax [ ebp - 0x304 ]
push eax
push 0x100
mov ecx [ rw-data ]
push ecx
call sub_40d830
add esp 0x20
push 0x0
mov edx [ rw-data ]
push edx
push 0x100
lea eax [ ebp - 0x518 ]
push eax
push 0x100
lea ecx [ ebp - 0x304 ]
push ecx
push 0x200
mov edx [ rw-data ]
push edx
call sub_40d830
add esp 0x20
mov [ ebp - 0x51c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax ]
mov [ ebp - 0x51c ] ecx
jmp r-xdata
mov eax [ ebp - 0x51c ]
add eax 0x1
mov [ ebp - 0x51c ] eax
mov eax [ ebp - 0x51c ]
mov cl [ eax + rw-data ]
or cl 0x20
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] cl
mov eax [ ebp - 0x51c ]
sub eax 0x20
mov ecx [ ebp - 0x51c ]
mov [ ecx + rw-data ] al
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x51c ] 0x100
jae r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + 0x1 ]
cmp [ ebp - 0x51c ] ecx
ja r-xdata
jmp r-xdata
mov ecx [ ebp - 0x51c ]
xor edx edx
mov dx [ ebp + ecx * 2 - 0x204 ]
and edx 0x1
test edx edx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x51c ]
mov [ ebp + edx - 0x304 ] 0x20
jmp r-xdata
mov eax [ ebp - 0x51c ]
xor ecx ecx
mov cx [ ebp + eax * 2 - 0x204 ]
and ecx 0x2
test ecx ecx
je r-xdata
mov eax [ ebp - 0x51c ]
mov cl [ eax + rw-data ]
or cl 0x10
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] cl
mov eax [ ebp - 0x51c ]
mov ecx [ ebp - 0x51c ]
mov dl [ ebp + ecx - 0x418 ]
mov [ eax + rw-data ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x51c ]
add edx 0x1
mov [ ebp - 0x51c ] edx
mov edx [ ebp - 0x51c ]
mov [ edx + rw-data ] 0x0
mov edx [ ebp - 0x51c ]
mov al [ edx + rw-data ]
or al 0x20
mov ecx [ ebp - 0x51c ]
mov [ ecx + rw-data ] al
mov edx [ ebp - 0x51c ]
mov eax [ ebp - 0x51c ]
mov cl [ ebp + eax - 0x518 ]
mov [ edx + rw-data ] cl
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x51c ]
add eax 0x1
mov [ ebp - 0x51c ] eax
sub_40d830
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
push 0x0
push 0x0
push 0x1
push r--data
push 0x100
push 0x0
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_40db40
add esp 0x8
mov [ ebp + 0x14 ] eax
push 0x0
push 0x0
push 0x1
push r--data
push 0x100
push 0x0
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
lea esp [ ebp - 0x40 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x24 ]
neg edx
sbb edx edx
and edx 0x8
add edx 0x1
push edx
mov eax [ ebp + 0x20 ]
push eax
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x20 ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
shl eax 0x1
add eax 0x3
and al 0xfc
call sub_40c5c0
mov [ ebp - 0x30 ] esp
mov [ ebp - 0x18 ] esp
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
push 0x1
mov eax [ ebp + 0x20 ]
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x0
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ LCMapStringW@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
and edx 0x400
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x2c ]
shl eax 0x1
add eax 0x3
and al 0xfc
call sub_40c5c0
mov [ ebp - 0x34 ] esp
mov [ ebp - 0x18 ] esp
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp + 0x1c ]
jle r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x20 ]
push eax
push 0x220
mov ecx [ ebp + 0x20 ]
push ecx
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
push 0x220
mov edx [ ebp + 0x20 ]
push edx
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40db40
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
test edx edx
je r-xdata
sub_40db90
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp + 0xc ]
mov [ ebp - 0x14 ] edx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x48
test ecx ecx
je r-xdata
push 0x0
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov edx [ ecx + eax * 8 ]
push edx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x5 ]
cmp edx 0xa
je r-xdata
mov edx [ ebp - 0x18 ]
add edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x80
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x5
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
mov cl [ edx + ecx * 8 + 0x5 ]
mov [ eax ] cl
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp + 0x10 ] ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + eax * 8 + 0x5 ] 0xa
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov dl [ ecx + eax * 8 + 0x4 ]
and dl 0xfb
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx * 8 + 0x4 ] dl
mov ecx [ ebp + 0xc ]
movsx edx [ ecx ]
cmp edx 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_4083e0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x1a
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov al [ edx + ecx * 8 + 0x4 ]
or al 0x4
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx * 8 + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
movsx eax [ edx + ecx * 8 + 0x4 ]
and eax 0x40
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0xc ]
lea eax [ edx + ecx - 0x1 ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
mov cl [ eax + edx * 8 + 0x4 ]
or cl 0x2
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov edx [ edx * 4 + rw-data ]
mov [ edx + eax * 8 + 0x4 ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov edx [ ecx + eax * 8 ]
push edx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx + 0x1 ]
cmp edx 0xa
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0xa
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x18 ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0xd
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x48
test edx edx
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jne r-xdata
movsx eax [ ebp - 0x1c ]
cmp eax 0xa
jne r-xdata
push 0x1
push 0xffffffff
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c8d0
add esp 0xc
mov [ ebp - 0x20 ] eax
movsx edx [ ebp - 0x1c ]
cmp edx 0xa
je r-xdata
movsx ecx [ ebp - 0x1c ]
cmp ecx 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0xd
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov dl [ ebp - 0x1c ]
mov [ ecx + eax * 8 + 0x5 ] dl
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0xa
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0xd
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
mov [ edx ] 0xa
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
sub_40dff0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40e050 ]
jmp [ ecx * 4 + jump_table_40e0cc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e138 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e138 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40e2d0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40e1d8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e2d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e138 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e138 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40e138 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40e2d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e2d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e2d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40e2d0 ]
sub_40e330
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40e350
add esp 0x10
pop ebp
retn
sub_40e350
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x8
mov [ ebp - 0x18 ] ecx
push 0x8
mov ecx [ ebp - 0x8 ]
and ecx 0xff
push ecx
call sub_40b180
add esp 0x8
mov [ ebp - 0x18 ] eax
jmp r-xdata
movsx edx [ ebp - 0x8 ]
cmp edx 0x2d
jne r-xdata
mov edx [ ebp - 0x4 ]
mov al [ edx ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
movsx ecx [ ebp - 0x8 ]
cmp ecx 0x2b
jne r-xdata
mov eax [ ebp + 0x14 ]
or al 0x2
mov [ ebp + 0x14 ] eax
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov edx [ ebp - 0x4 ]
mov al [ edx ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
cmp [ ebp + 0x10 ] 0x24
jle r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
movsx ecx [ ebp - 0x8 ]
cmp ecx 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
movsx eax [ ebp - 0x8 ]
cmp eax 0x30
jne r-xdata
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ rw-data ]
xor eax eax
mov ax [ edx + ecx * 2 ]
and eax 0x4
mov [ ebp - 0x1c ] eax
push 0x4
mov eax [ ebp - 0x8 ]
and eax 0xff
push eax
call sub_40b180
add esp 0x8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
cmp edx 0x58
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx [ ebp - 0x8 ]
sub ecx 0x30
mov [ ebp - 0x14 ] ecx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov cl [ eax ]
mov [ ebp - 0x8 ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ rw-data ]
xor edx edx
mov dx [ ecx + eax * 2 ]
and edx 0x103
mov [ ebp - 0x20 ] edx
push 0x103
mov edx [ ebp - 0x8 ]
and edx 0xff
push edx
call sub_40b180
add esp 0x8
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
movsx eax [ ebp - 0x8 ]
push eax
call sub_40ec50
add esp 0x4
sub eax 0x37
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
or edx 0x8
mov [ ebp + 0x14 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x14 ]
and edx 0x8
test edx edx
jne r-xdata
mov edx [ ebp - 0xc ]
imul edx [ ebp + 0x10 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
and ecx 0x4
test ecx ecx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl [ ecx ]
mov [ ebp - 0x8 ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
or al 0x4
mov [ ebp + 0x14 ] eax
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp - 0x14 ] edx
ja r-xdata
mov [ rw-data ] 0x22
mov edx [ ebp + 0x14 ]
and edx 0x1
test edx edx
je r-xdata
mov edx [ ebp + 0x14 ]
and edx 0x1
test edx edx
jne r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
and eax 0x2
test eax eax
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0x2
test eax eax
je r-xdata
mov [ ebp - 0xc ] 0x7fffffff
mov [ ebp - 0xc ] 0x80000000
jmp r-xdata
mov eax [ ebp + 0x14 ]
and eax 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x14 ]
and ecx 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0xc ] 0x80000000
ja r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
neg ecx
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x7fffffff
jbe r-xdata
sub_40e690
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40e750
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40e7d0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_40e810
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push r--data
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push 0x1
push r--data
push 0x1
push 0x0
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x1c ] edx
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x20 ]
neg edx
sbb edx edx
and edx 0x8
add edx 0x1
push edx
mov eax [ ebp + 0x18 ]
push eax
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x18 ] edx
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x20 ]
shl eax 0x1
add eax 0x3
and al 0xfc
call sub_40c5c0
mov [ ebp - 0x2c ] esp
mov [ ebp - 0x18 ] esp
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x20 ]
shl edx 0x1
push edx
push 0x0
mov eax [ ebp - 0x24 ]
push eax
call sub_4088e0
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
mov edx [ ebp + 0x18 ]
push edx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ GetStringTypeW@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40e9e0
push ebp
mov ebp esp
mov eax 0x1024
call sub_40c5c0
push ebx
push esi
push edi
lea eax [ ebp - 0x1004 ]
mov [ ebp - 0x1014 ] eax
mov [ ebp - 0x101c ] 0x0
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x1
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
xor eax eax
test eax eax
jne r-xdata
push r--data
push 0x0
push 0x81
push r--data
push 0x2
call sub_405c40
add esp 0x14
cmp eax 0x1
jne r-xdata
push 0x1
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c8d0
add esp 0xc
mov [ ebp - 0x100c ] eax
cmp [ ebp - 0x100c ] 0xffffffff
je r-xdata
int3
or eax 0xffffffff
jmp r-xdata
push 0x2
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_40c8d0
add esp 0xc
mov [ ebp - 0x1010 ] eax
cmp [ ebp - 0x1010 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x1010 ]
mov [ ebp - 0x1018 ] eax
cmp [ ebp - 0x1018 ] 0x0
jle r-xdata
cmp [ ebp - 0x1018 ] 0x0
jge r-xdata
push 0x1000
push 0x0
mov ecx [ ebp - 0x1014 ]
push ecx
call sub_4088e0
add esp 0xc
push 0x8000
mov edx [ ebp + 0x8 ]
push edx
call sub_40ed80
add esp 0x8
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x100c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c8d0
add esp 0xc
mov eax [ ebp - 0x101c ]
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c8d0
add esp 0xc
mov eax [ ebp + 0x8 ]
push eax
call sub_40c360
add esp 0x4
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
mov [ ebp - 0x101c ] eax
cmp [ ebp - 0x101c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1018 ]
mov [ ebp - 0x1020 ] eax
mov [ ebp - 0x1020 ] 0x1000
jmp r-xdata
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
mov edx [ ebp - 0x1018 ]
mov [ ebp - 0x1024 ] edx
mov [ ebp - 0x1024 ] 0x1000
jmp r-xdata
mov ecx [ ebp - 0x1020 ]
mov [ ebp - 0x1008 ] ecx
cmp [ ebp - 0x1018 ] 0x1000
jl r-xdata
mov ecx [ ebp - 0x1018 ]
sub ecx [ ebp - 0x1008 ]
mov [ ebp - 0x1018 ] ecx
cmp [ ebp - 0x1018 ] 0x0
jg r-xdata
cmp [ rw-data ] 0x5
jne r-xdata
mov eax [ ebp - 0x1024 ]
push eax
mov ecx [ ebp - 0x1014 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_406390
add esp 0xc
mov [ ebp - 0x1008 ] eax
cmp [ ebp - 0x1008 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x1018 ] 0x1000
jl r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40ed80
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x1008 ]
mov [ ebp - 0x101c ] eax
jmp r-xdata
mov [ rw-data ] 0xd
sub_40ec50
push ebp
mov ebp esp
sub esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x100
jge r-xdata
cmp [ ebp + 0x8 ] 0x61
jl r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x8
and edx 0xff
and edx 0xff
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x8000
test ecx ecx
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x7a
jg r-xdata
mov cl [ ebp + 0x8 ]
mov [ ebp - 0x8 ] cl
mov [ ebp - 0x7 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp + 0x8 ]
sar edx 0x8
and edx 0xff
mov [ ebp - 0x8 ] dl
mov al [ ebp + 0x8 ]
mov [ ebp - 0x7 ] al
mov [ ebp - 0x6 ] 0x0
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
mov cx [ eax + edx * 2 ]
and ecx 0x2
mov [ ebp - 0x10 ] ecx
push 0x2
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b180
add esp 0x8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax 0x20
mov [ ebp + 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
push 0x1
push 0x0
push 0x3
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push 0x200
mov edx [ rw-data ]
push edx
call sub_40d830
add esp 0x20
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0xb ]
and ecx 0xff
shl ecx 0x8
or eax ecx
mov eax [ ebp - 0xc ]
and eax 0xff
jmp r-xdata
sub_40ed80
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov eax [ ecx * 4 + rw-data ]
movsx ecx [ eax + edx * 8 + 0x4 ]
and ecx 0x1
test ecx ecx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
movsx edx [ ecx + eax * 8 + 0x4 ]
and edx 0x80
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x8000
jne r-xdata
cmp [ ebp + 0xc ] 0x4000
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov edx [ eax * 4 + rw-data ]
mov al [ edx + ecx * 8 + 0x4 ]
and al 0x7f
mov ecx [ ebp + 0x8 ]
sar ecx 0x5
mov edx [ ebp + 0x8 ]
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx * 8 + 0x4 ] al
jmp r-xdata
mov [ rw-data ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
sar edx 0x5
mov eax [ ebp + 0x8 ]
and eax 0x1f
mov ecx [ edx * 4 + rw-data ]
mov dl [ ecx + eax * 8 + 0x4 ]
or dl 0x80
mov eax [ ebp + 0x8 ]
sar eax 0x5
mov ecx [ ebp + 0x8 ]
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx * 8 + 0x4 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xffffc000
add eax 0x8000
sub_40ee90
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4083e0
add esp 0x4
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
sub_40ef00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
call sub_40ef20
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ef20
push ebp
mov ebp esp
sub esp 0x118
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
push edx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_40f040
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x104
jbe r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x40
mov [ ebp - 0xc ] cl
mov [ ebp - 0xb ] 0x3a
mov [ ebp - 0xa ] 0x2e
mov [ ebp - 0x9 ] 0x0
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x114 ]
push eax
push 0x104
lea ecx [ ebp - 0xc ]
push ecx
call [ GetFullPathNameA@IAT ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov [ rw-data ] 0xf
mov [ rw-data ] 0xd
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
cmp edx [ ebp + 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x114 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_4034b0
add esp 0x8
mov [ rw-data ] 0x22
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x118 ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x118 ] eax
jmp r-xdata
jmp r-xdata
mov [ rw-data ] 0xc
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x118 ]
push edx
call sub_404580
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_40f040
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x40
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] 0x3a
mov [ ebp - 0x6 ] 0x5c
mov [ ebp - 0x5 ] 0x0
lea ecx [ ebp - 0x8 ]
push ecx
call [ GetDriveTypeA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
sub_401620
push ebp
mov ebp esp
push rw-data
push rw-data
call sub_4036a0
add esp 0x8
pop ebp
retn
Ordinal_nNOTES_2001
jmp [ Ordinal_nNOTES_2001@IAT ]
Ordinal_nNOTES_2195
jmp [ Ordinal_nNOTES_2195@IAT ]
Ordinal_nNOTES_224
jmp [ Ordinal_nNOTES_224@IAT ]
Ordinal_nNOTES_223
jmp [ Ordinal_nNOTES_223@IAT ]
Ordinal_nNOTES_2005
jmp [ Ordinal_nNOTES_2005@IAT ]
Ordinal_nNOTES_13
jmp [ Ordinal_nNOTES_13@IAT ]
Ordinal_nNOTES_15
jmp [ Ordinal_nNOTES_15@IAT ]
Ordinal_nNOTES_2040
jmp [ Ordinal_nNOTES_2040@IAT ]
Ordinal_nNOTES_2008
jmp [ Ordinal_nNOTES_2008@IAT ]
Ordinal_nNOTES_2007
jmp [ Ordinal_nNOTES_2007@IAT ]
Ordinal_nNOTES_3817
jmp [ Ordinal_nNOTES_3817@IAT ]
Ordinal_nNOTES_3819
jmp [ Ordinal_nNOTES_3819@IAT ]
Ordinal_nNOTES_3845
jmp [ Ordinal_nNOTES_3845@IAT ]
Ordinal_nNOTES_3828
jmp [ Ordinal_nNOTES_3828@IAT ]
Ordinal_nNOTES_3823
jmp [ Ordinal_nNOTES_3823@IAT ]
Ordinal_nNOTES_3825
jmp [ Ordinal_nNOTES_3825@IAT ]
Ordinal_nNOTES_2145
jmp [ Ordinal_nNOTES_2145@IAT ]
Ordinal_nNOTES_5799
jmp [ Ordinal_nNOTES_5799@IAT ]
Ordinal_nNOTES_2085
jmp [ Ordinal_nNOTES_2085@IAT ]
Ordinal_nNOTES_143
jmp [ Ordinal_nNOTES_143@IAT ]
Ordinal_nNOTES_183
jmp [ Ordinal_nNOTES_183@IAT ]
Ordinal_nNOTES_182
jmp [ Ordinal_nNOTES_182@IAT ]
Ordinal_nNOTES_2033
jmp [ Ordinal_nNOTES_2033@IAT ]
Ordinal_nNOTES_435
jmp [ Ordinal_nNOTES_435@IAT ]
Ordinal_nNOTES_707
jmp [ Ordinal_nNOTES_707@IAT ]
Ordinal_nNOTES_2048
jmp [ Ordinal_nNOTES_2048@IAT ]
Ordinal_nNOTES_2050
jmp [ Ordinal_nNOTES_2050@IAT ]
sub_403340
push ebp
mov ebp esp
push 0x1
call sub_403350
add esp 0x4
pop ebp
retn
sub_403880
push ebp
mov ebp esp
call sub_403340
movsx eax [ rw-data ]
test eax eax
je r-xdata
pop ebp
retn
call sub_407aa0
sub_403990
push ebp
mov ebp esp
push 0x40
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4038a0
add esp 0xc
pop ebp
retn
sub_4049b0
push ebp
mov ebp esp
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_4049d0
add esp 0x8
pop ebp
retn
sub_405a23
mov esp [ ebp - 0x18 ]
mov edx [ ebp - 0x20 ]
push edx
call sub_407bb0
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405a70
push ebp
mov ebp esp
cmp [ rw-data ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40bef0
add esp 0x4
push 0xff
call [ ExitProcess@IAT ]
call sub_40bea0
sub_405c30
push ebp
mov ebp esp
call [ DebugBreak@IAT ]
pop ebp
retn
sub_407730
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx - 0x4 ]
pop ebp
retn
sub_407770
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ax [ ecx - 0x4 ]
pop ebp
retn
sub_407b90
push ebp
mov ebp esp
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_407bd0
add esp 0xc
pop ebp
retn
sub_407bb0
push ebp
mov ebp esp
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_407bd0
add esp 0xc
pop ebp
retn
sub_408a10
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn
sub_40bcec
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40bd76
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40bcec
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40bda2
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_40be81
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_40bd0e
add esp 0x8
pop ebp
retn 0x4
sub_40c792
add [ 0x5050105 ] eax
add eax 0x5050502
add eax 0xcc040305
int3
sub_40d459
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ ebx ]
int3
sub_40d800
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
push 0xfffffffd
call sub_40d090
add esp 0x4
mov [ rw-data ] 0x1
sub_40d976
mov eax 0x1
retn
sub_40da6c
mov eax 0x1
retn
sub_40e954
mov eax 0x1
retn
sub_40e9d0
push ebp
mov ebp esp
push 0x2
call sub_405a40
add esp 0x4
pop ebp
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40eee0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_40ee90
add esp 0x4
pop ebp
retn
