sub_4013e8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc edx [ eax + eax * 2 ]
xor [ eax + eax * 2 ] 0x0
pushad
cmp [ eax ] al
cmp [ eax ] 0x40
add al ah
cmp [ eax ] al
push eax
cmp [ eax ] eax
mov al 0x39
inc eax
add [ eax ] dl
cmp al [ eax ]
jo rwxdata
push eax
dec ecx
pop edi
dec esp
dec ecx
dec esi
dec ebx
inc ebp
push edx
push ebx
pop edi
push edi
dec ecx
dec esi
dec esp
dec edi
inc edi
add [ eax ] al
add [ ebx + 0x45 ] dl
dec esi
inc esp
pop edi
dec ebp
inc ebp
push ebx
push ebx
inc ecx
inc edi
inc ebp
add [ eax ] al
add [ eax ] al
inc esi
inc ecx
dec esp
dec esp
dec ecx
dec esi
dec esp
dec edi
push esi
inc ebp
add [ eax ] al
inc ebx
push edi
dec ecx
dec esi
inc esp
dec edi
push edi
push ebx
push ebx
pop ecx
push ebx
push esp
inc ebp
dec ebp
push edx
dec edi
dec edi
push esp
add [ eax ] al
and al 0x4b
jne rwxdata
inc eax
add al dh
cmp al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
dec edi
dec edi
push eax
pop edi
dec esp
dec ecx
dec esi
dec ebx
inc ebp
push edx
pop edi
dec ebx
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
pop edi
push edi
dec ecx
dec esi
xor esi [ edx ]
pop edi
inc ecx
push esi
inc ebp
rol al 0xc0
dec ecx
inc esi
add eax 0xbfc0c0c8
push esi
dec ecx
rol al 0xc0
dec ebx
int3
jge rwxdata
sar [ edi - 0x3f3fb6aa ] 0xc0
rol al 0xc0
xor eax 0xc40209c4
rcl [ esi - 0x36d4b9b3 ] 0xc0
rcl [ eax - 0x3e7ab9b3 ] 0xc0
rcl [ eax - 0x3f42a941 ] 0xc0
shr [ eax - 0x3f3f3f39 ] 0x37
xor esi [ edx - 0x61 ]
jae rwxdata
in al 0xfb
mov edi 0xc0ca03f6
rcl [ eax - 0x3fe2a941 ] 0xc0
ror [ ebp + 0x4d ] 0x2a
mov esi 0x2891bfbf
rcr [ eax + 0x5d56bf90 ] 0xc0
rol al 0x49
inc esi
add ecx edx
rol al 0xa8
jpe rwxdata
test [ ebx ] 0xca
rol al 0x90
mov edi 0xc0c01d56
ror bh 0xf7
xchg edi eax
les ecx [ ecx - 0x3c ]
jb rwxdata
mov edi 0xc067d0bf
rol [ eax - 0x2 ] 0xb4
0xc0c0
rol al 0xc0
rol al 0xa1
and ah dh
dec esi
rol eax 0x11
sub [ ecx + 0x3c ] 0xfbdec0d5
lodsb [ esi ]
and eax 0x98ccc0d9
lodsd [ esi ]
stosb [ edi ]
ffree st0
inc ecx
insd
lahf
rol al 0xbf
xor eax 0x4cf6bf6f
rol eax 0xc0
dec edi
inc esi
add edx eax
rol al 0x28
jno rwxdata
pop es
rol ecx 0xc0
sar [ edi - 0x30ffbaf0 ] 0x45
and al ah
rol al 0x7
inc ebp
je rwxdata
sub bh [ esi + 0x2891bfbf ]
rol al 0x4d
inc esi
push eax
rol eax 0xc0
nop
dec ebp
inc esi
add eax 0x90c0c0c2
mov edi 0xc0c0e956
rol [ edi ] 0x46
dec esp
rol eax 0xc0
mov edi 0x7bfbfbf
inc ebp
test [ esi - 0x3f3f4041 ] bh
rol al 0x6
inc esi
clc
enter 0xc0c0 0xc1
inc eax
sub_401571
sar dl 0x62
xor [ edi - 0x33 ] dh
ror [ edx - 0x58 ] 0x7c
cmp dl cl
rol [ 0xffffffffc9dc060d ] 0xc0
pop ss
pop ds
insd
mov [ ecx - 0x40 ] ebx
rol al 0xc0
rcr [ edi + 0x34c07f43 ] 0xdb
mov edi 0x3f6bf77
0xc0c0
sub_4015ae
mov al [ 0xffffffffe4184f28 ]
sti
mov edi 0xc0ca03f6
rcl [ eax - 0x3fe2a941 ] 0xc0
ror [ ebp + 0x4d ] 0x2a
mov esi 0x2891bfbf
test [ ebx ] 0xca
rol al 0x90
mov edi 0xc0c01d56
ror bh 0xf7
xchg edi eax
les ecx [ ecx - 0x3c ]
jb rwxdata
mov edi 0xc067d0bf
rol [ eax - 0x2 ] 0xb4
0xc0c0
rol al 0xbf
xor eax 0x4cf6bf6f
rol eax 0xc0
dec edi
inc esi
add edx eax
rol al 0x28
jno rwxdata
pop es
rol ecx 0xc0
sar [ edi - 0x30ffbaf0 ] 0x45
and al ah
rol al 0x7
inc ebp
je rwxdata
sub bh [ esi + 0x2891bfbf ]
rol al 0x4d
inc esi
push eax
rol eax 0xc0
nop
dec ebp
inc esi
add eax 0x90c0c0c2
mov edi 0xc0c0e956
rol [ edi ] 0x46
dec esp
rol eax 0xc0
mov edi 0x7bfbfbf
inc ebp
test [ esi - 0x3f3f4041 ] bh
rol al 0x6
inc esi
clc
enter 0xc0c0 0xc1
inc eax
sub_401699
pop es
inc ebp
jo rwxdata
sar [ edi - 0x94029cb ] 0x1
retn 0xc0c0
mov edi 0x332b23bf
jge rwxdata
mov edi 0xbfba70f5
mov edi 0xbd85454d
mov edi 0xbf9690bf
push esi
mov dh 0xca
rol al 0x45
add bh cl
inc esp
mov eax ebx
rol al 0xab
jpo rwxdata
inc esi
scasd [ edi ]
0xc0c0
mov edi 0x8549c196
mov esp 0x98450726
mov esi 0xc0c2bfbf
dec ebp
inc ebp
test [ ebp - 0x406f4041 ] edi
xchg esi eax
fld [ ebx - 0x48 ]
mov edi 0x454dda35
test [ ebp - 0x406f4041 ] edi
xchg esi eax
fxch st3
add [ 0xffffffffc20ca9c5 ] dh
rol al 0x4b
or ah 0x4b
ror [ ebx - 0x40 ] 0x49
inc ebp
pushfd
mov esi 0x454dbfbf
cwde
mov esi 0x4f90bfbf
inc esi
rol eax 0xc0
sub dl al
dec ebp
inc ebp
cwde
mov esi 0xbf90bfbf
xor eax 0xc596bfbc

dec ebp
test [ esi + 0x4e7bbfbf ] bh
dec esp
rol eax 0xc0
rol [ ss : edi ] cl
inc ebp
je rwxdata
retn 0xd1ab
mov edi 0xc0aa20bf
shl [ ebx + 0x9 ] 0x49
dec ebp
test [ esi - 0x2b24041 ] bh
test [ ebp - 0x6e684041 ] edi
dec ebp
sub_401703
xchg ecx eax
mov edi 0x4926d596
inc ebp
0x2abfbfbe 0x2ac0
shr [ edx ] 0xc2
mov edi 0x8549c196
mov esp 0x98450726
mov esi 0xc0c2bfbf
dec ebp
inc ebp
test [ ebp - 0x406f4041 ] edi
xchg esi eax
fld [ ebx - 0x48 ]
mov edi 0x454dda35
test [ ebp - 0x406f4041 ] edi
xchg esi eax
fxch st3
add [ 0xffffffffc20ca9c5 ] dh
rol al 0x4b
or ah 0x4b
ror [ ebx - 0x40 ] 0x49
inc ebp
pushfd
mov esi 0x454dbfbf
cwde
mov esi 0x4f90bfbf
inc esi
rol eax 0xc0
sub dl al
dec ebp
inc ebp
cwde
mov esi 0xbf90bfbf
xor eax 0xc596bfbc

sub_401858
ror bh 0x44
rol eax 0xc0
test eax 0xbfbfbf73
test eax 0xc0c0c05d
test al 0xdb
rol al 0xc0
or [ edi - 0x7c7a7172 ] 0xffffff94
pushad
xor edi [ gs : edx + 0x65 ]
sub [ eax - 0x78 ] esp
xchg esp eax
xchg esp eax
nop
outsd
jno rwxdata
jae rwxdata
jo rwxdata
shl [ 0xffffffffc1c028a5 ] 0x1
rol al 0x4d
inc ebp
je rwxdata
iretd
inc eax
0xcacd
xchg esp eax
jns rwxdata
mov edi 0x35bf90bf
mov esp 0xbf96c02a
push esi
movsd [ edi ] [ esi ]
rol al 0xc0
xchg esi eax
mov esp 0xc0c080f9
0xcacd
ror [ ebp - 0xb ] 0x74
mov ebx 0xfd4dbfbf
je rwxdata
inc ebx
add eax ecx
inc ecx
mov ecx 0xc0c0c1c0
xor eax 0xc1c028a7
rol al 0x97
mov edi 0xc12abc35
xchg esi eax
mov edi 0xc0c0a556
shl [ ebx + 0x9 ] 0x96
jae rwxdata
mov edi 0x34e7b3bf
int 0x9e
pop es
inc ebp
je rwxdata
xchg edi eax
mov edi 0xc0c1c156
dec ebp
inc esi
sub ecx ecx
rol al 0x90
xchg edi eax
xchg esi eax
rol [ ebx + 0x7 ] 0xd0
inc ebx
add ecx eax
inc ebx
mov ecx 0x28a535d0
rol cl 0xc0
ror [ ebp + 0x45 ] 0x74
mov edx 0xbf90bfbf
xor eax 0x96c02abc
mov edi 0xc0c0a556
rcl [ esi - 0x3f7f0644 ] 0xc0
push esi
rol ecx 0xc0
mov edi 0xc03570bf
shr [ ebx - 0x3bd561c1 ] 0x4d
test [ eax - 0x43ca4070 ] edi
sub al al
xchg esi eax
mov edi 0xc0c0a556
rol [ ebp ] 0x34
sub [ edx ] ch
sub [ eax ] 0xc0
rol al 0x1
sar [ edi - 0x3fd547cb ] 0xbf
xchg esi eax
popad
dec ebx
mov eax 0x90b835bf
mov edi 0xc02abc35
xchg esi eax
mov edi 0xc0c0a556
ror bl 0x0
xor eax 0x40c028cd
rol al 0x2a
rcl [ edi - 0x549a6941 ] 0x76
xchg edi eax
dec ebx
lea edi [ eax + 0x2b464d96 ]
leave
rol al 0x90
xchg edi eax
xchg edi eax
mov edi 0xc0c1c556
rol [ ebx + 0x7 ] 0xd0
inc ebx
test eax 0x9fa835d0
xchg edi eax
mov edi 0x464fbc35
popad
rol eax 0xc0
xchg esi eax
mov edi 0xc0289f17
inc eax
rol al 0x2a
rcl [ edi - 0x409a6941 ] 0x35
mov esp 0x7c996bf
inc esi
popad
rol eax 0xc0
rol al 0xc0
sar [ edi - 0x40438b0b ] 0xbf
mov edi 0xc0c0e556
rol [ ebx + 0x45 ] 0x84
mov esi 0xa9c1bfbf
mov bl 0xbb
mov edi 0xc40209bf
rcl [ ebp - 0x686953b5 ] 0x4b
xor eax 0xd03d4bc8
dec ebx
sub_4018a1
mov edi 0xc0c0a1f6
sar [ edi - 0x3f3fe2aa ] 0xc0
xchg ecx eax
xchg ebx eax
xchg edx eax
xchg edi eax
mov edi 0xbf979010
xor eax 0x96c12abc
mov edi 0xc0c0a556
rol [ ebp ] 0xcf
inc esp
mov cl al
rol al 0x43
pop es
les edx [ edi - 0x40683ed6 ]
xor eax 0x96c02abc
mov edi 0xc0c0a556
rol [ ecx + 0x3f ] 0xbd
int 0xca
int 0xca
xor eax 0x43c5abc2
pop es
shr [ ebx + 0x7f419fa1 ] 0x75
jo rwxdata
sub al al
xchg esi eax
pushad
iretd
jae rwxdata
mov edi 0x34e7b3bf
int 0x9e
pop es
inc ebp
je rwxdata
mov edi 0xc0c0a556
rcl [ esi - 0x3f7f0644 ] 0xc0
ror [ ebp - 0xb ] 0x74
mov ebx 0xfd4dbfbf
je rwxdata
xchg edi eax
mov edi 0xc0c1c156
xchg esi eax
dec ebp
inc esi
sub ecx ecx
rol al 0x90
xchg edi eax
rol [ ebx + 0x7 ] 0xd0
inc ebx
add ecx eax
inc ebx
mov ecx 0x28a535d0
rol cl 0xc0
ror [ ebp + 0x45 ] 0x74
mov edx 0xbf90bfbf
xor eax 0x96c02abc
push esi
rol ecx 0xc0
mov edi 0xc03570bf
shr [ ebx - 0x3bd561c1 ] 0x4d
test [ eax - 0x43ca4070 ] edi
sub al al
xchg esi eax
mov edi 0xc0c0a556
rol [ ebp ] 0x34
sub [ edx ] ch
sub [ eax ] 0xc0
rol al 0x1
sar [ edi - 0x3fd547cb ] 0xbf
xchg esi eax
popad
dec ebx
mov eax 0x90b835bf
mov edi 0xc02abc35
xchg esi eax
mov edi 0xc0c0a556
ror bl 0x0
xor eax 0x40c028cd
rol al 0x2a
rcl [ edi - 0x549a6941 ] 0x76
xchg edi eax
dec ebx
lea edi [ eax + 0x2b464d96 ]
leave
rol al 0x90
xchg edi eax
xchg edi eax
mov edi 0xc0c1c556
rol [ ebx + 0x7 ] 0xd0
inc ebx
test eax 0x9fa835d0
xchg edi eax
mov edi 0x464fbc35
popad
rol eax 0xc0
xchg esi eax
mov edi 0xc0289f17
inc eax
rol al 0x2a
rcl [ edi - 0x409a6941 ] 0x35
mov esp 0x7c996bf
inc esi
popad
rol eax 0xc0
rol al 0xc0
sar [ edi - 0x40438b0b ] 0xbf
mov edi 0xc0c0e556
rol [ ebx + 0x45 ] 0x84
mov esi 0xa9c1bfbf
mov bl 0xbb
mov edi 0xc40209bf
rcl [ ebp - 0x686953b5 ] 0x4b
xor eax 0xd03d4bc8
dec ebx
sub_401a6b
dec eax
mov [ ebx + 0x6 ] 0xc10743c1
inc ebx
test eax 0x6acabc1
mov eax 0xcfc6f6cf
test [ esi + 0x99e9fc1 ] 0x95c0cc02
dec ebx
lodsb [ esi ]
inc ecx
add al 0xac
mov esi 0x4b20bfbf
xor eax 0xb44507c8
mov esi 0xc0c1bfbf
rol al 0xbf
xor eax 0xb8454fd0
mov esi 0x4507bfbf
lodsb [ esi ]
mov esi 0xc0f4bfbf
rol al 0x7
inc ebp
mov al 0xbe
mov edi 0xc0c0c0bf
shl [ ebx ] 0x49
test [ eax + 0x43bc8549 ] edi
cmp eax 0xdf35c0cc
dec ebp
inc ebp
lodsb [ esi ]
mov esi 0x2a90bfbf
shr [ edx ] 0xc0
dec ebp
inc ebp
mov ah 0xbe
mov edi 0xc02a90bf
mov edi 0xc0c05956
rol [ ebx - 0x48 ] 0xc0
fisubr [ ss : edx ]
sar [ edi + 0x35bfd835 ] 0xd4
mov edi 0x3d43d035
int3
sub_402440
pop eax
popad
inc edx
insb
adc ecx edx
test eax eax
test al 0xfc
adc bh [ ebx - 0x3f7635ed ]
adc al 0xba
pop esi
je rwxdata
mov esi 0xfb8474a8
0xc04d
0xc08d
sub_402f90
sub esp 0x10
push ebx
mov ebx [ esp + 0x2c ]
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
imul edi ebx
mov edx ebx
mov [ esp + 0x18 ] ecx
neg edx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x2c ]
mov [ esp + 0x10 ] 0x0
lea eax [ ecx + 0x4 ]
add edi edx
mov [ esp + 0x14 ] 0x4
jmp rwxdata
mov esi [ esp + 0x34 ]
mov edx [ esp + 0x10 ]
imul esi ebx
lea ecx [ ecx + edx * 8 + 0x2c ]
mov ebp ebx
mov edx eax
mov eax [ esp + 0x28 ]
neg ebp
mov [ esp + 0x38 ] ecx
mov [ esp + 0x30 ] edx
add esi eax
mov [ esp + 0x2c ] 0x4
mov eax [ esp + 0x2c ]
add edx 0x2
add esi ebp
dec eax
mov [ esp + 0x30 ] edx
mov [ esp + 0x2c ] eax
jne rwxdata
mov eax [ esp + 0x24 ]
test eax eax
je rwxdata
cmp [ edx ] 0x1
jne rwxdata
mov ecx [ esp + 0x14 ]
mov eax edx
mov edx [ esp + 0x1c ]
add edi edx
dec ecx
mov [ esp + 0x14 ] ecx
jne rwxdata
mov eax [ esp + 0x10 ]
mov [ ecx - 0x4 ] esi
mov [ ecx ] edi
inc eax
add ecx 0x8
mov [ esp + 0x10 ] eax
mov [ esp + 0x38 ] ecx
mov eax [ eax + 0x4 ]
lea edx [ edi + ebx ]
lea ecx [ esi + ebx ]
push edx
push ecx
push edi
push esi
push eax
call [ Rectangle@IAT ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x20
sub_403070
push esi
mov esi ecx
call sub_403400
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_403118 ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0xe ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4c ] ecx
sub_403130
push esi
mov esi ecx
call sub_403400
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_4031dc ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x14 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x4c ] ecx
sub_4031ec
nop
nop
nop
nop
push esi
mov esi ecx
call sub_403400
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0x18 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x3
pop esi
retn 0x10
sub_403220
push esi
mov esi ecx
call sub_403400
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x1a ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov eax 0x3
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
sub_403280
push esi
mov esi ecx
call sub_403400
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x20 ] ax
mov eax 0x3
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0x10 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
sub_4032e0
push esi
mov esi ecx
call sub_403400
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x6 ] ax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0x18 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x14 ] ax
mov [ esi + 0x4c ] 0x3
pop esi
retn 0x10
sub_403340
push esi
mov esi ecx
call sub_403400
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_4033e4 ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x18 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x16 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x4c ] ecx
sub_4034c0
push 0xffffffff
push sub_405458
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x12c
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x138 ] 0x0
je rwxdata
xor eax eax
push rwxdata
push rwxdata
push rwxdata
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
push 0x408
push rwxdata
lea eax [ esp + 0x34 ]
push rwxdata
push eax
call [ sprintf@IAT ]
add esp 0x10
lea ecx [ esp + 0x8 ]
mov [ esp + 0x138 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x130 ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x138 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x12c ]
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
push eax
mov ecx esi
mov [ esp + 0x13c ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x13c ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
sub_403680
push 0xffffffff
push sub_405478
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_403610
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_403730
push 0xffffffff
push sub_40549a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x54
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_4037d0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403b50
push 0xffffffff
push sub_4054ba
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x48
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403cb0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403bf0
push ebx
push esi
xor ebx ebx
push edi
xor eax eax
mov dl 0x1
mov [ ecx + rwxdata ] bl
lea esi [ eax + eax * 4 ]
lea edi [ ecx + eax ]
mov [ edi + esi * 2 + rwxdata ] dl
jmp rwxdata
cmp eax 0x18
je rwxdata
inc eax
cmp eax 0x19
jl rwxdata
inc ecx
cmp ecx 0xb
jl rwxdata
xor ecx ecx
pop edi
pop esi
pop ebx
retn
sub_403c30
mov eax [ esp + 0x4 ]
cmp eax 0x6
ja rwxdata
xor eax eax
retn
jmp [ eax * 4 + jump_table_403c90 ]
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
sub_403cb0
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov [ esi + 0x44 ] 0x0
call sub_403bf0
call [ rand@IAT ]
and eax 0x80000007
jns rwxdata
mov [ rwxdata ] eax
mov eax esi
pop esi
retn
dec eax
or eax 0xfffffff8
inc eax
sub_403d30
push ecx
push ebx
push ebp
push esi
push edi
xor esi esi
mov dl 0x1
mov [ esp + 0x13 ] 0x0
mov edi 0x17
cmp esi 0x9
jne rwxdata
lea ecx [ edi + edi * 4 ]
xor ebp ebp
lea edx [ edi + ecx * 2 + rwxdata ]
mov [ esp + 0x13 ] 0x0
jmp rwxdata
inc esi
cmp esi 0xb
jl rwxdata
mov eax 0x1010101
mov ecx rwxdata
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] ax
mov [ rwxdata ] al
mov [ esp + 0x13 ] 0x1
cmp ebp 0xa
jne rwxdata
dec edi
test edi edi
jg rwxdata
cmp [ esi + rwxdata ] dl
je rwxdata
mov bl [ ecx + eax - 0xb ]
mov [ ecx + eax ] bl
inc eax
cmp eax 0xb
jl rwxdata
sub ecx 0xb
cmp ecx rwxdata
jge rwxdata
mov al [ esp + 0x13 ]
test al al
je rwxdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
inc ebp
cmp ebp 0xb
jl rwxdata
mov ecx edx
mov eax 0x1010101
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] ax
mov [ ecx + 0xa ] al
lea eax [ edi - 0x1 ]
test eax eax
jl rwxdata
xor eax eax
cmp [ edx + ebp ] 0x1
je rwxdata
jmp rwxdata
lea ecx [ eax + eax * 4 ]
lea esi [ eax + 0x1 ]
lea ecx [ eax + ecx * 2 + rwxdata ]
mov bl [ ecx + eax - 0xb ]
mov [ ecx + eax ] bl
inc eax
cmp eax 0xb
jl rwxdata
sub ecx 0xb
dec esi
jne rwxdata
xor eax eax
sub_403e10
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_405538
push eax
mov [ fs : 0x0 ] esp
mov al [ ecx + 0x44 ]
sub esp 0x44
test al al
push ebx
push ebp
push esi
push edi
mov bl 0x1
jne rwxdata
xor ebp ebp
mov [ esp + 0x24 ] rwxdata
mov [ esp + 0x28 ] ebp
lea ecx [ esp + 0x44 ]
mov [ esp + 0x5c ] ebp
call Ordinal_MFC42_323
push ebp
mov [ esp + 0x60 ] bl
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_1640
mov eax [ rwxdata ]
mov esi [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
sub eax esi
sub ecx edx
push eax
mov eax [ esp + 0x68 ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call [ CreateCompatibleBitmap@IAT ]
push eax
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_1641
mov ebx [ esp + 0x28 ]
mov edx [ esp + 0x48 ]
lea eax [ esp + 0x24 ]
neg eax
sbb eax eax
and eax ebx
push eax
push edx
call Ordinal_MFC42_5785
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov edi [ rwxdata ]
sub eax ecx
mov ecx [ rwxdata ]
push 0xffffff
sub ecx edi
push eax
push ecx
push ebp
push ebp
lea ecx [ esp + 0x58 ]
call Ordinal_MFC42_2753
mov [ esp + 0x20 ] ebp
mov [ esp + 0x1c ] rwxdata
mov edi rwxdata
mov [ esp + 0x18 ] ebp
mov [ esp + 0x14 ] edi
mov esi [ CreateSolidBrush@IAT ]
push 0x2b86f5
mov [ esp + 0x60 ] 0x3
call esi
push eax
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_1641
mov [ esp + 0x40 ] ebp
mov [ esp + 0x3c ] edi
push 0x2b0e91
mov [ esp + 0x60 ] 0x4
call esi
push eax
lea ecx [ esp + 0x40 ]
call Ordinal_MFC42_1641
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] edi
push 0x570e0f
mov [ esp + 0x60 ] 0x5
call esi
push eax
lea ecx [ esp + 0x38 ]
call Ordinal_MFC42_1641
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] edi
push 0x218ec7
mov [ esp + 0x60 ] 0x6
call esi
push eax
lea ecx [ esp + 0x30 ]
call Ordinal_MFC42_1641
push 0x212217
push 0x2
push ebp
call [ CreatePen@IAT ]
push eax
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_1641
lea edx [ esp + 0x1c ]
lea ecx [ esp + 0x44 ]
push edx
call Ordinal_MFC42_5788
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x44 ]
push eax
call Ordinal_MFC42_5787
mov ecx [ rwxdata ]
push ecx
call sub_403c30
mov edx [ rwxdata ]
mov ecx [ rwxdata ]
add esp 0x4
push edx
mov edx [ eax + 0x4c ]
push ecx
mov ecx [ eax + 0x48 ]
push 0x19
push edx
mov edx [ rwxdata ]
push ecx
mov ecx [ rwxdata ]
push edx
lea edx [ esp + 0x5c ]
push ecx
push edx
mov ecx eax
call sub_402f90
xor esi esi
mov eax [ ecx + 0x20 ]
push rwxdata
push eax
mov [ ecx + 0x44 ] bl
call [ GetClientRect@IAT ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
add ecx 0x64
mov [ rwxdata ] edx
mov [ rwxdata ] ecx
mov edx [ esp + 0x10 ]
add edi 0x19
inc edx
cmp edi 0x113
mov [ esp + 0x10 ] edx
jl rwxdata
cmp esi 0x16
jne rwxdata
mov edx [ esp + 0x10 ]
cmp [ edx ] 0x0
jne rwxdata
inc esi
cmp esi 0x18
jl rwxdata
cmp esi 0x13
jl rwxdata
lea eax [ esp + 0x3c ]
push eax
jmp rwxdata
lea eax [ esi + esi * 4 ]
xor edi edi
lea ecx [ esi + eax * 2 + rwxdata ]
mov [ esp + 0x10 ] ecx
call sub_403d30
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov edx [ rwxdata ]
mov ebx [ rwxdata ]
mov esi [ esp + 0x48 ]
sub ecx eax
lea eax [ esp + 0x44 ]
sub edx ebx
neg eax
sbb eax eax
push 0xcc0020
and eax esi
push ebp
push ebp
push eax
push ecx
mov ecx [ esp + 0x78 ]
push edx
push ebp
mov edx [ ecx + 0x4 ]
push ebp
push edx
call [ BitBlt@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x44 ]
call Ordinal_MFC42_2405
mov esi rwxdata
mov [ esp + 0x2c ] esi
lea ecx [ esp + 0x2c ]
mov [ esp + 0x5c ] 0x7
call Ordinal_MFC42_2414
mov edi rwxdata
mov [ esp + 0x34 ] esi
mov [ esp + 0x2c ] edi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x5c ] 0x8
call Ordinal_MFC42_2414
mov [ esp + 0x34 ] edi
mov [ esp + 0x3c ] esi
lea ecx [ esp + 0x3c ]
mov [ esp + 0x5c ] 0x9
call Ordinal_MFC42_2414
mov [ esp + 0x3c ] edi
mov [ esp + 0x14 ] esi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x5c ] 0xa
call Ordinal_MFC42_2414
mov [ esp + 0x14 ] edi
mov [ esp + 0x1c ] esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x5c ] 0xb
call Ordinal_MFC42_2414
lea ecx [ esp + 0x44 ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x5c ] 0x0
call Ordinal_MFC42_640
mov [ esp + 0x24 ] esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x5c ] 0xc
call Ordinal_MFC42_2414
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x4
cmp esi 0xf
jl rwxdata
cmp esi 0x15
jg rwxdata
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5787
mov edx [ rwxdata ]
mov ebp [ rwxdata ]
lea eax [ esi + esi * 4 + 0x5 ]
lea ebx [ edi + ebp + 0x19 ]
add ebp edi
lea ecx [ edx + eax * 4 ]
add eax ecx
lea ecx [ esi + esi * 4 ]
push eax
mov eax [ esp + 0x4c ]
lea edx [ edx + ecx * 4 ]
push ebx
add ecx edx
push ecx
push ebp
push eax
call [ Rectangle@IAT ]
xor ebp ebp
cmp esi 0x14
jg rwxdata
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5787
lea edx [ esp + 0x2c ]
push edx
sub_404200
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] 0x1
lea ebx [ edi + esi - 0x1 ]
call [ rand@IAT ]
cdq
mov ecx 0x7
idiv ecx
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0xf
mov [ ebp + 0x8 ] eax
mov [ rwxdata ] edx
jl rwxdata
cmp al [ ebx - 0x1 ]
je rwxdata
mov eax [ ebp - 0x4 ]
dec ebx
mov [ eax + 0x44 ] 0x0
mov al [ ebx ]
test al al
je rwxdata
jmp rwxdata
call sub_403bf0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] 0x1
lea eax [ esi + esi ]
push eax
push 0x0
call [ GlobalAlloc@IAT ]
mov edx eax
xor eax eax
test esi esi
mov [ ebp + 0x8 ] edx
jle rwxdata
mov [ ebp - 0x8 ] edi
mov ebx edi
xor edi edi
test esi esi
jle rwxdata
mov ecx edx
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x44 ]
test cl cl
je rwxdata
mov esi edx
mov bl [ eax + edi ]
add ecx 0x2
shr bl 0x4
add bl 0x1e
mov [ ecx - 0x2 ] bl
mov bl [ eax + edi ]
and bl 0xf
add bl 0x1e
inc eax
mov [ ecx - 0x1 ] bl
cmp eax esi
jl rwxdata
pop edi
pop esi
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax 0x9
test eax eax
mov eax [ ebp - 0x8 ]
inc eax
inc eax
inc eax
add eax 0x8
sub eax 0x7
sub eax 0x1
dec eax
mov ebx 0x23
add eax ebx
mov ecx eax
call ecx
mov edx [ ebp + 0x8 ]
push 0x0
call [ exit@IAT ]
mov al [ esi ]
add esi 0x2
xor al 0xb4
mov [ esi - 0x2 ] al
add al 0x2
shl al 0x4
mov [ ebx ] al
mov cl [ esi - 0x1 ]
sub cl 0x1e
xor cl al
mov eax [ ebp + 0xc ]
mov [ ebx ] cl
inc ebx
inc edi
cmp edi eax
jl rwxdata
mov ecx [ ebp - 0x4 ]
push 0x4
push 0x8
call sub_4041e0
test al al
je rwxdata
mov edx [ ebp + 0x8 ]
sub_404340
mov eax [ rwxdata ]
push ebp
push esi
push edi
mov edi [ rwxdata ]
mov ebp ecx
add edi 0x19
push eax
mov [ rwxdata ] edi
call sub_403c30
mov esi eax
add esp 0x4
mov ecx esi
mov ax [ esi + 0x24 ]
mov edx [ esi ]
push eax
push 0x0
push 0x0
push 0x0
call [ edx ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov eax [ esi + 0x4c ]
push ecx
mov ecx [ esi + 0x48 ]
push edx
mov edx [ rwxdata ]
push 0x19
push eax
mov eax [ rwxdata ]
push ecx
push edx
push eax
push 0x0
mov ecx esi
call sub_402f90
xor esi esi
xor esi esi
add esi 0x8
cmp esi 0x20
jl rwxdata
mov edx [ rwxdata ]
push edx
call sub_403c30
mov ecx [ eax + esi + 0x28 ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_403c30
mov ecx [ eax + esi + 0x2c ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
add esi 0x8
shr eax 0x1f
add edx eax
add esp 0x8
add edi edx
cmp esi 0x20
lea ecx [ edx + edx * 4 ]
mov [ edi + ecx * 2 + rwxdata ] 0x0
jl rwxdata
call [ rand@IAT ]
lea eax [ eax + eax * 2 ]
mov ecx 0x7
cdq
idiv ecx
push edx
mov [ rwxdata ] edx
call sub_403c30
mov eax [ rwxdata ]
mov edi [ rwxdata ]
sub eax edi
add esp 0x4
cdq
sub eax edx
mov edx [ rwxdata ]
sar eax 0x1
sub eax 0xc
pop edi
pop esi
mov [ rwxdata ] eax
mov [ rwxdata ] edx
pop ebp
retn 0x4
mov ecx [ rwxdata ]
push ecx
call sub_403c30
mov ecx [ eax + esi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_403c30
mov ecx [ eax + esi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
add esp 0x8
shr eax 0x1f
add edx eax
add edi edx
lea ecx [ edx + edx * 4 ]
mov al [ edi + ecx * 2 + rwxdata ]
test al al
je rwxdata
mov eax [ rwxdata ]
cmp eax 0xa
jle rwxdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x20 ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx ebp
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebp
retn 0x4
cmp eax 0x64
jge rwxdata
push 0x0
mov ecx ebp
call sub_404760
sub_404520
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call Ordinal_MFC42_4464
cmp eax 0xffffffff
jne rwxdata
mov [ rwxdata ] 0x0
mov ecx [ esi + 0x20 ]
push 0x0
push 0x96
push 0x1
push ecx
call [ SetTimer@IAT ]
lea edx [ esp + 0x8 ]
push edx
call [ time@IAT ]
lea eax [ esp + 0xc ]
push eax
call [ gmtime@IAT ]
mov ecx [ eax ]
push ecx
call [ srand@IAT ]
add esp 0xc
xor eax eax
pop esi
retn 0x4
or eax eax
pop esi
retn 0x4
sub_404580
mov eax [ rwxdata ]
push ebx
push esi
push edi
mov ebx ecx
push eax
call sub_403c30
mov edx [ esp + 0x14 ]
mov ecx eax
add esp 0x4
lea eax [ edx - 0x25 ]
cmp eax 0x3
ja rwxdata
mov ecx ebx
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
jmp [ eax * 4 + jump_table_40473c ]
mov ax [ ecx + 0x24 ]
inc ax
movsx eax ax
cdq
idiv [ ecx + 0x50 ]
mov [ ecx + 0x24 ] dx
mov ecx ebx
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jle rwxdata
xor esi esi
xor edi edi
add eax 0x19
mov ecx ebx
mov [ rwxdata ] eax
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
sub eax 0x19
add esi 0x8
cmp esi 0x20
jl rwxdata
lea eax [ edx + edx * 4 ]
add edi edx
mov cl [ edi + eax * 2 + rwxdata ]
test cl cl
jne rwxdata
add edi 0x8
cmp edi 0x20
jl rwxdata
lea eax [ edx + edx * 4 ]
add esi edx
mov cl [ esi + eax * 2 + rwxdata ]
test cl cl
jne rwxdata
mov ecx [ rwxdata ]
push ecx
call sub_403c30
mov ecx [ eax + esi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_403c30
mov ecx [ eax + esi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
lea ecx [ edi - 0x1 ]
shr eax 0x1f
add esp 0x8
add edx eax
test ecx ecx
jl rwxdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jge rwxdata
add [ rwxdata ] 0x19
mov ecx [ rwxdata ]
push ecx
call sub_403c30
mov ecx [ eax + edi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov esi edx
call sub_403c30
mov ecx [ eax + edi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
lea ecx [ esi + 0x1 ]
shr eax 0x1f
add esp 0x8
add edx eax
cmp ecx 0xa
jg rwxdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jle rwxdata
sub [ rwxdata ] 0x19
sub eax 0x19
mov ecx ebx
mov [ rwxdata ] eax
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
add eax 0x19
add eax 0x19
mov [ rwxdata ] eax
sub eax 0x19
sub_404760
sub esp 0x16c
lea eax [ esp + 0x2c ]
push ebx
push esi
mov ebx ecx
push edi
mov ecx 0x8
mov esi rwxdata
lea edi [ esp + 0x14 ]
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
movsb [ edi ] [ esi ]
call [ FindFirstFileA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
jne rwxdata
lea edx [ esp + 0x14 ]
push 0x1343
push rwxdata
mov ecx ebx
mov [ esp + 0x14 ] edx
call sub_404200
push 0x0
call [ exit@IAT ]
push eax
call [ exit@IAT ]
sub_404820
push 0xffffffff
push sub_405558
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404890
push 0xffffffff
push sub_405578
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404900
push 0xffffffff
push sub_405598
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404970
push 0xffffffff
push sub_4055b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4049c0
push 0xffffffff
push sub_4055da
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1e0
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_404a60
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404a60
push 0xffffffff
push sub_405606
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_529
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_554
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404ae0
push 0xffffffff
push sub_405626
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_807
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_796
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404b50
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
push 0xe800
xor eax eax
sub esp 0x10
xor ecx ecx
mov ebp esp
xor edx edx
lea edi [ esi + 0x140 ]
push 0x50402834
mov [ ebp ] eax
xor ebx ebx
push 0x800
push esi
mov [ ebp + 0x4 ] ecx
mov ecx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ebx
call Ordinal_MFC42_6625
test eax eax
je rwxdata
push 0x80
mov ecx edi
call Ordinal_MFC42_4163
test eax eax
je rwxdata
lea ebx [ esi + 0xc0 ]
push 0xe801
push 0x50008200
push esi
mov ecx ebx
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rwxdata
mov ecx ebx
call Ordinal_MFC42_6000
test eax eax
je rwxdata
push 0xf000
mov ecx edi
call Ordinal_MFC42_2626
push 0x0
mov ecx edi
call Ordinal_MFC42_6215
push 0x0
mov ecx ebx
call Ordinal_MFC42_6215
push 0xf000
mov ecx esi
call Ordinal_MFC42_2627
push 0x0
push 0x0
push edi
mov ecx esi
call Ordinal_MFC42_2494
push 0x0
mov ecx esi
call sub_404ce0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_404c40
push esi
mov esi [ esp + 0x8 ]
push esi
call Ordinal_MFC42_5252
test eax eax
jne rwxdata
mov al [ rwxdata ]
push edi
mov edi [ GetSystemMetrics@IAT ]
test al 0x1
jne rwxdata
pop esi
retn 0x4
mov cl [ rwxdata ]
mov al 0x2
test al cl
jne rwxdata
mov cl al
push 0x0
or cl 0x1
mov [ rwxdata ] cl
call edi
mov [ rwxdata ] eax
mov eax 0x55555556
pop edi
imul [ rwxdata ]
mov eax edx
shr eax 0x1f
add edx eax
mov eax 0x38e38e39
mov [ esi + 0x1c ] edx
mov ecx [ rwxdata ]
imul ecx
sar edx 0x1
mov ecx edx
mov [ esi + 0x14 ] 0x11f
shr ecx 0x1f
add edx ecx
mov [ esi + 0x10 ] 0x264
mov [ esi + 0x18 ] edx
mov eax 0x1
pop esi
retn 0x4
or cl al
push 0x1
mov [ rwxdata ] cl
call edi
mov [ rwxdata ] eax
sub_404ce0
mov eax [ rwxdata ]
push esi
test eax eax
mov esi ecx
jne rwxdata
mov cl [ esp + 0x8 ]
test cl cl
je rwxdata
test esi esi
je rwxdata
test esi esi
jne rwxdata
test esi esi
jne rwxdata
push eax
call [ GetMenu@IAT ]
mov [ rwxdata ] eax
mov eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
xor eax eax
jmp rwxdata
mov ecx [ esi + 0x20 ]
xor ecx ecx
jmp rwxdata
push 0x0
push eax
call [ SetMenu@IAT ]
push 0x20
push 0x0
push 0xc00000
mov ecx esi
call Ordinal_MFC42_4284
pop esi
retn 0x4
push eax
push ecx
call [ SetMenu@IAT ]
push 0x20
push 0xc00000
push 0x0
mov ecx esi
call Ordinal_MFC42_4284
pop esi
retn 0x4
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_4053c5
cmp [ rwxdata ] ebx
jne rwxdata
call sub_4053b0
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_4053c2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4053d2
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4053ea
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401635
mov ah 0xca
rol al 0xc1
iretd
sub_4016f2
push eax
rol eax 0xc0
xchg edi eax
mov edi 0xc0c0a956
ror [ eax + 0x46 ] 0xaf
0xc0c0
sub_40176f
add bh cl
inc ebp
pop ebx
retn 0xc0c0
sub_401786
ror bh 0x4e
cmp ecx eax
rol al 0x7
inc ebp
cmp [ ebp - 0x40404041 ] 0xbf
mov edi 0xbd804543
mov edi 0x4d4bc1bf
cmp [ ebp + 0x4e7bbfbf ] 0x1
retn 0xc0c0
sub_4017ac
pop es
inc ebp
cmp [ ebp - 0x3f3f4041 ] 0xc0
shl [ ebx + 0x9 ] 0x4d
std
cmp [ edi + edi * 4 + 0x4d9197bf ] 0xc0c205fe
rcl [ edi - 0x3f56a941 ] 0xc0
rol [ eax - 0x2 ] 0xaf
0xc0c0
sub_401888
rcr [ edx - 0x448b02b3 ] 0xbf
mov edi 0xbc815d4d
mov edi 0x70f628bf
0xbfe1
sub_40189c
idiv bh
0xc0c0
sub_401901
inc ebp

sub_401a4f
dec edx
mov [ ebx + 0x6 ] 0xc1
jpo rwxdata
stosd [ edi ]
lodsd [ esi ]
dec ebx
or [ ebx - 0x47 ] al
shl [ edi + ecx * 8 ] 0x4a
xor al 0xca
retn
sub_401a59
mov al 0x43
push es
retn
sub_4023c8
push ds
das
push ds
sti
0xc091
sub_4023d0
int1
popfd
adc [ ebx - 0x3f6a3505 ] bl
pop ds
insd
dec ecx
dec esp
sti
0xc099
sub_4023e0
push ebx
aaa
aaa
popad
sti
0xc029
sub_4023e8
sbb [ ebp + 0x45 ] 0x45
sti
0xc031
sub_402400
xchg esi eax
out 0xd9 eax
jmp rwxdata
dec edx
and eax 0xf35770c0
pop esp
dec edx
sub eax 0x1db10ec0
and edi edi
0xc039
sub_402418
cmp [ ebx ] bh
aaa
test eax 0xc03dcafb
arpl [ ebp + 0x2c ] sp
sub edi edi
0xc035
sub_402433
or eax 0xc075ca13
push 0x13ba8c0a
0xc081
sub_402470
cmp eax 0xfb8b6a7e
0xc051
sub_402478
into
dec ecx
retn 0xfb84
sub_40247d
0xc061
sub_402480
rcl edx 0x1
in eax dx
push 0xfffffffb
0xc065
sub_402489

sub_40248a
sti
0xc06d
sub_402490
dec esp
in eax dx
popfd
sbb edi ebx
0xcab0
sub_402498
fild [ ecx + 0x3d ]
scasd [ edi ]
sti
0xccb8
sub_4024a0
0xfb941821 0xbcca
int3
sub_402f30
mov edx ecx
push edi
mov ecx 0x8
xor eax eax
lea edi [ edx + 0x4 ]
mov [ edx ] rwxdata
[ edi ]
mov [ edx + 0x24 ] ax
mov eax edx
pop edi
retn
sub_402f50
push esi
mov esi ecx
call sub_402f70
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_402f70
mov [ ecx ] rwxdata
retn
sub_402f80
retn 0x10
sub_403400
push edi
lea edi [ ecx + 0x4 ]
mov ecx 0x8
xor eax eax
[ edi ]
pop edi
retn
sub_403410
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_403420
mov eax rwxdata
retn
sub_403430
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403450
push esi
mov esi ecx
call sub_403470
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403470
jmp Ordinal_MFC42_815
sub_403480
call sub_403490
jmp sub_4034a0
sub_403490
mov ecx rwxdata
jmp sub_403430
sub_4034a0
push sub_4034b0
call sub_405224
pop ecx
retn
sub_4034b0
mov ecx rwxdata
jmp sub_403470
sub_403610
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403630
push esi
mov esi ecx
call sub_403650
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403650
jmp Ordinal_MFC42_641
sub_403660
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_403670
mov eax rwxdata
retn
sub_4036e0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_4036f0
retn
sub_403700
retn 0x4
sub_403710
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_403720
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_403790
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_4037a0
mov eax rwxdata
retn
sub_4037b0
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_4037c0
mov eax rwxdata
retn
sub_4037d0
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4037f0
push esi
mov esi ecx
call sub_403810
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403810
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_652
sub_403820
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_403830
retn 0x4
sub_403840
mov eax [ ecx + 0x48 ]
retn
sub_403850
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_403860
jmp rwxdata
retn
sub_403880
call sub_403890
jmp sub_4038c0
sub_403890
mov ecx rwxdata
jmp sub_4038a0
sub_4038a0
push esi
mov esi ecx
call sub_402f30
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_4038c0
push sub_4038d0
call sub_405224
pop ecx
retn
sub_4038d0
mov ecx rwxdata
jmp j_sub_402f70
sub_4038e0
call sub_4038f0
jmp sub_403930
sub_4038f0
mov ecx rwxdata
jmp sub_403900
sub_403900
push esi
mov esi ecx
call sub_402f30
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x1
mov eax esi
pop esi
retn
j_sub_402f70
jmp sub_402f70
sub_403930
push sub_403940
call sub_405224
pop ecx
retn
sub_403940
mov ecx rwxdata
jmp j_sub_402f70
sub_403950
call sub_403960
jmp sub_403990
sub_403960
mov ecx rwxdata
jmp sub_403970
sub_403970
push esi
mov esi ecx
call sub_402f30
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_403990
push sub_4039a0
call sub_405224
pop ecx
retn
sub_4039a0
mov ecx rwxdata
jmp j_sub_402f70
sub_4039b0
call sub_4039c0
jmp sub_4039f0
sub_4039c0
mov ecx rwxdata
jmp sub_4039d0
sub_4039d0
push esi
mov esi ecx
call sub_402f30
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_4039f0
push sub_403a00
call sub_405224
pop ecx
retn
sub_403a00
mov ecx rwxdata
jmp j_sub_402f70
sub_403a10
call sub_403a20
jmp sub_403a50
sub_403a20
mov ecx rwxdata
jmp sub_403a30
sub_403a30
push esi
mov esi ecx
call sub_402f30
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_403a50
push sub_403a60
call sub_405224
pop ecx
retn
sub_403a60
mov ecx rwxdata
jmp j_sub_402f70
sub_403a70
call sub_403a80
jmp sub_403ad0
sub_403a80
mov ecx rwxdata
jmp sub_403a90
sub_403a90
push esi
mov esi ecx
call sub_402f30
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_403ab0
push esi
mov esi ecx
call j_sub_402f70
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403ad0
push sub_403ae0
call sub_405224
pop ecx
retn
sub_403ae0
mov ecx rwxdata
jmp j_sub_402f70
sub_403af0
call sub_403b00
jmp sub_403b30
sub_403b00
mov ecx rwxdata
jmp sub_403b10
sub_403b10
push esi
mov esi ecx
call sub_402f30
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_403b30
push sub_403b40
call sub_405224
pop ecx
retn
sub_403b40
mov ecx rwxdata
jmp j_sub_402f70
sub_403bb0
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_403bc0
mov eax rwxdata
retn
sub_403bd0
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_403be0
mov eax rwxdata
retn
sub_403cf0
push esi
mov esi ecx
call sub_403d10
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403d10
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_403d20
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5260
retn 0x4
sub_4041e0
mov eax [ esp + 0x4 ]
cdq
idiv [ esp + 0x8 ]
cmp eax 0x2
sete al
retn 0x8
sub_404320
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_2535
retn 0x4
sub_404330
retn 0x8
sub_404750
mov eax 0x1
retn 0x4
sub_4047f0
mov [ ecx ] rwxdata
retn
sub_404800
push esi
mov esi ecx
call sub_404820
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404870
push esi
mov esi ecx
call sub_404890
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4048e0
push esi
mov esi ecx
call sub_404900
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404950
push esi
mov esi ecx
call sub_404970
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404a20
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_404a30
mov eax rwxdata
retn
sub_404a40
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_404a50
mov eax rwxdata
retn
sub_404ac0
push esi
mov esi ecx
call sub_404ae0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_3573
jmp [ Ordinal_MFC42_3573@IAT ]
Ordinal_MFC42_3693
jmp [ Ordinal_MFC42_3693@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_2405
jmp [ Ordinal_MFC42_2405@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_5787
jmp [ Ordinal_MFC42_5787@IAT ]
Ordinal_MFC42_5788
jmp [ Ordinal_MFC42_5788@IAT ]
Ordinal_MFC42_2753
jmp [ Ordinal_MFC42_2753@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_4464
jmp [ Ordinal_MFC42_4464@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4284
jmp [ Ordinal_MFC42_4284@IAT ]
sub_4051f8
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_405224
push [ esp + 0x4 ]
call sub_4051f8
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4053b0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4053c2
xor eax eax
retn
sub_4053c5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4053d2
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_405418
jmp sub_405418
sub_405418
push 0x600
push 0x0
call sub_4053ea
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_405440
mov eax [ ebp - 0x138 ]
push eax
call sub_4036e0
retn
sub_40544d
lea ecx [ ebp - 0x134 ]
jmp Ordinal_MFC42_617
sub_405458
mov eax rwxdata
jmp __CxxFrameHandler
sub_405470
lea ecx [ ebp - 0x6c ]
jmp sub_403650
sub_405478
mov eax rwxdata
jmp __CxxFrameHandler
sub_405490
mov eax [ ebp - 0x10 ]
push eax
call sub_4036e0
retn
sub_40549a
mov eax rwxdata
jmp __CxxFrameHandler
sub_4054b0
mov eax [ ebp - 0x10 ]
push eax
call sub_4036e0
retn
sub_4054ba
mov eax rwxdata
jmp __CxxFrameHandler
sub_4054d0
lea ecx [ ebp - 0x3c ]
jmp sub_404970
sub_4054d8
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_640
sub_4054e0
lea ecx [ ebp - 0x44 ]
jmp sub_404890
sub_4054e8
lea ecx [ ebp - 0x4c ]
jmp sub_404900
sub_4054f0
lea ecx [ ebp - 0x24 ]
jmp sub_404900
sub_4054f8
lea ecx [ ebp - 0x2c ]
jmp sub_404900
sub_405500
lea ecx [ ebp - 0x34 ]
jmp sub_404900
sub_405508
lea ecx [ ebp - 0x34 ]
jmp sub_4047f0
sub_405510
lea ecx [ ebp - 0x2c ]
jmp sub_4047f0
sub_405518
lea ecx [ ebp - 0x24 ]
jmp sub_4047f0
sub_405520
lea ecx [ ebp - 0x4c ]
jmp sub_4047f0
sub_405528
lea ecx [ ebp - 0x44 ]
jmp sub_4047f0
sub_405530
lea ecx [ ebp - 0x3c ]
jmp sub_4047f0
sub_405538
mov eax rwxdata
jmp __CxxFrameHandler
sub_405550
mov ecx [ ebp - 0x10 ]
jmp sub_4047f0
sub_405558
mov eax rwxdata
jmp __CxxFrameHandler
sub_405570
mov ecx [ ebp - 0x10 ]
jmp sub_4047f0
sub_405578
mov eax rwxdata
jmp __CxxFrameHandler
sub_405590
mov ecx [ ebp - 0x10 ]
jmp sub_4047f0
sub_405598
mov eax rwxdata
jmp __CxxFrameHandler
sub_4055b0
mov ecx [ ebp - 0x10 ]
jmp sub_4047f0
sub_4055b8
mov eax rwxdata
jmp __CxxFrameHandler
sub_4055d0
mov eax [ ebp - 0x10 ]
push eax
call sub_4036e0
retn
sub_4055da
mov eax rwxdata
jmp __CxxFrameHandler
sub_4055f0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_4055f8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_405606
mov eax rwxdata
jmp __CxxFrameHandler
sub_405610
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_405618
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_405626
mov eax rwxdata
jmp __CxxFrameHandler
