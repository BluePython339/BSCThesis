sub_401030
push 0xffffffff
push sub_4234fd
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xdc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call sub_4022ab
push r--data
mov ecx esi
call sub_402a96
lea eax [ esp + 0x8 ]
push eax
call sub_401700
lea ecx [ esp + 0x8 ]
mov [ esp + 0xe4 ] 0x0
mov [ esi + 0x20 ] ecx
call sub_4035cd
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xe8 ] 0xffffffff
call sub_4010c0
xor eax eax
mov ecx [ esp + 0xdc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xe0
retn
sub_4010c0
push 0xffffffff
push sub_423493
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
lea ecx [ esi + 0xcc ]
mov [ esp + 0x10 ] 0x1
mov [ ecx ] r--data
call sub_401490
lea ecx [ esi + 0x78 ]
mov [ esp + 0x10 ] 0x0
call sub_4038e4
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_402e8d
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_401190
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
add eax 0x10
mov [ esi ] eax
mov eax esi
pop esi
retn 0x4
push 0x80004005
call sub_4013a0
sub_4011c0
push esi
mov esi ecx
call sub_40414d
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi ] eax
mov eax esi
pop esi
retn
push 0x80004005
call sub_4013a0
sub_4011f0
mov eax [ ecx ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_401230
lea eax [ ecx + 0xc ]
or edx 0xffffffff
[ eax ] edx
dec edx
test edx edx
jg r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push ecx
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
sub_401250
push ecx
push ebx
push ebp
push esi
mov esi [ ecx ]
mov ebx [ esi - 0xc ]
sub esi 0x10
mov [ esp + 0xc ] ecx
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push edi
call edx
mov edx [ eax ]
mov ebp [ esp + 0x18 ]
push 0x2
mov ecx eax
mov eax [ edx ]
push ebp
call eax
mov edi eax
test edi edi
jne r-xdata
cmp ebx ebp
jge r-xdata
call sub_4012d0
lea eax [ ebp + ebp + 0x2 ]
push eax
lea ecx [ esi + 0x10 ]
push ecx
push eax
lea ebp [ edi + 0x10 ]
push ebp
call sub_4102ec
add esp 0x10
mov [ edi + 0x4 ] ebx
lea edx [ esi + 0xc ]
or eax 0xffffffff
[ edx ] eax
dec eax
test eax eax
jg r-xdata
mov ebp ebx
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ ecx ] ebp
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_4012e0
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
jge r-xdata
call sub_4012d0
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x2
push edx
push eax
mov eax [ edi + 0x8 ]
call eax
pop edi
test eax eax
jne r-xdata
add eax 0x10
mov [ esi ] eax
pop esi
retn 0x4
sub_401320
mov eax [ ecx ]
mov edx [ esp + 0x4 ]
sub eax 0x10
push esi
mov esi [ eax + 0x4 ]
cmp esi edx
jle r-xdata
cmp [ eax + 0xc ] 0x1
pop esi
jle r-xdata
mov edx esi
mov eax [ eax + 0x8 ]
cmp eax edx
jge r-xdata
mov [ esp + 0x4 ] edx
jmp sub_401250
retn 0x4
cmp eax 0x400
jle r-xdata
add eax eax
add eax 0x400
jmp r-xdata
mov [ esp + 0x4 ] eax
jmp sub_4012e0
mov eax edx
cmp eax edx
jge r-xdata
sub_401370
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
mov eax [ esp + 0x8 ]
sub edx eax
or ecx edx
jge r-xdata
mov eax [ esi ]
pop esi
retn 0x4
push eax
mov ecx esi
call sub_401320
sub_4013c0
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
push 0x80070057
call sub_4013a0
mov edx [ ecx ]
cmp eax [ edx - 0x8 ]
jg r-xdata
mov [ edx - 0xc ] eax
mov ecx [ ecx ]
xor edx edx
mov [ ecx + eax * 2 ] dx
retn 0x4
sub_4013f0
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ecx
test ebx ebx
jne r-xdata
push ebp
mov ebp [ esp + 0x14 ]
push esi
push ebp
push ebx
call sub_4103c0
mov esi eax
mov eax [ edi ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
sub edx esi
add esp 0x8
or ecx edx
jge r-xdata
push 0x80070057
call sub_4013a0
mov ecx [ edi ]
push ebp
push ebx
lea eax [ esi + 0x1 ]
push eax
push ecx
call sub_4101c3
add esp 0x10
test esi esi
jl r-xdata
push esi
mov ecx edi
call sub_401320
push 0x80070057
call sub_4013a0
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov edx [ edi ]
xor eax eax
mov [ edx + esi * 2 ] ax
pop esi
pop ebp
pop edi
pop ebx
retn 0x8
sub_401490
push ebp
lea ebp [ esp - 0x404 ]
sub esp 0x404
push 0xffffffff
push sub_423458
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x400 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404a71
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x400 ]
xor ecx ebp
call sub_40fef3
add ebp 0x404
mov esp ebp
pop ebp
retn
sub_401503
lea ecx [ ebp - 0x14 ]
call sub_4011c0
mov [ ebp - 0x4 ] 0x2
mov esi [ ebp - 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push 0x0
push 0x200
lea ecx [ ebp ]
push ecx
mov ecx esi
call edx
test eax eax
je r-xdata
push 0x6d
push r--data
push r--data
lea edx [ ebp - 0x14 ]
push r--data
push edx
call sub_401470
add esp 0x14
lea eax [ ebp ]
push eax
push 0x6d
push r--data
push r--data
lea ecx [ ebp - 0x14 ]
push r--data
push ecx
call sub_401470
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x14 ]
push 0x0
push 0x0
push eax
call sub_403d39
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_4011f0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push 0x1
mov ecx esi
call eax
mov eax r-xdata
retn
sub_4015c0
sub esp 0x260
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x25c ] eax
push 0x103
lea eax [ esp + 0x15d ]
push 0x0
push eax
mov [ esp + 0x164 ] 0x0
call sub_4113e0
push 0x103
lea ecx [ esp + 0x65 ]
push 0x0
push ecx
mov [ esp + 0x6c ] 0x0
call sub_4113e0
add esp 0x18
push r--data
call [ GetTickCount@IAT ]
push eax
push r--data
push r--data
lea edx [ esp + 0x168 ]
push r--data
push edx
call sub_41042d
add esp 0x18
push 0x104
lea eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x160 ]
push ecx
call [ ExpandEnvironmentStringsA@IAT ]
xor ecx ecx
mov edi edi
inc ecx
cmp ecx 0xed31
jl r-xdata
cmp al 0x62
je r-xdata
mov al [ ecx + rw-data ]
test al al
je r-xdata
push esi
lea edx [ esp + 0x58 ]
push r--data
push edx
call sub_41056e
mov esi eax
push esi
push 0x1
push 0xed31
push rw-data
call sub_4106e7
push esi
call sub_4107e0
xor eax eax
push 0x40
push eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x2c ] 0x0
call sub_4113e0
add esp 0x28
xor ecx ecx
lea edx [ esp + 0x4 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ esp + 0x68 ] cx
lea ecx [ esp + 0x7c ]
push ecx
mov [ esp + 0x3c ] 0x44
call [ CreateProcessA@IAT ]
mov ecx [ esp + 0x260 ]
pop esi
xor ecx esp
call sub_40fef3
add esp 0x260
retn
xor al 0x62
mov [ ecx + rw-data ] al
sub_401700
push 0xffffffff
push sub_4234d1
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
push 0x0
push 0x66
mov ecx esi
call sub_402f1d
lea edi [ esi + 0x78 ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
mov [ esi ] r--data
call sub_4072b6
mov [ edi ] r--data
mov [ esi + 0xd0 ] 0x0
mov [ esi + 0xcc ] r--data
mov [ esp + 0x14 ] 0x2
call sub_40c0a9
call sub_40c0a9
mov eax [ eax + 0xc ]
push 0x80
push eax
call [ LoadIconW@IAT ]
mov [ esi + 0x74 ] eax
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
sub_4017f0
push esi
push edi
mov esi ecx
call sub_4032c9
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x20 ]
mov edi [ SendMessageW@IAT ]
push eax
push 0x1
push 0x80
push ecx
call edi
mov edx [ esi + 0x74 ]
mov eax [ esi + 0x20 ]
push edx
push 0x0
push 0x80
push eax
call edi
push r--data
push 0x20
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x2bc
push 0x0
push 0x0
push 0x0
push 0x19
call [ CreateFontW@IAT ]
push eax
lea ecx [ esi + 0xcc ]
call sub_404a19
pop edi
mov eax 0x1
pop esi
retn
sub_401860
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x74
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call sub_402ec4
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_40fef3
mov esp ebp
pop ebp
retn
push esi
lea ecx [ esp + 0x24 ]
call sub_4048fd
mov ecx [ esp + 0x24 ]
mov edx [ esi + 0x20 ]
push 0x0
push ecx
push 0x27
push edx
call [ SendMessageW@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov ecx [ esi + 0x20 ]
mov edi eax
lea eax [ esp + 0x10 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
mov edx [ esi + 0x74 ]
sub eax edi
inc eax
push edx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ esp + 0x20 ]
sub eax [ esp + 0x18 ]
sub eax ebx
inc eax
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ esp + 0x30 ]
push eax
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x20 ]
call sub_404951
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x70 ]
xor ecx esp
call sub_40fef3
mov esp ebp
pop ebp
retn
sub_401940
push esi
mov esi ecx
call sub_4085f9
cmp eax 0xffffffff
jne r-xdata
call sub_4015c0
mov eax [ esi + 0x20 ]
push 0x0
push 0x64
push 0x1
push eax
call [ SetTimer@IAT ]
xor eax eax
pop esi
retn 0x4
or eax eax
pop esi
retn 0x4
sub_401990
mov eax [ esp + 0x4 ]
sub eax 0x1
push esi
mov esi ecx
jne r-xdata
mov ecx esi
call sub_4085f9
pop esi
retn 0x4
push edi
mov edi [ SendMessageW@IAT ]
push eax
push eax
mov eax [ esi + 0x98 ]
push 0x408
push eax
call edi
cmp eax 0x64
jne r-xdata
mov eax [ esi + 0x98 ]
push 0x0
push 0x5
push 0x404
push eax
call edi
mov ecx [ esi + 0x98 ]
push 0x0
push 0x0
push 0x405
push ecx
call edi
pop edi
mov ecx [ esi + 0x20 ]
push 0x1
push ecx
call [ KillTimer@IAT ]
push r--data
push 0x3e9
mov ecx esi
mov [ esp + 0x14 ] 0x0
call sub_40b4e9
mov ecx eax
call sub_40b5d3
push 0x0
push 0x0
push 0x0
push r--data
push r--data
push 0x0
call [ ShellExecuteA@IAT ]
lea edx [ esp + 0xc ]
push edx
push 0x0
push 0x0
push sub_401970
push 0x0
push 0x0
call [ CreateThread@IAT ]
pop edi
mov ecx esi
call sub_4085f9
pop esi
retn 0x4
sub_401ae9
mov edi edi
push ebp
mov ebp esp
push esi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4108ab
mov esi eax
pop ecx
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
sub_401b96
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax ecx
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] bl
jne r-xdata
pop ebx
leave
retn 0x4
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
pop edi
mov [ rw-data ] eax
pop esi
cmp [ rw-data ] ebx
je r-xdata
call sub_40406e
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
sub_401c4d
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
mov esi ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ esi ] 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call eax
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov [ esi ] eax
mov al cl
sub_401c87
mov edx [ rw-data ]
test edx edx
jne r-xdata
push esi
mov esi [ ecx ]
cmp esi 0xffffffff
je r-xdata
mov al 0x1
retn
xor al al
pop esi
retn
lea eax [ ecx + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
push eax
push esi
call edx
dec eax
neg eax
sbb eax eax
inc eax
pop esi
retn
sub_401cb4
xor edx edx
cmp [ rw-data ] edx
je r-xdata
mov al 0x1
retn
mov eax [ ecx + 0x4 ]
cmp eax edx
je r-xdata
push eax
push edx
mov [ ecx + 0x4 ] edx
call [ rw-data ]
dec eax
neg eax
sbb eax eax
inc eax
retn
sub_401cda
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push edi
xor edi edi
mov [ ecx + 0xa0 ] edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0xc ] edi
mov ebx rw-data
cmp [ rw-data ] edi
je r-xdata
xor eax eax
pop edi
inc eax
pop ebx
leave
retn
push esi
add ebx 0x8
cmp [ ebx ] edi
jne r-xdata
mov esi [ ebx + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push edi
push [ ebx ]
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
pop esi
mov eax [ esi ]
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
push ecx
push edi
push eax
push [ ebp - 0x4 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0xc ] edi
add esi 0x8
cmp [ ebp - 0xc ] 0x4
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
not ecx
and [ eax + 0xa0 ] ecx
or [ eax + 0xa0 ] ecx
jmp r-xdata
sub_401d9f
mov eax [ rw-data ]
xor edx edx
push esi
mov esi ecx
cmp eax edx
je r-xdata
mov ecx [ esi + 0x58 ]
cmp ecx edx
je r-xdata
cmp [ esi + 0x58 ] edx
jne r-xdata
mov [ rw-data ] edx
mov eax [ ecx ]
push edx
call [ eax + 0xc ]
jmp r-xdata
mov [ rw-data ] edx
mov [ esi + 0x58 ] eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb4 ]
xor eax eax
inc eax
pop esi
retn
sub_401ddf
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x88 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0x94 ]
test eax eax
je r-xdata
mov eax [ eax ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x14 ]
pop esi
retn
push eax
push r--data
push r--data
mov ecx esi
call sub_402ba7
sub_401e16
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
call sub_40c0a9
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x6
je r-xdata
mov eax [ esi + 0x9c ]
test eax eax
je r-xdata
mov ecx esi
call sub_401ddf
cmp eax 0x5
je r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
call eax
xor esi esi
call sub_40520a
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
and [ esi + 0x7c ] 0x0
mov eax esi
pop esi
retn
call sub_40520a
mov esi [ eax + 0x8 ]
sub_401e79
mov edi edi
push ebp
mov ebp esp
call sub_405201
test eax eax
je r-xdata
pop ebp
jmp [ PostQuitMessage@IAT ]
mov eax [ eax + 0x3c ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_401e9b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx ebx
je r-xdata
call sub_40406e
mov eax [ edx + 0x4 ]
mov esi eax
dec esi
je r-xdata
push edx
push edi
call sub_405404
sub esi 0xe
je r-xdata
mov esi 0xf108
cmp eax 0x111
jne r-xdata
push r--data
mov ecx edi
call sub_40c274
mov ecx edi
test eax eax
je r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
push r--data
call sub_40c274
test eax eax
jne r-xdata
push esi
push 0x1030
jmp r-xdata
xor ebx ebx
inc ebx
inc esi
mov eax ebx
jmp r-xdata
push esi
push 0x10
mov ecx edi
mov eax [ edi ]
call [ eax + 0x14 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_401f1e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jg r-xdata
cmp ebx 0x1
jne r-xdata
push ebx
call sub_405832
and [ ebp + 0x8 ] 0x0
cmp [ esi + 0x58 ] 0x0
je r-xdata
xor eax eax
cmp ebx 0x1
pop esi
setl al
pop ebx
pop ebp
retn 0x4
push ebx
call sub_405832
mov ecx [ esi + 0x58 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0x58 ]
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
call [ eax + 0x14 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
sub_401f84
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
push ebx
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
lea eax [ eax + ecx * 2 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
pop ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call OpenPrinterW
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesW
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x70 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesW
cmp eax 0x1
je r-xdata
push eax
call sub_40c480
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x70 ]
call sub_40c480
mov [ esi + 0x70 ] edi
sub_40202b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
cmp eax 0xc
je r-xdata
jmp sub_404036
cmp eax 0x16
je r-xdata
jmp sub_40406e
cmp eax 0x22
je r-xdata
cmp eax 0x50
je r-xdata
sub_402057
push 0x4
mov eax sub_422cd9
call sub_410de9
push 0x54
call sub_40c5c7
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_410ec1
retn
call sub_40baa7
sub_402083
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
cmp eax 0xc
je r-xdata
push 0x8007000e
jmp r-xdata
cmp eax 0x16
je r-xdata
call sub_4013a0
push 0x80070057
jmp r-xdata
cmp eax 0x22
je r-xdata
cmp eax 0x50
je r-xdata
push 0x80004005
sub_4020db
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push esi
push eax
call [ LockResource@IAT ]
mov esi eax
test esi esi
je r-xdata
pop ebp
retn
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x10 ]
add eax esi
and ecx 0xf
jbe r-xdata
pop esi
pop ebp
retn
cmp esi eax
jb r-xdata
cmp esi eax
jae r-xdata
movzx eax [ esi ]
neg eax
sbb eax eax
and eax esi
dec ecx
movzx edx [ esi ]
lea esi [ esi + edx * 2 + 0x2 ]
jne r-xdata
sub_402138
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
shr eax 0x4
inc eax
movzx eax ax
push 0x6
push eax
push [ ebp + 0x8 ]
call [ FindResourceW@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4020db
add esp 0xc
pop ebp
retn
pop ebp
retn
sub_402193
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
add eax eax
push eax
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_4112b4
add esp 0x10
pop ebp
retn
sub_4021ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x800
push ebx
push esi
mov esi ecx
mov ebx edx
lea eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push eax
push 0x3
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push r--data
push 0x4
push eax
call sub_41122b
push eax
call sub_40202b
add esp 0x10
jmp r-xdata
xor eax eax
push edi
call sub_411392
mov edi [ eax ]
call sub_411392
and [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
push ebx
push esi
push 0x111
mov esi 0x112
lea eax [ ebp - 0x230 ]
push esi
push eax
call sub_41132f
add esp 0x18
mov ebx eax
call sub_411392
cmp [ eax ] 0x0
je r-xdata
call sub_411392
mov [ eax ] edi
call sub_411392
push [ eax ]
call sub_402083
pop ecx
jmp r-xdata
cmp ebx esi
jae r-xdata
pop edi
cmp ebx 0xffffffff
je r-xdata
lea eax [ ebp - 0x230 ]
push eax
call [ LoadLibraryW@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
sub_4022ab
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x7c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
mov [ esi + 0x7c ] eax
test eax eax
je r-xdata
xor eax eax
inc eax
pop esi
retn
push eax
call sub_40216a
push [ esi + 0x7c ]
push rw-data
call [ InterlockedExchange@IAT ]
sub_4022df
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx esi
pop esi
jmp r-xdata
call sub_40cd98
test eax eax
je r-xdata
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
call sub_40baf1
xor edi edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x8 ] edi
push 0x0
call sub_401e79
mov eax [ esi ]
mov ecx esi
call [ eax + 0x5c ]
test eax eax
mov eax [ esi ]
mov ecx esi
je r-xdata
mov ebx [ ebp - 0xc ]
add ebx 0x30
call [ eax + 0x68 ]
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0xc ]
add ebx 0x30
push ebx
call [ eax + 0x64 ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x60 ]
inc [ ebp - 0x8 ]
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push ebx
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
push edi
push edi
push edi
push edi
push ebx
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
sub_402302
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_401b23
mov esi eax
xor eax eax
cmp esi eax
jne r-xdata
push eax
push eax
push 0x36a
mov [ edi + 0x5c ] eax
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x7c ]
pop edi
pop esi
pop ebp
retn 0x8
call sub_40406e
sub_402343
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_401b23
mov esi eax
xor eax eax
cmp esi eax
jne r-xdata
push eax
push eax
push 0x36a
mov [ edi + 0x5c ] eax
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x80 ]
pop edi
pop esi
pop ebp
retn 0x8
call sub_40406e
sub_402387
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_401b23
mov esi eax
xor eax eax
cmp esi eax
jne r-xdata
push eax
push eax
push 0x36a
mov [ edi + 0x5c ] eax
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x84 ]
pop edi
pop esi
pop ebp
retn 0x8
call sub_40406e
sub_4023df
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
sub ecx 0x10
xor eax eax
push edi
mov edi [ ecx ]
cmp [ ecx + 0x4 ] eax
je r-xdata
pop edi
pop esi
retn
cmp [ ecx + 0xc ] eax
jge r-xdata
call sub_401230
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
push eax
mov ecx esi
call sub_4013c0
jmp r-xdata
sub_40241b
push 0x260
mov eax sub_422cff
call sub_410e52
mov eax [ ebp + 0x8 ]
mov esi [ GetModuleHandleW@IAT ]
mov [ ebp - 0x228 ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push r--data
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x220 ] edi
call esi
mov ebx [ GetProcAddress@IAT ]
push r--data
push eax
mov [ ebp - 0x238 ] eax
call ebx
cmp eax edi
je r-xdata
push r--data
call esi
cmp eax edi
je r-xdata
call eax
mov esi [ ConvertDefaultLocale@IAT ]
movzx eax ax
mov [ ebp - 0x224 ] eax
movzx eax ax
mov ecx eax
shr eax 0xa
mov edi 0x3ff
shl eax 0xa
and ecx edi
movzx ecx cx
movzx eax ax
or eax ecx
push eax
mov [ ebp - 0x220 ] ecx
call esi
push [ ebp - 0x220 ]
mov [ ebp - 0x24c ] eax
call esi
push r--data
push [ ebp - 0x238 ]
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x220 ] 0x2
call ebx
test eax eax
je r-xdata
mov eax [ ebp - 0x220 ]
inc [ ebp - 0x220 ]
mov [ ebp + eax * 4 - 0x24c ] 0x800
xor eax eax
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x14 ] ax
push 0x105
lea eax [ ebp - 0x21c ]
push eax
mov esi __dos_header
push esi
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x224 ]
push ecx
push sub_401b7c
push 0x1
push 0x10
push eax
mov [ ebp - 0x224 ] edi
call [ EnumResourceLanguagesW@IAT ]
cmp [ ebp - 0x224 ] di
je r-xdata
call eax
movzx eax ax
mov [ ebp - 0x224 ] eax
movzx eax ax
mov ecx eax
shr eax 0xa
shl eax 0xa
and ecx edi
movzx edi cx
movzx eax ax
or eax edi
push eax
call esi
push edi
mov [ ebp - 0x244 ] eax
call esi
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x220 ] 0x4
jmp r-xdata
push 0x20
pop edi
push edi
xor ebx ebx
lea eax [ ebp - 0x26c ]
push ebx
push eax
call sub_4113e0
add esp 0xc
lea eax [ ebp - 0x21c ]
push 0xffffffff
lea ecx [ ebp - 0x230 ]
mov [ ebp - 0x26c ] edi
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x258 ] 0x3e8
mov [ ebp - 0x250 ] esi
mov [ ebp - 0x268 ] 0x88
call sub_401b96
lea eax [ ebp - 0x26c ]
push eax
lea ecx [ ebp - 0x230 ]
mov [ ebp - 0x4 ] ebx
call sub_401c4d
test al al
je r-xdata
call sub_410ed5
retn 0x8
movzx eax [ ebp - 0x224 ]
mov esi [ ConvertDefaultLocale@IAT ]
mov ecx eax
shr eax 0xa
shl eax 0xa
and ecx 0x3ff
movzx edi cx
movzx eax ax
or eax edi
push eax
call esi
push edi
mov [ ebp - 0x24c ] eax
call esi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x220 ] 0x2
xor esi esi
cmp [ ebp - 0x220 ] ebx
jle r-xdata
lea ecx [ ebp - 0x230 ]
call sub_401c87
xor esi esi
jmp r-xdata
push [ ebp + esi * 4 - 0x24c ]
mov edx [ ebp - 0x234 ]
mov ecx [ ebp - 0x228 ]
call sub_4021ba
pop ecx
cmp eax ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x230 ]
call sub_402286
mov eax esi
jmp r-xdata
mov esi eax
inc esi
cmp esi [ ebp - 0x220 ]
jl r-xdata
sub_40268c
mov edi edi
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov eax ecx
mov esi 0x104
push esi
lea ecx [ ebp - 0x220 ]
push ecx
push [ eax + 0x44 ]
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
xor eax eax
cmp eax esi
je r-xdata
push edi
lea eax [ ebp - 0x220 ]
push eax
call [ PathFindExtensionW@IAT ]
xor ecx ecx
mov [ eax ] cx
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x220 ]
movsd [ edi ] [ esi ]
push eax
lea eax [ ebp - 0x18 ]
push eax
movsw [ edi ] [ esi ]
call sub_40241b
pop edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40fef3
leave
retn
sub_402705
push 0x4
mov eax sub_422d2f
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40559b
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi ] r--data
cmp [ ebp + 0x8 ] edi
je r-xdata
mov [ esi + 0x50 ] edi
push [ ebp + 0x8 ]
call sub_4114d7
pop ecx
mov [ esi + 0x50 ] eax
jmp r-xdata
lea ecx [ ebx + 0x74 ]
call sub_4023cb
cmp eax edi
je r-xdata
call sub_40406e
call sub_40c0a9
mov ebx eax
cmp ebx edi
jne r-xdata
mov [ eax + 0x4 ] esi
call [ GetCurrentThread@IAT ]
mov [ esi + 0x2c ] eax
call [ GetCurrentThreadId@IAT ]
mov [ esi + 0x30 ] eax
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esi + 0x92 ] ax
mov [ esi + 0x90 ] ax
mov [ esi + 0x44 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x9c ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x98 ] 0x200
mov eax esi
call sub_410ec1
retn 0x4
sub_4027dc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_4023df
jmp r-xdata
mov eax [ edi ]
push ebx
push [ ebp + 0xc ]
mov ebx [ eax - 0xc ]
sub esi eax
sar esi 0x1
call sub_401370
cmp esi ebx
pop ebx
push [ ebp + 0xc ]
ja r-xdata
push 0x80070057
call sub_4013a0
pop edi
pop ebp
retn 0x8
push [ ebp + 0x8 ]
mov ecx [ edi ]
push [ ecx - 0x8 ]
push eax
call sub_401210
lea ecx [ eax + esi * 2 ]
push ecx
mov ecx [ edi ]
push [ ecx - 0x8 ]
push eax
call sub_402193
jmp r-xdata
add esp 0x10
push [ ebp + 0xc ]
mov ecx edi
call sub_4013c0
pop esi
sub_40284f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40217e
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_4027dc
pop esi
pop ebp
retn 0x4
sub_402870
push 0x414
mov eax sub_422d60
call sub_410e88
mov esi ecx
mov [ ebp - 0x41c ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x58 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x88 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
call sub_40c0a9
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
mov eax [ esi + 0x70 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x74 ]
cmp eax ebx
je r-xdata
push eax
call sub_40c480
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
movzx eax [ esi + 0x90 ]
cmp ax bx
je r-xdata
push eax
call sub_40c480
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
movzx eax [ esi + 0x92 ]
cmp ax bx
je r-xdata
push eax
call [ GlobalDeleteAtom@IAT ]
mov ecx [ esi + 0x8c ]
cmp ecx ebx
je r-xdata
push eax
call [ GlobalDeleteAtom@IAT ]
call sub_40c0a9
mov ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x50 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] ebx
push [ esi + 0x50 ]
call sub_410975
push [ esi + 0x54 ]
call sub_410975
push [ esi + 0x60 ]
call sub_410975
push [ esi + 0x64 ]
call sub_410975
push [ esi + 0x68 ]
call sub_410975
add esp 0x14
mov [ esi + 0x2c ] ebx
jmp r-xdata
mov [ eax + 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_405293
call sub_410ee4
retn
sub_402989
lea ecx [ ebp - 0x418 ]
call sub_4011c0
mov esi [ ebp - 0x420 ]
mov eax [ esi ]
xor ebx ebx
push ebx
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x322
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401470
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x322
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401470
add esp 0x18
jmp r-xdata
mov edi [ ebp - 0x418 ]
push ebx
push ebx
push edi
call sub_403d39
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_401230
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_402a5e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_402870
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_402a96
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x54 ]
call sub_410975
push [ ebp + 0x8 ]
call sub_4114d7
push [ esi + 0x68 ]
mov [ esi + 0x54 ] eax
call sub_410975
push [ esi + 0x50 ]
call sub_4114d7
add esp 0x10
mov [ esi + 0x68 ] eax
pop esi
pop ebp
retn 0x4
sub_402acc
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
xor edi edi
mov esi 0x2001f
push esi
push edi
push r--data
mov ebx ecx
push 0x80000001
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov esi [ RegCloseKey@IAT ]
cmp [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebx + 0x54 ]
mov ebx [ RegCreateKeyExW@IAT ]
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push edi
push esi
push edi
push edi
push edi
push [ eax + 0x68 ]
push [ ebp - 0x8 ]
call ebx
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call esi
sub_402b5f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_402acc
mov edi eax
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2001f
push esi
push esi
push esi
push [ ebp + 0x8 ]
push edi
call [ RegCreateKeyExW@IAT ]
push edi
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_402ba7
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push r--data
push 0x10
push eax
call sub_411311
add esp 0x10
push [ esi + 0x68 ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
push edi
call [ WritePrivateProfileStringW@IAT ]
push edi
call sub_402b5f
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn 0xc
push 0x4
lea eax [ ebp + 0x10 ]
push eax
push 0x4
push 0x0
push ebx
push esi
call [ RegSetValueExW@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
jmp r-xdata
sub_402c30
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
add eax eax
push eax
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_4102ec
add esp 0x10
pop ebp
retn
sub_402c51
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402c30
push eax
call sub_40202b
add esp 0x14
pop ebp
retn
sub_402c72
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402c51
add esp 0x10
pop ebp
retn
push [ ebp + 0x10 ]
call sub_41129a
pop ecx
inc eax
sub_402cb2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ ecx ]
push edi
call [ eax + 0x10 ]
lea edx [ esi + 0xc ]
cmp [ edx ] 0x0
jl r-xdata
mov edx [ eax ]
push 0x2
push [ esi + 0x4 ]
mov ecx eax
call [ edx ]
mov edi eax
test edi edi
jne r-xdata
cmp eax [ esi ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
inc eax
push eax
add esi 0x10
push esi
push eax
lea eax [ edi + 0x10 ]
push eax
call sub_401210
add esp 0x10
call sub_4012d0
xor eax eax
mov edi esi
inc eax
[ edx ] eax
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_402d12
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp eax 0xffffffff
jne r-xdata
push eax
mov ecx esi
call sub_4013c0
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
push [ eax - 0x8 ]
push eax
call sub_402c9d
pop ecx
pop ecx
sub_402d3c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
sub eax 0x10
push eax
mov esi ecx
call sub_402cb2
add eax 0x10
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402d76
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
call sub_402138
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
movzx edi [ esi ]
push edi
mov ecx ebx
call sub_401370
movzx ecx [ esi ]
push ecx
add esi 0x2
push esi
push edi
push eax
call sub_402c72
add esp 0x10
push edi
mov ecx ebx
call sub_4013c0
xor eax eax
inc eax
pop edi
sub_402dc2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40cd59
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx esi
push eax
call sub_402d76
sub_402de6
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
je r-xdata
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0xffff0000
jne r-xdata
movzx eax [ ebp + 0x8 ]
push eax
call sub_402dc2
mov al 0x1
sub_402e0b
push 0x4
mov eax sub_422d90
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40414d
push eax
mov ecx esi
call sub_401190
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_402de6
test al al
jne r-xdata
mov eax esi
call sub_410ec1
retn 0x4
push [ ebp + 0x8 ]
mov ecx esi
call sub_402a7f
sub_402e4f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x110
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
call sub_4086cb
push eax
push r--data
call sub_40c292
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0x150 ]
jmp r-xdata
pop ebp
retn 0x10
sub_402e8d
push 0x4
mov eax sub_422db3
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_408eda
call sub_410ec1
retn
call sub_4088f5
sub_402ec4
push 0x58
mov eax sub_422dd6
call sub_410e52
mov esi ecx
push esi
lea ecx [ ebp - 0x64 ]
call sub_4048fd
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_40b4b2
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x64 ]
call sub_404951
call sub_410ed5
retn
mov ecx esi
call sub_4085f9
sub_402f1d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_4072b6
push 0x20
lea edi [ esi + 0x54 ]
push 0x0
push edi
mov [ esi ] r--data
call sub_4113e0
mov eax [ ebp + 0xc ]
mov [ esi + 0x68 ] eax
mov eax [ ebp + 0x8 ]
movzx ecx ax
add esp 0xc
mov [ edi ] eax
pop edi
mov [ esi + 0x58 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x8
sub_402f5a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x3c ] 0x18
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call [ EndDialog@IAT ]
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x8c ]
sub_402fd1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
push eax
push [ ecx + 0x20 ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_40869f
pop ebp
retn 0x8
mov eax [ eax + 0x20 ]
sub_402ff7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_40696b
test eax eax
je r-xdata
mov ecx esi
call sub_409044
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ edi + 0x4 ] 0x100
jne r-xdata
cmp [ eax + 0x68 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_406e2c
mov eax [ edi + 0x8 ]
cmp eax 0x1b
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongW@IAT ]
test al 0x4
je r-xdata
cmp eax 0x3
jne r-xdata
push r--data
push [ edi ]
call sub_40c50b
test eax eax
je r-xdata
push 0x2
push [ esi + 0x20 ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x111
push [ esi + 0x20 ]
call [ SendMessageW@IAT ]
jmp r-xdata
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
sub_403097
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov esi ecx
push edi
push ebx
call sub_404ca9
test eax eax
je r-xdata
test edi edi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test ebx 0x8000
je r-xdata
cmp edi 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
cmp ebx 0xf000
jae r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
push eax
call sub_40869f
test eax eax
je r-xdata
call sub_405201
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
push [ ebp + 0x10 ]
mov ecx eax
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
push [ ebp + 0x10 ]
mov ecx eax
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
sub_403121
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_402e8d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_403142
mov edi edi
push esi
push edi
mov esi ecx
call sub_40c0a9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
mov ecx eax
call sub_403bc2
lea ecx [ esi + 0x6c ]
push ecx
push eax
call sub_403b22
push esi
mov edi eax
call sub_40a214
mov eax edi
pop edi
pop esi
retn
mov eax [ eax + 0x20 ]
sub_40317e
mov edi edi
push esi
mov esi ecx
call sub_408758
mov ecx esi
call sub_408728
push [ esi + 0x6c ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ esi + 0x6c ] 0x0
call sub_40c0a9
mov eax [ eax + 0x4 ]
pop esi
test eax eax
je r-xdata
push 0x1
push [ esi + 0x6c ]
call [ EnableWindow@IAT ]
retn
push 0x1
mov ecx eax
call sub_403bc2
sub_4031c2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_404a05
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x154 ]
mov ecx esi
call sub_4085f9
pop esi
pop ebp
retn 0x8
sub_4031e9
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
push edi
call [ eax + 0x160 ]
call sub_40c0a9
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4085f9
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov eax edi
test [ esi + 0x3c ] 0x100
je r-xdata
mov edx [ esi + 0x64 ]
push eax
test edx edx
je r-xdata
mov eax [ esi + 0x4c ]
and [ eax + 0x70 ] 0x0
push 0x0
push 0x0
mov ecx esi
call sub_402fd1
test eax eax
je r-xdata
push [ esi + 0x58 ]
mov edx [ ecx ]
push esi
call [ edx + 0x24 ]
mov edi [ ecx ]
push edx
push esi
call [ edi + 0x20 ]
jmp r-xdata
mov ecx eax
call sub_40b683
xor edi edi
push 0xffffffff
mov ecx esi
call sub_402f5a
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
sub_403271
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
call sub_40c0a9
xor edi edi
cmp [ eax + 0x4 ] edi
jne r-xdata
push esi
call sub_401b23
mov esi 0xe146
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c0a9
mov eax [ eax + 0x4 ]
mov edx [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
mov edx [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
test eax eax
je r-xdata
pop edi
leave
retn
xor eax eax
inc eax
jmp r-xdata
pop esi
sub_4032c9
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
push [ esi + 0x58 ]
call sub_40b42e
push eax
call sub_40afa6
jmp r-xdata
push 0x0
call sub_407f3c
mov ecx esi
test eax eax
je r-xdata
push 0xffffffff
call sub_402f5a
xor eax eax
pop esi
retn
mov ecx esi
test eax eax
jne r-xdata
push 0xe146
call sub_40b4e9
mov esi eax
test esi esi
je r-xdata
xor eax eax
inc eax
pop esi
retn
call sub_403271
neg eax
sbb eax eax
and eax 0x5
push eax
mov ecx esi
call sub_40b61a
sub_40332c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x58 ] 0x0
mov eax [ edi + 0x5c ]
mov esi [ edi + 0x60 ]
mov [ ebp - 0x4 ] eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_40c0a9
mov ebx [ eax + 0xc ]
push 0x5
push [ edi + 0x58 ]
push ebx
call [ FindResourceW@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
inc ebx
test esi esi
je r-xdata
push [ ebp - 0x4 ]
call [ LockResource@IAT ]
mov esi eax
cmp [ edi + 0x58 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax 0xffff
cmp [ esi + 0x2 ] ax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ FreeResource@IAT ]
movzx eax [ esi + 0xa ]
movzx ecx [ esi + 0xc ]
mov edx [ esi + 0xc ]
movzx eax [ esi + 0x12 ]
movzx ecx [ esi + 0x14 ]
jmp r-xdata
xor ebx ebx
test ax ax
jne r-xdata
test edx 0x1801
jne r-xdata
test cx cx
je r-xdata
sub_4033c9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40c0a9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0xac ]
xor eax eax
lea esi [ eax + 0x20000 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
sub_403412
push 0x3c
mov eax sub_422e0b
call sub_410e1c
mov esi ecx
mov [ ebp - 0x20 ] esi
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call sub_40c0a9
mov edi [ eax + 0x3c ]
push 0x10
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_40b117
push 0xfc000
call sub_40b117
call sub_408c58
cmp edi ebx
je r-xdata
call sub_40c0a9
mov eax [ eax + 0xc ]
mov [ ebp + 0x10 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ esi ]
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx esi
call [ eax + 0x134 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_4011c0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push edi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] ebx
call sub_40d1f8
xor ecx ecx
add esp 0xc
cmp eax ebx
sete cl
mov eax ecx
cmp eax ebx
je r-xdata
push [ ebp + 0x8 ]
mov eax [ edi ]
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
mov edi eax
jmp r-xdata
call sub_410ec1
retn 0xc
or [ esi + 0x44 ] 0xffffffff
or [ esi + 0x3c ] 0x10
push esi
call sub_40a214
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push edi
lea ecx [ ebp - 0x38 ]
call sub_40d1bc
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x2
call sub_40d118
lea ecx [ ebp - 0x38 ]
call sub_40ce33
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_40ce25
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp edi ebx
je r-xdata
mov eax [ eax + 0x20 ]
xor eax eax
jmp r-xdata
push [ ebp - 0x14 ]
call [ GlobalLock@IAT ]
mov edi eax
mov ecx [ ebp - 0x28 ]
cmp ecx ebx
je r-xdata
push ebx
push sub_402e4f
push eax
push edi
push [ ebp + 0x10 ]
call [ CreateDialogIndirectParamW@IAT ]
mov ecx [ ebp - 0x1c ]
add ecx 0xfffffff0
mov edi eax
call sub_401230
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
call sub_408758
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
mov eax [ ecx ]
lea edx [ ebp - 0x48 ]
push edx
call [ eax + 0x18 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x134 ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
test [ esi + 0x3c ] 0x10
jne r-xdata
xor eax eax
cmp edi ebx
setne al
push [ ebp - 0x14 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x14 ]
call [ GlobalFree@IAT ]
push edi
call [ DestroyWindow@IAT ]
xor edi edi
sub_4035cd
push 0x24
mov eax sub_422e26
call sub_410e1c
mov esi ecx
mov [ ebp - 0x20 ] esi
mov eax [ esi + 0x60 ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x5c ]
mov [ ebp - 0x18 ] eax
call sub_40c0a9
mov edi [ eax + 0xc ]
xor ebx ebx
cmp [ esi + 0x58 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
call sub_40c0a9
mov edi [ eax + 0xc ]
push 0x5
push [ esi + 0x58 ]
push edi
call [ FindResourceW@IAT ]
push eax
push edi
call [ LoadResource@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push [ ebp - 0x18 ]
call [ LockResource@IAT ]
mov [ ebp - 0x1c ] eax
mov ecx esi
call sub_403142
mov [ ebp - 0x14 ] eax
call sub_408758
and [ ebp - 0x28 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x24 ] ebx
cmp [ ebp - 0x14 ] ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push esi
call sub_40a214
push [ ebp - 0x14 ]
call sub_40869f
push edi
push eax
push [ ebp - 0x1c ]
mov ecx esi
call sub_403412
xor edi edi
cmp eax edi
je r-xdata
call [ GetDesktopWindow@IAT ]
cmp [ ebp - 0x14 ] eax
je r-xdata
call sub_410ec1
retn
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
test [ esi + 0x3c ] 0x10
je r-xdata
push [ ebp - 0x14 ]
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x28 ] edi
je r-xdata
cmp [ esi + 0x20 ] edi
je r-xdata
push 0x4
pop edi
mov ecx esi
call sub_40b573
test eax 0x100
je r-xdata
push 0x0
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
mov [ ebp - 0x2c ] 0x1
call sub_401b23
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
cmp [ ebp - 0x2c ] edi
je r-xdata
push 0x1
mov ecx ebx
call sub_40b65c
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_40b6cd
push edi
mov ecx esi
call sub_408187
xor edi edi
push 0x5
pop edi
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x128 ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
mov ecx ebx
call sub_40b641
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x60 ]
mov ecx esi
call sub_40317e
cmp [ esi + 0x58 ] edi
je r-xdata
call [ GetActiveWindow@IAT ]
cmp eax [ esi + 0x20 ]
jne r-xdata
push 0x0
mov ecx ebx
call sub_40b65c
mov [ ebp - 0x28 ] 0x1
mov eax [ esi + 0x44 ]
push [ ebp - 0x18 ]
call [ FreeResource@IAT ]
push [ ebp - 0x14 ]
call [ SetActiveWindow@IAT ]
sub_403799
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ esi + 0x64 ] ecx
mov ecx esi
call sub_403412
pop esi
pop ebp
retn 0x10
call sub_401b23
sub_4037c6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call [ LockResource@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push 0x0
push [ ebp + 0xc ]
push eax
call sub_403799
pop esi
pop ebp
retn 0xc
sub_403805
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi + 0x58 ] ebx
test ebx 0xffff0000
jne r-xdata
call sub_40c0a9
mov esi [ eax + 0xc ]
push 0x5
push ebx
push esi
call [ FindResourceW@IAT ]
push eax
push esi
call [ LoadResource@IAT ]
push esi
push [ ebp + 0xc ]
mov ebx eax
push ebx
mov ecx edi
call sub_4037c6
push ebx
mov esi eax
call [ FreeResource@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ edi + 0x54 ] 0x0
jne r-xdata
movzx eax bx
mov [ edi + 0x54 ] eax
sub_403879
mov edi edi
push ebp
mov ebp esp
push esi
push 0x200
mov esi ecx
call sub_40b117
mov eax [ esi ]
push 0x0
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
push r--data
call [ eax + 0x54 ]
pop esi
pop ebp
retn 0x10
sub_4038ac
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
mov eax [ esi ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x13c ]
xor ecx ecx
cmp eax ecx
je r-xdata
pop esi
pop ebp
retn 0x14
cmp [ ebp + 0x8 ] ecx
je r-xdata
push ecx
push [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_40b5a7
sub_4038e4
push 0x4
mov eax sub_422db3
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4088f5
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_408eda
call sub_410ec1
retn
sub_403946
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
push [ esi + 0xc ]
call [ GetModuleHandleW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push [ esi + 0xc ]
call [ LoadLibraryW@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
setne al
mov [ esi + 0x8 ] al
sub_40397a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub esi eax
sar esi 0x1
push edi
mov edi [ eax - 0xc ]
mov [ ebp - 0x4 ] ecx
test ebx ebx
jge r-xdata
push [ ebp + 0x8 ]
call sub_40217e
cmp ebx eax
pop ecx
jle r-xdata
push 0x80070057
call sub_4013a0
mov eax 0x7fffffff
sub eax ebx
cmp eax edi
jl r-xdata
mov ebx eax
mov ecx [ ebp - 0x4 ]
lea eax [ edi + ebx ]
push eax
mov [ ebp + 0xc ] eax
call sub_401370
cmp esi edi
lea esi [ eax + esi * 2 ]
jbe r-xdata
push ebx
push esi
lea eax [ eax + edi * 2 ]
push ebx
push eax
call sub_401210
mov ecx [ ebp - 0x4 ]
add esp 0x10
push [ ebp + 0xc ]
call sub_4013c0
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
sub_4039f7
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40217e
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40397a
pop esi
pop ebp
retn 0x4
sub_403a52
push 0x14
push r--data
call sub_41157c
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MessageBoxW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403ab4
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_4115c1
retn
sub_403ab4
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40b806
cmp esi ebx
je r-xdata
sub_403ae9
mov edi edi
push ebp
mov ebp esp
push esi
call sub_401b23
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x128 ]
test eax eax
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x64 ]
sub_403b22
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ GetParent@IAT ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x40000000
je r-xdata
call sub_403a46
test eax eax
jne r-xdata
mov edi esi
mov eax esi
test esi esi
je r-xdata
push esi
call ebx
mov esi eax
mov esi [ eax + 0x20 ]
jmp r-xdata
call sub_401b23
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
jne r-xdata
xor esi esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_403bd4
mov edi edi
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
mov [ ebp - 0x220 ] eax
call sub_403ae9
pop ecx
lea eax [ ebp - 0x210 ]
push eax
push esi
call sub_403b22
mov ebx eax
mov [ ebp - 0x21c ] ebx
cmp ebx [ ebp - 0x210 ]
je r-xdata
and [ ebp - 0x218 ] esi
lea eax [ ebp - 0x218 ]
push eax
push ebx
call [ GetWindowThreadProcessId@IAT ]
test ebx ebx
je r-xdata
push 0x1
push ebx
call [ EnableWindow@IAT ]
test edi edi
je r-xdata
call [ GetCurrentProcessId@IAT ]
cmp [ ebp - 0x218 ] eax
jne r-xdata
and [ ebp - 0x214 ] 0x0
test esi esi
je r-xdata
lea esi [ edi + 0x78 ]
push 0x0
push 0x0
push 0x376
push ebx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
test [ ebp + 0x10 ] 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x214 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x20c ] ax
test edi edi
je r-xdata
mov eax [ ebp + 0x10 ]
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea ebx [ ebp - 0x20c ]
mov edi 0x104
push edi
mov eax ebx
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
cmp eax edi
jne r-xdata
mov ebx [ edi + 0x50 ]
jmp r-xdata
or [ ebp + 0x10 ] 0x30
add eax 0xfffffffd
cmp eax 0x1
ja r-xdata
push [ ebp + 0x10 ]
push ebx
push [ ebp - 0x220 ]
push [ ebp - 0x21c ]
call sub_403a52
add esp 0x10
mov edi eax
test esi esi
je r-xdata
xor eax eax
mov [ ebp - 0x6 ] ax
or [ ebp + 0x10 ] 0x20
jmp r-xdata
cmp [ ebp - 0x210 ] 0x0
je r-xdata
mov eax [ ebp - 0x214 ]
mov [ esi ] eax
push 0x1
call sub_403ae9
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
push 0x1
push [ ebp - 0x210 ]
call [ EnableWindow@IAT ]
sub_403d39
mov edi edi
push ebp
mov ebp esp
call sub_40c0a9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_403bd4
add esp 0x10
pop ebp
retn 0xc
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x98 ]
sub_403d87
push 0x4
mov eax sub_422e49
call sub_410de9
lea ecx [ ebp - 0x10 ]
call sub_4011c0
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_402dc2
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_403d39
lea ecx [ esi - 0x10 ]
mov edi eax
call sub_401230
mov eax edi
call sub_410ec1
retn 0xc
mov eax [ ebp + 0x8 ]
sub_403ddc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
test edx edx
ja r-xdata
mov eax 0x80070057
pop ebp
retn
cmp eax 0xffffffff
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_403e00
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4102ec
push eax
call sub_40202b
add esp 0x14
pop ebp
retn
sub_403e21
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41176c
push eax
call sub_40202b
add esp 0x14
pop ebp
retn
sub_403e5a
push 0x4
mov eax sub_422fb7
call sub_410de9
push 0xc
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ ebp + 0x8 ] eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
call sub_41183f
int3
call sub_403e42
sub_403e9d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
xor edx edx
cmp eax edx
je r-xdata
push edx
push edx
lea eax [ ebp + 0x10 ]
push eax
push 0x800
push [ ecx + 0x8 ]
push edx
push 0x1100
call [ FormatMessageW@IAT ]
test eax eax
jne r-xdata
mov [ eax ] edx
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403e21
add esp 0x10
push [ ebp + 0x10 ]
call [ LocalFree@IAT ]
xor eax eax
inc eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
pop ebp
retn 0xc
sub_403ef6
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_403f18
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov esi [ eax - 0xc ]
lea ebx [ esi + 0x1 ]
push ebx
call sub_401370
mov cx [ ebp + 0x8 ]
mov [ eax + esi * 2 ] cx
push ebx
mov ecx edi
call sub_4013c0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_403f47
mov edi edi
push ebp
mov ebp esp
movsx ax [ ebp + 0x8 ]
movzx eax ax
push esi
push eax
mov esi ecx
call sub_403f18
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403f7d
mov edi edi
push ebp
mov ebp esp
sub esp 0x408
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx ]
lea edx [ ebp - 0x408 ]
push edx
push 0x200
lea edx [ ebp - 0x404 ]
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x408 ]
lea eax [ ebp - 0x404 ]
push [ ebp + 0x8 ]
push eax
call sub_403d39
jmp r-xdata
push [ ebp - 0x408 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_403d87
mov [ ebp + 0xc ] 0xf020
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fef3
leave
retn 0x8
sub_40400b
mov edi edi
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x114 ]
mov [ esi + 0xc ] 0x1
call sub_40ccf1
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_40408a
push 0x4
mov eax sub_422cd9
call sub_410de9
push 0x164
call sub_40c5c7
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_410ec1
retn
call sub_40b989
sub_4040d4
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
call sub_40400b
xor eax eax
mov [ ebx ] ax
push 0xffffffff
lea eax [ esi + 0x14 ]
push eax
push [ ebp + 0xc ]
push ebx
call sub_403e21
add esp 0x10
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
jmp r-xdata
sub_40412b
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_404153
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jge r-xdata
lea eax [ esi + 0x1 ]
imul eax [ ebp + 0xc ]
add eax 0x10
push eax
call sub_4108ab
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
and [ eax + 0x4 ] 0x0
mov [ eax ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x8 ] esi
pop edi
pop esi
pop ebp
retn 0x8
sub_4041a4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jge r-xdata
lea eax [ esi + 0x1 ]
imul eax [ ebp + 0x10 ]
add eax 0x10
push eax
push [ ebp + 0x8 ]
call sub_4118b5
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax + 0x8 ] esi
pop esi
pop ebp
retn 0xc
sub_4041d9
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_403ddc
add esp 0xc
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
push eax
call sub_4013a0
sub_404231
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x10 ]
push edi
test ecx ecx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
mov edi [ ebp + 0xc ]
jne r-xdata
push 0x80004005
mov eax [ ecx ]
push 0x2
push edi
call [ eax ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
add eax 0x10
push edi
mov ecx esi
mov [ esi ] eax
call sub_4013c0
push edi
push [ ebp + 0x8 ]
push edi
push [ esi ]
call sub_401210
add esp 0x10
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
call sub_4012d0
push 0x80070057
jmp r-xdata
call sub_4013a0
sub_404293
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
push edi
mov edi ecx
mov esi [ edi ]
lea ecx [ eax - 0x10 ]
sub esi 0x10
cmp ecx esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x0
jl r-xdata
push [ eax - 0xc ]
mov ecx edi
push eax
call sub_4027dc
mov edx [ ecx ]
cmp edx [ esi ]
jne r-xdata
push ebx
push ecx
call sub_402cb2
pop ecx
mov ecx esi
mov ebx eax
call sub_401230
add ebx 0x10
mov [ edi ] ebx
pop ebx
jmp r-xdata
sub_40430d
mov edi edi
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
pop esi
mov eax ebx
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_404340
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
inc eax
push edi
mov edi [ RestoreDC@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
call edi
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_404382
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
push edi
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_4043b5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
push edi
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_4043e8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
push edi
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_4044fd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutW@IAT ]
pop ebp
retn 0x1c
sub_404524
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutW@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
cwde
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_40459b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringW@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_4045eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetViewportOrgEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_40462a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_404669
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetViewportExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4046a8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ScaleViewportExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4046f3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetWindowExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_404732
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ScaleWindowExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_40477d
push 0x10
call sub_401ae9
pop ecx
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_4047b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp eax ecx
je r-xdata
pop ebp
retn 0x4
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
sub_4047f3
push 0x0
mov eax sub_42337b
call sub_410de9
call sub_40c0dc
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi + 0x1c ]
call sub_410ec1
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_40c4b8
call sub_401ad2
push 0x60
mov ebx eax
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push sub_40448b
push sub_4047b8
push r--data
call sub_40d599
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_401ad2
sub_40487b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push 0x1
mov [ esi + 0x4 ] eax
call sub_4047f3
push esi
push [ esi + 0x4 ]
mov ecx eax
call sub_40392d
push [ esi + 0x4 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc ]
xor eax eax
inc eax
sub_4048b1
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4047f3
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_40d3b9
sub_4048fd
push 0x4
mov eax sub_422e6c
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ esi + 0x14 ]
mov [ esi ] r--data
mov eax [ eax + 0x20 ]
push ecx
push eax
mov [ esi + 0x10 ] eax
call [ BeginPaint@IAT ]
push eax
mov ecx esi
call sub_40487b
test eax eax
jne r-xdata
mov eax esi
call sub_410ec1
retn 0x4
call sub_404453
sub_404951
push 0x4
mov eax sub_422e6c
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x10 ]
call [ EndPaint@IAT ]
mov ecx esi
call sub_4048b1
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4048e4
call sub_410ec1
retn
sub_404991
push 0x0
mov eax sub_42337b
call sub_410de9
call sub_40c0dc
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
call sub_410ec1
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_40c4b8
call sub_401ad2
push 0x60
mov ebx eax
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push sub_40448b
push sub_4047d9
push r--data
call sub_40d599
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_401ad2
sub_404a19
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push 0x1
mov [ esi + 0x4 ] eax
call sub_404991
push esi
push [ esi + 0x4 ]
mov ecx eax
call sub_40392d
xor eax eax
inc eax
sub_404a45
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_404991
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_40d3b9
sub_404a87
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4048e4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_404aa8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_404a05
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
push esi
call edi
sub_404ae9
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
push edi
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_404a05
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_404b34
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404951
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_404b55
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411ad0
add esp 0xc
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_404b71
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x20 ]
push ebx
xor ebx ebx
inc ebx
test eax eax
je r-xdata
call sub_40406e
mov eax [ ebp + 0x1c ]
add eax 0xffffffc7
push esi
cmp eax 0xb
ja r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax ebx
jmp r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_404c79 ]
pop ebx
pop ebp
retn 0x1c
call [ ebp + 0x14 ]
jmp r-xdata
call [ ebp + 0x14 ]
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
push [ ebp + 0x18 ]
jmp r-xdata
push [ ebp + 0x18 ]
mov eax ebx
jmp r-xdata
mov ebx eax
call [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
push esi
call [ ebp + 0x14 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
call [ ebp + 0x14 ]
jmp r-xdata
pop esi
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
sub_404ca9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx ecx
cmp eax 0xfffffffe
jne r-xdata
push esi
push edi
cmp eax 0xfffffffd
jne r-xdata
call sub_40c0a9
cmp [ eax + 0x3c ] 0x0
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
test edi edi
je r-xdata
call sub_40c0a9
push [ ebp + 0x14 ]
mov eax [ eax + 0x3c ]
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
mov ecx eax
push ebx
call [ edx + 0x4 ]
jmp r-xdata
call sub_40406e
mov edi 0x111
mov edi eax
movzx eax ax
shr edi 0x10
mov [ ebp + 0xc ] eax
test edi edi
jne r-xdata
mov eax [ edi + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
call [ eax + 0x2c ]
mov ebx eax
jmp r-xdata
pop ebx
pop ebp
retn 0x10
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
push [ esi + 0x4 ]
call sub_4069ff
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call sub_404b71
jmp r-xdata
call [ esi ]
mov esi [ ebx + 0x4 ]
jmp r-xdata
pop edi
pop esi
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov ebx [ ebx ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push eax
push [ ebp + 0x10 ]
call sub_404b55
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ ebp + 0xc ] 0x1
jmp r-xdata
sub_404ded
mov edi edi
push esi
push 0xd
mov esi ecx
call sub_40e48d
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
test eax eax
je r-xdata
push 0xd
call sub_40e4ff
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
pop esi
retn
mov ecx eax
call sub_40b94c
sub_404e29
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_404e9d
mov edi edi
push esi
mov esi ecx
call sub_40c0a9
mov [ esi + 0x1c ] eax
xor eax eax
inc eax
xor ecx ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x18 ] ecx
mov eax esi
pop esi
retn
sub_404f06
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
call sub_40406e
cmp [ ebp + 0x8 ] ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
call sub_40b65c
push edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x20 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
sbb edx edx
and edx 0xfffffffd
add edx 0x3
or edx 0x400
push edx
push eax
call sub_404e67
jmp r-xdata
pop edi
push [ edi + 0x20 ]
call [ GetParent@IAT ]
push eax
call sub_40869f
push ebx
push ebx
push 0x28
push [ eax + 0x20 ]
call [ SendMessageW@IAT ]
mov [ esi + 0x18 ] 0x1
sub_404f94
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
call sub_40406e
push edi
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x20 ]
call edi
test eax 0x2000
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
pop edi
mov eax [ esi + 0x14 ]
push 0x0
push [ ebp + 0x8 ]
push 0xf1
push [ eax + 0x20 ]
call edi
mov edx [ ebp + 0x8 ]
neg edx
sbb edx edx
and edx 0x8
or edx 0x400
push edx
push eax
call sub_404e4f
jmp r-xdata
sub_40500a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
call sub_40406e
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call sub_40c3c0
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
mov ecx [ esi + 0x8 ]
and eax 0xfffff6fb
cmp ecx [ esi + 0x20 ]
jae r-xdata
push [ ebp + 0x8 ]
or eax edi
push [ esi + 0x4 ]
push eax
push ecx
mov ecx [ esi + 0xc ]
call sub_404e7f
pop edi
jmp r-xdata
sub_405077
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ecx ax
shr eax 0x10
cmp ecx 0x4
movsx ebx ax
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x88 ] ebx
jle r-xdata
call sub_40406e
cmp ebx 0x5
jg r-xdata
cmp ecx 0x20
jle r-xdata
lea eax [ ecx - 0x4 ]
cdq
sub eax edx
lea esi [ ecx + 0xf ]
sar esi 0x4
mov edi eax
sar edi 0x1
mov eax esi
shl eax 0x4
add edi eax
sub edi ecx
cmp edi 0xc
jle r-xdata
push 0x20
pop ecx
mov [ ebp - 0x8c ] ecx
cmp ebx 0x20
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x84 ]
push 0xff
push eax
call sub_4113e0
lea eax [ ebx - 0x6 ]
sar eax 0x1
imul eax esi
add esp 0xc
lea eax [ ebp + eax * 2 - 0x84 ]
mov edx r--data
add esi esi
mov [ ebp - 0x90 ] 0x5
push 0x20
pop ebx
mov [ ebp - 0x88 ] ebx
movzx bx [ edx ]
mov ecx edi
shl bx cl
inc edx
not bx
movzx ecx bx
mov ebx ecx
shr ebx 0x8
mov [ eax ] bl
mov [ eax + 0x1 ] cl
add eax esi
dec [ ebp - 0x90 ]
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push 0x1
push 0x1
push [ ebp - 0x88 ]
push [ ebp - 0x8c ]
call [ CreateBitmap@IAT ]
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fef3
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapW@IAT ]
mov [ rw-data ] eax
sub_405199
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
xor ecx ecx
xor edi edi
cmp [ ebp + 0x8 ] edi
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
cmp [ rw-data ] edi
jne r-xdata
call sub_40406e
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_405077
cmp [ rw-data ] edi
je r-xdata
sub_405213
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
pop ebp
retn 0x8
sub_40525a
mov edi edi
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
call sub_40baf1
mov [ eax + 0x34 ] edi
mov [ eax + 0x54 ] edi
add eax 0x4c
push eax
call [ GetCursorPos@IAT ]
mov [ esi + 0x40 ] edi
mov [ esi + 0x3c ] edi
pop edi
mov [ esi + 0x28 ] 0x1
pop esi
retn
sub_405293
push 0x4
mov eax sub_422e8f
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x2c ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_40c0dc
cmp [ eax + 0x4 ] esi
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_404ec5
call sub_410ec1
retn
and [ eax + 0x4 ] 0x0
sub_405386
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
call [ eax + 0x28 ]
mov esi eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
xor eax eax
mov edi 0xc000
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
push [ esi + 0x4 ]
call sub_4069ff
cmp eax ebx
je r-xdata
push edi
push eax
call sub_4069ff
cmp eax ebx
jne r-xdata
call [ esi ]
mov esi eax
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
cmp edx [ ecx + 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push ebx
push ebx
cmp eax edi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
call [ eax + 0x14 ]
xor eax eax
inc eax
jmp r-xdata
push ebx
push ebx
add eax 0x18
sub_40540f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x8 ] 0xd
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_405435
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor eax eax
mov eax [ ecx + 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_405454
mov edi edi
push ebp
mov ebp esp
push edi
call sub_40c0dc
mov eax [ eax + 0x4 ]
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_401b23
mov esi eax
test esi esi
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
push edi
push eax
call sub_408a1e
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
push edi
mov ecx eax
call sub_405386
test eax eax
je r-xdata
test esi esi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
push [ edi ]
call sub_40869f
mov ecx eax
call sub_409a70
cmp eax esi
je r-xdata
pop esi
pop edi
pop ebp
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x108 ]
jmp r-xdata
sub_4054c7
mov edi edi
push ebp
mov ebp esp
call sub_40c0dc
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_405454
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
pop ebp
retn
sub_4054e8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
cmp eax 0x200
je r-xdata
push ebx
push edi
call sub_40baf1
push [ esi + 0x18 ]
mov ebx eax
push [ esi + 0x14 ]
lea edi [ ebx + 0x4c ]
mov ecx edi
call sub_405435
test eax eax
je r-xdata
cmp eax 0xa0
je r-xdata
mov eax [ esi + 0x14 ]
mov [ edi ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x54 ] eax
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x54 ]
jne r-xdata
cmp eax 0xf
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x118
je r-xdata
pop edi
pop ebx
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
sub_405559
mov edi edi
push ebp
mov ebp esp
call sub_40c0dc
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_4054e8
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x64 ]
pop ebp
retn
sub_40557a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_405293
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40559b
push 0x4
mov eax sub_422e8f
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_404e9d
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
call sub_40525a
mov eax esi
call sub_410ec1
retn
sub_405610
mov edi edi
push esi
push edi
call sub_40baf1
mov esi eax
xor eax eax
push eax
push eax
push eax
lea edi [ esi + 0x30 ]
push edi
call [ GetMessageW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x34 ] 0x36a
je r-xdata
xor eax eax
inc eax
push edi
call sub_4054c7
pop ecx
test eax eax
jne r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageW@IAT ]
sub_40566c
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40c0a9
cmp [ eax + 0x14 ] 0x0
mov esi [ ebp + 0x8 ]
jne r-xdata
push sub_40408a
mov ecx rw-data
call sub_40cb8a
test eax eax
jne r-xdata
test esi esi
jge r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
call sub_40406e
call sub_40c0dc
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
cmp esi 0x8001
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ecx ]
push esi
call [ eax + 0x70 ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4056d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x4 ] ecx
cmp ebx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax esi
push edi
je r-xdata
xor eax eax
jmp r-xdata
call sub_401b23
cmp [ ebp + 0x8 ] esi
jne r-xdata
dec eax
dec eax
je r-xdata
pop esi
pop ebx
leave
retn 0x8
xor eax eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] esi
je r-xdata
push [ ebx ]
call sub_40869f
cmp eax esi
je r-xdata
sub eax 0x7fff
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx eax
call sub_409044
mov edi eax
cmp edi esi
je r-xdata
cmp eax 0x109
ja r-xdata
mov ecx edi
call sub_406e70
test eax eax
je r-xdata
push sub_40408a
mov ecx rw-data
call sub_40cb8a
mov ebx eax
cmp ebx esi
jne r-xdata
cmp [ edi + 0x68 ] esi
je r-xdata
cmp [ ebx + 0x140 ] esi
jne r-xdata
call sub_40406e
call sub_401b23
mov edi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
push 0x7
mov [ ebx + 0x140 ] 0x1
pop ecx
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
call sub_40b641
test eax eax
je r-xdata
push ebx
call sub_40540f
pop ecx
test eax eax
jne r-xdata
and [ ebx + 0x140 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
test eax eax
je r-xdata
push esi
push 0xe146
push 0x111
push [ edi + 0x20 ]
call [ SendMessageW@IAT ]
jmp r-xdata
cmp [ ebx + 0x4 ] 0x202
jne r-xdata
and [ ebx + 0x140 ] 0x0
xor eax eax
inc eax
jmp r-xdata
pop edi
sub_405804
call sub_40c0a9
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
push esi
call sub_40baf1
mov esi eax
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_40566c
push 0xffffffff
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x2c ] eax
pop esi
sub_405832
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
push edi
jg r-xdata
call sub_40c0a9
add eax 0x74
mov ecx eax
call sub_4023cb
cmp [ eax + 0x10 ] esi
jne r-xdata
mov ebx [ ecx + 0x20 ]
mov edi 0x363
cmp ebx esi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x1
pop edi
pop esi
setl al
pop ebx
pop ebp
retn 0x4
call sub_40d590
push 0x1
call sub_40d7a8
call sub_40c0a9
add eax 0x74
mov ecx eax
call sub_4023cb
mov esi [ eax + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x20 ]
cmp eax esi
je r-xdata
test esi esi
jne r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
jmp r-xdata
push esi
inc esi
push esi
push edi
push [ ebx + 0x20 ]
push ebx
call sub_408d9a
push esi
push esi
push 0x0
push esi
push edi
push [ ebx + 0x20 ]
call sub_409085
mov esi [ esi + 0x6c ]
cmp esi ebx
je r-xdata
cmp [ esi + 0xa0 ] 0x0
jne r-xdata
push [ esi + 0x20 ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_40b61a
push 0x0
push 0x1
push edi
push [ esi + 0x20 ]
push esi
call sub_408d9a
push 0x1
push 0x1
push 0x0
push 0x1
push edi
push [ esi + 0x20 ]
call sub_409085
cmp [ esi + 0xa0 ] eax
jl r-xdata
or [ esi + 0xa0 ] 0xffffffff
push eax
mov ecx esi
call sub_40b61a
mov eax [ esi + 0xa0 ]
test eax eax
jle r-xdata
sub_405975
mov eax [ ecx ]
mov ecx [ eax - 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx ]
call [ eax + 0x10 ]
jmp r-xdata
retn
call sub_40414d
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x10 ]
test eax eax
jne r-xdata
sub_405998
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
lea ebx [ esi + edi ]
push ebx
call sub_401370
push esi
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
push esi
push eax
call sub_401210
mov eax [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
lea eax [ eax + esi * 2 ]
push edi
push eax
call sub_401210
mov ecx [ ebp + 0x8 ]
add esp 0x20
push ebx
call sub_4013c0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4059e2
push 0x4
mov eax sub_422ec3
call sub_410de9
mov esi [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
mov ecx esi
call sub_405975
mov ecx [ ebp + 0x8 ]
push eax
call sub_40595e
mov esi [ esi ]
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov edi [ esi - 0xc ]
mov [ ebp - 0x10 ] 0x1
call sub_40217e
push eax
push [ ebp + 0x10 ]
push edi
push esi
push [ ebp + 0x8 ]
call sub_405998
mov eax [ ebp + 0x8 ]
add esp 0x18
call sub_410ec1
retn
sub_405a37
push 0x4
mov eax sub_422ec3
call sub_410de9
mov esi [ ebp + 0x10 ]
and [ ebp - 0x10 ] 0x0
mov ecx esi
call sub_405975
mov ecx [ ebp + 0x8 ]
push eax
call sub_40595e
mov eax [ esi ]
push [ eax - 0xc ]
and [ ebp - 0x4 ] 0x0
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x1
call sub_40217e
pop ecx
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405998
mov eax [ ebp + 0x8 ]
add esp 0x14
call sub_410ec1
retn
sub_405a8c
push 0x228
mov eax sub_422eff
call sub_410e88
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x228 ]
mov [ ebp - 0x230 ] esi
call sub_402d3c
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi 0x80000000
jne r-xdata
lea eax [ ebp - 0x22c ]
push eax
push [ ebp - 0x228 ]
push [ ebp - 0x230 ]
call [ RegOpenKeyW@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
call sub_40b983
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x228 ]
add ecx 0xfffffff0
call sub_401230
mov eax esi
call sub_410ee4
retn 0x8
push 0x104
lea eax [ ebp - 0x220 ]
push eax
push edi
push [ ebp - 0x22c ]
call [ RegEnumKeyW@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x228 ]
push eax
lea eax [ ebp - 0x224 ]
push r--data
push eax
call sub_405a37
add esp 0xc
push eax
lea ecx [ ebp - 0x228 ]
mov [ ebp - 0x4 ] 0x1
call sub_404293
mov ecx [ ebp - 0x224 ]
add ecx 0xfffffff0
mov [ ebp - 0x4 ] 0x0
call sub_401230
mov [ ebp - 0x230 ] 0x80000001
cmp esi 0x103
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
lea ecx [ ebp - 0x224 ]
mov [ ebp - 0x4 ] 0x2
call sub_402e0b
lea eax [ ebp - 0x224 ]
push eax
push [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x3
call sub_405a8c
mov ecx [ ebp - 0x224 ]
mov esi eax
cmp esi edi
setne bl
add ecx 0xfffffff0
mov [ ebp - 0x4 ] 0x2
call sub_401230
test bl bl
jne r-xdata
push [ ebp - 0x228 ]
push [ ebp - 0x230 ]
call [ RegDeleteKeyW@IAT ]
mov esi eax
cmp esi 0x3f2
jne r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
push [ ebp - 0x22c ]
call [ RegCloseKey@IAT ]
sub_405c0a
push 0x228
mov eax sub_422f48
call sub_410e52
xor edi edi
mov esi ecx
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x230 ] edi
call sub_405934
mov [ ebp - 0x22c ] eax
cmp eax edi
je r-xdata
cmp [ esi + 0x54 ] edi
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov ecx esi
call sub_405945
cmp eax edi
je r-xdata
xor eax eax
inc eax
call sub_410ed5
retn
xor eax eax
cmp [ esi + 0x68 ] edi
setne al
cmp eax edi
jne r-xdata
cmp [ ebp - 0x22c ] edi
jne r-xdata
mov edx [ eax ]
push edi
push edi
push 0xfffffffc
push edi
mov ecx eax
call [ edx + 0xc ]
push r--data
lea ecx [ ebp - 0x220 ]
call sub_402e0b
push [ esi + 0x54 ]
lea ecx [ ebp - 0x220 ]
mov [ ebp - 0x4 ] edi
call sub_4039f7
push r--data
lea eax [ ebp - 0x220 ]
push eax
lea eax [ ebp - 0x234 ]
push eax
call sub_4059e2
push [ esi + 0x68 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_4059e2
add esp 0x18
mov ecx [ ebp - 0x234 ]
add ecx 0xfffffff0
mov [ ebp - 0x4 ] 0x3
call sub_401230
lea eax [ ebp - 0x228 ]
push eax
mov esi 0x80000001
push esi
call sub_405a8c
lea eax [ ebp - 0x224 ]
push eax
push [ ebp - 0x220 ]
push esi
call [ RegOpenKeyW@IAT ]
test eax eax
jne r-xdata
call sub_40406e
lea eax [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
push [ ebp - 0x228 ]
push esi
call [ RegQueryValueW@IAT ]
mov ecx [ ebp - 0x228 ]
add ecx 0xfffffff0
call sub_401230
mov ecx [ ebp - 0x220 ]
add ecx 0xfffffff0
call sub_401230
push 0x104
lea eax [ ebp - 0x21c ]
push eax
push edi
push [ ebp - 0x224 ]
call [ RegEnumKeyW@IAT ]
cmp eax 0x103
jne r-xdata
push [ ebp - 0x224 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x220 ]
push eax
push esi
call sub_405a8c
sub_405d7d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp edi 0x1
je r-xdata
call sub_40406e
push 0x2
call sub_40e48d
add [ esi + 0x80 ] edi
cmp [ esi + 0x80 ] 0x0
jle r-xdata
cmp edi 0xffffffff
je r-xdata
push [ esi + 0x84 ]
and [ esi + 0x80 ] 0x0
call [ SetCursor@IAT ]
push [ rw-data ]
call [ SetCursor@IAT ]
test edi edi
jle r-xdata
push 0x2
call sub_40e4ff
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x80 ] 0x1
jne r-xdata
mov [ esi + 0x84 ] eax
jmp r-xdata
sub_405e0e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ecx + 0x88 ]
cmp [ eax ] 0x0
je r-xdata
call sub_40406e
pop ebp
retn 0x4
mov eax [ eax ]
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x4 ]
sub_405e50
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
add eax 0x88
cmp [ eax ] 0x0
jne r-xdata
call sub_40406e
mov eax [ eax ]
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0xc ]
mov eax [ ecx ]
push 0x0
call [ eax ]
jmp r-xdata
pop ebp
retn 0x4
sub_405e9d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
call sub_40406e
cmp eax [ ecx + 0x4 ]
jl r-xdata
mov ecx [ ecx + 0x8 ]
lea eax [ ecx + eax * 4 ]
pop ebp
retn 0x4
sub_405ed0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x88 ]
push edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx 0xe110
cmp eax edx
jb r-xdata
call sub_40406e
mov edi [ ecx + 0x4 ]
add edi edx
cmp eax edi
jae r-xdata
lea edi [ eax - 0xe110 ]
push edi
call sub_405e9d
mov eax [ eax ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x88 ]
test eax eax
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x88 ]
mov eax [ ecx ]
push edi
call [ eax ]
sub_405f2e
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x90
lea eax [ ebp - 0x94 ]
push 0x0
push eax
call sub_4113e0
add esp 0xc
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x88 ] 0x2
sete al
xor ecx ebp
call sub_40fef3
leave
retn
sub_405f88
mov edi edi
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push esi
push edi
call sub_405f2e
push r--data
mov [ rw-data ] eax
call [ GetModuleHandleW@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
pop ebx
setne al
retn
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push r--data
push r--data
jmp r-xdata
xor eax eax
inc eax
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
sub_406092
mov edi edi
push ebp
mov ebp esp
call sub_405f88
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
push esi
push edi
jne r-xdata
pop ebp
jmp [ rw-data ]
mov eax 0x12340042
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_4060e3
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
call sub_405f88
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_406092
jmp r-xdata
test eax eax
je r-xdata
sub_406150
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
call sub_405f88
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
push ebx
jne r-xdata
mov esi [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call [ rw-data ]
mov edi eax
xor ecx ecx
cmp edi ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] ecx
jne r-xdata
cmp [ ebx ] 0x28
jb r-xdata
pop edi
pop esi
leave
retn 0x8
cmp [ esi ] 0x68
jb r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push 0x20
lea eax [ esi + 0x28 ]
push eax
push 0xffffffff
push eax
push ecx
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor esi esi
inc esi
cmp [ ebx ] 0x68
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
jb r-xdata
mov eax esi
jmp r-xdata
push 0x20
add ebx 0x28
push ebx
push 0xffffffff
push r--data
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
pop ebx
sub_406216
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
xor edx edx
push esi
push edi
mov [ ebp - 0x20 ] ax
cmp ebx edx
jne r-xdata
mov edi [ ebp + 0x1c ]
cmp edi edx
jne r-xdata
mov eax 0x80070057
jmp r-xdata
mov ecx [ edi + 0x8 ]
cmp ecx 0x5
jbe r-xdata
mov eax 0x80020008
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x24
mov [ ebp + 0x8 ] edx
cmp [ edi + 0xc ] edx
jbe r-xdata
mov eax 0x8002000e
jmp r-xdata
cmp [ ebp + 0x8 ] ecx
jae r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp + 0x1c ] eax
cmp [ ebp + 0x28 ] 0x0
mov esi 0x80020003
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx ecx
sub edx [ ebp + 0x8 ]
shl eax 0x4
add eax [ edi ]
sub ecx [ ebp + 0x8 ]
lea edx [ ebp + edx * 4 - 0x48 ]
mov esi [ edi ]
add [ ebp + 0x1c ] 0x4
add esi edx
inc [ ebp + 0x8 ]
mov [ ebp + eax * 4 - 0x44 ] esi
mov eax [ ebp + 0x8 ]
add edx 0x10
cmp eax [ edi + 0xc ]
jb r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
lea eax [ ebp + 0x18 ]
mov [ ebp + 0x28 ] eax
mov [ edx ] eax
add eax 0x10
sub edx 0x4
dec ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
cmp eax ecx
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ VariantInit@IAT ]
mov eax [ ebp + 0xc ]
add eax 0x139a
cmp eax 0x12
ja r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp + 0x20 ] eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantClear@IAT ]
mov eax esi
mov cl [ ebp + 0x18 ]
push 0x2
pop edx
jmp [ eax * 4 + jump_table_406796 ]
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x5
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
push [ ebp + 0x20 ]
mov eax [ ebx ]
push ebx
call [ eax + 0x4c ]
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebx ]
push ebx
call [ eax + 0x48 ]
jmp r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test dl cl
je r-xdata
test dl cl
je r-xdata
cmp [ edi + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
push ebx
call [ eax + 0x20 ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
push ebx
call [ eax + 0x1c ]
mov esi 0x8002000e
jmp r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
mov edi [ VariantChangeType@IAT ]
je r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
je r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x10 ]
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
je r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x50 ]
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x44 ]
jmp r-xdata
mov esi [ ebp - 0x44 ]
movzx eax [ esi ]
test eax 0x4000
je r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x3c ]
jmp r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x38 ]
jmp r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x34 ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x30 ]
jmp r-xdata
test cl 0x4
je r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test cl 0x4
je r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x24 ]
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
push 0x9
mov eax [ eax + 0x8 ]
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x3
je r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call edi
mov esi eax
test esi esi
jl r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov ecx [ ebp + 0x28 ]
and [ ecx ] 0x0
mov esi [ ebp - 0x34 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
push [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
push [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
push [ ebp - 0xc ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
jmp r-xdata
test cl 0xf
je r-xdata
mov esi [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
push 0x8
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
mov ecx 0x400c
cmp ax cx
jne r-xdata
test al 0xc
jne r-xdata
cmp [ edi + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x2c ]
jmp r-xdata
cmp [ edi + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x28 ]
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
push 0x3
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
push [ ebp + 0x18 ]
push ebx
call [ ecx + 0x60 ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call edi
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp + 0x28 ]
and [ eax ] 0x0
jmp r-xdata
lea eax [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
test cl 0xc
je r-xdata
lea eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x20 ]
pop eax
mov [ ecx ] ax
mov ecx 0x4008
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
mov eax [ esi + 0x8 ]
push 0x8
pop ecx
mov [ eax ] cx
mov eax [ esi + 0x8 ]
add eax ecx
jmp r-xdata
mov esi 0x80020005
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x8
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x8
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax ] 0x1
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
mov eax [ esi + 0x8 ]
push 0x3
pop ecx
mov [ eax ] cx
mov eax [ esi + 0x8 ]
add eax 0x8
jmp r-xdata
push esi
call [ VariantClear@IAT ]
push 0x8
pop ecx
lea eax [ esi + 0x8 ]
mov [ esi ] cx
mov eax [ esi + 0x8 ]
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov esi [ ebp - 0x40 ]
mov ecx [ ebx ]
add edx 0x8
push edx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x6c ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x68 ]
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jge r-xdata
movzx ecx [ esi ]
test ecx 0x4000
je r-xdata
lea eax [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
sub_4067e2
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
lea edi [ eax + ebx * 4 ]
xor esi esi
add esi 0x4
cmp esi 0x4c
jb r-xdata
mov eax [ esi + rw-data ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x1 ] 0x1
mov [ ecx + ebx * 4 ] eax
push [ esi + rw-data ]
push [ edi ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax 0x80020006
jmp r-xdata
inc ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_406844
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404e9d
mov eax [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x20 ] eax
xor eax eax
mov [ esi + 0x24 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40688f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetWindowLongW@IAT ]
mov ecx [ ebp + 0x10 ]
not ecx
and ecx eax
or ecx [ ebp + 0x14 ]
cmp eax ecx
jne r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowLongW@IAT ]
mov eax [ ebp + 0x18 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
or eax 0x17
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x14
sub_40691e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x40 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
push eax
call [ CallWindowProcW@IAT ]
mov eax [ esi ]
call [ eax + 0xf8 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call [ DefWindowProcW@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40696b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40c0a9
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call eax
sub_40698c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x20 ]
call sub_40c551
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
jmp r-xdata
cmp [ esi ] 0x2c
jb r-xdata
pop edi
pop ebx
leave
retn 0xc
mov eax [ ebx + 0x20 ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageW@IAT ]
test eax 0x2000
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_4069ff
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_406a41
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x114 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x118 ]
mov [ ebp - 0x4 ] eax
sub_406ab8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b58d
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_40b573
push eax
push [ ebp + 0x8 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
pop ebp
retn 0x8
and eax 0xfffffdff
sub_406b9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x24 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406bc0
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406be5
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x2c ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406c0a
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406c2f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x34 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406c54
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x38 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406c79
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406c9e
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
push edi
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
pop edi
pop esi
pop ebp
retn 0x18
sub_406cc6
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406d15
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x50 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406d3a
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
mov ecx [ eax ]
push esi
push edi
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406d5f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
sub esp 0x10
mov edi esp
push [ ebp + 0x14 ]
lea esi [ ebp + 0x18 ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
pop edi
pop esi
pop ebp
retn 0x20
sub_406d8d
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
push edi
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
pop edi
pop esi
pop ebp
retn 0x18
sub_406dd0
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
mov ecx [ eax ]
push esi
push edi
sub esp 0x10
mov edi esp
lea esi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x64 ]
pop edi
pop esi
pop ebp
retn 0x10
sub_406df2
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_406e2c
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
cmp eax 0x200
jb r-xdata
cmp eax 0x109
jbe r-xdata
xor eax eax
cmp eax 0x209
ja r-xdata
push edx
call sub_40b53c
jmp r-xdata
pop ebp
retn 0x4
sub_406ee4
push 0x14
push r--data
call sub_41157c
xor esi esi
mov [ ebp - 0x20 ] esi
lea eax [ ebp - 0x20 ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] esi
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call [ RegisterClassW@IAT ]
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406f3f
mov ax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_4115c1
retn
sub_406f3f
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_40b806
test esi esi
je r-xdata
sub_406f76
push 0x14
push r--data
call sub_41157c
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetClassInfoW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406fd5
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_4115c1
retn
sub_406fd5
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40b806
cmp esi ebx
je r-xdata
sub_40700a
push 0x14
push r--data
call sub_41157c
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetClassInfoExW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407069
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_4115c1
retn
sub_407069
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40b806
cmp esi ebx
je r-xdata
sub_40709e
push 0x14
push r--data
call sub_41157c
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateWindowExW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407118
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_4115c1
retn
sub_407118
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40b806
cmp esi ebx
je r-xdata
sub_40714d
push 0x14
push r--data
call sub_41157c
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4071a6
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_4115c1
retn
sub_4071a6
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40b806
cmp esi ebx
je r-xdata
sub_407246
mov edi edi
push ebp
mov ebp esp
push 0xffffffff
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
push 0x1
push 0x409
call [ CompareStringW@IAT ]
dec eax
dec eax
pop ebp
retn
sub_407266
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax 0x7fffffff
cmp esi eax
je r-xdata
mov ecx [ ecx ]
pop esi
cmp ecx eax
je r-xdata
mov edx [ ecx ]
cmp edx eax
je r-xdata
call sub_40406e
push ecx
call sub_40e48d
pop ebp
retn 0x4
mov [ ecx ] esi
cmp edx esi
je r-xdata
sub_4072b6
mov edi edi
push esi
mov esi ecx
call sub_404e9d
xor eax eax
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
retn
sub_407339
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov edi [ eax + 0x20 ]
xor edi edi
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x18 ]
push [ ebp + 0x20 ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov ebx [ ecx ]
sub edi edx
push edi
sub eax esi
push eax
push edx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x20
sub_407384
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov edi [ eax + 0x20 ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov ebx [ ecx ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
push edi
sub eax esi
push eax
mov eax [ ebp + 0x10 ]
push edx
push esi
or eax 0x40000000
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
sub_4073d4
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40c0dc
mov esi eax
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov esi [ esi + 0x50 ]
je r-xdata
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageW@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x178 ]
sub_40742a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
jne r-xdata
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
xor edi edi
mov [ ebp + 0x8 ] eax
test eax eax
jle r-xdata
call sub_40406e
xor eax eax
mov ebx [ ebp + 0xc ]
push edi
mov ecx esi
call sub_4071eb
cmp eax ebx
je r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
push [ esi + 0x4 ]
call sub_40e76d
jmp r-xdata
inc edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
push ebx
push eax
call sub_40742a
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov ecx esi
call sub_407200
test eax eax
je r-xdata
jmp r-xdata
sub_4074ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_407496
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40c5e4
sub_4074cb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40c0a9
mov eax [ eax + 0x4 ]
cmp [ eax + 0x6c ] 0x1
jne r-xdata
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x7c ]
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0xf
pop eax
jmp r-xdata
cmp eax 0xb
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edx [ esi ]
push eax
push [ ebp + 0x8 ]
mov ecx esi
call [ edx + 0x80 ]
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_407521
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn 0x8
call sub_40c0dc
mov eax [ eax + 0x48 ]
test eax eax
je r-xdata
test [ eax + 0x4 ] 0x40000000
jne r-xdata
push 0x1
call sub_4073d4
sub_40754f
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40d9b8
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407597
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40da29
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_4075df
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_40da81
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0xc
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_40762d
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x28 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_406216
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x24
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407689
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0x94 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_4076d7
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0x98 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407725
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0x9c ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_40777f
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_4077d9
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407833
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_40788d
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xac ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_4078e7
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407941
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_40799b
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x20 ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x1c
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_4079f8
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xbc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407a52
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407aa0
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407aee
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xc8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407b48
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xcc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407ba2
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0x18 ]
lea esi [ ebp + 0x1c ]
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xd0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x24
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407c05
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x20 ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xd4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x1c
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407c62
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x14 ]
mov eax [ esi ]
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call [ eax + 0xd8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x10
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407cb6
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xdc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x14
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407d0d
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xe0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407d67
push 0x8
mov eax sub_422f78
call sub_410de9
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xe4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407dc1
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40d9b8
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407e09
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40da29
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407e51
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_40da81
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0xc
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407e9f
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xe8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_410ec1
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40b806
sub_407eed
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
lea ecx [ ebp - 0x8 ]
call sub_40c0f5
cmp [ ebp - 0x4 ] 0x0
mov eax [ esi - 0x14 ]
mov [ edi ] eax
pop esi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
push [ ebp - 0x8 ]
push 0x0
call sub_40b806
pop edi
leave
retn 0x8
sub_407f3c
push 0x24
mov eax sub_422f93
call sub_410e1c
mov esi ecx
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] edi
call sub_40baf1
mov [ ebp - 0x18 ] eax
add eax 0x13c
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ esi + 0x20 ]
mov [ eax ] ecx
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ eax + 0xfc ]
mov [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x13c ] eax
mov eax [ ebp + 0x8 ]
call sub_410ec1
retn 0x4
sub_407fc7
mov edi edi
push ebp
mov ebp esp
sub esp 0x60
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_40b573
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x40000000
je r-xdata
mov edi [ eax + 0x20 ]
jmp r-xdata
push 0x4
push [ esi + 0x20 ]
call [ GetWindow@IAT ]
push [ esi + 0x20 ]
call [ GetParent@IAT ]
jmp r-xdata
push ebx
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x38 ]
push eax
push [ esi + 0x20 ]
call ebx
test [ ebp - 0x4 ] 0x40000000
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x28 ]
push eax
push edi
call esi
push 0x2
lea eax [ ebp - 0x28 ]
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
cmp ecx [ ebp - 0x18 ]
pop ebx
jge r-xdata
sub ebx [ ebp - 0x30 ]
add ebx [ ebp - 0x10 ]
mov ecx ebx
mov [ ebp - 0x60 ] 0x28
test edi edi
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
mov eax [ ebp + 0x8 ]
add eax esi
cmp eax [ ebp - 0xc ]
jle r-xdata
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x28 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_4060e3
push eax
call sub_406150
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_401b23
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov esi [ ebp - 0x34 ]
sub esi [ ebp - 0x2c ]
add esi [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x30 ]
mov ebx [ ebp - 0x38 ]
add eax ecx
cdq
sub eax edx
mov ecx eax
sub edi ebx
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x1c ]
sar eax 0x1
sar ecx 0x1
sub ecx eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
add edi ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x24 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp edi [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_4060e3
push eax
call sub_406150
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x20 ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_40b6cd
pop edi
pop esi
leave
retn 0x4
mov esi [ ebp - 0x14 ]
sub_408187
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor ebx ebx
push edi
inc ebx
xor edi edi
test [ ebp + 0x8 ] 0x4
mov esi ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] edi
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40b573
mov [ ebp - 0x4 ] ebx
test eax 0x10000000
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
or [ esi + 0x3c ] 0x18
mov [ ebp - 0x14 ] eax
call sub_40520a
mov ebx [ UpdateWindow@IAT ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
push edi
push edi
push edi
push edi
push [ ebp - 0x10 ]
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
call sub_405656
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
push edi
call sub_401e79
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ ebp + 0x8 ] 0x1
jne r-xdata
push 0x1
mov ecx esi
call sub_40b61a
push [ esi + 0x20 ]
call ebx
mov [ ebp - 0x4 ] edi
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x88 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
cmp eax 0x118
je r-xdata
test [ ebp + 0x8 ] 0x2
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
and [ esi + 0x3c ] 0xffffffe7
mov eax [ esi + 0x44 ]
push [ ebp - 0x10 ]
call sub_405559
pop ecx
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_40b61a
push [ esi + 0x20 ]
call ebx
mov [ ebp - 0x4 ] edi
cmp eax 0x104
jne r-xdata
mov [ ebp - 0xc ] edi
push [ ebp - 0x8 ]
push edi
push 0x36a
push [ esi + 0x20 ]
call [ SendMessageW@IAT ]
inc [ ebp - 0x8 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push edi
push edi
push edi
push edi
push [ ebp - 0x10 ]
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] edi
push [ esi + 0x20 ]
push edi
push 0x121
push [ ebp - 0x14 ]
call [ SendMessageW@IAT ]
jmp r-xdata
sub_4082cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov eax [ ecx + 0x3c ]
test al 0x10
je r-xdata
pop ebp
retn 0x4
and eax 0xffffffef
mov [ ecx + 0x3c ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x20 ]
call [ PostMessageW@IAT ]
sub_4082f5
push 0x4
mov eax sub_422fb7
call sub_410de9
push 0x54
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_410ec1
retn
call sub_4072b6
sub_408349
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
pop ebp
retn 0x4
push r--data
call sub_403946
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x10 ] eax
sub_408378
push 0x14
push r--data
call sub_41157c
mov esi ecx
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_4115c1
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_408349
mov esi [ esi + 0x10 ]
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
call esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4083db
call sub_40406e
sub_4083ec
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
pop ebp
retn 0x4
push r--data
call sub_403946
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x14 ] eax
sub_40841b
push 0x18
push r--data
call sub_41157c
mov esi ecx
xor edi edi
mov [ ebp - 0x20 ] edi
lea eax [ ebp - 0x20 ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_4083ec
mov eax [ esi + 0x14 ]
xor ecx ecx
cmp eax edi
setne cl
cmp ecx edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
call eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408490
mov eax [ ebp - 0x1c ]
call sub_40406e
call sub_4115c1
retn 0x4
sub_408490
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] eax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_40b806
test esi esi
je r-xdata
sub_4084c6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
pop ebp
retn 0x4
push r--data
call sub_403946
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x10 ] eax
sub_4084f5
push 0x18
push r--data
call sub_41157c
mov esi ecx
xor edi edi
mov [ ebp - 0x20 ] edi
lea eax [ ebp - 0x20 ]
push eax
call sub_40c0a9
push [ eax + 0x80 ]
call sub_40b81d
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_4084c6
mov eax [ esi + 0x10 ]
xor ecx ecx
cmp eax edi
setne cl
cmp ecx edi
jne r-xdata
xor eax eax
jmp r-xdata
call eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408565
mov eax [ ebp - 0x1c ]
call sub_40406e
call sub_4115c1
retn
sub_408565
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] eax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_40b806
test esi esi
je r-xdata
sub_4085bb
mov edi edi
push esi
push sub_40408a
mov ecx rw-data
call sub_40cb8a
mov esi eax
test esi esi
jne r-xdata
call [ GetMessageTime@IAT ]
mov [ esi + 0x68 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
cwde
mov [ esi + 0x70 ] eax
mov [ esi + 0x6c ] ecx
lea eax [ esi + 0x58 ]
pop esi
retn
call sub_40406e
sub_4085f9
mov edi edi
push esi
mov esi ecx
push sub_40408a
mov ecx rw-data
call sub_40cb8a
test eax eax
jne r-xdata
push [ eax + 0x64 ]
mov edx [ esi ]
push [ eax + 0x60 ]
mov ecx esi
push [ eax + 0x5c ]
call [ edx + 0x118 ]
pop esi
retn
call sub_40406e
sub_40862b
push 0x0
mov eax sub_42337b
call sub_410de9
call sub_40c0dc
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_410ec1
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_40c4b8
call sub_401ad2
push 0x60
mov ebx eax
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x20
push sub_40448b
push sub_408322
push r--data
call sub_40d599
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_401ad2
sub_40869f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push 0x1
call sub_40862b
push [ ebp + 0x8 ]
mov esi eax
mov ecx esi
call sub_40d622
mov edi eax
push esi
mov ecx edi
call sub_40b70b
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4086cb
mov edi edi
push ebp
mov ebp esp
push 0x0
call sub_40862b
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x4
add ecx 0x1c
pop ebp
jmp sub_40d34b
sub_4086ec
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jne r-xdata
push ebx
push 0x1
call sub_40862b
mov ebx eax
push esi
push edi
mov ecx ebx
mov [ esi + 0x20 ] edi
call sub_40392d
push ebx
mov ecx esi
call sub_40b70b
xor eax eax
inc eax
pop ebx
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_408728
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
and [ esi + 0x50 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_40862b
test eax eax
je r-xdata
and [ esi + 0x20 ] 0x0
push [ esi + 0x20 ]
lea ecx [ eax + 0x1c ]
call sub_40d3b9
sub_408758
mov edi edi
push esi
push sub_40408a
mov ecx rw-data
call sub_40cb8a
mov esi eax
test esi esi
jne r-xdata
call sub_40c0a9
cmp [ eax + 0x14 ] 0x0
je r-xdata
call sub_40406e
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x28 ] 0x0
sub_4087a5
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x4c ] 0x0
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push 0x0
push 0x0
push eax
call [ ecx + 0xc ]
mov ecx esi
pop esi
jmp sub_4085f9
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4087e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov esi ecx
call sub_405201
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x48 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x20 ] esi
jne r-xdata
mov ecx [ esi + 0x4c ]
xor ebx ebx
inc ebx
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x48 ] ebx
cmp [ edi + 0x24 ] esi
jne r-xdata
call sub_40c0a9
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x4c ] 0x0
test [ esi + 0x3c ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x24 ] ebx
mov [ edi + 0x20 ] ebx
call sub_40c0a9
cmp edi [ eax + 0x4 ]
jne r-xdata
mov eax [ esi + 0x20 ]
mov edi [ GetWindowLongW@IAT ]
push 0xfffffffc
push eax
call edi
mov ecx esi
mov ebx eax
call sub_4085f9
mov eax [ esi + 0x20 ]
push 0xfffffffc
push eax
call edi
cmp eax ebx
jne r-xdata
call sub_40c0dc
mov edi [ eax + 0x3c ]
test edi edi
je r-xdata
push ebx
call sub_401e79
call sub_40cd64
test eax eax
je r-xdata
mov ecx esi
call sub_408728
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf8 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x20 ]
call [ SetWindowLongW@IAT ]
push 0x30
lea eax [ ebp - 0x30 ]
push 0x0
push eax
call sub_4113e0
mov eax [ esi + 0x20 ]
add esp 0xc
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x433
push [ edi + 0x20 ]
mov [ ebp - 0x30 ] 0x2c
mov [ ebp - 0x2c ] ebx
call [ SendMessageW@IAT ]
sub_4088f5
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
push edi
call sub_40862b
cmp eax edi
jne r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
push [ esi + 0x20 ]
lea ecx [ eax + 0x1c ]
call sub_40d34b
call sub_40406e
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
cmp [ esi + 0x50 ] edi
je r-xdata
mov eax [ esi + 0x20 ]
cmp eax edi
jne r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x50 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax edi
mov edi eax
sub_408954
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
push sub_40408a
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_40cb8a
test eax eax
jne r-xdata
mov eax [ eax + 0x5c ]
lea ecx [ ebp - 0xc ]
push ecx
sub eax 0x132
push 0x0
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x19
mov ecx esi
call [ eax + 0x110 ]
pop esi
leave
retn 0x8
call sub_40406e
sub_4089a5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4089a5
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4089a5
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
call sub_4086cb
test eax eax
jne r-xdata
call sub_40869f
jmp r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
sub_408a1e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi ]
jmp r-xdata
test esi esi
jne r-xdata
push esi
call sub_4086cb
test eax eax
je r-xdata
xor eax eax
cmp esi [ ebp + 0x8 ]
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x108 ]
test eax eax
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_408a64
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push sub_40408a
mov ecx rw-data
call sub_40cb8a
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
mov edx [ esi ]
push [ eax + 0x64 ]
mov ecx esi
push [ eax + 0x60 ]
push [ eax + 0x5c ]
call [ edx + 0x120 ]
pop esi
pop ebp
retn 0x4
call sub_40406e
sub_408a9f
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov ecx esi
call sub_4085f9
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
call [ eax + 0x90 ]
test eax eax
jne r-xdata
pop esi
retn 0x4
sub_408ac4
mov edi edi
push ebx
push esi
push edi
mov ebx ecx
call sub_40b573
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_4085f9
neg eax
sbb eax eax
neg eax
call sub_401b23
mov edi eax
test edi edi
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ edi + 0x20 ]
call [ SendMessageW@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_408b30
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0xec ]
test eax eax
jge r-xdata
call sub_4085f9
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx esi
jmp r-xdata
pop esi
leave
retn 0x8
sub_408b6e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4085f9
push 0x0
call sub_408a64
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
sub_408b94
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageW@IAT ]
mov ebx ecx
mov esi 0x121
jmp r-xdata
push 0x1
push esi
push esi
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
mov ecx ebx
call sub_4085f9
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_408bd6
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_408a64
test eax eax
je r-xdata
mov ecx esi
call sub_4085f9
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_408bff
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
lea eax [ ebp - 0x4 ]
push eax
xor edi edi
call sub_40c0a9
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_4083ec
cmp [ eax ] edi
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x3fc0
cmp eax [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_40859b
test eax eax
je r-xdata
mov eax edi
pop edi
leave
retn 0x8
call sub_40c0a9
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_408378
mov edi 0x3fc0
mov edi [ ebp + 0xc ]
jmp r-xdata
sub_408c58
mov edi edi
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_40c0a9
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x88 ] 0x0
jne r-xdata
call sub_40406e
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x84 ]
xor ecx ebp
pop esi
call sub_40fef3
leave
retn
push 0x114
lea eax [ ebp - 0x118 ]
push 0x0
push eax
call sub_4113e0
add esp 0xc
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x118 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x114 ] 0x6
jb r-xdata
mov [ esi + 0x88 ] 0x1
call sub_40c0a9
mov eax [ eax + 0x78 ]
mov ecx [ eax + 0x8 ]
call sub_4084f5
mov [ esi + 0x84 ] eax
sub_408d24
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x10 ] 0x10000000
jne r-xdata
leave
retn 0xc
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_40b573
test eax 0x50000000
jne r-xdata
pop esi
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x20 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
mov ecx esi
call sub_408d09
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x124 ]
test eax eax
je r-xdata
mov ecx eax
call sub_40b641
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_407fc7
sub_408d9a
push 0x38
mov eax sub_422ff9
call sub_410e1c
push sub_40408a
mov ecx rw-data
call sub_40cb8a
mov ebx eax
xor eax eax
xor edx edx
cmp ebx edx
setne al
mov [ ebp - 0x18 ] ebx
cmp eax edx
jne r-xdata
lea eax [ ebx + 0x58 ]
push 0x7
mov esi eax
pop ecx
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x60 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x5c ] edi
mov [ ebx + 0x64 ] eax
mov [ ebp - 0x4 ] edx
cmp edi 0x2
jne r-xdata
call sub_40406e
and [ ebp + 0x8 ] 0x0
cmp edi 0x110
jne r-xdata
cmp [ esi + 0x4c ] edx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ esi ]
push [ ebp + 0x14 ]
mov ecx esi
push edi
call [ eax + 0x110 ]
mov [ ebp + 0x18 ] eax
cmp edi 0x110
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_4072fb
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
push edx
call [ eax + 0x60 ]
mov eax [ ebp + 0x18 ]
push 0x7
lea edi [ ebx + 0x58 ]
pop ecx
lea esi [ ebp - 0x44 ]
[ edi ] [ esi ]
call sub_410ec1
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_408d24
jmp r-xdata
sub_408e8d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4086cb
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcW@IAT ]
cmp [ eax + 0x20 ] esi
jne r-xdata
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
call sub_408d9a
jmp r-xdata
pop esi
sub_408eda
push 0x4
mov eax sub_422e8f
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_404ec5
call sub_410ec1
retn
cmp [ eax + 0x28 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x28 ] 0x0
cmp esi rw-data
je r-xdata
call sub_4088f5
sub_408f4f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4085f9
lea eax [ ebp + 0xc ]
push eax
call sub_408a64
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_408f7c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x1
push edi
mov edi ecx
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x20 ]
call sub_4089a5
test eax eax
je r-xdata
push sub_40408a
mov ecx rw-data
call sub_40cb8a
test eax eax
jne r-xdata
mov ecx edi
call sub_4085f9
push 0x0
mov ecx eax
call sub_408a64
test eax eax
jne r-xdata
mov ecx [ eax + 0x74 ]
cmp ecx [ edi + 0x20 ]
jne r-xdata
call sub_40406e
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
push [ eax + 0x78 ]
call sub_40e759
jmp r-xdata
push [ esi + 0x8 ]
push eax
call sub_40742a
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
sub_409005
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push esi
push edi
mov edi [ GetParent@IAT ]
push eax
jmp r-xdata
call edi
push eax
call sub_40869f
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x128 ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax esi
jmp r-xdata
push [ esi + 0x20 ]
sub_409044
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi ]
call [ eax + 0x128 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov ecx esi
call sub_409005
mov esi eax
mov eax esi
pop esi
retn
mov ecx esi
jmp r-xdata
call sub_409005
test eax eax
jne r-xdata
mov esi eax
mov ecx eax
sub_409085
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
jmp r-xdata
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x18
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageW@IAT ]
push esi
call sub_4086cb
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x20 ]
push eax
call sub_408d9a
jmp r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_409085
sub_409104
push 0x54
mov eax sub_42301c
call sub_410de9
push 0x0
call sub_40862b
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x1c ]
push edi
mov ecx esi
call sub_40d34b
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
call sub_408a64
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_40d34b
test eax eax
je r-xdata
call sub_410ec1
retn 0x8
mov eax [ eax + 0x4c ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x24 ]
call sub_40d34b
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x60 ]
call sub_406844
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] esi
call sub_408a64
and [ ebp - 0x40 ] 0x0
xor ecx ecx
test eax eax
setne cl
or [ ebp - 0x4 ] 0xffffffff
mov esi ecx
lea ecx [ ebp - 0x60 ]
call sub_408eda
mov eax esi
jmp r-xdata
sub_4091a4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_409104
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
pop esi
pop ebp
retn 0x8
mov ecx esi
call sub_4085f9
sub_4091d4
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
mov esi ecx
call sub_409104
test eax eax
je r-xdata
mov ecx esi
call sub_4085f9
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_409200
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4086ec
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf8 ]
push sub_408e8d
push 0xfffffffc
push [ ebp + 0x8 ]
mov esi eax
call [ SetWindowLongW@IAT ]
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
inc eax
mov [ esi ] eax
sub_409246
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_409278
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_4092aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x24 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_4092ea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40932a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x2c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40936a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_4093aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x34 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_4093ea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x38 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40942a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x3c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40946a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
push [ ebp + 0x20 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
sub_4094b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_4094f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_409525
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_409557
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x50 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_409597
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
mov eax 0x80010108
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_4095ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor ecx ecx
push esi
push edi
cmp eax ecx
jne r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov eax 0x80010108
jmp r-xdata
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x24
cmp [ ebp + 0x14 ] ecx
je r-xdata
cmp [ ebp + 0x18 ] ecx
je r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x18 ]
lea esi [ ebp + 0x1c ]
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
sub_409623
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x20 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
sub_409666
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x14 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x60 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x10
sub_40969e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x64 ]
mov eax 0x80010108
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x14
sub_409705
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x28 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x24 ]
mov ecx [ eax ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x18 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x24
sub_40973f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x1c ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x18 ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x14 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x18
sub_409770
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x8
sub_409795
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x10 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x10
sub_4097d7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_408eda
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_4097f8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x1
push edi
mov edi ecx
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_409104
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_40e76d
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov ecx edi
call sub_4085f9
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_40983a
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
mov esi ecx
call sub_409104
test eax eax
je r-xdata
mov ecx esi
call sub_4085f9
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_409866
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push 0x0
push [ eax + 0xc ]
mov esi ecx
call sub_409104
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x8
mov ecx esi
call sub_4085f9
sub_40988b
mov edi edi
push ebp
mov ebp esp
push esi
push 0xc
call sub_40e48d
push sub_408cf4
mov ecx rw-data
call sub_40c666
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call sub_40406e
push 0xc
call sub_40e4ff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
push r--data
call sub_40714d
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ esi + 0x4 ]
call [ FreeLibrary@IAT ]
and [ esi + 0x4 ] 0x0
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_40990b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
shr eax 0x10
xor ebx ebx
mov esi ecx
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] ebx
jne r-xdata
push sub_40408a
mov ecx rw-data
call sub_40cb8a
cmp eax ebx
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ eax + 0x13c ]
cmp eax [ esi + 0x20 ]
je r-xdata
call sub_40406e
lea ecx [ ebp - 0x2c ]
call sub_406a87
mov eax [ esi ]
push ebx
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_409104
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
je r-xdata
mov eax [ esi ]
push ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
push edi
call [ eax + 0xc ]
sub_4099a4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ esi ]
push edi
push ebx
mov edi ecx
call [ GetDlgCtrlID@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_40408a
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_40cb8a
test eax eax
jne r-xdata
mov eax [ eax + 0x13c ]
cmp eax [ edi + 0x20 ]
jne r-xdata
call sub_40406e
push [ ebp + 0x10 ]
push ebx
call sub_409104
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
push ecx
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_409a26
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4086cb
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_4097c0
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ eax + 0x20 ]
jmp r-xdata
sub_409a70
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
jmp r-xdata
call sub_409a26
test eax eax
jne r-xdata
mov esi eax
push eax
push esi
call sub_40869f
pop esi
retn
sub_409a98
mov edi edi
push esi
mov esi ecx
call sub_40c0a9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_40b573
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x20 ] esi
jne r-xdata
mov ecx esi
pop esi
jmp sub_4085f9
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x20 ]
call sub_409085
mov ecx rw-data
call sub_40daa4
sub_409ae0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40c0a9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_40b573
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x20 ] esi
jne r-xdata
pop esi
pop ebp
retn 0x4
call sub_4085bb
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x20 ]
call sub_409085
push [ ebp + 0x8 ]
mov ecx eax
call sub_401f84
sub_409b30
mov edi edi
push esi
mov esi ecx
call sub_401b23
cmp eax esi
jne r-xdata
mov ecx esi
call sub_40b573
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_40daea
mov ecx esi
call sub_4085f9
pop esi
retn 0x8
call sub_4085bb
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x20 ]
call sub_409085
sub_409b7b
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x10 ] r--data
call sub_40cd74
mov eax esi
pop esi
retn 0x4
sub_409ba8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
cmp edx [ ecx ]
jne r-xdata
xor eax eax
pop ebp
retn
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax [ ecx + 0xc ]
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_409bfc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0xc0
jne r-xdata
cmp [ eax + 0xc ] 0x46000000
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_409c2c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax 0x80070057
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
and [ ebx ] 0x0
call sub_409bfc
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov esi [ esi + 0x4 ]
add esi [ ebp + 0x8 ]
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov [ ebx ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ esi ]
xor ecx ecx
test eax eax
sete cl
mov [ ebp + 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax 0x80004002
jmp r-xdata
cmp edi 0x1
je r-xdata
push [ ebp + 0x10 ]
push eax
call sub_409ba8
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x4 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call edi
test eax eax
je r-xdata
add esi 0xc
cmp [ ebp + 0xc ] 0x0
jne r-xdata
test eax eax
jl r-xdata
sub_409d20
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x14 ]
push esi
mov esi [ ecx + 0x14 ]
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x70 ]
sub_409d5a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409ce9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_409db7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_40b573
test eax 0x40000000
jne r-xdata
pop edi
leave
retn 0xc
push ebx
mov ecx edi
call sub_409a70
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
mov eax [ edi + 0x20 ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ esi + 0x20 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] esi
jmp r-xdata
mov ecx esi
call sub_409a70
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x20 ]
call [ SendMessageW@IAT ]
pop esi
sub_409e2f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_409a70
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x20 ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_40869f
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_40869f
cmp esi eax
je r-xdata
mov ecx esi
call sub_40b641
test eax eax
je r-xdata
push [ esi + 0x20 ]
call [ SetForegroundWindow@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_409ea7
push 0x40
mov eax sub_423037
call sub_410e1c
mov edi [ ebp + 0x8 ]
mov esi r--data
push esi
push edi
call [ GetPropW@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
sub eax 0x6
je r-xdata
push [ ebp + 0x14 ]
call sub_40869f
push edi
mov esi eax
call sub_40869f
push esi
push [ ebp + 0x10 ]
push eax
call sub_409db7
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_410ec1
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcW@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_40869f
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_409e2f
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongW@IAT ]
push esi
push edi
call [ RemovePropW@IAT ]
push esi
call [ GlobalFindAtomW@IAT ]
movzx eax ax
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_40869f
mov esi eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_4072fb
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcW@IAT ]
push [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_408d24
sub_409fb9
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x1c ]
call sub_40523d
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax r-xdata
retn
mov ecx [ ebp - 0x1c ]
call sub_403f64
sub_409ff4
push 0x248
mov eax sub_42305d
call sub_410e52
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push sub_40408a
mov ecx rw-data
mov [ ebp - 0x21c ] esi
call sub_40cb8a
mov edi eax
xor eax eax
test edi edi
setne al
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x3
je r-xdata
call sub_40406e
mov eax [ esi ]
mov esi [ edi + 0x14 ]
mov [ ebp - 0x214 ] eax
call sub_40c0a9
movzx eax [ eax + 0x14 ]
mov [ ebp - 0x218 ] eax
test esi esi
jne r-xdata
push esi
push ebx
push [ ebp + 0x8 ]
push [ edi + 0x28 ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x224 ]
call sub_40c0f5
and [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
call sub_4086ec
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf8 ]
mov esi sub_408e8d
push esi
push 0xfffffffc
push ebx
mov [ ebp - 0x214 ] eax
call [ SetWindowLongW@IAT ]
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x214 ]
test [ ecx + 0x20 ] 0x40000000
jne r-xdata
call sub_410ed5
retn 0xc
and [ edi + 0x14 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x220 ] 0x0
je r-xdata
mov ecx [ ebp - 0x214 ]
mov [ ecx ] eax
push [ ebp - 0x21c ]
push ebx
push 0x3
push [ edi + 0x28 ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x218 ] 0x0
mov esi eax
je r-xdata
test eax eax
jne r-xdata
push [ ebp - 0x224 ]
push 0x0
call sub_40b806
jmp r-xdata
mov eax esi
push [ edi + 0x28 ]
call [ UnhookWindowsHookEx@IAT ]
and [ edi + 0x28 ] 0x0
cmp [ rw-data ] si
jne r-xdata
push 0xffffffe0
push ebx
call [ GetClassLongW@IAT ]
movzx eax ax
cmp ax [ rw-data ]
jne r-xdata
push 0x30
pop esi
push esi
push eax
lea eax [ ebp - 0x254 ]
push eax
call sub_4113e0
lea eax [ ebp - 0x254 ]
mov [ ebp - 0x254 ] esi
push eax
mov esi r--data
push esi
push 0x0
call sub_40700a
add esp 0x18
mov [ rw-data ] ax
test ax ax
je r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongW@IAT ]
mov [ ebp - 0x214 ] eax
test eax eax
je r-xdata
jmp r-xdata
push 0x100
lea eax [ ebp - 0x210 ]
push eax
push ebx
call [ GetClassNameW@IAT ]
test eax eax
je r-xdata
mov esi r--data
push esi
push ebx
call [ GetPropW@IAT ]
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x210 ]
push esi
push eax
call sub_413150
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x214 ]
push esi
push ebx
call [ SetPropW@IAT ]
push esi
push ebx
call [ GetPropW@IAT ]
cmp eax [ ebp - 0x214 ]
jne r-xdata
push esi
call [ GlobalAddAtomW@IAT ]
push sub_409ea7
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
sub_40a214
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push sub_40408a
mov ecx rw-data
call sub_40cb8a
mov esi eax
test esi esi
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] edi
je r-xdata
call sub_40406e
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_409ff4
push 0x5
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x28 ] eax
test eax eax
jne r-xdata
call sub_404036
sub_40a26e
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x28 ] eax
call sub_40c0a9
mov eax [ eax + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
jne r-xdata
push 0xffffffff
push edi
call sub_40dc71
test eax eax
jne r-xdata
push esi
call sub_40a214
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_40709e
add esp 0x30
mov edi eax
call sub_408758
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
xor eax eax
jmp r-xdata
call sub_40406e
xor eax eax
test edi edi
setne al
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
pop edi
pop esi
leave
retn 0x2c
sub_40a34d
mov edi edi
push ebx
push esi
mov ebx ecx
mov eax [ ebx ]
push edi
call [ eax + 0x128 ]
test eax eax
je r-xdata
mov esi [ SendMessageW@IAT ]
xor edi edi
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call esi
push 0x1
push 0x1
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call sub_409085
mov ecx ebx
call sub_409a70
mov ebx eax
cmp ebx edi
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x188 ]
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call esi
push 0x1
push 0x1
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call sub_409085
call [ GetCapture@IAT ]
cmp eax edi
je r-xdata
call sub_40406e
pop edi
pop esi
pop ebx
retn
push edi
push edi
push 0x1f
push eax
call esi
sub_40a3cb
push 0x70
mov eax sub_4230a5
call sub_410de9
mov edi ecx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x7fffffff
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp ebx 0x111
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0xf0 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40729a
xor eax eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_40869f
push eax
push [ ebp + 0xc ]
push edi
call sub_409db7
mov eax [ edi ]
lea edx [ ebp - 0x10 ]
push edx
push ecx
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xf4 ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_409e2f
test eax eax
jne r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40729a
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ebx eax
xor ebx [ ebp + 0x8 ]
push 0x7
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x10 ] eax
and ebx 0x1ff
call sub_407266
imul ebx ebx 0xc
mov eax [ ebp + 0x8 ]
add ebx rw-data
mov [ ebp - 0x18 ] ebx
cmp eax [ ebx ]
jne r-xdata
cmp [ eax + 0x74 ] 0x0
jle r-xdata
call sub_410ec1
retn 0x10
mov eax [ ebp - 0x18 ]
mov ebx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
cmp ecx [ eax + 0x8 ]
jne r-xdata
cmp ebx 0x200
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ eax + 0x4 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x10 ] ebx
call sub_40729a
test ebx ebx
je r-xdata
cmp ebx 0x100
jb r-xdata
cmp ebx 0x209
jbe r-xdata
cmp [ ebp + 0x8 ] 0xc000
push 0x0
push 0x0
jae r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_40729a
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
lea eax [ ebx - 0x281 ]
cmp eax 0x10
ja r-xdata
cmp ebx 0x10f
jbe r-xdata
mov ecx [ edi + 0x4c ]
mov eax [ ecx ]
lea edx [ ebp - 0x10 ]
push edx
push esi
push [ ebp + 0xc ]
push ebx
call [ eax + 0x94 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
push 0xc000
push eax
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebx + 0x4 ]
call sub_4069ff
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ eax + 0x14 ]
mov eax [ eax + 0x10 ]
lea ecx [ eax - 0x1 ]
cmp ecx 0x53
ja r-xdata
jmp r-xdata
call sub_4069ff
mov ebx eax
test ebx ebx
jne r-xdata
call [ ebx ]
mov ebx eax
mov [ ebp + 0x10 ] ebx
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] eax
lea ecx [ ebp - 0x14 ]
call sub_40729a
jmp [ ecx * 4 + jump_table_40a98f ]
mov ebx [ ebx + 0x14 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp [ eax ] ecx
je r-xdata
mov ebx [ ebp + 0x10 ]
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push [ ebp + 0xc ]
call sub_404867
push eax
push [ ebp + 0xc ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push esi
call sub_40869f
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_40869f
push esi
push [ ebp + 0xc ]
call sub_40869f
jmp r-xdata
push esi
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40449e
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
call sub_4072b6
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x5c ] eax
call sub_4086cb
test eax eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40449e
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call ebx
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_40869f
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
call sub_40e759
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
jmp r-xdata
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
mov eax esi
shr eax 0x10
cwde
push eax
movsx eax si
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push [ ebp + 0xc ]
call sub_40869f
push eax
push esi
call sub_40869f
push eax
xor eax eax
cmp [ edi + 0x20 ] esi
sete al
push [ ebp + 0xc ]
call sub_404867
push [ ebp + 0xc ]
call sub_40e759
jmp r-xdata
mov eax esi
shr eax 0x10
cwde
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_40e759
jmp r-xdata
push [ ebp + 0xc ]
push esi
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_40869f
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_40869f
mov ecx [ ebp + 0xc ]
movsx edx cx
shr ecx 0x10
movsx ecx cx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ecx
cmp eax 0x2a
jne r-xdata
push esi
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_40e759
jmp r-xdata
push esi
call sub_40e759
push eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_40e759
jmp r-xdata
movzx ecx si
push ecx
mov eax esi
shr eax 0x10
mov ecx eax
and ecx 0xf000
push ecx
and eax 0xfff
push eax
push [ ebp + 0xc ]
call sub_40869f
movzx eax [ ebp + 0xc ]
push esi
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] ebx
call sub_40729a
push 0x0
push 0x0
push 0xc000
add ebx 0x18
push ebx
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call ebx
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x5c ] 0x0
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_408eda
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x0
call sub_4048e4
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_40869f
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_40869f
jmp r-xdata
push ecx
push edx
jmp r-xdata
push esi
call sub_40869f
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push [ ebp + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
jmp r-xdata
lea eax [ ebp - 0x7c ]
push [ ebp - 0x5c ]
lea ecx [ eax + 0x24 ]
call sub_40d34b
test eax eax
je r-xdata
mov [ ebp - 0x2c ] eax
sub_40aadf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0xc
mov edx 0x111
push esi
cmp eax edx
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
lea edx [ eax - 0x132 ]
cmp edx 0x6
ja r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
push esi
shr eax 0x10
push esi
or eax 0xbd110000
push eax
push esi
call sub_404ca9
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
add eax 0xfffffece
push edi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
xor esi esi
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_40a3cb
cmp [ edi ] esi
pop edi
jne r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40a3cb
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
inc eax
cmp ecx esi
je r-xdata
cmp eax 0x2f
jbe r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
xor esi esi
push esi
lea eax [ ebp - 0x8 ]
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_404ca9
jmp r-xdata
sub_40abc6
and [ rw-data ] 0x0
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
push 0x0
push 0x0
mov ecx esi
call sub_409b30
pop esi
retn 0x8
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
push 0xfffffd3f
call [ eax + 0x50 ]
sub_40abf2
push 0x14
mov eax sub_4230ca
call sub_410e1c
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
jne r-xdata
push 0x18
mov [ esi ] edi
mov [ ebp - 0x14 ] 0x8007000e
mov [ ebp - 0x4 ] edi
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x1
cmp ecx edi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_409b7b
jmp r-xdata
call sub_410ec1
retn 0x4
cmp eax edi
je r-xdata
mov [ esi ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edi
sub_40ac8a
lea ecx [ ebp - 0x418 ]
call sub_4011c0
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x497
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401470
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x497
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401470
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_403d39
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_401230
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_40ad31
push 0x0
mov eax sub_423120
call sub_410de9
mov edi ecx
call sub_40c0a9
mov esi [ eax + 0x4 ]
lea ecx [ ebp + 0xb ]
call sub_407230
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_40a34d
mov ecx edi
call sub_409a70
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x64 ]
push [ eax + 0x20 ]
call [ WinHelpW@IAT ]
test eax eax
jne r-xdata
call sub_40406e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xb ]
call sub_40ac64
call sub_410ec1
retn 0x8
push 0xffffffff
push eax
push 0xf107
call sub_403d87
sub_40ada1
push 0x0
mov eax sub_423120
call sub_410de9
mov edi ecx
call sub_40c0a9
mov esi [ eax + 0x4 ]
lea ecx [ ebp + 0xb ]
call sub_407230
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_40a34d
mov ecx edi
call sub_409a70
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x64 ]
push [ eax + 0x20 ]
call sub_40988b
test eax eax
jne r-xdata
call sub_40406e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xb ]
call sub_40ac64
call sub_410ec1
retn 0x8
push 0xffffffff
push eax
push 0xf107
call sub_403d87
sub_40ae16
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
je r-xdata
pop ebp
jmp sub_40aadf
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
call sub_401a70
add esi 0xfffffece
cmp esi 0x6
pop esi
ja r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ecx ] eax
pop ebp
retn 0x10
sub_40ae5f
push 0x4
mov eax sub_423143
call sub_410de9
mov esi ecx
cmp [ ebp + 0xc ] 0xfffffffc
mov edi 0x80004005
jne r-xdata
mov eax edi
call sub_410ec1
retn 0xc
mov eax [ esi ]
call [ eax + 0x90 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
push eax
push [ ebp + 0x8 ]
push r--data
call LresultFromObject
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
xor edi edi
lea eax [ ebp - 0x10 ]
push eax
call sub_40abf2
mov edi eax
test edi edi
jl r-xdata
and [ ebp + 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x10 ]
call sub_406ecb
test eax eax
jl r-xdata
mov eax [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
xor edi edi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
lea edx [ esi + 0x34 ]
push edx
lea edx [ esi + 0x30 ]
push edx
mov [ esi + 0x2c ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
push [ esi + 0x2c ]
push [ ebp + 0x8 ]
push r--data
call LresultFromObject
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
sub_40af19
push 0x30
mov eax sub_42315e
call sub_410e1c
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x38 ]
push eax
push [ edi + 0x24 ]
push [ edi + 0x10 ]
call sub_406f76
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
push edi
call sub_406ee4
pop ecx
test ax ax
jne r-xdata
call sub_40c0a9
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_40e48d
and [ ebp - 0x4 ] 0x0
call sub_40c0a9
push [ edi + 0x24 ]
lea esi [ eax + 0x34 ]
mov ecx esi
call sub_403a2f
push 0xa
mov ecx esi
call sub_403f47
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_40e4ff
call sub_410ec1
retn 0x4
sub_40afa6
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x1
cmp esi edi
je r-xdata
mov eax [ ebp - 0x8 ]
push edi
push edi
push edi
push edi
push 0x364
push [ eax + 0x20 ]
call sub_409085
push ebx
pop ebx
cmp [ ebp - 0x4 ] edi
je r-xdata
inc esi
inc esi
movzx ebx ax
movzx eax [ esi ]
inc esi
inc esi
mov ecx [ esi ]
mov [ ebp - 0xc ] ecx
mov ecx 0x1234
add esi 0x4
cmp ax cx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
leave
retn 0x4
push 0x8
pop ecx
xor eax eax
lea edi [ ebp - 0x2c ]
[ edi ]
or [ ebp - 0x2c ] 0xffffffff
push esi
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x1
call sub_402e0b
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x0
movzx eax bx
push 0x40b
push eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x20 ]
call [ SendDlgItemMessageW@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov ecx 0x401
cmp ax cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffff0
call sub_401230
xor edi edi
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx 0x403
cmp ax cx
jne r-xdata
mov eax 0x180
jmp r-xdata
add esi [ ebp - 0xc ]
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov ecx 0x40b
cmp ax cx
jne r-xdata
mov eax 0x143
push esi
movzx eax ax
push edi
push eax
movzx eax bx
push eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x20 ]
call [ SendDlgItemMessageA@IAT ]
cmp eax 0xffffffff
jne r-xdata
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ecx 0x180
cmp ax cx
je r-xdata
mov [ ebp - 0x4 ] edi
add ecx 0xffffffc3
cmp ax cx
jne r-xdata
sub_40b0d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_40c0a9
movzx ecx [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconW@IAT ]
push ecx
push eax
call edi
mov [ esi + 0x14 ] eax
test eax eax
jne r-xdata
push esi
call sub_40af19
pop edi
pop esi
pop ebp
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_40b117
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
call sub_40c0a9
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
push 0x28
xor edi edi
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_4113e0
mov eax [ DefWindowProcW@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_40c0a9
test [ ebp + 0x8 ] 0x1
mov eax [ eax + 0x8 ]
push 0x8
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x10 ] r--data
call sub_40af19
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40af19
test eax eax
je r-xdata
inc esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_40af19
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_40b0d3
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_40b0d3
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
push 0x3fc0
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0xff
call sub_408bff
or esi eax
and [ ebp + 0x8 ] 0xffffc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
push 0x40
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x10
call sub_408bff
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
push 0x80
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x2
call sub_408bff
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_408bff
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_408bff
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x1
call sub_408bff
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x40
call sub_408bff
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_408bff
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_408bff
or esi eax
mov edi 0x8000
test [ ebp + 0x8 ] edi
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_408bff
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_408bff
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_408bff
or esi eax
mov eax 0x40000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_408bff
or esi eax
mov eax 0x80000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_408bff
or esi eax
mov ecx [ ebp - 0x4 ]
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edx 0x3fc0
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x1000
call sub_408bff
or esi eax
mov eax esi
and eax [ ebp + 0x8 ]
pop edi
sub eax [ ebp + 0x8 ]
pop esi
neg eax
sbb eax eax
inc eax
pop ebx
or eax 0x10
mov [ ecx + 0x18 ] eax
or esi 0x10
sub_40b409
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop esi
pop ebp
retn 0x4
push 0x1
call sub_40b117
mov [ esi + 0x28 ] r--data
sub_40b42e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor ebx ebx
xor edi edi
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
push edi
call sub_40afa6
mov esi eax
test edi edi
je r-xdata
call sub_40c0a9
mov esi [ eax + 0xc ]
push 0xf0
push [ ebp + 0x8 ]
push esi
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
mov eax esi
test ebx ebx
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push ebx
call [ FreeResource@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
push ebx
call [ LockResource@IAT ]
mov edi eax
sub_40b4e9
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4c ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x74 ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ GetDlgItem@IAT ]
push eax
call sub_40869f
pop ebp
retn 0x4
sub_40b513
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4c ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x70 ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ GetDlgItem@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
pop ebp
retn 0x8
sub_40b53c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x3c ] 0x100
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call [ IsDialogMessageW@IAT ]
call sub_40c0a9
mov eax [ eax + 0x3c ]
push [ ebp + 0x8 ]
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x28 ]
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_40b5a7
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x84 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call sub_4068e1
pop ebp
retn 0xc
sub_40b5d3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test esi esi
jne r-xdata
push [ esi + 0x20 ]
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
call sub_40406e
cmp [ esi + 0x50 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] eax
je r-xdata
mov ecx [ esi + 0x50 ]
mov eax [ ecx ]
pop esi
pop ebp
jmp [ eax + 0x88 ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call [ SetWindowTextW@IAT ]
pop esi
pop ebp
retn 0x4
sub_40b61a
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0xa0 ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ ShowWindow@IAT ]
pop ebp
retn 0x4
sub_40b65c
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0xa8 ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
pop ebp
retn 0x4
sub_40b6a4
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0x9c ]
sub_40b6cd
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x20 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x18
mov eax [ eax + 0x20 ]
sub_40b70b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x50 ] 0x0
jne r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
add ecx 0x1c
call sub_40d34b
test eax eax
je r-xdata
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov ecx [ eax + 0x4c ]
mov eax [ ecx ]
push 0x0
push esi
call [ eax + 0x9c ]
sub_40b754
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r--data
call [ GetModuleHandleW@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
push r--data
push [ rw-data ]
mov [ rw-data ] eax
call esi
push r--data
push [ rw-data ]
mov [ rw-data ] eax
call esi
push r--data
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
pop esi
call sub_40406e
sub_40b81d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40406e
push 0x2
pop eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b7ef
neg eax
sbb eax eax
neg eax
jmp r-xdata
pop ebp
retn 0x8
sub_40b850
mov edi edi
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
call sub_40b754
mov edi [ esi + 0x8 ]
xor eax eax
mov [ ebp - 0x6 ] ax
mov [ ebp - 0x8 ] ax
push 0x105
lea eax [ ebp - 0x210 ]
push eax
push edi
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40fef3
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x228 ] eax
lea eax [ ebp - 0x230 ]
push eax
mov [ ebp - 0x230 ] 0x20
mov [ ebp - 0x22c ] 0x88
mov [ ebp - 0x21c ] 0x2
mov [ ebp - 0x214 ] edi
call sub_40b7c2
mov [ esi + 0x80 ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x6f
call [ SetLastError@IAT ]
jmp r-xdata
cmp [ esi + 0x80 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
mov [ ebp - 0x21c ] 0x3
call sub_40b7c2
mov [ esi + 0x80 ] eax
lea eax [ ebp - 0x230 ]
push eax
mov [ ebp - 0x21c ] 0x1
call sub_40b7c2
mov [ esi + 0x80 ] eax
cmp eax 0xffffffff
jne r-xdata
and [ esi + 0x80 ] 0x0
sub_40b94c
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_40b9a2
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
push edi
mov edi [ UnhookWindowsHookEx@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call edi
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
push esi
call sub_410975
pop ecx
sub_40b9d9
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x3c ]
push edi
mov [ esi ] r--data
test ecx ecx
je r-xdata
push [ esi + 0x48 ]
call sub_401b18
xor edi edi
pop ecx
mov ecx [ esi + 0x14 ]
inc edi
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x144 ]
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
mov ecx [ esi + 0x38 ]
call sub_40e819
push eax
call sub_401b18
mov eax [ esi + 0x38 ]
pop ecx
pop edi
pop esi
retn
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
sub_40ba87
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b9a2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40c5e4
sub_40bad1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b9d9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40c5e4
sub_40bb0a
push 0x4
mov eax sub_42318f
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x48 ]
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test ecx ecx
je r-xdata
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ esi + 0x4c ]
push edx
call [ eax + 0xc ]
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x78 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
push [ esi + 0x78 ]
call sub_401b18
lea edi [ esi + 0x80 ]
mov eax [ edi ]
pop ecx
test eax eax
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
lea ecx [ esi + 0x74 ]
mov [ ebp - 0x4 ] 0x0
call sub_40cc14
mov ecx [ esi + 0x34 ]
sub ecx 0x10
call sub_401230
call sub_410ec1
retn
cmp eax 0xffffffff
je r-xdata
push eax
call sub_40b7da
or [ edi ] 0xffffffff
sub_40bbad
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_402d5f
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40bbfb
push 0x4
mov eax sub_422e49
call sub_410de9
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_402e0b
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_40bbad
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_401230
mov [ esi ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0x9c ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov [ esi + 0xc8 ] edi
mov [ esi + 0xcc ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xd4 ] edi
mov [ esi + 0xd8 ] edi
mov [ esi + 0xdc ] edi
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0xf0 ] edi
mov [ esi + 0xf4 ] edi
mov [ esi + 0xf8 ] edi
mov [ esi + 0xfc ] edi
mov [ esi + 0x100 ] edi
mov [ esi + 0x104 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0x10c ] edi
mov [ esi + 0x110 ] edi
mov [ esi + 0x114 ] edi
mov [ esi + 0x118 ] edi
mov [ esi + 0x11c ] edi
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
mov [ esi + 0x13c ] edi
mov [ esi + 0x140 ] edi
mov [ esi + 0x144 ] edi
mov [ esi + 0x148 ] edi
mov [ esi + 0x14c ] edi
mov [ esi + 0x150 ] edi
mov [ esi + 0x154 ] edi
mov [ esi + 0x158 ] edi
mov [ esi + 0x15c ] edi
mov [ esi + 0x160 ] edi
mov [ esi + 0x164 ] edi
mov [ esi + 0x168 ] edi
mov [ esi + 0x16c ] edi
mov [ esi + 0x170 ] edi
mov [ esi + 0x174 ] edi
mov [ esi + 0x178 ] edi
mov [ esi + 0x17c ] edi
mov [ esi + 0x180 ] edi
mov [ esi + 0x184 ] edi
mov eax esi
call sub_410ec1
retn
sub_40be1f
push 0x4
mov eax sub_422e49
call sub_410de9
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_402e0b
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_40bbad
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_401230
mov [ esi ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov eax esi
call sub_410ec1
retn
sub_40bea2
push 0x4
mov eax sub_422e49
call sub_410de9
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_402e0b
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_40bbad
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_401230
mov [ esi ] r--data
and [ esi + 0x10 ] 0x0
mov eax esi
call sub_410ec1
retn
sub_40bee9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40bbd5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40c5e4
sub_40bf09
push 0xc
mov eax sub_4231db
call sub_410e1c
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
xor edi edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
lea ebx [ esi + 0x34 ]
mov ecx ebx
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
call sub_4011c0
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
or [ esi + 0x50 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov al [ ebp + 0x8 ]
push 0x1000
mov ecx ebx
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x20 ] 0x14
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] al
mov [ ebp - 0x4 ] 0x2
call sub_401370
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
jmp sub_40bf9e
sub_40bf9e
push 0xc
mov [ esi + 0x30 ] ebx
mov [ esi + 0x44 ] 0x18
call sub_401ae9
mov [ esi + 0x78 ] eax
mov [ esp ] 0x188
call sub_40c5c7
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x4
cmp ecx edi
je r-xdata
xor eax eax
call sub_40bbfb
jmp r-xdata
xor eax eax
call sub_40be1f
jmp r-xdata
mov ecx [ esi + 0x78 ]
push 0x64
mov [ ebp - 0x4 ] bl
mov [ ecx ] eax
call sub_40c5c7
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x5
cmp ecx edi
je r-xdata
xor eax eax
call sub_40bea2
jmp r-xdata
mov ecx [ esi + 0x78 ]
push 0x14
mov [ ebp - 0x4 ] bl
mov [ ecx + 0x4 ] eax
call sub_40c5c7
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x6
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x78 ]
mov [ ecx + 0x8 ] eax
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov eax esi
call sub_410ec1
retn 0x4
sub_40c05a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40bb0a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40c5e4
sub_40c07a
push 0x4
mov eax sub_422cd9
call sub_410de9
push 0x8c
call sub_40c5c7
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_410ec1
retn
call sub_40c044
sub_40c0a9
push sub_40408a
mov ecx rw-data
call sub_40cb8a
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
jmp sub_40406e
retn
push sub_40c07a
mov ecx rw-data
call sub_40c666
test eax eax
je r-xdata
sub_40c0f5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40c0a9
cmp [ eax + 0x7c ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x80 ]
cmp eax 0xffffffff
je r-xdata
push esi
push eax
call sub_40b7ef
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c12d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push eax
push edi
call sub_40b513
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ esi + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
push edi
call sub_40b4cf
test eax eax
jne r-xdata
call sub_404052
sub_40c16e
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi + 0x20 ] 0x0
jne r-xdata
pop edi
pop ebp
retn 0xc
mov ecx edi
call sub_40b4a6
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push ebx
mov ecx esi
call sub_40c12d
mov ecx [ esi + 0x4 ]
lea eax [ ebp + 0x10 ]
push eax
push ebx
call sub_40b513
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
push ebx
call sub_40b4cf
test eax eax
je r-xdata
push [ ebp + 0x10 ]
mov ecx edi
call sub_409200
test eax eax
jne r-xdata
pop esi
pop ebx
push ebx
push [ esi + 0x4 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
call sub_404052
mov ecx edi
call sub_40b6a4
push [ edi + 0x20 ]
mov esi [ esi + 0x4 ]
call [ GetParent@IAT ]
cmp [ esi + 0x20 ] eax
je r-xdata
push 0x0
push esi
sub_40c1ff
push 0xc
mov eax sub_4231f6
call sub_410e1c
xor eax eax
xor edx edx
cmp ecx edx
setne al
cmp eax edx
jne r-xdata
cmp [ ecx + 0xc ] edx
jne r-xdata
call sub_40406e
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
xor eax eax
jmp r-xdata
call sub_410ec1
retn
sub_40c249
mov edi edi
push ebp
mov ebp esp
mov eax ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_40406e
cmp eax [ ebp + 0x8 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
pop ebp
retn 0x4
sub_40c274
mov edi edi
push ebp
mov ebp esp
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax ]
test eax eax
je r-xdata
call sub_40406e
mov ecx eax
pop ebp
jmp sub_40c249
sub_40c292
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40c274
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_40c2b5
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40c0a9
push 0x0
mov esi eax
call sub_40e48d
push [ ebp + 0x8 ]
lea ecx [ esi + 0x1c ]
call sub_40c6f9
push 0x0
call sub_40e4ff
pop esi
pop ebp
retn 0x4
sub_40c3c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
test ebx ebx
jne r-xdata
test esi esi
je r-xdata
call sub_40406e
push esi
call [ lstrlenW@IAT ]
mov edi eax
xor eax eax
push 0x1fe
push eax
mov [ ebp - 0x204 ] ax
lea eax [ ebp - 0x202 ]
push eax
call sub_4113e0
mov eax 0x100
add esp 0xc
cmp edi eax
ja r-xdata
push esi
push ebx
call [ SetWindowTextW@IAT ]
push eax
lea eax [ ebp - 0x204 ]
push eax
push ebx
call [ GetWindowTextW@IAT ]
cmp eax edi
jne r-xdata
push esi
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn 0x8
sub_40c459
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40406e
pop esi
pop ebp
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_40c480
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push edi
call [ GlobalFlags@IAT ]
mov esi eax
and esi 0xff
je r-xdata
push edi
call [ GlobalFree@IAT ]
pop esi
push edi
dec esi
call [ GlobalUnlock@IAT ]
test esi esi
jne r-xdata
sub_40c4b8
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40baf1
mov esi eax
test esi esi
je r-xdata
call sub_404036
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_413346
pop ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_413206
pop ecx
push [ esi + 0xc ]
call sub_410975
and [ esi + 0xc ] 0x0
jmp r-xdata
pop ecx
xor eax eax
inc eax
pop esi
pop ebp
retn
sub_40c50b
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push 0x20
lea ecx [ ebp - 0x44 ]
push ecx
push eax
call [ GetClassNameW@IAT ]
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_407246
pop ecx
neg eax
pop ecx
mov ecx [ ebp - 0x4 ]
sbb eax eax
xor ecx ebp
inc eax
pop esi
call sub_40fef3
leave
retn 0x8
sub_40c551
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
jmp r-xdata
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call [ GetDlgCtrlID@IAT ]
cmp eax 0xffff
je r-xdata
pop edi
pop esi
leave
retn 0xc
push 0x2
push esi
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
sub_40c5fa
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
mov edi [ ebp + 0x8 ]
test edi edi
jle r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
xor eax eax
cmp edi [ esi + 0xc ]
jge r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax [ eax + 0xc ]
mov edi [ eax + edi * 4 ]
push ebx
call [ LeaveCriticalSection@IAT ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40c666
push 0x8
mov eax sub_423211
call sub_410e1c
mov esi ecx
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esi ]
call sub_410ec1
retn 0x4
push 0x10
call sub_40e48d
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_40e4ff
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_40c6b6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
test eax eax
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40c6f9
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_40c6df
mov ecx [ esi ]
mov [ eax ] ecx
mov [ esi ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_40c717
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
jne r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
cmp edi ebx
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov ecx esi
call sub_40c6df
cmp [ eax ] ebx
je r-xdata
push ebx
call sub_40c6df
mov eax [ eax ]
mov [ esi ] eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
test edi edi
je r-xdata
push edi
mov ecx esi
call sub_40c6df
mov edi [ eax ]
test edi edi
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
pop ebx
push ebx
mov ecx esi
call sub_40c6df
push edi
mov ecx esi
mov ebx eax
call sub_40c6df
mov ecx [ ebx ]
mov [ eax ] ecx
sub_40c788
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
push edi
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov ebx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebx
jge r-xdata
xor edi edi
inc edi
cmp ebx edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebx 0x20
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
push eax
mov [ ebp - 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x2002
push 0x8
push ebx
call sub_4041d9
pop ecx
pop ecx
push eax
push [ ebp - 0x8 ]
call [ GlobalReAlloc@IAT ]
push 0x8
push ebx
call sub_4041d9
pop ecx
pop ecx
push eax
push 0x2
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebx
jl r-xdata
inc edi
add eax 0x8
cmp edi ebx
jl r-xdata
mov eax [ esi + 0x10 ]
push [ ebp - 0x4 ]
lea eax [ eax + edi * 8 ]
or [ eax ] 0x1
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push eax
call [ GlobalLock@IAT ]
mov ecx [ esi + 0x4 ]
mov edx ebx
sub edx ecx
shl edx 0x3
push edx
mov [ ebp - 0x8 ] eax
lea eax [ eax + ecx * 8 ]
push 0x0
push eax
call sub_4113e0
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ esi + 0x4 ] ebx
mov [ esi + 0x10 ] eax
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
push [ ebp - 0x4 ]
call [ LeaveCriticalSection@IAT ]
call sub_404036
push esi
call [ GlobalHandle@IAT ]
push eax
call [ GlobalLock@IAT ]
sub_40c8a0
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_404036
sub_40c8df
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
push esi
mov [ ebp - 0x4 ] esi
call [ EnterCriticalSection@IAT ]
mov edi [ ebp + 0x8 ]
test edi edi
jle r-xdata
push esi
cmp edi [ ebx + 0xc ]
jge r-xdata
mov esi [ ebx + 0x14 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp edi [ esi + 0x8 ]
jge r-xdata
mov eax [ ebx + 0x10 ]
push [ ebp - 0x4 ]
lea eax [ eax + edi * 8 ]
and [ eax ] 0xfffffffe
jmp r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40c947
push 0x10
mov eax sub_42322c
call sub_410e1c
mov edi ecx
mov [ ebp - 0x18 ] edi
lea esi [ edi + 0x1c ]
push esi
mov [ ebp - 0x14 ] esi
call [ EnterCriticalSection@IAT ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jle r-xdata
push esi
cmp eax [ edi + 0xc ]
jge r-xdata
push [ edi ]
call [ TlsGetValue@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x10
mov [ ebp - 0x4 ] ebx
call sub_40c5c7
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ esi + 0x8 ]
jl r-xdata
xor esi esi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ edi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_40c6f9
jmp r-xdata
push [ ebp - 0x14 ]
jmp r-xdata
cmp ecx [ esi + 0x8 ]
jge r-xdata
push 0x2
push 0x4
push [ edi + 0xc ]
call sub_4041d9
pop ecx
pop ecx
push eax
push [ esi + 0xc ]
call [ LocalReAlloc@IAT ]
push 0x4
push [ edi + 0xc ]
call sub_4041d9
pop ecx
pop ecx
push eax
push ebx
call [ LocalAlloc@IAT ]
jmp r-xdata
call [ LeaveCriticalSection@IAT ]
call sub_410ec1
retn 0x8
mov edx [ ebp + 0xc ]
mov [ eax + ecx * 4 ] edx
mov ecx [ esi + 0x8 ]
mov [ esi + 0xc ] eax
mov edx [ edi + 0xc ]
sub edx ecx
shl edx 0x2
push edx
lea eax [ eax + ecx * 4 ]
push ebx
push eax
call sub_4113e0
mov eax [ edi + 0xc ]
add esp 0xc
push esi
mov [ esi + 0x8 ] eax
push [ edi ]
call [ TlsSetValue@IAT ]
mov ecx [ ebp + 0x8 ]
push [ ebp - 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_404036
cmp eax ebx
jne r-xdata
sub_40ca7c
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40c5e4
sub_40ca97
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
inc ebx
cmp [ esi + 0x8 ] ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
lea ebx [ edi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
push esi
lea ecx [ edi + 0x14 ]
call sub_40c717
push ebx
call [ LeaveCriticalSection@IAT ]
push [ esi + 0xc ]
call [ LocalFree@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
push 0x0
push [ edi ]
call [ TlsSetValue@IAT ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov ecx [ edi + 0x10 ]
cmp [ ecx + ebx * 8 + 0x4 ] eax
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax + ebx * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc ebx
cmp ebx [ esi + 0x8 ]
jl r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40cb2e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push [ ebp + 0x8 ]
mov ecx esi
push eax
call sub_40ca97
jmp r-xdata
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push eax
mov ecx esi
call sub_40ca97
mov eax edi
test edi edi
jne r-xdata
pop edi
sub_40cb8a
push 0x4
mov eax sub_423257
call sub_410de9
mov esi ecx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
call sub_40406e
push [ esi ]
mov ecx [ rw-data ]
call sub_40c5fa
mov edi eax
test edi edi
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax edi
call sub_410ec1
retn 0x4
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi eax
push edi
push [ esi ]
call sub_40c947
call sub_40c788
mov [ esi ] eax
test eax eax
je r-xdata
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
call sub_40c8a0
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
mov [ rw-data ] ecx
test eax eax
je r-xdata
sub_40cc14
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_40c8df
sub_40cc4d
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
test eax eax
je r-xdata
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov edi [ eax + 0x4 ]
push 0x0
push eax
mov ecx esi
call sub_40ca97
mov eax edi
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call [ TlsFree@IAT ]
add esi 0x1c
push esi
call [ DeleteCriticalSection@IAT ]
pop edi
pop esi
retn
push eax
call [ GlobalHandle@IAT ]
mov edi eax
push edi
call [ GlobalUnlock@IAT ]
push edi
call [ GlobalFree@IAT ]
sub_40cca6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40cc4d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40ccf1
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
test ebx ebx
je r-xdata
call sub_40406e
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_40c0a9
mov eax [ eax + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_402138
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
movzx edi [ eax ]
lea ecx [ esi - 0x1 ]
cmp ecx edi
jae r-xdata
mov [ ebx ] ax
lea esi [ edi + edi ]
push esi
add eax 0x2
push eax
lea eax [ ecx + ecx ]
push eax
push ebx
call sub_403e00
add esp 0x10
xor eax eax
mov [ esi + ebx ] ax
mov eax edi
pop edi
jmp r-xdata
mov edi ecx
pop esi
pop ebx
pop ebp
retn 0xc
sub_40cded
call sub_40c0a9
add eax 0x2c
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
retn
jmp r-xdata
call sub_40c0a9
cmp [ eax + 0x30 ] 0x0
jne r-xdata
retn
push esi
push 0x1
call sub_40cd84
call sub_40c0a9
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_40c0a9
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
pop esi
push 0x0
call sub_401e79
call sub_40b641
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x60 ]
sub_40ce06
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0xffff
cmp [ eax + 0x2 ] cx
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
jmp r-xdata
and eax 0x40
pop ebp
retn
sub_40ce4d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0xffff
mov edx ecx
cmp [ eax + 0x2 ] dx
jne r-xdata
add eax 0x12
add eax 0x1a
jmp r-xdata
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
add eax 0x4
jmp r-xdata
cmp [ eax ] dx
jne r-xdata
cmp [ eax ] cx
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
pop ebp
retn
sub_40ce9e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi 0xffff
xor ecx ecx
mov eax edi
cmp [ ebx + 0x2 ] ax
push ebx
sete cl
mov [ ebp - 0x8 ] ecx
call sub_40ce4d
push ebx
mov esi eax
call sub_40ce06
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x8 ] eax
setne al
lea eax [ eax + eax + 0x1 ]
lea esi [ esi + eax * 2 ]
push esi
call sub_41129a
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
movzx eax [ ebx + 0x8 ]
movzx eax [ ebx + 0x10 ]
jmp r-xdata
pop edi
mov eax esi
pop esi
sub eax ebx
pop ebx
leave
retn
mov ebx [ ebp - 0x8 ]
neg ebx
sbb ebx ebx
and ebx 0x6
add ebx 0x12
mov [ ebp - 0x4 ] eax
test ax ax
jbe r-xdata
push eax
call sub_40ce39
pop ecx
add eax 0x4
jmp r-xdata
push eax
call sub_40ce39
pop ecx
add eax 0x4
jmp r-xdata
mov ecx edi
cmp [ eax ] cx
jne r-xdata
add [ ebp - 0x4 ] edi
cmp [ ebp - 0x4 ] 0x0
movzx ecx cx
lea esi [ eax + ecx + 0x2 ]
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
lea eax [ esi + 0x3 ]
and eax 0xfffffffc
add eax ebx
mov ecx edi
cmp [ eax ] cx
jne r-xdata
mov ebx [ ebp + 0x8 ]
add ecx 0xfffe
sub_40cf70
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4112b4
push eax
call sub_40202b
add esp 0x14
pop ebp
retn
sub_40cf91
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
lea ecx [ eax + 0x40 ]
mov [ esi + 0x4 ] eax
cmp ecx eax
jae r-xdata
push ecx
push 0x40
call [ GlobalAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push edi
push eax
call [ GlobalLock@IAT ]
mov edi eax
mov eax [ esi + 0x4 ]
push eax
push [ ebp + 0x8 ]
push eax
push edi
call sub_403e00
push edi
call sub_40ce06
add esp 0x14
push [ esi ]
neg eax
sbb eax eax
inc eax
mov [ esi + 0x8 ] eax
call [ GlobalUnlock@IAT ]
xor eax eax
inc eax
pop edi
pop esi
pop ebp
retn 0x8
sub_40cff3
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push ebx
push esi
push [ edi ]
call [ GlobalLock@IAT ]
mov ebx eax
xor ecx ecx
mov eax 0xffff
cmp [ ebx + 0x2 ] ax
push ebx
sete cl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
call sub_40ce06
mov [ ebp - 0x10 ] eax
xor eax eax
cmp [ ebp - 0x4 ] eax
pop ecx
setne al
lea eax [ eax + eax + 0x1 ]
add eax eax
cmp [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] esi
je r-xdata
xor eax eax
jmp r-xdata
or [ ebx ] 0x40
or [ ebx + 0xc ] 0x40
jmp r-xdata
pop edi
leave
retn 0x8
xor eax eax
jmp r-xdata
lea eax [ esi + eax * 2 + 0x2 ]
cmp eax esi
mov [ ebp - 0xc ] eax
jl r-xdata
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
cmp eax 0x20
jge r-xdata
pop esi
pop ebx
push ebx
call sub_40ce4d
pop ecx
xor ecx ecx
mov ebx eax
cmp [ ebp - 0x10 ] ecx
je r-xdata
mov edx [ ebp - 0xc ]
lea esi [ ebx + edx + 0x3 ]
mov edx [ ebp - 0x8 ]
lea eax [ ecx + ebx + 0x3 ]
and eax 0xfffffffc
and esi 0xfffffffc
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebx + esi ]
push eax
call sub_41129a
pop ecx
lea ecx [ esi + eax * 2 + 0x2 ]
movzx edx [ edx + 0x8 ]
movzx edx [ edx + 0x10 ]
jmp r-xdata
mov ax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
mov [ ebx ] ax
mov eax [ ebp - 0xc ]
sub eax ecx
push eax
push [ ebp + 0x8 ]
add ebx ecx
push eax
push ebx
call sub_40cf70
sub esi [ ebp - 0x10 ]
add esp 0x10
push [ edi ]
add [ edi + 0x4 ] esi
call [ GlobalUnlock@IAT ]
and [ edi + 0x8 ] 0x0
xor eax eax
inc eax
test dx dx
jbe r-xdata
cmp [ ebp - 0xc ] ecx
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx edx
sub ecx eax
add ecx [ ebp - 0x8 ]
cmp ecx edx
jbe r-xdata
push ecx
push eax
push ecx
push esi
call sub_40cf70
add esp 0x10
sub_40d118
mov edi edi
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ GetStockObject@IAT ]
push edi
push 0xa
pop edi
push 0x11
mov [ ebp - 0x64 ] ecx
mov ebx r--data
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x5c
push eax
call [ GetObjectW@IAT ]
test eax eax
je r-xdata
push 0xd
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test ax ax
jne r-xdata
push 0x0
lea ebx [ ebp - 0x44 ]
call [ GetDC@IAT ]
cmp [ ebp - 0x60 ] 0x0
mov esi eax
jge r-xdata
mov ecx [ ebp - 0x64 ]
push eax
push ebx
call sub_40cff3
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn 0x4
movzx eax di
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push eax
push 0x48
push [ ebp - 0x60 ]
call [ MulDiv@IAT ]
push esi
push 0x0
movzx edi ax
call [ ReleaseDC@IAT ]
neg [ ebp - 0x60 ]
sub_40d1bc
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
cmp [ ebp + 0x8 ] eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_40ce9e
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40cf91
test eax eax
jne r-xdata
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_404036
sub_40d1f8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40ce06
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
push esi
call sub_40ce4d
mov edx [ ebp + 0x10 ]
pop ecx
mov cx [ eax ]
mov [ edx ] cx
xor edx edx
mov ecx 0xffff
cmp [ esi + 0x2 ] cx
mov ecx [ ebp + 0xc ]
sete dl
lea edx [ edx + edx + 0x1 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_402a7f
xor eax eax
inc eax
sub_40d240
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40e7ba
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40d267
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x11
pop edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
push eax
call sub_401b18
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x8
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_401ae9
mov ecx edi
shl ecx 0x2
push ecx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_4113e0
add esp 0x10
sub_40d2c5
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_40ed9c
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_401b18
and [ esi + 0x4 ] 0x0
pop ecx
sub_40d310
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
shr eax 0x4
mov [ edx ] eax
xor edx edx
div [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
jmp r-xdata
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
pop ebp
retn 0xc
mov eax [ eax ]
sub_40d34b
mov edi edi
push ebp
mov ebp esp
test ecx ecx
jne r-xdata
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jne r-xdata
call sub_40406e
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
test edx edx
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ edx + 0x4 ] edi
je r-xdata
xor eax eax
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
pop edi
sub_40d390
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_40d310
test eax eax
je r-xdata
leave
retn 0x8
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
sub_40d3b9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
shr eax 0x4
xor edx edx
div [ ecx + 0x8 ]
lea edx [ esi + edx * 4 ]
mov eax [ edx ]
jmp r-xdata
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ eax + 0x4 ] edi
je r-xdata
pop edi
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_40d2f2
xor eax eax
inc eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
sub_40d401
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0xc
push edi
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
pop edi
mov eax [ esi + 0x4 ]
shr eax 0x4
xor edx edx
push ebx
mov ebx [ ecx + 0x8 ]
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
call sub_40406e
mov edi [ eax ]
test edi edi
jne r-xdata
sub_40d484
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp ecx edx
mov [ eax ] r--data
jg r-xdata
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] 0x11
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
pop ebp
retn 0x4
push 0xa
pop ecx
sub_40d4c2
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
push [ esi + 0x18 ]
lea eax [ esi + 0x14 ]
push eax
call sub_40ed69
mov ecx [ esi + 0x18 ]
mov edx ecx
imul edx edx 0xc
add eax 0x4
dec ecx
lea eax [ eax + edx - 0xc ]
js r-xdata
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
dec ecx
sub eax 0xc
test ecx ecx
jge r-xdata
sub_40d512
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
mov esi ecx
call sub_40d310
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
leave
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_40d4c2
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
mov edx [ esi + 0x4 ]
shl ecx 0x2
mov edx [ ecx + edx ]
mov [ eax ] edx
mov edx [ esi + 0x4 ]
mov [ ecx + edx ] eax
push 0x1
push [ esi + 0x8 ]
mov ecx esi
call sub_40d267
sub_40d569
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40d2c5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40d599
push 0x4
mov eax sub_4232ae
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push 0x40
mov [ esi ] r--data
push [ edi + 0x4 ]
lea ecx [ esi + 0x4 ]
call sub_40edb2
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x1c ]
call sub_40d484
lea ebx [ esi + 0x38 ]
push 0x4
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_40d484
xor eax eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
call sub_40406e
push eax
push 0x7
mov ecx ebx
call sub_40d267
mov eax [ ebp + 0xc ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x5c ] eax
mov [ esi + 0x54 ] edi
mov eax esi
call sub_410ec1
retn 0x14
sub_40d622
push 0x8
mov eax sub_423272
call sub_410e1c
mov esi ecx
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push edi
lea ecx [ esi + 0x1c ]
call sub_40d34b
test eax eax
jne r-xdata
xor eax eax
call sub_410ec1
retn 0x4
lea ecx [ esi + 0x38 ]
push edi
call sub_40d34b
test eax eax
je r-xdata
push sub_40c4b8
call sub_401ad2
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
call sub_40edfc
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x58 ]
add ecx eax
mov [ ecx ] edi
cmp [ esi + 0x5c ] 0x2
jne r-xdata
push ebx
call [ esi + 0x14 ]
push edi
lea ecx [ esi + 0x38 ]
call sub_40d512
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_401ad2
mov eax [ esi + 0x58 ]
add eax ebx
mov [ eax ] edi
cmp [ esi + 0x5c ] 0x2
jne r-xdata
call sub_404036
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_40d6d5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x44 ]
neg eax
sbb eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x38 ]
call sub_40d2c5
lea ecx [ esi + 0x4 ]
call sub_40ede0
push edi
lea edi [ esi + 0x38 ]
push [ ebp - 0x4 ]
call [ esi + 0x18 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
and [ eax + 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_40d401
mov eax [ esi + 0x58 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x5c ] 0x2
jne r-xdata
pop edi
sub_40d73a
push 0x4
mov eax sub_4232ae
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_40d6d5
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_40d4b7
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_40d4b7
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call j_sub_40ede0
call sub_410ec1
retn
sub_40d787
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40d73a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40d7a8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_40c0dc
mov ebx eax
mov eax [ ebx + 0x10 ]
xor esi esi
cmp eax esi
je r-xdata
xor eax eax
cmp [ ebx + 0x10 ] eax
pop esi
setne al
pop ebx
pop ebp
retn 0x4
dec eax
mov [ ebx + 0x10 ] eax
cmp eax esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
push edi
call sub_40c0a9
mov edi [ eax + 0x4 ]
mov ecx rw-data
call sub_40c64c
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
pop edi
test edi edi
je r-xdata
mov ecx [ ebx + 0x20 ]
call sub_40d6d5
mov ecx [ ebx + 0x1c ]
call sub_40d6d5
mov ecx [ ebx + 0x18 ]
call sub_40d6d5
mov ecx [ ebx + 0x14 ]
call sub_40d6d5
mov ecx [ ebx + 0x24 ]
call sub_40d6d5
call sub_405201
cmp eax esi
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ eax + 0x3c ]
cmp eax esi
je r-xdata
cmp [ edi + 0x98 ] 0x0
je r-xdata
push eax
call sub_413346
pop ecx
cmp eax [ edi + 0x98 ]
jae r-xdata
push esi
push esi
call eax
mov eax [ esi + 0xc ]
and [ ebp + 0x8 ] 0x0
test eax eax
je r-xdata
push [ edi + 0x98 ]
call sub_4108ab
pop ecx
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
push eax
call sub_413346
push [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_410975
pop ecx
pop ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_4108ab
pop ecx
mov [ esi + 0xc ] eax
sub_40d8a3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ ebx ]
push esi
call [ eax + 0x44 ]
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x38 ]
mov edi eax
mov eax [ esi ]
cmp [ r--data ] eax
jne r-xdata
mov edx [ edi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ r--data ]
jne r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
mov eax [ esi ]
cmp [ ecx ] eax
jne r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ r--data ]
jne r-xdata
add edx 0x8
mov eax [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ edi + 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
cmp [ ecx ] edx
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax ] edx
jne r-xdata
mov edi [ edi ]
cmp edi edx
jne r-xdata
mov eax [ edx + 0x4 ]
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
pop edi
add ecx 0x8
jmp r-xdata
sub_40d956
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
call [ eax + 0x38 ]
mov edi eax
cmp [ eax ] 0x0
jne r-xdata
add eax 0x8
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
add esi 0x8
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_40d9d3
push 0x8
mov eax sub_422f78
call sub_410de9
mov esi ecx
lea eax [ esi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
push [ esi + 0x1c ]
lea ecx [ ebp - 0x14 ]
call sub_40c0f5
mov eax [ esi ]
and [ ebp - 0x4 ] ebx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] ebx
je r-xdata
call sub_410ec1
retn
push [ ebp - 0x14 ]
push ebx
call sub_40b806
sub_40da3e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_40d8a3
mov esi [ ebp + 0xc ]
mov [ esi ] eax
mov ecx edi
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40d956
mov [ esi ] eax
neg eax
sbb eax eax
and eax 0x7fffbffe
add eax 0x80004002
call sub_40d9b8
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_40da81
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x8 ] 0x0
je r-xdata
pop ebp
jmp sub_40da3e
push [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx ]
pop ebp
retn 0x8
sub_40daa4
mov edi edi
push esi
push edi
mov edi [ GetSysColor@IAT ]
push 0xf
mov esi ecx
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
pop edi
mov [ esi + 0x20 ] eax
pop esi
retn
sub_40daea
mov edi edi
push ebx
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
push 0xb
mov edi ecx
call esi
push 0xc
mov [ edi + 0x8 ] eax
call esi
push 0x2
mov [ edi + 0xc ] eax
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
push 0x0
mov [ rw-data ] eax
call [ GetDC@IAT ]
mov esi [ GetDeviceCaps@IAT ]
mov ebx eax
push 0x58
push ebx
call esi
push 0x5a
push ebx
mov [ edi + 0x18 ] eax
call esi
push ebx
push 0x0
mov [ edi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_40db46
mov edi edi
push ebx
push esi
push edi
mov esi ecx
call sub_40daea
xor ebx ebx
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_40daa4
mov edi [ LoadCursorW@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
push 0x2
mov [ esi + 0x40 ] eax
pop eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
pop edi
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
mov eax esi
pop esi
pop ebx
retn
sub_40dbb3
lea ecx [ ebp - 0x418 ]
call sub_4011c0
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x38
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401470
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x38
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401470
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_403d39
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_401230
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_40dc54
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404231
mov eax esi
pop esi
pop ebp
retn 0xc
sub_40dc82
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
test [ esi + 0x18 ] 0x1
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x28 ]
push edi
mov edi [ esi + 0x2c ]
sub edi eax
cmp ebx edi
jae r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_40e3e1
push edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_403e00
add [ esi + 0x28 ] edi
add [ ebp + 0x8 ] edi
add esp 0x10
sub ebx edi
je r-xdata
mov edi ebx
mov eax [ ebp + 0xc ]
sub eax ebx
pop edi
xor edx edx
mov eax ebx
div [ esi + 0x20 ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
lea eax [ esi + 0x2c ]
push eax
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
cmp [ esi + 0xc ] edi
jne r-xdata
push edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_403e00
add [ esi + 0x28 ] edi
add esp 0x10
sub ebx edi
mov edi ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
mov [ esi + 0x2c ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ esi + 0x30 ]
mov [ ebp - 0x8 ] eax
mov edi [ esi + 0x2c ]
sub edi eax
mov [ esi + 0x28 ] eax
cmp ebx edi
jae r-xdata
cmp edi ebx
jb r-xdata
push [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_40ddb3
mov edi edi
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
mov eax [ esi + 0x28 ]
push edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
lea edi [ esi + 0x30 ]
mov edx [ edi ]
push ebx
jne r-xdata
mov edx [ esi + 0x2c ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x2c ]
jmp r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
sub eax edx
cdq
push 0x1
push edx
push eax
call [ edi + 0x28 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
lea edx [ esi + 0x2c ]
push edx
push edi
push [ esi + 0x20 ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x24 ]
mov ebx [ ecx ]
push 0x0
push 0x0
sub eax edx
push eax
push 0x2
call [ ebx + 0x50 ]
mov eax [ edi ]
pop ebx
mov ecx [ esi + 0x24 ]
mov ebx [ ecx ]
sub eax edx
push eax
push edx
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
mov [ esi + 0x28 ] eax
pop esi
retn
sub_40de2b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
push edi
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ ebp + 0x8 ]
lea ebx [ esi + 0x2c ]
mov ecx [ ebx ]
mov edi ecx
sub edi edx
add eax edi
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
push [ esi + 0x14 ]
push 0x4
test edi edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp edx eax
jbe r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push ebx
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x0
call [ eax + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x28 ] eax
mov ecx [ esi + 0x24 ]
mov eax edi
neg eax
cdq
push 0x1
push edx
push eax
mov eax [ ecx ]
call [ eax + 0x28 ]
mov eax [ ebx ]
sub eax [ esi + 0x28 ]
pop edi
pop esi
pop ebx
cmp eax [ ebp - 0x8 ]
jae r-xdata
test edi edi
jle r-xdata
leave
retn 0x4
push 0x0
push 0x3
jmp r-xdata
cmp [ esi + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
jne r-xdata
push edi
push edx
sub ecx eax
push ecx
push eax
call sub_40cf70
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
add esp 0x10
mov [ esi + 0x28 ] eax
mov [ ebx ] ecx
call sub_40e3e1
sub ecx edi
mov [ ebp + 0x8 ] ecx
add edi eax
mov ecx [ esi + 0x20 ]
mov eax [ esi + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x28 ] eax
add eax ecx
mov [ ebx ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push edi
call [ eax + 0x34 ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0x8 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_40df1a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
inc eax
inc eax
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_40e3e1
mov eax [ esi + 0x28 ]
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
add [ esi + 0x28 ] 0x2
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40ddb3
sub_40df59
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
add eax 0x4
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_40e3e1
mov eax [ esi + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
add [ esi + 0x28 ] 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40ddb3
sub_40df97
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x2 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_40e3e1
mov eax [ esi + 0x28 ]
mov ax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi + 0x28 ] 0x2
mov eax esi
pop esi
pop ebp
retn 0x4
sub eax ecx
inc eax
inc eax
push eax
mov ecx esi
call sub_40de2b
sub_40dfdf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_40e3e1
mov eax [ esi + 0x28 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x28 ] 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub eax ecx
add eax 0x4
push eax
mov ecx esi
call sub_40de2b
sub_40e026
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
call sub_40c0a9
push 0x0
mov esi eax
call sub_40e48d
mov esi [ esi + 0x1c ]
jmp r-xdata
call sub_40406e
test esi esi
jne r-xdata
push [ esi ]
push [ ebp + 0x8 ]
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
push esi
call sub_40e4ff
xor eax eax
push 0x0
call sub_40e4ff
mov eax esi
jmp r-xdata
mov esi [ esi + 0x14 ]
pop esi
pop ebp
retn 0x4
sub_40e078
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_40df97
movzx eax [ ebp - 0x48 ]
mov [ esi ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_40df97
cmp [ ebp - 0x48 ] 0x40
jae r-xdata
movzx esi [ ebp - 0x48 ]
push esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx edi
call sub_40dc82
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp + esi - 0x44 ] 0x0
call sub_40e026
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40fef3
leave
retn 0x8
sub_40e0ef
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x2c ]
sub eax ecx
push edi
mov edi ebx
cmp ebx eax
jb r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_40e3e1
push edi
push [ ebp + 0x8 ]
push eax
push ecx
call sub_403e00
add [ esi + 0x28 ] edi
add [ ebp + 0x8 ] edi
add esp 0x10
sub ebx edi
je r-xdata
mov edi eax
pop edi
mov ecx esi
call sub_40ddb3
xor edx edx
mov eax ebx
div [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
mov edi ebx
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp ebx [ esi + 0x20 ]
jb r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
lea eax [ esi + 0x2c ]
push eax
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x28 ]
cmp eax [ esi + 0x30 ]
jne r-xdata
call sub_40406e
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
call sub_403e00
add esp 0x10
add [ esi + 0x28 ] ebx
sub_40e1b6
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
push esi
mov esi ecx
cmp [ ebp + 0x8 ] eax
jae r-xdata
push eax
call sub_40df1a
push [ ebp + 0x8 ]
mov ecx esi
call sub_40df59
push [ ebp + 0x8 ]
call sub_40df1a
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_40e1e7
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
call sub_40df97
mov eax 0xffff
cmp [ ebp - 0x4 ] ax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_40dfdf
mov eax [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn
sub_40e21b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
push [ esi ]
call [ lstrlenA@IAT ]
mov ecx [ ebp + 0x8 ]
movzx edi ax
movzx eax [ esi + 0x8 ]
push edi
push eax
call sub_40df1a
mov ecx eax
call sub_40df1a
mov ecx [ ebp + 0x8 ]
movzx eax di
push eax
push [ esi ]
call sub_40e0ef
pop edi
pop esi
pop ebp
retn 0x4
sub_40e258
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40dc82
cmp eax [ ebp + 0xc ]
je r-xdata
pop ebp
retn 0x8
push 0x0
push 0x3
call sub_40e3e1
sub_40e27a
push 0x4
mov eax sub_422d90
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
push [ ebp + 0xc ]
call sub_401190
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_402de6
test al al
jne r-xdata
mov eax esi
call sub_410ec1
retn 0x8
push [ ebp + 0x8 ]
mov ecx esi
call sub_402a7f
sub_40e2bf
push 0xc
mov eax sub_42330c
call sub_410e1c
mov esi ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_4011c0
lea eax [ esi + 0xc ]
push eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_402d3c
mov edi [ ebp + 0x10 ]
cmp [ edi - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0xf1b0
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push edi
add eax 0xf1b0
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40eaf3
push 0xffffffff
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403e21
add esp 0x10
lea ecx [ edi - 0x10 ]
call sub_401230
mov ecx [ ebp - 0x14 ]
add ecx 0xfffffff0
call sub_401230
xor eax eax
inc eax
jmp r-xdata
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_402dc2
mov edi [ ebp + 0x10 ]
call sub_410ec1
retn 0xc
sub_40e370
push 0x4
mov eax sub_423332
call sub_410de9
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_4040b9
lea edi [ esi + 0xc ]
mov ecx edi
mov [ esi ] r--data
call sub_4011c0
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov ecx edi
mov [ esi + 0x8 ] eax
call sub_402a7f
mov eax esi
call sub_410ec1
retn 0x8
sub_40e3b4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
sub ecx 0x10
mov [ esi ] r--data
call sub_401230
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40e3e1
push 0x8
mov eax sub_423356
call sub_410de9
push 0x10
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_41183f
int3
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e370
sub_40e448
cmp [ rw-data ] 0x0
je r-xdata
retn
dec [ rw-data ]
push ebx
push esi
push edi
mov edi [ DeleteCriticalSection@IAT ]
push rw-data
call edi
mov esi rw-data
mov ebx rw-data
add ebx 0x18
add esi 0x4
cmp ebx rw-data
jl r-xdata
push ebx
call edi
dec [ esi ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
sub_40e48d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x11
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40406e
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
call sub_40e424
imul edi edi 0x18
add edi rw-data
push edi
call ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push rw-data
call ebx
cmp [ esi ] 0x0
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax edi
imul eax eax 0x18
add eax rw-data
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_40e4ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x11
jb r-xdata
imul eax eax 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn 0x4
call sub_40406e
sub_40e524
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx 0x7fffffff
sub edx eax
cmp edx ecx
jge r-xdata
add eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
mov eax 0x80070057
pop ebp
retn
sub_40e54c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_40e524
add esp 0xc
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
push eax
call sub_4013a0
sub_40e573
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
xor eax eax
cmp [ ebp + 0xc ] eax
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
mov esi [ ebp + 0x10 ]
cmp esi eax
jge r-xdata
mov [ ebp + 0xc ] eax
mov eax [ ebx ]
mov edi [ eax - 0xc ]
push esi
push [ ebp + 0xc ]
call sub_40e54c
cmp eax edi
pop ecx
pop ecx
jle r-xdata
xor esi esi
mov edi [ ebx ]
mov eax [ edi - 0xc ]
cmp [ ebp + 0xc ] eax
jle r-xdata
mov eax [ ebx ]
mov esi [ eax - 0xc ]
sub esi [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor esi esi
mov ecx ebx
call sub_405975
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push esi
lea eax [ edi + eax * 2 ]
push eax
call sub_40dc54
cmp esi eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
call sub_402d5f
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_40e5f3
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ esi ]
push edi
test ecx ecx
jge r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
push 0x80070057
call sub_4013a0
mov edi [ ebx ]
cmp ecx [ edi - 0xc ]
jge r-xdata
cmp [ edx ] 0x0
je r-xdata
or [ esi ] 0xffffffff
mov ecx ebx
call sub_405975
mov ecx [ ebp + 0x8 ]
push eax
call sub_40595e
mov ecx ebx
call sub_405975
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ esi ]
lea eax [ edi + eax * 2 ]
push eax
call sub_40e27a
jmp r-xdata
mov eax [ ebx ]
lea edi [ eax + ecx * 2 ]
mov ecx [ eax - 0xc ]
lea eax [ eax + ecx * 2 ]
mov [ ebp + 0x10 ] eax
cmp edi eax
jae r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
push edx
push edi
call sub_41360a
lea edi [ edi + eax * 2 ]
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp edi [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0xc ]
push edi
call sub_413653
pop ecx
pop ecx
mov ecx [ esi ]
add ecx [ ebp - 0x4 ]
push eax
push ecx
push [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x1 ]
mov ecx ebx
mov [ esi ] edx
call sub_40e573
jmp r-xdata
sub_40e6e5
push 0x0
mov eax sub_42337b
call sub_410de9
call sub_40c0dc
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
call sub_410ec1
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_40c4b8
call sub_401ad2
push 0x60
mov ebx eax
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push sub_40448b
push sub_40e6cb
push r--data
call sub_40d599
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_401ad2
sub_40e76d
mov edi edi
push ebp
mov ebp esp
push 0x0
call sub_40e6e5
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x4
add ecx 0x1c
pop ebp
jmp sub_40d34b
sub_40e78e
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_40e6e5
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_40d3b9
sub_40e7d0
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
push edi
xor edi edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_40ed9c
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_40e7f2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
call sub_40406e
pop ebp
retn 0x4
call sub_40e7d0
sub_40e819
test ecx ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
call sub_40406e
mov eax [ edx ]
push esi
mov esi [ edx + 0x8 ]
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ eax + 0x4 ] 0x0
jmp r-xdata
push edx
call sub_40e7f2
mov eax esi
pop esi
retn
sub_40e84a
push 0xc
mov eax sub_4233a6
call sub_410de9
call sub_40c0a9
push 0x1
mov esi eax
call sub_40e48d
lea eax [ ebp - 0x14 ]
push eax
lea edi [ esi + 0x34 ]
mov esi r--data
push esi
lea eax [ ebp - 0x10 ]
xor ebx ebx
push eax
mov ecx edi
mov [ ebp - 0x14 ] ebx
call sub_40e5f3
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax - 0xc ] ebx
jne r-xdata
call sub_40c0a9
push [ eax + 0x8 ]
push [ ebp - 0x10 ]
call [ UnregisterClassW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push esi
lea eax [ ebp - 0x18 ]
push eax
mov ecx edi
call sub_40e5f3
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_404293
mov ecx [ ebp - 0x18 ]
add ecx 0xfffffff0
mov [ ebp - 0x4 ] bl
call sub_401230
mov ecx edi
call sub_4023df
push 0x1
call sub_40e4ff
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_401230
call sub_410ec1
retn
sub_40e8e9
mov edi edi
push ebx
push esi
call sub_40e84a
call sub_40c0a9
mov eax [ eax + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
call sub_40c0dc
mov esi eax
mov ecx [ esi + 0x3c ]
cmp ecx ebx
je r-xdata
mov eax [ eax + 0x3c ]
cmp eax ebx
je r-xdata
call sub_40baf1
mov esi eax
call sub_40c0a9
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x144 ]
test eax eax
je r-xdata
push ebx
push 0x1
call eax
pop esi
pop ebx
retn
mov eax [ esi + 0x2c ]
push edi
mov edi [ UnhookWindowsHookEx@IAT ]
cmp eax ebx
je r-xdata
mov [ esi + 0x3c ] ebx
mov eax [ esi + 0x28 ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x2c ] ebx
pop edi
push eax
call edi
mov [ esi + 0x28 ] ebx
sub_40e95f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_40406e
and [ ebp + 0xc ] 0x0
cmp [ edi ] 0x0
mov esi edi
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx edi
call sub_401370
cmp [ edi ] 0x0
mov esi eax
je r-xdata
cmp [ esi ] 0x25
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub esi [ ecx ]
sar esi 0x1
push esi
call sub_402d12
pop edi
pop esi
pop ebx
leave
retn 0x10
movzx ecx [ ebx ]
cmp cx 0x25
jne r-xdata
inc esi
inc esi
movzx eax [ esi + 0x2 ]
cmp ax 0x31
jb r-xdata
mov [ esi ] cx
inc esi
inc esi
inc ebx
inc ebx
movzx eax [ ebx + 0x2 ]
cmp ax 0x31
jb r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x5a
ja r-xdata
movzx eax ax
sub eax 0x31
cmp ax 0x5a
ja r-xdata
movzx eax ax
sub eax 0x31
cmp ax 0x39
jbe r-xdata
inc [ ebp + 0xc ]
mov eax [ ebx + eax * 4 ]
test eax eax
je r-xdata
cmp ax 0x39
jbe r-xdata
mov ecx [ ebp + 0x10 ]
lea edi [ ecx + eax * 4 ]
mov eax [ edi ]
test eax eax
je r-xdata
push 0x3f
pop eax
mov [ esi ] ax
inc esi
inc esi
jmp r-xdata
movzx eax ax
sub eax 0x38
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
call [ lstrlenW@IAT ]
add [ ebp + 0xc ] eax
jmp r-xdata
movzx eax ax
sub eax 0x38
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push eax
call [ lstrlenW@IAT ]
push [ edi ]
mov ebx eax
mov eax [ ebp + 0xc ]
inc eax
push eax
push esi
call sub_4020bd
add esp 0xc
sub [ ebp + 0xc ] ebx
lea esi [ esi + ebx * 2 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
dec [ ebp + 0xc ]
add esi 0x4
cmp eax [ ebp + 0x14 ]
jge r-xdata
add ebx 0x4
cmp eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ebx
jl r-xdata
sub_40eaa2
push 0x4
mov eax sub_422e49
call sub_410de9
lea ecx [ ebp - 0x10 ]
call sub_4011c0
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_402dc2
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_40e95f
lea ecx [ esi - 0x10 ]
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
jmp r-xdata
call sub_401230
call sub_410ec1
retn 0x10
sub_40eb0d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ PathFindFileNameW@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40406e
push 0xffffffff
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_403e21
add esp 0x10
xor eax eax
push eax
call [ lstrlenW@IAT ]
inc eax
jmp r-xdata
pop ebp
retn 0xc
sub_40eb4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x618
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov esi ecx
call sub_40c0a9
mov ebx eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0xc ] eax
mov edi 0x104
push edi
lea eax [ ebp - 0x20c ]
push eax
push [ esi + 0x44 ]
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
call sub_40446f
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x20c ]
push eax
call [ PathFindExtensionW@IAT ]
mov [ ebp - 0x618 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x618 ]
xor eax eax
mov [ ecx ] ax
push edi
lea eax [ ebp - 0x414 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_40eb0d
test eax eax
je r-xdata
call sub_40446f
cmp [ esi + 0x60 ] 0x0
jne r-xdata
call sub_40446f
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x414 ]
push eax
call sub_4114d7
pop ecx
mov [ esi + 0x60 ] eax
test eax eax
jne r-xdata
mov [ ebx + 0x10 ] eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebp - 0x614 ]
push eax
push 0xe000
call sub_40ccf1
test eax eax
je r-xdata
call sub_404036
cmp [ esi + 0x68 ] 0x0
jne r-xdata
mov eax [ ebp - 0x618 ]
lea ecx [ ebp - 0x20c ]
sub eax ecx
sar eax 0x1
mov ecx edi
sub ecx eax
cmp [ esi + 0x6c ] 0x1
jne r-xdata
push [ esi + 0x60 ]
lea eax [ ebp - 0x614 ]
push eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
push r--data
lea eax [ ebp - 0x414 ]
push edi
push eax
call sub_41145a
push eax
call sub_40202b
lea eax [ ebp - 0x414 ]
push eax
call sub_4114d7
add esp 0x14
mov [ esi + 0x68 ] eax
test eax eax
je r-xdata
push r--data
push r--data
jmp r-xdata
call sub_4114d7
mov [ esi + 0x50 ] eax
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x618 ]
xor eax eax
mov [ ecx ] ax
push ecx
push [ ebp - 0x618 ]
call sub_4020bd
lea eax [ ebp - 0x20c ]
add esp 0xc
push eax
call sub_4114d7
pop ecx
mov [ esi + 0x64 ] eax
test eax eax
je r-xdata
sub_40ece2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ SetErrorMode@IAT ]
push 0x0
call esi
or eax 0x8001
push eax
call esi
call sub_40c0a9
mov esi [ ebp + 0x8 ]
mov ecx eax
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
call sub_40b850
call sub_40c0a9
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_40c0a9
cmp [ eax + 0x14 ] 0x0
pop esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x48 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4c ] ecx
mov ecx eax
mov [ eax + 0x44 ] esi
call sub_40eb4d
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
call sub_405804
xor eax eax
inc eax
pop ebp
retn 0x10
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_40ed69
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_40406e
cmp [ ebp + 0x10 ] 0x0
je r-xdata
imul eax [ ebp + 0x10 ]
add eax 0x4
push eax
call sub_401ae9
pop ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
pop ebp
retn 0xc
sub_40edb2
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx 0x1
ja r-xdata
push 0x4
pop ecx
and [ eax + 0xc ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x8
push 0x40
pop edx
sub_40edfc
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
pop esi
retn
push [ esi ]
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_40ed69
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add eax 0x4
dec ecx
imul edx ecx
add eax edx
jmp r-xdata
test ecx ecx
jge r-xdata
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
dec ecx
sub eax [ esi ]
sub_40ee6b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jl r-xdata
call sub_40406e
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_401b18
pop ecx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
cmp edi 0xffffffff
ja r-xdata
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
push edi
call sub_401ae9
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_4113e0
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jl r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
mov edx edi
sub edx eax
push edx
add eax ecx
push 0x0
push eax
call sub_4113e0
add esp 0xc
cmp [ ebp + 0x8 ] ebx
jl r-xdata
mov [ ebp + 0x8 ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0x8 ]
call sub_401ae9
push [ esi + 0x8 ]
mov ebx eax
push [ esi + 0x4 ]
push [ ebp + 0x8 ]
push ebx
call sub_403e00
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
push ecx
add eax ebx
push 0x0
push eax
call sub_4113e0
push [ esi + 0x4 ]
call sub_401b18
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_40ef7d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
not eax
push edi
test al 0x1
je r-xdata
call sub_40e1e7
push 0xffffffff
push eax
mov ecx esi
call sub_40ee6b
mov edi [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
test edi edi
jbe r-xdata
push [ esi + 0x8 ]
call sub_40e1b6
mov edi [ esi + 0x8 ]
mov ebx [ esi + 0x4 ]
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ebx 0x7fffffff
cmp edi ebx
jae r-xdata
mov esi 0x7fffffff
cmp edi esi
jae r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push esi
call sub_40e258
add esi ebx
sub edi ebx
jne r-xdata
mov ebx edi
mov ecx [ ebp + 0x8 ]
push esi
push ebx
call sub_40e0ef
add ebx esi
sub edi esi
jne r-xdata
mov esi edi
jmp r-xdata
sub_40f013
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40ee5b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40f093
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jl r-xdata
call sub_40406e
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_401b18
pop ecx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
mov ebx edi
shl ebx 0x2
push ebx
call sub_401ae9
push ebx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_4113e0
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jl r-xdata
mov edx edi
sub edx eax
shl edx 0x2
push edx
lea eax [ ecx + eax * 4 ]
push 0x0
push eax
call sub_4113e0
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp eax ebx
jl r-xdata
mov [ ebp + 0x8 ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
shl eax 0x2
push eax
call sub_401ae9
mov ebx eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
push ebx
call sub_403e00
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
shl ecx 0x2
push ecx
lea eax [ ebx + eax * 4 ]
push 0x0
push eax
call sub_4113e0
push [ esi + 0x4 ]
call sub_401b18
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_40f1b9
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x18 ]
push esi
not eax
mov esi ecx
push edi
mov ecx ebx
test al 0x1
je r-xdata
call sub_40e1e7
push 0xffffffff
push eax
mov ecx esi
call sub_40f093
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
push [ esi + 0x8 ]
call sub_40e1b6
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
push eax
push ebx
call sub_40f051
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
push ebx
call sub_40f03a
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
jmp r-xdata
sub_40f23a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f083
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40f25b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
call sub_40406e
cmp eax [ ecx + 0x8 ]
jge r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
pop ebp
retn 0x4
sub_40f27c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
call sub_40406e
cmp eax [ ecx + 0x8 ]
jge r-xdata
mov ecx [ ecx + 0x4 ]
lea eax [ ecx + eax * 4 ]
pop ebp
retn 0x4
sub_40f2c8
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jge r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jl r-xdata
call sub_40406e
test ebx ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
push edi
test ecx ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edi [ esi + 0xc ]
cmp ebx edi
jg r-xdata
mov edi [ esi + 0x10 ]
cmp ebx edi
jle r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
jmp r-xdata
push eax
call sub_401b18
and [ esi + 0x4 ] ebx
pop ecx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp ebx eax
jle r-xdata
mov eax edi
shl eax 0x2
push eax
call sub_401ae9
mov ecx edi
shl ecx 0x2
push ecx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_4113e0
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
mov edi ebx
pop esi
pop ebx
pop ebp
retn 0x8
add eax edi
cmp ebx eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jge r-xdata
mov [ esi + 0x8 ] ebx
pop edi
mov edx ebx
sub edx eax
shl edx 0x2
push edx
lea eax [ ecx + eax * 4 ]
push 0x0
push eax
call sub_4113e0
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edi
jl r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx 0x400
cmp eax ecx
jle r-xdata
push 0x4
pop eax
jmp r-xdata
shl eax 0x2
push eax
call sub_401ae9
mov edi eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
push edi
call sub_403e00
mov eax [ esi + 0x8 ]
mov ecx ebx
sub ecx eax
shl ecx 0x2
push ecx
lea eax [ edi + eax * 4 ]
push 0x0
push eax
call sub_4113e0
push [ esi + 0x4 ]
call sub_401b18
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] eax
mov eax ecx
sub_40f403
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jl r-xdata
call sub_40406e
mov ebx [ ebp + 0x10 ]
test ebx ebx
jle r-xdata
cmp esi [ edi + 0x8 ]
push 0xffffffff
jl r-xdata
mov esi [ edi + 0x8 ]
lea eax [ esi + ebx ]
push eax
call sub_40f2c8
mov ecx [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
sub esi ecx
mov edx esi
shl edx 0x2
mov esi ecx
push edx
mov [ ebp + 0x10 ] edx
shl esi 0x2
lea edx [ eax + esi ]
push edx
push [ ebp + 0x10 ]
add ecx ebx
lea eax [ eax + ecx * 4 ]
push eax
call sub_40cf70
mov eax ebx
shl eax 0x2
push eax
mov eax [ edi + 0x4 ]
add eax esi
push 0x0
push eax
call sub_4113e0
mov esi [ ebp + 0x8 ]
add esp 0x1c
lea eax [ esi + ebx ]
push eax
call sub_40f2c8
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
mov edx [ edx ]
dec ebx
mov [ eax + ecx ] edx
add eax 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
shl eax 0x2
sub_40f4b8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f4a3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40f4d9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x18 ]
push ebx
not edx
push esi
push edi
mov ebx eax
mov [ ebp + 0x10 ] ecx
test dl 0x1
je r-xdata
test ecx ecx
jne r-xdata
test eax eax
jbe r-xdata
test eax eax
jbe r-xdata
call sub_40406e
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi 0x1fffffff
cmp ebx edi
jae r-xdata
mov edi 0x1fffffff
cmp ebx edi
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov esi edi
shl esi 0x2
push esi
push [ ebp + 0x10 ]
call sub_40e258
add [ ebp + 0x10 ] esi
sub ebx edi
test ebx ebx
ja r-xdata
mov edi ebx
mov ecx [ ebp + 0x8 ]
mov esi edi
shl esi 0x2
push esi
push [ ebp + 0x10 ]
call sub_40e0ef
add [ ebp + 0x10 ] esi
sub ebx edi
test ebx ebx
ja r-xdata
mov edi ebx
jmp r-xdata
sub_40f561
push 0x1c
mov eax sub_4233ca
call sub_410e1c
mov ebx ecx
mov [ ebp - 0x24 ] ebx
mov esi [ ebx + 0x3c ]
xor edi edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] edi
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x1
mov ecx esi
call sub_40d390
test eax eax
je r-xdata
push 0x1c
call sub_401ae9
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
push 0x14
call sub_401ae9
pop ecx
cmp eax edi
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
xor eax eax
push 0xa
mov ecx eax
call sub_40d484
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov ecx eax
call sub_40f2b1
mov edi eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x3c ] esi
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
mov [ ebp - 0x20 ] eax
push [ ebx + 0x40 ]
xor eax eax
inc eax
push eax
mov ecx edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] eax
call sub_40f2c8
push 0x1
mov ecx esi
call sub_40d512
mov [ eax ] edi
jmp r-xdata
call sub_410ec1
retn 0x4
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
sub_40f635
push 0xc
mov eax sub_4233f7
call sub_410de9
mov esi ecx
mov eax [ esi + 0x18 ]
xor ebx ebx
not eax
inc ebx
xor edi edi
test bl al
je r-xdata
cmp [ esi + 0x38 ] edi
jne r-xdata
cmp [ esi + 0x38 ] edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
push 0x14
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] ebx
cmp ecx edi
je r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
push 0x1c
call sub_401ae9
pop ecx
mov ecx eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] edi
cmp ecx edi
je r-xdata
call sub_410ec1
retn 0x4
mov ecx esi
call sub_40f29d
mov ecx [ esi + 0x38 ]
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x34 ]
call sub_40fc7c
mov ecx [ esi + 0x3c ]
lea eax [ ebp - 0x14 ]
push eax
push ebx
mov [ ebp - 0x14 ] edi
call sub_40d390
mov ecx [ ebp - 0x14 ]
cmp ecx edi
je r-xdata
xor eax eax
call sub_40fc55
jmp r-xdata
mov ecx esi
call sub_40f29d
push [ ebp + 0x8 ]
mov ecx [ esi + 0x38 ]
call sub_40d512
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
jmp r-xdata
xor eax eax
push [ esi + 0x40 ]
call sub_40d484
jmp r-xdata
call sub_40406e
push ebx
lea eax [ ebp + 0x8 ]
push eax
push [ esi + 0x34 ]
mov [ ebp + 0x8 ] 0x2
call sub_40f403
mov eax [ eax + 0x4 ]
mov [ eax ] edi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
mov [ esi + 0x34 ] ebx
mov [ ebp - 0x10 ] edi
call sub_40f561
mov ecx [ ebp - 0x10 ]
push ebx
lea eax [ ebp - 0x18 ]
push eax
push edi
mov [ ebp - 0x18 ] edi
call sub_40f403
push [ esi + 0x40 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ecx eax
mov [ esi + 0x38 ] eax
call sub_40f093
mov eax [ esi + 0x38 ]
cmp [ eax + 0x8 ] edi
jg r-xdata
inc [ esi + 0x34 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push [ esi + 0x44 ]
mov ecx eax
mov [ esi + 0x38 ] eax
call sub_40d267
mov ecx [ esi + 0x38 ]
push edi
call sub_40d512
mov [ eax ] edi
mov [ esi + 0x34 ] ebx
sub_40f774
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
push [ esi + 0x14 ]
push 0x6
cmp [ ebx + 0x8 ] 0xffff
jne r-xdata
push [ esi + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
call sub_40f635
mov ecx [ esi + 0x38 ]
push ebx
call sub_40d512
mov edi [ eax ]
mov ecx esi
test edi edi
je r-xdata
call sub_404052
call sub_40e3e1
push 0xffff
call sub_40df1a
push esi
mov ecx ebx
call sub_40e21b
mov ecx esi
call sub_40f29d
mov ecx [ esi + 0x38 ]
push ebx
call sub_40d512
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
inc [ esi + 0x34 ]
mov eax 0x7fff
cmp edi eax
jae r-xdata
push eax
call sub_40df1a
or edi 0x80000000
push edi
mov ecx esi
call sub_40df59
jmp r-xdata
or edi 0x8000
push edi
call sub_40df1a
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40f823
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
push edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ebx 0xffff
test eax eax
je r-xdata
push [ esi + 0x14 ]
push 0x1
push 0x0
call sub_40f635
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_40df97
mov eax 0x7fff
cmp [ ebp - 0x4 ] ax
jne r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
movzx ecx [ ebp - 0x4 ]
mov eax ecx
and eax 0xffff8000
shl eax 0x10
or eax ecx
and eax 0xffff7fff
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_40dfdf
mov eax [ ebp - 0xc ]
jmp r-xdata
call sub_404052
cmp [ ebp - 0x4 ] bx
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edi 0x80000000
test edi eax
jne r-xdata
mov edi eax
and edi 0x7fffffff
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_40e078
mov ebx eax
test ebx ebx
jne r-xdata
mov [ ecx ] eax
xor eax eax
jmp r-xdata
push [ esi + 0x14 ]
push 0x5
jmp r-xdata
mov eax [ esi + 0x38 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edi eax
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx eax
and ecx 0x7fffffff
cmp ecx [ ebp - 0x8 ]
je r-xdata
push [ esi + 0x14 ]
push 0x6
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
call sub_40e3e1
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40d390
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40f29d
mov ecx [ esi + 0x38 ]
xor edi edi
inc edi
push edi
push ebx
push [ esi + 0x34 ]
call sub_40fc7c
mov ecx [ esi + 0x3c ]
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_40d390
mov ecx [ ebp - 0x10 ]
test ecx ecx
jne r-xdata
test edi eax
jne r-xdata
call sub_40406e
push edi
call sub_40f27c
cmp [ eax ] 0x2
je r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ esi + 0x34 ]
mov [ ebp - 0x4 ] edi
call sub_40f403
inc [ esi + 0x34 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
push 0x0
mov ecx esi
call sub_40f561
mov ecx [ esi + 0x3c ]
mov edi [ ebp - 0x8 ]
push ebx
call sub_40d512
mov [ eax ] edi
push [ esi + 0x14 ]
push 0x7
jmp r-xdata
mov ecx [ esi + 0x38 ]
push edi
call sub_40f25b
mov ecx [ esi + 0x3c ]
and [ ebp - 0x8 ] 0x0
mov ebx eax
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x7fffffff
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_40d390
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push [ ebp + 0x8 ]
mov ecx ebx
call sub_40c249
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov [ esi + 0x10 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
sub_40fa17
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
not eax
mov esi ecx
mov ecx edi
test al 0x1
je r-xdata
call sub_40e1e7
push 0xffffffff
push eax
mov ecx esi
call sub_40f2c8
push [ esi + 0x8 ]
call sub_40e1b6
jmp r-xdata
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push edi
call sub_40f4d9
pop edi
pop esi
pop ebp
retn 0x4
sub_40fa59
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
push edi
test al 0x1
jne r-xdata
push 0x0
call sub_40f635
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_40e3e1
mov ecx [ esi + 0x38 ]
push ebx
push edi
call sub_40d512
mov ebx [ eax ]
test ebx ebx
je r-xdata
push edi
mov ecx esi
call sub_40df1a
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax ]
push eax
mov ecx esi
call sub_40f774
mov ecx esi
call sub_40f29d
mov ecx [ esi + 0x38 ]
push edi
call sub_40d512
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
inc [ esi + 0x34 ]
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x8 ]
mov eax 0x7fff
mov ecx esi
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push eax
call sub_40df1a
push ebx
mov ecx esi
call sub_40df59
jmp r-xdata
push ebx
call sub_40df1a
jmp r-xdata
pop ebx
sub_40faf5
push 0x14
mov eax sub_423412
call sub_410e1c
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_40f823
xor ebx ebx
mov [ ebp - 0x14 ] ebx
cmp eax ebx
jne r-xdata
push [ esi + 0x14 ]
push 0x4
mov ecx eax
mov [ ebp - 0x4 ] ebx
call sub_40c1ff
mov edi eax
mov [ ebp - 0x14 ] edi
cmp edi ebx
jne r-xdata
mov eax [ esi + 0x38 ]
mov eax [ eax + 0x8 ]
mov edi [ ebp - 0x18 ]
dec eax
cmp edi eax
jbe r-xdata
mov ecx esi
call sub_40f29d
mov ecx [ esi + 0x38 ]
push 0x1
push edi
push [ esi + 0x34 ]
call sub_40fc7c
mov ecx [ esi + 0x3c ]
lea eax [ ebp + 0x8 ]
push eax
push 0x1
mov [ ebp + 0x8 ] ebx
call sub_40d390
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx ebx
setne al
cmp eax ebx
je r-xdata
call sub_404036
mov ecx [ esi + 0x3c ]
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov [ ebp - 0x14 ] ebx
call sub_40d390
test eax eax
je r-xdata
push [ esi + 0x14 ]
push 0x5
jmp r-xdata
call sub_40406e
push 0x1
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x34 ]
mov [ ebp - 0x18 ] 0x2
call sub_40f403
mov eax [ ebp - 0x1c ]
mov ebx [ esi + 0x10 ]
inc [ esi + 0x34 ]
mov [ esi + 0x10 ] eax
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x8 ]
mov [ esi + 0x10 ] ebx
mov ecx [ esi + 0x38 ]
push edi
call sub_40f25b
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
jne r-xdata
call sub_40e3e1
mov eax edi
call sub_410ec1
retn 0x4
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ ecx + 0x8 ]
dec eax
cmp edi eax
ja r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_40c274
test eax eax
jne r-xdata
push edi
call sub_40f27c
cmp [ eax ] 0x1
je r-xdata
push [ esi + 0x14 ]
push 0x6
jmp r-xdata
sub_40fc7c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jl r-xdata
call sub_40406e
mov ebx [ ebp + 0x10 ]
test ebx ebx
jle r-xdata
cmp edi [ esi + 0x8 ]
push 0xffffffff
jl r-xdata
mov edi [ esi + 0x8 ]
lea eax [ edi + ebx ]
push eax
call sub_40f093
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
sub edi eax
lea edx [ ecx + eax * 4 ]
shl edi 0x2
push edi
push edx
mov edx [ esi + 0x8 ]
sub edx eax
sub edx ebx
shl edx 0x2
add eax ebx
push edx
lea eax [ ecx + eax * 4 ]
push eax
call sub_40cf70
mov ecx [ esi + 0x4 ]
mov eax ebx
shl eax 0x2
push eax
mov eax [ ebp + 0x8 ]
shl eax 0x2
add ecx eax
push 0x0
push ecx
call sub_4113e0
mov edi [ ebp + 0x8 ]
add esp 0x1c
lea eax [ edi + ebx ]
push eax
call sub_40f093
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0xc ]
dec ebx
mov [ eax + ecx ] edx
add eax 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax edi
shl eax 0x2
sub_40fd22
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40fc6c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_40fd6c
push 0x58
push r--data
call sub_41157c
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_4144c3
test eax eax
jne r-xdata
push 0x1c
call sub_40fd43
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_414067
mov [ ebp - 0x4 ] ebx
call sub_413e13
test eax eax
jge r-xdata
push 0x10
call sub_40fd43
cmp [ eax + r--data ] 0xe
jbe r-xdata
call GetCommandLineW
mov [ rw-data ] eax
call sub_413db6
mov [ rw-data ] eax
call sub_413d08
test eax eax
jge r-xdata
push 0x1b
call sub_410f23
pop ecx
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_413ad9
test eax eax
jge r-xdata
push 0x8
call sub_410f23
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_414650
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_410fe2
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_410f23
pop ecx
call sub_413a93
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_410f23
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_4111bf
mov [ ebp - 0x4 ] edi
jmp sub_40fecb
push eax
call sub_411193
push ecx
push eax
push esi
push __dos_header
call sub_422c18
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_40ff02
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_41412e
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_41412e
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_413346
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_4140b3
mov [ esi ] eax
add esi 0x4
push esi
call sub_4140b3
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4148ad
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4148ad
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_4140b3
pop ecx
mov [ rw-data ] eax
sub_40ffbc
mov edi edi
push esi
push 0x4
push 0x20
call sub_414861
mov esi eax
push esi
call sub_4140b3
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40ffed
push 0xc
push r--data
call sub_41157c
call sub_410f8f
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40ff02
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410023
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
sub_410040
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4148fb
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4148fb
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_410138
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_411392
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] esi
ja r-xdata
pop esi
pop ebp
retn
push esi
push esi
push esi
push esi
push esi
call sub_414b96
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push sub_415883
call sub_410040
add esp 0x18
cmp eax esi
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ edi ] cx
pop edi
call sub_411392
mov [ eax ] 0x22
sub_4101e0
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
pop ebx
pop ebp
retn
call sub_411392
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414b96
add esp 0x14
call sub_411392
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi [ ebp + 0x10 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax ]
push edi
push esi
push sub_415883
call sub_410040
xor ecx ecx
add esp 0x18
mov [ esi + edi * 2 - 0x2 ] cx
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
mov eax [ ebp + 0x10 ]
inc eax
push eax
push esi
push sub_415883
call sub_410040
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
xor ebx ebx
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
cmp eax ebx
jge r-xdata
call sub_411392
cmp [ eax ] 0x22
jne r-xdata
jmp r-xdata
xor ebx ebx
call sub_411392
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_411392
mov [ eax ] edi
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
cmp eax 0xfffffffe
jne r-xdata
call sub_411392
mov [ eax ] 0x22
call sub_411392
mov [ eax ] ebx
jmp r-xdata
sub_4102ec
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_4113e0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_416430
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
sub_410369
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_4103ec
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4103dc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_41040d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_416810
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_41042d
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_41693e
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4148fb
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_4104aa
push 0xc
push r--data
call sub_41157c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_411392
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414b96
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_4115c1
retn
call sub_417954
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_411392
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_41768b
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410564
mov eax [ ebp - 0x1c ]
call sub_411392
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_417a8c
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_410585
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_411392
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_4148fb
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_418420
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_4183ee
pop ecx
push eax
call sub_418312
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_416430
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_4106e7
push 0xc
push r--data
call sub_41157c
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_4175ad
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410585
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41075f
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_411392
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_414b96
add esp 0x14
call sub_4115c1
retn
sub_410769
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_411392
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_418420
push esi
mov ebx eax
call sub_41871c
push esi
call sub_4183ee
push eax
call sub_41864f
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_410975
pop ecx
mov [ esi + 0x1c ] edi
sub_4107e0
push 0xc
push r--data
call sub_41157c
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_411392
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4175ad
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_410769
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410854
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_4115c1
retn
mov eax [ ebp - 0x1c ]
sub_41085c
push 0xc
push r--data
call sub_41157c
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
push 0x4
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4190db
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4108a2
sub_4108ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_4193cf
pop ecx
call sub_411392
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_4138fa
push 0x1e
call sub_41374f
push 0xff
call sub_410f77
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_41085c
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_411392
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_4193cf
pop ecx
test eax eax
je r-xdata
call sub_411392
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_410975
push 0xc
push r--data
call sub_41157c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4115c1
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4188fc
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_411392
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411350
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4109cb
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_41892c
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_410a03
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_410a3c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_410a90
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419fca
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_410ac6
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40fef3
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_419fca
add esp 0x20
pop esi
pop ebp
retn
sub_410af9
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_410bd0
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_41437a
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_410bd0
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40fef3
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_419fca
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_410af9
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_410a3c
pop ebx
leave
retn
sub_410c6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_41a0fc
call sub_41a0fc
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_410ce4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41437a
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_41437a
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_410d10
mov edi edi
push ebp
mov ebp esp
call sub_41437a
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_410d37
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41437a
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41437a
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_41437a
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_41a0fc
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_410d89
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_410ac6
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_41a150
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_410de9
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410e1c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410e52
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410e88
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410ef3
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_410f23
mov edi edi
push ebp
mov ebp esp
call sub_4138fa
push [ ebp + 0x8 ]
call sub_41374f
push [ rw-data ]
call sub_41412e
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_410f4c
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_410fa1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_410fbe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_410fe2
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_41a19c
push r--data
push r--data
call sub_410fbe
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_41a250
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_41408d
call sub_410029
mov eax r--data
mov [ esp ] r--data
call sub_410fa1
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_41a250
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_411067
push 0x18
push r--data
call sub_41157c
push 0x8
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41117e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_4115c1
retn
mov [ rw-data ] ebx
push 0x8
call sub_4187ef
pop ecx
push [ ebp + 0x8 ]
call sub_410f77
push r--data
mov eax r--data
call sub_410fa1
pop ecx
push [ rw-data ]
call sub_41412e
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_410fa1
pop ecx
push [ rw-data ]
call sub_41412e
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_414125
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_41412e
mov edi eax
call sub_414125
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_41412e
mov edi eax
push [ rw-data ]
call sub_41412e
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_4111dd
mov edi edi
push esi
call sub_414125
mov esi eax
push esi
call sub_4193c0
push esi
call sub_41a53d
push esi
call sub_414a5f
push esi
call sub_41a52e
push esi
call sub_41a51f
push esi
call sub_41a30d
push esi
call sub_402f84
push esi
call sub_41a134
push sub_4111a9
call sub_4140b3
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_41122b
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp edx edi
je r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
mov esi [ ebp + 0x10 ]
cmp esi edi
jne r-xdata
mov ecx edx
xor eax eax
mov [ edx ] ax
jmp r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] ax
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
inc ecx
inc ecx
inc esi
inc esi
cmp ax di
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
mov eax esi
sub_41129a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4112b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41a5b0
add esp 0xc
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
sub_411311
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410138
add esp 0x14
pop ebp
retn
sub_41132f
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4101e0
add esp 0x18
pop ebp
retn
sub_411350
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4113b8
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4113a5
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_411350
pop ecx
mov esi eax
call sub_411392
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4113e0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41a96c
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_41145a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp edx edi
je r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
mov esi [ ebp + 0x10 ]
cmp esi edi
jne r-xdata
mov ecx edx
xor eax eax
mov [ edx ] ax
jmp r-xdata
cmp ebx edi
je r-xdata
inc ecx
inc ecx
dec ebx
jne r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
inc ecx
inc ecx
inc esi
inc esi
cmp ax di
je r-xdata
cmp [ ecx ] di
je r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] ax
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
mov eax esi
sub_4114d7
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_41129a
mov esi eax
inc esi
push 0x2
push esi
call sub_4136bf
mov edi eax
add esp 0xc
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_41122b
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414a6e
add esp 0x14
pop edi
pop esi
sub_41152f
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_411550
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41157c
push sub_4115e0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4115e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fef3
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fef3
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_417bc8
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_417b7e
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40fef3
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fef3
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_417bae
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_417bc8
mov eax [ ebp + 0xc ]
push r--data
call sub_41a250
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40fef3
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_417b95
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fef3
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_41176c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp esi edi
je r-xdata
cmp esi edi
jne r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx edi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
dec ebx
je r-xdata
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] ax
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ esi + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
sub_41183f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_41188b
push [ rw-data ]
call sub_41412e
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_41374f
push 0x1
push 0x0
call sub_41abd1
add esp 0xc
jmp sub_41aaba
call eax
sub_4118b5
push 0x10
push r--data
call sub_41157c
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4108ab
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_410975
pop ecx
jmp r-xdata
call sub_4115c1
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_4193cf
pop ecx
call sub_411392
push 0x4
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_4188fc
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4119f9
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_418dfa
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_4193cf
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_4190db
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_411392
call sub_411392
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_4193cf
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411350
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_411392
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_411392
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_416430
push ebx
call sub_4188fc
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_41892c
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411350
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_416430
push ebx
push [ ebp - 0x20 ]
call sub_41892c
add esp 0x14
mov eax esi
sub_411ad0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_4130d0 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_413150
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
jmp r-xdata
movzx ecx [ esi ]
movzx eax [ edx ]
movzx edi cx
sub eax edi
je r-xdata
test cx cx
je r-xdata
pop edi
pop esi
test eax eax
jge r-xdata
inc edx
inc edx
inc esi
inc esi
jle r-xdata
or eax 0xffffffff
pop ebp
retn
pop ebp
retn
xor eax eax
inc eax
sub_413187
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
cmp [ rw-data ] 0x0
jne r-xdata
call sub_414125
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ rw-data ]
push ecx
call sub_41412e
pop ecx
call eax
test eax eax
je r-xdata
mov [ rw-data ] 0x1
push r--data
push eax
call [ GetProcAddress@IAT ]
push eax
call sub_4140b3
pop ecx
mov [ rw-data ] eax
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
xor eax eax
inc eax
leave
retn
sub_413206
push 0x10
push r--data
call sub_41157c
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi 0xffffffe0
jbe r-xdata
call sub_411392
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
cmp [ rw-data ] 0x3
jne r-xdata
call sub_411392
mov [ eax ] 0xc
jmp r-xdata
call sub_4115c1
retn
cmp esi edi
jne r-xdata
push 0x4
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_4188fc
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov edi eax
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
test eax eax
jne r-xdata
xor esi esi
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4132f5
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
cmp edi 0x4000
ja r-xdata
cmp esi edi
jne r-xdata
push esi
push ebx
push eax
call sub_418dfa
add esp 0xc
test eax eax
je r-xdata
call sub_411392
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411350
mov [ esi ] eax
pop ecx
cmp esi edi
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
jne r-xdata
xor esi esi
inc esi
mov [ ebp - 0x1c ] ebx
call sub_413187
test eax eax
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
sub_413346
push 0x10
push r--data
call sub_41157c
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_411392
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_4188fc
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_4115c1
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4133e0
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_413470
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_413520
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_413560
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41360a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ebx
push esi
push edi
test cx cx
je r-xdata
sub eax [ ebp + 0x8 ]
pop edi
pop esi
sar eax 0x1
pop ebx
pop ebp
retn
mov ebx [ ebp + 0xc ]
movzx edi [ ebx ]
movzx ecx cx
inc eax
inc eax
movzx ecx [ eax ]
test cx cx
jne r-xdata
movzx edx di
mov esi ebx
cmp di cx
je r-xdata
inc esi
inc esi
movzx edx [ esi ]
cmp dx cx
jne r-xdata
test dx dx
je r-xdata
sub_413653
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
push ebx
push esi
push edi
je r-xdata
sub eax [ ebp + 0x8 ]
pop edi
pop esi
sar eax 0x1
pop ebx
pop ebp
retn
mov ebx [ ebp + 0xc ]
movzx edi [ ebx ]
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
movzx esi [ eax ]
movzx ecx di
mov edx ebx
test di di
je r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
cmp cx si
je r-xdata
sub_4136a0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_4136bf
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b8c2
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_411392
test eax eax
je r-xdata
call sub_411392
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_4136ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_41a0b0
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_41374f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_41bd73
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_41bd73
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_41bc80
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_41bd0b
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_414a6e
add esp 0x14
push esi
call sub_41bc80
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_41bd0b
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_41bc80
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_41bbbd
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_414a6e
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_41bb49
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_414a6e
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_414a6e
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_41b9e0
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_414a6e
add esp 0x14
push r--data
push ebx
push edi
call sub_41bb49
add esp 0xc
test eax eax
je r-xdata
sub_4138fa
push 0x3
call sub_41bd73
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_41374f
push 0xff
call sub_41374f
pop ecx
pop ecx
push 0x3
call sub_41bd73
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_413933
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_414301
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_413a93
mov eax [ rw-data ]
xor edx edx
test eax eax
jne r-xdata
movzx ecx [ eax ]
cmp cx 0x20
ja r-xdata
mov eax r--data
cmp cx 0x22
jne r-xdata
test cx cx
je r-xdata
inc eax
inc eax
jmp r-xdata
xor ecx ecx
test edx edx
sete cl
mov edx ecx
retn
test edx edx
je r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x20
ja r-xdata
inc eax
inc eax
sub_413ad9
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_414861
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_41129a
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_41129a
mov edi eax
inc edi
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_410975
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_414861
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_410975
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_41122b
add esp 0xc
test eax eax
je r-xdata
pop ecx
add ebx 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_414a6e
add esp 0x14
sub_413bb7
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
inc eax
inc eax
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
inc eax
inc eax
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
inc esi
inc esi
test edx edx
jne r-xdata
dec eax
dec eax
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp cx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
inc eax
inc eax
jmp r-xdata
cmp cx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
inc esi
inc esi
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
inc esi
inc esi
test edi edi
je r-xdata
cmp cx 0x20
je r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
inc eax
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp cx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
inc esi
inc esi
sub_413d08
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_413bb7
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_41481c
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_413bb7
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_413db6
mov edi edi
push esi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
sub eax esi
inc eax
push ebx
inc eax
mov ebx eax
push edi
push ebx
call sub_41481c
mov edi eax
pop ecx
test edi edi
jne r-xdata
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_416430
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
sub_413e13
push 0x54
push r--data
call sub_41157c
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_414861
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_414861
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_4115c1
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41a54c
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41a54c
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_414067
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_41408d
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4140b3
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_410ef3
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_41412e
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_410ef3
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_4141a9
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_41412e
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_4141dd
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_41412e
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_410975
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_41421a
push 0xc
push r--data
call sub_41157c
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_410ef3
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4142ef
push 0xc
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_41bf07
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4142f8
call sub_4115c1
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_414301
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4141a9
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_414861
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_41412e
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_410975
pop ecx
xor esi esi
push 0x0
push esi
call sub_41421a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_414394
push 0x8
push r--data
call sub_41157c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4115c1
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_410975
pop ecx
push 0xd
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_410975
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4144ae
push 0xc
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4144ba
push esi
call sub_410975
pop ecx
push edi
call sub_41bf96
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_410975
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41bdbe
pop ecx
sub_4144c3
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_410ef3
pop ecx
call sub_4141dd
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_4141a0
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4111dd
push [ rw-data ]
call sub_4140b3
push [ rw-data ]
mov [ rw-data ] eax
call sub_4140b3
push [ rw-data ]
mov [ rw-data ] eax
call sub_4140b3
push [ rw-data ]
mov [ rw-data ] eax
call sub_4140b3
add esp 0x10
mov [ rw-data ] eax
call sub_41874d
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_414394
push [ rw-data ]
call sub_41412e
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_414861
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_41412e
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_41421a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_414650
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_414680
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_414716
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_41c7c6
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_41c7c6
pop ecx
sub_41481c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_4108ab
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_414861
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b8c2
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4148ad
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4118b5
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_4148fb
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4183ee
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_411392
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_411392
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_4174d6
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_418312
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_41c9b5
pop ecx
test eax eax
jne r-xdata
call sub_4174d6
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_418312
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_41c96c
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_41c853
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_414a6e
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_4113e0
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_41c7c6
pop ecx
sub_414b96
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_41412e
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_41c7c6
pop ecx
pop ebp
jmp sub_414a6e
pop ebp
jmp eax
sub_414bbc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41437a
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41c06d
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_41c309
mov [ esi + 0x4 ] eax
sub_414c43
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_41ca19
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_414c72
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_414c43
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_414c99
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] edi
mov [ ebp - 0x408 ] edi
mov [ ebp - 0x42c ] edi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] edi
mov [ ebp - 0x43c ] edi
mov [ ebp - 0x428 ] edi
call sub_414bbc
cmp [ ebp - 0x430 ] edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_411392
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x414 ] edi
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x418 ] edx
cmp dx di
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop edi
add esi edi
cmp [ ebp - 0x420 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x418 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_415811 ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov ebx [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x430 ]
push edx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_414c43
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x42c ] ebx
test ebx ebx
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x40c ] ebx
test ebx ebx
jge r-xdata
movzx eax [ esi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edi
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
add ebx 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi edi
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x418 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x10
je r-xdata
cmp [ ebp - 0x43c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] ecx
jmp r-xdata
sub eax edi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x448 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x448 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] edi
jmp r-xdata
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x418 ] edx
sub eax edi
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x444 ]
call sub_410975
and [ ebp - 0x444 ] 0x0
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x438 ]
call sub_415831
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_414c72
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_41412e
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
call sub_41cba0
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edi
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_41cce7
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x418 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_411392
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_41cbb6
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x45c ] 0x0
inc eax
inc eax
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_415831
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_414c72
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_41481c
mov edx [ ebp - 0x418 ]
pop ecx
mov [ ebp - 0x444 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_41412e
pop ecx
call eax
pop ecx
pop ecx
call sub_414b96
add esp 0x14
cmp [ ebp - 0x44c ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x43c ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_41412e
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x43c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x418 ]
cdq
push edx
push eax
push ebx
push edi
call sub_41ac00
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_414c72
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x430 ]
lea esi [ ebp - 0x420 ]
call sub_414c43
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x418 ] 0x0
pop ecx
jg r-xdata
call sub_41bc80
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x448 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x418 ]
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_41cbb6
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_415831
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx ]
dec [ ebp + 0x8 ]
push eax
mov eax edi
call sub_414c43
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_411392
cmp [ eax ] 0x2a
jne r-xdata
push 0x3f
mov eax edi
call sub_414c43
pop ecx
sub_415883
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x43c ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_414bbc
test esi esi
jne r-xdata
xor esi esi
cmp edi esi
jne r-xdata
call sub_411392
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
movzx ecx [ edi ]
mov [ ebp - 0x420 ] esi
mov [ ebp - 0x414 ] esi
mov [ ebp - 0x434 ] esi
mov [ ebp - 0x458 ] esi
mov [ ebp - 0x41c ] ecx
cmp cx si
je r-xdata
call sub_411392
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop edx
add edi edx
cmp [ ebp - 0x420 ] esi
mov [ ebp - 0x460 ] edi
jl r-xdata
call sub_414b96
add esp 0x14
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x434 ] esi
je r-xdata
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0x434 ] 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov esi [ ebp - 0x434 ]
imul eax eax 0x9
movzx eax [ eax + esi + lookup_table_4270d0 ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x434 ] eax
cmp eax esi
je r-xdata
mov edi [ ebp - 0x460 ]
mov ebx [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_416403 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x45c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x43c ]
push ecx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_414c43
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ edi ]
xor esi esi
mov [ ebp - 0x41c ] eax
cmp ax si
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x42c ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x40c ] eax
test eax eax
jge r-xdata
movzx eax [ edi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ edi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edx
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ edi + 0x2 ] 0x32
jne r-xdata
add edi 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0x40c ] esi
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add edi 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add edi edx
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax edx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x454 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x430 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x42e ] ax
mov [ ebp - 0x424 ] edx
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x418 ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x45c ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax edx
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_410975
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edx
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x430 ]
call sub_415831
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_414c72
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x45c ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x418 ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_41412e
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
call sub_41cba0
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edx
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_41cce7
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x430 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_41cbb6
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x434 ] 0x0
add eax edx
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_415831
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_414c72
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_41481c
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_41412e
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_41412e
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push ebx
push edi
call sub_41ac00
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_414c72
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x43c ]
lea esi [ ebp - 0x420 ]
call sub_414c43
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x41c ] 0x0
pop ecx
jg r-xdata
call sub_41bc80
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x41c ]
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_41cbb6
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_416430
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4164b8 ]
jmp [ ecx * 4 + jump_table_416538 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4165a4 ]
pop esi
pop edi
pop ebp
jmp sub_41cdb9
jmp [ ecx * 4 + jump_table_416740 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_416644 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416740 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4165a4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_416740 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4165a4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4165a4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4165a4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416740 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416740 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416740 ]
sub_416795
push 0xc
push r--data
call sub_41157c
push 0xe
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4167fc
call sub_4115c1
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_410975
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_410975
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_416810
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_416898
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_4148fb
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_4168cb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_416898
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_4168f1
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_416898
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_411392
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_416898
sub_41693e
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_414bbc
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_411392
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_414b96
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_4183ee
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_4174dc
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_414861
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_414861
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_4175ad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_4188c9
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4175ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4188c9
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_417620
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4187ef
pop ecx
pop ebp
retn
sub_41765c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_4187ef
pop ecx
pop ebp
retn
sub_41768b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_41d8af
add esp 0x14
test eax eax
je r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_41dc7e
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_41dafa
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_41dafa
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_41dafa
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_417954
push 0x10
push r--data
call sub_41157c
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417a83
mov eax edi
call sub_4115c1
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_41481c
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_41a54c
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_410975
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4175ee
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_418806
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_41765c
pop ecx
pop ecx
sub_417a8c
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_417b1c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_41ddad
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_41ddcc
jmp r-xdata
sub_417b1c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40fef3
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_417a8c
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_417b7e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_417bae
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417bdf
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_411550
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_4113a5
mov [ eax ] esi
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40fef3
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_4113a5
xor esi esi
mov [ eax ] esi
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41c9b5
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_41c7ce
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_41437a
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_411392
mov [ eax ] 0x1c
call sub_4113a5
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_4113b8
pop ecx
jmp r-xdata
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_41cd1f
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_41ddcf
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_41cccd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_41cccd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_41ddcf
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_418312
push 0x10
push r--data
call sub_41157c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4113a5
and [ eax ] 0x0
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
mov [ eax ] edi
call sub_411392
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4115c1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41e012
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417bdf
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4183e4
mov eax [ ebp - 0x1c ]
sub_4183ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_418420
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_4183ee
pop ecx
push eax
call sub_418312
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_418488
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_418420
pop ecx
test eax eax
je r-xdata
push esi
call sub_4184d0
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4183ee
push eax
call sub_41e273
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_4184d0
push 0x14
push r--data
call sub_41157c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4185a1
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_4115c1
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4175ee
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_418572
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_418488
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_418488
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_4185b3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41df9b
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_4113b8
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_41df9b
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_41df9b
push 0x1
mov edi eax
call sub_41df9b
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_41df15
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_41864f
push 0x10
push r--data
call sub_41157c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4113a5
and [ eax ] 0x0
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
mov [ eax ] edi
call sub_411392
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4115c1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41e012
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_411392
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4185b3
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418712
mov eax [ ebp - 0x1c ]
sub_41871c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_410975
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_41874d
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_41a54c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_418806
push 0xc
push r--data
call sub_41157c
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_4138fa
push 0x1e
call sub_41374f
push 0xff
call sub_410f77
push 0x18
call sub_41481c
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_411392
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_4115c1
retn
push edi
call sub_410975
pop ecx
push 0xfa0
push edi
call sub_41a54c
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_410975
pop ecx
call sub_411392
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4188c0
mov eax [ ebp - 0x1c ]
sub_4188c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_418806
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_410f23
pop ecx
sub_4188fc
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_41892c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_41a5b0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_418c42
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_418cf2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_418dfa
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_4190db
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_418cf2
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_418c42
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4193cf
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_41412e
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4193f7
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_41e354
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_419420
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41e404
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_419447
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_416810
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_4194a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_41437a
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_41437a
add eax 0x90
dec [ eax ]
call sub_41437a
and [ eax + 0x90 ] 0x0
jmp sub_41a0b0
sub_4194ef
push 0x10
push r--data
call sub_41157c
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4195b5
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41437a
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_4115c1
retn
call sub_41a0fc
call sub_41a0fc
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_41a150
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4195d0
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41437a
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_419615
push 0x8
push r--data
call sub_41157c
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_4115c1
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_410a35
mov [ ebp - 0x4 ] 0xfffffffe
sub_41966a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_419693
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_41a0fc
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_419447
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_419757
push 0x2c
push r--data
call sub_41157c
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_410ce4
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_41437a
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_41437a
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_41437a
mov [ eax + 0x88 ] esi
call sub_41437a
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_410d89
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41987d
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
sub_4197f0
mov esp [ ebp - 0x18 ]
call sub_41437a
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_4194ef
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41987d
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_41987d
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_410d37
pop ecx
call sub_41437a
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_41437a
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_410d10
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_419615
pop ecx
pop ecx
sub_4198f3
push 0xc
push r--data
call sub_41157c
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_41e448
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_41e448
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41a0fc
push ebx
push esi
call sub_41e448
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41e448
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41e448
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41e448
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_41e448
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41e448
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_41a5b0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_41e448
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_41966a
pop ecx
pop ecx
push eax
push esi
call sub_41a5b0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_4115c1
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_41966a
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_419a72
push 0x8
push r--data
call sub_41157c
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41966a
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_410a35
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_4198f3
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4115c1
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41966a
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_410a35
jmp r-xdata
sub_419b04
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_419a72
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_410a03
call sub_410a3c
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_4194ef
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_419757
add esp 0x28
test eax eax
je r-xdata
sub_419b72
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_41437a
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_41437a
lea edi [ eax + 0x80 ]
call sub_414125
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_410c6f
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_41a0fc
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_410af9
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_419b04
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_419c66
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_41a0fc
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_41437a
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_41a0fc
call sub_41a0b0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_419b72
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_41437a
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41437a
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_41437a
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_41e448
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_410c6f
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_41a0fc
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_419615
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_41437a
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_41437a
mov edi [ eax + 0x94 ]
call sub_41437a
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_419693
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_419693
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_41040d
test al al
jne r-xdata
call sub_41a0fc
cmp eax 0x19930522
jne r-xdata
call sub_41437a
call sub_41437a
call sub_41437a
mov [ eax + 0x88 ] esi
call sub_41437a
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_419447
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_419615
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_4193f7
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_41183f
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_419b04
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_410a3c
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4194ef
add esp 0x10
push [ esi + 0x1c ]
call sub_41970e
sub_419fca
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41437a
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_419c66
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4194ef
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a0fc
push 0x8
push r--data
call sub_41157c
push [ rw-data ]
call sub_41412e
pop ecx
test eax eax
je r-xdata
call sub_41a0b0
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41a150
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41dda4
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41dda4
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41a19c
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_4140b3
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_41a1c0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_41a200
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a250
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4115e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_41a1c0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_41a200
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a32b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_41a36f
push 0x20
push r--data
call sub_41157c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_414301
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_4115c1
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_41a32b
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4111a9
mov [ ebp - 0x1c ] 0x1
push eax
call sub_41412e
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_411392
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_414b96
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4188c9
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_414125
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a4e3
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_41a54c
push 0x10
push r--data
call sub_41157c
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
sub_41a5b0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41a638 ]
jmp [ ecx * 4 + jump_table_41a6b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a724 ]
pop esi
pop edi
pop ebp
jmp sub_41cdb9
jmp [ ecx * 4 + jump_table_41a8c0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41a7c4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a8c0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a724 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a8c0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a724 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a724 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a724 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a8c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a8c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a8c0 ]
sub_41a915
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41a96c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_41a96c
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_41a915
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41aa4b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_41a9fb
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_41aaba
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_41a362
test eax eax
je r-xdata
push 0xa
call sub_41374f
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_41a36f
pop ecx
push 0x3
call sub_4111a9
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_4113e0
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_41abd1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_41ac00
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41ac95
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_41e652
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41e4b4
test eax eax
movsx eax [ esi ]
push eax
call sub_41e652
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41ad08
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_41ad8a
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_41ada6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_41e726
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_41e67e
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_41ae02
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_41bc80
inc eax
push eax
push esi
add esi edi
push esi
call sub_41a5b0
add esp 0x10
sub_41ae47
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_414bbc
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_411392
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_411392
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_41ae02
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_414b96
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414a6e
add esp 0x14
push r--data
push ebx
push esi
call sub_41bd0b
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_41a5b0
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_41afb6
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41e94a
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_41ae47
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_41e7ce
add esp 0x10
cmp eax ebx
je r-xdata
sub_41b086
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41afb6
add esp 0x18
pop ebp
retn
sub_41b0a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_414bbc
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_411392
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_411392
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_414b96
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_41b086
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_41e510
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41eac0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41eac0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_4113e0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_41eac0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_41e9e0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_41e9e0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_41e9e0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41b419
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_414bbc
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_414b96
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_41ae02
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_41ae02
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_41ae02
push edi
push 0x30
push esi
call sub_4113e0
add esp 0xc
sub_41b510
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41e94a
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_41b419
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_41e7ce
add esp 0x10
cmp eax ebx
je r-xdata
sub_41b5cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41e94a
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_414b96
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_41e7ce
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41ae47
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41b419
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_41b6c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41afb6
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b510
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b0a6
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b5cb
jmp r-xdata
sub_41b74d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b6c5
add esp 0x1c
pop ebp
retn
sub_41b770
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_41eadf
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_414a6e
add esp 0x14
sub_41b7d9
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
push 0x0
call eax
retn
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_41b810
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41b8c2
push 0xc
push r--data
call sub_41157c
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_411392
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_4115c1
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_4193cf
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_4190db
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b9be
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_4113e0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_41b9e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_414125
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_41412e
pop ecx
test eax eax
je r-xdata
push eax
call sub_41412e
pop ecx
test eax eax
je r-xdata
push eax
call sub_41412e
push [ rw-data ]
mov esi eax
call sub_41412e
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_4140b3
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_4140b3
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_4140b3
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_4140b3
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_4140b3
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_41412e
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_41bb49
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
sub_41bbbd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
sub_41bc80
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41bd0b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
sub_41bd73
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_41bdbe
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_410975
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_410975
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_410975
push [ esi + 0xc0 ]
call sub_410975
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_41eb61
push [ edi ]
call sub_410975
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_410975
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_410975
pop ecx
push [ esi + 0xb0 ]
call sub_410975
push [ esi + 0xbc ]
call sub_410975
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_410975
push [ esi + 0xbc ]
call sub_41ed3b
pop ecx
pop ecx
push eax
call sub_410975
pop ecx
push eax
call sub_410975
push [ esi + 0xbc ]
call sub_41ecf6
pop ecx
pop ecx
sub_41bf07
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_41bf96
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_41c02f
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_41bf07
pop ecx
test esi esi
je r-xdata
push esi
call sub_41bf96
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41bdbe
pop ecx
sub_41c06d
push 0xc
push r--data
call sub_41157c
call sub_41437a
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_41c02f
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c0d7
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41437a
mov esi [ eax + 0x6c ]
mov eax esi
call sub_4115c1
retn
push 0x20
call sub_410f23
pop ecx
sub_41c0e3
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_41c112
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_4113e0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_41c176
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_41efd0
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41f4c5
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41f4c5
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_4113e0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_41c309
push 0xc
push r--data
call sub_41157c
call sub_41437a
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c3a4
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_4115c1
retn
push 0x20
call sub_410f23
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_410975
pop ecx
sub_41c3ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_414bbc
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41c429
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41c3ad
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_41c112
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4113e0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_41c0e3
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_41c176
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4113e0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_41c0e3
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_41c60e
push 0x14
push r--data
call sub_41157c
or [ ebp - 0x20 ] 0xffffffff
call sub_41437a
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_41c309
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_41c3ad
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_41481c
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_4115c1
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_41c429
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_411392
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_410975
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_410975
pop ecx
push 0xd
call sub_4188c9
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c76f
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_410975
pop ecx
sub_41c7ce
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_41df9b
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_411392
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_4113b8
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_41c853
push 0x14
push r--data
call sub_41157c
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4113a5
and [ eax ] 0x0
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
mov [ eax ] edi
call sub_411392
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4115c1
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_41e012
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4113a5
mov [ eax ] edi
call sub_411392
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_414b96
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c7ce
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c962
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_41c96c
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_41481c
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_41c9b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_411392
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_414b96
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_41ca19
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_4183ee
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_41f50a
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_4183ee
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
push esi
call sub_4183ee
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_4183ee
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4183ee
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_4183ee
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_4183ee
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_4183ee
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4183ee
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_4183ee
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41d008
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_4183ee
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4183ee
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_4148fb
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_41cbb6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_41cce7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_411392
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41cce7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41cd32
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41cdb9
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_41cdb9
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_41cd32
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41ce9c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_411392
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_414b96
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_411392
mov [ eax ] 0x2a
call sub_411392
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_411392
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_414b96
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_4113e0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_4113e0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41d025
push 0x10
push r--data
call sub_41157c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d0bb
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_4107e0
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_410975
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_41d0c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414a6e
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_420181
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_4113a5
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_411392
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_414b96
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_41e0d9
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_4113a5
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_411392
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_411392
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_4113b8
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_4113b8
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_411392
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_41de94
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_420050
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_41fa8e
add esp 0xc
test eax eax
jne r-xdata
call sub_4113a5
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_420050
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_4185b3
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_4113b8
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_41df15
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_41f8d8
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_41fa8e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_41c7ce
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_41c7ce
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_4185b3
pop ecx
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_420050
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_418312
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_420050
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_41c7ce
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_41c7ce
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_41d7e3
push 0x14
push r--data
call sub_41157c
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_411392
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_414b96
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_4115c1
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_41d0c4
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d881
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_41d881
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_41e0b2
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_41d8af
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41d7e3
add esp 0x18
pop ebp
retn
sub_41d8cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_414bbc
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4202ac
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_41db14
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f012
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41dc98
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dcb8
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40fef3
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_41dcfd
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41dcfd
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_41dcb8
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41ddad
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41ddcc
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41dda4
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41ddad
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41ddcf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_42030a
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40fef3
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_41de94
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41df15
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41df9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_4113a5
and [ eax ] 0x0
call sub_411392
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_4113a5
mov [ eax ] esi
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_41e012
push 0xc
push r--data
call sub_41157c
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e0a9
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41a54c
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_41e0b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41e0d9
push 0x18
push r--data
call sub_41157c
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_418806
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_4188c9
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e26a
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_4115c1
retn
push 0x40
push 0x20
call sub_414861
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_41e012
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_4188c9
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41e1ac
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41a54c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_41e273
push 0x10
push r--data
call sub_41157c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_411392
mov [ eax ] 0x9
call sub_411392
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414b96
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4115c1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41e012
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_411392
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_41df9b
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e34a
mov eax [ ebp - 0x1c ]
call sub_4113a5
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_41e354
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_41bc80
mov esi eax
inc esi
push esi
call sub_4108ab
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_41bd0b
add esp 0xc
jmp r-xdata
sub_41e3a7
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_41bc80
mov edi eax
inc edi
push edi
call sub_4108ab
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_41bd0b
add esp 0xc
jmp r-xdata
sub_41e427
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41e404
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_401b18
pop ecx
sub_41e463
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_420356
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41e4b4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41e463
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_41e4e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_410975
pop ecx
sub_41e510
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_41e53d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_414bbc
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_411392
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41cce7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_420356
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41f4c5
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41e652
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41e53d
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_41e67e
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_414bbc
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_420ec4
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42043c
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
sub_41e726
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_414bbc
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_420ec4
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_420980
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
sub_41e7ce
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_411392
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_411392
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414b96
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_41bc80
inc eax
push eax
push edi
push esi
call sub_41a5b0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_41e88d
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_41e94a
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41e88d
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4215bc
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_41bd0b
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_414a6e
add esp 0x14
sub_41e9e0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41eac0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41eadf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_42200e
call sub_42200e
mov [ esi ] eax
jmp r-xdata
call sub_411392
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_414b96
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_42200e
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_41eb61
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_410975
push [ esi + 0x8 ]
call sub_410975
push [ esi + 0xc ]
call sub_410975
push [ esi + 0x10 ]
call sub_410975
push [ esi + 0x14 ]
call sub_410975
push [ esi + 0x18 ]
call sub_410975
push [ esi ]
call sub_410975
push [ esi + 0x20 ]
call sub_410975
push [ esi + 0x24 ]
call sub_410975
push [ esi + 0x28 ]
call sub_410975
push [ esi + 0x2c ]
call sub_410975
push [ esi + 0x30 ]
call sub_410975
push [ esi + 0x34 ]
call sub_410975
push [ esi + 0x1c ]
call sub_410975
push [ esi + 0x38 ]
call sub_410975
push [ esi + 0x3c ]
call sub_410975
add esp 0x40
push [ esi + 0x40 ]
call sub_410975
push [ esi + 0x44 ]
call sub_410975
push [ esi + 0x48 ]
call sub_410975
push [ esi + 0x4c ]
call sub_410975
push [ esi + 0x50 ]
call sub_410975
push [ esi + 0x54 ]
call sub_410975
push [ esi + 0x58 ]
call sub_410975
push [ esi + 0x5c ]
call sub_410975
push [ esi + 0x60 ]
call sub_410975
push [ esi + 0x64 ]
call sub_410975
push [ esi + 0x68 ]
call sub_410975
push [ esi + 0x6c ]
call sub_410975
push [ esi + 0x70 ]
call sub_410975
push [ esi + 0x74 ]
call sub_410975
push [ esi + 0x78 ]
call sub_410975
push [ esi + 0x7c ]
call sub_410975
add esp 0x40
push [ esi + 0x80 ]
call sub_410975
push [ esi + 0x84 ]
call sub_410975
push [ esi + 0x88 ]
call sub_410975
push [ esi + 0x8c ]
call sub_410975
push [ esi + 0x90 ]
call sub_410975
push [ esi + 0x94 ]
call sub_410975
push [ esi + 0x98 ]
call sub_410975
push [ esi + 0x9c ]
call sub_410975
push [ esi + 0xa0 ]
call sub_410975
push [ esi + 0xa4 ]
call sub_410975
push [ esi + 0xa8 ]
call sub_410975
add esp 0x2c
sub_41ecf6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410975
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_410975
pop ecx
push esi
call sub_410975
pop ecx
sub_41ed3b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410975
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_410975
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_410975
pop ecx
push esi
call sub_410975
pop ecx
sub_41edd0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41ee16
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_42231d
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fef3
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_422366
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_410975
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4113e0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41e4e2
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_4108ab
pop ecx
cmp eax ebx
je r-xdata
call sub_420410
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_41efd0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41ee16
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41f012
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_41f0e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41f120
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_42231d
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fef3
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_422366
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_410975
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_410975
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_41e4e2
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_4108ab
pop ecx
cmp eax ebx
je r-xdata
call sub_420410
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_4113e0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_422366
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_4108ab
pop ecx
cmp eax ebx
je r-xdata
call sub_420410
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_41e4e2
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_41e4e2
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_4108ab
pop ecx
cmp eax ebx
je r-xdata
call sub_420410
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_41f4c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41f120
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41f50a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4183ee
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_411392
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_411392
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_4174d6
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_418312
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_41c9b5
pop ecx
test eax eax
jne r-xdata
call sub_4174d6
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_418312
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_41c96c
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_41c853
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41f67e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_414bbc
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_411392
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_420356
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_411392
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_41f8ad
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_41f67e
add esp 0x14
pop ebp
retn
sub_41f8d8
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_41c7ce
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_411392
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_41c7ce
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_41c7ce
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c7ce
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_4200c5
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_411392
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_41df9b
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_411392
mov [ eax ] 0xd
call sub_4113a5
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_4113a5
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_411392
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_417bdf
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_4200c5
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_41fa8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_4113a5
and [ eax ] 0x0
call sub_411392
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_4113a5
mov [ eax ] ebx
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_414b96
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_4113a5
mov [ eax ] ebx
call sub_411392
mov [ eax ] 0x9
jmp r-xdata
call sub_4113a5
mov [ eax ] ebx
call sub_411392
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_414b96
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_41481c
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_41c7ce
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_411392
mov [ eax ] 0xc
call sub_4113a5
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_411392
mov [ eax ] 0x9
call sub_4113a5
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_4113b8
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_410975
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_411392
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_41c7ce
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_41c7ce
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_41c7ce
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_420050
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41df9b
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_411392
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_4113b8
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_4200c5
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_420181
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4201ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_414bbc
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41e53d
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41e53d
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_422520
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_4202ac
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4201ba
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_411392
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_422520
sub_420329
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_420356
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_414bbc
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41cce7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41efd0
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42043c
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_420980
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_420ec4
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_411392
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_414b96
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_42158c ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_422581
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_4215bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_41bd0b
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_414a6e
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_414a6e
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_41bd0b
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_421ee0
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_421f6e
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_42200e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_421ee0
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_421f6e
push eax
mov [ ebp - 0xc ] eax
call sub_42274f
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_42231d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41eb4b
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fef3
leave
retn
sub_422366
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fef3
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_4113e0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_41e4e2
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_4108ab
pop ecx
cmp eax edi
je r-xdata
call sub_420410
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_41bc80
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_414861
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_410975
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_422520
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_422581
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fef3
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_42274f
push 0x8
push r--data
call sub_41157c
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_4115c1
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_4227e0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_4227d0
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_422952
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x2c ]
pop esi
jmp r-xdata
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_410975
and [ esi ] 0x0
pop ecx
sub_42296a
mov edi edi
push esi
mov esi ecx
call sub_422936
mov eax __dos_header
lea ecx [ esi + 0x14 ]
mov [ esi ] 0x38
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0x900
mov [ esi + 0x10 ] r--data
call sub_4228eb
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
sub_4229db
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov eax __dos_header
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ebx [ esi + 0xc ]
add edx eax
push edi
mov edi [ esi + 0x14 ]
add edi eax
add ecx eax
mov [ ebp - 0x18 ] edx
mov edx [ esi + 0x10 ]
add ebx eax
add edx eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
xor ecx ecx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x3c ] eax
xor eax eax
test [ esi ] 0x1
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x44 ] 0x24
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x34 ] ecx
stosd [ edi ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
mov eax [ ebp + 0xc ]
sub eax ebx
sar eax 0x2
shl eax 0x2
add edx eax
mov edx [ edx ]
mov [ ebp + 0x8 ] eax
mov eax edx
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x34 ] eax
lea eax [ edx + r--data ]
jne r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push ecx
push 0xc06d0057
call [ RaiseException@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
xor ebx ebx
cmp eax ecx
je r-xdata
movzx eax dx
pop edi
pop esi
pop ebx
leave
retn 0x8
test edi edi
jne r-xdata
lea edx [ ebp - 0x44 ]
push edx
push ecx
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x2c ] edi
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x2
call eax
mov ebx eax
push [ ebp - 0x38 ]
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x1
call eax
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp - 0x44 ]
push ecx
push 0x5
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] ebx
call eax
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
push edi
push [ ebp - 0x18 ]
call [ InterlockedExchange@IAT ]
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ ebp - 0x30 ]
push edi
call [ GetProcAddress@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
push edi
call [ FreeLibrary@IAT ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push 0x0
push 0xc06d007e
call [ RaiseException@IAT ]
mov eax [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x3
call eax
mov edi eax
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ edi + 0x3c ]
add eax edi
cmp [ eax ] 0x4550
jne r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x4
call eax
mov ebx eax
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
mov [ eax + 0x4 ] esi
mov ecx [ rw-data ]
mov [ eax ] ecx
mov [ rw-data ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push ebx
push 0xc06d007f
call [ RaiseException@IAT ]
mov ebx [ ebp - 0x28 ]
cmp edi [ eax + 0x34 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx + eax ]
test ebx ebx
jne r-xdata
sub_422c4d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
or ebx 0xffffffff
call sub_405201
mov esi eax
call sub_40c0a9
push [ ebp + 0x14 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ece2
test eax eax
je r-xdata
call sub_40e8e9
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x10
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x90 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
cmp [ esi + 0x20 ] eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
jmp r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
call [ eax + 0x60 ]
mov ebx eax
sub_423601
mov ecx rw-data
call sub_404e9d
xor eax eax
push sub_42387b
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_410029
pop ecx
retn
sub_423669
mov ecx rw-data
call sub_404e9d
xor eax eax
push sub_423885
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x1
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_410029
pop ecx
retn
sub_4236d6
mov ecx rw-data
call sub_404e9d
or [ rw-data ] 0xffffffff
xor eax eax
push sub_42388f
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_410029
pop ecx
retn
sub_423740
mov ecx rw-data
call sub_404e9d
xor eax eax
push sub_423899
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0xfffffffe
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_410029
pop ecx
retn
sub_401000
mov eax r--data
retn
sub_401010
push esi
mov esi ecx
call sub_402870
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_401b18
add esp 0x4
sub_401130
push esi
mov esi ecx
mov [ esi ] r--data
call sub_401490
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_401b18
add esp 0x4
sub_401160
push esi
mov esi ecx
call sub_401490
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_401b18
add esp 0x4
sub_401180
retn 0x4
sub_4012d0
push 0x8007000e
call sub_4013a0
sub_4015a0
mov [ ecx ] r--data
jmp sub_401490
sub_4015b0
mov eax [ esp + 0x4 ]
push eax
call sub_401b18
pop ecx
retn 0x4
sub_4017a0
push esi
mov esi ecx
push esi
call sub_4010c0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_401b18
add esp 0x4
sub_4017c0
mov eax [ esp + 0x4 ]
add ecx 0x78
push ecx
push 0x3e8
push eax
call sub_40c16e
retn 0x4
sub_4017e0
mov eax r--data
retn
sub_401930
mov eax [ ecx + 0x74 ]
retn
sub_401970
push 0x7d0
call [ Sleep@IAT ]
push 0x0
call [ ExitProcess@IAT ]
int3
sub_401a60
movzx edx [ esp + 0x4 ]
mov [ esp + 0x4 ] edx
jmp sub_403805
sub_401a70
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov ecx [ ecx + 0x20 ]
push eax
mov eax [ esp + 0x8 ]
push edx
push eax
push ecx
call [ SendMessageW@IAT ]
retn 0xc
sub_401a90
push esi
mov esi ecx
call sub_4038e4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_401b18
add esp 0x4
sub_401ab0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_401ac0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
j_sub_404036
jmp sub_404036
sub_401b7c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
pop ebp
retn 0x14
mov cx [ ebp + 0x14 ]
mov [ eax ] cx
xor eax eax
inc eax
sub_402025
mov eax r--data
retn
sub_4020bd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41122b
push eax
call sub_40202b
add esp 0x10
pop ebp
retn
sub_40216a
mov edi edi
push ebp
mov ebp esp
call sub_40c0a9
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
pop ebp
retn 0x4
sub_40217e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
jmp sub_41129a
xor eax eax
pop ebp
retn
sub_4021b4
mov eax r--data
retn
sub_402286
cmp [ rw-data ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
retn
cmp [ esi ] 0xffffffff
je r-xdata
call sub_401cb4
push [ esi ]
call [ rw-data ]
j_sub_401cda
jmp sub_401cda
j_sub_402286
jmp sub_402286
sub_402a47
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40284f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402a7f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_402a47
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402c9d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
jmp sub_41152f
xor eax eax
pop ebp
retn
sub_402d5f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_402d3c
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402f07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x70 ] eax
xor eax eax
inc eax
pop ebp
retn 0x4
sub_402f19
mov eax [ ecx + 0x70 ]
retn
sub_402f84
retn
sub_402f85
mov edi edi
push esi
push 0x1
mov esi ecx
call sub_407f3c
test eax eax
je r-xdata
pop esi
retn
push 0x1
mov ecx esi
call sub_402f5a
sub_402fa0
push 0x2
call sub_402f5a
retn
sub_402fa8
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
sub_402fbb
mov eax r--data
retn
sub_402fc1
mov eax [ ecx ]
jmp [ eax + 0x158 ]
sub_40340c
mov eax r--data
retn
sub_40353e
mov ecx [ ebp - 0x2c ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x20 ]
or [ eax + 0x44 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
call sub_403f64
sub_403718
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x20 ]
or [ eax + 0x44 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
call sub_403f64
sub_4037ec
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403799
pop ebp
retn 0xc
sub_403863
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4037c6
pop ebp
retn 0x8
sub_403915
mov eax r--data
retn
sub_40391b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_401b18
pop ecx
pop ebp
retn 0x8
sub_40392d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
add ecx 0x1c
call sub_40d512
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn 0x8
sub_403a18
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4039f7
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403a2f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_403a18
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403a46
call sub_40baf1
mov eax [ eax + 0x14c ]
retn
sub_403bc2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_403ae9
pop ecx
pop ebp
retn 0x4
sub_403d6c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
call sub_403bd4
add esp 0x10
pop ebp
retn 0xc
sub_403dd6
mov eax r--data
retn
sub_403e42
mov edi edi
push esi
mov esi ecx
call sub_4040b9
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_403f64
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_403f72
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x10 ]
sub_403ff1
mov eax r--data
retn
sub_403ff7
mov eax r--data
retn
sub_403fff
mov eax r--data
retn
sub_404005
mov eax r--data
retn
sub_404036
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_41183f
int3
sub_404052
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_41183f
int3
sub_40406e
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_41183f
int3
sub_4040b9
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_4040c3
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_40414d
mov eax rw-data
retn
sub_404192
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_410975
pop ecx
pop ebp
retn 0x4
sub_4041d6
mov eax ecx
retn
sub_404200
mov eax ecx
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x10 ] 0x2
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x4 ] eax
retn
sub_404223
xor edx edx
lea eax [ ecx + 0x10 ]
inc edx
[ eax ] edx
lea eax [ ecx + 0x4 ]
retn
sub_4042e5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_4042f4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_404303
and [ ecx + 0x8 ] 0x0
retn
sub_404308
and [ ecx + 0x4 ] 0x0
retn
sub_40441a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
pop ebp
retn 0x4
sub_40442f
mov eax r--data
retn
sub_404435
mov eax r--data
retn
sub_40443b
mov eax r--data
retn
sub_404441
mov eax r--data
retn
sub_404447
mov eax r--data
retn
sub_40444d
mov eax r--data
retn
sub_404453
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_41183f
int3
sub_40448b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x4 ]
pop ebp
retn 0x4
sub_4044b2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
pop ebp
retn 0x8
sub_4044ca
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
pop ebp
retn 0x4
sub_4044df
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ TextOutW@IAT ]
pop ebp
retn 0x10
sub_40455c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ DrawTextW@IAT ]
pop ebp
retn 0x10
sub_40457a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ DrawTextExW@IAT ]
pop ebp
retn 0x14
sub_4045cd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
pop ebp
retn 0x10
sub_40479e
push 0x8
call sub_401ae9
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_4047d9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
sub_4048e4
cmp [ ecx + 0x4 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
call sub_4048b1
push eax
call [ DeleteDC@IAT ]
sub_404a05
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_404991
mov ecx eax
pop ebp
jmp sub_40d622
sub_404a71
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_404a45
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_404dc7
xor eax eax
inc eax
retn 0x4
sub_404dcd
mov eax 0x80029c4a
retn 0x8
sub_404dd5
mov eax r--data
retn
sub_404ddb
mov eax r--data
retn
sub_404de1
mov eax r--data
retn
sub_404de7
mov eax r--data
retn
sub_404e1d
mov eax r--data
retn
sub_404e23
mov eax r--data
retn
sub_404e4f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ CheckMenuItem@IAT ]
pop ebp
retn 0x8
sub_404e67
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ EnableMenuItem@IAT ]
pop ebp
retn 0x8
sub_404e7f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ModifyMenuW@IAT ]
pop ebp
retn 0x10
sub_404ec5
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x10 ]
mov eax [ ecx ]
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
pop esi
retn
call [ eax + 0x1c ]
sub_404edc
call sub_40c0a9
mov eax [ eax + 0x4 ]
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0x9c ]
retn
sub_404ef1
call sub_40c0a9
mov eax [ eax + 0x4 ]
mov edx [ eax ]
push 0xffffffff
mov ecx eax
call [ edx + 0x9c ]
retn
sub_405201
call sub_40c0dc
mov eax [ eax + 0x4 ]
retn
sub_40520a
call sub_40baf1
add eax 0x30
retn
sub_40523d
mov edi edi
push ebp
mov ebp esp
call sub_40c0dc
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_405213
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x6c ]
sub_4052db
cmp [ ecx + 0x28 ] 0x0
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40537d
call sub_40baf1
mov eax [ eax + 0x38 ]
retn
sub_405404
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_405213
sub_40542f
mov eax r--data
retn
sub_4055d1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4054e8
pop ecx
pop ebp
retn 0x4
sub_4055e3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_405454
pop ecx
pop ebp
retn 0x4
sub_4055f5
mov eax [ ecx + 0x24 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
call [ GetActiveWindow@IAT ]
push eax
call sub_40869f
sub_405656
call sub_40c0dc
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
jmp sub_405610
mov eax [ ecx ]
jmp [ eax + 0x5c ]
j_sub_405610
jmp sub_405610
sub_405934
cmp [ ecx + 0x58 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
jmp [ eax + 0x10 ]
xor eax eax
retn
sub_405945
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x58 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x14 ]
call sub_40406e
sub_40595e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_401190
mov eax esi
pop esi
pop ebp
retn 0x4
sub_405ba1
mov ecx [ ebp - 0x234 ]
mov [ ebp - 0x224 ] 0x8
call sub_403f64
mov eax r-xdata
retn
sub_405dfc
cmp [ ecx + 0x58 ] 0x0
je r-xdata
xor eax eax
inc eax
retn
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
jmp [ eax + 0x20 ]
sub_405e37
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x58 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x1c ]
call sub_40406e
sub_405e83
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x58 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x30 ]
sub_405ebd
mov eax [ ecx + 0x20 ]
push 0x0
push 0x0
push 0x10
push [ eax + 0x20 ]
call [ SendMessageW@IAT ]
retn
sub_4068e1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffec
push [ ebp + 0x8 ]
call sub_40688f
pop ebp
retn 0x10
sub_4068fd
push [ ecx + 0x20 ]
call [ GetMenu@IAT ]
push eax
call sub_40e759
retn
sub_40690d
cmp [ ecx + 0x20 ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0x11c ]
jmp [ eax + 0x60 ]
sub_406967
lea eax [ ecx + 0x40 ]
retn
sub_406a87
mov edi edi
push esi
mov esi ecx
call sub_404e29
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_406aa2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x18 ] 0x1
pop ebp
retn 0x4
sub_406ae9
mov eax r--data
retn
sub_406aef
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4067e2
pop ebp
retn 0x18
sub_406b0c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov [ eax ] 0x1
xor eax eax
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_406b2b
mov eax 0x80004001
retn 0x10
sub_406b33
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
and [ eax ] 0x0
mov eax 0x80004001
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_406b52
lea eax [ ecx + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
push eax
push r--data
push 0xfffffffc
push [ ecx + 0x20 ]
call CreateStdAccessibleObject
test eax eax
jl r-xdata
retn
sub_406b71
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
pop ebp
retn 0x4
sub_406b86
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
pop ebp
retn 0x4
sub_406ceb
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
pop ebp
retn 0x4
sub_406d00
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
pop ebp
retn 0x4
sub_406db5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov eax [ ecx + 0x28 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x60 ]
pop ebp
retn 0xc
sub_406e17
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x2c ] eax
xor eax eax
pop ebp
retn 0x4
sub_406e28
xor eax eax
inc eax
retn
sub_406e61
mov eax [ ecx + 0x3c ]
and eax 0x10
retn
sub_406e68
xor eax eax
retn 0x4
sub_406e6d
xor eax eax
retn
sub_406e70
mov eax [ ecx + 0xa8 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp eax 0xe002
je r-xdata
cmp eax 0xe001
je r-xdata
xor eax eax
inc eax
retn
sub_406e8f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
xor eax eax
inc eax
pop ebp
retn 0x4
call sub_40406e
sub_406eaa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
and [ eax ] 0x0
xor eax eax
inc eax
pop ebp
retn 0x10
call sub_40406e
sub_406ec5
mov eax r--data
retn
sub_406ecb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
pop ebp
retn 0x8
sub_4071db
cmp [ ecx + 0x4 ] 0x0
je r-xdata
retn
push [ ecx ]
push 0x0
call sub_40b806
sub_4071eb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetMenuItemID@IAT ]
pop ebp
retn 0x4
sub_407200
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_40e759
pop ebp
retn 0x4
sub_40721b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ GetWindowRect@IAT ]
pop ebp
retn 0x4
sub_407230
mov edi edi
push esi
mov esi ecx
call sub_40c0a9
mov ecx [ eax + 0x4 ]
call sub_404edc
mov eax esi
pop esi
retn
sub_4072fb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40721b
mov ecx [ ebp + 0x8 ]
call sub_40b573
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
pop ebp
retn 0xc
sub_40731c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push eax
push [ ecx + 0x20 ]
call [ SetMenu@IAT ]
pop ebp
retn 0x4
mov eax [ eax + 0x4 ]
sub_407496
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call [ FreeLibrary@IAT ]
sub_407f2f
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_407fa1
mov eax r-xdata
retn
sub_407fa9
mov esi [ ebp - 0x1c ]
mov eax [ esi ]
push 0xf108
push 0x30
mov ecx esi
call [ eax + 0x14 ]
mov ecx esi
call sub_403f64
mov eax r-xdata
retn
sub_408322
push 0x4
mov eax sub_422fde
call sub_410de9
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
call sub_410ec1
retn 0x4
call sub_4072b6
sub_4083db
cmp [ ebp - 0x20 ] 0x2
je r-xdata
retn
push [ ebp - 0x1c ]
push 0x0
call sub_40b806
sub_40859b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40c0a9
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40841b
pop ebp
retn 0x4
j_sub_40729a
jmp sub_40729a
sub_408cf4
push 0xc
call sub_40c5c7
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_408d09
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ GetWindow@IAT ]
push eax
call sub_40869f
pop ebp
retn 0x4
sub_408e4e
mov eax [ ebp - 0x18 ]
add eax 0x58
push eax
push [ ebp - 0x14 ]
call sub_40523d
cmp [ ebp - 0x14 ] 0x0
mov [ ebp + 0x18 ] eax
je r-xdata
mov eax r-xdata
retn
mov ecx [ ebp - 0x14 ]
call sub_403f64
sub_4096ce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
neg eax
sbb eax eax
and eax 0xffff3ef9
add eax 0x80010108
pop ebp
retn 0x18
sub_4096eb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
xor eax eax
pop ebp
retn 0xc
sub_4097c0
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push eax
call sub_40869f
retn
push [ ecx + 0x20 ]
call [ GetParent@IAT ]
sub_409bda
xor eax eax
retn 0x8
sub_409bdf
mov eax 0x80004001
retn 0x8
sub_409be7
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0xc ]
retn
xor eax eax
retn
sub_409ccf
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push ecx
call sub_409c2c
pop ebp
retn 0x8
sub_409ce9
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0x10 ] r--data
mov [ ecx + 0x14 ] 0xc0000001
call sub_409be7
jmp sub_40cded
sub_409d0e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x14 ]
mov eax [ eax + 0x14 ]
pop ebp
retn 0x4
sub_409d43
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_409ccf
pop ebp
retn 0xc
sub_409d7b
sub [ esp + 0x4 ] 0x10
jmp sub_409d20
sub_409d85
sub [ esp + 0x4 ] 0x4
jmp sub_409d43
sub_409d8f
sub [ esp + 0x4 ] 0x10
jmp sub_409d0e
sub_409d99
sub [ esp + 0x4 ] 0x10
jmp sub_409d43
sub_409da3
sub [ esp + 0x4 ] 0x4
jmp sub_409d20
sub_409dad
sub [ esp + 0x4 ] 0x4
jmp sub_409d0e
sub_40ac3b
mov ecx [ ebp - 0x20 ]
call sub_403f64
mov eax r-xdata
retn
sub_40ac64
push 0x410
mov eax sub_4230f0
call sub_410e88
and [ ebp - 0x4 ] 0x0
call sub_40c0a9
mov ecx [ eax + 0x4 ]
call sub_404ef1
call sub_410ee4
retn
sub_40ae10
mov eax r--data
retn
sub_40af95
push 0x1
call sub_40e4ff
push 0x0
push 0x0
call sub_41183f
int3
sub_40b498
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x4c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x58 ]
sub_40b4a6
mov eax [ ecx + 0x50 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x50 ]
retn
retn
sub_40b4b2
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4c ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ ecx + 0x4c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x98 ]
sub_40b4cf
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4c ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ ecx + 0x4c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x54 ]
sub_40b573
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0x78 ]
push 0xfffffff0
push [ ecx + 0x20 ]
call [ GetWindowLongW@IAT ]
retn
sub_40b58d
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0x7c ]
push 0xffffffec
push [ ecx + 0x20 ]
call [ GetWindowLongW@IAT ]
retn
sub_40b641
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0xa4 ]
push [ ecx + 0x20 ]
call [ IsWindowEnabled@IAT ]
retn
sub_40b683
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0xb0 ]
push [ ecx + 0x20 ]
call [ SetFocus@IAT ]
push eax
call sub_40869f
retn
j_sub_40cc14
jmp sub_40cc14
sub_40b7da
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
pop ebp
retn 0x4
pop ebp
jmp eax
sub_40b7ef
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
pop ebp
jmp eax
sub_40b806
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
pop ebp
jmp eax
sub_40b983
mov eax [ rw-data ]
retn
sub_40b989
mov eax ecx
xor edx edx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x34 ] edx
mov [ eax + 0x54 ] edx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x50 ] edx
retn
sub_40baa7
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
or [ eax + 0x44 ] 0xffffffff
or [ eax + 0x4c ] 0xffffffff
mov [ eax + 0x48 ] ecx
mov [ eax + 0xc ] 0x6c
mov [ eax + 0x28 ] j_sub_404036
retn
sub_40baf1
push sub_40408a
mov ecx rw-data
call sub_40cb8a
test eax eax
jne r-xdata
retn
jmp sub_40406e
sub_40bbd5
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx 0x10
pop esi
jmp sub_401230
push [ esi + 0x4 ]
call [ FreeLibrary@IAT ]
sub_40bf7d
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
call sub_403f64
sub_40c044
mov edi edi
push esi
push 0x1
mov esi ecx
call sub_40bf09
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_40c0dc
call sub_40c0a9
mov ecx eax
add ecx 0x74
call sub_4023cb
test eax eax
jne r-xdata
retn
jmp sub_40406e
sub_40c1f9
mov eax r--data
retn
sub_40c23b
mov ecx [ ebp - 0x18 ]
call sub_403f64
mov eax r-xdata
retn
sub_40c5c7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
test eax eax
jne r-xdata
pop ebp
retn 0x4
call sub_404036
sub_40c5e4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
pop ebp
jmp [ LocalFree@IAT ]
sub_40c64c
mov eax [ ecx ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_40c5fa
retn
sub_40c6a5
push 0x10
call sub_40e4ff
push 0x0
push 0x0
call sub_41183f
int3
sub_40cc34
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
pop ebp
retn 0x8
pop ebp
jmp sub_40cb2e
sub_40ccc7
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec [ rw-data ]
jne r-xdata
retn
push 0x0
call sub_40cca6
and [ rw-data ] 0x0
sub_40cd59
call sub_40c0a9
mov eax [ eax + 0xc ]
retn 0x4
sub_40cd64
call sub_40c0a9
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_40cd74
call sub_40c0a9
add eax 0x2c
push eax
call [ InterlockedIncrement@IAT ]
retn
sub_40cd84
mov edi edi
push ebp
mov ebp esp
call sub_40c0a9
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x30 ] ecx
pop ebp
retn 0x4
sub_40cd98
call sub_40c0a9
mov eax [ eax + 0x30 ]
retn
sub_40ce25
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call [ GlobalFree@IAT ]
sub_40ce33
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_40d2f2
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
pop ebp
retn 0x4
call sub_40d2c5
sub_40d47e
mov eax r--data
retn
sub_40d590
call sub_40c0dc
inc [ eax + 0x10 ]
retn
sub_40d6c3
push [ ebp + 0x8 ]
call sub_401ad2
push 0x0
push 0x0
call sub_41183f
int3
sub_40d9b8
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add ecx 0x4
push ecx
call [ InterlockedIncrement@IAT ]
retn
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
retn
sub_40da29
cmp [ ecx + 0x8 ] 0x0
je r-xdata
jmp sub_40d9d3
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
retn
sub_40db8f
push 0x410
mov eax sub_4232d4
call sub_410e88
mov eax ecx
and [ ebp - 0x4 ] 0x0
add eax 0x50
push eax
call sub_40c459
call sub_410ee4
retn
sub_40dc71
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
pop ebp
retn 0x8
sub_40e2b9
mov eax r--data
retn
sub_40e360
mov eax r-xdata
retn
sub_40e424
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
push rw-data
mov [ rw-data ] 0x1
call [ InitializeCriticalSection@IAT ]
sub_40e6a8
retn 0x4
sub_40e6ab
mov eax r--data
retn
sub_40e6b1
push 0x8
call sub_401ae9
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_40e6cb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
sub_40e759
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_40e6e5
mov ecx eax
pop ebp
jmp sub_40d622
sub_40e7ba
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_40e78e
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_40eaf3
mov edi edi
push ebp
mov ebp esp
push 0x1
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40eaa2
pop ebp
retn 0xc
sub_40ed9c
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_401b18
pop ecx
mov ecx esi
test esi esi
jne r-xdata
pop esi
sub_40ede0
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
call sub_40ed9c
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn
j_sub_40ede0
jmp sub_40ede0
sub_40ee3e
mov eax rw-data
retn
sub_40ee44
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_40ee5b
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_401b18
pop ecx
retn
sub_40effd
push 0x14
call sub_401ae9
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_40ee44
sub_40f034
mov eax rw-data
retn
sub_40f03a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40fa59
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_40f051
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
call sub_40faf5
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_40f06c
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_40f083
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_401b18
pop ecx
retn
sub_40f224
push 0x14
call sub_401ae9
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_40f06c
sub_40f2b1
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_40f4a3
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_401b18
pop ecx
sub_40f600
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
and [ ebp - 0x14 ] 0x0
mov eax r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40fc37
mov ecx [ ebp - 0x14 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
push ebx
push ebx
call sub_41183f
int3
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40fc55
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_40fc6c
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_401b18
pop ecx
retn
sub_40fe96
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_413933
pop ecx
pop ecx
retn
sub_40feaa
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4111ce
mov [ ebp - 0x4 ] 0xfffffffe
push eax
call sub_4111a9
sub_40fecb
mov eax [ ebp - 0x20 ]
jmp sub_40fee3
sub_40fed0
xor eax eax
inc eax
retn
sub_40fee3
call sub_4115c1
retn
_start
call sub_414680
jmp sub_40fd6c
sub_410023
call sub_410f98
retn
sub_410029
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40ffed
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_4101c3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410138
add esp 0x14
pop ebp
retn
sub_4103c0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_414c99
call sub_410369
add esp 0x10
pop ebp
retn
sub_4103dc
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_416795
pop ecx
retn
sub_410564
push [ ebp + 0x8 ]
call sub_417620
pop ecx
retn
sub_41056e
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4104aa
add esp 0xc
pop ebp
retn
sub_41075f
push [ ebp + 0x14 ]
call sub_417620
pop ecx
retn
sub_410854
push esi
call sub_417620
pop ecx
retn
sub_4108a2
push 0x4
call sub_4187ef
pop ecx
retn
sub_4109cb
push 0x4
call sub_4187ef
pop ecx
retn
sub_410ec1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_410ed5
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40fef3
jmp sub_410ec1
sub_410ee4
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40fef3
jmp sub_410ec1
sub_410f77
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_410f4c
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_410f8f
push 0x8
call sub_4188c9
pop ecx
retn
sub_410f98
push 0x8
call sub_4187ef
pop ecx
retn
sub_41117e
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_4187ef
pop ecx
sub_411193
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_411067
add esp 0xc
pop ebp
retn
sub_4111a9
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_411067
add esp 0xc
pop ebp
retn
sub_4111bf
push 0x1
push 0x0
push 0x0
call sub_411067
add esp 0xc
retn
sub_4111ce
push 0x1
push 0x1
push 0x0
call sub_411067
add esp 0xc
retn
sub_4115c1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4119f9
push 0x4
call sub_4187ef
pop ecx
retn
sub_4132f5
push 0x4
call sub_4187ef
pop ecx
retn
sub_4133e0
push 0x4
call sub_4187ef
pop ecx
retn
sub_4133e9
mov eax sub_41b74d
mov [ rw-data ] eax
mov [ rw-data ] sub_41ae34
mov [ rw-data ] sub_41ade8
mov [ rw-data ] sub_41ae21
mov [ rw-data ] sub_41ad8a
mov [ rw-data ] eax
mov [ rw-data ] sub_41b6c5
mov [ rw-data ] sub_41ada6
mov [ rw-data ] sub_41ad08
mov [ rw-data ] sub_41ac95
retn
sub_413449
mov edi edi
push ebp
mov ebp esp
call sub_4133e9
call sub_41b7d9
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_41b770
sub_413741
push sub_4136ff
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
sub_414050
xor eax eax
inc eax
retn
sub_414125
push 0x0
call sub_4140b3
pop ecx
retn
sub_4141a0
call [ TlsAlloc@IAT ]
retn 0x4
sub_4142ef
push 0xd
call sub_4187ef
pop ecx
retn
sub_4142f8
push 0xc
call sub_4187ef
pop ecx
retn
sub_4144ae
push 0xd
call sub_4187ef
pop ecx
retn
sub_4144ba
push 0xc
call sub_4187ef
pop ecx
retn
sub_414a5f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4167fc
push 0xe
call sub_4187ef
pop ecx
retn
sub_41758d
call sub_4185aa
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_410975
pop ecx
retn
call sub_41d025
sub_417a83
push 0x1
call sub_4187ef
pop ecx
retn
sub_417b62
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_417a8c
add esp 0xc
pop ebp
retn 0x4
sub_417b95
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_41ddad
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_417bc8
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_417a8c
add esp 0xc
pop ebp
retn 0x8
sub_4183e4
push [ ebp + 0x8 ]
call sub_41e0b2
pop ecx
retn
sub_418572
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_41765c
pop ecx
pop ecx
retn
sub_4185a1
push 0x1
call sub_4187ef
pop ecx
retn
sub_4185aa
push 0x1
call sub_4184d0
pop ecx
retn
sub_418712
push [ ebp + 0x8 ]
call sub_41e0b2
pop ecx
retn
sub_4187ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4188c0
push 0xa
call sub_4187ef
pop ecx
retn
sub_4193c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_419415
mov [ ecx ] r--data
jmp sub_41e404
sub_419571
push [ ebp - 0x14 ]
call sub_4194a6
pop ecx
retn
sub_4195b5
call sub_41437a
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41437a
add eax 0x90
dec [ eax ]
sub_419658
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_419661
mov esp [ ebp - 0x18 ]
call sub_41a0b0
sub_41970e
push 0x4
mov eax sub_42342d
call sub_410e1c
call sub_41437a
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41a0e9
call sub_41a0fc
sub_4197e7
mov eax [ ebp - 0x14 ]
call sub_4195d0
retn
sub_419a5e
xor eax eax
inc eax
retn
sub_419a62
mov esp [ ebp - 0x18 ]
call sub_41a0b0
sub_419af7
xor eax eax
inc eax
retn
sub_419afb
mov esp [ ebp - 0x18 ]
call sub_41a0b0
sub_419fad
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41e3a7
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a0b0
push 0x8
push r--data
call sub_41157c
call sub_41437a
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41aaba
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41a0d0
xor eax eax
inc eax
retn
sub_41a0e9
call sub_41437a
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_41a0b0
call eax
sub_41a120
xor eax eax
inc eax
retn
sub_41a134
push sub_41a0b0
call sub_4140b3
pop ecx
mov [ rw-data ] eax
retn
sub_41a2db
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_41a30d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_41a362
push [ rw-data ]
call sub_41412e
pop ecx
retn
sub_41a4e3
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_4187ef
pop ecx
sub_41a51f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41a52e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41a53d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41a56d
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_41a584
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
push 0x8
call [ SetLastError@IAT ]
sub_41a9fb
push 0xc
push r--data
call sub_41157c
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
sub_41aa18
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41aaad
call sub_41aa4b
mov [ rw-data ] eax
xor eax eax
retn
sub_41ade8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ada6
add esp 0x10
pop ebp
retn
sub_41ae21
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41ac95
pop ecx
pop ecx
pop ebp
retn
sub_41ae34
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41ad08
pop ecx
pop ecx
pop ebp
retn
sub_41b9be
push 0x4
call sub_4187ef
pop ecx
retn
sub_41c0d7
push 0xc
call sub_4187ef
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_41c3a4
push 0xd
call sub_4187ef
pop ecx
retn
sub_41c76f
push 0xd
call sub_4187ef
pop ecx
retn
sub_41c7a8
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_41c60e
pop ecx
mov [ rw-data ] 0x1
sub_41c7c6
and [ rw-data ] 0x0
retn
sub_41c962
push [ ebp + 0x8 ]
call sub_41e0b2
pop ecx
retn
sub_41cba0
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_41cccd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41cbb6
add esp 0x10
pop ebp
retn
sub_41cd1f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41cce7
pop ecx
pop ecx
pop ebp
retn
sub_41d008
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ce9c
add esp 0x14
pop ebp
retn
sub_41d0bb
push 0x1
call sub_4187ef
pop ecx
retn
sub_41dafa
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d8cf
add esp 0x10
pop ebp
retn
sub_41dc7e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41db14
add esp 0x10
pop ebp
retn
sub_41dd81
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_41dcb8
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_41ddcc
call eax
retn
sub_41e0a9
push 0xa
call sub_4187ef
pop ecx
retn
sub_41e1ac
push 0xa
call sub_4187ef
pop ecx
retn
sub_41e26a
push 0xb
call sub_4187ef
pop ecx
retn
sub_41e34a
push [ ebp + 0x8 ]
call sub_41e0b2
pop ecx
retn
sub_41e404
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_410975
pop ecx
sub_41e41a
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41e448
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_41e45a
push 0x2
call sub_410f23
pop ecx
retn
sub_41eb4b
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41f8ad
add esp 0xc
pop ebp
retn
sub_42030a
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_420410
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_411550
sub_420426
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_411550
sub_42277c
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_4227d0
lea eax [ edx - 0x1 ]
pop ebx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
DocumentPropertiesW
jmp [ DocumentPropertiesW@IAT ]
OpenPrinterW
jmp [ OpenPrinterW@IAT ]
sub_4228d5
mov edi edi
push esi
push 0x18
mov esi ecx
push 0x0
push esi
call sub_4113e0
add esp 0xc
mov eax esi
pop esi
retn
sub_4228eb
push 0xc
push r--data
call sub_41157c
and [ ebp - 0x4 ] 0x0
push ecx
call [ InitializeCriticalSection@IAT ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_4115c1
retn
sub_422908
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_422936
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
call sub_4228d5
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov eax esi
pop esi
retn
sub_4229aa
mov eax CreateStdAccessibleObject@IAT
jmp sub_4229b4
sub_4229b4
push ecx
push edx
push eax
push __delay_import_directory_entries
call sub_4229db
pop edx
pop ecx
jmp eax
CreateStdAccessibleObject
jmp [ CreateStdAccessibleObject@IAT ]
sub_4229cb
mov eax LresultFromObject@IAT
jmp sub_4229b4
LresultFromObject
jmp [ LresultFromObject@IAT ]
sub_422c18
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_422c4d
sub_422c23
mov edi edi
push ebp
mov ebp esp
call sub_40c0a9
mov cl [ ebp + 0x8 ]
mov [ eax + 0x14 ] cl
xor eax eax
inc eax
pop ebp
retn 0x8
sub_422c3a
push 0x1
push 0x0
call sub_40cc34
call sub_40e448
jmp sub_40ccc7
sub_422cd0
push [ ebp - 0x10 ]
call sub_40c5e4
retn
sub_422cd9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422cf4
lea ecx [ ebp - 0x230 ]
jmp j_sub_402286
sub_422cff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x270 ]
xor ecx eax
call sub_40fef3
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422d27
mov ecx [ ebp - 0x10 ]
jmp sub_405293
sub_422d2f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422d4a
mov ecx [ ebp - 0x41c ]
jmp sub_405293
sub_422d55
lea ecx [ ebp - 0x418 ]
jmp sub_4011f0
sub_422d60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x424 ]
xor ecx eax
call sub_40fef3
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422d88
mov ecx [ ebp - 0x10 ]
jmp sub_4011f0
sub_422d90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422dab
mov ecx [ ebp - 0x10 ]
jmp sub_408eda
sub_422db3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422dce
lea ecx [ ebp - 0x64 ]
jmp sub_404951
sub_422dd6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_40fef3
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422dfb
lea ecx [ ebp - 0x1c ]
jmp sub_4011f0
sub_422e03
lea ecx [ ebp - 0x38 ]
jmp sub_40ce25
sub_422e0b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422e26
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422e41
lea ecx [ ebp - 0x10 ]
jmp sub_4011f0
sub_422e49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422e64
mov ecx [ ebp - 0x10 ]
jmp sub_4048e4
sub_422e6c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422e87
mov ecx [ ebp - 0x10 ]
jmp sub_404ec5
sub_422e8f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422eaa
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_4011f0
sub_422ec3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422ede
lea ecx [ ebp - 0x228 ]
jmp sub_4011f0
sub_422ee9
lea ecx [ ebp - 0x224 ]
jmp sub_4011f0
sub_422ef4
lea ecx [ ebp - 0x224 ]
jmp sub_4011f0
sub_422eff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x238 ]
xor ecx eax
call sub_40fef3
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422f27
lea ecx [ ebp - 0x220 ]
jmp sub_4011f0
sub_422f32
lea ecx [ ebp - 0x234 ]
jmp sub_4011f0
sub_422f3d
lea ecx [ ebp - 0x228 ]
jmp sub_4011f0
sub_422f48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x238 ]
xor ecx eax
call sub_40fef3
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422f70
lea ecx [ ebp - 0x14 ]
jmp sub_4071db
sub_422f78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422f93
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422fae
push [ ebp - 0x10 ]
call sub_4015b0
retn
sub_422fb7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422fd2
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call sub_40391b
retn
sub_422fde
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_422ff9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423014
lea ecx [ ebp - 0x60 ]
jmp sub_408eda
sub_42301c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423037
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423052
lea ecx [ ebp - 0x224 ]
jmp sub_4071db
sub_42305d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x258 ]
xor ecx eax
call sub_40fef3
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423085
lea ecx [ ebp - 0x14 ]
jmp j_sub_40729a
sub_42308d
lea ecx [ ebp - 0x28 ]
jmp sub_4048e4
sub_423095
lea ecx [ ebp - 0x7c ]
jmp sub_408eda
sub_42309d
lea ecx [ ebp - 0x28 ]
jmp sub_4048e4
sub_4230a5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4230c0
push [ ebp - 0x1c ]
call sub_401b18
pop ecx
retn
sub_4230ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4230e5
lea ecx [ ebp - 0x418 ]
jmp sub_4011f0
sub_4230f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_40fef3
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423118
lea ecx [ ebp + 0xb ]
jmp sub_40ac64
sub_423120
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_42313b
lea ecx [ ebp + 0xc ]
jmp sub_407f2f
sub_423143
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_42315e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423179
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_4011f0
sub_423184
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp j_sub_40cc14
sub_42318f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4231aa
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_4011f0
sub_4231b5
mov ecx [ ebp - 0x14 ]
add ecx 0x74
jmp j_sub_40cc14
sub_4231c0
push [ ebp + 0x8 ]
call sub_40c5e4
retn
sub_4231c9
push [ ebp + 0x8 ]
call sub_40c5e4
retn
sub_4231d2
push [ ebp + 0x8 ]
call sub_40c5e4
retn
sub_4231db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4231f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423211
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_42322c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423247
push rw-data
push [ ebp - 0x10 ]
call sub_402f84
pop ecx
pop ecx
retn
sub_423257
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423272
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_42328d
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp j_sub_40ede0
sub_423298
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_40d4b7
sub_4232a3
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_40d4b7
sub_4232ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4232c9
lea ecx [ ebp - 0x418 ]
jmp sub_4011f0
sub_4232d4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_40fef3
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4232fc
lea ecx [ ebp - 0x14 ]
jmp sub_4011f0
sub_423304
lea ecx [ ebp + 0x10 ]
jmp sub_4011f0
sub_42330c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423327
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4011f0
sub_423332
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_42334d
push [ ebp - 0x14 ]
call sub_4015b0
retn
sub_423356
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423371
push [ ebp + 0x8 ]
call sub_401b18
pop ecx
retn
sub_42337b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423396
lea ecx [ ebp - 0x10 ]
jmp sub_4011f0
sub_42339e
lea ecx [ ebp - 0x18 ]
jmp sub_4011f0
sub_4233a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4233c1
push [ ebp - 0x20 ]
call sub_4015b0
retn
sub_4233ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4233e5
push [ ebp - 0x18 ]
call sub_4015b0
retn
sub_4233ee
push [ ebp - 0x18 ]
call sub_4015b0
retn
sub_4233f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423412
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_42342d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423450
lea ecx [ ebp - 0x14 ]
jmp sub_4011f0
sub_423458
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40fef3
mov ecx [ edx + 0x40c ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423480
mov ecx [ ebp + 0x4 ]
jmp sub_402e8d
sub_423488
mov ecx [ ebp + 0x4 ]
add ecx 0x78
jmp sub_4038e4
sub_423493
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4234b0
mov ecx [ ebp + 0x4 ]
jmp sub_402e8d
sub_4234b8
mov ecx [ ebp + 0x4 ]
add ecx 0x78
jmp sub_4038e4
sub_4234c3
mov ecx [ ebp + 0x4 ]
add ecx 0xcc
jmp sub_4015a0
sub_4234d1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_4234f0
lea eax [ ebp - 0xe0 ]
push eax
call sub_4010c0
retn
sub_4234fd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xd8 ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_40fef3
mov eax r--data
jmp sub_410a90
sub_423520
push 0x0
mov ecx rw-data
call sub_402705
push sub_423830
mov [ rw-data ] r--data
call sub_410029
pop ecx
retn
sub_423542
push sub_42383a
call sub_410029
pop ecx
retn
sub_42354e
push sub_423845
call sub_410029
pop ecx
retn
sub_42355a
push sub_423850
call sub_410029
pop ecx
retn
sub_423566
mov ecx rw-data
jmp sub_404200
sub_423570
push 0x0
mov ecx rw-data
call sub_4040c3
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_42385b
mov [ rw-data ] r--data
mov [ rw-data ] 0xf022
call sub_410029
pop ecx
retn
sub_4235aa
push 0x0
mov ecx rw-data
call sub_4040c3
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_423866
mov [ rw-data ] r--data
mov [ rw-data ] 0xf024
call sub_410029
pop ecx
retn
sub_4235e4
push sub_423871
call sub_410029
pop ecx
retn
sub_4235f0
push r--data
call [ RegisterWindowMessageW@IAT ]
mov [ rw-data ] eax
retn
sub_4237ad
push sub_4238a3
call sub_410029
pop ecx
retn
sub_4237b9
push sub_4238ad
call sub_410029
pop ecx
retn
sub_4237c5
mov ecx rw-data
call sub_40db46
push sub_4238b7
call sub_410029
pop ecx
retn
sub_4237db
push rw-data
call sub_40c2b5
retn
sub_4237e6
push rw-data
call sub_40c2b5
retn
sub_4237f1
mov ecx rw-data
call sub_42296a
push sub_4238c1
call sub_410029
pop ecx
retn
sub_423807
push 0x900
push 0x0
call sub_422c23
push sub_422c3a
call sub_410029
pop ecx
mov [ rw-data ] al
retn
sub_423830
mov ecx rw-data
jmp sub_402870
sub_42383a
mov [ rw-data ] r--data
retn
sub_423845
mov [ rw-data ] r--data
retn
sub_423850
mov [ rw-data ] r--data
retn
sub_42385b
mov [ rw-data ] r--data
retn
sub_423866
mov [ rw-data ] r--data
retn
sub_423871
mov ecx rw-data
jmp sub_40c6b6
sub_42387b
mov ecx rw-data
jmp sub_408eda
sub_423885
mov ecx rw-data
jmp sub_408eda
sub_42388f
mov ecx rw-data
jmp sub_408eda
sub_423899
mov ecx rw-data
jmp sub_408eda
sub_4238a3
mov ecx rw-data
jmp sub_40cc14
sub_4238ad
mov ecx rw-data
jmp sub_40c6b6
sub_4238b7
mov ecx rw-data
jmp sub_40db8f
sub_4238c1
mov ecx rw-data
jmp sub_422952
