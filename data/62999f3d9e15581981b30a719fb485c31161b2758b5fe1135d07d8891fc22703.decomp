_start
pushad
mov esi rwxdata
lea edi [ esi - 0x68000 ]
mov [ edi + 0x7909c ] 0x50838e3b
push edi
or ebp 0xffffffff
jmp rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
mov eax 0x1
jb rwxdata
adc eax eax
add ebx ebx
jae rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
dec eax
add ebx ebx
jne rwxdata
jne rwxdata
adc eax eax
jmp rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
xor ecx ecx
sub eax 0x3
jb rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
jb rwxdata
add ebx ebx
jne rwxdata
add ebx ebx
jne rwxdata
shl eax 0x8
mov al [ esi ]
inc esi
xor eax 0xffffffff
je rwxdata
jb rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
pop esi
mov edi esi
mov ecx 0x3a22
sar eax 0x1
mov ebp eax
jmp rwxdata
add ebx ebx
jne rwxdata
inc ecx
add ebx ebx
jne rwxdata
mov al [ edi ]
inc edi
sub al 0xe8
cmp [ edi ] 0x14
jne rwxdata
adc ecx ecx
jmp rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
jb rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
mov eax [ edi ]
mov bl [ edi + 0x4 ]
shr ax 0x8
rol eax 0x10
xchg ah al
sub eax edi
sub bl 0xe8
add eax esi
mov [ edi ] eax
add edi 0x5
mov al bl
loop rwxdata
cmp ebp 0xfffffb00
adc ecx 0x2
lea edx [ edi + ebp ]
cmp ebp 0xfffffffc
jbe rwxdata
add ebx ebx
jne rwxdata
cmp al 0x1
ja rwxdata
lea edi [ esi + 0xd6000 ]
mov eax [ edx ]
add edx 0x4
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
ja rwxdata
mov al [ edx ]
inc edx
mov [ edi ] al
inc edi
dec ecx
jne rwxdata
adc ecx ecx
add ebx ebx
jae rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
mov ebp [ esi + 0xda984 ]
lea edi [ esi - 0x1000 ]
mov ebx 0x1000
push eax
push esp
push 0x4
push ebx
push edi
call ebp
lea eax [ edi + 0x21f ]
and [ eax ] 0x7f
and [ eax + 0x28 ] 0x7f
pop eax
push eax
push esp
push eax
push ebx
push edi
call ebp
pop eax
popad
lea eax [ esp - 0x80 ]
mov ebx [ edi + 0x4 ]
lea eax [ eax + esi + 0xda8a0 ]
add ebx esi
push eax
add edi 0x8
call [ esi + 0xda97c ]
xchg ebp eax
add edi ecx
jmp rwxdata
jmp rwxdata
jne rwxdata
push 0x0
cmp esp eax
jne rwxdata
sub esp 0xffffff80
jmp rwxdata
mov eax [ edi ]
or eax eax
je rwxdata
mov ecx edi
push edi
dec eax
[ edi ]
push ebp
call [ esi + 0xda980 ]
or eax eax
je rwxdata
add ebx ebx
jne rwxdata
add ecx 0x2
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
jae rwxdata
aaa
jg rwxdata
call [ esi + 0xda990 ]
mov [ ebx ] eax
add ebx 0x4
jmp rwxdata
pop esp
iretd
mov al [ edi ]
inc edi
or al al
je rwxdata
sbb [ edx - 0x4245abcd ] dh
and [ ebx + ecx * 2 + 0x7d ] bh
in eax dx
add ecx [ ebp + 0xbaaf082 ]
loopne rwxdata
les edx [ edi ]
inc ecx
mov edx 0x9c40ee02
loopne rwxdata
loopne rwxdata
pop es
movsb [ edi ] [ esi ]
fsub [ 0xffffffffb663a152 ]
add [ edi - 0x58 ] esp
movsd [ edi ] [ esi ]
xchg esi eax
sbb [ edx + ebx * 2 ] ebx
adc ch cl
imul cx si
xor [ esi - 0x5e ] dh
mov ch 0xd4
and dh ch
in al 0xf7
or al 0x80
popad
mov [ eax + 0x1 ] ss
lodsd [ esi ]
sub al 0x54
fsubr [ 0x296c96fd ]
rwxdata
sbb ebp [ edx + 0xb ]
mov esp 0xb189085b
xchg ebp eax
mov esp 0xfa170c6a
cmpsb [ esi ] [ edi ]
or al 0x1d
and eax 0x39541343
and ah [ 0x72e8261 ]
fsubr [ ecx + 0x5c ]
dec eax
test eax 0xdbaa9d41
or eax 0x443e7d96
retn 0xfe41
inc ebp
sub dl [ edx + 0x4c84f4e0 ]
dec edi
pushfd
int3
dec eax
dec edi
cmp [ esi ] 0x72
nop
inc ebp
insd
imul esp [ ecx - 0x3357e338 ] 0xa1b492e8
jbe rwxdata
0xf0d0
in al dx
nop
pop ebp
cwde
push eax
mov al [ 0x77dbc244 ]
mov eax [ 0x6df7b445 ]
mov al 0x18
push ebp
mov eax 0x5c4eaf7
popfd
sub al 0xdc
sbb al 0xc4
add eax ebx
adc ebp eax
xor ebp [ edi ]
jpe rwxdata
