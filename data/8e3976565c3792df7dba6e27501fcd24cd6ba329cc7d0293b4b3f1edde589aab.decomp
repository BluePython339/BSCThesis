sub_4010a3
push ebp
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
add esp 0xfffff1f0
mov eax [ ebp - 0x4 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov edx esi
push [ ebp + 0x14 ]
push rw-data
push 0x0
push 0x0
mov eax ebx
mov ecx edi
call sub_405178
sub esi 0x110
je r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ rw-data ] 0x0
je r-xdata
dec esi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
push 0x1
push 0x80
push ebx
call SendMessageA
and di 0xffff
dec di
je r-xdata
jmp r-xdata
push 0x67
push ebx
call GetDlgItem
mov esi eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call GetWindowRect
push 0x2
lea edx [ ebp - 0x14 ]
push edx
push ebx
push 0x0
call MapWindowPoints
push 0x0
push esi
call SetMenu
push 0x0
push [ rw-data ]
push 0x67
push ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub ecx edx
inc ecx
push ecx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
sub ecx eax
inc ecx
push ecx
push edx
push eax
push 0x50a10844
push rw-data
push rw-data
push 0x0
call CreateWindowExA
mov edi eax
test edi edi
jne r-xdata
push [ rw-data ]
push 0x0
push 0x172
push 0x69
push ebx
call SendDlgItemMessageA
push 0x400
lea edx [ ebp - 0x2c14 ]
push edx
push 0x65
push ebx
call GetDlgItemTextA
cmp [ rw-data ] 0x0
je r-xdata
dec di
je r-xdata
xor eax eax
push 0x203
push 0x0
push 0x0
push 0x0
push 0x0
push esi
push edi
call SetWindowPos
push esi
call DestroyWindow
mov esi edi
push 0x0
push 0x0
push 0x31
push ebx
call SendMessageA
test eax eax
je r-xdata
push 0x67
push esi
call SetMenu
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub di 0x64
jne r-xdata
push __dos_header
push 0x0
push 0x435
push esi
call SendMessageA
push 0x0
push eax
push 0x30
push esi
call SendMessageA
lea eax [ ebp - 0x414 ]
push eax
push 0x400
call GetCurrentDirectoryA
push 0x65
push ebx
call GetDlgItem
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x414 ]
push edx
push [ ebp - 0x4 ]
call SetWindowTextA
mov eax [ ebp - 0x4 ]
call sub_402cb0
mov [ rw-data ] 0x0
mov ecx rw-data
mov edx rw-data
mov eax rw-data
call sub_40ad9c
cmp [ rw-data ] 0x0
jle r-xdata
push 0x67
push ebx
call GetDlgItem
mov esi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
push 0x1
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
mov [ rw-data ] 0x2
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
xor eax eax
jmp r-xdata
mov eax 0x64
call sub_402944
mov edx eax
lea ecx [ ebp - 0x2814 ]
mov eax ebx
call sub_4051b4
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0x7
mov edx [ rw-data ]
mov eax ebx
call sub_4017cc
push esi
call SetFocus
lea eax [ ebp - 0x2c14 ]
xor ecx ecx
xor edx edx
call sub_405c94
lea eax [ ebp - 0x2c14 ]
push eax
call SetCurrentDirectoryA
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
push 0xb1
push esi
call SendMessageA
push rw-data
push 0x0
push 0xc2
push esi
call SendMessageA
cmp [ rw-data ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ rw-data ] 0x2
push 0x0
push ebx
call EndDialog
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea edx [ ebp - 0x2814 ]
push edx
push 0x65
push ebx
call SetDlgItemTextA
cmp [ rw-data ] 0x0
jle r-xdata
mov [ ebp - 0x2414 ] 0x0
mov edi 0x96
lea eax [ ebp - 0x2c14 ]
call sub_40281a
mov [ rw-data ] 0x1
xor ecx ecx
mov edx 0x66
mov eax ebx
call sub_405154
xor ecx ecx
mov edx 0x65
mov eax ebx
call sub_405154
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_405154
mov ecx 0x5
mov edx [ rw-data ]
mov eax ebx
call sub_4017cc
mov ecx 0x2
mov edx [ rw-data ]
mov eax ebx
call sub_4017cc
mov eax rw-data
call sub_40ad58
mov ecx 0x6
mov edx [ rw-data ]
mov eax ebx
call sub_4017cc
mov cl 0x1
mov edx 0x1
mov eax ebx
call sub_405154
xor edx edx
mov [ rw-data ] edx
mov eax 0x82
call sub_402944
push eax
lea edx [ ebp - 0x2c14 ]
push edx
push rw-data
lea ecx [ ebp - 0x2e14 ]
push ecx
call wsprintfA
add esp 0x10
mov eax rw-data
mov edx 0x1
call sub_4067b8
push 0x30
mov eax 0x7e
call sub_402944
push eax
lea edx [ ebp - 0x2e14 ]
push edx
push ebx
call MessageBoxA
inc [ rw-data ]
push 0x0
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
push 0x1
push ebx
call EndDialog
mov [ rw-data ] 0x1
mov eax 0x7d
call sub_402944
push eax
push 0x1
push ebx
call SetDlgItemTextA
mov eax [ rw-data ]
cmp eax 0x9
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
xor ecx ecx
mov edx [ rw-data ]
mov eax ebx
call sub_4017cc
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx rw-data
lea eax [ ebp - 0x2414 ]
call sub_406d74
mov eax edi
call sub_402944
mov edx eax
lea eax [ ebp - 0x2414 ]
call sub_406d74
inc edi
cmp edi 0x9b
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp eax 0x3
jne r-xdata
mov esi 0x83
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push [ ebp - 0x4 ]
call EnableWindow
cmp [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x2414 ]
mov ecx esi
push edx
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_403f50
mov esi 0x7f
mov esi 0x84
jmp r-xdata
push 0x30
mov eax 0x7e
call sub_402944
push eax
mov eax esi
call sub_402944
push eax
push ebx
call MessageBoxA
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ecx ecx
mov edx 0x66
mov eax ebx
call sub_405154
xor ecx ecx
mov edx 0x65
mov eax ebx
call sub_405154
mov ecx 0x1
mov edx [ rw-data ]
mov eax ebx
call sub_4017cc
push 0x0
push sub_4016b7
push ebx
push rw-data
push [ rw-data ]
call DialogBoxParamA
test eax eax
jne r-xdata
push eax
mov ecx esi
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_403f50
mov eax [ rw-data ]
call sub_4069d8
mov eax 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
push 0x1
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x7d
call sub_402944
push eax
push 0x1
push ebx
call SetDlgItemTextA
dec eax
jne r-xdata
push 0x0
push 0x1
push 0x111
push ebx
call PostMessageA
push 0x0
push 0x1
push 0x111
push ebx
call SendMessageA
jmp r-xdata
sub_4016b7
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov edx esi
push [ ebp + 0x14 ]
push rw-data
push 0x0
push 0x0
mov eax ebx
mov ecx edi
call sub_405178
sub esi 0x110
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec esi
je r-xdata
push 0x65
push ebx
call GetDlgItem
mov esi eax
push 0x10000
push 0x0
push 0x435
push esi
call SendMessageA
push 0xf
call GetSysColor
push eax
push 0x0
push 0x443
push esi
call SendMessageA
mov ecx 0x3
mov edx [ rw-data ]
mov eax ebx
call sub_4017cc
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ rw-data ]
push 0x0
push 0x172
push 0x66
push ebx
call SendDlgItemMessageA
and di 0xffff
dec di
je r-xdata
jmp r-xdata
push 0x1
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
push eax
mov ecx esi
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_403f50
mov eax [ rw-data ]
call sub_4069d8
jmp r-xdata
push 0x1
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
dec di
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax 0x1
jmp r-xdata
push 0x0
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4017cc
push ebx
push esi
push edi
push ebp
push eax
mov eax 0xc
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ esp + 0xc000 ]
add esp 0xfffff100
mov esi edx
mov edi rw-data
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
test esi esi
je r-xdata
add esp 0xcf04
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0xd ]
push ecx
push 0x1000
lea ecx [ esp + 0x1034 ]
lea edx [ esp + 0x34 ]
mov eax esi
call sub_40233b
mov esi eax
test eax eax
jne r-xdata
lea eax [ esp + 0x1028 ]
xor ebx ebx
mov edx ebx
shl edx 0xc
lea ecx [ esp + 0x2028 ]
add edx ecx
call sub_402aa4
inc ebx
cmp ebx 0x6
jl r-xdata
or ebp 0xffffffff
xor ebx ebx
inc ebx
cmp ebx 0xd
jl r-xdata
mov ebp ebx
jmp r-xdata
push [ edi + ebx * 4 ]
lea eax [ esp + 0x2c ]
push eax
call lstrcmpiA
test eax eax
jne r-xdata
cmp ebp 0xc
ja r-xdata
jmp [ ebp * 4 + jump_table_40185a ]
cmp [ esp + 0x4 ] 0x2
jne r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov cl [ esp + 0x1028 ]
sub cl 0x1
jb r-xdata
cmp [ esp + 0x4 ] 0x4
jne r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
cmp [ esp + 0x4 ] 0x3
jne r-xdata
cmp [ esp + 0x4 ] 0x5
jne r-xdata
cmp [ esp + 0x4 ] 0x6
jne r-xdata
cmp [ esp + 0x4 ] 0x7
jne r-xdata
lea eax [ esp + 0x8028 ]
push eax
push 0x400
call GetCurrentDirectoryA
lea edx [ esp + 0x8028 ]
lea eax [ esp + 0x8428 ]
call sub_406ca0
lea eax [ esp + 0x8428 ]
call sub_402998
lea edx [ esp + 0x1028 ]
lea eax [ esp + 0x8428 ]
call sub_406d74
lea eax [ esp + 0x8828 ]
call sub_405300
lea edx [ esp + 0x8428 ]
lea eax [ esp + 0x8828 ]
call sub_405354
lea eax [ esp + 0xa044 ]
call sub_405b1c
lea eax [ esp + 0xa070 ]
call sub_405b1c
lea eax [ esp + 0xa09c ]
call sub_405b1c
jmp r-xdata
cmp [ rw-data ] 0x0
sete bl
and ebx 0x1
test bl bl
jne r-xdata
lea edx [ esp + 0x1028 ]
push edx
push [ esp + 0x4 ]
call SetWindowTextA
jmp r-xdata
lea ebx [ esp + 0x1028 ]
xor eax eax
mov [ esp + 0xad04 ] 0x0
mov al [ ebx ]
cmp eax 0x22
jne r-xdata
xor eax eax
mov al [ esp + 0x1028 ]
call sub_406dd0
test eax eax
je r-xdata
xor ecx ecx
mov [ rw-data ] ecx
mov [ rw-data ] 0x1
jmp r-xdata
sub cl 0x2f
je r-xdata
lea eax [ esp + 0x1028 ]
xor edx edx
call sub_402430
jmp r-xdata
cmp [ esp + 0x4 ] 0x7
jne r-xdata
lea ecx [ esp + 0xb104 ]
push ecx
push 0x400
call GetTempPathA
lea eax [ esp + 0xb104 ]
call sub_402998
xor ebx ebx
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ esp + 0x1028 ] 0x0
je r-xdata
lea eax [ esp + 0x1028 ]
mov dl 0x1
call sub_402430
jmp r-xdata
lea ecx [ esp + 0x2028 ]
xor eax eax
mov al [ ecx ]
call sub_406a18
sub eax 0x50
je r-xdata
mov [ rw-data ] 0x1
lea edx [ esp + 0x9430 ]
lea eax [ esp + 0x8828 ]
xor ecx ecx
call sub_40538c
test al al
jne r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov edx rw-data
mov eax [ rw-data ]
call sub_406d74
mov eax ebx
call sub_406c20
cmp eax 0x400
jae r-xdata
inc ebx
mov [ rw-data ] 0x2
jmp r-xdata
xor edx edx
mov dl [ esp + 0x1028 ]
add edx 0xffffffd0
mov [ rw-data ] edx
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor edx edx
mov [ rw-data ] edx
jmp r-xdata
dec cl
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ esp + 0xb504 ]
push eax
push 0x65
push [ esp + 0x8 ]
call SetDlgItemTextA
cmp [ esp + 0x1028 ] 0x0
je r-xdata
inc ebx
jmp r-xdata
mov eax esi
call sub_402738
mov [ rw-data ] eax
lea eax [ esp + 0x1028 ]
push eax
push [ esp + 0x4 ]
call SetWindowTextA
mov [ esp + 0x1c ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
push 0x0
lea edx [ esp + 0x9434 ]
push edx
call SetFileAttributesA
cmp [ esp + 0xa040 ] 0x0
je r-xdata
lea eax [ esp + 0x8828 ]
mov edx 0x2
call sub_405324
jmp r-xdata
mov eax esi
call sub_402738
mov ebp eax
lea ebp [ esp + 0x1028 ]
jmp r-xdata
xor edx edx
mov dl [ ebx ]
cmp edx 0x2e
jne r-xdata
dec cl
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x2
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push [ rw-data ]
lea eax [ esp + 0xb10c ]
push eax
push rw-data
lea edx [ esp + 0xb514 ]
push edx
call wsprintfA
add esp 0x14
lea ecx [ esp + 0xb504 ]
push ecx
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0xc704 ] 0x0
lea edx [ esp + 0x3028 ]
lea eax [ esp + 0xbb04 ]
call sub_406ca0
xor edx edx
mov dl [ esp + 0xbb04 ]
cmp edx 0x22
jne r-xdata
mov [ esp + 0x1c ] 0xb
jmp r-xdata
dec eax
je r-xdata
lea ecx [ esp + 0x9430 ]
push ecx
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
call sub_40510c
cmp eax 0x4
je r-xdata
mov eax [ rw-data ]
call sub_406c20
xor eax eax
jmp r-xdata
test bl bl
je r-xdata
xor ecx ecx
mov cl [ ebx ]
cmp ecx 0x5c
je r-xdata
xor ecx ecx
mov cl [ ebx + 0x1 ]
cmp ecx 0x5c
jne r-xdata
mov [ rw-data ] 0x1
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
jmp r-xdata
mov [ esp + 0xb904 ] 0x0
lea eax [ esp + 0x1028 ]
mov edx 0x2c
call sub_406c30
test eax eax
jne r-xdata
lea eax [ esp + 0xbb04 ]
xor edx edx
call sub_405e1c
test al al
jne r-xdata
lea edx [ esp + 0x3028 ]
lea eax [ esp + 0xbb04 ]
inc edx
call sub_406ca0
cmp [ rw-data ] 0x0
je r-xdata
mov [ esp + 0x1c ] 0x7
jmp r-xdata
jmp r-xdata
lea eax [ esp + 0x9430 ]
push eax
call DeleteFileA
test eax eax
jne r-xdata
lea edx [ esp + 0xa4e4 ]
lea eax [ esp + 0x8028 ]
call sub_405a98
lea eax [ esp + 0xa4e4 ]
call sub_402998
lea eax [ esp + 0x8028 ]
call sub_406c20
mov ebx eax
cmp ebx 0x4
jl r-xdata
mov edx ebp
mov eax [ rw-data ]
call sub_406d74
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov [ edx ] 0x0
mov [ esp + 0xc ] eax
mov eax ebp
call sub_406c20
mov edx eax
mov eax [ rw-data ]
add edx [ esp + 0xc ]
add edx 0x5
call sub_4069f0
mov [ rw-data ] eax
test bl bl
je r-xdata
lea eax [ esp + 0xad04 ]
mov edx ebx
call sub_406ca0
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
lea edx [ ebx + 0x2 ]
lea eax [ esp + 0xad04 ]
call sub_406ca0
jmp r-xdata
cmp [ esp + 0xb904 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
lea edx [ esp + 0xbf04 ]
lea eax [ esp + 0xbb04 ]
call sub_405eb0
lea eax [ esp + 0xc304 ]
mov edx [ esp + 0x1c ]
call sub_402c74
lea eax [ esp + 0xc304 ]
call sub_402998
lea edx [ esp + 0x4028 ]
cmp [ edx ] 0x0
je r-xdata
xor ecx ecx
mov [ esp + 0x24 ] ecx
lea ebp [ esp + 0xbb04 ]
jmp r-xdata
lea eax [ esp + 0xbb05 ]
mov edx 0x22
call sub_406c30
lea edx [ esp + 0xbb05 ]
mov eax rw-data
mov ecx 0x22
call sub_406968
jmp r-xdata
mov [ esp + 0x1c ] 0x10
xor ebx ebx
lea eax [ esp + 0x1028 ]
xor edx edx
call sub_405940
test al al
jne r-xdata
lea eax [ esp + 0xa4e4 ]
call sub_406c20
cmp eax ebx
jb r-xdata
mov eax ebp
call sub_4069d8
jmp r-xdata
lea eax [ esp + 0xad04 ]
mov edx 0x22
call sub_406c48
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x1
push 0x0
push rw-data
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
cmp eax 0x3a
jne r-xdata
lea eax [ esp + 0x1028 ]
call sub_402d5c
mov [ esp + 0x1828 ] 0x0
push 0x24
lea edx [ esp + 0xb908 ]
push edx
lea ecx [ esp + 0x1030 ]
push ecx
push [ esp + 0xc ]
call MessageBoxA
cmp eax 0x6
je r-xdata
lea edx [ esp + 0x2028 ]
lea eax [ esp + 0x1028 ]
call sub_406ca0
lea edx [ esp + 0x3028 ]
lea eax [ esp + 0xb904 ]
call sub_406ca0
mov al [ esp + ebx + 0x1028 ]
test al al
jne r-xdata
lea edx [ esp + 0xc304 ]
lea eax [ esp + 0xcb04 ]
call sub_406ca0
lea edx [ esp + 0x6028 ]
cmp [ edx ] 0x0
je r-xdata
lea edx [ esp + 0x4028 ]
lea eax [ esp + 0xc304 ]
call sub_406d74
lea eax [ esp + 0xc304 ]
call sub_402998
cmp [ ebp ] 0x0
jne r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0xc704 ]
mov [ ecx ] 0x0
mov edx [ esp + 0x20 ]
inc edx
call sub_406ca0
jmp r-xdata
mov [ esp + 0x20 ] eax
cmp [ esp + 0x20 ] 0x0
je r-xdata
lea eax [ esp + 0xa904 ]
push eax
lea edx [ esp + 0x9434 ]
push edx
call MoveFileA
test eax eax
je r-xdata
inc ebx
jmp r-xdata
lea eax [ esp + 0x9430 ]
call sub_406c20
mov [ esp + eax + 0x9431 ] 0x0
lea eax [ esp + 0xa8e4 ]
mov ecx 0x1e
xor edx edx
call sub_406bc4
mov [ esp + 0xa8e8 ] 0x3
mov [ esp + 0xa8f4 ] 0x14
lea eax [ esp + 0x9430 ]
mov [ esp + 0xa8ec ] eax
lea edx [ esp + 0xa8e4 ]
push edx
call SHFileOperationA
lea edx [ esp + 0xad04 ]
mov eax rw-data
call sub_406ca0
lea eax [ esp + 0xad04 ]
call sub_402899
push 0x65
push [ esp + 0x4 ]
call GetDlgItem
mov ebx eax
lea eax [ esp + 0xad04 ]
push eax
push ebx
call SetWindowTextA
push rw-data
push 0x0
push 0x143
push ebx
call SendMessageA
lea edx [ esp + 0xad04 ]
mov eax rw-data
call sub_406ccc
test eax eax
je r-xdata
cmp [ eax + 0x1 ] 0x0
jne r-xdata
cmp [ esp + 0xad04 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x400
lea eax [ esp + 0x18 ]
push eax
lea edx [ esp + 0xad08 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push rw-data
push [ esp + 0x24 ]
call RegQueryValueExA
push [ esp + 0x10 ]
call RegCloseKey
push 0x1
mov [ rw-data ] 0x1
push [ esp + 0x4 ]
mov [ rw-data ] 0x1
call EndDialog
and eax 0xff
cmp eax 0x40
jne r-xdata
lea eax [ esp + 0x3028 ]
lea eax [ esp + 0x6028 ]
jmp r-xdata
mov dl [ ebp ]
xor eax eax
mov al dl
cmp eax 0x20
je r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
call sub_40510c
test eax eax
je r-xdata
push ebx
lea eax [ esp + 0x9434 ]
push eax
push rw-data
lea edx [ esp + 0xa910 ]
push edx
call wsprintfA
add esp 0x10
lea ecx [ esp + 0xa904 ]
push ecx
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
lea edx [ esp + 0xad04 ]
push edx
push 0x0
push 0x143
push ebx
call SendMessageA
jmp r-xdata
mov [ eax ] 0x0
lea eax [ esp + 0xad04 ]
call sub_406c20
mov ebp eax
mov eax ebx
call sub_406c20
add ebp eax
cmp ebp 0x3ff
jae r-xdata
lea eax [ esp + 0xad04 ]
call sub_406c20
xor edx edx
mov dl [ esp + eax + 0xad03 ]
cmp edx 0x5c
je r-xdata
inc ebx
lea edx [ esp + 0x1029 ]
lea eax [ esp + 0xb904 ]
add edx ebx
call sub_406ca0
mov [ esp + ebx + 0x1028 ] 0x0
jmp r-xdata
mov edx rw-data
lea eax [ esp + 0xc304 ]
call sub_406d74
mov edx rw-data
call sub_406d28
test eax eax
je r-xdata
call sub_4057f8
mov edx eax
lea eax [ esp + 0xc304 ]
call sub_406d74
lea eax [ esp + 0xc304 ]
call sub_405908
test eax eax
je r-xdata
mov ebx edx
xor edx edx
mov [ ebp ] 0x0
lea eax [ esp + 0xbb04 ]
call sub_405e1c
test al al
je r-xdata
cmp eax 0x2f
jne r-xdata
mov eax [ esp + 0x24 ]
mov [ eax ] 0x0
push 0x4
push 0x0
lea ecx [ esp + 0xa90c ]
push ecx
call MoveFileExA
lea eax [ esp + 0xad04 ]
mov edx ebx
call sub_406d74
mov edx rw-data
lea eax [ esp + 0xad04 ]
call sub_406d74
xor edx edx
lea edx [ esp + 0x7028 ]
jmp r-xdata
lea eax [ esp + 0xc304 ]
mov cl 0x1
xor edx edx
call sub_405c94
lea eax [ esp + 0x7028 ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebp ] bl
mov [ esp + 0x24 ] ebp
xor ecx ecx
mov cl bl
cmp ecx 0x2f
jne r-xdata
inc ebp
xor eax eax
lea eax [ esp + 0xc708 ]
jmp r-xdata
push edx
cmp [ esp + 0xc708 ] 0x0
je r-xdata
inc ebp
jmp r-xdata
mov [ esp + 0xc704 ] 0x2f
lea edx [ ebp + 0x1 ]
lea eax [ esp + 0xc705 ]
call sub_406ca0
jmp r-xdata
xor ecx ecx
lea ecx [ esp + 0x5030 ]
jmp r-xdata
push eax
lea edx [ esp + 0x5030 ]
cmp [ edx ] 0x0
je r-xdata
xor ecx ecx
mov cl [ ebp ]
cmp ecx 0x20
je r-xdata
mov ecx [ esp + 0x24 ]
mov [ ecx ] bl
jmp r-xdata
push 0x0
lea eax [ esp + 0xcb08 ]
push eax
push 0x1
push 0x1000
call SHChangeNotify
jmp r-xdata
lea edx [ esp + 0xc30c ]
lea eax [ esp + 0xbf0c ]
call sub_402b64
cmp [ esp + 0xcb04 ] 0x0
je r-xdata
inc ebp
lea eax [ esp + 0xc704 ]
mov edx ebp
call sub_406ca0
sub_40233b
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
test ebx ebx
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x0
xor eax eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor ecx ecx
mov [ ebp - 0x8 ] ecx
xor esi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov al [ ebx ]
xor ecx ecx
mov cl al
inc ebx
cmp ecx 0x3d
jne r-xdata
mov [ edx ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov cl al
cmp ecx 0xd
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ecx 0xd
jne r-xdata
cmp ecx 0xa
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push [ ebp - 0x8 ]
call ExpandEnvironmentStringsA
mov ecx [ ebp + 0x8 ]
dec ecx
lea edx [ ebp - 0x1008 ]
mov eax [ ebp - 0x4 ]
call sub_406cb0
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ edx + ecx - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
inc ebx
jmp r-xdata
mov [ edx ] al
inc edx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffe
cmp esi eax
jle r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x1
jmp r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
sub_402430
push ebx
push esi
push edi
add esp 0xfffff7a4
mov ebx eax
mov eax ebx
mov [ esp ] dl
lea esi [ esp + 0x4 ]
call sub_406c20
cmp eax 0x3f6
jae r-xdata
add esp 0x85c
pop edi
pop esi
pop ebx
retn
mov al [ rw-data ]
test al al
je r-xdata
mov eax esi
mov ecx 0x3c
xor edx edx
call sub_406bc4
mov [ esi ] 0x3c
xor eax eax
mov [ esi + 0x4 ] 0x5c0
mov al [ ebx ]
cmp eax 0x22
jne r-xdata
xor edx edx
mov dl al
cmp edx 0x20
je r-xdata
mov edx ebx
lea edx [ ebx + 0x1 ]
jmp r-xdata
mov edx rw-data
mov eax ebx
call sub_406d74
mov edx rw-data
mov eax ebx
call sub_406d74
mov dl [ ebx + eax ]
test dl dl
jne r-xdata
mov [ esi + 0x10 ] edx
xor eax eax
jmp r-xdata
xor ecx ecx
mov cl dl
cmp ecx 0x22
jne r-xdata
mov [ esi + 0x1c ] 0x1
mov eax [ esi + 0x10 ]
call sub_405908
mov edi eax
test edi edi
je r-xdata
xor edx edx
mov dl [ ebx + eax ]
cmp edx 0x20
je r-xdata
jmp r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_405e1c
mov [ esp + 0x1 ] al
cmp [ esp + 0x1 ] 0x0
je r-xdata
mov edx rw-data
mov eax edi
call sub_406d28
test eax eax
jne r-xdata
cmp edx 0x20
jne r-xdata
xor ecx ecx
mov cl [ ebx + eax + 0x1 ]
cmp ecx 0x2f
jne r-xdata
inc eax
cmp [ ebx + eax ] 0x0
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
lea edx [ esp + 0x40 ]
mov eax [ esi + 0x10 ]
call sub_405eb0
lea ecx [ esp + 0x40 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0xc ] rw-data
lea eax [ eax + ebx + 0x1 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
mov [ ebx + eax ] 0x0
inc eax
xor edx edx
mov dl [ ebx + eax ]
cmp edx 0x22
jne r-xdata
push esi
call ShellExecuteExA
test eax eax
setne al
and eax 0x1
test al al
jne r-xdata
cmp [ esp + 0x1 ] 0x0
jne r-xdata
mov [ ebx + eax ] 0x20
jmp r-xdata
test al al
je r-xdata
and [ esi + 0x4 ] 0xfffffbff
mov [ esi + 0x10 ] ebx
push esi
call ShellExecuteExA
test eax eax
setne al
and eax 0x1
lea eax [ esp + 0x440 ]
mov edx [ esi + 0x10 ]
call sub_406ca0
mov edx rw-data
lea eax [ esp + 0x440 ]
call sub_406d74
lea eax [ esp + 0x440 ]
xor edx edx
call sub_405e1c
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
push [ esi + 0x38 ]
call CloseHandle
test edi edi
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
mov edx rw-data
mov eax edi
call sub_406d28
test eax eax
je r-xdata
push 0x7d0
push [ esi + 0x38 ]
call WaitForInputIdle
jmp r-xdata
push 0x0
push [ rw-data ]
call ShowWindow
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
push 0x64
push [ esi + 0x38 ]
call WaitForSingleObject
cmp eax 0x102
je r-xdata
mov ecx 0x3e8
mov ecx 0xc8
jmp r-xdata
push 0x1b58
call Sleep
jmp r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x850 ]
push edx
call PeekMessageA
test ebx ebx
je r-xdata
push ecx
call Sleep
push 0x1
push [ rw-data ]
call ShowWindow
sub_4026a8
add esp 0xfffffbe0
push esp
push 0x400
call GetCurrentDirectoryA
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0x420
retn
mov eax esp
call sub_4057f8
mov ecx 0x6
mov edx [ rw-data ]
call sub_406d4c
test eax eax
jne r-xdata
push rw-data
call SetCurrentDirectoryA
mov eax esp
call sub_406c20
mov [ esp + eax + 0x1 ] 0x0
lea eax [ esp + 0x400 ]
mov ecx 0x1e
xor edx edx
call sub_406bc4
mov [ esp + 0x404 ] 0x3
mov [ esp + 0x410 ] 0x14
mov eax esp
mov [ esp + 0x408 ] eax
lea edx [ esp + 0x400 ]
push edx
call SHFileOperationA
sub_402738
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov edi eax
lea ebp [ esp + 0x4 ]
mov eax 0x10000
call sub_4069c4
mov esi eax
xor ebx ebx
mov [ esi ] 0x0
jmp r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push 0x1000
mov edx ebp
xor ecx ecx
mov eax edi
call sub_40233b
mov edi eax
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax esi
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
xor edx edx
mov dl [ ebp ]
cmp edx 0x7d
je r-xdata
xor eax eax
mov al [ ebp ]
cmp eax 0x7b
je r-xdata
mov eax ebp
call sub_406c20
add eax ebx
cmp eax 0xfffb
ja r-xdata
mov edx ebp
mov eax esi
call sub_406d74
mov eax esi
call sub_406c20
mov ebx eax
jmp r-xdata
test ebx ebx
jle r-xdata
cmp [ esp ] 0x0
jne r-xdata
xor eax eax
mov al [ esi + ebx - 0x1 ]
cmp eax 0x20
je r-xdata
mov edx rw-data
lea eax [ ebx + esi ]
call sub_406ca0
dec ebx
sub_4027e9
push ebx
mov ebx edx
mov edx eax
mov eax ebx
call sub_406ca0
xor eax eax
jmp r-xdata
cmp [ ebx + eax ] 0x0
jne r-xdata
xor edx edx
mov dl [ ebx + eax ]
cmp edx 0x3a
je r-xdata
pop ebx
retn
mov [ ebx + eax ] 0x25
cmp edx 0x5c
je r-xdata
cmp edx 0x2f
jne r-xdata
inc eax
sub_40281a
push ebx
add esp 0xfffffbf8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x408
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax rw-data
call sub_4027e9
lea ecx [ esp + 0x4 ]
push ecx
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x20006
push 0x0
push 0x0
push 0x0
push rw-data
push 0x80000001
call RegCreateKeyExA
test eax eax
jne r-xdata
mov eax ebx
call sub_406c20
inc eax
push eax
push ebx
push 0x1
push 0x0
lea edx [ esp + 0x18 ]
push edx
push [ esp + 0x14 ]
call RegSetValueExA
push [ esp ]
call RegCloseKey
sub_402899
push ebx
add esp 0xfffff7f4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x80c
pop ebx
retn
lea edx [ esp + 0xc ]
mov eax ebx
call sub_4027e9
push esp
push 0x1
push 0x0
push rw-data
push 0x80000001
call RegOpenKeyExA
test eax eax
jne r-xdata
mov [ esp + 0x4 ] 0x400
lea ecx [ esp + 0x4 ]
push ecx
lea eax [ esp + 0x410 ]
push eax
lea edx [ esp + 0x10 ]
push edx
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
push [ esp + 0x14 ]
call RegQueryValueExA
test eax eax
jne r-xdata
push [ esp ]
call RegCloseKey
lea edx [ esp + 0x40c ]
mov eax ebx
call sub_406ca0
sub_402944
push ebx
inc [ rw-data ]
mov edx [ rw-data ]
cmp edx 0x8
jl r-xdata
mov ebx [ rw-data ]
shl ebx 0x8
add ebx rw-data
mov [ ebx ] 0x0
push 0x100
push ebx
push eax
push [ rw-data ]
call LoadStringA
push 0x0
push 0x0
mov eax rw-data
mov ecx ebx
mov edx ebx
call sub_404cf0
mov eax ebx
pop ebx
retn
xor ecx ecx
mov [ rw-data ] ecx
sub_402998
push ebx
mov ebx eax
mov eax ebx
call sub_406c20
test eax eax
je r-xdata
mov edx rw-data
mov eax ebx
call sub_406d74
xor edx edx
mov dl [ ebx + eax - 0x1 ]
cmp edx 0x5c
je r-xdata
pop ebx
retn
sub_4029c0
add esp 0xffffffe4
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x10 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
add esp 0x1c
retn
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0xc ]
push edx
call GetMessageA
push esp
call TranslateMessage
push esp
call DispatchMessageA
sub_402a1c
push ebx
push esi
mov esi eax
mov eax [ rw-data ]
add esp 0xffffffcc
mov ebx edx
cmp [ eax ] 0x0
jne r-xdata
push esi
push rw-data
lea ecx [ esp + 0x8 ]
push ecx
call wsprintfA
add esp 0xc
mov [ ebx ] 0x0
push 0x14
push ebx
push rw-data
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x400
call GetNumberFormatA
add esp 0x34
pop esi
pop ebx
retn
call sub_4029fc
mov edx [ rw-data ]
mov [ edx ] al
sub_402a74
push ebx
mov ebx edx
mov ecx eax
cmp ecx 0xf4240
jbe r-xdata
test ebx ebx
jne r-xdata
shr ecx 0x8
shr ebx 0x8
cmp ecx ebx
jbe r-xdata
xor eax eax
pop ebx
retn
imul eax ecx 0x64
xor edx edx
div ebx
pop ebx
retn
mov eax 0x64
pop ebx
retn
sub_402aa4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov edi eax
test edi edi
je r-xdata
mov [ esi ] 0x0
xor eax eax
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp edi
xor ebx ebx
jmp r-xdata
mov al [ edi ]
test al al
jne r-xdata
and eax 0xff
cmp eax 0x22
jne r-xdata
mov [ esi ] 0x0
mov eax edi
xor eax eax
mov al [ edi ]
cmp eax 0x2c
jne r-xdata
xor edx edx
mov dl [ edi + 0x1 ]
cmp edx 0x22
jne r-xdata
mov dl [ edi ]
mov [ esi ] dl
inc esi
test bl bl
jne r-xdata
mov [ esp ] bl
test bl bl
je r-xdata
test bl bl
jne r-xdata
mov [ esi ] 0x0
lea eax [ edi + 0x1 ]
mov edx 0x22
call sub_406c30
test eax eax
setne cl
and ecx 0x1
xor ecx ecx
jmp r-xdata
inc edi
mov [ esi ] 0x22
inc esi
jmp r-xdata
cmp ebp edi
jne r-xdata
inc edi
xor eax eax
mov al [ edi ]
cmp eax 0x20
je r-xdata
cmp eax 0x9
je r-xdata
inc edi
mov ebx ecx
cmp bl [ esp ]
jne r-xdata
mov al [ edi + 0x2 ]
xor edx edx
mov dl al
cmp edx 0x2c
je r-xdata
mov eax edi
jmp r-xdata
test al al
je r-xdata
sub_402b64
push ebp
mov ebp esp
add esp 0xfffff9ec
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor ebx ebx
push 0x0
call OleInitialize
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push 0x1
push 0x0
push rw-data
call CoCreateInstance
test eax eax
jl r-xdata
call OleUninitialize
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x50 ]
push edi
mov eax [ ebp - 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x1c ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x44 ]
lea eax [ ebp - 0x40c ]
mov edx esi
call sub_406ca0
lea eax [ ebp - 0x40c ]
call sub_4059a8
cmp [ ebp - 0x40c ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x2c ]
lea edx [ ebp - 0xc ]
push edx
push rw-data
mov ecx [ ebp - 0x8 ]
push ecx
mov eax [ ecx ]
call [ eax ]
test eax eax
jl r-xdata
lea edx [ ebp - 0x40c ]
push edx
mov ecx [ ebp - 0x8 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x24 ]
mov ecx [ ebp - 0x8 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x104
lea edx [ ebp - 0x614 ]
push edx
push 0xffffffff
push [ ebp - 0x4 ]
push 0x0
push 0x0
call MultiByteToWideChar
push 0x1
lea ecx [ ebp - 0x614 ]
push ecx
mov eax [ ebp - 0xc ]
push eax
mov edx [ eax ]
call [ edx + 0x18 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov bl 0x1
sub_402c74
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push esp
call SHGetMalloc
lea eax [ esp + 0x4 ]
push eax
push esi
push 0x0
call SHGetSpecialFolderLocation
push ebx
push [ esp + 0x8 ]
call SHGetPathFromIDListA
push [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x14 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_402cb0
push ebx
push esi
add esp 0xffffffb0
mov ebx eax
call sub_40510c
cmp eax 0x5
jl r-xdata
add esp 0x50
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x50
lea edx [ esp + 0x4 ]
push edx
push ebx
call GetClassNameA
test eax eax
je r-xdata
push rw-data
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push rw-data
lea ecx [ esp + 0x4 ]
push ecx
call lstrcmpiA
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
setne al
and eax 0x1
mov [ rw-data ] al
push rw-data
push esi
call GetProcAddress
mov [ rw-data ] eax
push 0x10
push ebx
call [ rw-data ]
push 0x0
push rw-data
push 0x0
push ebx
call FindWindowExA
mov ebx eax
sub_402d5c
mov edx eax
jmp r-xdata
cmp [ edx ] 0x0
jne r-xdata
xor ecx ecx
mov cl [ edx ]
cmp ecx 0x5c
jne r-xdata
mov [ eax ] 0x0
retn
xor ecx ecx
mov cl [ edx ]
cmp ecx 0x5c
jne r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
cmp ecx 0x5c
jne r-xdata
mov cl [ edx ]
inc edx
mov [ eax ] cl
inc eax
xor ecx ecx
mov cl [ edx + 0x1 ]
cmp ecx 0x6e
jne r-xdata
mov [ eax ] 0x5c
inc eax
add edx 0x2
jmp r-xdata
mov [ eax ] 0xa
inc eax
add edx 0x2
jmp r-xdata
sub_402da8
push ebp
mov ebp esp
add esp 0xfffffc00
lea eax [ ebp + 0x10 ]
lea edx [ ebp - 0x400 ]
push eax
push [ ebp + 0xc ]
push edx
call wvsprintfA
lea edx [ ebp - 0x400 ]
xor eax eax
call sub_402dd8
mov esp ebp
pop ebp
retn
sub_402dd8
push ebx
push esi
push edi
add esp 0xffffffc4
mov edi edx
mov ebx eax
push 0x67
push [ rw-data ]
call GetDlgItem
mov esi eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x5f5e100
push 0x5f5e100
push 0xb1
push esi
call SendMessageA
mov [ esp ] 0x3c
mov edx esp
push edx
push 0x0
push 0x43a
push esi
call SendMessageA
mov [ esp + 0x19 ] 0x0
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
mov eax [ rw-data ]
call sub_404094
push 0x5
push esi
call ShowWindow
push 0xffffffff
push 0x0
push 0xb1
push esi
call SendMessageA
push rw-data
push 0x0
push 0xc2
push esi
call SendMessageA
mov [ rw-data ] 0x1
mov ecx esp
push ecx
push 0x1
push 0x444
push esi
call SendMessageA
push edi
push 0x0
push 0xc2
push esi
call SendMessageA
push 0x5f5e100
push 0x5f5e100
push 0xb1
push esi
call SendMessageA
test bl bl
je r-xdata
and [ esp + 0x8 ] 0xbfffffff
or [ esp + 0x8 ] 0x1
mov [ esp + 0x14 ] 0xa0
or [ esp + 0x4 ] 0x40000000
push rw-data
push 0x0
push 0xc2
push esi
call SendMessageA
add esp 0x3c
pop edi
pop esi
pop ebx
retn
or [ esp + 0x8 ] 0x40000000
and [ esp + 0x8 ] 0xfffffffe
mov eax esp
push eax
push 0x1
push 0x444
push esi
call SendMessageA
sub_402efc
push ebp
mov ebp esp
add esp 0xfffffc00
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
inc [ rw-data ]
jmp r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp + 0xc ]
lea edx [ ebp - 0x400 ]
push eax
push [ ebp + 0x8 ]
push edx
call wvsprintfA
lea edx [ ebp - 0x400 ]
mov al 0x1
call sub_402dd8
inc [ rw-data ]
sub_402f48
push ebx
mov ebx eax
test edx edx
je r-xdata
push ebx
mov eax 0x65
call sub_402944
push eax
push 0x0
call sub_402da8
add esp 0xc
push ebx
mov eax 0x66
call sub_402944
push eax
push 0x0
call sub_402da8
add esp 0xc
jmp r-xdata
call sub_4029c0
cmp [ rw-data ] 0x0
sete al
and eax 0x1
pop ebx
retn
sub_402f94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov esi ecx
mov [ rw-data ] esi
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov ebx edx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
push ebx
push sub_40309c
push [ rw-data ]
push rw-data
push [ rw-data ]
call DialogBoxParamA
mov eax 0x2
jmp r-xdata
cmp eax 0x6
ja r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_402ffd ]
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x4e
jmp r-xdata
mov [ rw-data ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x59
push 0x0
push ebx
call SetFileAttributesA
jmp r-xdata
push ebx
push sub_4033fc
push [ rw-data ]
push rw-data
push [ rw-data ]
call DialogBoxParamA
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x43
jmp r-xdata
mov [ rw-data ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x4e
push edi
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_402f94
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x52
jmp r-xdata
sub_40309c
push ebp
mov ebp esp
add esp 0xfffff670
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov edx esi
push [ ebp + 0x14 ]
push rw-data
push 0x0
push 0x0
mov eax ebx
mov ecx edi
call sub_405178
sub esi 0x110
je r-xdata
lea eax [ ebp - 0x410 ]
mov ecx 0x3ff
mov edx [ ebp + 0x14 ]
call sub_406cb0
mov [ ebp - 0x11 ] 0x0
lea eax [ ebp - 0x410 ]
mov ecx 0x400
xor edx edx
call sub_4059d8
lea eax [ ebp - 0x410 ]
push eax
push 0x65
push ebx
call SetDlgItemTextA
push 0x100
lea edx [ ebp - 0x570 ]
push 0x160
push edx
lea ecx [ ebp - 0x410 ]
push 0x0
push ecx
call SHGetFileInfoA
push 0x0
push [ ebp - 0x570 ]
push 0x170
push 0x66
push ebx
call SendDlgItemMessageA
lea eax [ ebp - 0x6b0 ]
push eax
lea edx [ ebp - 0x410 ]
push edx
call FindFirstFileA
mov esi eax
cmp eax 0xffffffff
je r-xdata
dec esi
je r-xdata
mov eax 0x1
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0x69c ]
push ecx
call FileTimeToLocalFileTime
lea eax [ ebp - 0x8c0 ]
push eax
lea edx [ ebp - 0x8 ]
push edx
call FileTimeToSystemTime
push 0x32
lea ecx [ ebp - 0x8f4 ]
push ecx
push 0x0
lea eax [ ebp - 0x8c0 ]
push eax
push 0x2
push 0x400
call GetTimeFormatA
push 0x32
lea edx [ ebp - 0x928 ]
push edx
push 0x0
lea ecx [ ebp - 0x8c0 ]
push ecx
push 0x0
push 0x400
call GetDateFormatA
lea eax [ ebp - 0x8f4 ]
lea edx [ ebp - 0x928 ]
push eax
mov eax 0x81
push edx
call sub_402944
push eax
push rw-data
lea edx [ ebp - 0x8b0 ]
push edx
call wsprintfA
add esp 0x14
lea ecx [ ebp - 0x8b0 ]
push ecx
push 0x6a
push ebx
call SetDlgItemTextA
push esi
call FindClose
test [ ebp - 0x6b0 ] 0x10
jne r-xdata
xor esi esi
and di 0xffff
movzx eax di
cmp eax 0x6e
jg r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push [ ebp - 0x570 ]
push 0x170
push 0x67
push ebx
call SendDlgItemMessageA
mov cx [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
push edx
shr eax 0x10
push ecx
push eax
call DosDateTimeToFileTime
lea edx [ ebp - 0x8c0 ]
push edx
lea ecx [ ebp - 0x10 ]
push ecx
call FileTimeToSystemTime
push 0x32
lea eax [ ebp - 0x8f4 ]
push eax
push 0x0
lea edx [ ebp - 0x8c0 ]
push edx
push 0x2
push 0x400
call GetTimeFormatA
push 0x32
lea ecx [ ebp - 0x928 ]
push ecx
push 0x0
lea eax [ ebp - 0x8c0 ]
push eax
push 0x0
push 0x400
call GetDateFormatA
lea edx [ ebp - 0x8f4 ]
lea ecx [ ebp - 0x928 ]
push edx
push ecx
mov eax 0x81
call sub_402944
push eax
push rw-data
lea edx [ ebp - 0x8b0 ]
push edx
call wsprintfA
add esp 0x14
lea ecx [ ebp - 0x8b0 ]
push ecx
push 0x6b
push ebx
call SetDlgItemTextA
test [ ebp - 0x6b0 ] 0x10
je r-xdata
lea edx [ ebp - 0x95c ]
mov eax [ ebp - 0x690 ]
call sub_402a1c
mov eax 0x80
call sub_402944
push eax
lea edx [ ebp - 0x95c ]
push edx
push rw-data
lea ecx [ ebp - 0x8b0 ]
push ecx
call wsprintfA
add esp 0x10
lea eax [ ebp - 0x8b0 ]
push eax
push 0x68
push ebx
call SetDlgItemTextA
sub eax 0x6f
je r-xdata
je r-xdata
xor eax eax
lea edx [ ebp - 0x990 ]
mov eax [ rw-data ]
call sub_402a1c
mov eax 0x80
call sub_402944
push eax
lea edx [ ebp - 0x990 ]
push edx
push rw-data
lea ecx [ ebp - 0x8b0 ]
push ecx
call wsprintfA
add esp 0x10
lea eax [ ebp - 0x8b0 ]
push eax
push 0x69
push ebx
call SetDlgItemTextA
cmp [ rw-data ] 0x0
je r-xdata
mov esi 0x3
jmp r-xdata
dec eax
je r-xdata
mov esi 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
test esi esi
je r-xdata
mov esi 0x6
dec eax
je r-xdata
mov esi 0x5
jmp r-xdata
sub eax 0x6a
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x0
push 0x171
push 0x66
push ebx
call SendDlgItemMessageA
test eax eax
je r-xdata
jmp r-xdata
mov esi 0x1
jmp r-xdata
dec eax
je r-xdata
push esi
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
push eax
call DestroyIcon
mov esi 0x2
jmp r-xdata
jmp r-xdata
sub_4033fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push esi
push rw-data
push 0x0
push 0x0
mov ecx [ ebp + 0x10 ]
mov edx edi
mov eax ebx
call sub_405178
sub edi 0x110
je r-xdata
mov edi esi
mov [ rw-data ] edi
push edi
push 0x65
push ebx
call SetDlgItemTextA
push edi
push 0x66
push ebx
call SetDlgItemTextA
mov eax 0x1
jmp r-xdata
dec edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov dx [ ebp + 0x10 ]
and dx 0xffff
dec dx
je r-xdata
jmp r-xdata
push [ rw-data ]
push 0x50
push 0xd
push 0x66
push ebx
call SendDlgItemMessageA
push 0x1
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
dec dx
je r-xdata
xor eax eax
push 0x0
push ebx
call EndDialog
mov eax 0x1
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4034a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi [ rw-data ]
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
call IsWindowVisible
test eax eax
jne r-xdata
mov edx rw-data
mov eax ebx
call sub_406ca0
jmp r-xdata
push edi
push r-xdata
push esi
push rw-data
push [ rw-data ]
call DialogBoxParamA
test eax eax
je r-xdata
xor esi esi
cmp [ ebx ] 0x0
setne al
and eax 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ ebx ] 0x0
mov [ rw-data ] 0x1
sub_40351c
push ebx
mov ebx edx
xor edx edx
mov ecx eax
mov eax ecx
push edx
xor edx edx
push eax
mov eax ebx
push edx
push eax
call sub_403534
pop ebx
retn
sub_403534
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
pop edx
call sub_402a74
push eax
push 0x402
push 0x68
push [ rw-data ]
call SendDlgItemMessageA
pop ebp
retn 0x10
sub_403560
push ebp
mov ebp esp
add esp 0xfffff004
push eax
push ebx
cmp [ rw-data ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
call GetLastError
mov ebx eax
lea eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x1000 ]
push [ ebp + 0xc ]
push edx
call wvsprintfA
lea ecx [ ebp - 0x1000 ]
push ecx
push rw-data
call sub_402efc
add esp 0x8
test ebx ebx
je r-xdata
push ebx
call SetLastError
sub_4035bc
push ebp
mov ebp esp
add esp 0xffffffc4
mov eax rw-data
push ebx
mov ebx rw-data
push esi
call sub_406910
call GetCommandLineA
mov esi eax
test esi esi
je r-xdata
test esi esi
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x22
jne r-xdata
push 0x400
push rw-data
push 0x0
call GetModuleFileNameA
push rw-data
push rw-data
call SetEnvironmentVariableA
push 0x0
call GetModuleHandleA
mov ebx eax
mov [ rw-data ] eax
push 0x64
push ebx
call LoadIconA
mov [ rw-data ] eax
push 0x65
push [ rw-data ]
call LoadBitmapA
mov [ rw-data ] eax
lea eax [ ebp - 0xc ]
call sub_405238
mov edx rw-data
mov eax rw-data
call sub_40499c
lea eax [ ebp - 0x24 ]
call sub_403f04
lea eax [ ebp - 0x3c ]
call sub_403f04
push 0x0
push sub_4010a3
lea edx [ ebp - 0x24 ]
push 0x0
mov [ rw-data ] edx
lea ecx [ ebp - 0x3c ]
push rw-data
push ebx
mov [ rw-data ] ecx
call DialogBoxParamA
xor eax eax
mov [ rw-data ] eax
xor edx edx
mov [ rw-data ] edx
mov [ rw-data ] edx
cmp [ rw-data ] 0x0
jne r-xdata
mov edx rw-data
mov eax esi
call sub_406c74
mov esi eax
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov edx 0x22
call sub_406c30
mov esi eax
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_403f28
lea eax [ ebp - 0x24 ]
mov edx 0x2
call sub_403f28
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4052ac
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
xor esi esi
jmp r-xdata
mov eax ebx
mov edx esi
call sub_406ca0
mov eax rw-data
mov ecx 0x80
xor edx edx
call sub_406bc4
cmp [ rw-data ] 0x0
jle r-xdata
call sub_4026a8
mov ecx 0x4
mov edx [ rw-data ]
xor eax eax
call sub_4017cc
mov dl [ ebx + eax ]
test dl dl
jne r-xdata
push [ rw-data ]
call DeleteObject
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4069d8
xor ecx ecx
mov cl dl
cmp ecx 0x20
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call DeleteObject
cmp ecx 0x22
jne r-xdata
mov [ ebp - 0x1 ] 0x1
mov [ ebx ] 0x0
mov [ rw-data ] 0x2
push [ rw-data ]
call ExitProcess
cmp [ rw-data ] 0x0
je r-xdata
test esi 0x1
jne r-xdata
inc esi
mov eax rw-data
mov edx 0xff
call sub_4067b8
inc eax
xor edx edx
mov dl [ ebx + eax ]
cmp edx 0x2d
jne r-xdata
xor ecx ecx
mov cl [ ebx + eax ]
cmp ecx 0x2f
jne r-xdata
test eax eax
je r-xdata
xor edx edx
mov dl [ ebx + eax + 0x1 ]
cmp edx 0x73
je r-xdata
xor edx edx
mov dl [ ebx + eax - 0x1 ]
cmp edx 0x20
je r-xdata
mov dl [ ebx + eax + 0x2 ]
test dl dl
je r-xdata
cmp edx 0x53
jne r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov cl dl
cmp ecx 0x20
jne r-xdata
sub_40382c
push ebx
mov [ rw-data ] 0x1
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
xor edx edx
mov [ rw-data ] edx
mov [ rw-data ] 0x1
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax 0x7d
call sub_402944
push eax
push 0x1
push ebx
call SetDlgItemTextA
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
push eax
call ShowWindow
cmp [ rw-data ] 0x0
jne r-xdata
pop ebx
retn
call sub_4026a8
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4029c0
push 0x0
push 0x1
push 0x111
push [ rw-data ]
call SendMessageA
jmp r-xdata
sub_4038c0
push ebx
mov ebx eax
mov eax rw-data
mov edx rw-data
mov [ ebx ] eax
lea eax [ ebx + 0x4 ]
mov [ ebx ] edx
mov edx rw-data
mov [ eax ] edx
mov ecx rw-data
mov [ eax ] ecx
mov edx rw-data
mov [ eax ] edx
lea eax [ ebx + 0x8 ]
mov ecx rw-data
mov edx rw-data
mov [ eax ] ecx
mov [ eax ] edx
mov ecx rw-data
mov edx rw-data
mov [ eax ] ecx
mov [ eax ] edx
lea eax [ ebx + 0xc ]
mov ecx rw-data
mov edx rw-data
mov [ eax ] ecx
mov [ eax ] edx
mov eax rw-data
mov [ ebx ] eax
mov ecx rw-data
mov [ ebx + 0x4 ] ecx
mov eax rw-data
mov [ ebx + 0x8 ] eax
mov edx rw-data
mov [ ebx + 0xc ] edx
xor ecx ecx
mov [ ebx + 0x10 ] 0x1
mov [ ebx + 0x14 ] ecx
xor eax eax
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x1c ]
xor edx edx
mov ecx 0x10
call sub_406bc4
mov eax ebx
pop ebx
retn
sub_40395c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax rw-data
mov edx rw-data
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov ecx rw-data
mov eax rw-data
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
test esi 0x1
je r-xdata
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
xor ecx ecx
mov [ ebx + 0x18 ] ecx
push ebx
call sub_406de4
pop ecx
sub_4039ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov edx rw-data
mov ecx 0x10
mov eax [ ebp - 0x4 ]
call sub_406bf0
test eax eax
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov [ ebp - 0x8 ] ebx
mov edx rw-data
mov ecx 0x10
mov eax [ ebp - 0x8 ]
call sub_406bf0
test eax eax
jne r-xdata
mov [ edi ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0xc ] ebx
mov edx rw-data
mov ecx 0x10
mov eax [ ebp - 0xc ]
call sub_406bf0
test eax eax
jne r-xdata
lea edx [ esi + 0x4 ]
mov [ edi ] edx
jmp r-xdata
push esi
mov edx [ esi ]
call [ edx + 0x4 ]
xor eax eax
mov [ ebp - 0x10 ] ebx
mov edx rw-data
mov ecx 0x10
mov eax [ ebp - 0x10 ]
call sub_406bf0
test eax eax
jne r-xdata
lea eax [ esi + 0x8 ]
mov [ edi ] eax
jmp r-xdata
mov [ ebp - 0x14 ] ebx
mov edx rw-data
mov ecx 0x10
mov eax [ ebp - 0x14 ]
call sub_406bf0
test eax eax
jne r-xdata
lea edx [ esi + 0xc ]
mov [ edi ] edx
jmp r-xdata
xor eax eax
mov [ edi ] eax
mov eax 0x80004002
jmp r-xdata
mov [ edi ] esi
jmp r-xdata
sub_403b00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push [ ebx + 0x14 ]
call IsWindow
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
xor eax eax
mov eax 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_403b5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x14 ]
lea eax [ edi + 0x8 ]
mov [ edx ] eax
xor eax eax
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x10 ]
mov [ ecx ] eax
push edx
push [ edi + 0x14 ]
call GetClientRect
xor ecx ecx
xor eax eax
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ebx + 0xc ] ecx
push ebx
push [ ebp + 0x18 ]
call CopyRect
mov [ esi ] 0x14
xor eax eax
mov [ esi + 0x4 ] eax
xor ecx ecx
mov edx [ edi + 0x14 ]
xor eax eax
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] eax
mov edx [ ebp + 0xc ]
mov ecx [ edx ]
push ecx
mov eax [ ecx ]
call [ eax + 0x4 ]
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_403cd4
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
push edx
call CLSIDFromString
lea edx [ ebx + 0x18 ]
push edx
push rw-data
push 0x5
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
call CoCreateInstance
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
add esp 0x18
pop ebx
retn
push esp
push rw-data
push eax
mov edx [ eax ]
call [ edx ]
test eax eax
jl r-xdata
push ebx
mov ecx [ esp + 0x4 ]
push ecx
mov eax [ ecx ]
call [ eax + 0xc ]
mov edx [ esp ]
push edx
mov ecx [ edx ]
call [ ecx + 0x8 ]
lea eax [ esp + 0x4 ]
push eax
push rw-data
mov edx [ ebx + 0x18 ]
push edx
mov ecx [ edx ]
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx [ esp + 0x4 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
sub_403d58
push ebx
mov ebx eax
add esp 0xfffffff8
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
push rw-data
push eax
mov edx [ eax ]
call [ edx ]
test eax eax
jl r-xdata
lea ecx [ esp + 0x4 ]
push ecx
push rw-data
mov eax [ ebx + 0x18 ]
push eax
mov edx [ eax ]
call [ edx ]
test eax eax
jl r-xdata
push 0x1
mov ecx [ esp + 0x4 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
push 0x0
mov edx [ esp + 0x4 ]
push edx
mov ecx [ edx ]
call [ ecx + 0xc ]
mov eax [ esp ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx [ ebx + 0x18 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
xor edx edx
mov [ ebx + 0x18 ] edx
mov ecx [ esp + 0x4 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x18 ]
mov edx [ esp + 0x4 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
sub_403de0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov [ ebx + 0x20 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x28 ] edx
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
lea edx [ ebp - 0x4 ]
push edx
push rw-data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
jl r-xdata
lea eax [ ebx + 0x1c ]
push eax
push eax
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
sub_403e30
push ebx
mov ebx eax
push esi
push ecx
mov eax [ ebx + 0x18 ]
mov esi edx
test eax eax
je r-xdata
pop edx
pop esi
pop ebx
retn
push esp
push rw-data
push eax
mov edx [ eax ]
call [ edx ]
test eax eax
jl r-xdata
test esi esi
je r-xdata
push 0x0
push [ ebx + 0x14 ]
push 0x0
push ebx
push 0x0
push 0xfffffffd
mov edx [ esp + 0x18 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x2c ]
lea esi [ ebx + 0x1c ]
push esi
push [ ebx + 0x14 ]
push 0x0
push ebx
push 0x0
push 0xfffffffb
mov eax [ esp + 0x18 ]
push eax
mov edx [ eax ]
call [ edx + 0x2c ]
push esi
push [ ebx + 0x14 ]
push 0x0
push ebx
push 0x0
push 0xffffffff
mov ecx [ esp + 0x18 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x2c ]
jmp r-xdata
mov eax [ esp ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
sub_403ea4
push ebx
mov ebx eax
push ecx
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
pop edx
pop ebx
retn
test edx edx
je r-xdata
push esp
push rw-data
push eax
mov edx [ eax ]
call [ edx ]
test eax eax
jl r-xdata
lea ecx [ ebx + 0x1c ]
push ecx
push [ ebx + 0x14 ]
push 0x0
push ebx
push 0x0
push 0xfffffffc
mov eax [ esp + 0x18 ]
push eax
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx [ esp ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
sub_403ee8
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
push eax
mov edx [ eax ]
call [ edx + 0x4 ]
mov eax [ ebx + 0x18 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_403f04
xor edx edx
xor ecx ecx
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
xor edx edx
xor ecx ecx
mov [ eax + 0x8 ] edx
xor edx edx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] 0x0
mov [ eax + 0x16 ] 0x0
retn
sub_403f28
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
test esi 0x1
je r-xdata
call OleUninitialize
push ebx
call sub_406de4
pop ecx
sub_403f50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push esi
push edi
cmp [ ebx + 0x14 ] 0x0
mov edi edx
mov esi ecx
jne r-xdata
mov [ ebx + 0x15 ] 0x0
push 0x0
push esi
call ShowWindow
mov edx edi
mov eax ebx
call sub_4040ac
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
mov [ ebx + 0x10 ] ecx
push eax
push esi
call GetWindowRect
push 0x2
lea edx [ ebp - 0x10 ]
push edx
push esi
call GetParent
push eax
push 0x0
call MapWindowPoints
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push 0x0
call OleInitialize
call InitCommonControls
mov [ ebx + 0x14 ] 0x1
push ebx
push [ ebx ]
push 0x0
push esi
call GetParent
push eax
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
push ecx
push [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
inc eax
push eax
push 0x40000000
push 0x0
push rw-data
push 0x0
call CreateWindowExA
mov edi eax
mov [ ebx + 0x4 ] edi
test edi edi
je r-xdata
push eax
call DestroyWindow
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
push 0x5
push edi
call ShowWindow
push [ ebx + 0x4 ]
call UpdateWindow
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push 0x5
push esi
call ShowWindow
mov eax [ ebp + 0x8 ]
call sub_406c20
add eax eax
lea eax [ eax + eax * 2 ]
add eax 0x100
call sub_4069c4
mov edi eax
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_406ca0
mov edx edi
mov eax ebx
call sub_4046e8
test al al
jne r-xdata
push eax
call DestroyWindow
xor edx edx
mov [ ebx + 0x4 ] edx
mov edx edi
mov eax ebx
call sub_404560
mov ebx eax
mov eax edi
call sub_4069d8
test ebx ebx
je r-xdata
mov edx edi
mov eax ebx
call sub_404720
push ebx
push esi
call SetWindowTextA
mov eax ebx
call sub_4069d8
sub_4040ac
push ebx
push esi
push edi
add esp 0xffffffd0
mov edi esp
mov ebx eax
xor eax eax
mov esi edx
mov [ edi ] 0x30
xor edx edx
mov [ edi + 0x4 ] 0x828
mov [ edi + 0x8 ] sub_404114
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] edx
mov [ edi + 0x14 ] esi
xor ecx ecx
mov [ edi + 0x18 ] ecx
push 0x7f00
push 0x0
call LoadCursorA
mov [ edi + 0x1c ] eax
xor eax eax
mov [ edi + 0x20 ] 0x6
mov [ edi + 0x24 ] eax
xor edx edx
mov [ edi + 0x28 ] rw-data
mov [ edi + 0x2c ] edx
push edi
call RegisterClassExA
mov [ ebx ] esi
add esp 0x30
pop edi
pop esi
pop ebx
retn
sub_404114
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax esi
dec eax
je r-xdata
push 0xffffffeb
push ebx
call GetWindowLongA
mov edx ebx
call sub_404198
jmp r-xdata
dec eax
je r-xdata
push edi
push [ ebp + 0x10 ]
push esi
push ebx
call DefWindowProcA
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push 0xffffffeb
push ebx
call GetWindowLongA
call sub_404254
jmp r-xdata
sub eax 0x3
je r-xdata
push 0xffffffeb
push ebx
call GetWindowLongA
mov ecx edi
mov edx edi
shr ecx 0x10
movzx ecx cx
and dx 0xffff
movzx edx dx
call sub_404288
sub eax 0x7c
jne r-xdata
mov eax edi
mov eax [ eax ]
push eax
push 0xffffffeb
push ebx
call SetWindowLongA
jmp r-xdata
sub_404198
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
call sub_40510c
cmp [ ebx + 0x16 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test eax eax
jle r-xdata
mov [ ebx + 0x4 ] ebp
push 0x2c
call sub_406df4
pop ecx
mov esi eax
test eax eax
je r-xdata
cmp eax 0x5
jl r-xdata
mov edi esi
mov eax esi
call sub_4038c0
mov edi eax
jmp r-xdata
mov edx ebp
mov eax edi
call sub_403ddc
mov edx rw-data
mov eax [ ebx + 0x8 ]
call sub_403cd4
mov edx 0x1
mov eax [ ebx + 0x8 ]
call sub_403e30
mov edx 0x1
mov eax [ ebx + 0x8 ]
call sub_403ea4
mov eax [ ebx + 0x8 ]
call sub_403ee8
mov esi eax
test esi esi
je r-xdata
mov [ ebx + 0x8 ] edi
test edi edi
je r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_40436c
lea eax [ ebx + 0xc ]
push eax
push rw-data
push esi
mov edx [ esi ]
call [ edx ]
test eax eax
jl r-xdata
push esi
mov edx [ esi ]
call [ edx + 0x8 ]
push 0x1
mov ecx [ ebx + 0xc ]
push ecx
mov eax [ ecx ]
call [ eax + 0xe8 ]
sub_404254
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
xor ecx ecx
mov [ ebx + 0xc ] ecx
pop ebx
retn
call sub_403d58
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ edx ]
call [ ecx + 0x8 ]
xor eax eax
mov [ ebx + 0x8 ] eax
sub_4042a0
push ebx
push esi
push edi
add esp 0xffffffdc
mov edi edx
mov esi eax
xor eax eax
mov [ esp ] eax
xor edx edx
mov [ esp + 0x4 ] edx
call GetTickCount
mov ebx eax
jmp r-xdata
push esp
push esi
mov edx [ esi ]
call [ edx + 0x48 ]
test eax eax
jl r-xdata
call GetTickCount
sub eax ebx
cmp eax 0x2710
ja r-xdata
cmp [ esp ] 0x0
je r-xdata
xor ebx ebx
cmp [ esp ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x18 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
add esp 0x24
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
push rw-data
mov edx [ esp + 0x8 ]
push edx
mov ecx [ edx ]
call [ ecx ]
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
push edx
call GetMessageA
lea ecx [ esp + 0x8 ]
push ecx
call TranslateMessage
lea eax [ esp + 0x8 ]
push eax
call DispatchMessageA
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
push edi
mov ecx [ esp + 0x8 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x14 ]
test eax eax
setge bl
and ebx 0x1
sub_40436c
push ebx
push esi
push edi
push ebp
add esp 0xffffff50
mov edi eax
mov [ esp ] edx
cmp [ edi + 0xc ] 0x0
je r-xdata
add esp 0xb0
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp + 0x4 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
mov edx [ edi + 0xc ]
push edx
mov ecx [ edx ]
call [ ecx + 0x2c ]
mov edx [ esp ]
mov eax edi
call sub_4046e8
mov [ esp + 0x8 ] al
push [ esp ]
call lstrlenA
mov ebp eax
add ebp ebp
lea ebp [ ebp + ebp * 2 ]
add ebp 0x100
push ebp
push 0x40
call GlobalAlloc
mov [ esp + 0xc ] eax
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
mov [ esp + 0x1c ] 0x94
lea eax [ esp + 0x1c ]
push eax
call GetVersionExA
cmp [ esp + 0x2c ] 0x1
jne r-xdata
mov ecx 0x1
mov edx [ esp + 0x28 ]
and edx 0xffff
cmp edx 0x7ce
jae r-xdata
mov ebx [ esp ]
jmp r-xdata
mov edx rw-data
mov eax esi
call sub_406d74
mov eax esi
call sub_406c20
add eax esi
mov [ esp + 0x14 ] eax
mov edx rw-data
mov eax esi
call sub_406d74
xor ecx ecx
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp eax 0x20
je r-xdata
mov [ esp + 0x10 ] cl
mov edx rw-data
mov eax esi
call sub_406ca0
cmp [ esp + 0x10 ] 0x0
je r-xdata
inc ebx
mov edx rw-data
mov ecx 0x6
mov eax ebx
call sub_406d4c
test eax eax
sete dl
and edx 0x1
mov [ esp + 0x18 ] dl
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov edx [ esp ]
lea edx [ ebx + 0x6 ]
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx rw-data
mov eax esi
call sub_406d74
mov eax [ esp + 0xc ]
call sub_406d74
cmp [ esp + 0x18 ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_404720
lea ecx [ esp + 0x4 ]
push ecx
push 0x1
push [ esp + 0x14 ]
call CreateStreamOnHGlobal
test eax eax
jl r-xdata
mov eax ebp
add eax eax
call sub_4069c4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ edi + 0xc ]
mov edx [ esp + 0x4 ]
call sub_4042a0
mov [ edi + 0x15 ] al
mov ecx [ esp + 0x4 ]
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
push ebp
push ebx
push 0xffffffff
push esi
push 0x0
push 0x0
call MultiByteToWideChar
test eax eax
lea edx [ esi + 0x3 ]
setne al
and eax 0x1
mov [ esp + 0x19 ] al
push 0x0
push 0x0
push ebp
push edx
push 0xffffffff
push ebx
push 0x0
push 0xfde9
call WideCharToMultiByte
test eax eax
jne r-xdata
mov eax ebx
call sub_4069d8
cmp [ esp + 0x19 ] 0x0
je r-xdata
mov [ esp + 0x19 ] 0x0
mov edx [ esp + 0x14 ]
mov [ edx ] 0x5f
mov [ esi ] 0xef
mov [ esi + 0x1 ] 0xbb
mov [ esi + 0x2 ] 0xbf
jmp r-xdata
sub_404560
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi edx
mov ebx eax
mov eax edi
call sub_406c20
inc eax
call sub_4069c4
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_4046e8
mov ebx eax
mov esi [ esp ]
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ edi ]
test al al
je r-xdata
mov eax [ esp ]
mov edx rw-data
mov ecx 0x4
mov eax edi
call sub_406d4c
test eax eax
sete al
and eax 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor ecx ecx
mov cl al
cmp ecx 0x3c
jne r-xdata
mov [ esi ] 0xd
inc esi
mov [ esi ] 0xa
inc esi
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov edx rw-data
mov ecx 0x4
mov eax edi
call sub_406d4c
test eax eax
jne r-xdata
test bl bl
je r-xdata
mov [ esi ] 0x0
mov edx rw-data
mov ecx 0x7
mov eax edi
call sub_406d4c
test eax eax
jne r-xdata
mov [ esi ] 0xd
inc esi
mov [ esi ] 0xa
inc esi
xor edx edx
test bl bl
je r-xdata
xor eax eax
mov al [ edi ]
cmp eax 0xd
je r-xdata
mov al [ edi ]
test al al
je r-xdata
jmp r-xdata
test dl dl
jne r-xdata
xor eax eax
mov al [ edi ]
cmp eax 0x26
jne r-xdata
cmp esi [ esp ]
je r-xdata
cmp eax 0xa
jne r-xdata
xor ecx ecx
mov cl [ edi ]
cmp ecx 0x3e
jne r-xdata
xor edx edx
mov dl al
cmp edx 0x3e
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] 0x20
inc esi
xor edx edx
mov dl [ esi - 0x1 ]
cmp edx 0x20
je r-xdata
inc edi
inc edi
mov edx rw-data
mov eax edi
inc edi
mov ecx 0x8
call sub_406d4c
test eax eax
jne r-xdata
jmp r-xdata
mov al [ edi ]
xor ecx ecx
mov cl al
cmp ecx 0x20
jne r-xdata
cmp eax 0x14
jge r-xdata
inc edi
jmp r-xdata
add edi 0x7
jmp r-xdata
mov [ esi ] al
inc esi
cmp esi [ esp ]
je r-xdata
cmp [ edi + eax ] 0x0
jne r-xdata
xor edx edx
mov dl [ esi - 0x1 ]
cmp edx 0x20
je r-xdata
xor ecx ecx
mov cl [ edi + eax ]
cmp ecx 0x3b
jne r-xdata
inc edi
inc eax
lea edx [ eax + 0x1 ]
add edi edx
mov dl 0x1
sub_4046e8
jmp r-xdata
cmp [ edx ] 0x0
jne r-xdata
xor eax eax
mov al [ edx ]
cmp eax 0x3c
jne r-xdata
xor eax eax
retn
inc edx
xor ecx ecx
mov cl [ edx + 0x1 ]
cmp ecx 0x2f
jne r-xdata
mov eax 0x2
inc eax
cmp eax 0x14
jl r-xdata
mov al 0x1
retn
xor ecx ecx
mov cl [ edx + eax ]
cmp ecx 0x3e
jne r-xdata
sub_404720
push ebx
push esi
push edi
push ebp
mov ebp edx
mov eax ebp
call sub_406c20
add eax eax
lea eax [ eax + eax * 2 ]
add eax 0x100
call sub_4069c4
mov edi eax
test edi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx rw-data
mov eax edi
call sub_406ca0
mov eax edi
call sub_406c20
mov esi eax
mov ebx ebp
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov edx rw-data
mov ecx 0x4
mov eax ebx
call sub_406cf4
test eax eax
jne r-xdata
mov [ edi + esi ] 0x0
lea ecx [ esi + 0x1 ]
mov edx edi
mov eax ebp
call sub_406bd8
mov eax edi
call sub_4069d8
cmp ebp ebx
jae r-xdata
jmp r-xdata
mov cl [ ebx ]
mov [ edi + esi ] cl
inc esi
xor edx edx
mov dl [ ebx ]
cmp edx 0x20
jne r-xdata
xor ecx ecx
mov cl [ ebx + 0x2 ]
cmp ecx 0xd
jne r-xdata
xor ecx ecx
mov cl [ ebx - 0x1 ]
cmp ecx 0x20
jne r-xdata
inc ebx
jmp r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
cmp eax 0xa
je r-xdata
mov edx rw-data
lea eax [ esi + edi ]
call sub_406ca0
add esi 0x6
jmp r-xdata
inc ebx
mov edx rw-data
lea eax [ esi + edi ]
call sub_406ca0
add esi 0x4
add ebx 0x2
sub_404978
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push [ ebx ]
call sub_406de4
test esi 0x1
pop ecx
je r-xdata
push ebx
call sub_406de4
pop ecx
sub_4049b0
push ebx
push esi
push edi
push ebp
push eax
mov eax 0x3
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ esp + 0x3000 ]
add esp 0xffffffd8
mov ebx edx
mov esi eax
lea ebp [ esp + 0x102c ]
mov edx 0x5c
mov eax ebx
call sub_406c30
test eax eax
jne r-xdata
lea eax [ esp + 0xc ]
mov edx ebx
call sub_406ca0
push 0x400
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
call GetModuleFileNameA
lea eax [ esp + 0xc ]
mov edx 0x5c
call sub_406c48
test eax eax
je r-xdata
mov [ esp ] 0xffffffff
xor ecx ecx
mov [ esp + 0x4 ] ecx
jmp r-xdata
lea eax [ esp + 0x40c ]
mov edx 0x2
call sub_4060e8
jmp r-xdata
add esp 0x302c
pop ebp
pop edi
pop esi
pop ebx
retn
inc eax
mov edx ebx
call sub_406ca0
jmp r-xdata
cmp [ esp + 0x4 ] 0x40
jge r-xdata
lea eax [ esp + 0x40c ]
call sub_406094
push 0x1
push 0x0
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x414 ]
xor ecx ecx
call sub_406130
test al al
jne r-xdata
cmp [ esp ] 0xffffffff
jne r-xdata
cmp [ esp ] 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x10000
mov eax [ esp ]
cdq
push edx
push eax
lea eax [ esp + 0x414 ]
xor edx edx
call sub_406494
mov eax [ esi + 0x4 ]
add eax 0x400
call sub_4069c4
mov [ esi ] eax
test eax eax
jne r-xdata
lea eax [ esp + 0x40c ]
mov edx 0x2
call sub_4060e8
jmp r-xdata
lea eax [ esp + 0x40c ]
call sub_40654c
mov [ esp + 0x8 ] eax
mov edx ebp
lea eax [ esp + 0x40c ]
mov ecx 0x2000
call sub_406330
mov edi eax
cmp edi 0x10
jl r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
mov [ ecx + eax ] 0x0
lea eax [ esp + 0x40c ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
call sub_406330
mov [ esi + 0x4 ] eax
xor edi edi
xor edx edx
jmp r-xdata
lea eax [ esp + 0x40c ]
mov edx 0x2
call sub_4060e8
jmp r-xdata
xor ebx ebx
jmp r-xdata
cmp edi [ esi + 0x4 ]
jl r-xdata
lea ecx [ edi - 0x10 ]
cmp ebx ecx
jle r-xdata
mov eax edi
mov ecx [ esi ]
inc edi
movzx eax [ ecx + eax ]
test eax eax
je r-xdata
mov eax [ esi ]
mov [ eax + edx ] 0x0
mov [ esi + 0x4 ] edx
lea eax [ esp + 0x40c ]
mov edx 0x2
call sub_4060e8
xor eax eax
mov al [ ebp + ebx ]
cmp eax 0x2a
jne r-xdata
mov eax [ esp + 0x8 ]
add eax edi
add eax 0xfffffff0
cdq
push edx
push eax
lea eax [ esp + 0x414 ]
xor edx edx
call sub_406494
inc [ esp + 0x4 ]
cmp eax 0x5c
jne r-xdata
xor eax eax
mov al [ ebp + ebx ]
cmp eax 0x52
jne r-xdata
xor edx edx
mov dl [ ebp + ebx + 0x1 ]
cmp edx 0x2a
jne r-xdata
cmp eax 0xd
je r-xdata
mov cl 0x1
mov ebx [ esi ]
movzx ebx [ ebx + edi ]
cmp ebx 0x6e
jg r-xdata
inc ebx
xor edx edx
mov dl [ ebp + ebx + 0x1 ]
cmp edx 0x61
jne r-xdata
mov edx rw-data
lea eax [ ebp + 0x2 ]
add eax ebx
mov ecx 0xb
call sub_406cf4
test eax eax
jne r-xdata
mov eax 0xc
cmp eax 0xa
jne r-xdata
sub ebx 0x72
je r-xdata
je r-xdata
mov edx rw-data
lea eax [ ebp + 0x2 ]
add eax ebx
mov ecx 0x4
call sub_406cf4
test eax eax
jne r-xdata
add ebx [ esp + 0x8 ]
mov [ esp ] ebx
jmp r-xdata
mov ecx [ esi ]
mov [ ecx + edx ] al
inc edx
mov ebx [ esi ]
mov [ ebx + edx ] 0xd
jmp r-xdata
sub ebx 0x2
je r-xdata
mov ebx [ esi ]
mov [ ebx + edx ] 0xa
jmp r-xdata
sub ebx 0x22
je r-xdata
lea eax [ esp + 0x40c ]
mov edx 0x2
call sub_4060e8
jmp r-xdata
test cl cl
je r-xdata
mov ebx [ esi ]
mov [ ebx + edx ] 0x9
jmp r-xdata
jmp r-xdata
mov ebx [ esi ]
mov [ ebx + edx ] 0x22
jmp r-xdata
sub ebx 0x3a
je r-xdata
inc edi
inc edx
jmp r-xdata
xor ecx ecx
mov ebx [ esi ]
mov [ ebx + edx ] 0x5c
jmp r-xdata
jmp r-xdata
sub_404c90
push ebx
add esp 0xfffffc00
mov ebx eax
push 0x0
call GetModuleHandleA
push 0x5
push rw-data
push eax
call FindResourceA
test eax eax
je r-xdata
push 0x1
push rw-data
lea ecx [ esp + 0x8 ]
mov edx rw-data
mov eax ebx
call sub_404cf0
mov edx rw-data
mov eax esp
call sub_406ccc
test eax eax
sete cl
and ecx 0x1
mov [ ebx + 0x10 ] cl
mov [ ebx + 0x10 ] 0x1
jmp r-xdata
add esp 0x400
pop ebx
retn
sub_404cf0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi eax
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
cmp [ esi ] 0x0
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x1
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_406ca0
mov eax rw-data
jmp r-xdata
je r-xdata
mov ecx 0x1
mov edx eax
or eax 0xffffffff
call sub_405fac
cmp [ ebp + 0x8 ] 0x0
mov ebx eax
je r-xdata
mov eax rw-data
jmp r-xdata
dec edx
je r-xdata
mov eax edi
call sub_406c20
mov ecx eax
mov edx edi
mov eax ebx
call sub_405fac
xor eax 0xffffffff
lea edx [ ebp - 0x10 ]
mov ebx eax
push ebx
push rw-data
push edx
call sub_406db0
add esp 0xc
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_404e04
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_406c20
mov ecx eax
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_405fac
mov ebx eax
mov eax rw-data
jmp r-xdata
lea esi [ ebx + 0xa ]
mov edx 0xc
mov eax esi
call sub_406c30
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_404e08
mov ebx eax
test eax eax
je r-xdata
mov ebx 0xff
mov ebx eax
sub ebx esi
inc ebx
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_406cb0
mov eax [ ebp - 0x4 ]
mov [ eax + ebx ] 0x0
mov edx 0x22
mov eax [ ebp - 0x4 ]
call sub_406c48
test eax eax
je r-xdata
sub_404e08
push ebx
push esi
mov esi edx
mov ebx [ eax ]
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov al [ esi ]
cmp al [ ebx ]
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov al [ ebx ]
test al al
je r-xdata
lea edx [ esi + 0x1 ]
lea eax [ ebx + 0x1 ]
mov ecx 0x7
call sub_406cf4
test eax eax
jne r-xdata
xor ecx ecx
mov cl [ ebx ]
cmp ecx 0xc
je r-xdata
xor edx edx
mov dl al
cmp edx 0xc
jne r-xdata
xor edx edx
mov dl [ ebx + 0x8 ]
cmp edx 0x3d
jne r-xdata
inc ebx
inc ebx
jmp r-xdata
xor eax eax
mov al [ ebx + 0x9 ]
cmp eax 0x22
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_404e6c
push ebp
mov ebp esp
add esp 0xfffff7ac
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov esi edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0xc ]
call sub_405068
mov ebx eax
lea eax [ ebp - 0x34 ]
push eax
push esi
call GetWindowRect
lea edx [ ebp - 0x44 ]
push edx
push esi
call GetClientRect
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
inc ecx
sub ecx [ ebp - 0x3c ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x30 ]
inc eax
sub eax [ ebp - 0x38 ]
test bl bl
mov [ ebp - 0x18 ] eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x8
call GetSystemMetrics
sub [ ebp - 0x18 ] eax
push 0x5
push esi
call GetWindow
mov edi eax
mov [ ebp - 0x1c ] edi
xor esi esi
jmp r-xdata
push 0x400
lea eax [ ebp - 0x444 ]
push eax
push esi
call GetWindowTextA
push 0x1
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x444 ]
lea edx [ ebp - 0x444 ]
mov eax [ ebp - 0x4 ]
call sub_404cf0
lea edx [ ebp - 0x444 ]
push edx
push esi
call SetWindowTextA
mov eax [ ebp - 0x3c ]
mov ecx 0x64
imul [ ebp - 0xc ]
cdq
idiv ecx
mov ecx eax
mov eax [ ebp - 0x38 ]
imul [ ebp - 0x10 ]
cdq
mov edi 0x64
idiv edi
add ecx [ ebp - 0x14 ]
add eax [ ebp - 0x18 ]
push 0x206
push eax
push ecx
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi 0x200
jl r-xdata
push 0x400
lea eax [ ebp - 0x844 ]
push eax
push edi
call GetWindowTextA
cmp [ ebp - 0x844 ] 0x0
je r-xdata
test bl bl
je r-xdata
push 0x1
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x844 ]
lea edx [ ebp - 0x844 ]
mov eax [ ebp - 0x4 ]
call sub_404cf0
lea edx [ ebp - 0x844 ]
push edx
push edi
call SetWindowTextA
push 0x2
push edi
call GetWindow
mov edi eax
cmp edi [ ebp - 0x1c ]
je r-xdata
lea ecx [ ebp - 0x854 ]
push ecx
push edi
call GetWindowRect
mov eax [ ebp - 0x854 ]
sub eax [ ebp - 0x34 ]
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
inc esi
sub eax edx
mov ecx 0x64
imul [ ebp - 0xc ]
cdq
idiv ecx
mov ecx eax
mov eax [ ebp - 0x850 ]
sub eax [ ebp - 0x30 ]
sub eax [ ebp - 0x18 ]
imul [ ebp - 0x10 ]
cdq
push ecx
mov ecx 0x64
idiv ecx
pop ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x84c ]
sub eax [ ebp - 0x854 ]
inc eax
imul [ ebp - 0xc ]
cdq
push ecx
mov ecx 0x64
idiv ecx
pop ecx
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x848 ]
sub eax [ ebp - 0x850 ]
inc eax
imul [ ebp - 0x10 ]
cdq
push ecx
mov ecx 0x64
idiv ecx
pop ecx
push 0x204
push eax
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push ecx
push 0x0
push edi
call SetWindowPos
adc edx 0x0
sub_405068
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi [ ebp + 0x8 ]
push 0x1
push [ ebp - 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x204 ]
mov edx rw-data
call sub_404cf0
lea eax [ ebp - 0x204 ]
mov edx 0x2a
call sub_406c30
mov edi eax
test edi edi
je r-xdata
mov edx 0x64
mov [ esi ] edx
mov [ ebx ] edx
lea eax [ ebp - 0x204 ]
call sub_406e04
mov [ ebx ] eax
lea eax [ edi + 0x1 ]
call sub_406e04
mov [ esi ] eax
jmp r-xdata
mov eax 0x1
cmp [ esi ] 0x64
jne r-xdata
cmp [ ebx ] 0x64
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4050e8
push ebx
mov ebx edx
cmp [ eax + 0x10 ] 0x0
je r-xdata
pop ebx
retn
push 0xffffffec
push ebx
call GetWindowLongA
or eax __dos_header
push eax
push 0xffffffec
push ebx
call SetWindowLongA
sub_40510c
add esp 0xffffff6c
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov [ esp ] 0x94
push esp
call GetVersionExA
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] edx
xor eax eax
mov eax [ rw-data ]
jmp r-xdata
add esp 0x94
retn
sub_405154
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] cl
xor eax eax
mov al [ esp ]
mov esi edx
push eax
push esi
push ebx
call GetDlgItem
push eax
call EnableWindow
pop edx
pop esi
pop ebx
retn
sub_405178
push ebp
mov ebp esp
sub edx 0x30
je r-xdata
mov edx rw-data
xchg edx eax
call sub_4050e8
jmp r-xdata
sub edx 0xe0
je r-xdata
pop ebp
retn 0x10
test [ ebp + 0x8 ] 0x1
setne cl
mov edx rw-data
and ecx 0x1
xchg edx eax
push ecx
mov ecx [ ebp + 0x10 ]
call sub_404e6c
jmp r-xdata
sub_4051b4
push ebx
push esi
push edi
add esp 0xfffffed8
mov edi ecx
mov esi edx
mov ebx eax
push esp
call SHGetMalloc
test eax eax
je r-xdata
mov [ esp + 0x4 ] ebx
xor edx edx
mov [ esp + 0x8 ] edx
lea ecx [ esp + 0x24 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] 0x41
xor eax eax
mov [ esp + 0x18 ] eax
xor edx edx
mov [ esp + 0x1c ] edx
lea ecx [ esp + 0x4 ]
push ecx
call SHBrowseForFolderA
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
push edi
push ebx
call SHGetPathFromIDListA
mov esi eax
push ebx
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x14 ]
test esi esi
setne al
and eax 0x1
xor eax eax
jmp r-xdata
add esp 0x128
pop edi
pop esi
pop ebx
retn
sub_405238
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
xor eax eax
mov [ ebx + 0x4 ] eax
mov [ ebx ] eax
push rw-data
call LoadLibraryA
mov [ ebx ] eax
push rw-data
call LoadLibraryA
mov [ ebx + 0x4 ] eax
call InitCommonControls
mov [ esp ] 0x8
mov [ esp + 0x4 ] 0x7ff
push rw-data
call LoadLibraryA
mov esi eax
test esi esi
je r-xdata
push rw-data
call SHGetMalloc
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push rw-data
push esi
call GetProcAddress
test eax eax
je r-xdata
push esi
call FreeLibrary
push esp
call eax
sub_4052ac
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
mov edx [ rw-data ]
push edx
mov ecx [ edx ]
call [ ecx + 0x8 ]
test esi 0x1
je r-xdata
push eax
call FreeLibrary
push ebx
call sub_406de4
pop ecx
sub_405324
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0xc04 ]
cmp eax 0xffffffff
je r-xdata
test esi 0x1
je r-xdata
push eax
call FindClose
push ebx
call sub_406de4
pop ecx
sub_405354
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_406ca0
cmp [ ebx + 0x400 ] 0x0
jne r-xdata
mov [ ebx + 0xc00 ] 0x1
pop esi
pop ebx
retn
lea edx [ ebx + 0x400 ]
mov ecx 0x10000000
mov eax esi
call sub_406850
sub_40538c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0x10b0 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx + 0xc00 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push esi
lea ecx [ ebx + 0x400 ]
mov edx ebx
mov eax [ ebx + 0xc04 ]
call sub_405444
cmp eax 0xffffffff
jne r-xdata
push esi
lea ecx [ ebx + 0x400 ]
mov edx ebx
or eax 0xffffffff
call sub_405444
mov [ ebx + 0xc04 ] eax
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0xc08 ]
call sub_405e5c
mov [ esi + 0xc10 ] al
xor edx edx
mov [ ebx + 0xc00 ] edx
mov eax esi
call sub_4057f8
mov edi eax
mov edx rw-data
mov eax edi
call sub_406ccc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_40538c
jmp r-xdata
mov edx rw-data
mov eax edi
call sub_406ccc
test eax eax
jne r-xdata
mov al 0x1
sub_405444
push ebp
mov ebp esp
add esp 0xfffff06c
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
call sub_40510c
test eax eax
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0xe54 ]
mov ecx 0x10000000
mov eax [ ebp - 0x4 ]
call sub_40682c
cmp [ edi ] 0x0
je r-xdata
lea edx [ ebp - 0x804 ]
mov ecx 0x10000000
mov eax edi
call sub_406850
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
lea edx [ ebp - 0xf94 ]
push edx
push esi
call FindNextFileA
test eax eax
jne r-xdata
lea eax [ ebp - 0xf94 ]
push eax
lea edx [ ebp - 0xe54 ]
push edx
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0xe54 ]
mov edx edi
call sub_406ca0
jmp r-xdata
lea edx [ ebp - 0xa54 ]
push edx
push esi
call FindNextFileW
test eax eax
jne r-xdata
lea eax [ ebp - 0xa54 ]
push eax
lea edx [ ebp - 0x804 ]
push edx
call FindFirstFileW
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x804 ]
mov edx [ ebp - 0x4 ]
call sub_406888
jmp r-xdata
cmp esi 0xffffffff
je r-xdata
or esi 0xffffffff
call GetLastError
cmp eax 0x12
setne al
and eax 0x1
mov [ ebx + 0x10b0 ] al
call GetLastError
cmp eax 0x2
je r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp esi 0xffffffff
je r-xdata
or esi 0xffffffff
call GetLastError
cmp eax 0x12
setne al
and eax 0x1
mov [ ebx + 0x10b0 ] al
call GetLastError
cmp eax 0x2
je r-xdata
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xe54 ]
mov eax ebx
call sub_406ca0
mov eax ebx
call sub_4057f8
lea edx [ ebp - 0xf68 ]
call sub_406ca0
lea edx [ ebx + 0x400 ]
mov ecx 0x10000000
mov eax ebx
call sub_406850
mov eax [ ebp - 0xf78 ]
xor edx edx
mov edx eax
xor eax eax
push edx
push eax
mov eax [ ebp - 0xf74 ]
xor edx edx
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ ebx + 0xc00 ] eax
mov [ ebx + 0xc04 ] edx
mov ecx [ ebp - 0xf94 ]
mov [ ebx + 0xc08 ] ecx
lea edx [ ebp - 0xe64 ]
lea eax [ ebx + 0xc98 ]
call sub_406ca0
mov ecx [ ebp - 0xf90 ]
lea edi [ ebx + 0xc14 ]
mov [ ebx + 0x1098 ] ecx
mov ecx [ ebp - 0xf8c ]
mov [ ebx + 0x109c ] ecx
mov eax [ ebp - 0xf88 ]
mov [ ebx + 0x10a0 ] eax
mov eax [ ebp - 0xf84 ]
mov [ ebx + 0x10a4 ] eax
mov eax edi
mov edx [ ebp - 0xf80 ]
mov [ ebx + 0x10a8 ] edx
mov edx [ ebp - 0xf7c ]
mov [ ebx + 0x10ac ] edx
lea edx [ ebp - 0xf80 ]
call sub_405b24
lea edx [ ebp - 0xf90 ]
lea eax [ ebx + 0xc40 ]
call sub_405b24
lea edx [ ebp - 0xf88 ]
lea eax [ ebx + 0xc6c ]
call sub_405b24
mov eax edi
call sub_405bd0
mov [ ebx + 0xc0c ] eax
mov eax ebx
call sub_405f30
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea edx [ ebp - 0x804 ]
lea edi [ ebx + 0x400 ]
mov eax edi
call sub_406888
mov eax edi
call sub_405884
lea edx [ ebp - 0xa28 ]
call sub_406888
mov eax edi
mov ecx 0x10000000
mov edx ebx
call sub_40682c
mov eax [ ebp - 0xa38 ]
xor edx edx
mov edx eax
xor eax eax
push edx
push eax
mov eax [ ebp - 0xa34 ]
xor edx edx
add eax [ esp ]
adc edx [ esp + 0x4 ]
mov [ ebx + 0xc00 ] eax
mov [ ebx + 0xc04 ] edx
lea edx [ ebx + 0xc98 ]
mov ecx [ ebp - 0xa54 ]
lea eax [ ebp - 0x820 ]
mov [ ebx + 0xc08 ] ecx
mov ecx 0x10000000
add esp 0x8
call sub_40682c
mov eax [ ebp - 0xa50 ]
mov [ ebx + 0x1098 ] eax
mov eax [ ebp - 0xa4c ]
mov [ ebx + 0x109c ] eax
lea eax [ ebx + 0xc14 ]
mov edx [ ebp - 0xa48 ]
mov [ ebx + 0x10a0 ] edx
mov edx [ ebp - 0xa44 ]
mov [ ebx + 0x10a4 ] edx
lea edx [ ebp - 0xa40 ]
mov ecx [ ebp - 0xa40 ]
mov [ ebx + 0x10a8 ] ecx
mov ecx [ ebp - 0xa3c ]
mov [ ebx + 0x10ac ] ecx
call sub_405b24
lea edx [ ebp - 0xa50 ]
lea eax [ ebx + 0xc40 ]
call sub_405b24
lea edx [ ebp - 0xa48 ]
lea eax [ ebx + 0xc6c ]
call sub_405b24
lea eax [ ebx + 0xc14 ]
call sub_405bd0
mov [ ebx + 0xc0c ] eax
mov eax edi
call sub_405f50
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
je r-xdata
mov [ ebx + 0x400 ] 0x0
mov [ ebx + 0x10b0 ] al
jmp r-xdata
mov eax 0x1
mov [ ebx + 0x400 ] 0x0
jmp r-xdata
mov [ ebx + 0x10b0 ] al
jmp r-xdata
cmp eax 0x12
jne r-xdata
mov eax 0x1
sub_4057f8
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov ebx edi
jmp r-xdata
mov al [ ebx ]
test al al
jne r-xdata
and eax 0xff
call sub_405988
test al al
je r-xdata
test ebp ebp
je r-xdata
mov esi ebx
cmp [ rw-data ] 0x0
je r-xdata
lea ebp [ ebx + 0x1 ]
cmp [ edi ] 0x0
je r-xdata
mov eax ebp
jmp r-xdata
lea eax [ esi + 0x1 ]
mov eax rw-data
mov edx esi
call sub_406954
jmp r-xdata
mov eax edi
xor eax eax
mov al [ edi + 0x1 ]
call sub_40599c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx eax
mov ebx edi
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1 ]
mov eax rw-data
mov edx ebx
call sub_406954
jmp r-xdata
lea eax [ edi + 0x2 ]
jmp r-xdata
lea edx [ edi + 0x1 ]
cmp eax edx
jne r-xdata
sub_405884
push ebx
push esi
mov esi eax
mov eax esi
call sub_406874
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
cmp [ esi ] 0x0
je r-xdata
movzx eax [ esi + ebx * 2 ]
call sub_405988
test al al
je r-xdata
mov eax esi
movzx eax [ esi + 0x2 ]
call sub_40599c
test al al
je r-xdata
dec ebx
test ebx ebx
jge r-xdata
lea eax [ ebx + 0x1 ]
add eax eax
add eax esi
pop esi
pop ebx
retn
lea eax [ esi + 0x4 ]
jmp r-xdata
pop esi
pop ebx
retn
sub_4058d0
push ebx
push esi
push edi
mov ebx eax
mov edi eax
mov edi ebx
mov esi ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
jmp r-xdata
lea eax [ esi + 0x1 ]
mov eax rw-data
mov edx esi
call sub_406954
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
jne r-xdata
mov ebx eax
jmp r-xdata
sub_405908
push ebx
push esi
mov esi eax
mov eax esi
call sub_4057f8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x2e
mov eax ebx
call sub_406c48
mov eax rw-data
mov ecx 0x2e
mov edx ebx
call sub_406994
jmp r-xdata
pop esi
pop ebx
retn
sub_405940
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov edx rw-data
mov eax esi
call sub_406c74
test eax eax
setne al
and eax 0x1
xor eax eax
jmp r-xdata
mov edx rw-data
mov eax ebx
call sub_4068d4
test eax eax
setne al
and eax 0x1
pop esi
pop ebx
retn
pop esi
pop ebx
retn
sub_4059a8
push ebx
push esi
mov esi eax
mov eax esi
call sub_4057f8
mov ebx eax
lea eax [ esi + 0x2 ]
cmp ebx eax
jb r-xdata
mov [ ebx ] 0x0
pop esi
pop ebx
retn
xor eax eax
mov al [ esi + 0x1 ]
call sub_40599c
test al al
je r-xdata
dec ebx
add esi 0x4
cmp ebx esi
jb r-xdata
sub_4059d8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
test esi esi
je r-xdata
mov ebx ebp
jmp r-xdata
cmp ebp esi
je r-xdata
mov al [ ebx ]
test al al
jne r-xdata
mov eax ebp
call sub_406c20
cmp ebx eax
ja r-xdata
and eax 0xff
cmp eax 0x2f
jne r-xdata
test esi esi
jne r-xdata
mov edx ebp
mov eax esi
call sub_406ca0
mov [ esi ] 0x0
mov eax esi
jmp r-xdata
mov edi ebx
cmp [ rw-data ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax esi
mov eax ebp
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1 ]
mov eax rw-data
mov edx edi
call sub_406954
jmp r-xdata
mov edx ebx
sub edx ebp
mov [ esi + edx ] 0x5c
mov [ ebx ] 0x5c
jmp r-xdata
mov ebx eax
sub_405a58
push ebx
push esi
push edi
mov esi eax
xor eax eax
mov al [ esi ]
call sub_406a18
mov ebx eax
mov edi ebx
and edi 0xff
cmp edi 0x41
jl r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x5a
jg r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esi + 0x1 ]
call sub_40599c
test al al
jne r-xdata
mov eax 0x1
sub_405a98
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov [ edi ] 0x0
mov eax ebx
call sub_405a58
test al al
je r-xdata
xor ecx ecx
mov cl [ ebx ]
cmp ecx 0x5c
jne r-xdata
xor edx edx
mov dl [ ebx ]
push edx
push rw-data
push edi
call sub_406db0
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x1 ]
cmp eax 0x5c
jne r-xdata
lea eax [ ebx + 0x2 ]
mov edx 0x5c
call sub_406c30
mov esi eax
test esi esi
je r-xdata
lea eax [ esi + 0x1 ]
mov edx 0x5c
call sub_406c30
mov esi eax
test eax eax
je r-xdata
mov eax ebx
call sub_406c20
mov esi eax
sub esi ebx
inc esi
jmp r-xdata
mov ecx esi
mov edx ebx
mov eax edi
call sub_406cb0
mov [ edi + esi ] 0x0
sub_405b24
push ebx
add esp 0xffffffe0
mov ebx eax
push esp
push edx
call FileTimeToLocalFileTime
lea eax [ esp + 0x10 ]
push eax
lea edx [ esp + 0x4 ]
push edx
call FileTimeToSystemTime
movzx ecx [ esp + 0x10 ]
mov [ ebx ] ecx
movzx eax [ esp + 0x12 ]
mov [ ebx + 0x4 ] eax
movzx edx [ esp + 0x16 ]
mov [ ebx + 0x8 ] edx
movzx ecx [ esp + 0x18 ]
mov [ ebx + 0xc ] ecx
movzx eax [ esp + 0x1a ]
mov [ ebx + 0x10 ] eax
movzx edx [ esp + 0x1c ]
mov [ ebx + 0x14 ] edx
movzx ecx [ esp + 0x14 ]
mov [ ebx + 0x1c ] ecx
mov eax [ ebx + 0x8 ]
dec eax
mov [ ebx + 0x20 ] eax
mov eax 0x1
jmp r-xdata
cmp eax [ ebx + 0x4 ]
jb r-xdata
mov edx [ eax * 4 + rw-data ]
add [ ebx + 0x20 ] edx
inc eax
cmp [ ebx + 0x4 ] 0x2
jbe r-xdata
mov [ esp + 0x1e ] 0x0
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x14 ]
push ecx
call SystemTimeToFileTime
mov eax [ esp ]
sub eax [ esp + 0x8 ]
mov [ ebx + 0x18 ] eax
mov eax ebx
add esp 0x20
pop ebx
retn
mov eax [ ebx ]
call sub_405c04
test al al
je r-xdata
inc [ ebx + 0x20 ]
sub_405bd0
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x10 ]
shl ecx 0x5
shr edx 0x1
or edx ecx
mov ecx [ eax + 0xc ]
shl ecx 0xb
or edx ecx
mov ecx [ eax + 0x8 ]
shl ecx 0x10
or edx ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
shl ecx 0x15
sub eax 0x7bc
shl eax 0x19
or edx ecx
or edx eax
mov eax edx
retn
sub_405c04
push ebx
mov ecx eax
test cl 0x3
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ecx
mov ebx 0x64
cdq
idiv ebx
test edx edx
jne r-xdata
pop ebx
retn
mov eax 0x1
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
test edx edx
je r-xdata
sub_405c34
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
call sub_40510c
test eax eax
je r-xdata
push 0x0
push esi
call CreateDirectoryA
test ebx ebx
je r-xdata
call GetLastError
cmp eax 0x2
je r-xdata
mov ecx edi
mov edx ebx
mov eax esi
call sub_405e70
xor eax eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
cmp eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push ebx
call CreateDirectoryW
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
sub_405c94
push ebx
push esi
push edi
push ebp
add esp 0xfffff3e8
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov [ esp + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx [ esp ]
cmp [ edx ] 0x0
je r-xdata
mov [ esp + 0xc ] 0x0
mov edi ebp
xor esi esi
call sub_406870
test al al
jne r-xdata
mov [ esp + 0xc ] 0x1
mov eax edi
sub eax ebp
cmp eax 0x400
jge r-xdata
mov ebx 0x1
test bl bl
jne r-xdata
cmp esi 0x400
jge r-xdata
cmp [ edi ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov edx [ esp ]
cmp [ edx + esi * 2 ] 0x0
je r-xdata
test bl bl
je r-xdata
test bl bl
jne r-xdata
mov ecx [ esp ]
cmp [ ecx + esi * 2 ] 0x5c
je r-xdata
add esp 0xc18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4058d0
movzx eax [ eax ]
call sub_405988
test al al
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
xor eax eax
mov al [ edi ]
cmp eax 0x5c
jne r-xdata
xor edx edx
test bl bl
mov [ esp + 0x10 ] edx
je r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp ]
mov eax ebp
call sub_405c34
inc esi
jmp r-xdata
mov [ esp + 0x14 ] edi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x18 ]
mov ecx esi
mov edx [ esp ]
call sub_4068a0
mov [ esp + esi * 2 + 0x18 ] 0x0
lea eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
mov eax rw-data
mov edx [ esp + 0x14 ]
call sub_406954
jmp r-xdata
mov ecx edi
sub ecx ebp
lea eax [ esp + 0x818 ]
mov edx ebp
call sub_406cb0
mov ecx edi
sub ecx ebp
mov [ esp + ecx + 0x818 ] 0x0
lea edx [ esp + 0x818 ]
mov ecx 0x10000000
mov eax [ esp + 0x10 ]
call sub_40682c
jmp r-xdata
mov edi eax
lea eax [ esp + 0x818 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
call sub_405c34
test eax eax
sub_405e1c
push ebx
push esi
mov ebx edx
mov esi eax
call sub_40510c
test eax eax
je r-xdata
push esi
call GetFileAttributesA
cmp eax 0xffffffff
setne al
and eax 0x1
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
push ebx
call GetFileAttributesW
cmp eax 0xffffffff
setne al
and eax 0x1
pop esi
pop ebx
retn
sub_405e70
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
call sub_40510c
test eax eax
je r-xdata
push esi
push edi
call SetFileAttributesA
test eax eax
setne al
and eax 0x1
test ebx ebx
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
push esi
push ebx
call SetFileAttributesW
test eax eax
setne al
and eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_405eb0
push ebx
push esi
add esp 0xfffffbfc
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x400
push ebx
call GetFullPathNameA
test eax eax
je r-xdata
cmp esi ebx
je r-xdata
lea edx [ esp + 0x4 ]
mov eax esi
call sub_406ca0
jmp r-xdata
add esp 0x404
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_406ca0
sub_405ef4
push ebx
push esi
mov ebx edx
mov esi eax
call sub_40510c
test eax eax
je r-xdata
push esi
call DeleteFileA
test eax eax
setne al
and eax 0x1
test ebx ebx
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
push ebx
call DeleteFileW
test eax eax
setne al
and eax 0x1
jmp r-xdata
pop esi
pop ebx
retn
sub_405f30
xor edx edx
jmp r-xdata
cmp [ eax + edx ] 0x0
jne r-xdata
mov cl [ eax + edx ]
cmp cl 0x20
jb r-xdata
mov al 0x1
retn
xor eax eax
retn
cmp cl 0x7f
jbe r-xdata
inc edx
sub_405f50
xor edx edx
jmp r-xdata
cmp [ eax + edx * 2 ] 0x0
jne r-xdata
mov cx [ eax + edx * 2 ]
cmp cx 0x20
jb r-xdata
mov al 0x1
retn
xor eax eax
retn
cmp cx 0x7f
jbe r-xdata
inc edx
sub_405f74
push ebx
xor ecx ecx
mov ebx eax
shr ebx 0x1
mov ebx eax
shr ebx 0x1
xor ebx 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov [ ecx * 4 + rw-data ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
mov eax ebx
inc edx
cmp edx 0x8
jl r-xdata
mov eax ecx
xor edx edx
pop ebx
retn
sub_405fac
push ebx
push esi
push edi
mov edi rw-data
push ebp
mov ebp edx
cmp [ edi + 0x4 ] 0x0
mov esi ecx
mov ebx eax
jne r-xdata
mov eax ebp
jmp r-xdata
call sub_405f74
test esi esi
jbe r-xdata
cmp esi 0x8
jb r-xdata
test al 0x7
jne r-xdata
xor edx edx
jmp r-xdata
xor ebx [ eax ]
xor ecx ecx
mov cl bl
sub esi 0x8
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
xor ecx ecx
mov ebx edx
mov cl bl
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
xor ecx ecx
mov ebx edx
mov cl bl
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
xor ecx ecx
mov ebx edx
mov cl bl
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
xor ecx ecx
mov ebx edx
xor ebx [ eax + 0x4 ]
add eax 0x8
mov cl bl
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
xor ecx ecx
mov ebx edx
mov cl bl
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
xor ecx ecx
mov ebx edx
mov cl bl
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
xor ecx ecx
mov ebx edx
mov cl bl
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
cmp esi 0x8
mov ebx edx
jae r-xdata
mov edx ebx
xor ecx ecx
xor dl [ eax ]
dec esi
mov cl dl
shr ebx 0x8
mov edx [ edi + ecx * 4 ]
xor edx ebx
inc eax
mov ebx edx
cmp esi edx
ja r-xdata
mov ecx ebx
xor cl [ eax + edx ]
and ecx 0xff
shr ebx 0x8
mov ecx [ edi + ecx * 4 ]
xor ecx ebx
mov ebx ecx
inc edx
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_406094
mov edx rw-data
xor ecx ecx
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] 0xffffffff
mov [ eax + 0x17 ] 0x0
mov [ eax + 0x418 ] 0x0
mov [ eax + 0x12 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x10 ] 0x0
mov [ eax + 0x11 ] 0x0
mov [ eax + 0xc18 ] edx
mov [ eax + 0x16 ] 0x0
mov [ eax + 0x13 ] 0x1
mov [ eax + 0xc1c ] ecx
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x15 ] 0x0
retn
sub_4060e8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax rw-data
mov [ ebx ] eax
cmp [ ebx + 0x4 ] 0xffffffff
je r-xdata
test esi 0x1
je r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
push ebx
call sub_406de4
pop ecx
cmp [ ebx + 0x12 ] 0x0
je r-xdata
mov eax ebx
call sub_406278
mov eax ebx
call sub_406300
jmp r-xdata
sub_406130
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx eax
push edi
mov [ ebp - 0x4 ] edx
xor edx edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc18 ] edx
cmp [ ebx + 0x16 ] 0x0
mov esi ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov edi 0x80000000
je r-xdata
mov al 0x1
mov [ ebp - 0x8 ] 0x1
test al al
je r-xdata
or edi 0x40000000
cmp [ ebx + 0x15 ] 0x0
je r-xdata
or [ ebp - 0x8 ] 0x2
mov eax 0x8000000
xor eax eax
jmp r-xdata
push 0x0
push [ ebp - 0xc ]
push 0x3
push 0x0
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x4 ]
call CreateFileA
mov edi eax
test esi esi
je r-xdata
mov [ ebp - 0xc ] eax
call sub_40510c
test eax eax
je r-xdata
xor edx edx
cmp edi 0xffffffff
mov [ ebx + 0x12 ] 0x0
setne cl
mov [ ebx + 0xc ] edx
and ecx 0x1
mov [ ebx + 0x10 ] 0x0
mov [ ebp - 0xd ] cl
cmp [ ebp - 0xd ] 0x0
je r-xdata
call GetLastError
cmp eax 0x2
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] edi
test esi esi
je r-xdata
mov [ ebx + 0xc18 ] 0x1
push 0x0
push [ ebp - 0xc ]
push 0x3
push 0x0
push [ ebp - 0x8 ]
push edi
push esi
call CreateFileW
mov edi eax
jmp r-xdata
mov [ ebx + 0x418 ] 0x0
lea eax [ ebx + 0x418 ]
mov edx esi
call sub_406888
jmp r-xdata
cmp edi 0xffffffff
jne r-xdata
lea edx [ ebx + 0x17 ]
mov ecx 0x10000000
mov eax esi
call sub_40682c
lea eax [ ebx + 0x17 ]
mov edx [ ebp - 0x4 ]
call sub_406ca0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax ebx
call sub_406258
sub_406278
push ebx
push esi
mov esi eax
push edi
push ebp
mov ebp rw-data
cmp [ esi + 0xc ] 0x0
mov bl 0x1
je r-xdata
mov edi [ esi + 0x4 ]
cmp edi 0xffffffff
je r-xdata
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
inc [ esi + 0xc1c ]
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] 0xffffffff
test bl bl
jne r-xdata
push edi
call CloseHandle
test eax eax
setne bl
and ebx 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ esi + 0x17 ]
mov eax rw-data
call sub_4066f4
inc eax
cmp eax 0x100
jl r-xdata
xor edx edx
mov [ ebp + eax * 4 ] edx
jmp r-xdata
cmp esi [ ebp + eax * 4 ]
jne r-xdata
sub_406300
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x13 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0xffffffff
je r-xdata
lea edx [ ebx + 0x418 ]
lea eax [ ebx + 0x17 ]
call sub_405ef4
pop ebx
retn
mov eax ebx
call sub_406278
sub_406330
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebx eax
mov edi ecx
mov esi rw-data
mov [ esp ] edx
cmp [ ebx + 0x11 ] 0x0
je r-xdata
mov ecx edi
mov edx [ esp ]
mov eax ebx
call sub_406414
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
mov eax ebx
call sub_40654c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
mov eax ebp
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xc18 ] 0x2
cmp [ ebx + 0x14 ] 0x0
je r-xdata
cmp [ ebx + 0x11 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor ebp ebp
xor esi esi
cmp edi esi
jle r-xdata
lea edx [ ebx + 0x17 ]
mov eax esi
call sub_406730
lea edx [ ebx + 0x17 ]
mov eax esi
call sub_40674c
test al al
jne r-xdata
mov eax esi
cdq
add eax [ esp + 0x4 ]
adc edx [ esp + 0x8 ]
push edx
push eax
xor edx edx
mov eax ebx
call sub_406494
mov ecx edi
sub ecx esi
cmp ecx 0x200
jge r-xdata
mov eax 0x200
mov eax edi
sub eax esi
jmp r-xdata
mov edx eax
mov edx 0x200
jmp r-xdata
mov ecx eax
mov edx [ esp ]
mov eax ebx
call sub_406414
cmp eax 0xffffffff
jne r-xdata
jmp r-xdata
add ebp edx
add esi 0x200
cmp edi esi
jg r-xdata
sub_406414
push ebx
mov ebx eax
push esi
push edi
push ecx
mov edi edx
cmp [ ebx + 0xc ] 0x1
mov esi ecx
jne r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
push [ ebx + 0x4 ]
call ReadFile
test eax eax
jne r-xdata
cmp esi 0x4e20
jle r-xdata
mov eax [ esp ]
mov eax ebx
call sub_4065f4
test al al
je r-xdata
push 0xfffffff6
call GetStdHandle
mov [ ebx + 0x4 ] eax
mov esi 0x4e20
cmp [ ebx + 0xc ] 0x1
jne r-xdata
cmp esi 0x4e20
jle r-xdata
or eax 0xffffffff
jmp r-xdata
call GetLastError
cmp eax 0x6d
jne r-xdata
mov ecx 0x4e20
mov edx edi
mov eax ebx
call sub_406414
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
jmp r-xdata
sub_406494
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_4064cc
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0x14 ] 0x0
je r-xdata
lea edx [ ebx + 0x17 ]
mov eax rw-data
call sub_406750
sub_4064cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
mov esi edx
cmp [ ebx + 0x4 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov edx eax
sar edx 0x1f
mov [ ebp - 0x4 ] eax
push esi
lea edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push [ ebx + 0x4 ]
call SetFilePointer
cmp eax 0xffffffff
jne r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov al 0x1
call GetLastError
test eax eax
je r-xdata
dec esi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4065b4
mov eax ebx
call sub_40654c
jmp r-xdata
add eax [ ebp + 0x8 ]
adc edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
xor esi esi
sub_40654c
push ebx
push esi
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
push 0x1
lea edx [ esp + 0x4 ]
push edx
push 0x0
push [ ebx + 0x4 ]
call SetFilePointer
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ esp ]
cdq
mov edx eax
xor eax eax
push edx
push eax
mov eax esi
xor edx edx
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
call GetLastError
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax 0xffffffff
mov edx eax
jmp r-xdata
lea edx [ ebx + 0x17 ]
mov eax rw-data
call sub_406750
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_4065b4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax esp
mov edx ebx
call sub_406670
push 0x0
push 0x0
mov edx 0x2
mov eax ebx
call sub_406494
mov eax ebx
call sub_40654c
push edx
push eax
lea eax [ esp + 0x8 ]
mov edx 0x2
call sub_406694
pop eax
pop edx
add esp 0x10
pop ebx
retn
sub_4065f4
mov edx [ eax + 0x4 ]
cmp edx 0xffffffff
jne r-xdata
push edx
call GetFileType
cmp eax 0x2
je r-xdata
xor eax eax
retn
mov ecx 0x1
cmp eax 0x3
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ecx
retn
sub_40661c
push ebx
push esi
push edi
mov esi rw-data
inc [ rw-data ]
mov bl 0x1
xor edi edi
inc edi
cmp edi 0x100
jl r-xdata
mov [ eax + 0x14 ] 0x0
cmp [ eax + 0x12 ] 0x0
je r-xdata
mov eax [ esi + edi * 4 ]
test eax eax
je r-xdata
dec [ rw-data ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + edi * 4 ]
call sub_406278
call sub_406300
jmp r-xdata
xor ebx ebx
xor edx edx
mov [ esi + edi * 4 ] edx
jmp r-xdata
test al al
je r-xdata
sub_406670
push ebx
mov ebx eax
push esi
mov esi edx
mov [ ebx ] esi
mov eax esi
call sub_40654c
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] edx
mov edx [ esi + 0xc1c ]
mov eax ebx
mov [ ebx + 0xc ] edx
pop esi
pop ebx
retn
sub_406694
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov edx [ eax + 0xc1c ]
cmp edx [ ebx + 0xc ]
jne r-xdata
test esi 0x1
je r-xdata
push [ ebx + 0x8 ]
push [ ebx + 0x4 ]
xor edx edx
call sub_406494
push ebx
call sub_406de4
pop ecx
sub_4066f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov edx 0x2
mov eax ebx
call sub_4067ec
pop esi
pop ebx
retn
push esi
mov eax 0x76
call sub_402944
push eax
push 0x0
call sub_403560
add esp 0xc
mov eax ebx
call sub_40681c
sub_406750
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov edx 0x2
mov eax ebx
call sub_4067ec
pop esi
pop ebx
retn
push esi
mov eax 0x204
call sub_402944
push eax
push 0x0
call sub_403560
add esp 0xc
mov eax ebx
call sub_40681c
sub_40678c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
mov eax 0x75
call sub_402944
push eax
push esi
call sub_403560
add esp 0xc
mov eax ebx
call sub_40681c
pop edi
pop esi
pop ebx
retn
sub_4067b8
mov ecx edx
dec ecx
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
dec ecx
je r-xdata
inc [ eax + 0x4 ]
retn
mov [ eax ] edx
jmp r-xdata
mov edx [ eax ]
test edx edx
je r-xdata
sub ecx 0xfd
je r-xdata
mov [ eax ] 0x2
jmp r-xdata
dec edx
jne r-xdata
jmp r-xdata
mov [ eax ] edx
sub_4067ec
push ebx
mov ebx edx
cmp ebx 0xff
jne r-xdata
mov eax rw-data
mov edx ebx
call sub_4067b8
call sub_40661c
call sub_40382c
mov eax ebx
call sub_406da8
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop ebx
retn
sub_40682c
push ebx
push esi
mov esi ecx
mov bl 0x1
push 0x0
push 0x0
push esi
push edx
push 0xffffffff
push eax
push 0x0
push 0x0
call WideCharToMultiByte
test eax eax
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
xor ebx ebx
sub_406850
push ebx
push esi
mov esi ecx
mov bl 0x1
push esi
push edx
push 0xffffffff
push eax
push 0x0
push 0x0
call MultiByteToWideChar
test eax eax
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
xor ebx ebx
sub_4068a0
push ebx
pop ebx
retn
dec ecx
test ecx ecx
jg r-xdata
mov bx [ edx ]
mov [ eax ] bx
add eax 0x2
mov bx [ edx ]
add edx 0x2
test bx bx
je r-xdata
sub_4068d4
push ebx
push esi
mov esi edx
mov ebx eax
jmp r-xdata
mov ax [ ebx ]
test ax ax
jne r-xdata
movzx edx ax
mov eax esi
call sub_4068bc
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
add ebx 0x2
mov eax ebx
pop esi
pop ebx
retn
sub_406910
push ebx
push esi
add esp 0xffffffec
mov esi eax
push esp
push 0x0
call GetCPInfo
cmp [ esp ] 0x1
seta al
and eax 0x1
mov [ esi + 0x100 ] al
xor ebx ebx
push ebx
call IsDBCSLeadByte
test eax eax
setne al
and eax 0x1
mov [ esi + ebx ] al
inc ebx
cmp ebx 0x100
jl r-xdata
add esp 0x14
pop esi
pop ebx
retn
sub_406968
push ebx
jmp r-xdata
mov bl [ edx ]
test bl bl
jne r-xdata
and ebx 0xff
cmp [ eax + ebx ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
xor ebx ebx
mov bl [ edx ]
cmp ecx ebx
jne r-xdata
add edx 0x2
jmp r-xdata
inc edx
mov eax edx
pop ebx
retn
sub_406994
push ebx
push esi
xor esi esi
jmp r-xdata
mov bl [ edx ]
test bl bl
jne r-xdata
and ebx 0xff
cmp [ eax + ebx ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
xor ebx ebx
mov bl [ edx ]
cmp ecx ebx
jne r-xdata
add edx 0x2
jmp r-xdata
inc edx
mov esi edx
sub_4069f0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
jne r-xdata
push esi
push ebx
push 0x0
call GetProcessHeap
push eax
call HeapReAlloc
pop esi
pop ebx
retn
mov eax esi
call sub_4069c4
pop esi
pop ebx
retn
sub_406a18
add esp 0xfffffff8
mov [ esp ] eax
push 0x1
lea eax [ esp + 0x4 ]
push eax
lea edx [ esp + 0x8 ]
push edx
call OemToCharBuffA
push [ esp ]
call CharUpperA
mov [ esp + 0x4 ] eax
push 0x1
lea ecx [ esp + 0x8 ]
push ecx
lea eax [ esp + 0xc ]
push eax
call CharToOemBuffA
mov eax [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_406a54
add esp 0xfffffff8
mov [ esp ] eax
push 0x1
lea eax [ esp + 0x4 ]
push eax
lea edx [ esp + 0x8 ]
push edx
call OemToCharBuffA
push [ esp ]
call CharLowerA
mov [ esp + 0x4 ] eax
push 0x1
lea ecx [ esp + 0x8 ]
push ecx
lea eax [ esp + 0xc ]
push eax
call CharToOemBuffA
mov eax [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_406aa8
push ebx
push 0x0
push 0x8000000
xor ecx ecx
mov cl [ edx ]
cmp ecx 0x77
jne r-xdata
mov ecx 0x3
mov ecx 0x2
jmp r-xdata
mov edx 0x40000000
movzx edx [ edx + 0x1 ]
cmp edx 0x2b
je r-xdata
push ecx
push 0x0
push 0x1
xor ecx ecx
mov cl [ edx ]
cmp ecx 0x72
jne r-xdata
mov eax 0x4
call sub_4069c4
mov [ eax ] ebx
pop ebx
retn
xor eax eax
pop ebx
retn
mov edx 0x80000000
jmp r-xdata
push edx
push eax
call CreateFileA
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
sub_406b1c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
push 0x0
lea edx [ ebp - 0x4 ]
push edx
mov edx ebx
imul edx ecx
push edx
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call WriteFile
mov ecx eax
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
xor edx edx
div ebx
jmp r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
sub_406b54
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
push 0x0
lea edx [ ebp - 0x4 ]
push edx
mov edx ebx
imul edx ecx
push edx
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call ReadFile
mov ecx eax
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
xor edx edx
div ebx
jmp r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
sub_406b8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push 0x0
push esi
push [ ebx ]
call SetFilePointer
inc eax
jne r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_406bd8
push ebx
push esi
xor esi esi
cmp ecx esi
jbe r-xdata
pop esi
pop ebx
retn
mov bl [ edx + esi ]
mov [ eax + esi ] bl
inc esi
cmp ecx esi
ja r-xdata
sub_406bf0
push esi
push edi
mov edi ecx
mov esi edx
jmp r-xdata
mov edx edi
add edi 0xffffffff
test edx edx
ja r-xdata
mov dl [ esi ]
mov cl [ eax ]
cmp dl cl
jbe r-xdata
xor eax eax
pop edi
pop esi
retn
cmp dl cl
jae r-xdata
or eax 0xffffffff
pop edi
pop esi
retn
inc eax
inc esi
or eax 0xffffffff
pop edi
pop esi
retn
sub_406c48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_406c20
dec eax
test eax eax
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
xor edx edx
mov dl [ ebx + eax ]
cmp esi edx
jne r-xdata
dec eax
test eax eax
jge r-xdata
add eax ebx
pop esi
pop ebx
retn
sub_406c74
push esi
push edi
mov edi eax
xor esi esi
jmp r-xdata
cmp [ edi + esi ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
xor eax eax
pop edi
pop esi
retn
mov al [ edx + ecx ]
test al al
jne r-xdata
cmp al [ edi + esi ]
jne r-xdata
inc esi
inc ecx
lea eax [ esi + edi ]
pop edi
pop esi
retn
sub_406cb0
push ebx
jmp r-xdata
mov ebx ecx
add ecx 0xffffffff
test ebx ebx
ja r-xdata
mov bl [ edx ]
mov [ eax ] bl
inc eax
cmp [ edx ] 0x0
je r-xdata
pop ebx
retn
inc edx
sub_406ccc
push esi
mov esi edx
cmp dl cl
jae r-xdata
or eax 0xffffffff
pop esi
retn
test cl cl
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
inc eax
inc esi
jmp r-xdata
mov dl [ esi ]
mov cl [ eax ]
cmp dl cl
jbe r-xdata
sub_406cf4
push esi
push edi
mov edi ecx
mov esi edx
jmp r-xdata
mov edx edi
add edi 0xffffffff
test edx edx
ja r-xdata
mov dl [ esi ]
mov cl [ eax ]
cmp dl cl
jbe r-xdata
xor eax eax
pop edi
pop esi
retn
cmp dl cl
jae r-xdata
or eax 0xffffffff
pop edi
pop esi
retn
test cl cl
je r-xdata
or eax 0xffffffff
pop edi
pop esi
retn
inc eax
inc esi
sub_406d28
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
push esi
push 0xffffffff
push ebx
push 0x1001
push 0x400
call CompareStringA
add eax 0xfffffffe
pop esi
pop ebx
retn
sub_406d4c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov ebp edx
mov edi eax
mov esi ebx
push esi
push ebp
push esi
push edi
push 0x1001
push 0x400
call CompareStringA
add eax 0xfffffffe
pop ebp
pop edi
pop esi
pop ebx
retn
sub_406d74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_406c20
add eax ebx
mov edx esi
call sub_406ca0
mov eax ebx
pop esi
pop ebx
retn
sub_406db0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push ebx
call wvsprintfA
mov eax ebx
call sub_406c20
pop ebx
pop ebp
retn
sub_406e04
push ebx
push esi
mov ebx eax
xor esi esi
jmp r-xdata
xor eax eax
mov al [ ebx ]
call sub_406dd0
test eax eax
jne r-xdata
mov eax esi
xor edx edx
add eax eax
mov dl [ ebx ]
lea eax [ eax + eax * 4 ]
add eax edx
add eax 0xffffffd0
inc ebx
mov esi eax
mov eax esi
pop esi
pop ebx
retn
sub_406e34
push ebx
push esi
mov esi edx
add esp 0xfffffff8
mov dx [ rw-data ]
mov ebx eax
mov ax [ rw-data ]
push esp
push edx
push eax
call DosDateTimeToFileTime
test eax eax
jne r-xdata
push ebx
lea edx [ esp + 0x4 ]
push edx
call LocalFileTimeToFileTime
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax 0x3
mov ecx [ esp ]
mov [ ebx ] ecx
mov ecx [ esp + 0x4 ]
mov [ ebx + 0x4 ] ecx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_406e89
add esp 0xffffff78
push 0x40
lea edx [ esp + 0x4 ]
push edx
push eax
call OpenFile
cmp eax 0xffffffff
jne r-xdata
push eax
call _lclose
mov eax 0x1
call GetLastError
sub eax 0x7b
je r-xdata
xor eax eax
jmp r-xdata
sub eax 0x53
je r-xdata
add esp 0x88
retn
jmp r-xdata
mov eax 0x1
jmp r-xdata
sub_406ed0
push ebx
push esi
add esp 0xffffffe8
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax esp
call sub_406e34
mov ebx eax
mov eax [ rw-data ]
call sub_406b08
push 0x0
push 0x80
push 0x3
push 0x0
push 0x2
push 0x40000000
push rw-data
call CreateFileA
mov esi eax
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
test al 0x5f
je r-xdata
cmp esi 0xffffffff
jne r-xdata
and eax 0x7f
push eax
push rw-data
call SetFileAttributesA
test ebx ebx
je r-xdata
push rw-data
mov eax 0x6d
call sub_402944
push eax
call sub_402efc
add esp 0x8
jmp r-xdata
push esi
call CloseHandle
test bl 0x1
je r-xdata
add esp 0x18
pop esi
pop ebx
retn
xor eax eax
mov eax esp
jmp r-xdata
xor edx edx
lea edx [ esp + 0x8 ]
jmp r-xdata
test bl 0x2
je r-xdata
xor ecx ecx
lea ecx [ esp + 0x10 ]
jmp r-xdata
test bl 0x4
je r-xdata
push eax
push edx
push ecx
push esi
call SetFileTime
sub_406fa4
push ebx
push esi
push edi
add esp 0xfffffef8
mov edi eax
xor ebx ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
test edi edi
jne r-xdata
lea eax [ esp + 0x4 ]
mov edx 0x1
call sub_4071b8
mov esi eax
test eax eax
je r-xdata
mov ebx rw-data
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ esp + 0x4 ] 0x0
lea eax [ esp + 0x4 ]
test edi edi
jne r-xdata
mov eax esi
jmp r-xdata
inc ebx
cmp [ ebx ] 0x0
jne r-xdata
mov [ rw-data ] eax
xor edx edx
mov [ rw-data ] edx
xor ecx ecx
mov [ rw-data ] ecx
mov eax rw-data
call sub_406c20
mov [ rw-data ] eax
test edi edi
je r-xdata
mov dl [ ebx ]
inc ebx
and edx 0xff
test edx edx
jne r-xdata
test ebx ebx
jne r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx ]
cmp eax 0x5c
jne r-xdata
mov ebx rw-data
xor eax eax
mov al [ rw-data ]
cmp eax 0x2f
jne r-xdata
mov ecx edx
sub ecx 0x2f
jne r-xdata
mov [ eax ] 0x0
mov eax [ rw-data ]
xor ecx ecx
mov cl [ eax + rw-data ]
cmp ecx 0x2f
jne r-xdata
inc ebx
jmp r-xdata
mov ebx rw-data
jmp r-xdata
mov [ ebx ] 0x2f
xor eax eax
mov al [ rw-data ]
cmp eax 0x61
jl r-xdata
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x2f
mov [ esp + 0x5 ] 0x0
inc ebx
jmp r-xdata
mov [ eax ] dl
inc eax
mov [ eax ] 0x0
lea eax [ esp + 0x4 ]
mov edx 0x2
call sub_4071b8
mov esi eax
dec eax
jle r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax rw-data
mov edx 0x4
call sub_4071b8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov al [ rw-data ]
cmp eax 0x41
jl r-xdata
cmp eax 0x7a
jle r-xdata
lea eax [ esp + 0x4 ]
jmp r-xdata
mov eax esi
jmp r-xdata
lea eax [ esp + 0x4 ]
mov edx 0x3
call sub_4071b8
mov eax rw-data
mov edx 0x4
call sub_4071b8
mov ecx [ rw-data ]
test [ ecx + 0x14 ] 0x20
je r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x4d
jmp r-xdata
cmp eax 0x5a
jg r-xdata
xor edx edx
mov dl [ rw-data ]
cmp edx 0x3a
jne r-xdata
mov eax esi
mov al [ rw-data ]
add al 0x60
mov [ esp ] al
mov edx rw-data
lea eax [ esp + 0x1 ]
call sub_406ca0
push rw-data
lea edx [ esp + 0x4 ]
push edx
call SetVolumeLabelA
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
lea eax [ esp + 0x4 ]
mov dl [ ebx ]
inc ebx
mov [ eax ] dl
inc eax
mov cl [ ebx ]
inc ebx
mov [ eax ] cl
xor ecx ecx
mov dl [ ebx ]
inc eax
mov cl dl
cmp ecx 0x2f
jne r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov [ eax ] 0x0
mov [ eax ] dl
inc ebx
inc eax
sub_4071b8
push ebx
mov ebx eax
mov eax edx
push esi
add esp 0xfffffef8
and eax 0x7
cmp eax 0x2
jne r-xdata
mov eax edx
and eax 0x7
cmp eax 0x4
jne r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov edx [ rw-data ]
mov eax ebx
call sub_406ca0
mov eax [ rw-data ]
call sub_4069d8
mov eax [ rw-data ]
call sub_4069d8
xor edx edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl [ eax ]
inc eax
test dl dl
mov [ ecx ] dl
jne r-xdata
mov ecx edx
and ecx 0x7
dec ecx
jne r-xdata
mov eax ebx
xor esi esi
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
inc [ rw-data ]
mov eax [ rw-data ]
call sub_406e89
test eax eax
je r-xdata
and edx 0x7
cmp edx 0x5
jne r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
inc eax
call sub_4069c4
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl [ eax ]
inc eax
test dl dl
mov [ ecx ] dl
jne r-xdata
push [ rw-data ]
call GetFileAttributesA
mov ebx eax
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
jmp r-xdata
mov eax 0x63
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
inc eax
call sub_4069c4
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax 0xa
jmp r-xdata
inc [ rw-data ]
mov edx [ rw-data ]
sub edx [ rw-data ]
cmp edx 0x104
jl r-xdata
mov eax [ rw-data ]
test [ eax + 0x14 ] 0x20
jne r-xdata
test bl 0x10
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl [ eax ]
inc eax
test dl dl
mov [ ecx ] dl
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
call sub_4069d8
xor edx edx
mov [ rw-data ] edx
mov edx [ rw-data ]
test [ edx + 0x14 ] 0x20
je r-xdata
mov eax [ rw-data ]
call sub_4069d8
mov eax 0xa
jmp r-xdata
dec [ rw-data ]
mov esi 0x1
mov ecx [ rw-data ]
mov [ ecx ] 0x0
mov eax ebx
jmp r-xdata
mov eax [ rw-data ]
call sub_406e89
test eax eax
je r-xdata
mov edx [ rw-data ]
inc [ rw-data ]
mov [ edx ] 0x2f
mov ecx [ rw-data ]
inc [ rw-data ]
mov [ ecx ] 0x2f
mov eax [ rw-data ]
xor edx edx
mov [ eax ] dl
mov eax [ rw-data ]
mov [ eax ] dl
xor eax eax
jmp r-xdata
push [ rw-data ]
mov eax 0x6f
call sub_402944
push eax
call sub_402efc
add esp 0x8
mov eax [ rw-data ]
call sub_4069d8
mov eax [ rw-data ]
call sub_4069d8
mov eax 0x3
jmp r-xdata
mov eax [ rw-data ]
call sub_406a90
inc eax
jne r-xdata
mov eax [ rw-data ]
call sub_4069d8
mov eax [ rw-data ]
call sub_4069d8
mov eax 0x2
jmp r-xdata
inc [ rw-data ]
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov dl [ eax ]
inc eax
test dl dl
mov [ ecx ] dl
jne r-xdata
mov eax esi
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push [ rw-data ]
mov eax 0x6f
call sub_402944
push eax
call sub_402efc
add esp 0x8
mov eax [ rw-data ]
call sub_4069d8
mov eax [ rw-data ]
call sub_4069d8
mov eax 0x3
jmp r-xdata
cmp [ rw-data ] 0x0
jle r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406ca0
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
mov cl [ ebx + 0x1 ]
cmp ecx 0x3a
jne r-xdata
inc [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx ] 0x0
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_406ca0
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov edx [ rw-data ]
mov [ rw-data ] edx
jmp r-xdata
push esp
lea ecx [ esp + 0x8 ]
push ecx
push 0x104
push rw-data
call GetFullPathNameA
cmp eax 0x104
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor eax eax
mov al [ ebx ]
call sub_406a54
mov edx [ rw-data ]
mov [ edx ] al
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov al [ ecx ]
mov [ edx ] al
test al al
jne r-xdata
xor edx edx
mov dl [ esp + 0x4 ]
add edx 0xffffffa0
mov [ rw-data ] edx
mov eax [ rw-data ]
mov cl [ rw-data ]
add cl 0x60
mov [ eax ] cl
mov eax 0x1
jmp r-xdata
mov ecx [ rw-data ]
xor eax eax
mov al [ ecx + 0x1 ]
cmp eax 0x3a
jne r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov cl [ edx ]
add ecx 0xffffffa0
mov [ rw-data ] ecx
mov eax [ rw-data ]
xor edx edx
mov dl [ eax ]
cmp edx 0x61
jge r-xdata
inc [ rw-data ]
inc [ rw-data ]
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] 0x0
jmp r-xdata
call sub_4069d8
mov eax [ rw-data ]
call sub_4069d8
mov eax 0x4e
jmp r-xdata
mov edx [ rw-data ]
xor eax eax
mov al [ edx ]
call sub_406a54
mov edx [ rw-data ]
mov [ edx ] al
jmp r-xdata
sub_407600
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi eax
mov edi rw-data
push esp
push [ edi + 0xc6c4 ]
call FindFirstFileA
cmp eax 0xffffffff
jne r-xdata
push eax
call FindClose
test [ esp ] 0x10
je r-xdata
mov eax 0x9
jmp r-xdata
mov edx [ esp + 0x20 ]
mov [ edi + 0xc6cc ] edx
call sub_409504
test eax eax
je r-xdata
mov eax 0x4c
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0xc69c ] 0x0
jne r-xdata
mov eax 0x9
jmp r-xdata
xor edx edx
mov [ edi + 0xc6d0 ] edx
mov ecx [ edi + 0xc6a4 ]
mov [ edi + 0xc6a8 ] ecx
cmp [ edi + 0xc6cc ] 0x101d0
jge r-xdata
call sub_40ac40
mov [ edi + 0xc69c ] eax
test eax eax
jne r-xdata
mov eax 0x101d0
mov eax [ edi + 0xc6cc ]
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov eax [ edi + 0xc6c8 ]
call sub_406b08
test esi esi
je r-xdata
call sub_407f78
mov ebx eax
dec eax
jle r-xdata
call sub_407a98
mov ebx eax
test eax eax
jne r-xdata
mov [ edi + 0xc794 ] 0x1
mov eax 0x9
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp [ edi + 0x4c ] 0x0
jle r-xdata
mov edx [ edi + 0x6c ]
sub edx [ edi + 0x70 ]
mov [ edi + 0xc6d4 ] edx
test edx edx
jge r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi + 0xc6d4 ] 0x0
jle r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov ebx 0x2
jmp r-xdata
mov eax [ edi + 0xc6c8 ]
call sub_406b08
mov eax ebx
jmp r-xdata
cmp [ edi + 0x70 ] 0x0
jne r-xdata
cmp [ edi + 0xc744 ] 0x0
jne r-xdata
mov eax [ edi + 0xc744 ]
add eax [ edi + 0xc6d4 ]
mov esi eax
and esi 0x80001fff
jns r-xdata
cmp [ edi + 0xc740 ] 0x0
jne r-xdata
cmp [ edi + 0xc740 ] 0x0
je r-xdata
mov edx eax
sub edx esi
test eax eax
jge r-xdata
dec esi
or esi 0xffffe000
inc esi
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov eax [ edi + 0xc6c8 ]
call sub_406b08
cmp ebx 0x1
jle r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov edx [ edi + 0xc6d4 ]
mov [ edi + 0xc744 ] edx
xor ecx ecx
mov [ edi + 0xc6d4 ] ecx
mov ebx 0x2
cmp edx [ edi + 0xc6d0 ]
je r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ edi + 0xc6a8 ]
sub ecx [ edi + 0xc6a4 ]
sub ecx esi
add [ edi + 0xc6ac ] ecx
add esi [ edi + 0xc6a4 ]
mov [ edi + 0xc6a8 ] esi
xor ecx ecx
mov eax [ edi + 0xc6c8 ]
call sub_406b8c
mov eax [ edi + 0xc6c8 ]
call sub_406bb0
mov [ edi + 0xc6d0 ] eax
push [ edi + 0xc6c8 ]
mov ecx 0x2000
mov edx 0x1
mov eax [ edi + 0xc6a4 ]
call sub_406b54
mov [ edi + 0xc6ac ] eax
test eax eax
jg r-xdata
xor eax eax
mov [ edi + 0xc6d4 ] eax
mov edx [ edi + 0xc744 ]
add edx eax
mov eax edx
mov ebx eax
and ebx 0x80001fff
jns r-xdata
lea edx [ edi + 0xc6e5 ]
lea eax [ edi + 0x88 ]
mov ecx 0x4
call sub_406cf4
test eax eax
je r-xdata
mov edx [ edi + 0xc6a4 ]
add edx esi
mov [ edi + 0xc6a8 ] edx
sub [ edi + 0xc6ac ] esi
jmp r-xdata
mov eax 0x33
jmp r-xdata
mov edx eax
sub edx ebx
test eax eax
jge r-xdata
dec ebx
or ebx 0xffffe000
inc ebx
mov eax [ edi + 0xc744 ]
add eax [ edi + 0xc6d4 ]
mov esi eax
and esi 0x80001fff
jns r-xdata
lea eax [ edi + 0x88 ]
mov edx 0x4
call sub_409690
test eax eax
je r-xdata
cmp edx [ edi + 0xc6d0 ]
je r-xdata
mov eax 0x3
jmp r-xdata
mov edx eax
sub edx esi
test eax eax
jge r-xdata
dec esi
or esi 0xffffe000
inc esi
mov ecx [ edi + 0xc6a8 ]
sub ecx [ edi + 0xc6a4 ]
sub ecx ebx
add [ edi + 0xc6ac ] ecx
add ebx [ edi + 0xc6a4 ]
mov [ edi + 0xc6a8 ] ebx
xor ecx ecx
mov eax [ edi + 0xc6c8 ]
call sub_406b8c
mov eax [ edi + 0xc6c8 ]
call sub_406bb0
mov [ edi + 0xc6d0 ] eax
push [ edi + 0xc6c8 ]
mov ecx 0x2000
mov edx 0x1
mov eax [ edi + 0xc6a4 ]
call sub_406b54
mov [ edi + 0xc6ac ] eax
test eax eax
jg r-xdata
cmp edx [ edi + 0xc6d0 ]
je r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov eax [ edi + 0xc6c8 ]
call sub_406b08
mov eax 0x3
jmp r-xdata
lea edx [ edi + 0xc6e5 ]
lea eax [ edi + 0x88 ]
mov ecx 0x4
call sub_406cf4
test eax eax
je r-xdata
mov edx [ edi + 0xc6a4 ]
add edx ebx
mov [ edi + 0xc6a8 ] edx
sub [ edi + 0xc6ac ] ebx
jmp r-xdata
mov eax 0x33
jmp r-xdata
mov ecx [ edi + 0xc6a8 ]
sub ecx [ edi + 0xc6a4 ]
sub ecx esi
add [ edi + 0xc6ac ] ecx
add esi [ edi + 0xc6a4 ]
mov [ edi + 0xc6a8 ] esi
xor ecx ecx
mov eax [ edi + 0xc6c8 ]
call sub_406b8c
mov eax [ edi + 0xc6c8 ]
call sub_406bb0
mov [ edi + 0xc6d0 ] eax
push [ edi + 0xc6c8 ]
mov ecx 0x2000
mov edx 0x1
mov eax [ edi + 0xc6a4 ]
call sub_406b54
mov [ edi + 0xc6ac ] eax
test eax eax
jg r-xdata
mov ebx 0x2
lea eax [ edi + 0x88 ]
mov edx 0x4
call sub_409690
test eax eax
je r-xdata
mov eax [ edi + 0xc6c8 ]
call sub_406b08
mov eax ebx
mov ebx eax
mov edx [ edi + 0xc6a4 ]
add edx esi
mov [ edi + 0xc6a8 ] edx
sub [ edi + 0xc6ac ] esi
jmp r-xdata
mov eax 0x33
jmp r-xdata
call sub_409fc0
cmp ebx eax
jge r-xdata
sub_407a98
push ebx
push esi
push edi
mov esi rw-data
push ebp
add esp 0xffffffe4
xor ebx ebx
mov ebp eax
cmp [ esi + 0xc6cc ] 0x2000
jg r-xdata
mov eax [ esi + 0xc6cc ]
mov edi eax
and edi 0x80001fff
jns r-xdata
xor ecx ecx
xor edx edx
mov eax [ esi + 0xc6c8 ]
call sub_406b8c
push [ esi + 0xc6c8 ]
mov ecx [ esi + 0xc6cc ]
mov edx 0x1
mov eax [ esi + 0xc6a4 ]
call sub_406b54
mov [ esi + 0xc6ac ] eax
mov edi [ esi + 0xc6cc ]
cmp eax edi
jne r-xdata
cmp edi 0x12
jle r-xdata
dec edi
or edi 0xffffe000
inc edi
test ebx ebx
jne r-xdata
mov eax [ esi + 0xc6a4 ]
add eax edi
add eax 0xffffffea
mov [ esi + 0xc6a8 ] eax
jmp r-xdata
mov edx [ esi + 0xc6cc ]
sub edx edi
mov [ esi + 0xc6d0 ] edx
mov edx eax
sub edx edi
xor ecx ecx
mov eax [ esi + 0xc6c8 ]
call sub_406b8c
mov eax [ esi + 0xc6c8 ]
call sub_406bb0
mov [ esi + 0xc6d0 ] eax
push [ esi + 0xc6c8 ]
mov ecx edi
mov edx 0x1
mov eax [ esi + 0xc6a4 ]
call sub_406b54
mov [ esi + 0xc6ac ] eax
cmp edi eax
jne r-xdata
mov edx [ esi + 0xc6a8 ]
sub edx [ esi + 0xc6a4 ]
add edx [ esi + 0xc6d0 ]
mov [ esi + 0x6c ] edx
lea eax [ esp + 0x4 ]
mov edx 0x16
call sub_409690
test eax eax
jne r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov eax 0x2
jmp r-xdata
mov eax [ esi + 0xc6a8 ]
cmp eax [ esi + 0xc6a4 ]
jae r-xdata
sar ebp 0xd
mov edi 0x1
mov [ esp ] ebp
jmp r-xdata
add ebp 0x1fff
mov edx [ esi + 0xc6a4 ]
add edx edi
add edx 0xffffffea
mov [ esi + 0xc6a8 ] edx
jmp r-xdata
lea eax [ esp + 0x8 ]
call sub_409ba0
mov [ esi + 0xc738 ] ax
lea eax [ esp + 0xa ]
call sub_409ba0
mov [ esi + 0xc73a ] ax
lea eax [ esp + 0xc ]
call sub_409ba0
mov [ esi + 0xc73c ] ax
lea eax [ esp + 0xe ]
call sub_409ba0
mov [ esi + 0xc73e ] ax
lea eax [ esp + 0x10 ]
call sub_409bb4
mov [ esi + 0xc740 ] eax
lea eax [ esp + 0x14 ]
call sub_409bb4
mov [ esi + 0xc744 ] eax
lea eax [ esp + 0x18 ]
call sub_409ba0
mov [ esi + 0xc748 ] ax
mov edx [ esi + 0xc744 ]
add edx [ esi + 0xc740 ]
xor eax eax
mov [ esi + 0x70 ] edx
mov eax 0x33
jmp r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0xc6a8 ]
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi + 0xc6a8 ]
cmp eax [ esi + 0xc6a4 ]
jae r-xdata
dec [ esi + 0xc6a8 ]
lea edx [ esi + 0xc6ea ]
mov ecx 0x4
call sub_406cf4
test eax eax
jne r-xdata
cmp edi [ esp ]
jle r-xdata
mov eax [ esi + 0xc6a8 ]
cmp [ eax ] 0x50
jne r-xdata
mov ecx 0x3
mov edx [ esi + 0xc6a4 ]
mov eax [ esi + 0xc6dc ]
call sub_406cb0
jmp r-xdata
mov edx [ esi + 0xc6a8 ]
mov ebx 0x1
sub edx [ esi + 0xc6a4 ]
sub [ esi + 0xc6ac ] edx
jmp r-xdata
sub [ esi + 0xc6d0 ] 0x2000
xor ecx ecx
mov edx [ esi + 0xc6d0 ]
mov eax [ esi + 0xc6c8 ]
call sub_406b8c
push [ esi + 0xc6c8 ]
mov ecx 0x2000
mov edx 0x1
mov eax [ esi + 0xc6a4 ]
call sub_406b54
mov [ esi + 0xc6ac ] eax
cmp eax 0x2000
jne r-xdata
dec [ esi + 0xc6a8 ]
lea edx [ esi + 0xc6ea ]
mov ecx 0x4
call sub_406cf4
test eax eax
jne r-xdata
sub ebp edi
add ebp 0x1fff
test ebp ebp
jns r-xdata
mov edx [ esi + 0xc6a4 ]
add edx 0x1fff
mov [ esi + 0xc6a8 ] edx
jmp r-xdata
mov edx [ esi + 0xc6a8 ]
mov ebx 0x1
sub edx [ esi + 0xc6a4 ]
sub [ esi + 0xc6ac ] edx
jmp r-xdata
mov eax [ esi + 0xc6a8 ]
cmp eax [ esi + 0xc6a4 ]
jae r-xdata
mov eax [ esi + 0xc6a8 ]
cmp [ eax ] 0x50
jne r-xdata
mov ecx 0x3
mov edx [ esi + 0xc6a4 ]
mov eax [ esi + 0xc6dc ]
call sub_406cb0
inc edi
dec [ esi + 0xc6a8 ]
lea edx [ esi + 0xc6ea ]
mov ecx 0x4
call sub_406cf4
test eax eax
jne r-xdata
mov edx [ esi + 0xc6a8 ]
mov ebx 0x1
sub edx [ esi + 0xc6a4 ]
sub [ esi + 0xc6ac ] edx
jmp r-xdata
sub_407e10
push ebx
push esi
xor esi esi
mov eax 0x2004
call sub_4069c4
mov [ rw-data ] eax
mov eax 0x10001
call sub_4069c4
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x6b
call sub_402944
push eax
call sub_402efc
pop ecx
mov eax 0x4
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov cl 0x50
add edx 0x2000
mov al 0x4b
mov [ rw-data ] edx
mov [ rw-data ] 0x50
mov [ rw-data ] cl
mov [ rw-data ] cl
mov [ rw-data ] 0x4b
mov [ rw-data ] al
mov [ rw-data ] al
mov eax rw-data
mov edx rw-data
call sub_406ca0
mov edx rw-data
mov eax rw-data
call sub_406ca0
mov edx rw-data
mov eax rw-data
call sub_406ca0
xor eax eax
call sub_407600
mov ebx eax
cmp eax 0x9
test ebx ebx
je r-xdata
call sub_407f10
mov eax esi
pop esi
pop ebx
retn
cmp ebx 0x4c
jne r-xdata
mov esi ebx
mov esi 0x9
jmp r-xdata
push [ rw-data ]
mov eax 0x6d
call sub_402944
push eax
call sub_402efc
add esp 0x8
cmp ebx 0x9
jne r-xdata
sub_407f10
call sub_408fa4
mov edx 0x5
xor eax eax
call sub_4071b8
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4069d8
xor edx edx
mov [ rw-data ] edx
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4069d8
xor edx edx
mov [ rw-data ] edx
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4069d8
xor edx edx
mov [ rw-data ] edx
mov [ rw-data ] edx
retn
call sub_4069d8
sub_407f78
push ebx
xor ebx ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
pop ebx
retn
cmp [ rw-data ] 0x0
jg r-xdata
movzx eax [ rw-data ]
mov edx 0x1
call sub_4098f4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x6a
call sub_402944
push eax
call sub_402efc
pop ecx
mov ebx 0x1
cmp [ rw-data ] 0x0
jne r-xdata
sub_407fd0
push ebx
call sub_40804c
mov ebx eax
test eax eax
je r-xdata
cmp [ rw-data ] 0x12
jae r-xdata
mov eax ebx
pop ebx
retn
mov edx 0x12
xor edx edx
mov dl [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
and [ eax + 0x14 ] 0xdf
mov ecx [ rw-data ]
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] edx
and [ eax + 0x14 ] 0xef
test [ rw-data ] 0x8
je r-xdata
mov edx [ rw-data ]
or [ edx + 0x14 ] 0x20
mov ecx [ rw-data ]
and [ ecx + 0x14 ] 0xef
jmp r-xdata
cmp eax 0x6
je r-xdata
xor eax eax
pop ebx
retn
cmp eax 0xb
je r-xdata
cmp eax 0x5
jne r-xdata
sub_40804c
push ebx
add esp 0xffffffd4
mov ebx esp
mov edx 0x2a
mov eax ebx
call sub_409690
test eax eax
jne r-xdata
mov dl [ ebx ]
mov [ rw-data ] dl
mov cl [ ebx + 0x1 ]
mov [ rw-data ] cl
mov al [ ebx + 0x2 ]
mov [ rw-data ] al
lea eax [ ebx + 0x4 ]
mov dl [ ebx + 0x3 ]
mov [ rw-data ] dl
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x6 ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x8 ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0xa ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0xc ]
call sub_409bb4
mov [ rw-data ] eax
lea eax [ ebx + 0x10 ]
call sub_409bb4
mov [ rw-data ] eax
lea eax [ ebx + 0x14 ]
call sub_409bb4
mov [ rw-data ] eax
lea eax [ ebx + 0x18 ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x1a ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x1c ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x1e ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x20 ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x22 ]
call sub_409bb4
mov [ rw-data ] eax
lea eax [ ebx + 0x26 ]
call sub_409bb4
mov [ rw-data ] eax
xor eax eax
mov eax 0x33
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_408154
push ebx
add esp 0xffffffe4
mov ebx esp
mov edx 0x1a
mov eax ebx
call sub_409690
test eax eax
jne r-xdata
mov dl [ ebx ]
lea eax [ ebx + 0x2 ]
mov [ rw-data ] dl
mov cl [ ebx + 0x1 ]
mov [ rw-data ] cl
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x4 ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x6 ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x8 ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0xa ]
call sub_409bb4
mov [ rw-data ] eax
lea eax [ ebx + 0xe ]
call sub_409bb4
mov [ rw-data ] eax
lea eax [ ebx + 0x12 ]
call sub_409bb4
mov [ rw-data ] eax
lea eax [ ebx + 0x16 ]
call sub_409ba0
mov [ rw-data ] ax
lea eax [ ebx + 0x18 ]
call sub_409ba0
mov [ rw-data ] ax
mov edx [ rw-data ]
mov [ rw-data ] edx
mov ecx [ rw-data ]
mov [ rw-data ] ecx
test [ rw-data ] 0x8
je r-xdata
mov eax 0x33
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
mov [ rw-data ] edx
mov ecx [ rw-data ]
mov eax [ ecx + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
add esp 0x1c
pop ebx
retn
sub_40824c
push ebx
push esi
mov ebx [ rw-data ]
push edi
mov edi ebx
mov esi [ rw-data ]
and edi 0x7
push ebp
mov ecx edi
sub ebx edi
shr esi cl
cmp ebx 0x10
mov ebp [ rw-data ]
jae r-xdata
mov edi esi
sub ebx 0x10
shr esi 0x10
and edi 0xffff
cmp ebx 0x10
jae r-xdata
dec [ rw-data ]
js r-xdata
mov edx esi
not edx
and edx 0xffff
cmp edi edx
je r-xdata
dec [ rw-data ]
js r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
shr esi 0x10
sub ebx 0x10
jmp r-xdata
mov eax 0x1
jmp r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x10
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax edi
add edi 0xffffffff
test eax eax
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x10
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp ebx 0x8
jae r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] esi
mov [ rw-data ] ebx
xor eax eax
mov edx esi
mov [ ebp + rw-data ] dl
inc ebp
cmp ebp 0x8000
jne r-xdata
dec [ rw-data ]
js r-xdata
shr esi 0x8
sub ebx 0x8
mov eax rw-data
xor ecx ecx
mov edx ebp
call sub_409830
xor ebp ebp
call sub_40976c
mov edx [ rw-data ]
inc [ rw-data ]
xor eax eax
mov al [ edx ]
jmp r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_4083a0
push ebx
add esp 0xfffffb80
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_408b30
test eax eax
setne al
and eax 0x1
xor ebx ebx
mov [ esp + ebx * 4 ] 0x8
inc ebx
cmp ebx 0x90
jl r-xdata
cmp ebx 0x100
jge r-xdata
cmp ebx 0x118
jge r-xdata
mov [ esp + ebx * 4 ] 0x9
inc ebx
cmp ebx 0x100
jl r-xdata
cmp ebx 0x120
jge r-xdata
mov [ esp + ebx * 4 ] 0x7
inc ebx
cmp ebx 0x118
jl r-xdata
mov [ rw-data ] 0x7
push rw-data
push rw-data
push rw-data
push rw-data
lea eax [ esp + 0x10 ]
mov ecx 0x101
mov edx 0x120
call sub_408fd4
mov ebx eax
test eax eax
je r-xdata
mov [ esp + ebx * 4 ] 0x8
inc ebx
cmp ebx 0x120
jl r-xdata
xor ebx ebx
xor edx edx
mov eax ebx
mov [ rw-data ] edx
jmp r-xdata
mov [ esp + ebx * 4 ] 0x5
inc ebx
cmp ebx 0x1e
jl r-xdata
mov [ rw-data ] 0x5
push rw-data
push rw-data
push rw-data
push rw-data
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0x1e
call sub_408fd4
mov ebx eax
dec eax
jle r-xdata
add esp 0x480
pop ebx
retn
mov eax [ rw-data ]
call sub_40945c
xor edx edx
mov eax ebx
mov [ rw-data ] edx
jmp r-xdata
sub_4084d5
push ebx
push esi
push edi
push ebp
add esp 0xfffffadc
mov esi [ rw-data ]
mov ebx [ rw-data ]
cmp ebx 0x5
jae r-xdata
mov edx esi
sub ebx 0x5
and edx 0x1f
shr esi 0x5
add edx 0x101
mov [ esp + 0x1c ] edx
cmp ebx 0x5
jae r-xdata
dec [ rw-data ]
js r-xdata
mov edx esi
sub ebx 0x5
and edx 0x1f
shr esi 0x5
inc edx
mov [ esp + 0x20 ] edx
cmp ebx 0x4
jae r-xdata
dec [ rw-data ]
js r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov ebp esi
sub ebx 0x4
and ebp 0xf
shr esi 0x4
add ebp 0x4
cmp [ esp + 0x1c ] 0x120
ja r-xdata
dec [ rw-data ]
js r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x5
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x20 ] 0x20
jbe r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x5
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
add esp 0x524
pop ebp
pop edi
pop esi
pop ebx
retn
xor edi edi
cmp ebp edi
jbe r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x4
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp edi 0x13
jae r-xdata
cmp ebx 0x3
jae r-xdata
mov [ esp + 0x14 ] 0x7
push 0x0
push 0x0
lea eax [ esp + 0x14 ]
mov ecx 0x13
push eax
lea edx [ esp + 0x20 ]
push edx
mov edx 0x13
lea eax [ esp + 0x34 ]
call sub_408fd4
mov [ esp ] eax
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov edx [ edi * 4 + rw-data ]
xor ecx ecx
mov [ esp + edx * 4 + 0x24 ] ecx
inc edi
cmp edi 0x13
jb r-xdata
mov eax [ edi * 4 + rw-data ]
mov edx esi
shr esi 0x3
and edx 0x7
inc edi
sub ebx 0x3
cmp ebp edi
mov [ esp + eax * 4 + 0x24 ] edx
ja r-xdata
dec [ rw-data ]
js r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp ] 0x1
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov edx [ esp + 0x1c ]
add edx [ esp + 0x20 ]
mov [ esp + 0x8 ] edx
xor edx edx
mov ecx [ esp + 0x14 ]
mov ebp edx
movzx eax [ ecx * 2 + rw-data ]
mov [ esp + 0x4 ] eax
mov [ esp ] edx
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x3
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x8 ]
jb r-xdata
mov eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
call sub_40945c
cmp ebx [ esp + 0x14 ]
jb r-xdata
mov eax [ esp + 0xc ]
call sub_40945c
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov edx [ rw-data ]
mov [ esp + 0x14 ] edx
push rw-data
push rw-data
lea ecx [ esp + 0x14 ]
push ecx
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x34 ]
mov ecx 0x101
mov edx [ esp + 0x2c ]
call sub_408fd4
mov [ esp ] eax
cmp [ esp + 0x14 ] 0x0
jne r-xdata
dec [ rw-data ]
js r-xdata
mov edx [ esp + 0x4 ]
and edx esi
shl edx 0x3
add edx [ esp + 0xc ]
mov [ esp + 0x10 ] edx
movzx edi [ edx + 0x1 ]
mov eax [ esp + 0x10 ]
sub ebx edi
mov ecx edi
shr esi cl
movzx edi [ eax + 0x4 ]
cmp edi 0x10
jae r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp ] 0x1
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
cmp edi 0x10
jne r-xdata
mov ebp edi
mov eax [ esp ]
mov [ esp + eax * 4 + 0x24 ] edi
inc [ esp ]
jmp r-xdata
mov edx [ rw-data ]
mov [ esp + 0x18 ] edx
push rw-data
push rw-data
lea ecx [ esp + 0x18 ]
push ecx
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x2c ]
shl eax 0x2
lea edx [ esp + 0x34 ]
add eax edx
xor ecx ecx
mov edx [ esp + 0x30 ]
call sub_408fd4
mov [ esp ] eax
cmp [ esp + 0x18 ] 0x0
jne r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp edi 0x11
jne r-xdata
cmp ebx 0x2
jae r-xdata
cmp [ esp ] 0x1
jne r-xdata
cmp [ esp + 0x1c ] 0x101
jbe r-xdata
mov eax [ esp ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
jae r-xdata
cmp ebx 0x3
jae r-xdata
mov edi esi
mov eax [ esp ]
and edi 0x3
sub ebx 0x2
add edi 0x3
shr esi 0x2
add eax edi
cmp eax [ esp + 0x8 ]
jbe r-xdata
dec [ rw-data ]
js r-xdata
cmp [ esp ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0xc ]
call sub_40945c
push 0x1
mov edx rw-data
mov eax rw-data
mov ecx 0x15
call [ rw-data ]
mov edi esi
mov eax [ esp ]
and edi 0x7f
sub ebx 0x7
add edi 0xb
shr esi 0x7
add eax edi
cmp eax [ esp + 0x8 ]
jbe r-xdata
dec [ rw-data ]
js r-xdata
mov edi esi
mov eax [ esp ]
and edi 0x7
sub ebx 0x3
add edi 0x3
shr esi 0x3
add eax edi
cmp eax [ esp + 0x8 ]
jbe r-xdata
dec [ rw-data ]
js r-xdata
mov ecx edi
add edi 0xffffffff
test ecx ecx
jne r-xdata
mov eax 0x1
jmp r-xdata
call sub_40976c
mov edx [ rw-data ]
inc [ rw-data ]
xor eax eax
mov al [ edx ]
jmp r-xdata
push [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
call sub_408b30
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
call sub_40945c
mov eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
call sub_40945c
mov eax 0x1
jmp r-xdata
push 0x1
mov edx rw-data
mov eax rw-data
mov ecx 0x15
call [ rw-data ]
mov eax edi
add edi 0xffffffff
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov eax edi
add edi 0xffffffff
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov edx [ esp ]
mov [ esp + edx * 4 + 0x24 ] ebp
inc [ esp ]
jmp r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x2
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0xc ]
call sub_40945c
mov eax [ esp + 0x10 ]
call sub_40945c
xor eax eax
mov eax 0x1
jmp r-xdata
mov edx [ esp ]
xor ecx ecx
mov [ esp + edx * 4 + 0x24 ] ecx
inc [ esp ]
xor ebp ebp
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x7
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp ]
xor ecx ecx
mov [ esp + edx * 4 + 0x24 ] ecx
inc [ esp ]
xor ebp ebp
jmp r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x3
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_408a55
push ebx
push esi
push edi
mov edi eax
mov esi [ rw-data ]
mov ebx [ rw-data ]
cmp ebx 0x1
jae r-xdata
mov edx esi
dec ebx
shr esi 0x1
and edx 0x1
mov [ edi ] edx
cmp ebx 0x2
jae r-xdata
dec [ rw-data ]
js r-xdata
mov eax esi
sub ebx 0x2
shr esi 0x2
and eax 0x3
mov [ rw-data ] esi
mov [ rw-data ] ebx
cmp eax 0x2
jne r-xdata
dec [ rw-data ]
js r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
test eax eax
jne r-xdata
call sub_4084d5
jmp r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x1
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
jne r-xdata
call sub_40824c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x8
cmp ebx 0x2
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax 0x2
call sub_4083a0
jmp r-xdata
sub_408b30
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edi [ rw-data ]
mov [ ebp - 0x18 ] eax
mov ebx [ rw-data ]
mov edx [ ebp - 0xc ]
movzx ecx [ edx * 2 + rw-data ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
movzx edx [ eax * 2 + rw-data ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
dec [ rw-data ]
js r-xdata
mov edx [ ebp - 0x20 ]
and edx edi
shl edx 0x3
add edx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] edx
movzx esi [ edx ]
cmp esi 0x10
jbe r-xdata
call sub_40976c
mov ecx [ rw-data ]
inc [ rw-data ]
xor eax eax
mov al [ ecx ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
xor edx edx
mov al [ eax + 0x1 ]
mov ecx eax
mov dl al
shr edi cl
sub ebx edx
cmp esi 0x10
jne r-xdata
cmp esi 0x63
jne r-xdata
mov ecx ebx
shl eax cl
or edi eax
add ebx 0x8
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp esi 0xf
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov dl [ eax + 0x4 ]
mov [ ecx + rw-data ] dl
inc [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x8000
jne r-xdata
mov edx [ ebp - 0x1c ]
sub esi 0x10
mov al [ edx + 0x1 ]
xor edx edx
mov ecx eax
mov dl al
shr edi cl
sub ebx edx
cmp esi ebx
jbe r-xdata
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x18 ]
xor eax eax
mov [ rw-data ] edx
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp esi ebx
jbe r-xdata
mov eax rw-data
xor ecx ecx
mov edx [ ebp - 0x18 ]
call sub_409830
xor eax eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x4 ]
movzx edx [ esi * 2 + rw-data ]
and edx edi
shl edx 0x3
add eax edx
mov [ ebp - 0x1c ] eax
xor edx edx
mov dl [ eax ]
mov esi edx
cmp edx 0x10
ja r-xdata
dec [ rw-data ]
js r-xdata
mov edx [ ebp - 0x1c ]
mov ecx esi
movzx eax [ edx + 0x4 ]
movzx edx [ esi * 2 + rw-data ]
and edx edi
shr edi cl
add eax edx
sub ebx esi
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec [ rw-data ]
js r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
call sub_40976c
mov edx [ rw-data ]
inc [ rw-data ]
xor eax eax
mov al [ edx ]
jmp r-xdata
mov ecx ebx
shl eax cl
or edi eax
add ebx 0x8
cmp esi ebx
ja r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
dec [ rw-data ]
js r-xdata
mov edx [ ebp - 0x24 ]
and edx edi
shl edx 0x3
add edx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] edx
movzx esi [ edx ]
cmp esi 0x10
jbe r-xdata
mov ecx ebx
shl eax cl
or edi eax
add ebx 0x8
cmp esi ebx
ja r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
xor edx edx
mov al [ eax + 0x1 ]
mov ecx eax
mov dl al
shr edi cl
sub ebx edx
cmp esi ebx
jbe r-xdata
cmp esi 0x63
jne r-xdata
mov ecx ebx
shl eax cl
or edi eax
add ebx 0x8
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1c ]
movzx ecx [ esi * 2 + rw-data ]
movzx eax [ edx + 0x4 ]
mov edx [ ebp - 0x18 ]
and ecx edi
sub edx eax
sub edx ecx
mov ecx esi
shr edi cl
sub ebx esi
mov [ ebp - 0x14 ] edx
dec [ rw-data ]
js r-xdata
mov edx [ ebp - 0x1c ]
sub esi 0x10
mov al [ edx + 0x1 ]
xor edx edx
mov ecx eax
mov dl al
shr edi cl
sub ebx edx
cmp esi ebx
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x4 ]
movzx edx [ esi * 2 + rw-data ]
and edx edi
shl edx 0x3
add eax edx
mov [ ebp - 0x1c ] eax
xor edx edx
mov dl [ eax ]
mov esi edx
cmp edx 0x10
ja r-xdata
dec [ rw-data ]
js r-xdata
mov eax esi
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov esi 0x8000
sub esi edx
cmp esi [ ebp - 0x10 ]
jbe r-xdata
mov ecx ebx
shl eax cl
or edi eax
add ebx 0x8
cmp esi ebx
ja r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_40976c
mov eax [ rw-data ]
inc [ rw-data ]
movzx eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov dl [ eax + rw-data ]
mov [ ecx + rw-data ] dl
inc [ ebp - 0x14 ]
inc [ ebp - 0x18 ]
dec esi
jne r-xdata
mov edx rw-data
mov eax rw-data
add edx [ ebp - 0x14 ]
add eax [ ebp - 0x18 ]
mov ecx esi
call sub_406bd8
add [ ebp - 0x18 ] esi
add [ ebp - 0x14 ] esi
jmp r-xdata
mov esi eax
sub [ ebp - 0x10 ] eax
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x14 ]
cmp esi edx
ja r-xdata
mov ecx ebx
shl eax cl
or edi eax
add ebx 0x8
cmp esi ebx
ja r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x18 ] 0x8000
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax rw-data
xor ecx ecx
mov edx [ ebp - 0x18 ]
call sub_409830
xor eax eax
mov [ ebp - 0x18 ] eax
and [ ebp - 0x14 ] 0x7fff
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jbe r-xdata
jmp r-xdata
sub_408f0c
push ebx
push esi
push edi
push ecx
mov esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
xor edx edx
mov [ rw-data ] edx
xor ecx ecx
mov [ rw-data ] ecx
xor ebx ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
sub eax [ rw-data ]
add eax [ edx ]
mov edx [ rw-data ]
call sub_40351c
call sub_4029c0
mov eax [ rw-data ]
cmp ebx eax
jae r-xdata
mov eax 0x1
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x0
je r-xdata
mov ebx eax
xor eax eax
mov [ rw-data ] eax
mov eax esp
call sub_408a55
mov edi eax
test eax eax
je r-xdata
mov eax rw-data
xor ecx ecx
mov edx [ rw-data ]
call sub_409830
xor eax eax
sub_408fd4
push ebp
mov ebp esp
add esp 0xfffffa34
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x8 ] 0x100
jbe r-xdata
mov ecx 0x10
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x400 ]
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ edx ]
inc [ ebp + ecx * 4 - 0x84 ]
add [ ebp - 0x28 ] 0x4
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x84 ]
mov ecx 0x44
xor edx edx
call sub_406bc4
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov ebx 0x1
mov edx [ ebp + 0xc ]
xor ecx ecx
mov [ edx ] ecx
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
xor eax eax
jmp r-xdata
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp ebx [ eax ]
jbe r-xdata
inc ebx
cmp ebx 0x10
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x1c ] 0x10
mov edx [ ebp + 0x8 ]
mov [ edx ] ebx
cmp [ ebp + ebx * 4 - 0x84 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
cmp ecx [ ebp - 0x1c ]
jbe r-xdata
dec [ ebp - 0x1c ]
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
mov [ ebp - 0x3c ] eax
cmp ebx [ ebp - 0x1c ]
jae r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ eax ] edx
mov ecx [ ebp - 0x1c ]
cmp [ ebp + ecx * 4 - 0x84 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp + ecx * 4 - 0x84 ]
mov [ ebp - 0x3c ] eax
test eax eax
jge r-xdata
mov edx [ ebp - 0x3c ]
sub edx [ ebp + ebx * 4 - 0x84 ]
mov [ ebp - 0x3c ] edx
test edx edx
jge r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
add [ ebp + edx * 4 - 0x84 ] ecx
xor eax eax
mov [ ebp - 0x5c8 ] eax
lea edx [ ebp - 0x80 ]
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x5c4 ]
mov ebx eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
shl [ ebp - 0x3c ] 0x1
inc ebx
cmp ebx [ ebp - 0x1c ]
jb r-xdata
mov eax 0x2
jmp r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x28 ]
add [ ebp - 0x28 ] 0x4
add ebx [ eax ]
mov [ edx ] ebx
add edx 0x4
lea eax [ ebp - 0x588 ]
mov ecx 0x480
xor edx edx
call sub_406bc4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] edx
inc [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x8 ]
jb r-xdata
mov eax [ ebp + ebx * 4 - 0x5cc ]
inc [ ebp + ebx * 4 - 0x5cc ]
mov edx [ ebp - 0x1c ]
mov [ ebp + eax * 4 - 0x588 ] edx
mov ecx [ ebp - 0x28 ]
add [ ebp - 0x28 ] 0x4
mov ebx [ ecx ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x18 ]
xor ecx ecx
or esi 0xffffffff
mov edx [ ebp + eax * 4 - 0x5cc ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x5cc ] ecx
lea eax [ ebp - 0x588 ]
mov [ ebp - 0x28 ] eax
xor edx edx
mov eax [ ebp - 0x24 ]
xor ecx ecx
mov [ eax - 0x4 ] edx
xor eax eax
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x108 ] eax
xor eax eax
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x18 ]
jg r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx ] edx
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp + ecx * 4 - 0x84 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov edx [ ebp - 0x10 ]
add [ ebp - 0x10 ] 0xffffffff
test edx edx
jne r-xdata
mov eax 0x1
mov edx [ ebp - 0x24 ]
mov eax [ edx + esi * 4 ]
mov edx eax
add edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x20 ]
jl r-xdata
inc [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x18 ]
jle r-xdata
mov edx [ ebp - 0x24 ]
add [ ebp - 0x38 ] eax
inc esi
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x38 ]
mov [ ebp - 0x40 ] ecx
mov eax [ ebp + 0x8 ]
cmp ecx [ eax ]
jbe r-xdata
mov cl [ ebp - 0x20 ]
sub cl [ ebp - 0x38 ]
mov [ ebp - 0x33 ] cl
mov eax [ ebp - 0x8 ]
shl eax 0x2
lea edx [ ebp - 0x588 ]
add eax edx
cmp eax [ ebp - 0x28 ]
ja r-xdata
mov eax [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov eax [ ecx ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov [ ebp - 0x34 ] 0x63
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov edx eax
add edx ebx
cmp edx [ ebp - 0x14 ]
jbe r-xdata
sub eax edx
mov edx [ ebp - 0x20 ]
shl edx 0x2
lea ecx [ ebp - 0x84 ]
add edx ecx
jmp r-xdata
mov [ ebp - 0x40 ] eax
mov eax 0x1
mov ebx [ ebp - 0x20 ]
mov edx [ ebp - 0x10 ]
sub ebx [ ebp - 0x38 ]
inc edx
mov ecx ebx
shl eax cl
cmp eax edx
jbe r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
sub eax [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
mov cl [ edx + eax * 2 ]
mov [ ebp - 0x34 ] cl
mov edx [ ebp + 0x14 ]
mov ax [ edx + eax * 2 ]
mov [ ebp - 0x30 ] ax
add [ ebp - 0x28 ] 0x4
cmp eax 0x100
jae r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x38 ]
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x38 ]
mov ebx [ ebp - 0x1c ]
shr ebx cl
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
mov [ ebp - 0x40 ] eax
mov edx [ ebp - 0x24 ]
mov [ edx + esi * 4 ] ebx
mov edi [ ebp - 0x40 ]
inc edi
mov eax edi
shl eax 0x3
call sub_4069c4
mov [ ebp - 0x2c ] eax
test eax eax
jne r-xdata
cmp eax [ ebp - 0x14 ]
jae r-xdata
inc ebx
cmp ebx [ ebp - 0x40 ]
jb r-xdata
mov ecx [ ebp - 0x20 ]
dec ecx
mov ebx 0x1
shl ebx cl
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
mov [ edx + ebx * 8 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ edx + ebx * 8 + 0x4 ] ecx
add ebx eax
cmp ebx [ ebp - 0x40 ]
jb r-xdata
mov dl 0xf
mov dl 0x10
jmp r-xdata
add [ rw-data ] edi
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x2c ]
add edx 0x8
mov [ ecx ] edx
xor edx edx
mov eax [ ebp - 0x2c ]
add eax 0x4
mov [ ebp + 0xc ] eax
mov [ eax ] edx
add [ ebp - 0x2c ] 0x8
mov ecx [ ebp - 0x2c ]
test esi esi
mov [ ebp + esi * 4 - 0x108 ] ecx
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebp - 0x14 ]
sub ebx eax
add eax eax
add edx 0x4
cmp eax [ edx ]
jbe r-xdata
test [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x34 ] dl
mov eax [ ebp - 0x28 ]
mov cx [ eax ]
mov [ ebp - 0x30 ] cx
add [ ebp - 0x28 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
add bl 0x10
mov [ ebp + esi * 4 - 0x5cc ] eax
mov edx [ ebp - 0x24 ]
mov cl [ edx + esi * 4 - 0x4 ]
mov [ ebp - 0x33 ] cl
mov [ ebp - 0x34 ] bl
mov eax [ ebp - 0x2c ]
mov ebx 0x1
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
dec ebx
sub ecx [ eax + esi * 4 - 0x4 ]
and ebx [ ebp - 0x1c ]
shr ebx cl
mov edx [ ebp + esi * 4 - 0x10c ]
mov eax [ ebp - 0x34 ]
mov [ edx + ebx * 8 ] eax
mov eax [ ebp - 0x30 ]
mov [ edx + ebx * 8 + 0x4 ] eax
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0x108 ]
call sub_40945c
sub eax [ edx ]
xor [ ebp - 0x1c ] ebx
shr ebx 0x1
xor [ ebp - 0x1c ] ebx
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov eax 0x1
shl eax cl
dec eax
and eax [ ebp - 0x1c ]
cmp eax [ ebp + esi * 4 - 0x5cc ]
jne r-xdata
dec esi
mov eax [ ebp - 0x24 ]
mov edx [ eax + esi * 4 ]
sub [ ebp - 0x38 ] edx
sub_409478
mov eax rw-data
mov ecx 0xca48
xor edx edx
call sub_406bc4
mov [ rw-data ] 0xffffffff
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
xor eax eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov eax rw-data
mov [ rw-data ] sub_409894
retn
sub_409504
push ebx
mov edx rw-data
mov eax [ rw-data ]
call sub_406aa8
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
mov ecx 0x2
xor edx edx
mov eax [ rw-data ]
call sub_406b8c
mov eax [ rw-data ]
call sub_406bb0
mov [ rw-data ] eax
xor ecx ecx
xor edx edx
mov eax [ rw-data ]
call sub_406b8c
xor eax eax
pop ebx
retn
push [ rw-data ]
mov eax 0x6d
call sub_402944
push eax
call sub_402efc
add esp 0x8
mov eax 0x1
pop ebx
retn
sub_409574
mov edx rw-data
mov eax rw-data
call sub_406aa8
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
retn
push 0x0
push rw-data
call SetFileAttributesA
mov edx rw-data
mov eax rw-data
call sub_406aa8
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax rw-data
mov edx 0x9
call sub_4067b8
push rw-data
mov eax 0x6e
call sub_402944
push eax
call sub_402efc
add esp 0x8
mov eax 0x1
retn
sub_4095e0
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
add [ rw-data ] eax
cmp [ rw-data ] 0x0
jge r-xdata
add eax [ rw-data ]
mov [ rw-data ] eax
mov edx [ rw-data ]
sub edx [ rw-data ]
xor ecx ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
retn
retn
xor eax eax
mov [ rw-data ] eax
sub_409630
mov eax [ rw-data ]
cmp eax [ rw-data ]
jge r-xdata
xor ecx ecx
mov [ rw-data ] ecx
test eax eax
jge r-xdata
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
mov eax [ rw-data ]
sub eax [ rw-data ]
mov [ rw-data ] eax
mov edx [ rw-data ]
mov [ rw-data ] edx
jmp r-xdata
xor edx edx
mov [ rw-data ] edx
mov eax [ rw-data ]
sub [ rw-data ] eax
retn
sub_409690
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
mov ebp esi
test esi esi
je r-xdata
mov eax ebp
cmp [ rw-data ] 0x0
jg r-xdata
cmp esi [ rw-data ]
jae r-xdata
push [ rw-data ]
mov ecx 0x2000
mov edx 0x1
mov eax [ rw-data ]
call sub_406b54
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
mov ebx [ rw-data ]
mov ebx esi
jmp r-xdata
test ebx ebx
jge r-xdata
mov eax ebp
sub eax esi
jmp r-xdata
mov ecx ebx
mov edx [ rw-data ]
mov eax edi
call sub_406bd8
mov eax ebx
sub esi ebx
add [ rw-data ] eax
add edi eax
mov edx [ rw-data ]
sub edx ebx
test esi esi
mov [ rw-data ] edx
jne r-xdata
add [ rw-data ] 0x2000
mov edx [ rw-data ]
mov [ rw-data ] edx
push rw-data
push rw-data
call sub_402efc
add esp 0x8
mov eax 0x75
push rw-data
call sub_402944
push eax
call sub_402efc
add esp 0x8
xor eax eax
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40976c
push ebx
push esi
cmp [ rw-data ] 0x0
jg r-xdata
cmp [ rw-data ] 0x0
jg r-xdata
dec [ rw-data ]
xor eax eax
mov [ rw-data ] eax
or eax 0xffffffff
pop esi
pop ebx
retn
mov ecx [ rw-data ]
test [ ecx + 0x14 ] 0x1
je r-xdata
push [ rw-data ]
mov ecx 0x2000
mov edx 0x1
mov eax [ rw-data ]
call sub_406b54
mov [ rw-data ] eax
test eax eax
jne r-xdata
dec [ rw-data ]
mov ecx [ rw-data ]
inc [ rw-data ]
xor eax eax
mov al [ ecx ]
pop esi
pop ebx
retn
mov esi [ rw-data ]
mov ebx [ rw-data ]
jmp r-xdata
add [ rw-data ] 0x2000
mov edx [ rw-data ]
mov [ rw-data ] edx
call sub_409630
xor edx edx
or eax 0xffffffff
mov [ rw-data ] edx
pop esi
pop ebx
retn
mov edx esi
add esi 0xffffffff
test edx edx
jne r-xdata
call sub_40a9dc
xor [ ebx ] al
mov al [ ebx ]
and eax 0xff
call sub_40aa00
inc ebx
sub_409830
push ebx
push esi
mov ebx edx
mov esi eax
mov ecx ebx
mov edx esi
mov eax [ rw-data ]
call sub_40ac48
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
test ebx ebx
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_406b1c
cmp ebx eax
je r-xdata
mov eax 0x32
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
call sub_4094dc
pop esi
pop ebx
retn
sub_409894
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
xor ebx ebx
mov eax rw-data
cmp [ edx ] 0x0
jne r-xdata
dec [ edx ]
mov [ edx ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov ebx 0x5
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_4075e0
test eax eax
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0xc
mov ebx 0xfffffffe
sub_4098f4
push ebx
push esi
push edi
mov ebx eax
xor esi esi
test ebx ebx
jne r-xdata
sub edx 0x2
jb r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov ecx edx
mov eax [ rw-data ]
sub ecx eax
mov edi [ rw-data ]
sub edi [ rw-data ]
add ecx edi
add ebx ecx
add ebx eax
mov eax ebx
mov ebx eax
and ebx 0x80001fff
jns r-xdata
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
sub edi ebx
test eax eax
jge r-xdata
dec ebx
or ebx 0xffffe000
inc ebx
xor edi edi
cmp ebx 0x104
jb r-xdata
dec edx
je r-xdata
cmp edx edi
je r-xdata
mov eax 0x3
jmp r-xdata
mov eax rw-data
mov edx ebx
call sub_409690
test eax eax
jne r-xdata
mov edi ebx
mov ebx 0x103
sub di 0x104
mov esi 0x1
inc edi
mov eax [ rw-data ]
test eax eax
je r-xdata
sub edx 0x2
je r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
sub ecx ebx
add [ rw-data ] ecx
add ebx [ rw-data ]
mov [ rw-data ] ebx
jmp r-xdata
xor ecx ecx
mov edx edi
mov eax [ rw-data ]
call sub_406b8c
mov eax [ rw-data ]
call sub_406bb0
mov [ rw-data ] eax
push [ rw-data ]
mov ecx 0x2000
mov edx 0x1
mov eax [ rw-data ]
call sub_406b54
mov [ rw-data ] eax
test eax eax
jg r-xdata
mov [ ebx + rw-data ] 0x0
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
mov eax 0x33
jmp r-xdata
mov eax ebx
call sub_4069c4
mov [ rw-data ] eax
test eax eax
jne r-xdata
call sub_4069d8
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
add edx ebx
mov [ rw-data ] edx
sub [ rw-data ] ebx
jmp r-xdata
mov eax 0x33
jmp r-xdata
push rw-data
push rw-data
call OemToCharA
jmp r-xdata
cmp eax 0x6
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_409690
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov ecx edx
mov eax [ rw-data ]
sub ecx eax
mov edi [ rw-data ]
sub edi [ rw-data ]
add ecx edi
add ebx ecx
add ebx eax
mov eax ebx
mov ebx eax
and ebx 0x80001fff
jns r-xdata
test di di
je r-xdata
mov edx [ rw-data ]
cmp [ edx + 0xc ] 0xb
jne r-xdata
mov eax 0x33
jmp r-xdata
mov edi eax
sub edi ebx
test eax eax
jge r-xdata
dec ebx
or ebx 0xffffe000
inc ebx
movzx ebx di
mov ecx rw-data
cmp ecx rw-data
je r-xdata
cmp [ rw-data ] 0x32
jne r-xdata
cmp edx edi
je r-xdata
mov eax 0x3
jmp r-xdata
mov edx rw-data
mov eax rw-data
call sub_406ca0
mov ecx [ rw-data ]
sub ecx [ rw-data ]
sub ecx ebx
add [ rw-data ] ecx
add ebx [ rw-data ]
mov [ rw-data ] ebx
jmp r-xdata
xor ecx ecx
mov edx edi
mov eax [ rw-data ]
call sub_406b8c
mov eax [ rw-data ]
call sub_406bb0
mov [ rw-data ] eax
push [ rw-data ]
mov ecx 0x2000
mov edx 0x1
mov eax [ rw-data ]
call sub_406b54
mov [ rw-data ] eax
test eax eax
jg r-xdata
mov edx [ rw-data ]
add edx ebx
mov [ rw-data ] edx
sub [ rw-data ] ebx
jmp r-xdata
mov eax 0x33
jmp r-xdata
sub_409bb4
xor edx edx
xor ecx ecx
mov cl [ eax + 0x2 ]
mov dl [ eax + 0x3 ]
shl ecx 0x10
shl edx 0x18
add edx ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
movzx eax [ eax ]
shl ecx 0x8
add edx ecx
add edx eax
mov eax edx
retn
sub_409bd8
push esi
mov esi rw-data
movzx edx [ esi + 0xc710 ]
mov eax [ esi + 0x698 ]
and edx 0x1
add eax 0x14
and dl 0x1
mov cl [ eax ]
and cl 0xfe
or dl cl
mov [ eax ] dl
movzx edx [ esi + 0xc710 ]
mov eax [ esi + 0x698 ]
and edx 0x8
add eax 0x14
cmp edx 0x8
sete dl
and edx 0x1
mov cl [ eax ]
and dl 0x1
and cl 0xfd
add edx edx
or dl cl
mov [ eax ] dl
movzx edx [ esi + 0xc72c ]
mov eax [ esi + 0x698 ]
and edx 0x1
add eax 0x14
and dl 0x1
shl edx 0x2
mov cl [ eax ]
and cl 0xfb
or dl cl
mov [ eax ] dl
mov eax [ esi + 0x698 ]
mov edx [ esi + 0xc718 ]
mov [ eax + 0x8 ] edx
mov ecx [ esi + 0xc71c ]
mov [ eax + 0x4 ] ecx
and [ eax + 0x14 ] 0xf7
cmp [ esi + 0xc70f ] 0x2
jne r-xdata
cmp [ esi + 0xc70e ] 0x14
jbe r-xdata
cmp [ esi + 0xc70e ] 0x2a
jbe r-xdata
mov ax [ esi + 0xc712 ]
test ax ax
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
call sub_406f88
mov edx [ esi + 0x698 ]
mov ecx [ esi + 0xc734 ]
mov [ edx ] ecx
mov eax 0x1
pop esi
retn
cmp ax 0x8
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x34 ] 0x0
jne r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x34 ] 0x0
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
lea edx [ esi + 0xc7b0 ]
mov eax 0x6c
push edx
call sub_402944
push eax
call sub_402efc
add esp 0x8
cmp [ esi + 0x34 ] 0x0
jne r-xdata
xor eax eax
pop esi
retn
lea eax [ esi + 0xc7b0 ]
push eax
mov eax 0x6c
call sub_402944
push eax
call sub_402efc
add esp 0x8
cmp [ esi + 0x34 ] 0x0
jne r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x34 ] 0x0
jne r-xdata
lea edx [ esi + 0xc7b0 ]
mov eax 0x6c
push edx
call sub_402944
push eax
call sub_402efc
add esp 0x8
cmp [ esi + 0x34 ] 0x0
jne r-xdata
xor eax eax
pop esi
retn
sub_409d4e
xor eax eax
xor edx edx
mov [ rw-data ] eax
push ebx
xor ebx ebx
mov [ rw-data ] edx
xor ecx ecx
push esi
mov [ rw-data ] 0x1
mov [ rw-data ] ecx
push edi
call sub_409574
test eax eax
je r-xdata
call sub_409630
mov dx [ rw-data ]
sub dx 0x1
jb r-xdata
mov eax 0x32
jmp r-xdata
mov edi 0x8000
mov [ rw-data ] rw-data
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
sub dx 0x7
je r-xdata
pop edi
pop esi
pop ebx
retn
dec [ rw-data ]
js r-xdata
call sub_408f0c
mov esi eax
test eax eax
je r-xdata
jmp r-xdata
call sub_40976c
mov esi eax
mov edx [ rw-data ]
inc [ rw-data ]
movzx esi [ edx ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push rw-data
push rw-data
call sub_402efc
add esp 0x8
cmp esi 0x3
jne r-xdata
push rw-data
mov eax 0x6c
call sub_402944
push eax
call sub_402efc
add esp 0x8
call sub_4095e0
mov eax 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp esi 0xffffffff
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_406ed0
mov eax 0x78
mov eax 0x6b
jmp r-xdata
mov edx rw-data
xor ecx ecx
xchg edx eax
call sub_409830
jmp r-xdata
mov edx esi
mov ecx [ rw-data ]
inc [ rw-data ]
mov [ ecx ] dl
inc [ rw-data ]
mov eax [ rw-data ]
cmp edi eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax rw-data
call sub_406d90
mov ebx 0x2
jmp r-xdata
mov ebx 0x6
jmp r-xdata
call sub_402944
push eax
call sub_402efc
pop ecx
cmp esi 0x3
jne r-xdata
call sub_4029c0
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x1
jle r-xdata
dec eax
jle r-xdata
mov eax rw-data
xor ecx ecx
mov edx [ rw-data ]
call sub_409830
mov [ rw-data ] rw-data
xor eax eax
mov [ rw-data ] eax
mov edx [ rw-data ]
cmp edx [ rw-data ]
je r-xdata
call sub_4095e0
mov eax ebx
jmp r-xdata
mov ebx 0x1
mov eax rw-data
call sub_406d90
push rw-data
push rw-data
call sub_402efc
add esp 0x8
mov eax 0x74
call sub_402944
push eax
call sub_402efc
pop ecx
mov ebx 0x32
jmp r-xdata
cmp [ rw-data ] 0x0
mov ecx [ rw-data ]
test [ ecx + 0x14 ] 0x1
je r-xdata
mov eax rw-data
mov edx 0x3
call sub_4067b8
push rw-data
mov eax 0x71
call sub_402944
push eax
call sub_402efc
add esp 0x8
push rw-data
mov eax 0x70
call sub_402944
push eax
call sub_402efc
add esp 0x8
jmp r-xdata
call sub_4095e0
mov eax ebx
mov eax rw-data
call sub_406d90
mov ebx 0x2
jmp r-xdata
sub_409fc0
push ebx
push esi
push edi
push ebp
add esp 0xfffffed0
xor eax eax
mov edi rw-data
xor esi esi
mov [ esp + 0x18 ] 0xffffffff
mov [ esp + 0x1c ] eax
xor eax eax
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x22 ] 0x0
mov [ esp + 0x28 ] eax
lea edx [ edi + 0x98 ]
mov [ edi + 0x698 ] edx
mov bp [ edi + 0xc73e ]
mov [ edi + 0x68 ] 0x1
jmp r-xdata
test bp bp
je r-xdata
inc [ esp + 0x18 ]
cmp [ esp + 0x18 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ esp + 0x22 ]
cmp eax [ esp + 0x18 ]
jne r-xdata
cmp esi 0x1
jg r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
jbe r-xdata
cmp esi 0x1
jg r-xdata
cmp [ esp + 0x20 ] 0x0
jbe r-xdata
test bp bp
je r-xdata
cmp [ esp + 0x22 ] 0x0
jbe r-xdata
cmp esi 0x1
jg r-xdata
mov esi 0x52
jmp r-xdata
mov esi 0xb
jmp r-xdata
mov esi 0x51
jmp r-xdata
mov eax [ edi + 0xc6d0 ]
mov [ esp + 0x24 ] eax
xor eax eax
mov edx [ edi + 0xc6a8 ]
mov [ esp ] edx
mov ecx [ edi + 0xc6ac ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x4 ]
cmp edx [ esp + 0x8 ]
jge r-xdata
cmp [ esp + 0x8 ] 0x40
jl r-xdata
mov eax esi
test esi esi
jne r-xdata
mov esi 0x51
jmp r-xdata
xor ecx ecx
mov edx [ esp + 0x24 ]
mov eax [ edi + 0xc6c8 ]
call sub_406b8c
mov eax [ edi + 0xc6c8 ]
call sub_406bb0
mov [ edi + 0xc6d0 ] eax
push [ edi + 0xc6c8 ]
mov ecx 0x2000
mov edx 0x1
mov eax [ edi + 0xc6a4 ]
call sub_406b54
mov edx [ esp ]
mov [ edi + 0xc6a8 ] edx
mov ecx [ esp + 0xc ]
mov [ edi + 0xc6ac ] ecx
inc [ esp + 0x1c ]
mov ecx [ esp + 0x1c ]
shl ecx 0x6
add ecx [ esp + 0x4 ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x4 ]
shl eax 0x3
lea eax [ eax + eax * 2 ]
lea edx [ edi + 0x98 ]
add eax edx
mov [ edi + 0x698 ] eax
mov ecx [ eax ]
add ecx [ edi + 0xc6d4 ]
mov eax ecx
mov ebx eax
and ebx 0x80001fff
jns r-xdata
dec ebp
mov edx [ esp + 0x8 ]
shl edx 0x3
lea edx [ edx + edx * 2 ]
lea ecx [ edi + 0x98 ]
add edx ecx
mov [ edi + 0x698 ] edx
lea eax [ edi + 0x88 ]
mov edx 0x4
call sub_409690
test eax eax
jne r-xdata
mov esi 0x1
mov edx eax
sub edx ebx
test eax eax
jge r-xdata
dec ebx
or ebx 0xffffe000
inc ebx
lea edx [ edi + 0xc6e5 ]
lea eax [ edi + 0x88 ]
mov ecx 0x4
call sub_406cf4
test eax eax
je r-xdata
mov esi 0x33
xor ebp ebp
jmp r-xdata
test eax eax
jge r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi 0x2
cmp [ esp + 0x18 ] 0x0
jne r-xdata
call sub_407fd0
mov ebx eax
test eax eax
je r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi 0x3
xor ebp ebp
jmp r-xdata
cmp edx [ edi + 0xc6d0 ]
je r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi 0x3
jmp r-xdata
mov esi 0x3
jmp r-xdata
cmp [ edi + 0xc6d4 ] 0x0
je r-xdata
movzx eax [ edi + 0xc724 ]
mov edx 0x2
call sub_4098f4
mov ebx eax
test eax eax
je r-xdata
mov esi ebx
xor ebp ebp
jmp r-xdata
mov edx [ edi + 0xc6a8 ]
sub edx [ edi + 0xc6a4 ]
sub edx ebx
add [ edi + 0xc6ac ] edx
add ebx [ edi + 0xc6a4 ]
mov [ edi + 0xc6a8 ] ebx
xor ecx ecx
mov eax [ edi + 0xc6c8 ]
call sub_406b8c
mov eax [ edi + 0xc6c8 ]
call sub_406bb0
mov [ edi + 0xc6d0 ] eax
push [ edi + 0xc6c8 ]
mov ecx 0x2000
mov edx 0x1
mov eax [ edi + 0xc6a4 ]
call sub_406b54
mov [ edi + 0xc6ac ] eax
test eax eax
jg r-xdata
inc [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
cmp edx [ esp + 0x8 ]
jl r-xdata
mov eax [ edi + 0xc6d4 ]
xor edx edx
mov [ esp + 0x28 ] eax
mov [ edi + 0xc6d4 ] edx
mov ecx [ edi + 0x698 ]
mov eax [ ecx ]
mov ebx eax
and ebx 0x80001fff
jns r-xdata
movzx eax [ edi + 0xc726 ]
mov edx 0x3
call sub_4098f4
mov ebx eax
test eax eax
je r-xdata
cmp esi ebx
jge r-xdata
lea edx [ edi + 0xc6e0 ]
lea eax [ edi + 0x88 ]
mov ecx 0x4
call sub_406cf4
test eax eax
je r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi 0x3
jmp r-xdata
mov eax [ edi + 0xc6a4 ]
add eax ebx
mov [ edi + 0xc6a8 ] eax
sub [ edi + 0xc6ac ] ebx
jmp r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi 0x3
jmp r-xdata
mov edx eax
sub edx ebx
jmp r-xdata
dec ebx
or ebx 0xffffe000
inc ebx
movzx eax [ edi + 0xc728 ]
xor edx edx
call sub_4098f4
mov ebx eax
test eax eax
je r-xdata
cmp esi ebx
jge r-xdata
dec ebx
jle r-xdata
mov esi ebx
call sub_408154
mov ebx eax
test eax eax
je r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi 0x2
cmp [ esp + 0x18 ] 0x0
jne r-xdata
lea eax [ edi + 0x88 ]
mov edx 0x4
call sub_409690
test eax eax
jne r-xdata
cmp [ edi + 0x5c ] 0x0
je r-xdata
cmp esi ebx
jge r-xdata
dec ebx
jle r-xdata
mov esi ebx
lea eax [ edi + 0xc7b0 ]
push eax
mov eax 0x68
call sub_402944
push eax
call sub_402efc
add esp 0x8
xor ebp ebp
jmp r-xdata
movzx eax [ edi + 0xc708 ]
mov edx 0x2
call sub_4098f4
mov ebx eax
test eax eax
je r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi ebx
jmp r-xdata
cmp [ edi + 0xc6d4 ] 0x0
jne r-xdata
cmp [ edi + 0xc6d4 ] 0x0
jne r-xdata
call sub_409bd8
test eax eax
je r-xdata
dec ebx
jle r-xdata
mov esi ebx
lea eax [ edi + 0xc7b0 ]
push eax
mov eax 0x68
call sub_402944
push eax
call sub_402efc
add esp 0x8
xor ebp ebp
jmp r-xdata
mov eax [ edi + 0xc6d8 ]
test eax eax
je r-xdata
cmp esi ebx
jge r-xdata
cmp [ esp + 0x28 ] 0x0
je r-xdata
mov eax [ edi + 0xc6d4 ]
test eax eax
je r-xdata
inc [ esp + 0x20 ]
inc [ esp + 0x8 ]
jmp r-xdata
lea eax [ edi + 0xc7b0 ]
push eax
mov eax 0x68
call sub_402944
push eax
call sub_402efc
add esp 0x8
xor ebp ebp
jmp r-xdata
movzx eax [ edi + 0xc70a ]
mov edx 0x3
call sub_4098f4
mov ebx eax
test eax eax
je r-xdata
call sub_4069d8
xor edx edx
mov [ edi + 0xc6d8 ] edx
dec ebx
jle r-xdata
mov esi ebx
mov ecx [ esp + 0x28 ]
mov [ edi + 0xc6d4 ] ecx
mov [ esp + 0x28 ] eax
xor edx edx
mov [ edi + 0xc6d4 ] edx
jmp r-xdata
lea eax [ edi + 0xc7b0 ]
xor edx edx
call sub_402f48
test eax eax
je r-xdata
cmp esi ebx
jge r-xdata
lea eax [ edi + 0xc7b0 ]
push eax
mov eax 0x68
call sub_402944
push eax
call sub_402efc
add esp 0x8
jmp r-xdata
mov edx eax
sub edx ebx
test eax eax
jge r-xdata
dec ebx
or ebx 0xffffe000
inc ebx
mov eax [ edi + 0x698 ]
mov eax [ eax ]
add eax [ edi + 0xc6d4 ]
mov ebx eax
and ebx 0x80001fff
jns r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
dec ebx
jle r-xdata
mov esi ebx
cmp edx [ edi + 0xc6d0 ]
je r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ edi + 0x698 ]
test [ ecx + 0x14 ] 0x1
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc7b0 ]
push eax
mov eax 0x68
call sub_402944
push eax
call sub_402efc
add esp 0x8
jmp r-xdata
mov ecx [ edi + 0xc6a8 ]
sub ecx [ edi + 0xc6a4 ]
sub ecx ebx
add [ edi + 0xc6ac ] ecx
add ebx [ edi + 0xc6a4 ]
mov [ edi + 0xc6a8 ] ebx
xor ecx ecx
mov eax [ edi + 0xc6c8 ]
call sub_406b8c
mov eax [ edi + 0xc6c8 ]
call sub_406bb0
mov [ edi + 0xc6d0 ] eax
push [ edi + 0xc6c8 ]
mov ecx 0x2000
mov edx 0x1
mov eax [ edi + 0xc6a4 ]
call sub_406b54
mov [ edi + 0xc6ac ] eax
test eax eax
jg r-xdata
add esp 0x130
pop ebp
pop edi
pop esi
pop ebx
retn
xor edx edx
mov [ edi + 0xc780 ] edx
call sub_409d4e
mov ebx eax
test eax eax
je r-xdata
call sub_40aaa4
mov ebx eax
test eax eax
je r-xdata
xor ecx ecx
mov [ esp + 0x10 ] ecx
lea edx [ edi + 0xc6e0 ]
lea eax [ edi + 0x88 ]
mov ecx 0x4
call sub_406cf4
test eax eax
je r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi 0x3
jmp r-xdata
mov edx [ edi + 0xc6a4 ]
add edx ebx
mov [ edi + 0xc6a8 ] edx
sub [ edi + 0xc6ac ] ebx
jmp r-xdata
mov eax 0x33
jmp r-xdata
cmp esi ebx
jge r-xdata
cmp ebx 0x1
jne r-xdata
lea eax [ edi + 0xc7b0 ]
call sub_4098e0
sub eax 0xffffffff
je r-xdata
cmp ebx 0x4d
je r-xdata
mov eax 0x78
call sub_402944
push eax
call sub_402efc
pop ecx
mov esi 0x3
jmp r-xdata
lea eax [ edi + 0x88 ]
mov edx 0x4
call sub_409690
test eax eax
jne r-xdata
cmp [ edi + 0xc780 ] 0x1
jle r-xdata
mov esi ebx
cmp esi ebx
jge r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp ebx 0x4e
je r-xdata
mov eax esi
jmp r-xdata
lea eax [ edi + 0xc7b0 ]
push eax
mov eax 0x73
call sub_402944
push eax
call sub_402efc
add esp 0x8
jmp r-xdata
mov esi ebx
cmp [ edi + 0x38 ] 0x0
jne r-xdata
cmp [ edi + 0x34 ] 0x0
jne r-xdata
lea edx [ edi + 0xc7b0 ]
lea eax [ esp + 0x2c ]
call sub_406ca0
movzx ecx [ edi + 0xc6f8 ]
movzx edx [ edi + 0xc6f6 ]
shl ecx 0x10
lea eax [ edi + 0x8d ]
add edx ecx
push edx
lea edx [ esp + 0x30 ]
mov ecx [ edi + 0x78 ]
call sub_402f94
mov al [ edi + 0x8d ]
xor edx edx
mov dl al
cmp edx 0x43
je r-xdata
cmp [ edi + 0x28 ] 0x0
jne r-xdata
dec eax
je r-xdata
cmp ebx 0x2
jle r-xdata
lea edx [ edi + 0xc7b0 ]
mov eax 0x73
push edx
call sub_402944
push eax
call sub_402efc
add esp 0x8
cmp [ edi + 0x34 ] 0x0
jne r-xdata
inc [ esp + 0x22 ]
jmp r-xdata
sub al 0x41
je r-xdata
cmp [ edi + 0x2c ] 0x0
jne r-xdata
cmp [ edi + 0x28 ] 0x0
jne r-xdata
jmp r-xdata
cmp esi 0x2
jge r-xdata
mov [ edi + 0x2c ] 0x1
xor ecx ecx
mov [ edi + 0x28 ] ecx
jmp r-xdata
sub al 0xd
je r-xdata
mov [ esp + 0x14 ] 0x1
jmp r-xdata
cmp [ edi + 0x40 ] 0x0
je r-xdata
mov esi 0x2
jmp r-xdata
sub al 0x4
je r-xdata
cmp [ edi + 0x2c ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
lea edx [ esp + 0x2c ]
lea eax [ edi + 0xc7b0 ]
call sub_406ca0
lea eax [ edi + 0xc7b0 ]
call sub_406c20
xor edx edx
mov dl [ edi + eax + 0xc7af ]
cmp edx 0xa
jne r-xdata
sub al 0x7
je r-xdata
mov [ esp + 0x14 ] 0x1
test eax eax
je r-xdata
dec eax
mov [ edi + eax + 0xc7b0 ] 0x0
jmp r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
xor eax eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
call sub_406fa4
mov ebx eax
dec eax
jle r-xdata
sub_40a8b0
push ebx
push esi
push edi
mov edi eax
mov edx [ rw-data ]
mov eax edi
call sub_40a922
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov eax [ rw-data ]
call sub_406c20
inc eax
call sub_4069c4
mov esi eax
test eax eax
jne r-xdata
push esi
push [ rw-data ]
call CharToOemA
mov edx esi
mov eax edi
call sub_40a922
mov ebx eax
test ebx ebx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax esi
call sub_4069d8
push esi
push [ rw-data ]
call OemToCharA
mov edx esi
mov eax edi
call sub_40a922
mov ebx eax
pop edi
pop esi
pop ebx
retn
sub_40a922
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov eax edx
call sub_40aa6c
mov eax esp
mov ecx 0xc
mov edx ebx
call sub_406bd8
xor ebx ebx
call sub_40a9dc
xor [ esp + ebx ] al
mov al [ esp + ebx ]
and eax 0xff
call sub_40aa00
inc ebx
cmp ebx 0xc
jl r-xdata
mov edx [ rw-data ]
xor eax eax
mov al [ esp + 0xb ]
test [ edx + 0x14 ] 0x2
je r-xdata
mov ecx [ rw-data ]
shr ecx 0x18
movzx ecx cx
movzx ecx [ rw-data ]
sar ecx 0x8
jmp r-xdata
mov edx [ rw-data ]
cmp edx [ rw-data ]
jle r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax ax
cmp ecx eax
je r-xdata
mov ebx [ rw-data ]
mov ebx [ rw-data ]
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov edx ebx
add ebx 0xffffffff
test edx edx
jne r-xdata
mov esi [ rw-data ]
jmp r-xdata
call sub_40a9dc
xor [ esi ] al
mov al [ esi ]
and eax 0xff
call sub_40aa00
inc esi
xor eax eax
sub_40aa00
mov edx [ rw-data ]
push ebx
mov ecx edx
mov ebx [ rw-data ]
xor ecx eax
and ecx 0xff
shr edx 0x8
mov ecx [ ebx + ecx * 4 ]
xor ecx edx
mov [ rw-data ] ecx
and ecx 0xff
add [ rw-data ] ecx
imul edx [ rw-data ] 0x8088405
inc edx
mov [ rw-data ] edx
shr edx 0x18
mov ecx [ rw-data ]
xor edx ecx
mov ebx [ rw-data ]
and edx 0xff
shr ecx 0x8
mov edx [ ebx + edx * 4 ]
xor edx ecx
mov [ rw-data ] edx
pop ebx
retn
sub_40aa6c
push ebx
mov ebx eax
mov [ rw-data ] 0x12345678
mov [ rw-data ] 0x23456789
mov [ rw-data ] 0x34567890
jmp r-xdata
mov al [ ebx ]
test al al
jne r-xdata
and eax 0xff
call sub_40aa00
inc ebx
pop ebx
retn
sub_40aaa4
push ebx
mov eax [ rw-data ]
push esi
add esp 0xfffffff0
and [ eax + 0x14 ] 0xfe
mov esi esp
call sub_409630
xor edx edx
mov [ esi ] edx
call sub_40976c
mov ecx [ rw-data ]
inc [ rw-data ]
xor eax eax
mov al [ ecx ]
jmp r-xdata
dec [ rw-data ]
js r-xdata
call sub_4095e0
mov ecx [ rw-data ]
or [ ecx + 0x14 ] 0x1
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ esi ]
mov [ esp + edx + 0x4 ] al
inc [ esi ]
cmp [ esi ] 0xc
jl r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x51
call sub_4069c4
mov [ rw-data ] eax
test eax eax
jne r-xdata
lea eax [ esp + 0x4 ]
call sub_40a8b0
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ esi ] edx
push 0x51
push [ rw-data ]
push rw-data
mov edx esi
mov eax rw-data
mov ecx [ rw-data ]
call [ rw-data ]
mov ebx eax
cmp ebx 0x5
jne r-xdata
mov eax 0x5
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_4069d8
xor edx edx
mov [ rw-data ] edx
mov eax 0x51
call sub_4069c4
mov ebx eax
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ rw-data ]
call sub_4069d8
xor edx edx
mov eax 0x5
mov [ rw-data ] edx
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax 0x1
jmp r-xdata
mov ecx 0x50
mov edx [ rw-data ]
mov eax ebx
call sub_406cb0
mov [ rw-data ] 0x1
jmp r-xdata
mov eax 0x5
jmp r-xdata
lea eax [ esp + 0x4 ]
call sub_40a8b0
test eax eax
jne r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov [ edx ] 0x0
mov [ esi ] ecx
cmp ebx 0xfffffffe
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
mov [ rw-data ] 0x1
jmp r-xdata
sub_40ac48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
call sub_40ac40
xor ebx 0xffffffff
cmp edi 0x8
jb r-xdata
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
xor edx edx
sub edi 0x8
mov dl [ esi ]
inc esi
xor edx ebx
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
xor edx edx
mov dl [ esi ]
mov ebx ecx
xor edx ebx
inc esi
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
xor edx edx
mov dl [ esi ]
mov ebx ecx
xor edx ebx
inc esi
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
xor edx edx
mov dl [ esi ]
mov ebx ecx
xor edx ebx
inc esi
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
xor edx edx
mov dl [ esi ]
mov ebx ecx
xor edx ebx
inc esi
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
xor edx edx
mov dl [ esi ]
mov ebx ecx
xor edx ebx
inc esi
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
xor edx edx
mov dl [ esi ]
mov ebx ecx
xor edx ebx
inc esi
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
xor edx edx
mov dl [ esi ]
mov ebx ecx
xor edx ebx
inc esi
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
cmp edi 0x8
mov ebx ecx
jae r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
xor eax 0xffffffff
xor edx edx
mov dl [ esi ]
inc esi
xor edx ebx
and edx 0xff
shr ebx 0x8
mov ecx [ eax + edx * 4 ]
xor ecx ebx
dec edi
mov ebx ecx
jne r-xdata
sub_40ad58
push ebx
mov ebx eax
call sub_409478
mov [ rw-data ] ebx
xor eax eax
mov [ rw-data ] eax
xor edx edx
mov [ rw-data ] edx
mov [ rw-data ] 0x1
call sub_407e10
mov eax [ rw-data ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4069d8
xor edx edx
mov [ rw-data ] edx
sub_40ad9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov edx rw-data
mov eax [ esp ]
call sub_406aa8
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x8000
call sub_4069c4
mov esi eax
test esi esi
jne r-xdata
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_406b8c
mov eax ebx
call sub_406bb0
cmp eax 0x8000
jae r-xdata
mov eax ebx
call sub_406b08
jmp r-xdata
mov edx eax
sub edx 0x8000
xor ecx ecx
mov eax ebx
call sub_406b8c
xor ecx ecx
xor edx edx
mov eax ebx
call sub_406b8c
jmp r-xdata
mov eax esi
call sub_4069d8
xor eax eax
mov al [ esi + ebx ]
cmp eax 0x50
jne r-xdata
push ebx
mov ecx 0x8000
mov edx 0x1
mov eax esi
call sub_406b54
mov ebp eax
mov eax ebx
call sub_406b08
lea ebx [ ebp - 0x4 ]
test ebx ebx
jle r-xdata
dec ebx
test ebx ebx
jg r-xdata
xor edx edx
mov dl [ esi + ebx + 0x1 ]
cmp edx 0x4b
jne r-xdata
xor ecx ecx
mov cl [ esi + ebx + 0x2 ]
cmp ecx 0x5
jne r-xdata
xor eax eax
mov al [ esi + ebx + 0x3 ]
cmp eax 0x6
jne r-xdata
lea edx [ ebp - 0x16 ]
cmp ebx edx
jge r-xdata
movzx ecx [ esi + ebx + 0x14 ]
mov [ esp + 0x8 ] ecx
cmp [ esp + 0x8 ] 0x0
jle r-xdata
sub ebp ebx
add ebp 0xffffffea
mov [ esp + 0xc ] ebp
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jge r-xdata
lea edx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
jmp r-xdata
mov ecx [ edi ]
lea edx [ ebx + esi + 0x16 ]
mov eax [ esp + 0x4 ]
mov eax [ eax ]
call sub_406bd8
mov edx [ edi ]
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov [ eax + edx ] 0x0
jmp r-xdata
xor edx edx
mov [ edi ] edx
jmp r-xdata
mov eax [ edx ]
mov [ edi ] eax
mov eax [ edi ]
inc eax
call sub_4069c4
mov ebp eax
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
test ebp ebp
jne r-xdata
_start
call sub_4035bc
sub_401005
push eax
call ExitProcess
sub_40291a
mov eax rw-data
call sub_4066cc
mov eax rw-data
call sub_404968
retn
sub_40292f
mov eax rw-data
mov edx 0x2
call sub_404978
retn
sub_402940
retn
sub_4029fc
add esp 0xffffff9c
push 0x64
lea eax [ esp + 0x4 ]
push eax
push 0xf
push 0x400
call GetLocaleInfoA
xor eax eax
mov al [ esp ]
add esp 0x64
retn
sub_403a88
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x10 ]
mov eax [ eax + 0x10 ]
pop ebp
retn 0x4
sub_403a98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x10 ]
je r-xdata
mov edx 0x3
call sub_40395c
xor eax eax
mov eax [ eax + 0x10 ]
jmp r-xdata
pop ebp
retn 0x4
sub_403ab8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_403ac4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_403ad0
push ebp
mov ebp esp
mov eax 0x80004002
pop ebp
retn 0x8
sub_403adc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_403ae8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_403af4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_403b2c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_403b38
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_403b44
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_403b50
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_403bd8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_403be4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_403bf0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_403bfc
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_403c08
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_403c14
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_403c20
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_403c2c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_403c38
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_403c44
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_403c50
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_403c5c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_403c68
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_403c74
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_403c80
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_403c8c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0xc
sub_403c98
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov [ eax ] 0xffffffff
mov eax 0x80020006
pop ebp
retn 0x18
sub_403cb0
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_403cbc
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x8
sub_403cc8
push ebp
mov ebp esp
mov eax 0x80020003
pop ebp
retn 0x24
sub_403ddc
mov [ eax + 0x14 ] edx
retn
sub_404094
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call DestroyWindow
xor edx edx
mov [ ebx + 0x4 ] edx
sub_404288
push esi
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edx
push ecx
mov eax esi
xor edx edx
xor ecx ecx
call sub_403de0
sub_4047f4
add [ esp + 0x4 ] 0xfffffff4
jmp sub_403cc8
sub_4047fe
add [ esp + 0x4 ] 0xfffffff4
jmp sub_403c98
sub_404808
add [ esp + 0x4 ] 0xfffffff4
jmp sub_403cb0
sub_404812
add [ esp + 0x4 ] 0xfffffff4
jmp sub_403cbc
sub_40481c
add [ esp + 0x4 ] 0xfffffff4
jmp sub_403a98
sub_404826
add [ esp + 0x4 ] 0xfffffff4
jmp sub_403a88
sub_404830
add [ esp + 0x4 ] 0xfffffff4
jmp sub_4039ac
sub_40483a
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c8c
sub_404844
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c80
sub_40484e
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c74
sub_404858
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c68
sub_404862
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c5c
sub_40486c
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c50
sub_404876
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c44
sub_404880
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c38
sub_40488a
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c2c
sub_404894
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403c20
sub_40489e
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403b2c
sub_4048a8
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403b00
sub_4048b2
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403a98
sub_4048bc
add [ esp + 0x4 ] 0xfffffff8
jmp sub_403a88
sub_4048c6
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4039ac
sub_4048d0
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403c14
sub_4048da
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403c08
sub_4048e4
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403bfc
sub_4048ee
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403bf0
sub_4048f8
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403be4
sub_404902
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403bd8
sub_40490c
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403b5c
sub_404916
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403b50
sub_404920
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403b44
sub_40492a
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403b38
sub_404934
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403b2c
sub_40493e
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403b00
sub_404948
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403a98
sub_404952
add [ esp + 0x4 ] 0xfffffffc
jmp sub_403a88
sub_40495c
add [ esp + 0x4 ] 0xfffffffc
jmp sub_4039ac
sub_404968
xor edx edx
xor ecx ecx
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] 0x0
retn
sub_40499c
push ebx
mov ebx eax
mov eax ebx
call sub_4049b0
mov eax ebx
call sub_404c90
pop ebx
retn
sub_404e04
xor eax eax
retn
sub_4052f0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4034a4
pop ebp
retn 0x4
sub_405300
mov [ eax ] 0x0
mov [ eax + 0x400 ] 0x0
mov [ eax + 0xc00 ] 0x1
mov [ eax + 0xc04 ] 0xffffffff
retn
sub_405988
cmp eax 0x5c
je r-xdata
mov eax 0x1
cmp eax 0x2f
je r-xdata
xor eax eax
jmp r-xdata
retn
sub_40599c
cmp eax 0x3a
sete al
and eax 0x1
retn
sub_405b1c
xor edx edx
mov [ eax ] edx
retn
sub_405e5c
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
test al 0x10
jne r-xdata
retn
mov eax 0x1
sub_406258
mov ecx rw-data
cmp edx 0xffffffff
je r-xdata
retn
xor edx edx
inc edx
cmp edx 0x100
jl r-xdata
mov [ ecx + edx * 4 ] eax
retn
cmp [ ecx + edx * 4 ] 0x0
jne r-xdata
sub_4066cc
push ebx
mov ebx eax
mov eax ebx
call sub_4066dc
mov eax ebx
pop ebx
retn
sub_4066dc
xor edx edx
xor ecx ecx
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x9 ] 0x0
mov [ eax + 0xa ] 0x0
retn
sub_406730
push ebx
mov ebx eax
mov ecx edx
mov eax ebx
xor edx edx
call sub_40678c
mov edx 0x2
mov eax ebx
call sub_4067ec
pop ebx
retn
sub_40674c
xor eax eax
retn
sub_40681c
retn
sub_406820
mov eax rw-data
call sub_406900
retn
sub_406870
mov al 0x1
retn
sub_406874
xor edx edx
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
inc edx
mov eax edx
retn
sub_406888
mov cx [ edx ]
mov [ eax ] cx
add eax 0x2
mov cx [ edx ]
add edx 0x2
test cx cx
jne sub_406888
retn
sub_4068bc
jmp r-xdata
mov cx [ eax ]
test cx cx
jne r-xdata
movzx ecx cx
cmp edx ecx
je r-xdata
xor eax eax
retn
add eax 0x2
sub_406900
push ebx
mov ebx eax
mov eax ebx
call sub_406910
mov eax ebx
pop ebx
retn
sub_406954
xor ecx ecx
mov cl [ edx ]
cmp [ eax + ecx ] 0x0
je r-xdata
lea eax [ edx + 0x1 ]
lea eax [ edx + 0x2 ]
jmp r-xdata
retn
sub_406a90
push ebx
mov ebx eax
push 0x0
push ebx
call CreateDirectoryA
test eax eax
sete al
and eax 0x1
pop ebx
retn
sub_406c20
xor edx edx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
inc edx
mov eax edx
retn
sub_406c30
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
and ecx 0xff
cmp edx ecx
je r-xdata
xor eax eax
retn
inc eax
sub_406da8
push eax
call ExitProcess
sub_406dd0
cmp eax 0x30
jl r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x39
jle r-xdata
retn
mov eax 0x1
sub_406de4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_4069d8
pop ebp
retn
sub_406df4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_4069c4
pop ebp
retn
sub_406f88
mov eax [ rw-data ]
mov edx [ rw-data ]
or eax 0x20
and eax 0xff
mov [ edx + 0x10 ] eax
xor eax eax
retn
sub_4075e0
push ebx
mov ebx edx
push 0x80
mov edx rw-data
mov ecx ebx
mov eax 0x1
call sub_4052f0
mov eax ebx
pop ebx
retn
sub_408fa4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
mov eax [ rw-data ]
call sub_40945c
mov eax [ rw-data ]
call sub_40945c
xor edx edx
mov [ rw-data ] edx
mov [ rw-data ] edx
sub_4094dc
push rw-data
mov eax 0x74
call sub_402944
push eax
call sub_402efc
add esp 0x8
mov [ rw-data ] 0x2
mov eax 0x32
retn
sub_4098e0
push eax
call GetFileAttributesA
cmp eax 0xffffffff
jne r-xdata
xor eax eax
retn
or eax 0xffffffff
retn
sub_409ba0
xor edx edx
mov dl [ eax + 0x1 ]
shl edx 0x8
movzx eax [ eax ]
or dx ax
mov eax edx
retn
sub_40a9dc
mov eax [ rw-data ]
and eax 0xffff
or eax 0x2
mov edx eax
xor edx 0x1
imul edx eax
shr edx 0x8
and edx 0xff
mov eax edx
retn
sub_40ac40
mov eax rw-data
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegCreateKeyExA
jmp [ RegCreateKeyExA@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateDirectoryA
jmp [ CreateDirectoryA@IAT ]
CreateDirectoryW
jmp [ CreateDirectoryW@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
DeleteFileW
jmp [ DeleteFileW@IAT ]
DosDateTimeToFileTime
jmp [ DosDateTimeToFileTime@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
ExpandEnvironmentStringsA
jmp [ ExpandEnvironmentStringsA@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindFirstFileW
jmp [ FindFirstFileW@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindNextFileW
jmp [ FindNextFileW@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetCurrentDirectoryA
jmp [ GetCurrentDirectoryA@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFileAttributesW
jmp [ GetFileAttributesW@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetNumberFormatA
jmp [ GetNumberFormatA@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetTimeFormatA
jmp [ GetTimeFormatA@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
IsDBCSLeadByte
jmp [ IsDBCSLeadByte@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LocalFileTimeToFileTime
jmp [ LocalFileTimeToFileTime@IAT ]
MoveFileA
jmp [ MoveFileA@IAT ]
MoveFileExA
jmp [ MoveFileExA@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
OpenFile
jmp [ OpenFile@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
SetCurrentDirectoryA
jmp [ SetCurrentDirectoryA@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
SetFileAttributesA
jmp [ SetFileAttributesA@IAT ]
SetFileAttributesW
jmp [ SetFileAttributesW@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetFileTime
jmp [ SetFileTime@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
SetVolumeLabelA
jmp [ SetVolumeLabelA@IAT ]
Sleep
jmp [ Sleep@IAT ]
SystemTimeToFileTime
jmp [ SystemTimeToFileTime@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
_lclose
jmp [ _lclose@IAT ]
lstrcmpiA
jmp [ lstrcmpiA@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
InitCommonControls
jmp [ InitCommonControls@IAT ]
DeleteObject
jmp [ DeleteObject@IAT ]
SHBrowseForFolderA
jmp [ SHBrowseForFolderA@IAT ]
SHChangeNotify
jmp [ SHChangeNotify@IAT ]
SHFileOperationA
jmp [ SHFileOperationA@IAT ]
SHGetFileInfoA
jmp [ SHGetFileInfoA@IAT ]
SHGetMalloc
jmp [ SHGetMalloc@IAT ]
SHGetSpecialFolderLocation
jmp [ SHGetSpecialFolderLocation@IAT ]
ShellExecuteExA
jmp [ ShellExecuteExA@IAT ]
SHGetPathFromIDListA
jmp [ SHGetPathFromIDListA@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharToOemBuffA
jmp [ CharToOemBuffA@IAT ]
CharUpperA
jmp [ CharUpperA@IAT ]
CopyRect
jmp [ CopyRect@IAT ]
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
FindWindowExA
jmp [ FindWindowExA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetDlgItemTextA
jmp [ GetDlgItemTextA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowLongA
jmp [ GetWindowLongA@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowVisible
jmp [ IsWindowVisible@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapWindowPoints
jmp [ MapWindowPoints@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
OemToCharBuffA
jmp [ OemToCharBuffA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostMessageA
jmp [ PostMessageA@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
SendDlgItemMessageA
jmp [ SendDlgItemMessageA@IAT ]
SendMessageA
jmp [ SendMessageA@IAT ]
SetDlgItemTextA
jmp [ SetDlgItemTextA@IAT ]
SetFocus
jmp [ SetFocus@IAT ]
SetMenu
jmp [ SetMenu@IAT ]
SetWindowLongA
jmp [ SetWindowLongA@IAT ]
SetWindowPos
jmp [ SetWindowPos@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitForInputIdle
jmp [ WaitForInputIdle@IAT ]
wsprintfA
jmp [ wsprintfA@IAT ]
wvsprintfA
jmp [ wvsprintfA@IAT ]
CLSIDFromString
jmp [ CLSIDFromString@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
CreateStreamOnHGlobal
jmp [ CreateStreamOnHGlobal@IAT ]
OleInitialize
jmp [ OleInitialize@IAT ]
OleUninitialize
jmp [ OleUninitialize@IAT ]
